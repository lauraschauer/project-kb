{
    "advisory_record": {
        "cve_id": "CVE-2018-14574",
        "description": "django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.",
        "reserved_timestamp": 1532390400,
        "published_timestamp": 1533315600,
        "updated_timestamp": 1549277821,
        "repository_url": null,
        "references": {
            "": 22,
            "https://www.djangoproject.com/weblog/2018/aug/01/security-releases/": 6,
            "https://access.redhat.com/support/": 5,
            "https://access.redhat.com/errata/RHSA-2019:0265": 4,
            "commit::a656a681272f8f3734b6eb38e9a88aa0d91806f1": 4,
            "commit::c4e5ff7fdb5fce447675e90291fd33fddd052b3c": 4,
            "commit::d6eaee092709aad477a9894598496c6deec532ff": 4,
            "https://access.redhat.com/downloads/": 4,
            "https://access.redhat.com/errata/": 3,
            "https://access.redhat.com/labs/": 3,
            "https://usn.ubuntu.com/3726-1/": 2,
            "https://www.debian.org/security/2018/dsa-4264": 2,
            "http://www.securitytracker.com/id/1041403": 2,
            "http://www.securityfocus.com/bid/104970": 2,
            "commit::434d309ef6dbecbfd2b322d3a1da78aa5cb05fa8": 2,
            "commit::6fffc3c6d420e44f4029d5643f38d00a39b08525": 2,
            "https://src.fedoraproject.org/rpms/python2-django1.11": 2,
            "https://src.fedoraproject.org/rpms/python-django/branch/1.6": 2,
            "https://access.redhat.com/management/": 2,
            "https://access.redhat.com/": 2,
            "https://access.redhat.com/products/red-hat-enterprise-linux/": 2,
            "https://access.redhat.com/products/red-hat-openshift-container-platform": 2,
            "https://access.redhat.com/products/red-hat-ansible-automation-platform/": 2,
            "https://access.redhat.com/products/": 2,
            "https://access.redhat.com/documentation": 2,
            "https://access.redhat.com/product-life-cycles/": 2,
            "https://access.redhat.com/security": 2,
            "https://access.redhat.com/security/security-updates/#/security-advisories": 2,
            "https://access.redhat.com/security/security-updates/#/cve": 2,
            "https://access.redhat.com/support/contact/": 2,
            "https://status.redhat.com": 2,
            "https://access.redhat.com/downloads/content/package-browser": 1,
            "https://catalog.redhat.com/software/containers/explore/": 1,
            "https://access.redhat.com/articles/1202803": 1,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Solution": 1,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Article": 1,
            "https://access.redhat.com/documentation/en/red_hat_enterprise_linux": 1,
            "https://access.redhat.com/documentation/en/openshift_container_platform": 1,
            "https://access.redhat.com/documentation/en/red_hat_ansible_automation_platform": 1,
            "https://access.redhat.com/documentation/": 1,
            "https://access.redhat.com/security/": 1,
            "https://access.redhat.com/security/vulnerabilities": 1,
            "https://access.redhat.com/security/data": 1,
            "https://access.redhat.com/security/security-updates/#/security-labs": 1,
            "https://access.redhat.com/security/updates/backporting/": 1,
            "https://access.redhat.com/support/cases/": 1,
            "https://access.redhat.com/support/cases/#/troubleshoot": 1,
            "https://access.redhat.com/community": 1,
            "https://access.redhat.com/community/": 1,
            "https://access.redhat.com/discussions/": 1,
            "https://access.redhat.com/announcements/": 1,
            "https://access.redhat.com/accelerators/": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html": 1,
            "https://cloud.redhat.com/insights": 1,
            "https://access.redhat.com/changeLanguage?language=en": 1,
            "https://access.redhat.com/changeLanguage?language=fr": 1,
            "https://access.redhat.com/changeLanguage?language=ko": 1,
            "https://access.redhat.com/changeLanguage?language=ja": 1,
            "https://access.redhat.com/changeLanguage?language=zh_CN": 1,
            "https://access.redhat.com/products/red-hat-satellite/": 1,
            "https://access.redhat.com/products/red-hat-subscription-management/": 1,
            "https://access.redhat.com/products/red-hat-insights/": 1,
            "https://access.redhat.com/products/red-hat-openstack-platform/": 1,
            "https://access.redhat.com/products/red-hat-openshift-container-platform/": 1,
            "https://access.redhat.com/products/red-hat-openshift-ai/": 1,
            "https://access.redhat.com/products/openshift-dedicated-red-hat/": 1,
            "https://access.redhat.com/products/red-hat-advanced-cluster-security-for-kubernetes/": 1,
            "https://access.redhat.com/products/red-hat-advanced-cluster-management-for-kubernetes/": 1,
            "https://access.redhat.com/products/red-hat-quay/": 1,
            "https://access.redhat.com/products/red-hat-openshift-dev-spaces": 1,
            "https://access.redhat.com/products/red-hat-openshift-service-aws": 1,
            "https://access.redhat.com/products/red-hat-storage/": 1,
            "https://access.redhat.com/products/red-hat-hyperconverged-infrastructure/": 1,
            "https://access.redhat.com/products/red-hat-ceph-storage/": 1,
            "https://access.redhat.com/products/red-hat-openshift-data-foundation": 1,
            "https://access.redhat.com/products/red-hat-runtimes/": 1,
            "https://access.redhat.com/products/red-hat-jboss-enterprise-application-platform/": 1,
            "https://access.redhat.com/products/red-hat-data-grid/": 1,
            "https://access.redhat.com/products/red-hat-jboss-web-server/": 1,
            "https://access.redhat.com/products/red-hat-build-of-keycloak/": 1,
            "https://access.redhat.com/products/spring-boot/": 1,
            "https://access.redhat.com/products/nodejs/": 1,
            "https://access.redhat.com/products/quarkus/": 1,
            "https://access.redhat.com/products/red-hat-application-foundations/": 1,
            "https://access.redhat.com/products/red-hat-fuse/": 1,
            "https://access.redhat.com/products/red-hat-amq/": 1,
            "https://access.redhat.com/products/red-hat-3scale/": 1,
            "https://console.redhat.com/insights/patch/advisories/RHSA-2019:0265": 1,
            "https://access.redhat.com/articles/11258": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1549777": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1549779": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1609031": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1654338": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1655424": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1655433": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1658245": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1659678": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1660779": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-7536.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-7537.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-14574.html": 1,
            "https://access.redhat.com/security/updates/classification/#moderate": 1,
            "https://access.redhat.com/security/team/contact/": 1,
            "https://redhat.com/en": 1,
            "https://twitter.com/RedHat": 1,
            "https://access.redhat.com/management": 1,
            "https://access.redhat.com/support": 1,
            "https://access.redhat.com/support/customer-service": 1,
            "https://access.redhat.com/articles/33844": 1,
            "https://access.redhat.com/help/login_assistance": 1,
            "https://www.redhat.com/en/trust": 1,
            "https://www.redhat.com/en/about/browser-support": 1,
            "https://www.redhat.com/en/about/digital-accessibility": 1,
            "https://access.redhat.com/recognition/": 1,
            "https://access.redhat.com/help/colophon/": 1,
            "https://www.redhat.com/": 1,
            "http://developers.redhat.com/": 1,
            "https://connect.redhat.com/": 1,
            "https://cloud.redhat.com/": 1,
            "https://access.redhat.com/subscription-value": 1,
            "https://www.redhat.com/about/": 1,
            "http://jobs.redhat.com": 1,
            "https://redhat.com/en/about/company": 1,
            "https://redhat.com/en/jobs": 1,
            "https://redhat.com/en/events": 1,
            "https://redhat.com/en/about/office-locations": 1,
            "https://redhat.com/en/contact": 1,
            "https://redhat.com/en/blog": 1,
            "https://redhat.com/en/about/our-culture/diversity-equity-inclusion": 1,
            "https://coolstuff.redhat.com/": 1,
            "https://www.redhat.com/en/summit": 1,
            "https://redhat.com/en/about/privacy-policy": 1,
            "https://redhat.com/en/about/terms-use": 1,
            "https://redhat.com/en/about/all-policies-guidelines": 1,
            "https://redhat.com/en/about/digital-accessibility": 1
        },
        "affected_products": [
            "Django",
            "Open",
            "n/a",
            "CommonMiddleware",
            "Redirect"
        ],
        "versions": {
            "status": "affected",
            "version": "n/a"
        },
        "files": [
            "CommonMiddleware",
            "common"
        ],
        "keywords": [
            "have",
            "redirect",
            "commonmiddleware",
            "django",
            "open"
        ],
        "files_extension": [],
        "has_fixing_commit": true
    },
    "commits": [
        {
            "commit_id": "d6eaee092709aad477a9894598496c6deec532ff",
            "repository": "https://github.com/django/django",
            "timestamp": 1532463497,
            "hunks": 8,
            "message": "[1.11.x] Fixed CVE-2018-14574 -- Fixed open redirect possibility in CommonMiddleware.",
            "diff": [
                "diff --git a/django/middleware/common.py b/django/middleware/common.py",
                "index d18d23fa43..fff46ba552 100644",
                "--- a/django/middleware/common.py",
                "+++ b/django/middleware/common.py",
                "@@ -13,2 +13,3 @@ from django.utils.deprecation import MiddlewareMixin, RemovedInDjango21Warning",
                " from django.utils.encoding import force_text",
                "+from django.utils.http import escape_leading_slashes",
                " from django.utils.six.moves.urllib.parse import urlparse",
                "@@ -92,2 +93,4 @@ class CommonMiddleware(MiddlewareMixin):",
                "         new_path = request.get_full_path(force_append_slash=True)",
                "+        # Prevent construction of scheme relative urls.",
                "+        new_path = escape_leading_slashes(new_path)",
                "         if settings.DEBUG and request.method in ('POST', 'PUT', 'PATCH'):",
                "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py",
                "index 1de59a8763..25e9ae8276 100644",
                "--- a/django/urls/resolvers.py",
                "+++ b/django/urls/resolvers.py",
                "@@ -22,3 +22,5 @@ from django.utils.encoding import force_str, force_text",
                " from django.utils.functional import cached_property",
                "-from django.utils.http import RFC3986_SUBDELIMS, urlquote",
                "+from django.utils.http import (",
                "+    RFC3986_SUBDELIMS, escape_leading_slashes, urlquote,",
                "+)",
                " from django.utils.regex_helper import normalize",
                "@@ -467,5 +469,3 @@ class RegexURLResolver(LocaleRegexProvider):",
                "                     # Don't allow construction of scheme relative urls.",
                "-                    if url.startswith('//'):",
                "-                        url = '/%%2F%s' % url[2:]",
                "-                    return url",
                "+                    return escape_leading_slashes(url)",
                "         # lookup_view can be URL name or callable, but callables are not",
                "diff --git a/django/utils/http.py b/django/utils/http.py",
                "index 1fbc11b6fb..644d4d09fd 100644",
                "--- a/django/utils/http.py",
                "+++ b/django/utils/http.py",
                "@@ -468 +468,12 @@ def limited_parse_qsl(qs, keep_blank_values=False, encoding='utf-8',",
                "     return r",
                "+",
                "+",
                "+def escape_leading_slashes(url):",
                "+    \"\"\"",
                "+    If redirecting to an absolute path (two leading slashes), a slash must be",
                "+    escaped to prevent browsers from handling the path as schemaless and",
                "+    redirecting to another host.",
                "+    \"\"\"",
                "+    if url.startswith('//'):",
                "+        url = '/%2F{}'.format(url[2:])",
                "+    return url",
                "diff --git a/tests/middleware/tests.py b/tests/middleware/tests.py",
                "index 1d473ef558..d9d701f22a 100644",
                "--- a/tests/middleware/tests.py",
                "+++ b/tests/middleware/tests.py",
                "@@ -139,2 +139,21 @@ class CommonMiddlewareTest(SimpleTestCase):",
                "+    @override_settings(APPEND_SLASH=True)",
                "+    def test_append_slash_leading_slashes(self):",
                "+        \"\"\"",
                "+        Paths starting with two slashes are escaped to prevent open redirects.",
                "+        If there's a URL pattern that allows paths to start with two slashes, a",
                "+        request with path //evil.com must not redirect to //evil.com/ (appended",
                "+        slash) which is a schemaless absolute URL. The browser would navigate",
                "+        to evil.com/.",
                "+        \"\"\"",
                "+        # Use 4 slashes because of RequestFactory behavior.",
                "+        request = self.rf.get('////evil.com/security')",
                "+        response = HttpResponseNotFound()",
                "+        r = CommonMiddleware().process_request(request)",
                "+        self.assertEqual(r.status_code, 301)",
                "+        self.assertEqual(r.url, '/%2Fevil.com/security/')",
                "+        r = CommonMiddleware().process_response(request, response)",
                "+        self.assertEqual(r.status_code, 301)",
                "+        self.assertEqual(r.url, '/%2Fevil.com/security/')",
                "+",
                "     @override_settings(APPEND_SLASH=False, PREPEND_WWW=True)",
                "diff --git a/tests/middleware/urls.py b/tests/middleware/urls.py",
                "index 8c6621d059..d623e7d6af 100644",
                "--- a/tests/middleware/urls.py",
                "+++ b/tests/middleware/urls.py",
                "@@ -8,2 +8,4 @@ urlpatterns = [",
                "     url(r'^needsquoting#/$', views.empty_view),",
                "+    # Accepts paths with two leading slashes.",
                "+    url(r'^(.+)/security/$', views.empty_view),",
                " ]",
                "diff --git a/tests/utils_tests/test_http.py b/tests/utils_tests/test_http.py",
                "index b435e33e44..d339e8a79c 100644",
                "--- a/tests/utils_tests/test_http.py",
                "+++ b/tests/utils_tests/test_http.py",
                "@@ -250 +250,11 @@ class HttpDateProcessingTests(unittest.TestCase):",
                "         self.assertEqual(datetime.utcfromtimestamp(parsed), datetime(1994, 11, 6, 8, 49, 37))",
                "+",
                "+",
                "+class EscapeLeadingSlashesTests(unittest.TestCase):",
                "+    def test(self):",
                "+        tests = (",
                "+            ('//example.com', '/%2Fexample.com'),",
                "+            ('//', '/%2F'),",
                "+        )",
                "+        for url, expected in tests:",
                "+            self.assertEqual(http.escape_leading_slashes(url), expected)"
            ],
            "changed_files": [
                "django/middleware/common.py",
                "django/urls/resolvers.py",
                "django/utils/http.py",
                "tests/middleware/tests.py",
                "tests/middleware/urls.py",
                "tests/utils_tests/test_http.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [
                "CVE-2018-14574"
            ],
            "twins": [],
            "tags": [
                "1.11.15",
                "1.11.16",
                "1.11.17",
                "1.11.18",
                "1.11.19",
                "1.11.20",
                "1.11.21",
                "1.11.22",
                "1.11.23",
                "1.11.24",
                "1.11.25",
                "1.11.26",
                "1.11.27",
                "1.11.28",
                "1.11.29"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 4 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "VULN_ID_IN_MESSAGE",
                    "message": "The commit message mentions the vulnerability ID",
                    "relevance": 64
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: CommonMiddleware",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: django/middleware/common.py",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: redirect, commonmiddleware, open",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "a656a681272f8f3734b6eb38e9a88aa0d91806f1",
            "repository": "https://github.com/django/django",
            "timestamp": 1532463497,
            "hunks": 9,
            "message": "Fixed CVE-2018-14574 -- Fixed open redirect possibility in CommonMiddleware.",
            "diff": [
                "diff --git a/django/middleware/common.py b/django/middleware/common.py",
                "index bea3f7448a..a18fbe7b47 100644",
                "--- a/django/middleware/common.py",
                "+++ b/django/middleware/common.py",
                "@@ -9,2 +9,3 @@ from django.urls import is_valid_path",
                " from django.utils.deprecation import MiddlewareMixin",
                "+from django.utils.http import escape_leading_slashes",
                "@@ -81,2 +82,4 @@ class CommonMiddleware(MiddlewareMixin):",
                "         new_path = request.get_full_path(force_append_slash=True)",
                "+        # Prevent construction of scheme relative urls.",
                "+        new_path = escape_leading_slashes(new_path)",
                "         if settings.DEBUG and request.method in ('POST', 'PUT', 'PATCH'):",
                "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py",
                "index ce8c7ffa32..5bfab0c067 100644",
                "--- a/django/urls/resolvers.py",
                "+++ b/django/urls/resolvers.py",
                "@@ -19,3 +19,3 @@ from django.utils.datastructures import MultiValueDict",
                " from django.utils.functional import cached_property",
                "-from django.utils.http import RFC3986_SUBDELIMS",
                "+from django.utils.http import RFC3986_SUBDELIMS, escape_leading_slashes",
                " from django.utils.regex_helper import normalize",
                "@@ -594,5 +594,3 @@ class URLResolver:",
                "                     # Don't allow construction of scheme relative urls.",
                "-                    if url.startswith('//'):",
                "-                        url = '/%%2F%s' % url[2:]",
                "-                    return url",
                "+                    return escape_leading_slashes(url)",
                "         # lookup_view can be URL name or callable, but callables are not",
                "diff --git a/django/utils/http.py b/django/utils/http.py",
                "index caaab4f9e5..5a063a9956 100644",
                "--- a/django/utils/http.py",
                "+++ b/django/utils/http.py",
                "@@ -437 +437,12 @@ def limited_parse_qsl(qs, keep_blank_values=False, encoding='utf-8',",
                "     return r",
                "+",
                "+",
                "+def escape_leading_slashes(url):",
                "+    \"\"\"",
                "+    If redirecting to an absolute path (two leading slashes), a slash must be",
                "+    escaped to prevent browsers from handling the path as schemaless and",
                "+    redirecting to another host.",
                "+    \"\"\"",
                "+    if url.startswith('//'):",
                "+        url = '/%2F{}'.format(url[2:])",
                "+    return url",
                "diff --git a/tests/middleware/tests.py b/tests/middleware/tests.py",
                "index f3c8b9ca06..88e33348e6 100644",
                "--- a/tests/middleware/tests.py",
                "+++ b/tests/middleware/tests.py",
                "@@ -132,2 +132,21 @@ class CommonMiddlewareTest(SimpleTestCase):",
                "+    @override_settings(APPEND_SLASH=True)",
                "+    def test_append_slash_leading_slashes(self):",
                "+        \"\"\"",
                "+        Paths starting with two slashes are escaped to prevent open redirects.",
                "+        If there's a URL pattern that allows paths to start with two slashes, a",
                "+        request with path //evil.com must not redirect to //evil.com/ (appended",
                "+        slash) which is a schemaless absolute URL. The browser would navigate",
                "+        to evil.com/.",
                "+        \"\"\"",
                "+        # Use 4 slashes because of RequestFactory behavior.",
                "+        request = self.rf.get('////evil.com/security')",
                "+        response = HttpResponseNotFound()",
                "+        r = CommonMiddleware().process_request(request)",
                "+        self.assertEqual(r.status_code, 301)",
                "+        self.assertEqual(r.url, '/%2Fevil.com/security/')",
                "+        r = CommonMiddleware().process_response(request, response)",
                "+        self.assertEqual(r.status_code, 301)",
                "+        self.assertEqual(r.url, '/%2Fevil.com/security/')",
                "+",
                "     @override_settings(APPEND_SLASH=False, PREPEND_WWW=True)",
                "diff --git a/tests/middleware/urls.py b/tests/middleware/urls.py",
                "index 8c6621d059..d623e7d6af 100644",
                "--- a/tests/middleware/urls.py",
                "+++ b/tests/middleware/urls.py",
                "@@ -8,2 +8,4 @@ urlpatterns = [",
                "     url(r'^needsquoting#/$', views.empty_view),",
                "+    # Accepts paths with two leading slashes.",
                "+    url(r'^(.+)/security/$', views.empty_view),",
                " ]",
                "diff --git a/tests/utils_tests/test_http.py b/tests/utils_tests/test_http.py",
                "index 05b43c814f..1cbb0d96bf 100644",
                "--- a/tests/utils_tests/test_http.py",
                "+++ b/tests/utils_tests/test_http.py",
                "@@ -7,6 +7,6 @@ from django.utils.deprecation import RemovedInDjango30Warning",
                " from django.utils.http import (",
                "-    base36_to_int, cookie_date, http_date, int_to_base36, is_safe_url,",
                "-    is_same_domain, parse_etags, parse_http_date, quote_etag, urlencode,",
                "-    urlquote, urlquote_plus, urlsafe_base64_decode, urlsafe_base64_encode,",
                "-    urlunquote, urlunquote_plus,",
                "+    base36_to_int, cookie_date, escape_leading_slashes, http_date,",
                "+    int_to_base36, is_safe_url, is_same_domain, parse_etags, parse_http_date,",
                "+    quote_etag, urlencode, urlquote, urlquote_plus, urlsafe_base64_decode,",
                "+    urlsafe_base64_encode, urlunquote, urlunquote_plus,",
                " )",
                "@@ -277 +277,12 @@ class HttpDateProcessingTests(unittest.TestCase):",
                "         self.assertEqual(datetime.utcfromtimestamp(parsed), datetime(1994, 11, 6, 8, 49, 37))",
                "+",
                "+",
                "+class EscapeLeadingSlashesTests(unittest.TestCase):",
                "+    def test(self):",
                "+        tests = (",
                "+            ('//example.com', '/%2Fexample.com'),",
                "+            ('//', '/%2F'),",
                "+        )",
                "+        for url, expected in tests:",
                "+            with self.subTest(url=url):",
                "+                self.assertEqual(escape_leading_slashes(url), expected)"
            ],
            "changed_files": [
                "django/middleware/common.py",
                "django/urls/resolvers.py",
                "django/utils/http.py",
                "tests/middleware/tests.py",
                "tests/middleware/urls.py",
                "tests/utils_tests/test_http.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [
                "CVE-2018-14574"
            ],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 4 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "VULN_ID_IN_MESSAGE",
                    "message": "The commit message mentions the vulnerability ID",
                    "relevance": 64
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: CommonMiddleware",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: django/middleware/common.py",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: redirect, commonmiddleware, open",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "6fffc3c6d420e44f4029d5643f38d00a39b08525",
            "repository": "https://github.com/django/django",
            "timestamp": 1532463497,
            "hunks": 9,
            "message": "[2.0.x] Fixed CVE-2018-14574 -- Fixed open redirect possibility in CommonMiddleware.",
            "diff": [
                "diff --git a/django/middleware/common.py b/django/middleware/common.py",
                "index d8cfb9a8b0..ea5e536655 100644",
                "--- a/django/middleware/common.py",
                "+++ b/django/middleware/common.py",
                "@@ -13,2 +13,3 @@ from django.utils.cache import (",
                " from django.utils.deprecation import MiddlewareMixin, RemovedInDjango21Warning",
                "+from django.utils.http import escape_leading_slashes",
                "@@ -90,2 +91,4 @@ class CommonMiddleware(MiddlewareMixin):",
                "         new_path = request.get_full_path(force_append_slash=True)",
                "+        # Prevent construction of scheme relative urls.",
                "+        new_path = escape_leading_slashes(new_path)",
                "         if settings.DEBUG and request.method in ('POST', 'PUT', 'PATCH'):",
                "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py",
                "index c5b0811136..f89fc5aba0 100644",
                "--- a/django/urls/resolvers.py",
                "+++ b/django/urls/resolvers.py",
                "@@ -19,3 +19,3 @@ from django.utils.datastructures import MultiValueDict",
                " from django.utils.functional import cached_property",
                "-from django.utils.http import RFC3986_SUBDELIMS",
                "+from django.utils.http import RFC3986_SUBDELIMS, escape_leading_slashes",
                " from django.utils.regex_helper import normalize",
                "@@ -606,5 +606,3 @@ class URLResolver:",
                "                     # Don't allow construction of scheme relative urls.",
                "-                    if url.startswith('//'):",
                "-                        url = '/%%2F%s' % url[2:]",
                "-                    return url",
                "+                    return escape_leading_slashes(url)",
                "         # lookup_view can be URL name or callable, but callables are not",
                "diff --git a/django/utils/http.py b/django/utils/http.py",
                "index 5e900506ff..fb51ca8bd0 100644",
                "--- a/django/utils/http.py",
                "+++ b/django/utils/http.py",
                "@@ -439 +439,12 @@ def limited_parse_qsl(qs, keep_blank_values=False, encoding='utf-8',",
                "     return r",
                "+",
                "+",
                "+def escape_leading_slashes(url):",
                "+    \"\"\"",
                "+    If redirecting to an absolute path (two leading slashes), a slash must be",
                "+    escaped to prevent browsers from handling the path as schemaless and",
                "+    redirecting to another host.",
                "+    \"\"\"",
                "+    if url.startswith('//'):",
                "+        url = '/%2F{}'.format(url[2:])",
                "+    return url",
                "diff --git a/tests/middleware/tests.py b/tests/middleware/tests.py",
                "index 8006938a5e..fcf3da2838 100644",
                "--- a/tests/middleware/tests.py",
                "+++ b/tests/middleware/tests.py",
                "@@ -135,2 +135,21 @@ class CommonMiddlewareTest(SimpleTestCase):",
                "+    @override_settings(APPEND_SLASH=True)",
                "+    def test_append_slash_leading_slashes(self):",
                "+        \"\"\"",
                "+        Paths starting with two slashes are escaped to prevent open redirects.",
                "+        If there's a URL pattern that allows paths to start with two slashes, a",
                "+        request with path //evil.com must not redirect to //evil.com/ (appended",
                "+        slash) which is a schemaless absolute URL. The browser would navigate",
                "+        to evil.com/.",
                "+        \"\"\"",
                "+        # Use 4 slashes because of RequestFactory behavior.",
                "+        request = self.rf.get('////evil.com/security')",
                "+        response = HttpResponseNotFound()",
                "+        r = CommonMiddleware().process_request(request)",
                "+        self.assertEqual(r.status_code, 301)",
                "+        self.assertEqual(r.url, '/%2Fevil.com/security/')",
                "+        r = CommonMiddleware().process_response(request, response)",
                "+        self.assertEqual(r.status_code, 301)",
                "+        self.assertEqual(r.url, '/%2Fevil.com/security/')",
                "+",
                "     @override_settings(APPEND_SLASH=False, PREPEND_WWW=True)",
                "diff --git a/tests/middleware/urls.py b/tests/middleware/urls.py",
                "index 8c6621d059..d623e7d6af 100644",
                "--- a/tests/middleware/urls.py",
                "+++ b/tests/middleware/urls.py",
                "@@ -8,2 +8,4 @@ urlpatterns = [",
                "     url(r'^needsquoting#/$', views.empty_view),",
                "+    # Accepts paths with two leading slashes.",
                "+    url(r'^(.+)/security/$', views.empty_view),",
                " ]",
                "diff --git a/tests/utils_tests/test_http.py b/tests/utils_tests/test_http.py",
                "index 9b32520057..c95133d0ff 100644",
                "--- a/tests/utils_tests/test_http.py",
                "+++ b/tests/utils_tests/test_http.py",
                "@@ -8,6 +8,6 @@ from django.utils.deprecation import RemovedInDjango21Warning",
                " from django.utils.http import (",
                "-    base36_to_int, cookie_date, http_date, int_to_base36, is_safe_url,",
                "-    is_same_domain, parse_etags, parse_http_date, quote_etag, urlencode,",
                "-    urlquote, urlquote_plus, urlsafe_base64_decode, urlsafe_base64_encode,",
                "-    urlunquote, urlunquote_plus,",
                "+    base36_to_int, cookie_date, escape_leading_slashes, http_date,",
                "+    int_to_base36, is_safe_url, is_same_domain, parse_etags, parse_http_date,",
                "+    quote_etag, urlencode, urlquote, urlquote_plus, urlsafe_base64_decode,",
                "+    urlsafe_base64_encode, urlunquote, urlunquote_plus,",
                " )",
                "@@ -277 +277,12 @@ class HttpDateProcessingTests(unittest.TestCase):",
                "         self.assertEqual(datetime.utcfromtimestamp(parsed), datetime(1994, 11, 6, 8, 49, 37))",
                "+",
                "+",
                "+class EscapeLeadingSlashesTests(unittest.TestCase):",
                "+    def test(self):",
                "+        tests = (",
                "+            ('//example.com', '/%2Fexample.com'),",
                "+            ('//', '/%2F'),",
                "+        )",
                "+        for url, expected in tests:",
                "+            with self.subTest(url=url):",
                "+                self.assertEqual(escape_leading_slashes(url), expected)"
            ],
            "changed_files": [
                "django/middleware/common.py",
                "django/urls/resolvers.py",
                "django/utils/http.py",
                "tests/middleware/tests.py",
                "tests/middleware/urls.py",
                "tests/utils_tests/test_http.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [
                "CVE-2018-14574"
            ],
            "twins": [],
            "tags": [
                "2.0.10",
                "2.0.11",
                "2.0.12",
                "2.0.13",
                "2.0.8",
                "2.0.9"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 2 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "VULN_ID_IN_MESSAGE",
                    "message": "The commit message mentions the vulnerability ID",
                    "relevance": 64
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: CommonMiddleware",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: django/middleware/common.py",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: redirect, commonmiddleware, open",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "c4e5ff7fdb5fce447675e90291fd33fddd052b3c",
            "repository": "https://github.com/django/django",
            "timestamp": 1532463497,
            "hunks": 9,
            "message": "[2.1.x] Fixed CVE-2018-14574 -- Fixed open redirect possibility in CommonMiddleware.",
            "diff": [
                "diff --git a/django/middleware/common.py b/django/middleware/common.py",
                "index bea3f7448a..a18fbe7b47 100644",
                "--- a/django/middleware/common.py",
                "+++ b/django/middleware/common.py",
                "@@ -9,2 +9,3 @@ from django.urls import is_valid_path",
                " from django.utils.deprecation import MiddlewareMixin",
                "+from django.utils.http import escape_leading_slashes",
                "@@ -81,2 +82,4 @@ class CommonMiddleware(MiddlewareMixin):",
                "         new_path = request.get_full_path(force_append_slash=True)",
                "+        # Prevent construction of scheme relative urls.",
                "+        new_path = escape_leading_slashes(new_path)",
                "         if settings.DEBUG and request.method in ('POST', 'PUT', 'PATCH'):",
                "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py",
                "index ce8c7ffa32..5bfab0c067 100644",
                "--- a/django/urls/resolvers.py",
                "+++ b/django/urls/resolvers.py",
                "@@ -19,3 +19,3 @@ from django.utils.datastructures import MultiValueDict",
                " from django.utils.functional import cached_property",
                "-from django.utils.http import RFC3986_SUBDELIMS",
                "+from django.utils.http import RFC3986_SUBDELIMS, escape_leading_slashes",
                " from django.utils.regex_helper import normalize",
                "@@ -594,5 +594,3 @@ class URLResolver:",
                "                     # Don't allow construction of scheme relative urls.",
                "-                    if url.startswith('//'):",
                "-                        url = '/%%2F%s' % url[2:]",
                "-                    return url",
                "+                    return escape_leading_slashes(url)",
                "         # lookup_view can be URL name or callable, but callables are not",
                "diff --git a/django/utils/http.py b/django/utils/http.py",
                "index 4558c6874a..e33ec7362b 100644",
                "--- a/django/utils/http.py",
                "+++ b/django/utils/http.py",
                "@@ -435 +435,12 @@ def limited_parse_qsl(qs, keep_blank_values=False, encoding='utf-8',",
                "     return r",
                "+",
                "+",
                "+def escape_leading_slashes(url):",
                "+    \"\"\"",
                "+    If redirecting to an absolute path (two leading slashes), a slash must be",
                "+    escaped to prevent browsers from handling the path as schemaless and",
                "+    redirecting to another host.",
                "+    \"\"\"",
                "+    if url.startswith('//'):",
                "+        url = '/%2F{}'.format(url[2:])",
                "+    return url",
                "diff --git a/tests/middleware/tests.py b/tests/middleware/tests.py",
                "index f3c8b9ca06..88e33348e6 100644",
                "--- a/tests/middleware/tests.py",
                "+++ b/tests/middleware/tests.py",
                "@@ -132,2 +132,21 @@ class CommonMiddlewareTest(SimpleTestCase):",
                "+    @override_settings(APPEND_SLASH=True)",
                "+    def test_append_slash_leading_slashes(self):",
                "+        \"\"\"",
                "+        Paths starting with two slashes are escaped to prevent open redirects.",
                "+        If there's a URL pattern that allows paths to start with two slashes, a",
                "+        request with path //evil.com must not redirect to //evil.com/ (appended",
                "+        slash) which is a schemaless absolute URL. The browser would navigate",
                "+        to evil.com/.",
                "+        \"\"\"",
                "+        # Use 4 slashes because of RequestFactory behavior.",
                "+        request = self.rf.get('////evil.com/security')",
                "+        response = HttpResponseNotFound()",
                "+        r = CommonMiddleware().process_request(request)",
                "+        self.assertEqual(r.status_code, 301)",
                "+        self.assertEqual(r.url, '/%2Fevil.com/security/')",
                "+        r = CommonMiddleware().process_response(request, response)",
                "+        self.assertEqual(r.status_code, 301)",
                "+        self.assertEqual(r.url, '/%2Fevil.com/security/')",
                "+",
                "     @override_settings(APPEND_SLASH=False, PREPEND_WWW=True)",
                "diff --git a/tests/middleware/urls.py b/tests/middleware/urls.py",
                "index 8c6621d059..d623e7d6af 100644",
                "--- a/tests/middleware/urls.py",
                "+++ b/tests/middleware/urls.py",
                "@@ -8,2 +8,4 @@ urlpatterns = [",
                "     url(r'^needsquoting#/$', views.empty_view),",
                "+    # Accepts paths with two leading slashes.",
                "+    url(r'^(.+)/security/$', views.empty_view),",
                " ]",
                "diff --git a/tests/utils_tests/test_http.py b/tests/utils_tests/test_http.py",
                "index 86fcff9d8e..d2a68ccd69 100644",
                "--- a/tests/utils_tests/test_http.py",
                "+++ b/tests/utils_tests/test_http.py",
                "@@ -7,6 +7,6 @@ from django.utils.deprecation import RemovedInDjango30Warning",
                " from django.utils.http import (",
                "-    base36_to_int, cookie_date, http_date, int_to_base36, is_safe_url,",
                "-    is_same_domain, parse_etags, parse_http_date, quote_etag, urlencode,",
                "-    urlquote, urlquote_plus, urlsafe_base64_decode, urlsafe_base64_encode,",
                "-    urlunquote, urlunquote_plus,",
                "+    base36_to_int, cookie_date, escape_leading_slashes, http_date,",
                "+    int_to_base36, is_safe_url, is_same_domain, parse_etags, parse_http_date,",
                "+    quote_etag, urlencode, urlquote, urlquote_plus, urlsafe_base64_decode,",
                "+    urlsafe_base64_encode, urlunquote, urlunquote_plus,",
                " )",
                "@@ -273 +273,12 @@ class HttpDateProcessingTests(unittest.TestCase):",
                "         self.assertEqual(datetime.utcfromtimestamp(parsed), datetime(1994, 11, 6, 8, 49, 37))",
                "+",
                "+",
                "+class EscapeLeadingSlashesTests(unittest.TestCase):",
                "+    def test(self):",
                "+        tests = (",
                "+            ('//example.com', '/%2Fexample.com'),",
                "+            ('//', '/%2F'),",
                "+        )",
                "+        for url, expected in tests:",
                "+            with self.subTest(url=url):",
                "+                self.assertEqual(escape_leading_slashes(url), expected)"
            ],
            "changed_files": [
                "django/middleware/common.py",
                "django/urls/resolvers.py",
                "django/utils/http.py",
                "tests/middleware/tests.py",
                "tests/middleware/urls.py",
                "tests/utils_tests/test_http.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [
                "CVE-2018-14574"
            ],
            "twins": [],
            "tags": [
                "2.1",
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 4 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "VULN_ID_IN_MESSAGE",
                    "message": "The commit message mentions the vulnerability ID",
                    "relevance": 64
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: CommonMiddleware",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: django/middleware/common.py",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: redirect, commonmiddleware, open",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "64e1a271f50d921a54388539b6ff7102a31c3d29",
            "repository": "https://github.com/django/django",
            "timestamp": 1533829435,
            "hunks": 15,
            "message": "Fixed #29637 -- Fixed admin change form crash if the user doesn\u00e2\u0080\u0099t have the add permission to a TabularInline. Regression in 825f0beda804e48e9197fcf3b0d909f9f548aa47.",
            "diff": [
                "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py",
                "index 0f4dd93cb3..62dc32e788 100644",
                "--- a/django/contrib/admin/options.py",
                "+++ b/django/contrib/admin/options.py",
                "@@ -2057,8 +2057,2 @@ class InlineModelAdmin(BaseModelAdmin):",
                "         class DeleteProtectedModelForm(base_model_form):",
                "-            def __init__(self, *args, **kwargs):",
                "-                super(DeleteProtectedModelForm, self).__init__(*args, **kwargs)",
                "-                if not can_change and not self.instance._state.adding:",
                "-                    self.fields = {}",
                "-                if not can_add and self.instance._state.adding:",
                "-                    self.fields = {}",
                "@@ -2099,2 +2093,10 @@ class InlineModelAdmin(BaseModelAdmin):",
                "+            def has_changed(self):",
                "+                # Protect against unauthorized edits.",
                "+                if not can_change and not self.instance._state.adding:",
                "+                    return False",
                "+                if not can_add and self.instance._state.adding:",
                "+                    return False",
                "+                return super().has_changed()",
                "+",
                "         defaults['form'] = DeleteProtectedModelForm",
                "diff --git a/tests/admin_inlines/admin.py b/tests/admin_inlines/admin.py",
                "index 7ac13ed3a4..b5f343a55b 100644",
                "--- a/tests/admin_inlines/admin.py",
                "+++ b/tests/admin_inlines/admin.py",
                "@@ -76,2 +76,6 @@ class InnerInline2(admin.StackedInline):",
                "+class InnerInline2Tabular(admin.TabularInline):",
                "+    model = Inner2",
                "+",
                "+",
                " class CustomNumberWidget(forms.NumberInput):",
                "@@ -238,3 +242,3 @@ site.register(Holder, HolderAdmin, inlines=[InnerInline])",
                " # ModelAdmin and Inline media",
                "-site.register(Holder2, HolderAdmin, inlines=[InnerInline2])",
                "+site.register(Holder2, HolderAdmin, inlines=[InnerInline2, InnerInline2Tabular])",
                " # only Inline media",
                "diff --git a/tests/admin_inlines/tests.py b/tests/admin_inlines/tests.py",
                "index 4ce744f4ef..749b3dd75f 100644",
                "--- a/tests/admin_inlines/tests.py",
                "+++ b/tests/admin_inlines/tests.py",
                "@@ -590,5 +590,4 @@ class TestInlinePermissions(TestCase):",
                "         holder = Holder2.objects.create(dummy=13)",
                "-        inner2 = Inner2.objects.create(dummy=42, holder=holder)",
                "+        self.inner2 = Inner2.objects.create(dummy=42, holder=holder)",
                "         self.holder_change_url = reverse('admin:admin_inlines_holder2_change', args=(holder.id,))",
                "-        self.inner2_id = inner2.id",
                "@@ -686,3 +685,3 @@ class TestInlinePermissions(TestCase):",
                "             response,",
                "-            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2_id,",
                "+            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2.id,",
                "             html=True",
                "@@ -695,3 +694,3 @@ class TestInlinePermissions(TestCase):",
                "         # Change permission on inner2s, so we can change existing but not add new",
                "-        self.assertContains(response, '<h2>Inner2s</h2>')",
                "+        self.assertContains(response, '<h2>Inner2s</h2>', count=2)",
                "         # Just the one form for existing instances",
                "@@ -703,3 +702,3 @@ class TestInlinePermissions(TestCase):",
                "             response,",
                "-            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2_id,",
                "+            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2.id,",
                "             html=True",
                "@@ -712,2 +711,10 @@ class TestInlinePermissions(TestCase):",
                "         )",
                "+        # TabularInline",
                "+        self.assertContains(response, '<th class=\"required\">Dummy</th>', html=True)",
                "+        self.assertContains(",
                "+            response,",
                "+            '<input type=\"number\" name=\"inner2_set-2-0-dummy\" value=\"%s\" '",
                "+            'class=\"vIntegerField\" id=\"id_inner2_set-2-0-dummy\">' % self.inner2.dummy,",
                "+            html=True,",
                "+        )",
                "@@ -728,3 +735,3 @@ class TestInlinePermissions(TestCase):",
                "             response,",
                "-            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2_id,",
                "+            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2.id,",
                "             html=True",
                "@@ -748,3 +755,3 @@ class TestInlinePermissions(TestCase):",
                "             response,",
                "-            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2_id,",
                "+            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2.id,",
                "             html=True",
                "@@ -762,3 +769,3 @@ class TestInlinePermissions(TestCase):",
                "         # All perms on inner2s, so we can add/change/delete",
                "-        self.assertContains(response, '<h2>Inner2s</h2>')",
                "+        self.assertContains(response, '<h2>Inner2s</h2>', count=2)",
                "         # One form for existing instance only, three for new",
                "@@ -771,3 +778,3 @@ class TestInlinePermissions(TestCase):",
                "             response,",
                "-            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2_id,",
                "+            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2.id,",
                "             html=True",
                "@@ -775,2 +782,10 @@ class TestInlinePermissions(TestCase):",
                "         self.assertContains(response, 'id=\"id_inner2_set-0-DELETE\"')",
                "+        # TabularInline",
                "+        self.assertContains(response, '<th class=\"required\">Dummy</th>', html=True)",
                "+        self.assertContains(",
                "+            response,",
                "+            '<input type=\"number\" name=\"inner2_set-2-0-dummy\" value=\"%s\" '",
                "+            'class=\"vIntegerField\" id=\"id_inner2_set-2-0-dummy\">' % self.inner2.dummy,",
                "+            html=True,",
                "+        )"
            ],
            "changed_files": [
                "django/contrib/admin/options.py",
                "tests/admin_inlines/admin.py",
                "tests/admin_inlines/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29637": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: have",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29637",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8b43e9b1af37ab222cbe2964ae13a9203afb9c92",
            "repository": "https://github.com/django/django",
            "timestamp": 1533421007,
            "hunks": 12,
            "message": "Fixed #29616 -- Fixed createsuperuser for user models that don't have a password field.",
            "diff": [
                "diff --git a/django/contrib/auth/management/commands/createsuperuser.py b/django/contrib/auth/management/commands/createsuperuser.py",
                "index 3a76bce90a..d700ce4c0e 100644",
                "--- a/django/contrib/auth/management/commands/createsuperuser.py",
                "+++ b/django/contrib/auth/management/commands/createsuperuser.py",
                "@@ -19,2 +19,5 @@ class NotRunningInTTYException(Exception):",
                "+PASSWORD_FIELD = 'password'",
                "+",
                "+",
                " class Command(BaseCommand):",
                "@@ -62,7 +65,11 @@ class Command(BaseCommand):",
                "         database = options['database']",
                "-",
                "-        # If not provided, create the user with an unusable password",
                "-        password = None",
                "         user_data = {}",
                "         verbose_field_name = self.username_field.verbose_name",
                "+        try:",
                "+            self.UserModel._meta.get_field(PASSWORD_FIELD)",
                "+        except exceptions.FieldDoesNotExist:",
                "+            pass",
                "+        else:",
                "+            # If not provided, create the user with an unusable password.",
                "+            user_data[PASSWORD_FIELD] = None",
                "         try:",
                "@@ -111,4 +118,4 @@ class Command(BaseCommand):",
                "-                # Prompt for a password.",
                "-                while password is None:",
                "+                # Prompt for a password if the model has one.",
                "+                while PASSWORD_FIELD in user_data and user_data[PASSWORD_FIELD] is None:",
                "                     password = getpass.getpass()",
                "@@ -117,3 +124,2 @@ class Command(BaseCommand):",
                "                         self.stderr.write(\"Error: Your passwords didn't match.\")",
                "-                        password = None",
                "                         # Don't validate passwords that don't match.",
                "@@ -122,3 +128,2 @@ class Command(BaseCommand):",
                "                         self.stderr.write(\"Error: Blank passwords aren't allowed.\")",
                "-                        password = None",
                "                         # Don't validate blank passwords.",
                "@@ -131,3 +136,4 @@ class Command(BaseCommand):",
                "                         if response.lower() != 'y':",
                "-                            password = None",
                "+                            continue",
                "+                    user_data[PASSWORD_FIELD] = password",
                "             else:",
                "@@ -149,3 +155,2 @@ class Command(BaseCommand):",
                "-            user_data['password'] = password",
                "             self.UserModel._default_manager.db_manager(database).create_superuser(**user_data)",
                "diff --git a/tests/auth_tests/models/__init__.py b/tests/auth_tests/models/__init__.py",
                "index e5e38a1e2e..3422255d33 100644",
                "--- a/tests/auth_tests/models/__init__.py",
                "+++ b/tests/auth_tests/models/__init__.py",
                "@@ -7,2 +7,3 @@ from .is_active import IsActiveTestUser1",
                " from .minimal import MinimalUser",
                "+from .no_password import NoPasswordUser",
                " from .uuid_pk import UUIDUser",
                "@@ -15,3 +16,3 @@ __all__ = (",
                "     'CustomUserWithFK', 'Email', 'ExtensionUser', 'IsActiveTestUser1',",
                "-    'MinimalUser', 'UUIDUser', 'CustomUserNonUniqueUsername',",
                "+    'MinimalUser', 'NoPasswordUser', 'UUIDUser', 'CustomUserNonUniqueUsername',",
                "     'IntegerUsernameUser', 'UserWithDisabledLastLoginField',",
                "diff --git a/tests/auth_tests/models/no_password.py b/tests/auth_tests/models/no_password.py",
                "new file mode 100644",
                "index 0000000000..c7c40f76f6",
                "--- /dev/null",
                "+++ b/tests/auth_tests/models/no_password.py",
                "@@ -0,0 +1,21 @@",
                "+from django.contrib.auth.base_user import AbstractBaseUser, BaseUserManager",
                "+from django.db import models",
                "+",
                "+",
                "+class UserManager(BaseUserManager):",
                "+    def _create_user(self, username, **extra_fields):",
                "+        user = self.model(username=username, **extra_fields)",
                "+        user.save(using=self._db)",
                "+        return user",
                "+",
                "+    def create_superuser(self, username=None, **extra_fields):",
                "+        return self._create_user(username, **extra_fields)",
                "+",
                "+",
                "+class NoPasswordUser(AbstractBaseUser):",
                "+    password = None",
                "+    last_login = None",
                "+    username = models.CharField(max_length=50, unique=True)",
                "+",
                "+    USERNAME_FIELD = 'username'",
                "+    objects = UserManager()",
                "diff --git a/tests/auth_tests/test_management.py b/tests/auth_tests/test_management.py",
                "index 0c9ad81f3f..1d340c56f0 100644",
                "--- a/tests/auth_tests/test_management.py",
                "+++ b/tests/auth_tests/test_management.py",
                "@@ -881,2 +881,36 @@ class CreatesuperuserManagementCommandTestCase(TestCase):",
                "+    @override_settings(AUTH_USER_MODEL='auth_tests.NoPasswordUser')",
                "+    def test_usermodel_without_password(self):",
                "+        new_io = StringIO()",
                "+",
                "+        def test(self):",
                "+            call_command(",
                "+                'createsuperuser',",
                "+                interactive=False,",
                "+                stdin=MockTTY(),",
                "+                stdout=new_io,",
                "+                stderr=new_io,",
                "+                username='username',",
                "+            )",
                "+            self.assertEqual(new_io.getvalue().strip(), 'Superuser created successfully.')",
                "+",
                "+        test(self)",
                "+",
                "+    @override_settings(AUTH_USER_MODEL='auth_tests.NoPasswordUser')",
                "+    def test_usermodel_without_password_interactive(self):",
                "+        new_io = StringIO()",
                "+",
                "+        @mock_inputs({'username': 'username'})",
                "+        def test(self):",
                "+            call_command(",
                "+                'createsuperuser',",
                "+                interactive=True,",
                "+                stdin=MockTTY(),",
                "+                stdout=new_io,",
                "+                stderr=new_io,",
                "+            )",
                "+            self.assertEqual(new_io.getvalue().strip(), 'Superuser created successfully.')",
                "+",
                "+        test(self)",
                "+"
            ],
            "changed_files": [
                "django/contrib/auth/management/commands/createsuperuser.py",
                "tests/auth_tests/models/__init__.py",
                "tests/auth_tests/models/no_password.py",
                "tests/auth_tests/test_management.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29616": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: have",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29616",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d7615674d98a067ed06bdf1924dc76223262938a",
            "repository": "https://github.com/django/django",
            "timestamp": 1533829435,
            "hunks": 15,
            "message": "[2.1.x] Fixed #29637 -- Fixed admin change form crash if the user doesn\u00e2\u0080\u0099t have the add permission to a TabularInline. Regression in 825f0beda804e48e9197fcf3b0d909f9f548aa47. Backport of 64e1a271f50d921a54388539b6ff7102a31c3d29 from master",
            "diff": [
                "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py",
                "index 0f4dd93cb3..62dc32e788 100644",
                "--- a/django/contrib/admin/options.py",
                "+++ b/django/contrib/admin/options.py",
                "@@ -2057,8 +2057,2 @@ class InlineModelAdmin(BaseModelAdmin):",
                "         class DeleteProtectedModelForm(base_model_form):",
                "-            def __init__(self, *args, **kwargs):",
                "-                super(DeleteProtectedModelForm, self).__init__(*args, **kwargs)",
                "-                if not can_change and not self.instance._state.adding:",
                "-                    self.fields = {}",
                "-                if not can_add and self.instance._state.adding:",
                "-                    self.fields = {}",
                "@@ -2099,2 +2093,10 @@ class InlineModelAdmin(BaseModelAdmin):",
                "+            def has_changed(self):",
                "+                # Protect against unauthorized edits.",
                "+                if not can_change and not self.instance._state.adding:",
                "+                    return False",
                "+                if not can_add and self.instance._state.adding:",
                "+                    return False",
                "+                return super().has_changed()",
                "+",
                "         defaults['form'] = DeleteProtectedModelForm",
                "diff --git a/tests/admin_inlines/admin.py b/tests/admin_inlines/admin.py",
                "index 7ac13ed3a4..b5f343a55b 100644",
                "--- a/tests/admin_inlines/admin.py",
                "+++ b/tests/admin_inlines/admin.py",
                "@@ -76,2 +76,6 @@ class InnerInline2(admin.StackedInline):",
                "+class InnerInline2Tabular(admin.TabularInline):",
                "+    model = Inner2",
                "+",
                "+",
                " class CustomNumberWidget(forms.NumberInput):",
                "@@ -238,3 +242,3 @@ site.register(Holder, HolderAdmin, inlines=[InnerInline])",
                " # ModelAdmin and Inline media",
                "-site.register(Holder2, HolderAdmin, inlines=[InnerInline2])",
                "+site.register(Holder2, HolderAdmin, inlines=[InnerInline2, InnerInline2Tabular])",
                " # only Inline media",
                "diff --git a/tests/admin_inlines/tests.py b/tests/admin_inlines/tests.py",
                "index 4ce744f4ef..749b3dd75f 100644",
                "--- a/tests/admin_inlines/tests.py",
                "+++ b/tests/admin_inlines/tests.py",
                "@@ -590,5 +590,4 @@ class TestInlinePermissions(TestCase):",
                "         holder = Holder2.objects.create(dummy=13)",
                "-        inner2 = Inner2.objects.create(dummy=42, holder=holder)",
                "+        self.inner2 = Inner2.objects.create(dummy=42, holder=holder)",
                "         self.holder_change_url = reverse('admin:admin_inlines_holder2_change', args=(holder.id,))",
                "-        self.inner2_id = inner2.id",
                "@@ -686,3 +685,3 @@ class TestInlinePermissions(TestCase):",
                "             response,",
                "-            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2_id,",
                "+            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2.id,",
                "             html=True",
                "@@ -695,3 +694,3 @@ class TestInlinePermissions(TestCase):",
                "         # Change permission on inner2s, so we can change existing but not add new",
                "-        self.assertContains(response, '<h2>Inner2s</h2>')",
                "+        self.assertContains(response, '<h2>Inner2s</h2>', count=2)",
                "         # Just the one form for existing instances",
                "@@ -703,3 +702,3 @@ class TestInlinePermissions(TestCase):",
                "             response,",
                "-            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2_id,",
                "+            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2.id,",
                "             html=True",
                "@@ -712,2 +711,10 @@ class TestInlinePermissions(TestCase):",
                "         )",
                "+        # TabularInline",
                "+        self.assertContains(response, '<th class=\"required\">Dummy</th>', html=True)",
                "+        self.assertContains(",
                "+            response,",
                "+            '<input type=\"number\" name=\"inner2_set-2-0-dummy\" value=\"%s\" '",
                "+            'class=\"vIntegerField\" id=\"id_inner2_set-2-0-dummy\">' % self.inner2.dummy,",
                "+            html=True,",
                "+        )",
                "@@ -728,3 +735,3 @@ class TestInlinePermissions(TestCase):",
                "             response,",
                "-            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2_id,",
                "+            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2.id,",
                "             html=True",
                "@@ -748,3 +755,3 @@ class TestInlinePermissions(TestCase):",
                "             response,",
                "-            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2_id,",
                "+            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2.id,",
                "             html=True",
                "@@ -762,3 +769,3 @@ class TestInlinePermissions(TestCase):",
                "         # All perms on inner2s, so we can add/change/delete",
                "-        self.assertContains(response, '<h2>Inner2s</h2>')",
                "+        self.assertContains(response, '<h2>Inner2s</h2>', count=2)",
                "         # One form for existing instance only, three for new",
                "@@ -771,3 +778,3 @@ class TestInlinePermissions(TestCase):",
                "             response,",
                "-            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2_id,",
                "+            '<input type=\"hidden\" id=\"id_inner2_set-0-id\" value=\"%i\" name=\"inner2_set-0-id\">' % self.inner2.id,",
                "             html=True",
                "@@ -775,2 +782,10 @@ class TestInlinePermissions(TestCase):",
                "         self.assertContains(response, 'id=\"id_inner2_set-0-DELETE\"')",
                "+        # TabularInline",
                "+        self.assertContains(response, '<th class=\"required\">Dummy</th>', html=True)",
                "+        self.assertContains(",
                "+            response,",
                "+            '<input type=\"number\" name=\"inner2_set-2-0-dummy\" value=\"%s\" '",
                "+            'class=\"vIntegerField\" id=\"id_inner2_set-2-0-dummy\">' % self.inner2.dummy,",
                "+            html=True,",
                "+        )"
            ],
            "changed_files": [
                "django/contrib/admin/options.py",
                "tests/admin_inlines/admin.py",
                "tests/admin_inlines/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29637": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: have",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29637",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "76852c398943cf8a3b7a517f05614df3e47970c8",
            "repository": "https://github.com/django/django",
            "timestamp": 1532636537,
            "hunks": 1,
            "message": "Refs #29600 -- Added test for datetime_safe usage in SelectDateWidget.value_from_datadict().",
            "diff": [
                "diff --git a/tests/forms_tests/widget_tests/test_selectdatewidget.py b/tests/forms_tests/widget_tests/test_selectdatewidget.py",
                "index 1fe72ca8fb..7f8379c556 100644",
                "--- a/tests/forms_tests/widget_tests/test_selectdatewidget.py",
                "+++ b/tests/forms_tests/widget_tests/test_selectdatewidget.py",
                "@@ -479,2 +479,8 @@ class SelectDateWidgetTest(WidgetTest):",
                "         )",
                "+        # And years before 1000 (demonstrating the need for datetime_safe).",
                "+        w = SelectDateWidget(years=('0001',))",
                "+        self.assertEqual(",
                "+            w.value_from_datadict({'date_year': '0001', 'date_month': '8', 'date_day': '13'}, {}, 'date'),",
                "+            '13-08-0001',",
                "+        )"
            ],
            "changed_files": [
                "tests/forms_tests/widget_tests/test_selectdatewidget.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29600": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "013d439ff038ca8e750e6d1dcd6965f33ad4cf3e"
                ]
            ],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29600",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6ae7aaa7d6eb880043c4c80009b36e2287bfcb92",
            "repository": "https://github.com/django/django",
            "timestamp": 1531793323,
            "hunks": 18,
            "message": "Fixed #29413 -- Prevented evaluation of QuerySet.get_or_create()/update_or_create() defaults unless needed. Removed the logic added in 81e05a418dc6f347d9627373288e773c477a9fe0 which was obsolete since dbffffa7dc95fc62cbecfd00284bde62ee796f48.",
            "diff": [
                "diff --git a/django/db/models/query.py b/django/db/models/query.py",
                "index c0d2dee3c1..e023d7749d 100644",
                "--- a/django/db/models/query.py",
                "+++ b/django/db/models/query.py",
                "@@ -480,3 +480,2 @@ class QuerySet:",
                "         \"\"\"",
                "-        lookup, params = self._extract_model_params(defaults, **kwargs)",
                "         # The get() needs to be targeted at the write database in order",
                "@@ -485,5 +484,6 @@ class QuerySet:",
                "         try:",
                "-            return self.get(**lookup), False",
                "+            return self.get(**kwargs), False",
                "         except self.model.DoesNotExist:",
                "-            return self._create_object_from_params(lookup, params)",
                "+            params = self._extract_model_params(defaults, **kwargs)",
                "+            return self._create_object_from_params(kwargs, params)",
                "@@ -497,3 +497,2 @@ class QuerySet:",
                "         defaults = defaults or {}",
                "-        lookup, params = self._extract_model_params(defaults, **kwargs)",
                "         self._for_write = True",
                "@@ -501,5 +500,6 @@ class QuerySet:",
                "             try:",
                "-                obj = self.select_for_update().get(**lookup)",
                "+                obj = self.select_for_update().get(**kwargs)",
                "             except self.model.DoesNotExist:",
                "-                obj, created = self._create_object_from_params(lookup, params)",
                "+                params = self._extract_model_params(defaults, **kwargs)",
                "+                obj, created = self._create_object_from_params(kwargs, params)",
                "                 if created:",
                "@@ -530,11 +530,6 @@ class QuerySet:",
                "         \"\"\"",
                "-        Prepare `lookup` (kwargs that are valid model attributes), `params`",
                "-        (for creating a model instance) based on given kwargs; for use by",
                "-        get_or_create() and update_or_create().",
                "+        Prepare `params` for creating a model instance based on the given",
                "+        kwargs; for use by get_or_create() and update_or_create().",
                "         \"\"\"",
                "         defaults = defaults or {}",
                "-        lookup = kwargs.copy()",
                "-        for f in self.model._meta.fields:",
                "-            if f.attname in lookup:",
                "-                lookup[f.name] = lookup.pop(f.attname)",
                "         params = {k: v for k, v in kwargs.items() if LOOKUP_SEP not in k}",
                "@@ -556,3 +551,3 @@ class QuerySet:",
                "                 ))",
                "-        return lookup, params",
                "+        return params",
                "diff --git a/tests/get_or_create/tests.py b/tests/get_or_create/tests.py",
                "index 1aed318608..e4647d2ab5 100644",
                "--- a/tests/get_or_create/tests.py",
                "+++ b/tests/get_or_create/tests.py",
                "@@ -7,5 +7,4 @@ from django.core.exceptions import FieldError",
                " from django.db import DatabaseError, IntegrityError, connection",
                "-from django.test import (",
                "-    SimpleTestCase, TestCase, TransactionTestCase, skipUnlessDBFeature,",
                "-)",
                "+from django.test import TestCase, TransactionTestCase, skipUnlessDBFeature",
                "+from django.utils.functional import lazy",
                "@@ -180,2 +179,11 @@ class GetOrCreateTests(TestCase):",
                "+    def test_defaults_not_evaluated_unless_needed(self):",
                "+        \"\"\"`defaults` aren't evaluated if the instance isn't created.\"\"\"",
                "+        def raise_exception():",
                "+            raise AssertionError",
                "+        obj, created = Person.objects.get_or_create(",
                "+            first_name='John', defaults=lazy(raise_exception, object)(),",
                "+        )",
                "+        self.assertFalse(created)",
                "+",
                "@@ -445,2 +453,15 @@ class UpdateOrCreateTests(TestCase):",
                "+    def test_defaults_not_evaluated_unless_needed(self):",
                "+        \"\"\"`defaults` aren't evaluated if the instance isn't created.\"\"\"",
                "+        Person.objects.create(",
                "+            first_name='John', last_name='Lennon', birthday=date(1940, 10, 9)",
                "+        )",
                "+",
                "+        def raise_exception():",
                "+            raise AssertionError",
                "+        obj, created = Person.objects.get_or_create(",
                "+            first_name='John', defaults=lazy(raise_exception, object)(),",
                "+        )",
                "+        self.assertFalse(created)",
                "+",
                "@@ -517,4 +538,6 @@ class UpdateOrCreateTransactionTests(TransactionTestCase):",
                "-class InvalidCreateArgumentsTests(SimpleTestCase):",
                "+class InvalidCreateArgumentsTests(TransactionTestCase):",
                "+    available_apps = ['get_or_create']",
                "     msg = \"Invalid field name(s) for model Thing: 'nonexistent'.\"",
                "+    bad_field_msg = \"Cannot resolve keyword 'nonexistent' into field. Choices are: id, name, tags\"",
                "@@ -525,3 +548,3 @@ class InvalidCreateArgumentsTests(SimpleTestCase):",
                "     def test_get_or_create_with_invalid_kwargs(self):",
                "-        with self.assertRaisesMessage(FieldError, self.msg):",
                "+        with self.assertRaisesMessage(FieldError, self.bad_field_msg):",
                "             Thing.objects.get_or_create(name='a', nonexistent='b')",
                "@@ -533,3 +556,3 @@ class InvalidCreateArgumentsTests(SimpleTestCase):",
                "     def test_update_or_create_with_invalid_kwargs(self):",
                "-        with self.assertRaisesMessage(FieldError, self.msg):",
                "+        with self.assertRaisesMessage(FieldError, self.bad_field_msg):",
                "             Thing.objects.update_or_create(name='a', nonexistent='b')",
                "@@ -537,3 +560,3 @@ class InvalidCreateArgumentsTests(SimpleTestCase):",
                "     def test_multiple_invalid_fields(self):",
                "-        with self.assertRaisesMessage(FieldError, \"Invalid field name(s) for model Thing: 'invalid', 'nonexistent'\"):",
                "+        with self.assertRaisesMessage(FieldError, self.bad_field_msg):",
                "             Thing.objects.update_or_create(name='a', nonexistent='b', defaults={'invalid': 'c'})",
                "@@ -545,3 +568,4 @@ class InvalidCreateArgumentsTests(SimpleTestCase):",
                "     def test_property_attribute_without_setter_kwargs(self):",
                "-        with self.assertRaisesMessage(FieldError, \"Invalid field name(s) for model Thing: 'name_in_all_caps'\"):",
                "+        msg = \"Cannot resolve keyword 'name_in_all_caps' into field. Choices are: id, name, tags\"",
                "+        with self.assertRaisesMessage(FieldError, msg):",
                "             Thing.objects.update_or_create(name_in_all_caps='FRANK', defaults={'name': 'Frank'})"
            ],
            "changed_files": [
                "django/db/models/query.py",
                "tests/get_or_create/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29413": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29413",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a9f5652113f0721a7066e359ae28d14692ea3c47",
            "repository": "https://github.com/django/django",
            "timestamp": 1503654479,
            "hunks": 15,
            "message": "Fixed #28529 -- Fixed VariableDoesNotExist warnings in admin templates.",
            "diff": [
                "diff --git a/django/contrib/admin/sites.py b/django/contrib/admin/sites.py",
                "index 0dafe9766b..6842f49684 100644",
                "--- a/django/contrib/admin/sites.py",
                "+++ b/django/contrib/admin/sites.py",
                "@@ -302,2 +302,3 @@ class AdminSite:",
                "             'available_apps': self.get_app_list(request),",
                "+            'is_popup': False,",
                "         }",
                "@@ -433,2 +434,4 @@ class AdminSite:",
                "                 'perms': perms,",
                "+                'admin_url': None,",
                "+                'add_url': None,",
                "             }",
                "diff --git a/django/contrib/admin/templates/admin/change_list.html b/django/contrib/admin/templates/admin/change_list.html",
                "index 0ffca672c0..768e581d1e 100644",
                "--- a/django/contrib/admin/templates/admin/change_list.html",
                "+++ b/django/contrib/admin/templates/admin/change_list.html",
                "@@ -48,3 +48,3 @@",
                "     {% endblock %}",
                "-    {% if cl.formset.errors %}",
                "+    {% if cl.formset and cl.formset.errors %}",
                "         <p class=\"errornote\">",
                "@@ -56,3 +56,3 @@",
                "       {% block search %}{% search_form cl %}{% endblock %}",
                "-      {% block date_hierarchy %}{% date_hierarchy cl %}{% endblock %}",
                "+      {% block date_hierarchy %}{% if cl.date_hierarchy %}{% date_hierarchy cl %}{% endif %}{% endblock %}",
                "@@ -67,3 +67,3 @@",
                "-      <form id=\"changelist-form\" method=\"post\"{% if cl.formset.is_multipart %} enctype=\"multipart/form-data\"{% endif %} novalidate>{% csrf_token %}",
                "+      <form id=\"changelist-form\" method=\"post\"{% if cl.formset and cl.formset.is_multipart %} enctype=\"multipart/form-data\"{% endif %} novalidate>{% csrf_token %}",
                "       {% if cl.formset %}",
                "diff --git a/django/contrib/admin/templates/admin/change_list_results.html b/django/contrib/admin/templates/admin/change_list_results.html",
                "index b3d7dd01d3..9b97b5b4f7 100644",
                "--- a/django/contrib/admin/templates/admin/change_list_results.html",
                "+++ b/django/contrib/admin/templates/admin/change_list_results.html",
                "@@ -29,3 +29,3 @@",
                " {% for result in results %}",
                "-{% if result.form.non_field_errors %}",
                "+{% if result.form and result.form.non_field_errors %}",
                "     <tr><td colspan=\"{{ result|length }}\">{{ result.form.non_field_errors }}</td></tr>",
                "diff --git a/django/contrib/admin/templates/admin/edit_inline/stacked.html b/django/contrib/admin/templates/admin/edit_inline/stacked.html",
                "index 507f69bc56..8af4d54791 100644",
                "--- a/django/contrib/admin/templates/admin/edit_inline/stacked.html",
                "+++ b/django/contrib/admin/templates/admin/edit_inline/stacked.html",
                "@@ -21,3 +21,3 @@",
                "   {% if inline_admin_form.needs_explicit_pk_field %}{{ inline_admin_form.pk_field.field }}{% endif %}",
                "-  {{ inline_admin_form.fk_field.field }}",
                "+  {% if inline_admin_form.fk_field %}{{ inline_admin_form.fk_field.field }}{% endif %}",
                " </div>{% endfor %}",
                "diff --git a/django/contrib/admin/templates/admin/edit_inline/tabular.html b/django/contrib/admin/templates/admin/edit_inline/tabular.html",
                "index 2584745ef9..2395d1cb6d 100644",
                "--- a/django/contrib/admin/templates/admin/edit_inline/tabular.html",
                "+++ b/django/contrib/admin/templates/admin/edit_inline/tabular.html",
                "@@ -38,3 +38,3 @@",
                "           {% if inline_admin_form.needs_explicit_pk_field %}{{ inline_admin_form.pk_field.field }}{% endif %}",
                "-          {{ inline_admin_form.fk_field.field }}",
                "+          {% if inline_admin_form.fk_field %}{{ inline_admin_form.fk_field.field }}{% endif %}",
                "           {% spaceless %}",
                "@@ -43,3 +43,3 @@",
                "               {% for field in line %}",
                "-                {% if field.field.is_hidden %} {{ field.field }} {% endif %}",
                "+                {% if not field.is_readonly and field.field.is_hidden %}{{ field.field }}{% endif %}",
                "               {% endfor %}",
                "@@ -52,3 +52,3 @@",
                "             {% for field in line %}",
                "-              {% if not field.field.is_hidden %}",
                "+              {% if field.is_readonly or not field.field.is_hidden %}",
                "               <td{% if field.field.name %} class=\"field-{{ field.field.name }}\"{% endif %}>",
                "diff --git a/django/contrib/admin/templates/admin/submit_line.html b/django/contrib/admin/templates/admin/submit_line.html",
                "index b9467e82b7..bb283fe9e0 100644",
                "--- a/django/contrib/admin/templates/admin/submit_line.html",
                "+++ b/django/contrib/admin/templates/admin/submit_line.html",
                "@@ -4,3 +4,3 @@",
                " {% if show_save %}<input type=\"submit\" value=\"{% trans 'Save' %}\" class=\"default\" name=\"_save\">{% endif %}",
                "-{% if show_delete_link %}",
                "+{% if show_delete_link and original %}",
                "     {% url opts|admin_urlname:'delete' original.pk|admin_urlquote as delete_url %}",
                "diff --git a/django/contrib/admin/templatetags/admin_list.py b/django/contrib/admin/templatetags/admin_list.py",
                "index 22dec6994f..0211452d17 100644",
                "--- a/django/contrib/admin/templatetags/admin_list.py",
                "+++ b/django/contrib/admin/templatetags/admin_list.py",
                "@@ -420,2 +420,3 @@ def date_hierarchy(cl):",
                "                 'show': True,",
                "+                'back': None,",
                "                 'choices': [{",
                "diff --git a/django/contrib/admin/views/main.py b/django/contrib/admin/views/main.py",
                "index 3febd42fb9..2f5616f4bd 100644",
                "--- a/django/contrib/admin/views/main.py",
                "+++ b/django/contrib/admin/views/main.py",
                "@@ -48,2 +48,3 @@ class ChangeList:",
                "         self.list_filter = list_filter",
                "+        self.has_filters = None",
                "         self.date_hierarchy = date_hierarchy",
                "diff --git a/django/contrib/admin/widgets.py b/django/contrib/admin/widgets.py",
                "index 5bf54da7d6..835e653ba6 100644",
                "--- a/django/contrib/admin/widgets.py",
                "+++ b/django/contrib/admin/widgets.py",
                "@@ -156,4 +156,8 @@ class ForeignKeyRawIdWidget(forms.TextInput):",
                "             context['widget']['attrs'].setdefault('class', 'vForeignKeyRawIdAdminField')",
                "+        else:",
                "+            context['related_url'] = None",
                "         if context['widget']['value']:",
                "             context['link_label'], context['link_url'] = self.label_and_url_for_value(value)",
                "+        else:",
                "+            context['link_label'] = None",
                "         return context"
            ],
            "changed_files": [
                "django/contrib/admin/sites.py",
                "django/contrib/admin/templates/admin/change_list.html",
                "django/contrib/admin/templates/admin/change_list_results.html",
                "django/contrib/admin/templates/admin/edit_inline/stacked.html",
                "django/contrib/admin/templates/admin/edit_inline/tabular.html",
                "django/contrib/admin/templates/admin/submit_line.html",
                "django/contrib/admin/templatetags/admin_list.py",
                "django/contrib/admin/views/main.py",
                "django/contrib/admin/widgets.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "28529": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 28529",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "dc1dcad0f54677bfdbcf187bbcb8eca5f73b6fca",
            "repository": "https://github.com/django/django",
            "timestamp": 1532534862,
            "hunks": 2,
            "message": "Refs #24424 -- Added regression tests for MTI-inheritance model removal. The issue was fixed as a side effect of implementing RemoveField's reduction of DeleteModel to a DeleteModel in ad82900ad94ed4bbad050b9993373dafbe66b610.",
            "diff": [
                "diff --git a/tests/migrations/test_autodetector.py b/tests/migrations/test_autodetector.py",
                "index 02b95b5458..b3232c0f59 100644",
                "--- a/tests/migrations/test_autodetector.py",
                "+++ b/tests/migrations/test_autodetector.py",
                "@@ -2356 +2356,11 @@ class AutodetectorTests(TestCase):",
                "         self.assertOperationAttributes(changes, 'testapp', 0, 0)",
                "+",
                "+    def test_mti_inheritance_model_removal(self):",
                "+        Animal = ModelState('app', 'Animal', [",
                "+            (\"id\", models.AutoField(primary_key=True)),",
                "+        ])",
                "+        Dog = ModelState('app', 'Dog', [], bases=('app.Animal',))",
                "+        changes = self.get_changes([Animal, Dog], [Animal])",
                "+        self.assertNumberMigrations(changes, 'app', 1)",
                "+        self.assertOperationTypes(changes, 'app', 0, ['DeleteModel'])",
                "+        self.assertOperationAttributes(changes, 'app', 0, 0, name='Dog')",
                "diff --git a/tests/migrations/test_operations.py b/tests/migrations/test_operations.py",
                "index 142330127b..9da67fad7f 100644",
                "--- a/tests/migrations/test_operations.py",
                "+++ b/tests/migrations/test_operations.py",
                "@@ -590,2 +590,25 @@ class OperationTests(OperationTestBase):",
                "+    def test_delete_mti_model(self):",
                "+        project_state = self.set_up_test_model('test_dlmtimo', mti_model=True)",
                "+        # Test the state alteration",
                "+        operation = migrations.DeleteModel('ShetlandPony')",
                "+        new_state = project_state.clone()",
                "+        operation.state_forwards('test_dlmtimo', new_state)",
                "+        self.assertIn(('test_dlmtimo', 'shetlandpony'), project_state.models)",
                "+        self.assertNotIn(('test_dlmtimo', 'shetlandpony'), new_state.models)",
                "+        # Test the database alteration",
                "+        self.assertTableExists('test_dlmtimo_pony')",
                "+        self.assertTableExists('test_dlmtimo_shetlandpony')",
                "+        self.assertColumnExists('test_dlmtimo_shetlandpony', 'pony_ptr_id')",
                "+        with connection.schema_editor() as editor:",
                "+            operation.database_forwards('test_dlmtimo', editor, project_state, new_state)",
                "+        self.assertTableExists('test_dlmtimo_pony')",
                "+        self.assertTableNotExists('test_dlmtimo_shetlandpony')",
                "+        # And test reversal",
                "+        with connection.schema_editor() as editor:",
                "+            operation.database_backwards('test_dlmtimo', editor, new_state, project_state)",
                "+        self.assertTableExists('test_dlmtimo_pony')",
                "+        self.assertTableExists('test_dlmtimo_shetlandpony')",
                "+        self.assertColumnExists('test_dlmtimo_shetlandpony', 'pony_ptr_id')",
                "+",
                "     def test_rename_model(self):"
            ],
            "changed_files": [
                "tests/migrations/test_autodetector.py",
                "tests/migrations/test_operations.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "24424": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 24424",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c6238bf02b7ca5cf0f31f893a951f257dc557600",
            "repository": "https://github.com/django/django",
            "timestamp": 1529442655,
            "hunks": 1,
            "message": "Fixed #29467 -- Made override_settings handle errors in setting_changed signal receivers.",
            "diff": [
                "diff --git a/tests/settings_tests/tests.py b/tests/settings_tests/tests.py",
                "index 383345494d..bfd580b600 100644",
                "--- a/tests/settings_tests/tests.py",
                "+++ b/tests/settings_tests/tests.py",
                "@@ -443 +443,104 @@ class TestListSettings(unittest.TestCase):",
                "                 delattr(settings_module, setting)",
                "+",
                "+",
                "+class SettingChangeEnterException(Exception):",
                "+    pass",
                "+",
                "+",
                "+class SettingChangeExitException(Exception):",
                "+    pass",
                "+",
                "+",
                "+class OverrideSettingsIsolationOnExceptionTests(SimpleTestCase):",
                "+    \"\"\"",
                "+    The override_settings context manager restore settings if one of the",
                "+    receivers of \"setting_changed\" signal fails. Check the three cases of",
                "+    receiver failure detailed in receiver(). In each case, ALL receivers are",
                "+    called when exiting the context manager.",
                "+    \"\"\"",
                "+    def setUp(self):",
                "+        signals.setting_changed.connect(self.receiver)",
                "+        self.addCleanup(signals.setting_changed.disconnect, self.receiver)",
                "+        # Create a spy that's connected to the `setting_changed` signal and",
                "+        # executed AFTER `self.receiver`.",
                "+        self.spy_receiver = mock.Mock()",
                "+        signals.setting_changed.connect(self.spy_receiver)",
                "+        self.addCleanup(signals.setting_changed.disconnect, self.spy_receiver)",
                "+",
                "+    def receiver(self, **kwargs):",
                "+        \"\"\"",
                "+        A receiver that fails while certain settings are being changed.",
                "+        - SETTING_BOTH raises an error while receiving the signal",
                "+          on both entering and exiting the context manager.",
                "+        - SETTING_ENTER raises an error only on enter.",
                "+        - SETTING_EXIT raises an error only on exit.",
                "+        \"\"\"",
                "+        setting = kwargs['setting']",
                "+        enter = kwargs['enter']",
                "+        if setting in ('SETTING_BOTH', 'SETTING_ENTER') and enter:",
                "+            raise SettingChangeEnterException",
                "+        if setting in ('SETTING_BOTH', 'SETTING_EXIT') and not enter:",
                "+            raise SettingChangeExitException",
                "+",
                "+    def check_settings(self):",
                "+        \"\"\"Assert that settings for these tests aren't present.\"\"\"",
                "+        self.assertFalse(hasattr(settings, 'SETTING_BOTH'))",
                "+        self.assertFalse(hasattr(settings, 'SETTING_ENTER'))",
                "+        self.assertFalse(hasattr(settings, 'SETTING_EXIT'))",
                "+        self.assertFalse(hasattr(settings, 'SETTING_PASS'))",
                "+",
                "+    def check_spy_receiver_exit_calls(self, call_count):",
                "+        \"\"\"",
                "+        Assert that `self.spy_receiver` was called exactly `call_count` times",
                "+        with the ``enter=False`` keyword argument.",
                "+        \"\"\"",
                "+        kwargs_with_exit = [",
                "+            kwargs for args, kwargs in self.spy_receiver.call_args_list",
                "+            if ('enter', False) in kwargs.items()",
                "+        ]",
                "+        self.assertEqual(len(kwargs_with_exit), call_count)",
                "+",
                "+    def test_override_settings_both(self):",
                "+        \"\"\"Receiver fails on both enter and exit.\"\"\"",
                "+        with self.assertRaises(SettingChangeEnterException):",
                "+            with override_settings(SETTING_PASS='BOTH', SETTING_BOTH='BOTH'):",
                "+                pass",
                "+",
                "+        self.check_settings()",
                "+        # Two settings were touched, so expect two calls of `spy_receiver`.",
                "+        self.check_spy_receiver_exit_calls(call_count=2)",
                "+",
                "+    def test_override_settings_enter(self):",
                "+        \"\"\"Receiver fails on enter only.\"\"\"",
                "+        with self.assertRaises(SettingChangeEnterException):",
                "+            with override_settings(SETTING_PASS='ENTER', SETTING_ENTER='ENTER'):",
                "+                pass",
                "+",
                "+        self.check_settings()",
                "+        # Two settings were touched, so expect two calls of `spy_receiver`.",
                "+        self.check_spy_receiver_exit_calls(call_count=2)",
                "+",
                "+    def test_override_settings_exit(self):",
                "+        \"\"\"Receiver fails on exit only.\"\"\"",
                "+        with self.assertRaises(SettingChangeExitException):",
                "+            with override_settings(SETTING_PASS='EXIT', SETTING_EXIT='EXIT'):",
                "+                pass",
                "+",
                "+        self.check_settings()",
                "+        # Two settings were touched, so expect two calls of `spy_receiver`.",
                "+        self.check_spy_receiver_exit_calls(call_count=2)",
                "+",
                "+    def test_override_settings_reusable_on_enter(self):",
                "+        \"\"\"",
                "+        Error is raised correctly when reusing the same override_settings",
                "+        instance.",
                "+        \"\"\"",
                "+        @override_settings(SETTING_ENTER='ENTER')",
                "+        def decorated_function():",
                "+            pass",
                "+",
                "+        with self.assertRaises(SettingChangeEnterException):",
                "+            decorated_function()",
                "+        signals.setting_changed.disconnect(self.receiver)",
                "+        # This call shouldn't raise any errors.",
                "+        decorated_function()"
            ],
            "changed_files": [
                "tests/settings_tests/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29467": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29467",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3af695eda24b874486ee8be7e0d729761b3bdc71",
            "repository": "https://github.com/django/django",
            "timestamp": 1532705754,
            "hunks": 7,
            "message": "Fixed #28291, #24726 -- Fixed ArrayField with JSONField and RangeFields.",
            "diff": [
                "diff --git a/django/contrib/postgres/fields/array.py b/django/contrib/postgres/fields/array.py",
                "index ab667acd5b..a6079466af 100644",
                "--- a/django/contrib/postgres/fields/array.py",
                "+++ b/django/contrib/postgres/fields/array.py",
                "@@ -86,2 +86,5 @@ class ArrayField(CheckFieldDefaultMixin, Field):",
                "+    def get_placeholder(self, value, compiler, connection):",
                "+        return '%s::{}'.format(self.db_type(connection))",
                "+",
                "     def get_db_prep_value(self, value, connection, prepared=False):",
                "diff --git a/tests/postgres_tests/migrations/0002_create_test_models.py b/tests/postgres_tests/migrations/0002_create_test_models.py",
                "index 57465612b5..9f4417b58d 100644",
                "--- a/tests/postgres_tests/migrations/0002_create_test_models.py",
                "+++ b/tests/postgres_tests/migrations/0002_create_test_models.py",
                "@@ -62,2 +62,5 @@ class Migration(migrations.Migration):",
                "                 ('tags', ArrayField(TagField(), blank=True, null=True, size=None)),",
                "+                ('json', ArrayField(JSONField(default={}), default=[])),",
                "+                ('int_ranges', ArrayField(IntegerRangeField(), null=True, blank=True)),",
                "+                ('bigint_ranges', ArrayField(BigIntegerRangeField(), null=True, blank=True)),",
                "             ],",
                "diff --git a/tests/postgres_tests/models.py b/tests/postgres_tests/models.py",
                "index d5865818e7..cd1646a3e6 100644",
                "--- a/tests/postgres_tests/models.py",
                "+++ b/tests/postgres_tests/models.py",
                "@@ -69,2 +69,5 @@ class OtherTypesArrayModel(PostgreSQLModel):",
                "     tags = ArrayField(TagField(), blank=True, null=True)",
                "+    json = ArrayField(JSONField(default=dict), default=list)",
                "+    int_ranges = ArrayField(IntegerRangeField(), blank=True, null=True)",
                "+    bigint_ranges = ArrayField(BigIntegerRangeField(), blank=True, null=True)",
                "diff --git a/tests/postgres_tests/test_array.py b/tests/postgres_tests/test_array.py",
                "index d0e10dcb31..25fbc230bb 100644",
                "--- a/tests/postgres_tests/test_array.py",
                "+++ b/tests/postgres_tests/test_array.py",
                "@@ -26,2 +26,3 @@ try:",
                "     )",
                "+    from psycopg2.extras import NumericRange",
                " except ImportError:",
                "@@ -98,2 +99,8 @@ class TestSaveLoad(PostgreSQLTestCase):",
                "             tags=[Tag(1), Tag(2), Tag(3)],",
                "+            json=[{'a': 1}, {'b': 2}],",
                "+            int_ranges=[NumericRange(10, 20), NumericRange(30, 40)],",
                "+            bigint_ranges=[",
                "+                NumericRange(7000000000, 10000000000),",
                "+                NumericRange(50000000000, 70000000000),",
                "+            ]",
                "         )",
                "@@ -105,2 +112,5 @@ class TestSaveLoad(PostgreSQLTestCase):",
                "         self.assertEqual(instance.tags, loaded.tags)",
                "+        self.assertEqual(instance.json, loaded.json)",
                "+        self.assertEqual(instance.int_ranges, loaded.int_ranges)",
                "+        self.assertEqual(instance.bigint_ranges, loaded.bigint_ranges)",
                "@@ -115,2 +125,5 @@ class TestSaveLoad(PostgreSQLTestCase):",
                "         self.assertIsNone(instance.tags)",
                "+        self.assertEqual(instance.json, [])",
                "+        self.assertIsNone(instance.int_ranges)",
                "+        self.assertIsNone(instance.bigint_ranges)"
            ],
            "changed_files": [
                "django/contrib/postgres/fields/array.py",
                "tests/postgres_tests/migrations/0002_create_test_models.py",
                "tests/postgres_tests/models.py",
                "tests/postgres_tests/test_array.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "28291": "",
                "24726": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 28291, 24726",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1e9b02a4c28142303fb4d33632e77ff7e26acb8b",
            "repository": "https://github.com/django/django",
            "timestamp": 1531583779,
            "hunks": 4,
            "message": "Refs #28862 -- Removed the FieldRelatedOptionOperation.reduce() optimization. It isn't required anymore since AlterTogetherOperations can be reduced into CreateModels which can reduce DeleteField operations.",
            "diff": [
                "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py",
                "index f286bf4ea4..18feb9b9a1 100644",
                "--- a/django/db/migrations/operations/models.py",
                "+++ b/django/db/migrations/operations/models.py",
                "@@ -144,4 +144,3 @@ class CreateModel(ModelOperation):",
                "             ]",
                "-        elif isinstance(operation, FieldRelatedOptionOperation) and self.name_lower == operation.name_lower:",
                "-            option_value = getattr(operation, operation.option_name)",
                "+        elif isinstance(operation, AlterTogetherOptionOperation) and self.name_lower == operation.name_lower:",
                "             return [",
                "@@ -150,3 +149,13 @@ class CreateModel(ModelOperation):",
                "                     fields=self.fields,",
                "-                    options={**self.options, **{operation.option_name: option_value}},",
                "+                    options={**self.options, **{operation.option_name: operation.option_value}},",
                "+                    bases=self.bases,",
                "+                    managers=self.managers,",
                "+                ),",
                "+            ]",
                "+        elif isinstance(operation, AlterOrderWithRespectTo) and self.name_lower == operation.name_lower:",
                "+            return [",
                "+                CreateModel(",
                "+                    self.name,",
                "+                    fields=self.fields,",
                "+                    options={**self.options, 'order_with_respect_to': operation.order_with_respect_to},",
                "                     bases=self.bases,",
                "@@ -483,13 +492,3 @@ class ModelOptionOperation(ModelOperation):",
                "-class FieldRelatedOptionOperation(ModelOptionOperation):",
                "-    def reduce(self, operation, app_label=None):",
                "-        if isinstance(operation, FieldOperation) and self.name_lower == operation.model_name_lower:",
                "-            if isinstance(operation, RemoveField):",
                "-                return False",
                "-            if not self.references_field(operation.model_name, operation.name):",
                "-                return [operation, self]",
                "-        return super().reduce(operation, app_label=app_label)",
                "-",
                "-",
                "-class AlterTogetherOptionOperation(FieldRelatedOptionOperation):",
                "+class AlterTogetherOptionOperation(ModelOptionOperation):",
                "     option_name = None",
                "@@ -571,3 +570,3 @@ class AlterIndexTogether(AlterTogetherOptionOperation):",
                "-class AlterOrderWithRespectTo(FieldRelatedOptionOperation):",
                "+class AlterOrderWithRespectTo(ModelOptionOperation):",
                "     \"\"\"Represent a change with the order_with_respect_to option.\"\"\""
            ],
            "changed_files": [
                "django/db/migrations/operations/models.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "28862": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 28862",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "278457988a976e64dabe63ca410315b2d06aacfe",
            "repository": "https://github.com/django/django",
            "timestamp": 1530192610,
            "hunks": 1,
            "message": "[2.1.x] Refs #29514 -- Added test for get_default_timezone()/timezone.utc equality. Backport of f4ef71c689b7bf3b0237d12c634fe5557f646a79 from master",
            "diff": [
                "diff --git a/tests/utils_tests/test_timezone.py b/tests/utils_tests/test_timezone.py",
                "index 32906f8b88..5069b82e5b 100644",
                "--- a/tests/utils_tests/test_timezone.py",
                "+++ b/tests/utils_tests/test_timezone.py",
                "@@ -192,2 +192,6 @@ class TimezoneTests(SimpleTestCase):",
                "+    def test_get_default_timezone_utc(self):",
                "+        with override_settings(USE_TZ=True, TIME_ZONE='UTC'):",
                "+            self.assertIs(timezone.get_default_timezone(), timezone.utc)",
                "+",
                "     def test_fixedoffset_timedelta(self):"
            ],
            "changed_files": [
                "tests/utils_tests/test_timezone.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29514": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1",
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29514",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "743d28f5539b17d6e39bd37c6e3df5628b470cac",
            "repository": "https://github.com/django/django",
            "timestamp": 1512465592,
            "hunks": 2,
            "message": "Refs #27869 -- Added PostgreSQL version check for GinIndex support.",
            "diff": [
                "diff --git a/django/contrib/postgres/indexes.py b/django/contrib/postgres/indexes.py",
                "index 1850b20978..f8014f87a0 100644",
                "--- a/django/contrib/postgres/indexes.py",
                "+++ b/django/contrib/postgres/indexes.py",
                "@@ -107,2 +107,6 @@ class GinIndex(PostgresIndex):",
                "+    def check_supported(self, schema_editor):",
                "+        if self.gin_pending_list_limit and not schema_editor.connection.features.has_gin_pending_list_limit:",
                "+            raise NotSupportedError('GIN option gin_pending_list_limit requires PostgreSQL 9.5+.')",
                "+",
                "     def get_with_params(self):",
                "diff --git a/tests/postgres_tests/test_indexes.py b/tests/postgres_tests/test_indexes.py",
                "index f4ac359a3a..b9820aa362 100644",
                "--- a/tests/postgres_tests/test_indexes.py",
                "+++ b/tests/postgres_tests/test_indexes.py",
                "@@ -187,2 +187,12 @@ class SchemaTests(PostgreSQLTestCase):",
                "+    def test_gin_parameters_exception(self):",
                "+        index_name = 'gin_options_exception'",
                "+        index = GinIndex(fields=['field'], name=index_name, gin_pending_list_limit=64)",
                "+        msg = 'GIN option gin_pending_list_limit requires PostgreSQL 9.5+.'",
                "+        with self.assertRaisesMessage(NotSupportedError, msg):",
                "+            with mock.patch('django.db.connection.features.has_gin_pending_list_limit', False):",
                "+                with connection.schema_editor() as editor:",
                "+                    editor.add_index(IntegerArrayModel, index)",
                "+        self.assertNotIn(index_name, self.get_constraints(IntegerArrayModel._meta.db_table))",
                "+",
                "     @skipUnlessDBFeature('has_brin_index_support')"
            ],
            "changed_files": [
                "django/contrib/postgres/indexes.py",
                "tests/postgres_tests/test_indexes.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "27869": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 27869",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d526b07784d8caa208055c1f2bd1cedc88fb52dc",
            "repository": "https://github.com/django/django",
            "timestamp": 1512467036,
            "hunks": 5,
            "message": "Fixed #26974 -- Added HashIndex to django.contrib.postgres. Thanks Akshesh Doshi for the initial implementation.",
            "diff": [
                "diff --git a/django/contrib/postgres/indexes.py b/django/contrib/postgres/indexes.py",
                "index 677c63b4a2..3b77b97f3e 100644",
                "--- a/django/contrib/postgres/indexes.py",
                "+++ b/django/contrib/postgres/indexes.py",
                "@@ -3,3 +3,3 @@ from django.utils.functional import cached_property",
                "-__all__ = ['BrinIndex', 'GinIndex', 'GistIndex']",
                "+__all__ = ['BrinIndex', 'GinIndex', 'GistIndex', 'HashIndex']",
                "@@ -100 +100,21 @@ class GistIndex(PostgresIndex):",
                "         return with_params",
                "+",
                "+",
                "+class HashIndex(PostgresIndex):",
                "+    suffix = 'hash'",
                "+",
                "+    def __init__(self, *, fillfactor=None, **kwargs):",
                "+        self.fillfactor = fillfactor",
                "+        super().__init__(**kwargs)",
                "+",
                "+    def deconstruct(self):",
                "+        path, args, kwargs = super().deconstruct()",
                "+        if self.fillfactor is not None:",
                "+            kwargs['fillfactor'] = self.fillfactor",
                "+        return path, args, kwargs",
                "+",
                "+    def get_with_params(self):",
                "+        with_params = []",
                "+        if self.fillfactor is not None:",
                "+            with_params.append('fillfactor = %d' % self.fillfactor)",
                "+        return with_params",
                "diff --git a/tests/postgres_tests/test_indexes.py b/tests/postgres_tests/test_indexes.py",
                "index defab8530a..dcb285cc1c 100644",
                "--- a/tests/postgres_tests/test_indexes.py",
                "+++ b/tests/postgres_tests/test_indexes.py",
                "@@ -1,2 +1,4 @@",
                "-from django.contrib.postgres.indexes import BrinIndex, GinIndex, GistIndex",
                "+from django.contrib.postgres.indexes import (",
                "+    BrinIndex, GinIndex, GistIndex, HashIndex,",
                "+)",
                " from django.db import connection",
                "@@ -85,2 +87,16 @@ class GistIndexTests(IndexTestMixin, PostgreSQLTestCase):",
                "+class HashIndexTests(IndexTestMixin, PostgreSQLTestCase):",
                "+    index_class = HashIndex",
                "+",
                "+    def test_suffix(self):",
                "+        self.assertEqual(HashIndex.suffix, 'hash')",
                "+",
                "+    def test_deconstruction(self):",
                "+        index = HashIndex(fields=['title'], name='test_title_hash', fillfactor=80)",
                "+        path, args, kwargs = index.deconstruct()",
                "+        self.assertEqual(path, 'django.contrib.postgres.indexes.HashIndex')",
                "+        self.assertEqual(args, ())",
                "+        self.assertEqual(kwargs, {'fields': ['title'], 'name': 'test_title_hash', 'fillfactor': 80})",
                "+",
                "+",
                " class SchemaTests(PostgreSQLTestCase):",
                "@@ -175 +191,29 @@ class SchemaTests(PostgreSQLTestCase):",
                "         self.assertNotIn(index_name, self.get_constraints(CharFieldModel._meta.db_table))",
                "+",
                "+    def test_hash_index(self):",
                "+        # Ensure the table is there and doesn't have an index.",
                "+        self.assertNotIn('field', self.get_constraints(CharFieldModel._meta.db_table))",
                "+        # Add the index.",
                "+        index_name = 'char_field_model_field_hash'",
                "+        index = HashIndex(fields=['field'], name=index_name)",
                "+        with connection.schema_editor() as editor:",
                "+            editor.add_index(CharFieldModel, index)",
                "+        constraints = self.get_constraints(CharFieldModel._meta.db_table)",
                "+        # The index was added.",
                "+        self.assertEqual(constraints[index_name]['type'], HashIndex.suffix)",
                "+        # Drop the index.",
                "+        with connection.schema_editor() as editor:",
                "+            editor.remove_index(CharFieldModel, index)",
                "+        self.assertNotIn(index_name, self.get_constraints(CharFieldModel._meta.db_table))",
                "+",
                "+    def test_hash_parameters(self):",
                "+        index_name = 'integer_array_hash_fillfactor'",
                "+        index = HashIndex(fields=['field'], name=index_name, fillfactor=80)",
                "+        with connection.schema_editor() as editor:",
                "+            editor.add_index(CharFieldModel, index)",
                "+        constraints = self.get_constraints(CharFieldModel._meta.db_table)",
                "+        self.assertEqual(constraints[index_name]['type'], HashIndex.suffix)",
                "+        self.assertEqual(constraints[index_name]['options'], ['fillfactor=80'])",
                "+        with connection.schema_editor() as editor:",
                "+            editor.remove_index(CharFieldModel, index)",
                "+        self.assertNotIn(index_name, self.get_constraints(CharFieldModel._meta.db_table))"
            ],
            "changed_files": [
                "django/contrib/postgres/indexes.py",
                "tests/postgres_tests/test_indexes.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "26974": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 26974",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c72dde41e603093ab0bb12fa24fa69cfda0d35f9",
            "repository": "https://github.com/django/django",
            "timestamp": 1532631898,
            "hunks": 14,
            "message": "Fixed #29595 -- Allowed using timedelta in migrations questioner. Refs #29600 -- Removed usage of django.utils.datetime_safe in migrations.",
            "diff": [
                "diff --git a/django/db/migrations/questioner.py b/django/db/migrations/questioner.py",
                "index d482de6388..08e7719dc1 100644",
                "--- a/django/db/migrations/questioner.py",
                "+++ b/django/db/migrations/questioner.py",
                "@@ -1 +1,2 @@",
                "+import datetime",
                " import importlib",
                "@@ -6,3 +7,3 @@ from django.apps import apps",
                " from django.db.models.fields import NOT_PROVIDED",
                "-from django.utils import datetime_safe, timezone",
                "+from django.utils import timezone",
                "@@ -137,3 +138,3 @@ class InteractiveMigrationQuestioner(MigrationQuestioner):",
                "                 try:",
                "-                    return eval(code, {}, {\"datetime\": datetime_safe, \"timezone\": timezone})",
                "+                    return eval(code, {}, {'datetime': datetime, 'timezone': timezone})",
                "                 except (SyntaxError, NameError) as e:",
                "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py",
                "index 9b251e54cd..911cf0f359 100644",
                "--- a/django/db/migrations/serializer.py",
                "+++ b/django/db/migrations/serializer.py",
                "@@ -14,3 +14,2 @@ from django.db.migrations.operations.base import Operation",
                " from django.db.migrations.utils import COMPILED_REGEX_TYPE, RegexObject",
                "-from django.utils import datetime_safe",
                " from django.utils.functional import LazyObject, Promise",
                "@@ -48,3 +47,10 @@ class BaseSimpleSerializer(BaseSerializer):",
                "-class DatetimeSerializer(BaseSerializer):",
                "+class DateTimeSerializer(BaseSerializer):",
                "+    \"\"\"For datetime.*, except datetime.datetime.\"\"\"",
                "+    def serialize(self):",
                "+        return repr(self.value), {'import datetime'}",
                "+",
                "+",
                "+class DatetimeDatetimeSerializer(BaseSerializer):",
                "+    \"\"\"For datetime.datetime.\"\"\"",
                "     def serialize(self):",
                "@@ -52,5 +58,2 @@ class DatetimeSerializer(BaseSerializer):",
                "             self.value = self.value.astimezone(utc)",
                "-        value_repr = repr(self.value).replace(\"<UTC>\", \"utc\")",
                "-        if isinstance(self.value, datetime_safe.datetime):",
                "-            value_repr = \"datetime.%s\" % value_repr",
                "         imports = [\"import datetime\"]",
                "@@ -58,11 +61,3 @@ class DatetimeSerializer(BaseSerializer):",
                "             imports.append(\"from django.utils.timezone import utc\")",
                "-        return value_repr, set(imports)",
                "-",
                "-",
                "-class DateSerializer(BaseSerializer):",
                "-    def serialize(self):",
                "-        value_repr = repr(self.value)",
                "-        if isinstance(self.value, datetime_safe.date):",
                "-            value_repr = \"datetime.%s\" % value_repr",
                "-        return value_repr, {\"import datetime\"}",
                "+        return repr(self.value).replace('<UTC>', 'utc'), set(imports)",
                "@@ -248,15 +243,2 @@ class SettingsReferenceSerializer(BaseSerializer):",
                "-class TimedeltaSerializer(BaseSerializer):",
                "-    def serialize(self):",
                "-        return repr(self.value), {\"import datetime\"}",
                "-",
                "-",
                "-class TimeSerializer(BaseSerializer):",
                "-    def serialize(self):",
                "-        value_repr = repr(self.value)",
                "-        if isinstance(self.value, datetime_safe.time):",
                "-            value_repr = \"datetime.%s\" % value_repr",
                "-        return value_repr, {\"import datetime\"}",
                "-",
                "-",
                " class TupleSerializer(BaseSequenceSerializer):",
                "@@ -324,9 +306,5 @@ def serializer_factory(value):",
                "     if isinstance(value, datetime.datetime):",
                "-        return DatetimeSerializer(value)",
                "-    if isinstance(value, datetime.date):",
                "-        return DateSerializer(value)",
                "-    if isinstance(value, datetime.time):",
                "-        return TimeSerializer(value)",
                "-    if isinstance(value, datetime.timedelta):",
                "-        return TimedeltaSerializer(value)",
                "+        return DatetimeDatetimeSerializer(value)",
                "+    if isinstance(value, (datetime.date, datetime.timedelta, datetime.time)):",
                "+        return DateTimeSerializer(value)",
                "     if isinstance(value, SettingsReference):",
                "diff --git a/tests/migrations/test_questioner.py b/tests/migrations/test_questioner.py",
                "index 45536410bb..e17dd04ab6 100644",
                "--- a/tests/migrations/test_questioner.py",
                "+++ b/tests/migrations/test_questioner.py",
                "@@ -1,4 +1,9 @@",
                "-from django.db.migrations.questioner import MigrationQuestioner",
                "+import datetime",
                "+from unittest import mock",
                "+",
                "+from django.db.migrations.questioner import (",
                "+    InteractiveMigrationQuestioner, MigrationQuestioner,",
                "+)",
                " from django.test import SimpleTestCase",
                "-from django.test.utils import override_settings",
                "+from django.test.utils import captured_stdout, override_settings",
                "@@ -13 +18,8 @@ class QuestionerTests(SimpleTestCase):",
                "         self.assertIs(False, questioner.ask_initial('migrations'))",
                "+",
                "+    @mock.patch('builtins.input', return_value='datetime.timedelta(days=1)')",
                "+    def test_timedelta_default(self, mock):",
                "+        questioner = InteractiveMigrationQuestioner()",
                "+        with captured_stdout():",
                "+            value = questioner._ask_default()",
                "+        self.assertEqual(value, datetime.timedelta(days=1))",
                "diff --git a/tests/migrations/test_writer.py b/tests/migrations/test_writer.py",
                "index 946306c325..c656f95666 100644",
                "--- a/tests/migrations/test_writer.py",
                "+++ b/tests/migrations/test_writer.py",
                "@@ -21,3 +21,2 @@ from django.db.migrations.writer import (",
                " from django.test import SimpleTestCase",
                "-from django.utils import datetime_safe",
                " from django.utils.deconstruct import deconstructible",
                "@@ -366,16 +365,2 @@ class WriterTests(SimpleTestCase):",
                "-    def test_serialize_datetime_safe(self):",
                "-        self.assertSerializedResultEqual(",
                "-            datetime_safe.date(2014, 3, 31),",
                "-            (\"datetime.date(2014, 3, 31)\", {'import datetime'})",
                "-        )",
                "-        self.assertSerializedResultEqual(",
                "-            datetime_safe.time(10, 25),",
                "-            (\"datetime.time(10, 25)\", {'import datetime'})",
                "-        )",
                "-        self.assertSerializedResultEqual(",
                "-            datetime_safe.datetime(2014, 3, 31, 16, 4, 31),",
                "-            (\"datetime.datetime(2014, 3, 31, 16, 4, 31)\", {'import datetime'})",
                "-        )",
                "-",
                "     def test_serialize_fields(self):"
            ],
            "changed_files": [
                "django/db/migrations/questioner.py",
                "django/db/migrations/serializer.py",
                "tests/migrations/test_questioner.py",
                "tests/migrations/test_writer.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29595": "",
                "29600": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29595, 29600",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d6381d3559b469ce25f4906151b9329c1f946f14",
            "repository": "https://github.com/django/django",
            "timestamp": 1515153188,
            "hunks": 10,
            "message": "Fixed #28990 -- Added autosummarize parameter to BrinIndex.",
            "diff": [
                "diff --git a/django/contrib/postgres/indexes.py b/django/contrib/postgres/indexes.py",
                "index 43c5588d58..7c41c7f340 100644",
                "--- a/django/contrib/postgres/indexes.py",
                "+++ b/django/contrib/postgres/indexes.py",
                "@@ -33,5 +33,6 @@ class BrinIndex(PostgresIndex):",
                "-    def __init__(self, *, pages_per_range=None, **kwargs):",
                "+    def __init__(self, *, autosummarize=None, pages_per_range=None, **kwargs):",
                "         if pages_per_range is not None and pages_per_range <= 0:",
                "             raise ValueError('pages_per_range must be None or a positive integer')",
                "+        self.autosummarize = autosummarize",
                "         self.pages_per_range = pages_per_range",
                "@@ -41,2 +42,4 @@ class BrinIndex(PostgresIndex):",
                "         path, args, kwargs = super().deconstruct()",
                "+        if self.autosummarize is not None:",
                "+            kwargs['autosummarize'] = self.autosummarize",
                "         if self.pages_per_range is not None:",
                "@@ -47,2 +50,4 @@ class BrinIndex(PostgresIndex):",
                "         with_params = []",
                "+        if self.autosummarize is not None:",
                "+            with_params.append('autosummarize = %s' % ('on' if self.autosummarize else 'off'))",
                "         if self.pages_per_range is not None:",
                "diff --git a/django/db/backends/postgresql/features.py b/django/db/backends/postgresql/features.py",
                "index 06b0303bac..a2a231554f 100644",
                "--- a/django/db/backends/postgresql/features.py",
                "+++ b/django/db/backends/postgresql/features.py",
                "@@ -59,2 +59,6 @@ class DatabaseFeatures(BaseDatabaseFeatures):",
                "+    @cached_property",
                "+    def is_postgresql_10(self):",
                "+        return self.connection.pg_version >= 100000",
                "+",
                "     has_select_for_update_skip_locked = is_postgresql_9_5",
                "@@ -62,2 +66,3 @@ class DatabaseFeatures(BaseDatabaseFeatures):",
                "     has_jsonb_agg = is_postgresql_9_5",
                "+    has_brin_autosummarize = is_postgresql_10",
                "     has_gin_pending_list_limit = is_postgresql_9_5",
                "diff --git a/docs/spelling_wordlist b/docs/spelling_wordlist",
                "index 6721a77e6f..f8a718a3bc 100644",
                "--- a/docs/spelling_wordlist",
                "+++ b/docs/spelling_wordlist",
                "@@ -44,2 +44,3 @@ autoincrement",
                " autoreload",
                "+autovacuum",
                " Azerbaijani",
                "diff --git a/tests/postgres_tests/test_indexes.py b/tests/postgres_tests/test_indexes.py",
                "index b07716e40d..9bca4510fe 100644",
                "--- a/tests/postgres_tests/test_indexes.py",
                "+++ b/tests/postgres_tests/test_indexes.py",
                "@@ -33,3 +33,3 @@ class BrinIndexTests(IndexTestMixin, PostgreSQLTestCase):",
                "     def test_deconstruction(self):",
                "-        index = BrinIndex(fields=['title'], name='test_title_brin', pages_per_range=16)",
                "+        index = BrinIndex(fields=['title'], name='test_title_brin', autosummarize=True, pages_per_range=16)",
                "         path, args, kwargs = index.deconstruct()",
                "@@ -37,3 +37,8 @@ class BrinIndexTests(IndexTestMixin, PostgreSQLTestCase):",
                "         self.assertEqual(args, ())",
                "-        self.assertEqual(kwargs, {'fields': ['title'], 'name': 'test_title_brin', 'pages_per_range': 16})",
                "+        self.assertEqual(kwargs, {",
                "+            'fields': ['title'],",
                "+            'name': 'test_title_brin',",
                "+            'autosummarize': True,",
                "+            'pages_per_range': 16,",
                "+        })",
                "@@ -178,2 +183,15 @@ class SchemaTests(PostgreSQLTestCase):",
                "+    @skipUnlessDBFeature('has_brin_index_support', 'has_brin_autosummarize')",
                "+    def test_brin_parameters(self):",
                "+        index_name = 'char_field_brin_params'",
                "+        index = BrinIndex(fields=['field'], name=index_name, autosummarize=True)",
                "+        with connection.schema_editor() as editor:",
                "+            editor.add_index(CharFieldModel, index)",
                "+        constraints = self.get_constraints(CharFieldModel._meta.db_table)",
                "+        self.assertEqual(constraints[index_name]['type'], BrinIndex.suffix)",
                "+        self.assertEqual(constraints[index_name]['options'], ['autosummarize=on'])",
                "+        with connection.schema_editor() as editor:",
                "+            editor.remove_index(CharFieldModel, index)",
                "+        self.assertNotIn(index_name, self.get_constraints(CharFieldModel._meta.db_table))",
                "+",
                "     def test_gist_index(self):"
            ],
            "changed_files": [
                "django/contrib/postgres/indexes.py",
                "django/db/backends/postgresql/features.py",
                "docs/spelling_wordlist",
                "tests/postgres_tests/test_indexes.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "28990": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 28990",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f1bf069ec1a3d4761ab03ccae00961bc3f2aea8a",
            "repository": "https://github.com/django/django",
            "timestamp": 1533611571,
            "hunks": 3,
            "message": "Refs #29244 -- Fixed django.utils.inspect.method_has_no_args() for bound methods.",
            "diff": [
                "diff --git a/django/utils/inspect.py b/django/utils/inspect.py",
                "index 15cd7fbc45..293cbdffa1 100644",
                "--- a/django/utils/inspect.py",
                "+++ b/django/utils/inspect.py",
                "@@ -54,7 +54,7 @@ def method_has_no_args(meth):",
                "     \"\"\"Return True if a method only accepts 'self'.\"\"\"",
                "-    args = [",
                "+    count = len([",
                "         p for p in inspect.signature(meth).parameters.values()",
                "         if p.kind == p.POSITIONAL_OR_KEYWORD",
                "-    ]",
                "-    return len(args) == 1",
                "+    ])",
                "+    return count == 0 if inspect.ismethod(meth) else count == 1",
                "diff --git a/tests/utils_tests/test_inspect.py b/tests/utils_tests/test_inspect.py",
                "index dce8f95ecf..3967f2c886 100644",
                "--- a/tests/utils_tests/test_inspect.py",
                "+++ b/tests/utils_tests/test_inspect.py",
                "@@ -39 +39,3 @@ class TestInspectMethods(unittest.TestCase):",
                "         self.assertIs(inspect.method_has_no_args(Person.one_argument), False)",
                "+        self.assertIs(inspect.method_has_no_args(Person().no_arguments), True)",
                "+        self.assertIs(inspect.method_has_no_args(Person().one_argument), False)"
            ],
            "changed_files": [
                "django/utils/inspect.py",
                "tests/utils_tests/test_inspect.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29244": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29244",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1a9cbf41a130def83a7e384955544d08be0fc148",
            "repository": "https://github.com/django/django",
            "timestamp": 1533285115,
            "hunks": 4,
            "message": "Fixed #29613 -- Fixed --keepdb on PostgreSQL if the database exists and the user can't create databases. Regression in e776dd2db677d58dcb50aea20d3bb191537df25b. Thanks Tim Graham for the review.",
            "diff": [
                "diff --git a/django/db/backends/postgresql/creation.py b/django/db/backends/postgresql/creation.py",
                "index 8b6c4eff19..01e3b5d10a 100644",
                "--- a/django/db/backends/postgresql/creation.py",
                "+++ b/django/db/backends/postgresql/creation.py",
                "@@ -5,2 +5,3 @@ from psycopg2 import errorcodes",
                " from django.db.backends.base.creation import BaseDatabaseCreation",
                "+from django.db.backends.utils import strip_quotes",
                "@@ -30,4 +31,12 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "+    def _database_exists(self, cursor, database_name):",
                "+        cursor.execute('SELECT 1 FROM pg_catalog.pg_database WHERE datname = %s', [strip_quotes(database_name)])",
                "+        return cursor.fetchone() is not None",
                "+",
                "     def _execute_create_test_db(self, cursor, parameters, keepdb=False):",
                "         try:",
                "+            if keepdb and self._database_exists(cursor, parameters['dbname']):",
                "+                # If the database should be kept and it already exists, don't",
                "+                # try to create a new one.",
                "+                return",
                "             super()._execute_create_test_db(cursor, parameters, keepdb)",
                "diff --git a/tests/backends/postgresql/test_creation.py b/tests/backends/postgresql/test_creation.py",
                "index 9f51d5e6b2..7d6f319a80 100644",
                "--- a/tests/backends/postgresql/test_creation.py",
                "+++ b/tests/backends/postgresql/test_creation.py",
                "@@ -91,5 +91,12 @@ class DatabaseCreationTests(SimpleTestCase):",
                "         with self.patch_test_db_creation(self._execute_raise_permission_denied):",
                "-            with self.assertRaises(SystemExit):",
                "-                creation._create_test_db(verbosity=0, autoclobber=False, keepdb=False)",
                "-            with self.assertRaises(SystemExit):",
                "+            with mock.patch.object(DatabaseCreation, '_database_exists', return_value=False):",
                "+                with self.assertRaises(SystemExit):",
                "+                    creation._create_test_db(verbosity=0, autoclobber=False, keepdb=False)",
                "+                with self.assertRaises(SystemExit):",
                "+                    creation._create_test_db(verbosity=0, autoclobber=False, keepdb=True)",
                "+        # Simulate test database creation raising \"insufficient privileges\".",
                "+        # An error shouldn't appear when keepdb is on and the database already",
                "+        # exists.",
                "+        with self.patch_test_db_creation(self._execute_raise_permission_denied):",
                "+            with mock.patch.object(DatabaseCreation, '_database_exists', return_value=True):",
                "                 creation._create_test_db(verbosity=0, autoclobber=False, keepdb=True)"
            ],
            "changed_files": [
                "django/db/backends/postgresql/creation.py",
                "tests/backends/postgresql/test_creation.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29613": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29613",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2668418d99b42599536d353705456cf5db718d48",
            "repository": "https://github.com/django/django",
            "timestamp": 1533117148,
            "hunks": 5,
            "message": "[1.11.x] Fixed #29499 -- Fixed race condition in QuerySet.update_or_create(). A race condition happened when the object didn't already exist and another process/thread created the object before update_or_create() did and then attempted to update the object, also before update_or_create() saved the object. The update by the other process/thread could be lost. Backport of 271542dad1686c438f658aa6220982495db09797 from master",
            "diff": [
                "diff --git a/django/db/models/query.py b/django/db/models/query.py",
                "index 379edf3882..cbf35610db 100644",
                "--- a/django/db/models/query.py",
                "+++ b/django/db/models/query.py",
                "@@ -481,3 +481,5 @@ class QuerySet(object):",
                "             except self.model.DoesNotExist:",
                "-                obj, created = self._create_object_from_params(lookup, params)",
                "+                # Lock the row so that a concurrent update is blocked until",
                "+                # after update_or_create() has performed its save.",
                "+                obj, created = self._create_object_from_params(lookup, params, lock=True)",
                "                 if created:",
                "@@ -489,3 +491,3 @@ class QuerySet(object):",
                "-    def _create_object_from_params(self, lookup, params):",
                "+    def _create_object_from_params(self, lookup, params, lock=False):",
                "         \"\"\"",
                "@@ -502,3 +504,4 @@ class QuerySet(object):",
                "             try:",
                "-                return self.get(**lookup), False",
                "+                qs = self.select_for_update() if lock else self",
                "+                return qs.get(**lookup), False",
                "             except self.model.DoesNotExist:",
                "diff --git a/tests/get_or_create/models.py b/tests/get_or_create/models.py",
                "index b5fe534e3a..8103a451c4 100644",
                "--- a/tests/get_or_create/models.py",
                "+++ b/tests/get_or_create/models.py",
                "@@ -8,3 +8,3 @@ from django.utils.encoding import python_2_unicode_compatible",
                " class Person(models.Model):",
                "-    first_name = models.CharField(max_length=100)",
                "+    first_name = models.CharField(max_length=100, unique=True)",
                "     last_name = models.CharField(max_length=100)",
                "diff --git a/tests/get_or_create/tests.py b/tests/get_or_create/tests.py",
                "index 0c8efb6f4e..ad6030dda2 100644",
                "--- a/tests/get_or_create/tests.py",
                "+++ b/tests/get_or_create/tests.py",
                "@@ -511,2 +511,60 @@ class UpdateOrCreateTransactionTests(TransactionTestCase):",
                "+    @skipUnlessDBFeature('has_select_for_update')",
                "+    @skipUnlessDBFeature('supports_transactions')",
                "+    def test_creation_in_transaction(self):",
                "+        \"\"\"",
                "+        Objects are selected and updated in a transaction to avoid race",
                "+        conditions. This test checks the behavior of update_or_create() when",
                "+        the object doesn't already exist, but another thread creates the",
                "+        object before update_or_create() does and then attempts to update the",
                "+        object, also before update_or_create(). It forces update_or_create() to",
                "+        hold the lock in another thread for a relatively long time so that it",
                "+        can update while it holds the lock. The updated field isn't a field in",
                "+        'defaults', so update_or_create() shouldn't have an effect on it.",
                "+        \"\"\"",
                "+        lock_status = {'lock_count': 0}",
                "+",
                "+        def birthday_sleep():",
                "+            lock_status['lock_count'] += 1",
                "+            time.sleep(0.5)",
                "+            return date(1940, 10, 10)",
                "+",
                "+        def update_birthday_slowly():",
                "+            try:",
                "+                Person.objects.update_or_create(first_name='John', defaults={'birthday': birthday_sleep})",
                "+            finally:",
                "+                # Avoid leaking connection for Oracle",
                "+                connection.close()",
                "+",
                "+        def lock_wait(expected_lock_count):",
                "+            # timeout after ~0.5 seconds",
                "+            for i in range(20):",
                "+                time.sleep(0.025)",
                "+                if lock_status['lock_count'] == expected_lock_count:",
                "+                    return True",
                "+            self.skipTest('Database took too long to lock the row')",
                "+",
                "+        # update_or_create in a separate thread.",
                "+        t = Thread(target=update_birthday_slowly)",
                "+        before_start = datetime.now()",
                "+        t.start()",
                "+        lock_wait(1)",
                "+        # Create object *after* initial attempt by update_or_create to get obj",
                "+        # but before creation attempt.",
                "+        Person.objects.create(first_name='John', last_name='Lennon', birthday=date(1940, 10, 9))",
                "+        lock_wait(2)",
                "+        # At this point, the thread is pausing for 0.5 seconds, so now attempt",
                "+        # to modify object before update_or_create() calls save(). This should",
                "+        # be blocked until after the save().",
                "+        Person.objects.filter(first_name='John').update(last_name='NotLennon')",
                "+        after_update = datetime.now()",
                "+        # Wait for thread to finish",
                "+        t.join()",
                "+        # Check call to update_or_create() succeeded and the subsequent",
                "+        # (blocked) call to update().",
                "+        updated_person = Person.objects.get(first_name='John')",
                "+        self.assertEqual(updated_person.birthday, date(1940, 10, 10))  # set by update_or_create()",
                "+        self.assertEqual(updated_person.last_name, 'NotLennon')        # set by update()",
                "+        self.assertGreater(after_update - before_start, timedelta(seconds=1))",
                "+"
            ],
            "changed_files": [
                "django/db/models/query.py",
                "tests/get_or_create/models.py",
                "tests/get_or_create/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29499": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.11.16",
                "1.11.17",
                "1.11.18",
                "1.11.19",
                "1.11.20",
                "1.11.21",
                "1.11.22",
                "1.11.23",
                "1.11.24",
                "1.11.25",
                "1.11.26",
                "1.11.27",
                "1.11.28",
                "1.11.29"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29499",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4dadf4eb7bad7c8e9154ff86e7e42ed846c8974d",
            "repository": "https://github.com/django/django",
            "timestamp": 1533045431,
            "hunks": 3,
            "message": "[2.1.x] Fixed #29617 -- Fixed Template crash if template_string is lazy. Regression in 3a148f958dddd97c1379081118c30fbede6b6bc4. Backport of 9f3b9ffd51c71d96728df9ee16f5a57c6f3b315d from master",
            "diff": [
                "diff --git a/django/template/base.py b/django/template/base.py",
                "index c2376ff5a5..f6a60ecdf7 100644",
                "--- a/django/template/base.py",
                "+++ b/django/template/base.py",
                "@@ -154,3 +154,3 @@ class Template:",
                "         self.engine = engine",
                "-        self.source = template_string",
                "+        self.source = str(template_string)  # May be lazy.",
                "         self.nodelist = self.compile_nodelist()",
                "diff --git a/tests/template_tests/test_base.py b/tests/template_tests/test_base.py",
                "index 3bc857abee..475a647dd2 100644",
                "--- a/tests/template_tests/test_base.py",
                "+++ b/tests/template_tests/test_base.py",
                "@@ -1,3 +1,10 @@",
                "-from django.template.base import Variable, VariableDoesNotExist",
                "+from django.template import Context, Template, Variable, VariableDoesNotExist",
                " from django.test import SimpleTestCase",
                "+from django.utils.translation import gettext_lazy",
                "+",
                "+",
                "+class TemplateTests(SimpleTestCase):",
                "+    def test_lazy_template_string(self):",
                "+        template_string = gettext_lazy('lazy string')",
                "+        self.assertEqual(Template(template_string).render(Context()), template_string)"
            ],
            "changed_files": [
                "django/template/base.py",
                "tests/template_tests/test_base.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29617": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1",
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29617",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ac25dd1f8d48accc765c05aebb47c427e51f3255",
            "repository": "https://github.com/django/django",
            "timestamp": 1532498411,
            "hunks": 4,
            "message": "Fixed #29569 -- Fixed Cast() with AutoField and BigAutoField.",
            "diff": [
                "diff --git a/django/db/backends/mysql/operations.py b/django/db/backends/mysql/operations.py",
                "index ddeb128d32..fd7b8153ba 100644",
                "--- a/django/db/backends/mysql/operations.py",
                "+++ b/django/db/backends/mysql/operations.py",
                "@@ -20,2 +20,4 @@ class DatabaseOperations(BaseDatabaseOperations):",
                "     cast_data_types = {",
                "+        'AutoField': 'signed integer',",
                "+        'BigAutoField': 'signed integer',",
                "         'CharField': 'char(%(max_length)s)',",
                "diff --git a/django/db/backends/oracle/operations.py b/django/db/backends/oracle/operations.py",
                "index 923b5d118d..62830476bf 100644",
                "--- a/django/db/backends/oracle/operations.py",
                "+++ b/django/db/backends/oracle/operations.py",
                "@@ -54,2 +54,4 @@ END;",
                "     cast_data_types = {",
                "+        'AutoField': 'NUMBER(11)',",
                "+        'BigAutoField': 'NUMBER(19)',",
                "         'TextField': cast_char_field_without_max_length,",
                "diff --git a/django/db/backends/postgresql/operations.py b/django/db/backends/postgresql/operations.py",
                "index 80a28bce46..400f014a42 100644",
                "--- a/django/db/backends/postgresql/operations.py",
                "+++ b/django/db/backends/postgresql/operations.py",
                "@@ -10,2 +10,6 @@ class DatabaseOperations(BaseDatabaseOperations):",
                "     explain_prefix = 'EXPLAIN'",
                "+    cast_data_types = {",
                "+        'AutoField': 'integer',",
                "+        'BigAutoField': 'bigint',",
                "+    }",
                "diff --git a/tests/db_functions/test_cast.py b/tests/db_functions/test_cast.py",
                "index d66bec302f..7cc6bdce0d 100644",
                "--- a/tests/db_functions/test_cast.py",
                "+++ b/tests/db_functions/test_cast.py",
                "@@ -41,2 +41,4 @@ class CastTests(TestCase):",
                "         for field_class in (",
                "+            models.AutoField,",
                "+            models.BigAutoField,",
                "             models.IntegerField,"
            ],
            "changed_files": [
                "django/db/backends/mysql/operations.py",
                "django/db/backends/oracle/operations.py",
                "django/db/backends/postgresql/operations.py",
                "tests/db_functions/test_cast.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29569": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29569",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e7a56eb4f0cc1cef6c3e9e289c0f13071a534370",
            "repository": "https://github.com/django/django",
            "timestamp": 1529410899,
            "hunks": 3,
            "message": "Fixed #28659 -- Fixed LayerMapping crash with null geometry and unique.",
            "diff": [
                "diff --git a/django/contrib/gis/utils/layermapping.py b/django/contrib/gis/utils/layermapping.py",
                "index e4baf56dcb..b184de53ef 100644",
                "--- a/django/contrib/gis/utils/layermapping.py",
                "+++ b/django/contrib/gis/utils/layermapping.py",
                "@@ -560,6 +560,10 @@ class LayerMapping:",
                "                             # just-updated geometry WKT.",
                "-                            geom = getattr(m, self.geom_field).ogr",
                "-                            new = OGRGeometry(kwargs[self.geom_field])",
                "-                            for g in new:",
                "-                                geom.add(g)",
                "+                            geom_value = getattr(m, self.geom_field)",
                "+                            if geom_value is None:",
                "+                                geom = OGRGeometry(kwargs[self.geom_field])",
                "+                            else:",
                "+                                geom = geom_value.ogr",
                "+                                new = OGRGeometry(kwargs[self.geom_field])",
                "+                                for g in new:",
                "+                                    geom.add(g)",
                "                             setattr(m, self.geom_field, geom.wkt)",
                "diff --git a/tests/gis_tests/layermap/models.py b/tests/gis_tests/layermap/models.py",
                "index 9b05056f4e..de1dd6c944 100644",
                "--- a/tests/gis_tests/layermap/models.py",
                "+++ b/tests/gis_tests/layermap/models.py",
                "@@ -19,3 +19,3 @@ class County(NamedModel):",
                "     state = models.ForeignKey(State, models.CASCADE)",
                "-    mpoly = models.MultiPolygonField(srid=4269)  # Multipolygon in NAD83",
                "+    mpoly = models.MultiPolygonField(srid=4269, null=True)  # Multipolygon in NAD83",
                "diff --git a/tests/gis_tests/layermap/tests.py b/tests/gis_tests/layermap/tests.py",
                "index 2406533e66..a1b288eafa 100644",
                "--- a/tests/gis_tests/layermap/tests.py",
                "+++ b/tests/gis_tests/layermap/tests.py",
                "@@ -312,2 +312,13 @@ class LayerMapTest(TestCase):",
                "+    def test_null_geom_with_unique(self):",
                "+        \"\"\"LayerMapping may be created with a unique and a null geometry.\"\"\"",
                "+        State.objects.bulk_create([State(name='Colorado'), State(name='Hawaii'), State(name='Texas')])",
                "+        hw = State.objects.get(name='Hawaii')",
                "+        hu = County.objects.create(name='Honolulu', state=hw, mpoly=None)",
                "+        lm = LayerMapping(County, co_shp, co_mapping, transform=False, unique='name')",
                "+        lm.save(silent=True, strict=True)",
                "+        hu.refresh_from_db()",
                "+        self.assertIsNotNone(hu.mpoly)",
                "+        self.assertEqual(hu.mpoly.ogr.num_coords, 449)",
                "+"
            ],
            "changed_files": [
                "django/contrib/gis/utils/layermapping.py",
                "tests/gis_tests/layermap/models.py",
                "tests/gis_tests/layermap/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "28659": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 28659",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c0e3c65b9d1b26cfc38137b7666ef0e108aab77f",
            "repository": "https://github.com/django/django",
            "timestamp": 1532113037,
            "hunks": 1,
            "message": "Fixed #29563 -- Added result streaming for QuerySet.iterator() on SQLite.",
            "diff": [
                "diff --git a/django/db/backends/sqlite3/features.py b/django/db/backends/sqlite3/features.py",
                "index 4d9f4985d4..770b40a1ba 100644",
                "--- a/django/db/backends/sqlite3/features.py",
                "+++ b/django/db/backends/sqlite3/features.py",
                "@@ -6,7 +6,6 @@ from django.utils.functional import cached_property",
                " class DatabaseFeatures(BaseDatabaseFeatures):",
                "-    # SQLite cannot handle us only partially reading from a cursor's result set",
                "-    # and then writing the same rows to the database in another cursor. This",
                "-    # setting ensures we always read result sets fully into memory all in one",
                "-    # go.",
                "-    can_use_chunked_reads = False",
                "+    # SQLite can read from a cursor since SQLite 3.6.5, subject to the caveat",
                "+    # that statements within a connection aren't isolated from each other. See",
                "+    # https://sqlite.org/isolation.html.",
                "+    can_use_chunked_reads = True",
                "     test_db_allows_multiple_connections = False"
            ],
            "changed_files": [
                "django/db/backends/sqlite3/features.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29563": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29563",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9fee229874367beafd532dad6d0f9ff9676ded0b",
            "repository": "https://github.com/django/django",
            "timestamp": 1533711080,
            "hunks": 3,
            "message": "Fixed #29643 -- Fixed crash when combining Q objects with __in lookups and lists. Regression in fc6528b25ab1834be1a478b405bf8f7ec5cf860c.",
            "diff": [
                "diff --git a/django/utils/tree.py b/django/utils/tree.py",
                "index 2a188acda7..421ad5cd3c 100644",
                "--- a/django/utils/tree.py",
                "+++ b/django/utils/tree.py",
                "@@ -73,3 +73,6 @@ class Node:",
                "     def __hash__(self):",
                "-        return hash((self.__class__, self.connector, self.negated) + tuple(self.children))",
                "+        return hash((self.__class__, self.connector, self.negated) + tuple([",
                "+            tuple(child) if isinstance(child, list) else child",
                "+            for child in self.children",
                "+        ]))",
                "diff --git a/tests/utils_tests/test_tree.py b/tests/utils_tests/test_tree.py",
                "index 65f49c06a6..c59398aedb 100644",
                "--- a/tests/utils_tests/test_tree.py",
                "+++ b/tests/utils_tests/test_tree.py",
                "@@ -25,2 +25,3 @@ class NodeTests(unittest.TestCase):",
                "         node5 = Node(self.node1_children)",
                "+        node6 = Node([['a', 1], ['b', 2]])",
                "         self.assertNotEqual(hash(self.node1), hash(self.node2))",
                "@@ -29,2 +30,3 @@ class NodeTests(unittest.TestCase):",
                "         self.assertEqual(hash(self.node1), hash(node5))",
                "+        self.assertEqual(hash(self.node1), hash(node6))",
                "         self.assertEqual(hash(self.node2), hash(Node()))"
            ],
            "changed_files": [
                "django/utils/tree.py",
                "tests/utils_tests/test_tree.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29643": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29643",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "06a11ef6ecf324db0a1530b8cca727883698f442",
            "repository": "https://github.com/django/django",
            "timestamp": 1527415597,
            "hunks": 2,
            "message": "Fixed #26819 -- Fixed BaseModelFormSet.validate_unique() \"unhashable type: list\" crash.",
            "diff": [
                "diff --git a/django/forms/models.py b/django/forms/models.py",
                "index 7f5e2544dd..aa35ef5f92 100644",
                "--- a/django/forms/models.py",
                "+++ b/django/forms/models.py",
                "@@ -698,4 +698,8 @@ class BaseModelFormSet(BaseFormSet):",
                "                 # Reduce Model instances to their primary key values",
                "-                row_data = tuple(d._get_pk_val() if hasattr(d, '_get_pk_val') else d",
                "-                                 for d in row_data)",
                "+                row_data = tuple(",
                "+                    d._get_pk_val() if hasattr(d, '_get_pk_val')",
                "+                    # Prevent \"unhashable type: list\" errors later on.",
                "+                    else tuple(d) if isinstance(d, list)",
                "+                    else d for d in row_data",
                "+                )",
                "                 if row_data and None not in row_data:",
                "diff --git a/tests/model_formsets/tests.py b/tests/model_formsets/tests.py",
                "index 4d00a589ce..d823a78ae8 100644",
                "--- a/tests/model_formsets/tests.py",
                "+++ b/tests/model_formsets/tests.py",
                "@@ -1461,2 +1461,29 @@ class ModelFormsetTest(TestCase):",
                "+    def test_inlineformset_with_arrayfield(self):",
                "+        class SimpleArrayField(forms.CharField):",
                "+            \"\"\"A proxy for django.contrib.postgres.forms.SimpleArrayField.\"\"\"",
                "+            def to_python(self, value):",
                "+                value = super().to_python(value)",
                "+                return value.split(',') if value else []",
                "+",
                "+        class BookForm(forms.ModelForm):",
                "+            title = SimpleArrayField()",
                "+",
                "+            class Meta:",
                "+                model = Book",
                "+                fields = ('title',)",
                "+",
                "+        BookFormSet = inlineformset_factory(Author, Book, form=BookForm)",
                "+        data = {",
                "+            'book_set-TOTAL_FORMS': '3',",
                "+            'book_set-INITIAL_FORMS': '0',",
                "+            'book_set-MAX_NUM_FORMS': '',",
                "+            'book_set-0-title': 'test1,test2',",
                "+            'book_set-1-title': 'test1,test2',",
                "+            'book_set-2-title': 'test3,test4',",
                "+        }",
                "+        author = Author.objects.create(name='test')",
                "+        formset = BookFormSet(data, instance=author)",
                "+        self.assertEqual(formset.errors, [{}, {'__all__': ['Please correct the duplicate values below.']}, {}])",
                "+",
                "     def test_model_formset_with_custom_pk(self):"
            ],
            "changed_files": [
                "django/forms/models.py",
                "tests/model_formsets/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "26819": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 26819",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cdcf4164bec9dc09465424d7042c3f9d4f0f1fdc",
            "repository": "https://github.com/django/django",
            "timestamp": 1532356201,
            "hunks": 1,
            "message": "Fixed #29528 -- Made URLValidator reject invalid characters in the username and password.",
            "diff": [
                "diff --git a/django/core/validators.py b/django/core/validators.py",
                "index 92394a7eae..c1c9cd1c87 100644",
                "--- a/django/core/validators.py",
                "+++ b/django/core/validators.py",
                "@@ -96,3 +96,3 @@ class URLValidator(RegexValidator):",
                "         r'^(?:[a-z0-9\\.\\-\\+]*)://'  # scheme is validated separately",
                "-        r'(?:\\S+(?::\\S*)?@)?'  # user:pass authentication",
                "+        r'(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?'  # user:pass authentication",
                "         r'(?:' + ipv4_re + '|' + ipv6_re + '|' + host_re + ')'"
            ],
            "changed_files": [
                "django/core/validators.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29528": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29528",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8a0b9051878d1f604ea40e9441be1bc86ca97cf2",
            "repository": "https://github.com/django/django",
            "timestamp": 1533312786,
            "hunks": 2,
            "message": "[1.11.x] Refs #29499 -- Skipped QuerySet.update_or_create() test that fails on MySQL.",
            "diff": [
                "diff --git a/tests/get_or_create/tests.py b/tests/get_or_create/tests.py",
                "index ad6030dda2..76db80fe90 100644",
                "--- a/tests/get_or_create/tests.py",
                "+++ b/tests/get_or_create/tests.py",
                "@@ -6,2 +6,3 @@ from datetime import date, datetime, timedelta",
                " from threading import Thread",
                "+from unittest import skipIf",
                "@@ -511,2 +512,3 @@ class UpdateOrCreateTransactionTests(TransactionTestCase):",
                "+    @skipIf(connection.vendor == 'mysql', \"MySQL's default isolation level is repeatable read.\")",
                "     @skipUnlessDBFeature('has_select_for_update')"
            ],
            "changed_files": [
                "tests/get_or_create/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29499": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.11.16",
                "1.11.17",
                "1.11.18",
                "1.11.19",
                "1.11.20",
                "1.11.21",
                "1.11.22",
                "1.11.23",
                "1.11.24",
                "1.11.25",
                "1.11.26",
                "1.11.27",
                "1.11.28",
                "1.11.29"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29499",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "65503ca09798bffbe8226c3a8a7953906042b2ee",
            "repository": "https://github.com/django/django",
            "timestamp": 1532037933,
            "hunks": 48,
            "message": "Fixed #29040 -- Made test database creation messages use a consistent output stream.",
            "diff": [
                "diff --git a/django/db/backends/base/creation.py b/django/db/backends/base/creation.py",
                "index fe1d1b4dea..f36d60a5fe 100644",
                "--- a/django/db/backends/base/creation.py",
                "+++ b/django/db/backends/base/creation.py",
                "@@ -1 +1,2 @@",
                "+import os",
                " import sys",
                "@@ -28,2 +29,5 @@ class BaseDatabaseCreation:",
                "+    def log(self, msg):",
                "+        sys.stderr.write(msg + os.linesep)",
                "+",
                "     def create_test_db(self, verbosity=1, autoclobber=False, serialize=True, keepdb=False):",
                "@@ -43,3 +47,3 @@ class BaseDatabaseCreation:",
                "-            print(\"%s test database for alias %s...\" % (",
                "+            self.log('%s test database for alias %s...' % (",
                "                 action,",
                "@@ -172,4 +176,3 @@ class BaseDatabaseCreation:",
                "-                sys.stderr.write(",
                "-                    \"Got an error creating the test database: %s\\n\" % e)",
                "+                self.log('Got an error creating the test database: %s' % e)",
                "                 if not autoclobber:",
                "@@ -181,3 +184,3 @@ class BaseDatabaseCreation:",
                "                         if verbosity >= 1:",
                "-                            print(\"Destroying old test database for alias %s...\" % (",
                "+                            self.log('Destroying old test database for alias %s...' % (",
                "                                 self._get_database_display_str(verbosity, test_database_name),",
                "@@ -187,7 +190,6 @@ class BaseDatabaseCreation:",
                "                     except Exception as e:",
                "-                        sys.stderr.write(",
                "-                            \"Got an error recreating the test database: %s\\n\" % e)",
                "+                        self.log('Got an error recreating the test database: %s' % e)",
                "                         sys.exit(2)",
                "                 else:",
                "-                    print(\"Tests cancelled.\")",
                "+                    self.log('Tests cancelled.')",
                "                     sys.exit(1)",
                "@@ -206,3 +208,3 @@ class BaseDatabaseCreation:",
                "                 action = 'Using existing clone'",
                "-            print(\"%s for alias %s...\" % (",
                "+            self.log('%s for alias %s...' % (",
                "                 action,",
                "@@ -248,3 +250,3 @@ class BaseDatabaseCreation:",
                "                 action = 'Preserving'",
                "-            print(\"%s test database for alias %s...\" % (",
                "+            self.log('%s test database for alias %s...' % (",
                "                 action,",
                "diff --git a/django/db/backends/mysql/creation.py b/django/db/backends/mysql/creation.py",
                "index 190d5cc564..3c702d6979 100644",
                "--- a/django/db/backends/mysql/creation.py",
                "+++ b/django/db/backends/mysql/creation.py",
                "@@ -35,3 +35,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                 # All errors except \"database exists\" (1007) cancel tests.",
                "-                sys.stderr.write('Got an error creating the test database: %s\\n' % e)",
                "+                self.log('Got an error creating the test database: %s' % e)",
                "                 sys.exit(2)",
                "@@ -53,3 +53,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                     if verbosity >= 1:",
                "-                        print(\"Destroying old test database for alias %s...\" % (",
                "+                        self.log('Destroying old test database for alias %s...' % (",
                "                             self._get_database_display_str(verbosity, target_database_name),",
                "@@ -59,3 +59,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                 except Exception as e:",
                "-                    sys.stderr.write(\"Got an error recreating the test database: %s\\n\" % e)",
                "+                    self.log('Got an error recreating the test database: %s' % e)",
                "                     sys.exit(2)",
                "diff --git a/django/db/backends/oracle/creation.py b/django/db/backends/oracle/creation.py",
                "index 8f3d847d3a..1f30844330 100644",
                "--- a/django/db/backends/oracle/creation.py",
                "+++ b/django/db/backends/oracle/creation.py",
                "@@ -38,3 +38,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                         # All errors except \"tablespace already exists\" cancel tests",
                "-                        sys.stderr.write(\"Got an error creating the test database: %s\\n\" % e)",
                "+                        self.log('Got an error creating the test database: %s' % e)",
                "                         sys.exit(2)",
                "@@ -46,3 +46,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                         if verbosity >= 1:",
                "-                            print(\"Destroying old test database for alias '%s'...\" % self.connection.alias)",
                "+                            self.log(\"Destroying old test database for alias '%s'...\" % self.connection.alias)",
                "                         try:",
                "@@ -55,6 +55,6 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                                 # Ran into a database error that isn't about leftover objects in the tablespace",
                "-                                sys.stderr.write(\"Got an error destroying the old test database: %s\\n\" % e)",
                "+                                self.log('Got an error destroying the old test database: %s' % e)",
                "                                 sys.exit(2)",
                "                         except Exception as e:",
                "-                            sys.stderr.write(\"Got an error destroying the old test database: %s\\n\" % e)",
                "+                            self.log('Got an error destroying the old test database: %s' % e)",
                "                             sys.exit(2)",
                "@@ -63,6 +63,6 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                         except Exception as e:",
                "-                            sys.stderr.write(\"Got an error recreating the test database: %s\\n\" % e)",
                "+                            self.log('Got an error recreating the test database: %s' % e)",
                "                             sys.exit(2)",
                "                     else:",
                "-                        print(\"Tests cancelled.\")",
                "+                        self.log('Tests cancelled.')",
                "                         sys.exit(1)",
                "@@ -71,3 +71,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                 if verbosity >= 1:",
                "-                    print(\"Creating test user...\")",
                "+                    self.log('Creating test user...')",
                "                 try:",
                "@@ -77,3 +77,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                         # All errors except \"user already exists\" cancel tests",
                "-                        sys.stderr.write(\"Got an error creating the test user: %s\\n\" % e)",
                "+                        self.log('Got an error creating the test user: %s' % e)",
                "                         sys.exit(2)",
                "@@ -86,12 +86,12 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                             if verbosity >= 1:",
                "-                                print(\"Destroying old test user...\")",
                "+                                self.log('Destroying old test user...')",
                "                             self._destroy_test_user(cursor, parameters, verbosity)",
                "                             if verbosity >= 1:",
                "-                                print(\"Creating test user...\")",
                "+                                self.log('Creating test user...')",
                "                             self._create_test_user(cursor, parameters, verbosity, keepdb)",
                "                         except Exception as e:",
                "-                            sys.stderr.write(\"Got an error recreating the test user: %s\\n\" % e)",
                "+                            self.log('Got an error recreating the test user: %s' % e)",
                "                             sys.exit(2)",
                "                     else:",
                "-                        print(\"Tests cancelled.\")",
                "+                        self.log('Tests cancelled.')",
                "                         sys.exit(1)",
                "@@ -132,7 +132,9 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "         # The easy fix is to drop the test user -- but are we allowed to do so?",
                "-        print(\"There are objects in the old test database which prevent its destruction.\")",
                "-        print(\"If they belong to the test user, deleting the user will allow the test \"",
                "-              \"database to be recreated.\")",
                "-        print(\"Otherwise, you will need to find and remove each of these objects, \"",
                "-              \"or use a different tablespace.\\n\")",
                "+        self.log(",
                "+            'There are objects in the old test database which prevent its destruction.\\n'",
                "+            'If they belong to the test user, deleting the user will allow the test '",
                "+            'database to be recreated.\\n'",
                "+            'Otherwise, you will need to find and remove each of these objects, '",
                "+            'or use a different tablespace.\\n'",
                "+        )",
                "         if self._test_user_create():",
                "@@ -143,6 +145,6 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                     if verbosity >= 1:",
                "-                        print(\"Destroying old test user...\")",
                "+                        self.log('Destroying old test user...')",
                "                     self._destroy_test_user(cursor, parameters, verbosity)",
                "                 except Exception as e:",
                "-                    sys.stderr.write(\"Got an error destroying the test user: %s\\n\" % e)",
                "+                    self.log('Got an error destroying the test user: %s' % e)",
                "                     sys.exit(2)",
                "@@ -150,14 +152,14 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                     if verbosity >= 1:",
                "-                        print(\"Destroying old test database for alias '%s'...\" % self.connection.alias)",
                "+                        self.log(\"Destroying old test database for alias '%s'...\" % self.connection.alias)",
                "                     self._execute_test_db_destruction(cursor, parameters, verbosity)",
                "                 except Exception as e:",
                "-                    sys.stderr.write(\"Got an error destroying the test database: %s\\n\" % e)",
                "+                    self.log('Got an error destroying the test database: %s' % e)",
                "                     sys.exit(2)",
                "             else:",
                "-                print(\"Tests cancelled -- test database cannot be recreated.\")",
                "+                self.log('Tests cancelled -- test database cannot be recreated.')",
                "                 sys.exit(1)",
                "         else:",
                "-            print(\"Django is configured to use pre-existing test user '%s',\"",
                "-                  \" and will not attempt to delete it.\\n\" % parameters['user'])",
                "-            print(\"Tests cancelled -- test database cannot be recreated.\")",
                "+            self.log(\"Django is configured to use pre-existing test user '%s',\"",
                "+                     \" and will not attempt to delete it.\" % parameters['user'])",
                "+            self.log('Tests cancelled -- test database cannot be recreated.')",
                "             sys.exit(1)",
                "@@ -176,3 +178,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                 if verbosity >= 1:",
                "-                    print('Destroying test user...')",
                "+                    self.log('Destroying test user...')",
                "                 self._destroy_test_user(cursor, parameters, verbosity)",
                "@@ -180,3 +182,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                 if verbosity >= 1:",
                "-                    print('Destroying test database tables...')",
                "+                    self.log('Destroying test database tables...')",
                "                 self._execute_test_db_destruction(cursor, parameters, verbosity)",
                "@@ -186,3 +188,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "         if verbosity >= 2:",
                "-            print(\"_create_test_db(): dbname = %s\" % parameters['user'])",
                "+            self.log('_create_test_db(): dbname = %s' % parameters['user'])",
                "         statements = [",
                "@@ -203,3 +205,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "         if verbosity >= 2:",
                "-            print(\"_create_test_user(): username = %s\" % parameters['user'])",
                "+            self.log('_create_test_user(): username = %s' % parameters['user'])",
                "         statements = [",
                "@@ -229,3 +231,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "         if not success and verbosity >= 2:",
                "-            print(\"Failed to grant CREATE VIEW permission to test user. This may be ok.\")",
                "+            self.log('Failed to grant CREATE VIEW permission to test user. This may be ok.')",
                "@@ -233,3 +235,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "         if verbosity >= 2:",
                "-            print(\"_execute_test_db_destruction(): dbname=%s\" % parameters['user'])",
                "+            self.log('_execute_test_db_destruction(): dbname=%s' % parameters['user'])",
                "         statements = [",
                "@@ -242,4 +244,4 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "         if verbosity >= 2:",
                "-            print(\"_destroy_test_user(): user=%s\" % parameters['user'])",
                "-            print(\"Be patient.  This can take some time...\")",
                "+            self.log('_destroy_test_user(): user=%s' % parameters['user'])",
                "+            self.log('Be patient.  This can take some time...')",
                "         statements = [",
                "@@ -258,3 +260,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                 if (not allow_quiet_fail) or verbosity >= 2:",
                "-                    sys.stderr.write(\"Failed (%s)\\n\" % (err))",
                "+                    self.log('Failed (%s)' % (err))",
                "                 raise",
                "diff --git a/django/db/backends/postgresql/creation.py b/django/db/backends/postgresql/creation.py",
                "index 0169fc5c1f..8b6c4eff19 100644",
                "--- a/django/db/backends/postgresql/creation.py",
                "+++ b/django/db/backends/postgresql/creation.py",
                "@@ -36,3 +36,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                 # All errors except \"database already exists\" cancel tests.",
                "-                sys.stderr.write('Got an error creating the test database: %s\\n' % e)",
                "+                self.log('Got an error creating the test database: %s' % e)",
                "                 sys.exit(2)",
                "@@ -60,3 +60,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                     if verbosity >= 1:",
                "-                        print(\"Destroying old test database for alias %s...\" % (",
                "+                        self.log('Destroying old test database for alias %s...' % (",
                "                             self._get_database_display_str(verbosity, target_database_name),",
                "@@ -66,3 +66,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                 except Exception as e:",
                "-                    sys.stderr.write(\"Got an error cloning the test database: %s\\n\" % e)",
                "+                    self.log('Got an error cloning the test database: %s' % e)",
                "                     sys.exit(2)",
                "diff --git a/django/db/backends/sqlite3/creation.py b/django/db/backends/sqlite3/creation.py",
                "index 345954eb49..7e929f3451 100644",
                "--- a/django/db/backends/sqlite3/creation.py",
                "+++ b/django/db/backends/sqlite3/creation.py",
                "@@ -27,3 +27,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "             if verbosity >= 1:",
                "-                print(\"Destroying old test database for alias %s...\" % (",
                "+                self.log('Destroying old test database for alias %s...' % (",
                "                     self._get_database_display_str(verbosity, test_database_name),",
                "@@ -40,6 +40,6 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                     except Exception as e:",
                "-                        sys.stderr.write(\"Got an error deleting the old test database: %s\\n\" % e)",
                "+                        self.log('Got an error deleting the old test database: %s' % e)",
                "                         sys.exit(2)",
                "                 else:",
                "-                    print(\"Tests cancelled.\")",
                "+                    self.log('Tests cancelled.')",
                "                     sys.exit(1)",
                "@@ -66,3 +66,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                 if verbosity >= 1:",
                "-                    print(\"Destroying old test database for alias %s...\" % (",
                "+                    self.log('Destroying old test database for alias %s...' % (",
                "                         self._get_database_display_str(verbosity, target_database_name),",
                "@@ -72,3 +72,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "                 except Exception as e:",
                "-                    sys.stderr.write(\"Got an error deleting the old test database: %s\\n\" % e)",
                "+                    self.log('Got an error deleting the old test database: %s' % e)",
                "                     sys.exit(2)",
                "@@ -77,3 +77,3 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "             except Exception as e:",
                "-                sys.stderr.write(\"Got an error cloning the test database: %s\\n\" % e)",
                "+                self.log('Got an error cloning the test database: %s' % e)",
                "                 sys.exit(2)"
            ],
            "changed_files": [
                "django/db/backends/base/creation.py",
                "django/db/backends/mysql/creation.py",
                "django/db/backends/oracle/creation.py",
                "django/db/backends/postgresql/creation.py",
                "django/db/backends/sqlite3/creation.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29040": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29040",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1a28dc3887e8d66d5e3ff08cf7fb0a6212b873e5",
            "repository": "https://github.com/django/django",
            "timestamp": 1532136185,
            "hunks": 5,
            "message": "Fixed #29582 -- Fixed a crash when using SearchVector with non text-fields. The PostgreSQL concat() function handles nulls and non-text values better than the || operator.",
            "diff": [
                "diff --git a/django/contrib/postgres/search.py b/django/contrib/postgres/search.py",
                "index a14d510208..7bda2291a0 100644",
                "--- a/django/contrib/postgres/search.py",
                "+++ b/django/contrib/postgres/search.py",
                "@@ -2,3 +2,2 @@ from django.db.models import Field, FloatField",
                " from django.db.models.expressions import CombinedExpression, Func, Value",
                "-from django.db.models.functions import Coalesce",
                " from django.db.models.lookups import Lookup",
                "@@ -48,3 +47,4 @@ class SearchVector(SearchVectorCombinable, Func):",
                "     function = 'to_tsvector'",
                "-    arg_joiner = \" || ' ' || \"",
                "+    arg_joiner = \", ' ',\"",
                "+    template = '%(function)s(concat(%(expressions)s))'",
                "     output_field = SearchVectorField()",
                "@@ -54,5 +54,2 @@ class SearchVector(SearchVectorCombinable, Func):",
                "         super().__init__(*expressions, **extra)",
                "-        self.source_expressions = [",
                "-            Coalesce(expression, Value('')) for expression in self.source_expressions",
                "-        ]",
                "         self.config = self.extra.get('config', self.config)",
                "@@ -77,3 +74,3 @@ class SearchVector(SearchVectorCombinable, Func):",
                "                 config_sql, config_params = compiler.compile(self.config)",
                "-                template = \"%(function)s({}::regconfig, %(expressions)s)\".format(config_sql.replace('%', '%%'))",
                "+                template = \"%(function)s({}::regconfig, concat(%(expressions)s))\".format(config_sql.replace('%', '%%'))",
                "             else:",
                "diff --git a/tests/postgres_tests/test_search.py b/tests/postgres_tests/test_search.py",
                "index 944690692a..405de8cf0e 100644",
                "--- a/tests/postgres_tests/test_search.py",
                "+++ b/tests/postgres_tests/test_search.py",
                "@@ -157,2 +157,8 @@ class MultipleFieldsTest(GrailTestData, PostgreSQLTestCase):",
                "+    def test_search_with_non_text(self):",
                "+        searched = Line.objects.annotate(",
                "+            search=SearchVector('id'),",
                "+        ).filter(search=str(self.crowd.id))",
                "+        self.assertSequenceEqual(searched, [self.crowd])",
                "+",
                "     def test_config_query_explicit(self):"
            ],
            "changed_files": [
                "django/contrib/postgres/search.py",
                "tests/postgres_tests/test_search.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29582": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29582",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1084bcc4b78c0a5810a53a32c9678c3563380c9e",
            "repository": "https://github.com/django/django",
            "timestamp": 1532033080,
            "hunks": 15,
            "message": "[2.1.x] Fixed #29578 -- Made numberformat.format() honor forced l10n usage. Thanks Sassan Haradji for the report. Backport of 0adfba968e28cfb4e4d681e658866debbbd68089 from master",
            "diff": [
                "diff --git a/django/utils/formats.py b/django/utils/formats.py",
                "index bba45e3677..d5e5a555f6 100644",
                "--- a/django/utils/formats.py",
                "+++ b/django/utils/formats.py",
                "@@ -181,3 +181,4 @@ def number_format(value, decimal_pos=None, use_l10n=None, force_grouping=False):",
                "         get_format('THOUSAND_SEPARATOR', lang, use_l10n=use_l10n),",
                "-        force_grouping=force_grouping",
                "+        force_grouping=force_grouping,",
                "+        use_l10n=use_l10n,",
                "     )",
                "diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py",
                "index c6f9af6893..52d75d6edd 100644",
                "--- a/django/utils/numberformat.py",
                "+++ b/django/utils/numberformat.py",
                "@@ -7,3 +7,3 @@ from django.utils.safestring import mark_safe",
                " def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',",
                "-           force_grouping=False):",
                "+           force_grouping=False, use_l10n=None):",
                "     \"\"\"",
                "@@ -20,3 +20,3 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',",
                "     \"\"\"",
                "-    use_grouping = settings.USE_L10N and settings.USE_THOUSAND_SEPARATOR",
                "+    use_grouping = (use_l10n or (use_l10n is None and settings.USE_L10N)) and settings.USE_THOUSAND_SEPARATOR",
                "     use_grouping = use_grouping or force_grouping",
                "diff --git a/tests/admin_views/test_actions.py b/tests/admin_views/test_actions.py",
                "index c0ea30fcf7..1069f4a157 100644",
                "--- a/tests/admin_views/test_actions.py",
                "+++ b/tests/admin_views/test_actions.py",
                "@@ -74,3 +74,3 @@ class AdminActionsTest(TestCase):",
                "-    @override_settings(USE_THOUSAND_SEPARATOR=True, USE_L10N=True)",
                "+    @override_settings(USE_THOUSAND_SEPARATOR=True, USE_L10N=True, NUMBER_GROUPING=3)",
                "     def test_non_localized_pk(self):",
                "diff --git a/tests/i18n/tests.py b/tests/i18n/tests.py",
                "index 3837ec9132..9a159ff55a 100644",
                "--- a/tests/i18n/tests.py",
                "+++ b/tests/i18n/tests.py",
                "@@ -1041,20 +1041,22 @@ class FormattingTests(SimpleTestCase):",
                "         \"\"\"",
                "-        context = Context({'float': 3.14, 'date': datetime.date(2016, 12, 31)})",
                "+        context = Context({'int': 1455, 'float': 3.14, 'date': datetime.date(2016, 12, 31)})",
                "         template1 = Template(",
                "-            '{% load l10n %}{% localize %}{{ float }}/{{ date }}{% endlocalize %}; '",
                "-            '{% localize on %}{{ float }}/{{ date }}{% endlocalize %}'",
                "+            '{% load l10n %}{% localize %}{{ int }}/{{ float }}/{{ date }}{% endlocalize %}; '",
                "+            '{% localize on %}{{ int }}/{{ float }}/{{ date }}{% endlocalize %}'",
                "         )",
                "         template2 = Template(",
                "-            '{% load l10n %}{{ float }}/{{ date }}; '",
                "-            '{% localize off %}{{ float }}/{{ date }};{% endlocalize %} '",
                "-            '{{ float }}/{{ date }}'",
                "+            '{% load l10n %}{{ int }}/{{ float }}/{{ date }}; '",
                "+            '{% localize off %}{{ int }}/{{ float }}/{{ date }};{% endlocalize %} '",
                "+            '{{ int }}/{{ float }}/{{ date }}'",
                "         )",
                "         template3 = Template(",
                "-            '{% load l10n %}{{ float }}/{{ date }}; {{ float|unlocalize }}/{{ date|unlocalize }}'",
                "+            '{% load l10n %}{{ int }}/{{ float }}/{{ date }}; '",
                "+            '{{ int|unlocalize }}/{{ float|unlocalize }}/{{ date|unlocalize }}'",
                "         )",
                "         template4 = Template(",
                "-            '{% load l10n %}{{ float }}/{{ date }}; {{ float|localize }}/{{ date|localize }}'",
                "+            '{% load l10n %}{{ int }}/{{ float }}/{{ date }}; '",
                "+            '{{ int|localize }}/{{ float|localize }}/{{ date|localize }}'",
                "         )",
                "-        expected_localized = '3,14/31. Dezember 2016'",
                "-        expected_unlocalized = '3.14/Dez. 31, 2016'",
                "+        expected_localized = '1.455/3,14/31. Dezember 2016'",
                "+        expected_unlocalized = '1455/3.14/Dez. 31, 2016'",
                "         output1 = '; '.join([expected_localized, expected_localized])",
                "@@ -1064,6 +1066,6 @@ class FormattingTests(SimpleTestCase):",
                "         with translation.override('de', deactivate=True):",
                "-            with self.settings(USE_L10N=False):",
                "+            with self.settings(USE_L10N=False, USE_THOUSAND_SEPARATOR=True):",
                "                 self.assertEqual(template1.render(context), output1)",
                "                 self.assertEqual(template4.render(context), output4)",
                "-            with self.settings(USE_L10N=True):",
                "+            with self.settings(USE_L10N=True, USE_THOUSAND_SEPARATOR=True):",
                "                 self.assertEqual(template1.render(context), output1)",
                "diff --git a/tests/utils_tests/test_numberformat.py b/tests/utils_tests/test_numberformat.py",
                "index 3b815adfb8..b78b37551d 100644",
                "--- a/tests/utils_tests/test_numberformat.py",
                "+++ b/tests/utils_tests/test_numberformat.py",
                "@@ -2,4 +2,4 @@ from decimal import Decimal",
                " from sys import float_info",
                "-from unittest import TestCase",
                "+from django.test import SimpleTestCase",
                " from django.utils.numberformat import format as nformat",
                "@@ -7,3 +7,3 @@ from django.utils.numberformat import format as nformat",
                "-class TestNumberFormat(TestCase):",
                "+class TestNumberFormat(SimpleTestCase):",
                "@@ -16,2 +16,7 @@ class TestNumberFormat(TestCase):",
                "         self.assertEqual(nformat(-1234.33, '.', decimal_pos=1), '-1234.3')",
                "+        # The use_l10n parameter can force thousand grouping behavior.",
                "+        with self.settings(USE_THOUSAND_SEPARATOR=True, USE_L10N=True):",
                "+            self.assertEqual(nformat(1234, '.', grouping=3, thousand_sep=',', use_l10n=False), '1234')",
                "+        with self.settings(USE_THOUSAND_SEPARATOR=True, USE_L10N=False):",
                "+            self.assertEqual(nformat(1234, '.', grouping=3, thousand_sep=',', use_l10n=True), '1,234')"
            ],
            "changed_files": [
                "django/utils/formats.py",
                "django/utils/numberformat.py",
                "tests/admin_views/test_actions.py",
                "tests/i18n/tests.py",
                "tests/utils_tests/test_numberformat.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29578": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1",
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29578",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "730173d1c5cf210d8e3bd951fa49f64b9bc561ca",
            "repository": "https://github.com/django/django",
            "timestamp": 1533679488,
            "hunks": 4,
            "message": "Fixed #29623 -- Fixed translation failure of DurationField's \"overflow\" error message.",
            "diff": [
                "diff --git a/django/forms/fields.py b/django/forms/fields.py",
                "index 370f78e8b5..6e19c79144 100644",
                "--- a/django/forms/fields.py",
                "+++ b/django/forms/fields.py",
                "@@ -470,8 +470,3 @@ class DurationField(Field):",
                "         'invalid': _('Enter a valid duration.'),",
                "-        'overflow': _(",
                "-            'The number of days must be between {min_days} and {max_days}.'.format(",
                "-                min_days=datetime.timedelta.min.days,",
                "-                max_days=datetime.timedelta.max.days,",
                "-            )",
                "-        )",
                "+        'overflow': _('The number of days must be between {min_days} and {max_days}.')",
                "     }",
                "@@ -491,3 +486,6 @@ class DurationField(Field):",
                "         except OverflowError:",
                "-            raise ValidationError(self.error_messages['overflow'], code='overflow')",
                "+            raise ValidationError(self.error_messages['overflow'].format(",
                "+                min_days=datetime.timedelta.min.days,",
                "+                max_days=datetime.timedelta.max.days,",
                "+            ), code='overflow')",
                "         if value is None:",
                "diff --git a/tests/forms_tests/field_tests/test_durationfield.py b/tests/forms_tests/field_tests/test_durationfield.py",
                "index 4eac37c102..2c2e17acd3 100644",
                "--- a/tests/forms_tests/field_tests/test_durationfield.py",
                "+++ b/tests/forms_tests/field_tests/test_durationfield.py",
                "@@ -5,2 +5,3 @@ from django.forms import DurationField",
                " from django.test import SimpleTestCase",
                "+from django.utils import translation",
                " from django.utils.duration import duration_string",
                "@@ -33,2 +34,11 @@ class DurationFieldTest(FormFieldAssertionsMixin, SimpleTestCase):",
                "+    def test_overflow_translation(self):",
                "+        msg = \"Le nombre de jours doit \u00c3\u00aatre entre {min_days} et {max_days}.\".format(",
                "+            min_days=datetime.timedelta.min.days,",
                "+            max_days=datetime.timedelta.max.days,",
                "+        )",
                "+        with translation.override('fr'):",
                "+            with self.assertRaisesMessage(ValidationError, msg):",
                "+                DurationField().clean('1000000000 00:00:00')",
                "+",
                "     def test_durationfield_render(self):"
            ],
            "changed_files": [
                "django/forms/fields.py",
                "tests/forms_tests/field_tests/test_durationfield.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29623": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29623",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "55810d94d03728dcad9f53d5b9e21565627aeade",
            "repository": "https://github.com/django/django",
            "timestamp": 1532112854,
            "hunks": 4,
            "message": "Refs #29563 -- Fixed SQLCompiler.execute_sql() to respect DatabaseFeatures.can_use_chunked_reads.",
            "diff": [
                "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py",
                "index 3b91eaa35b..66ff004b6e 100644",
                "--- a/django/db/models/sql/compiler.py",
                "+++ b/django/db/models/sql/compiler.py",
                "@@ -1091,3 +1091,3 @@ class SQLCompiler:",
                "         )",
                "-        if not chunked_fetch and not self.connection.features.can_use_chunked_reads:",
                "+        if not chunked_fetch or not self.connection.features.can_use_chunked_reads:",
                "             try:",
                "@@ -1095,3 +1095,4 @@ class SQLCompiler:",
                "                 # structure as normally, but ensure it is all read into memory",
                "-                # before going any further. Use chunked_fetch if requested.",
                "+                # before going any further. Use chunked_fetch if requested,",
                "+                # unless the database doesn't support it.",
                "                 return list(result)",
                "diff --git a/tests/queries/test_iterator.py b/tests/queries/test_iterator.py",
                "index 56f42c2191..7fc37b00a1 100644",
                "--- a/tests/queries/test_iterator.py",
                "+++ b/tests/queries/test_iterator.py",
                "@@ -3,2 +3,3 @@ from unittest import mock",
                "+from django.db import connections",
                " from django.db.models.sql.compiler import cursor_iter",
                "@@ -39 +40,13 @@ class QuerySetIteratorTests(TestCase):",
                "         self.assertEqual(mock_args[self.itersize_index_in_mock_args], batch_size)",
                "+",
                "+    def test_no_chunked_reads(self):",
                "+        \"\"\"",
                "+        If the database backend doesn't support chunked reads, then the",
                "+        result of SQLCompiler.execute_sql() is a list.",
                "+        \"\"\"",
                "+        qs = Article.objects.all()",
                "+        compiler = qs.query.get_compiler(using=qs.db)",
                "+        features = connections[qs.db].features",
                "+        with mock.patch.object(features, 'can_use_chunked_reads', False):",
                "+            result = compiler.execute_sql(chunked_fetch=True)",
                "+        self.assertIsInstance(result, list)"
            ],
            "changed_files": [
                "django/db/models/sql/compiler.py",
                "tests/queries/test_iterator.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29563": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29563",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4c36e9e492b5c127d839ebf280fdf5556af8e824",
            "repository": "https://github.com/django/django",
            "timestamp": 1512467284,
            "hunks": 5,
            "message": "Fixed #28887 -- Added SpGistIndex to django.contrib.postgres.",
            "diff": [
                "diff --git a/django/contrib/postgres/indexes.py b/django/contrib/postgres/indexes.py",
                "index 3b77b97f3e..43c5588d58 100644",
                "--- a/django/contrib/postgres/indexes.py",
                "+++ b/django/contrib/postgres/indexes.py",
                "@@ -3,3 +3,3 @@ from django.utils.functional import cached_property",
                "-__all__ = ['BrinIndex', 'GinIndex', 'GistIndex', 'HashIndex']",
                "+__all__ = ['BrinIndex', 'GinIndex', 'GistIndex', 'HashIndex', 'SpGistIndex']",
                "@@ -120 +120,21 @@ class HashIndex(PostgresIndex):",
                "         return with_params",
                "+",
                "+",
                "+class SpGistIndex(PostgresIndex):",
                "+    suffix = 'spgist'",
                "+",
                "+    def __init__(self, *, fillfactor=None, **kwargs):",
                "+        self.fillfactor = fillfactor",
                "+        super().__init__(**kwargs)",
                "+",
                "+    def deconstruct(self):",
                "+        path, args, kwargs = super().deconstruct()",
                "+        if self.fillfactor is not None:",
                "+            kwargs['fillfactor'] = self.fillfactor",
                "+        return path, args, kwargs",
                "+",
                "+    def get_with_params(self):",
                "+        with_params = []",
                "+        if self.fillfactor is not None:",
                "+            with_params.append('fillfactor = %d' % self.fillfactor)",
                "+        return with_params",
                "diff --git a/tests/postgres_tests/test_indexes.py b/tests/postgres_tests/test_indexes.py",
                "index dcb285cc1c..b07716e40d 100644",
                "--- a/tests/postgres_tests/test_indexes.py",
                "+++ b/tests/postgres_tests/test_indexes.py",
                "@@ -1,3 +1,3 @@",
                " from django.contrib.postgres.indexes import (",
                "-    BrinIndex, GinIndex, GistIndex, HashIndex,",
                "+    BrinIndex, GinIndex, GistIndex, HashIndex, SpGistIndex,",
                " )",
                "@@ -101,2 +101,16 @@ class HashIndexTests(IndexTestMixin, PostgreSQLTestCase):",
                "+class SpGistIndexTests(IndexTestMixin, PostgreSQLTestCase):",
                "+    index_class = SpGistIndex",
                "+",
                "+    def test_suffix(self):",
                "+        self.assertEqual(SpGistIndex.suffix, 'spgist')",
                "+",
                "+    def test_deconstruction(self):",
                "+        index = SpGistIndex(fields=['title'], name='test_title_spgist', fillfactor=80)",
                "+        path, args, kwargs = index.deconstruct()",
                "+        self.assertEqual(path, 'django.contrib.postgres.indexes.SpGistIndex')",
                "+        self.assertEqual(args, ())",
                "+        self.assertEqual(kwargs, {'fields': ['title'], 'name': 'test_title_spgist', 'fillfactor': 80})",
                "+",
                "+",
                " class SchemaTests(PostgreSQLTestCase):",
                "@@ -219 +233,29 @@ class SchemaTests(PostgreSQLTestCase):",
                "         self.assertNotIn(index_name, self.get_constraints(CharFieldModel._meta.db_table))",
                "+",
                "+    def test_spgist_index(self):",
                "+        # Ensure the table is there and doesn't have an index.",
                "+        self.assertNotIn('field', self.get_constraints(CharFieldModel._meta.db_table))",
                "+        # Add the index.",
                "+        index_name = 'char_field_model_field_spgist'",
                "+        index = SpGistIndex(fields=['field'], name=index_name)",
                "+        with connection.schema_editor() as editor:",
                "+            editor.add_index(CharFieldModel, index)",
                "+        constraints = self.get_constraints(CharFieldModel._meta.db_table)",
                "+        # The index was added.",
                "+        self.assertEqual(constraints[index_name]['type'], SpGistIndex.suffix)",
                "+        # Drop the index.",
                "+        with connection.schema_editor() as editor:",
                "+            editor.remove_index(CharFieldModel, index)",
                "+        self.assertNotIn(index_name, self.get_constraints(CharFieldModel._meta.db_table))",
                "+",
                "+    def test_spgist_parameters(self):",
                "+        index_name = 'integer_array_spgist_fillfactor'",
                "+        index = SpGistIndex(fields=['field'], name=index_name, fillfactor=80)",
                "+        with connection.schema_editor() as editor:",
                "+            editor.add_index(CharFieldModel, index)",
                "+        constraints = self.get_constraints(CharFieldModel._meta.db_table)",
                "+        self.assertEqual(constraints[index_name]['type'], SpGistIndex.suffix)",
                "+        self.assertEqual(constraints[index_name]['options'], ['fillfactor=80'])",
                "+        with connection.schema_editor() as editor:",
                "+            editor.remove_index(CharFieldModel, index)",
                "+        self.assertNotIn(index_name, self.get_constraints(CharFieldModel._meta.db_table))"
            ],
            "changed_files": [
                "django/contrib/postgres/indexes.py",
                "tests/postgres_tests/test_indexes.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "28887": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 28887",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "793e9bb35af34aa11320866bcc6ad8edaf1480a7",
            "repository": "https://github.com/django/django",
            "timestamp": 1533230988,
            "hunks": 12,
            "message": "Fixed #29628 -- Made createsuperuser validate password against username and required fields.",
            "diff": [
                "diff --git a/django/contrib/auth/management/commands/createsuperuser.py b/django/contrib/auth/management/commands/createsuperuser.py",
                "index fb3cda7662..541711606c 100644",
                "--- a/django/contrib/auth/management/commands/createsuperuser.py",
                "+++ b/django/contrib/auth/management/commands/createsuperuser.py",
                "@@ -110,2 +110,7 @@ class Command(BaseCommand):",
                "+            user_data[self.UserModel.USERNAME_FIELD] = username",
                "+            fake_user_data[self.UserModel.USERNAME_FIELD] = (",
                "+                self.username_field.remote_field.model(username) if self.username_field.remote_field",
                "+                else username",
                "+            )",
                "             # Prompt for required fields.",
                "@@ -136,24 +141,29 @@ class Command(BaseCommand):",
                "                             fake_user_data[field_name] = field.remote_field.model(input_value)",
                "-                    # Prompt for a password.",
                "-                    while password is None:",
                "-                        password = getpass.getpass()",
                "-                        password2 = getpass.getpass('Password (again): ')",
                "-                        if password != password2:",
                "-                            self.stderr.write(\"Error: Your passwords didn't match.\")",
                "-                            password = None",
                "-                            # Don't validate passwords that don't match.",
                "-                            continue",
                "-                        if password.strip() == '':",
                "-                            self.stderr.write(\"Error: Blank passwords aren't allowed.\")",
                "+            if options['interactive']:",
                "+                # Prompt for a password.",
                "+                while password is None:",
                "+                    password = getpass.getpass()",
                "+                    password2 = getpass.getpass('Password (again): ')",
                "+                    if password != password2:",
                "+                        self.stderr.write(\"Error: Your passwords didn't match.\")",
                "+                        password = None",
                "+                        # Don't validate passwords that don't match.",
                "+                        continue",
                "+                    if password.strip() == '':",
                "+                        self.stderr.write(\"Error: Blank passwords aren't allowed.\")",
                "+                        password = None",
                "+                        # Don't validate blank passwords.",
                "+                        continue",
                "+                    try:",
                "+                        validate_password(password2, self.UserModel(**fake_user_data))",
                "+                    except exceptions.ValidationError as err:",
                "+                        self.stderr.write('\\n'.join(err.messages))",
                "+                        response = input('Bypass password validation and create user anyway? [y/N]: ')",
                "+                        if response.lower() != 'y':",
                "                             password = None",
                "-                            # Don't validate blank passwords.",
                "-                            continue",
                "-                        try:",
                "-                            validate_password(password2, self.UserModel(**fake_user_data))",
                "-                        except exceptions.ValidationError as err:",
                "-                            self.stderr.write('\\n'.join(err.messages))",
                "-                            response = input('Bypass password validation and create user anyway? [y/N]: ')",
                "-                            if response.lower() != 'y':",
                "-                                password = None",
                "+            user_data['password'] = password",
                "+            self.UserModel._default_manager.db_manager(database).create_superuser(**user_data)",
                "+            if options['verbosity'] >= 1:",
                "+                self.stdout.write(\"Superuser created successfully.\")",
                "         except KeyboardInterrupt:",
                "@@ -170,9 +180,2 @@ class Command(BaseCommand):",
                "-        if username:",
                "-            user_data[self.UserModel.USERNAME_FIELD] = username",
                "-            user_data['password'] = password",
                "-            self.UserModel._default_manager.db_manager(database).create_superuser(**user_data)",
                "-            if options['verbosity'] >= 1:",
                "-                self.stdout.write(\"Superuser created successfully.\")",
                "-",
                "     def get_input_data(self, field, message, default=None):",
                "diff --git a/tests/auth_tests/models/custom_user.py b/tests/auth_tests/models/custom_user.py",
                "index ad8b4c1212..a46f1d5a9c 100644",
                "--- a/tests/auth_tests/models/custom_user.py",
                "+++ b/tests/auth_tests/models/custom_user.py",
                "@@ -11,3 +11,3 @@ from django.db import models",
                " class CustomUserManager(BaseUserManager):",
                "-    def create_user(self, email, date_of_birth, password=None):",
                "+    def create_user(self, email, date_of_birth, password=None, **fields):",
                "         \"\"\"",
                "@@ -21,2 +21,3 @@ class CustomUserManager(BaseUserManager):",
                "             date_of_birth=date_of_birth,",
                "+            **fields",
                "         )",
                "@@ -27,4 +28,4 @@ class CustomUserManager(BaseUserManager):",
                "-    def create_superuser(self, email, password, date_of_birth):",
                "-        u = self.create_user(email, password=password, date_of_birth=date_of_birth)",
                "+    def create_superuser(self, email, password, date_of_birth, **fields):",
                "+        u = self.create_user(email, password=password, date_of_birth=date_of_birth, **fields)",
                "         u.is_admin = True",
                "@@ -39,2 +40,3 @@ class CustomUser(AbstractBaseUser):",
                "     date_of_birth = models.DateField()",
                "+    first_name = models.CharField(max_length=50)",
                "@@ -43,3 +45,3 @@ class CustomUser(AbstractBaseUser):",
                "     USERNAME_FIELD = 'email'",
                "-    REQUIRED_FIELDS = ['date_of_birth']",
                "+    REQUIRED_FIELDS = ['date_of_birth', 'first_name']",
                "diff --git a/tests/auth_tests/test_management.py b/tests/auth_tests/test_management.py",
                "index da0ec73626..0c9ad81f3f 100644",
                "--- a/tests/auth_tests/test_management.py",
                "+++ b/tests/auth_tests/test_management.py",
                "@@ -31,2 +31,4 @@ MOCK_INPUT_KEY_TO_PROMPTS = {",
                "     'email': ['Email address: '],",
                "+    'date_of_birth': ['Date of birth: '],",
                "+    'first_name': ['First name: '],",
                "     'username': ['Username: ', lambda: \"Username (leave blank to use '%s'): \" % get_default_username()],",
                "@@ -329,2 +331,3 @@ class CreatesuperuserManagementCommandTestCase(TestCase):",
                "             date_of_birth=\"1976-04-01\",",
                "+            first_name='Joe',",
                "             stdout=new_io,",
                "@@ -554,2 +557,81 @@ class CreatesuperuserManagementCommandTestCase(TestCase):",
                "+    @override_settings(AUTH_PASSWORD_VALIDATORS=[",
                "+        {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},",
                "+    ])",
                "+    def test_validate_password_against_username(self):",
                "+        new_io = StringIO()",
                "+        username = 'supremelycomplex'",
                "+",
                "+        def bad_then_good_password(index=[0]):",
                "+            \"\"\"Return username the first two times, then a valid password.\"\"\"",
                "+            index[0] += 1",
                "+            if index[0] <= 2:",
                "+                return username",
                "+            return 'superduperunguessablepassword'",
                "+",
                "+        @mock_inputs({",
                "+            'password': bad_then_good_password,",
                "+            'username': username,",
                "+            'email': '',",
                "+            'bypass': 'n',",
                "+        })",
                "+        def test(self):",
                "+            call_command(",
                "+                'createsuperuser',",
                "+                interactive=True,",
                "+                stdin=MockTTY(),",
                "+                stdout=new_io,",
                "+                stderr=new_io,",
                "+            )",
                "+            self.assertEqual(",
                "+                new_io.getvalue().strip(),",
                "+                'The password is too similar to the username.\\n'",
                "+                'Superuser created successfully.'",
                "+            )",
                "+",
                "+        test(self)",
                "+",
                "+    @override_settings(",
                "+        AUTH_USER_MODEL='auth_tests.CustomUser',",
                "+        AUTH_PASSWORD_VALIDATORS=[",
                "+            {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},",
                "+        ]",
                "+    )",
                "+    def test_validate_password_against_required_fields(self):",
                "+        new_io = StringIO()",
                "+        username = 'josephine'",
                "+",
                "+        # Returns the username the first two times it's called, then a valid",
                "+        # password.",
                "+        def bad_then_good_password(index=[0]):",
                "+            \"\"\"Return username the first two times, then a valid password.\"\"\"",
                "+            index[0] += 1",
                "+            if index[0] <= 2:",
                "+                return username",
                "+            return 'superduperunguessablepassword'",
                "+",
                "+        @mock_inputs({",
                "+            'password': bad_then_good_password,",
                "+            'username': username,",
                "+            'first_name': 'josephine',",
                "+            'date_of_birth': '1970-01-01',",
                "+            'email': 'joey@example.com',",
                "+            'bypass': 'n',",
                "+        })",
                "+        def test(self):",
                "+            call_command(",
                "+                'createsuperuser',",
                "+                interactive=True,",
                "+                stdin=MockTTY(),",
                "+                stdout=new_io,",
                "+                stderr=new_io,",
                "+            )",
                "+            self.assertEqual(",
                "+                new_io.getvalue().strip(),",
                "+                \"The password is too similar to the first name.\\n\"",
                "+                \"Superuser created successfully.\"",
                "+            )",
                "+",
                "+        test(self)",
                "+",
                "     def test_blank_username(self):"
            ],
            "changed_files": [
                "django/contrib/auth/management/commands/createsuperuser.py",
                "tests/auth_tests/models/custom_user.py",
                "tests/auth_tests/test_management.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29628": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29628",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f1fbef6cd171ddfae41fcc901f1f60ccad039f51",
            "repository": "https://github.com/django/django",
            "timestamp": 1506987338,
            "hunks": 27,
            "message": "Fixed #28668 -- Allowed QuerySet.bulk_create() to ignore insert conflicts.",
            "diff": [
                "diff --git a/django/db/backends/base/features.py b/django/db/backends/base/features.py",
                "index e4acb2b41c..d3cb181e4c 100644",
                "--- a/django/db/backends/base/features.py",
                "+++ b/django/db/backends/base/features.py",
                "@@ -263,2 +263,6 @@ class BaseDatabaseFeatures:",
                "+    # Does the backend support ignoring constraint or uniqueness errors during",
                "+    # INSERT?",
                "+    supports_ignore_conflicts = True",
                "+",
                "     def __init__(self, connection):",
                "diff --git a/django/db/backends/base/operations.py b/django/db/backends/base/operations.py",
                "index 1fe7fe827c..7296fd0e67 100644",
                "--- a/django/db/backends/base/operations.py",
                "+++ b/django/db/backends/base/operations.py",
                "@@ -672 +672,7 @@ class BaseDatabaseOperations:",
                "         return self.explain_prefix",
                "+",
                "+    def insert_statement(self, ignore_conflicts=False):",
                "+        return 'INSERT INTO'",
                "+",
                "+    def ignore_conflicts_suffix_sql(self, ignore_conflicts=None):",
                "+        return ''",
                "diff --git a/django/db/backends/mysql/operations.py b/django/db/backends/mysql/operations.py",
                "index fd7b8153ba..babf522e45 100644",
                "--- a/django/db/backends/mysql/operations.py",
                "+++ b/django/db/backends/mysql/operations.py",
                "@@ -310 +310,4 @@ class DatabaseOperations(BaseDatabaseOperations):",
                "         return \"REGEXP_LIKE(%%s, %%s, '%s')\" % match_option",
                "+",
                "+    def insert_statement(self, ignore_conflicts=False):",
                "+        return 'INSERT IGNORE INTO' if ignore_conflicts else super().insert_statement(ignore_conflicts)",
                "diff --git a/django/db/backends/oracle/features.py b/django/db/backends/oracle/features.py",
                "index 41a78f165f..81eb03f2b5 100644",
                "--- a/django/db/backends/oracle/features.py",
                "+++ b/django/db/backends/oracle/features.py",
                "@@ -55,2 +55,3 @@ class DatabaseFeatures(BaseDatabaseFeatures):",
                "     supports_over_clause = True",
                "+    supports_ignore_conflicts = False",
                "     max_query_params = 2**16 - 1",
                "diff --git a/django/db/backends/postgresql/features.py b/django/db/backends/postgresql/features.py",
                "index a2a231554f..7fbe4bae02 100644",
                "--- a/django/db/backends/postgresql/features.py",
                "+++ b/django/db/backends/postgresql/features.py",
                "@@ -68 +68,2 @@ class DatabaseFeatures(BaseDatabaseFeatures):",
                "     has_gin_pending_list_limit = is_postgresql_9_5",
                "+    supports_ignore_conflicts = is_postgresql_9_5",
                "diff --git a/django/db/backends/postgresql/operations.py b/django/db/backends/postgresql/operations.py",
                "index 400f014a42..f4e9571f81 100644",
                "--- a/django/db/backends/postgresql/operations.py",
                "+++ b/django/db/backends/postgresql/operations.py",
                "@@ -279 +279,4 @@ class DatabaseOperations(BaseDatabaseOperations):",
                "         return prefix",
                "+",
                "+    def ignore_conflicts_suffix_sql(self, ignore_conflicts=None):",
                "+        return 'ON CONFLICT DO NOTHING' if ignore_conflicts else super().ignore_conflicts_suffix_sql(ignore_conflicts)",
                "diff --git a/django/db/backends/sqlite3/operations.py b/django/db/backends/sqlite3/operations.py",
                "index 0ad95eb479..cd71afb23b 100644",
                "--- a/django/db/backends/sqlite3/operations.py",
                "+++ b/django/db/backends/sqlite3/operations.py",
                "@@ -299 +299,4 @@ class DatabaseOperations(BaseDatabaseOperations):",
                "         return \"django_timestamp_diff(%s, %s)\" % (lhs_sql, rhs_sql), lhs_params + rhs_params",
                "+",
                "+    def insert_statement(self, ignore_conflicts=False):",
                "+        return 'INSERT OR IGNORE INTO' if ignore_conflicts else super().insert_statement(ignore_conflicts)",
                "diff --git a/django/db/models/query.py b/django/db/models/query.py",
                "index c1c9e1ee6b..22835d1607 100644",
                "--- a/django/db/models/query.py",
                "+++ b/django/db/models/query.py",
                "@@ -25,2 +25,3 @@ from django.db.models.query_utils import FilteredRelation, InvalidQuery, Q",
                " from django.db.models.sql.constants import CURSOR, GET_ITERATOR_CHUNK_SIZE",
                "+from django.db.utils import NotSupportedError",
                " from django.utils import timezone",
                "@@ -420,3 +421,3 @@ class QuerySet:",
                "-    def bulk_create(self, objs, batch_size=None):",
                "+    def bulk_create(self, objs, batch_size=None, ignore_conflicts=False):",
                "         \"\"\"",
                "@@ -458,3 +459,3 @@ class QuerySet:",
                "             if objs_with_pk:",
                "-                self._batched_insert(objs_with_pk, fields, batch_size)",
                "+                self._batched_insert(objs_with_pk, fields, batch_size, ignore_conflicts=ignore_conflicts)",
                "                 for obj_with_pk in objs_with_pk:",
                "@@ -464,4 +465,4 @@ class QuerySet:",
                "                 fields = [f for f in fields if not isinstance(f, AutoField)]",
                "-                ids = self._batched_insert(objs_without_pk, fields, batch_size)",
                "-                if connection.features.can_return_ids_from_bulk_insert:",
                "+                ids = self._batched_insert(objs_without_pk, fields, batch_size, ignore_conflicts=ignore_conflicts)",
                "+                if connection.features.can_return_ids_from_bulk_insert and not ignore_conflicts:",
                "                     assert len(ids) == len(objs_without_pk)",
                "@@ -1122,3 +1123,3 @@ class QuerySet:",
                "-    def _insert(self, objs, fields, return_id=False, raw=False, using=None):",
                "+    def _insert(self, objs, fields, return_id=False, raw=False, using=None, ignore_conflicts=False):",
                "         \"\"\"",
                "@@ -1130,3 +1131,3 @@ class QuerySet:",
                "             using = self.db",
                "-        query = sql.InsertQuery(self.model)",
                "+        query = sql.InsertQuery(self.model, ignore_conflicts=ignore_conflicts)",
                "         query.insert_values(fields, objs, raw=raw)",
                "@@ -1136,3 +1137,3 @@ class QuerySet:",
                "-    def _batched_insert(self, objs, fields, batch_size):",
                "+    def _batched_insert(self, objs, fields, batch_size, ignore_conflicts=False):",
                "         \"\"\"",
                "@@ -1140,2 +1141,4 @@ class QuerySet:",
                "         \"\"\"",
                "+        if ignore_conflicts and not connections[self.db].features.supports_ignore_conflicts:",
                "+            raise NotSupportedError('This database backend does not support ignoring conflicts.')",
                "         ops = connections[self.db].ops",
                "@@ -1143,5 +1146,9 @@ class QuerySet:",
                "         inserted_ids = []",
                "+        bulk_return = connections[self.db].features.can_return_ids_from_bulk_insert",
                "         for item in [objs[i:i + batch_size] for i in range(0, len(objs), batch_size)]:",
                "-            if connections[self.db].features.can_return_ids_from_bulk_insert:",
                "-                inserted_id = self._insert(item, fields=fields, using=self.db, return_id=True)",
                "+            if bulk_return and not ignore_conflicts:",
                "+                inserted_id = self._insert(",
                "+                    item, fields=fields, using=self.db, return_id=True,",
                "+                    ignore_conflicts=ignore_conflicts,",
                "+                )",
                "                 if isinstance(inserted_id, list):",
                "@@ -1151,3 +1158,3 @@ class QuerySet:",
                "             else:",
                "-                self._insert(item, fields=fields, using=self.db)",
                "+                self._insert(item, fields=fields, using=self.db, ignore_conflicts=ignore_conflicts)",
                "         return inserted_ids",
                "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py",
                "index 66ff004b6e..fd6337a18a 100644",
                "--- a/django/db/models/sql/compiler.py",
                "+++ b/django/db/models/sql/compiler.py",
                "@@ -1234,3 +1234,4 @@ class SQLInsertCompiler(SQLCompiler):",
                "         opts = self.query.get_meta()",
                "-        result = ['INSERT INTO %s' % qn(opts.db_table)]",
                "+        insert_statement = self.connection.ops.insert_statement(ignore_conflicts=self.query.ignore_conflicts)",
                "+        result = ['%s %s' % (insert_statement, qn(opts.db_table))]",
                "         fields = self.query.fields or [opts.pk]",
                "@@ -1256,2 +1257,5 @@ class SQLInsertCompiler(SQLCompiler):",
                "+        ignore_conflicts_suffix_sql = self.connection.ops.ignore_conflicts_suffix_sql(",
                "+            ignore_conflicts=self.query.ignore_conflicts",
                "+        )",
                "         if self.return_id and self.connection.features.can_return_id_from_insert:",
                "@@ -1263,2 +1267,4 @@ class SQLInsertCompiler(SQLCompiler):",
                "                 params = [param_rows[0]]",
                "+            if ignore_conflicts_suffix_sql:",
                "+                result.append(ignore_conflicts_suffix_sql)",
                "             col = \"%s.%s\" % (qn(opts.db_table), qn(opts.pk.column))",
                "@@ -1274,4 +1280,8 @@ class SQLInsertCompiler(SQLCompiler):",
                "             result.append(self.connection.ops.bulk_insert_sql(fields, placeholder_rows))",
                "+            if ignore_conflicts_suffix_sql:",
                "+                result.append(ignore_conflicts_suffix_sql)",
                "             return [(\" \".join(result), tuple(p for ps in param_rows for p in ps))]",
                "         else:",
                "+            if ignore_conflicts_suffix_sql:",
                "+                result.append(ignore_conflicts_suffix_sql)",
                "             return [",
                "diff --git a/django/db/models/sql/subqueries.py b/django/db/models/sql/subqueries.py",
                "index e877daa4e6..fbc265d113 100644",
                "--- a/django/db/models/sql/subqueries.py",
                "+++ b/django/db/models/sql/subqueries.py",
                "@@ -171,3 +171,3 @@ class InsertQuery(Query):",
                "-    def __init__(self, *args, **kwargs):",
                "+    def __init__(self, *args, ignore_conflicts=False, **kwargs):",
                "         super().__init__(*args, **kwargs)",
                "@@ -175,2 +175,3 @@ class InsertQuery(Query):",
                "         self.objs = []",
                "+        self.ignore_conflicts = ignore_conflicts",
                "diff --git a/tests/bulk_create/tests.py b/tests/bulk_create/tests.py",
                "index 2b3e65594f..eb7d2a9e28 100644",
                "--- a/tests/bulk_create/tests.py",
                "+++ b/tests/bulk_create/tests.py",
                "@@ -2,3 +2,3 @@ from operator import attrgetter",
                "-from django.db import connection",
                "+from django.db import IntegrityError, NotSupportedError, connection",
                " from django.db.models import FileField, Value",
                "@@ -263 +263,35 @@ class BulkCreateTests(TestCase):",
                "         self.assertEqual(state_ca._state.db, state_ny._state.db)",
                "+",
                "+    @skipIfDBFeature('supports_ignore_conflicts')",
                "+    def test_ignore_conflicts_value_error(self):",
                "+        message = 'This database backend does not support ignoring conflicts.'",
                "+        with self.assertRaisesMessage(NotSupportedError, message):",
                "+            TwoFields.objects.bulk_create(self.data, ignore_conflicts=True)",
                "+",
                "+    @skipUnlessDBFeature('supports_ignore_conflicts')",
                "+    def test_ignore_conflicts_ignore(self):",
                "+        data = [",
                "+            TwoFields(f1=1, f2=1),",
                "+            TwoFields(f1=2, f2=2),",
                "+            TwoFields(f1=3, f2=3),",
                "+        ]",
                "+        TwoFields.objects.bulk_create(data)",
                "+        self.assertEqual(TwoFields.objects.count(), 3)",
                "+        # With ignore_conflicts=True, conflicts are ignored.",
                "+        conflicting_objects = [",
                "+            TwoFields(f1=2, f2=2),",
                "+            TwoFields(f1=3, f2=3),",
                "+        ]",
                "+        TwoFields.objects.bulk_create([conflicting_objects[0]], ignore_conflicts=True)",
                "+        TwoFields.objects.bulk_create(conflicting_objects, ignore_conflicts=True)",
                "+        self.assertEqual(TwoFields.objects.count(), 3)",
                "+        self.assertIsNone(conflicting_objects[0].pk)",
                "+        self.assertIsNone(conflicting_objects[1].pk)",
                "+        # New objects are created and conflicts are ignored.",
                "+        new_object = TwoFields(f1=4, f2=4)",
                "+        TwoFields.objects.bulk_create(conflicting_objects + [new_object], ignore_conflicts=True)",
                "+        self.assertEqual(TwoFields.objects.count(), 4)",
                "+        self.assertIsNone(new_object.pk)",
                "+        # Without ignore_conflicts=True, there's a problem.",
                "+        with self.assertRaises(IntegrityError):",
                "+            TwoFields.objects.bulk_create(conflicting_objects)"
            ],
            "changed_files": [
                "django/db/backends/base/features.py",
                "django/db/backends/base/operations.py",
                "django/db/backends/mysql/operations.py",
                "django/db/backends/oracle/features.py",
                "django/db/backends/postgresql/features.py",
                "django/db/backends/postgresql/operations.py",
                "django/db/backends/sqlite3/operations.py",
                "django/db/models/query.py",
                "django/db/models/sql/compiler.py",
                "django/db/models/sql/subqueries.py",
                "tests/bulk_create/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "28668": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 28668",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2bf766cedca413826d599ac190fd6715429616f6",
            "repository": "https://github.com/django/django",
            "timestamp": 1533711080,
            "hunks": 3,
            "message": "[2.1.x] Fixed #29643 -- Fixed crash when combining Q objects with __in lookups and lists. Regression in fc6528b25ab1834be1a478b405bf8f7ec5cf860c. Backport of 9fee229874367beafd532dad6d0f9ff9676ded0b from master",
            "diff": [
                "diff --git a/django/utils/tree.py b/django/utils/tree.py",
                "index 2a188acda7..421ad5cd3c 100644",
                "--- a/django/utils/tree.py",
                "+++ b/django/utils/tree.py",
                "@@ -73,3 +73,6 @@ class Node:",
                "     def __hash__(self):",
                "-        return hash((self.__class__, self.connector, self.negated) + tuple(self.children))",
                "+        return hash((self.__class__, self.connector, self.negated) + tuple([",
                "+            tuple(child) if isinstance(child, list) else child",
                "+            for child in self.children",
                "+        ]))",
                "diff --git a/tests/utils_tests/test_tree.py b/tests/utils_tests/test_tree.py",
                "index 65f49c06a6..c59398aedb 100644",
                "--- a/tests/utils_tests/test_tree.py",
                "+++ b/tests/utils_tests/test_tree.py",
                "@@ -25,2 +25,3 @@ class NodeTests(unittest.TestCase):",
                "         node5 = Node(self.node1_children)",
                "+        node6 = Node([['a', 1], ['b', 2]])",
                "         self.assertNotEqual(hash(self.node1), hash(self.node2))",
                "@@ -29,2 +30,3 @@ class NodeTests(unittest.TestCase):",
                "         self.assertEqual(hash(self.node1), hash(node5))",
                "+        self.assertEqual(hash(self.node1), hash(node6))",
                "         self.assertEqual(hash(self.node2), hash(Node()))"
            ],
            "changed_files": [
                "django/utils/tree.py",
                "tests/utils_tests/test_tree.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29643": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29643",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fc16015de4ffa370919b0e36253bd415f796394b",
            "repository": "https://github.com/django/django",
            "timestamp": 1531583301,
            "hunks": 8,
            "message": "Fixed #26906 -- Reduced alter together operations code duplication. Thanks Akshesh Doshi for the initial patch.",
            "diff": [
                "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py",
                "index 8ae877b5fe..f286bf4ea4 100644",
                "--- a/django/db/migrations/operations/models.py",
                "+++ b/django/db/migrations/operations/models.py",
                "@@ -493,14 +493,15 @@ class FieldRelatedOptionOperation(ModelOptionOperation):",
                "-class AlterUniqueTogether(FieldRelatedOptionOperation):",
                "-    \"\"\"",
                "-    Change the value of unique_together to the target one.",
                "-    Input value of unique_together must be a set of tuples.",
                "-    \"\"\"",
                "-    option_name = \"unique_together\"",
                "+class AlterTogetherOptionOperation(FieldRelatedOptionOperation):",
                "+    option_name = None",
                "-    def __init__(self, name, unique_together):",
                "-        unique_together = normalize_together(unique_together)",
                "-        self.unique_together = {tuple(cons) for cons in unique_together}",
                "+    def __init__(self, name, option_value):",
                "+        if option_value:",
                "+            option_value = set(normalize_together(option_value))",
                "+        setattr(self, self.option_name, option_value)",
                "         super().__init__(name)",
                "+    @cached_property",
                "+    def option_value(self):",
                "+        return getattr(self, self.option_name)",
                "+",
                "     def deconstruct(self):",
                "@@ -508,3 +509,3 @@ class AlterUniqueTogether(FieldRelatedOptionOperation):",
                "             'name': self.name,",
                "-            'unique_together': self.unique_together,",
                "+            self.option_name: self.option_value,",
                "         }",
                "@@ -518,3 +519,3 @@ class AlterUniqueTogether(FieldRelatedOptionOperation):",
                "         model_state = state.models[app_label, self.name_lower]",
                "-        model_state.options[self.option_name] = self.unique_together",
                "+        model_state.options[self.option_name] = self.option_value",
                "         state.reload_model(app_label, self.name_lower, delay=True)",
                "@@ -525,3 +526,4 @@ class AlterUniqueTogether(FieldRelatedOptionOperation):",
                "             old_model = from_state.apps.get_model(app_label, self.name)",
                "-            schema_editor.alter_unique_together(",
                "+            alter_together = getattr(schema_editor, 'alter_%s' % self.option_name)",
                "+            alter_together(",
                "                 new_model,",
                "@@ -538,4 +540,4 @@ class AlterUniqueTogether(FieldRelatedOptionOperation):",
                "             (",
                "-                not self.unique_together or",
                "-                any((name in together) for together in self.unique_together)",
                "+                not self.option_value or",
                "+                any((name in fields) for fields in self.option_value)",
                "             )",
                "@@ -544,6 +546,17 @@ class AlterUniqueTogether(FieldRelatedOptionOperation):",
                "     def describe(self):",
                "-        return \"Alter %s for %s (%s constraint(s))\" % (self.option_name, self.name, len(self.unique_together or ''))",
                "+        return \"Alter %s for %s (%s constraint(s))\" % (self.option_name, self.name, len(self.option_value or ''))",
                "+",
                "+",
                "+class AlterUniqueTogether(AlterTogetherOptionOperation):",
                "+    \"\"\"",
                "+    Change the value of unique_together to the target one.",
                "+    Input value of unique_together must be a set of tuples.",
                "+    \"\"\"",
                "+    option_name = 'unique_together'",
                "+",
                "+    def __init__(self, name, unique_together):",
                "+        super().__init__(name, unique_together)",
                "-class AlterIndexTogether(FieldRelatedOptionOperation):",
                "+class AlterIndexTogether(AlterTogetherOptionOperation):",
                "     \"\"\"",
                "@@ -555,46 +568,3 @@ class AlterIndexTogether(FieldRelatedOptionOperation):",
                "     def __init__(self, name, index_together):",
                "-        index_together = normalize_together(index_together)",
                "-        self.index_together = {tuple(cons) for cons in index_together}",
                "-        super().__init__(name)",
                "-",
                "-    def deconstruct(self):",
                "-        kwargs = {",
                "-            'name': self.name,",
                "-            'index_together': self.index_together,",
                "-        }",
                "-        return (",
                "-            self.__class__.__qualname__,",
                "-            [],",
                "-            kwargs",
                "-        )",
                "-",
                "-    def state_forwards(self, app_label, state):",
                "-        model_state = state.models[app_label, self.name_lower]",
                "-        model_state.options[self.option_name] = self.index_together",
                "-        state.reload_model(app_label, self.name_lower, delay=True)",
                "-",
                "-    def database_forwards(self, app_label, schema_editor, from_state, to_state):",
                "-        new_model = to_state.apps.get_model(app_label, self.name)",
                "-        if self.allow_migrate_model(schema_editor.connection.alias, new_model):",
                "-            old_model = from_state.apps.get_model(app_label, self.name)",
                "-            schema_editor.alter_index_together(",
                "-                new_model,",
                "-                getattr(old_model._meta, self.option_name, set()),",
                "-                getattr(new_model._meta, self.option_name, set()),",
                "-            )",
                "-",
                "-    def database_backwards(self, app_label, schema_editor, from_state, to_state):",
                "-        return self.database_forwards(app_label, schema_editor, from_state, to_state)",
                "-",
                "-    def references_field(self, model_name, name, app_label=None):",
                "-        return (",
                "-            self.references_model(model_name, app_label) and",
                "-            (",
                "-                not self.index_together or",
                "-                any((name in together) for together in self.index_together)",
                "-            )",
                "-        )",
                "-",
                "-    def describe(self):",
                "-        return \"Alter %s for %s (%s constraint(s))\" % (self.option_name, self.name, len(self.index_together or ''))",
                "+        super().__init__(name, index_together)"
            ],
            "changed_files": [
                "django/db/migrations/operations/models.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "26906": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 26906",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9f3b9ffd51c71d96728df9ee16f5a57c6f3b315d",
            "repository": "https://github.com/django/django",
            "timestamp": 1533045431,
            "hunks": 3,
            "message": "Fixed #29617 -- Fixed Template crash if template_string is lazy. Regression in 3a148f958dddd97c1379081118c30fbede6b6bc4.",
            "diff": [
                "diff --git a/django/template/base.py b/django/template/base.py",
                "index c2376ff5a5..f6a60ecdf7 100644",
                "--- a/django/template/base.py",
                "+++ b/django/template/base.py",
                "@@ -154,3 +154,3 @@ class Template:",
                "         self.engine = engine",
                "-        self.source = template_string",
                "+        self.source = str(template_string)  # May be lazy.",
                "         self.nodelist = self.compile_nodelist()",
                "diff --git a/tests/template_tests/test_base.py b/tests/template_tests/test_base.py",
                "index 3bc857abee..475a647dd2 100644",
                "--- a/tests/template_tests/test_base.py",
                "+++ b/tests/template_tests/test_base.py",
                "@@ -1,3 +1,10 @@",
                "-from django.template.base import Variable, VariableDoesNotExist",
                "+from django.template import Context, Template, Variable, VariableDoesNotExist",
                " from django.test import SimpleTestCase",
                "+from django.utils.translation import gettext_lazy",
                "+",
                "+",
                "+class TemplateTests(SimpleTestCase):",
                "+    def test_lazy_template_string(self):",
                "+        template_string = gettext_lazy('lazy string')",
                "+        self.assertEqual(Template(template_string).render(Context()), template_string)"
            ],
            "changed_files": [
                "django/template/base.py",
                "tests/template_tests/test_base.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29617": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29617",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "45808895c0ecd96e5cc2a19257ee5529a2c80cbf",
            "repository": "https://github.com/django/django",
            "timestamp": 1532124574,
            "hunks": 2,
            "message": "Refs #23919 -- Removed obsolete u-prefix stripping in inspectdb.",
            "diff": [
                "diff --git a/django/core/management/commands/inspectdb.py b/django/core/management/commands/inspectdb.py",
                "index e44b31f1c5..cc1a6adc54 100644",
                "--- a/django/core/management/commands/inspectdb.py",
                "+++ b/django/core/management/commands/inspectdb.py",
                "@@ -43,5 +43,2 @@ class Command(BaseCommand):",
                "-        def strip_prefix(s):",
                "-            return s[1:] if s.startswith(\"u'\") else s",
                "-",
                "         with connection.cursor() as cursor:",
                "@@ -159,5 +156,3 @@ class Command(BaseCommand):",
                "                             field_desc += ', '",
                "-                        field_desc += ', '.join(",
                "-                            '%s=%s' % (k, strip_prefix(repr(v)))",
                "-                            for k, v in extra_params.items())",
                "+                        field_desc += ', '.join('%s=%r' % (k, v) for k, v in extra_params.items())",
                "                     field_desc += ')'"
            ],
            "changed_files": [
                "django/core/management/commands/inspectdb.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "23919": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 23919",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4198445afcba94eb7a25b50c96ec6c2694ed2192",
            "repository": "https://github.com/django/django",
            "timestamp": 1532562332,
            "hunks": 12,
            "message": "Refs #29548 -- Fixed failing window tests on MariaDB 10.3.",
            "diff": [
                "diff --git a/django/db/backends/base/features.py b/django/db/backends/base/features.py",
                "index 582fa2dc1f..e4acb2b41c 100644",
                "--- a/django/db/backends/base/features.py",
                "+++ b/django/db/backends/base/features.py",
                "@@ -260,2 +260,5 @@ class BaseDatabaseFeatures:",
                "+    # Does the backend support the default parameter in lead() and lag()?",
                "+    supports_default_in_lead_lag = True",
                "+",
                "     def __init__(self, connection):",
                "diff --git a/django/db/backends/mysql/features.py b/django/db/backends/mysql/features.py",
                "index b50513d779..96183b5c65 100644",
                "--- a/django/db/backends/mysql/features.py",
                "+++ b/django/db/backends/mysql/features.py",
                "@@ -111 +111,6 @@ class DatabaseFeatures(BaseDatabaseFeatures):",
                "             return result and result[0] != 0",
                "+",
                "+    @cached_property",
                "+    def supports_default_in_lead_lag(self):",
                "+        # To be added in https://jira.mariadb.org/browse/MDEV-12981.",
                "+        return not self.connection.mysql_is_mariadb",
                "diff --git a/tests/expressions_window/models.py b/tests/expressions_window/models.py",
                "index 94cade7ed7..d6bb27644f 100644",
                "--- a/tests/expressions_window/models.py",
                "+++ b/tests/expressions_window/models.py",
                "@@ -8,2 +8,3 @@ class Employee(models.Model):",
                "     hire_date = models.DateField(blank=False, null=False)",
                "+    age = models.IntegerField(blank=False, null=False)",
                "diff --git a/tests/expressions_window/tests.py b/tests/expressions_window/tests.py",
                "index 7ade53f429..182f7d594b 100644",
                "--- a/tests/expressions_window/tests.py",
                "+++ b/tests/expressions_window/tests.py",
                "@@ -18,2 +18,9 @@ from .models import Employee",
                "+def fix_ordering_for_mariadb(qs, ordering):",
                "+    if connection.vendor == 'mysql' and connection.mysql_is_mariadb:",
                "+        # MariaDB requires repeating the ordering when using window functions",
                "+        qs = qs.order_by(*ordering)",
                "+    return qs",
                "+",
                "+",
                " @skipUnlessDBFeature('supports_over_clause')",
                "@@ -23,16 +30,16 @@ class WindowFunctionTests(TestCase):",
                "         Employee.objects.bulk_create([",
                "-            Employee(name=e[0], salary=e[1], department=e[2], hire_date=e[3])",
                "+            Employee(name=e[0], salary=e[1], department=e[2], hire_date=e[3], age=e[4])",
                "             for e in [",
                "-                ('Jones', 45000, 'Accounting', datetime.datetime(2005, 11, 1)),",
                "-                ('Williams', 37000, 'Accounting', datetime.datetime(2009, 6, 1)),",
                "-                ('Jenson', 45000, 'Accounting', datetime.datetime(2008, 4, 1)),",
                "-                ('Adams', 50000, 'Accounting', datetime.datetime(2013, 7, 1)),",
                "-                ('Smith', 55000, 'Sales', datetime.datetime(2007, 6, 1)),",
                "-                ('Brown', 53000, 'Sales', datetime.datetime(2009, 9, 1)),",
                "-                ('Johnson', 40000, 'Marketing', datetime.datetime(2012, 3, 1)),",
                "-                ('Smith', 38000, 'Marketing', datetime.datetime(2009, 10, 1)),",
                "-                ('Wilkinson', 60000, 'IT', datetime.datetime(2011, 3, 1)),",
                "-                ('Moore', 34000, 'IT', datetime.datetime(2013, 8, 1)),",
                "-                ('Miller', 100000, 'Management', datetime.datetime(2005, 6, 1)),",
                "-                ('Johnson', 80000, 'Management', datetime.datetime(2005, 7, 1)),",
                "+                ('Jones', 45000, 'Accounting', datetime.datetime(2005, 11, 1), 20),",
                "+                ('Williams', 37000, 'Accounting', datetime.datetime(2009, 6, 1), 20),",
                "+                ('Jenson', 45000, 'Accounting', datetime.datetime(2008, 4, 1), 20),",
                "+                ('Adams', 50000, 'Accounting', datetime.datetime(2013, 7, 1), 50),",
                "+                ('Smith', 55000, 'Sales', datetime.datetime(2007, 6, 1), 30),",
                "+                ('Brown', 53000, 'Sales', datetime.datetime(2009, 9, 1), 30),",
                "+                ('Johnson', 40000, 'Marketing', datetime.datetime(2012, 3, 1), 30),",
                "+                ('Smith', 38000, 'Marketing', datetime.datetime(2009, 10, 1), 20),",
                "+                ('Wilkinson', 60000, 'IT', datetime.datetime(2011, 3, 1), 40),",
                "+                ('Moore', 34000, 'IT', datetime.datetime(2013, 8, 1), 40),",
                "+                ('Miller', 100000, 'Management', datetime.datetime(2005, 6, 1), 40),",
                "+                ('Johnson', 80000, 'Management', datetime.datetime(2005, 7, 1), 50),",
                "             ]",
                "@@ -189,2 +196,3 @@ class WindowFunctionTests(TestCase):",
                "         )).order_by('department')",
                "+        qs = fix_ordering_for_mariadb(qs, ('department', F('salary').asc(), F('name').asc()))",
                "         self.assertQuerysetEqual(qs, [",
                "@@ -252,2 +260,3 @@ class WindowFunctionTests(TestCase):",
                "         )).values_list('name', 'salary', 'department', 'hire_date', 'lead')",
                "+        qs = fix_ordering_for_mariadb(qs, ('department', F('hire_date').asc(), F('name').desc()))",
                "         self.assertNotIn('GROUP BY', str(qs.query))",
                "@@ -375,2 +384,4 @@ class WindowFunctionTests(TestCase):",
                "         )).order_by('department')",
                "+        ('department', F('hire_date').asc(), F('name').desc())",
                "+        qs = fix_ordering_for_mariadb(qs, ('department', F('hire_date').asc(), F('name').desc()))",
                "         self.assertQuerysetEqual(qs, [",
                "@@ -417,2 +428,3 @@ class WindowFunctionTests(TestCase):",
                "+    @skipUnlessDBFeature('supports_default_in_lead_lag')",
                "     def test_lead_default(self):",
                "@@ -564,4 +576,4 @@ class WindowFunctionTests(TestCase):",
                "             expression=Sum('salary'),",
                "-            partition_by='department',",
                "-            order_by=[F('hire_date').asc(), F('name').asc()],",
                "+            partition_by='age',",
                "+            order_by=[F('age').asc()],",
                "             frame=ValueRange(start=None, end=None),",
                "@@ -570,14 +582,14 @@ class WindowFunctionTests(TestCase):",
                "         self.assertQuerysetEqual(qs, [",
                "-            ('Jones', 'Accounting', 45000, datetime.date(2005, 11, 1), 177000),",
                "-            ('Jenson', 'Accounting', 45000, datetime.date(2008, 4, 1), 177000),",
                "-            ('Williams', 'Accounting', 37000, datetime.date(2009, 6, 1), 177000),",
                "-            ('Adams', 'Accounting', 50000, datetime.date(2013, 7, 1), 177000),",
                "-            ('Wilkinson', 'IT', 60000, datetime.date(2011, 3, 1), 94000),",
                "-            ('Moore', 'IT', 34000, datetime.date(2013, 8, 1), 94000),",
                "-            ('Miller', 'Management', 100000, datetime.date(2005, 6, 1), 180000),",
                "-            ('Johnson', 'Management', 80000, datetime.date(2005, 7, 1), 180000),",
                "-            ('Smith', 'Marketing', 38000, datetime.date(2009, 10, 1), 78000),",
                "-            ('Johnson', 'Marketing', 40000, datetime.date(2012, 3, 1), 78000),",
                "-            ('Smith', 'Sales', 55000, datetime.date(2007, 6, 1), 108000),",
                "-            ('Brown', 'Sales', 53000, datetime.date(2009, 9, 1), 108000),",
                "+            ('Jones', 'Accounting', 45000, datetime.date(2005, 11, 1), 165000),",
                "+            ('Jenson', 'Accounting', 45000, datetime.date(2008, 4, 1), 165000),",
                "+            ('Williams', 'Accounting', 37000, datetime.date(2009, 6, 1), 165000),",
                "+            ('Adams', 'Accounting', 50000, datetime.date(2013, 7, 1), 130000),",
                "+            ('Wilkinson', 'IT', 60000, datetime.date(2011, 3, 1), 194000),",
                "+            ('Moore', 'IT', 34000, datetime.date(2013, 8, 1), 194000),",
                "+            ('Miller', 'Management', 100000, datetime.date(2005, 6, 1), 194000),",
                "+            ('Johnson', 'Management', 80000, datetime.date(2005, 7, 1), 130000),",
                "+            ('Smith', 'Marketing', 38000, datetime.date(2009, 10, 1), 165000),",
                "+            ('Johnson', 'Marketing', 40000, datetime.date(2012, 3, 1), 148000),",
                "+            ('Smith', 'Sales', 55000, datetime.date(2007, 6, 1), 148000),",
                "+            ('Brown', 'Sales', 53000, datetime.date(2009, 9, 1), 148000)",
                "         ], transform=lambda row: (row.name, row.department, row.salary, row.hire_date, row.sum))"
            ],
            "changed_files": [
                "django/db/backends/base/features.py",
                "django/db/backends/mysql/features.py",
                "tests/expressions_window/models.py",
                "tests/expressions_window/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29548": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29548",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "253f1b74daac6300f6670929bfc0540ce1e71f7a",
            "repository": "https://github.com/django/django",
            "timestamp": 1533045431,
            "hunks": 3,
            "message": "[2.0.x] Fixed #29617 -- Fixed Template crash if template_string is lazy. Regression in 3a148f958dddd97c1379081118c30fbede6b6bc4. Backport of 9f3b9ffd51c71d96728df9ee16f5a57c6f3b315d from master.",
            "diff": [
                "diff --git a/django/template/base.py b/django/template/base.py",
                "index a90f8bfdd9..ba537df091 100644",
                "--- a/django/template/base.py",
                "+++ b/django/template/base.py",
                "@@ -158,3 +158,3 @@ class Template:",
                "         self.engine = engine",
                "-        self.source = template_string",
                "+        self.source = str(template_string)  # May be lazy.",
                "         self.nodelist = self.compile_nodelist()",
                "diff --git a/tests/template_tests/test_base.py b/tests/template_tests/test_base.py",
                "index 5320af5e9a..9ab8c4e6c6 100644",
                "--- a/tests/template_tests/test_base.py",
                "+++ b/tests/template_tests/test_base.py",
                "@@ -1,3 +1,10 @@",
                "-from django.template.base import VariableDoesNotExist",
                "+from django.template import Context, Template, VariableDoesNotExist",
                " from django.test import SimpleTestCase",
                "+from django.utils.translation import gettext_lazy",
                "+",
                "+",
                "+class TemplateTests(SimpleTestCase):",
                "+    def test_lazy_template_string(self):",
                "+        template_string = gettext_lazy('lazy string')",
                "+        self.assertEqual(Template(template_string).render(Context()), template_string)"
            ],
            "changed_files": [
                "django/template/base.py",
                "tests/template_tests/test_base.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29617": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.10",
                "2.0.11",
                "2.0.12",
                "2.0.13",
                "2.0.8",
                "2.0.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29617",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1c05fe65f280cedaddf5e5f308e5e45449b02e93",
            "repository": "https://github.com/django/django",
            "timestamp": 1532558375,
            "hunks": 1,
            "message": "Refs #13091 -- Added test for commit=False idiom with partial unique_together validation.",
            "diff": [
                "diff --git a/tests/model_forms/tests.py b/tests/model_forms/tests.py",
                "index 1d6d9efa96..556a41ed83 100644",
                "--- a/tests/model_forms/tests.py",
                "+++ b/tests/model_forms/tests.py",
                "@@ -857,2 +857,30 @@ class UniqueTest(TestCase):",
                "+    def test_unique_together_exclusion(self):",
                "+        \"\"\"",
                "+        Forms don't validate unique_together constraints when only part of the",
                "+        constraint is included in the form's fields. This allows using",
                "+        form.save(commit=False) and then assigning the missing field(s) to the",
                "+        model instance.",
                "+        \"\"\"",
                "+        class BookForm(forms.ModelForm):",
                "+            class Meta:",
                "+                model = DerivedBook",
                "+                fields = ('isbn', 'suffix1')",
                "+",
                "+        # The unique_together is on suffix1/suffix2 but only suffix1 is part",
                "+        # of the form. The fields must have defaults, otherwise they'll be",
                "+        # skipped by other logic.",
                "+        self.assertEqual(DerivedBook._meta.unique_together, (('suffix1', 'suffix2'),))",
                "+        for name in ('suffix1', 'suffix2'):",
                "+            with self.subTest(name=name):",
                "+                field = DerivedBook._meta.get_field(name)",
                "+                self.assertEqual(field.default, 0)",
                "+",
                "+        # The form fails validation with \"Derived book with this Suffix1 and",
                "+        # Suffix2 already exists.\" if the unique_together validation isn't",
                "+        # skipped.",
                "+        DerivedBook.objects.create(isbn='12345')",
                "+        form = BookForm({'isbn': '56789', 'suffix1': '0'})",
                "+        self.assertTrue(form.is_valid(), form.errors)",
                "+",
                "     def test_multiple_field_unique_together(self):"
            ],
            "changed_files": [
                "tests/model_forms/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "13091": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 13091",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d8e2be459f97f1773c7edf7d37de180139146176",
            "repository": "https://github.com/django/django",
            "timestamp": 1533261386,
            "hunks": 2,
            "message": "Fixed #29627 -- Fixed QueryDict.urlencode() crash with non-string values. Regression in 7d96f0c49ab750799860e42716d7105e11de44de.",
            "diff": [
                "diff --git a/django/http/request.py b/django/http/request.py",
                "index 05aa89252b..fdd1cf8c67 100644",
                "--- a/django/http/request.py",
                "+++ b/django/http/request.py",
                "@@ -513,3 +513,3 @@ class QueryDict(MultiValueDict):",
                "             output.extend(",
                "-                encode(k.encode(self.encoding), v.encode(self.encoding))",
                "+                encode(k.encode(self.encoding), str(v).encode(self.encoding))",
                "                 for v in list_",
                "diff --git a/tests/httpwrappers/tests.py b/tests/httpwrappers/tests.py",
                "index 24260ae610..01ce20f93d 100644",
                "--- a/tests/httpwrappers/tests.py",
                "+++ b/tests/httpwrappers/tests.py",
                "@@ -116,2 +116,9 @@ class QueryDictTests(SimpleTestCase):",
                "+    def test_urlencode_int(self):",
                "+        # Normally QueryDict doesn't contain non-string values but lazily",
                "+        # written tests may make that mistake.",
                "+        q = QueryDict(mutable=True)",
                "+        q['a'] = 1",
                "+        self.assertEqual(q.urlencode(), 'a=1')",
                "+",
                "     def test_mutable_copy(self):"
            ],
            "changed_files": [
                "django/http/request.py",
                "tests/httpwrappers/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29627": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29627",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b004bd62e83588fdb0e533fdeec993aec358281d",
            "repository": "https://github.com/django/django",
            "timestamp": 1531557498,
            "hunks": 7,
            "message": "Fixed #29412 -- Stopped marking slugify() result as HTML safe.",
            "diff": [
                "diff --git a/django/utils/text.py b/django/utils/text.py",
                "index 746a67ee00..e980f7170f 100644",
                "--- a/django/utils/text.py",
                "+++ b/django/utils/text.py",
                "@@ -6,6 +6,3 @@ from io import BytesIO",
                "-from django.utils.functional import (",
                "-    SimpleLazyObject, keep_lazy, keep_lazy_text, lazy,",
                "-)",
                "-from django.utils.safestring import SafeText, mark_safe",
                "+from django.utils.functional import SimpleLazyObject, keep_lazy_text, lazy",
                " from django.utils.translation import gettext as _, gettext_lazy, pgettext",
                "@@ -401,3 +398,3 @@ def unescape_string_literal(s):",
                "-@keep_lazy(str, SafeText)",
                "+@keep_lazy_text",
                " def slugify(value, allow_unicode=False):",
                "@@ -414,3 +411,3 @@ def slugify(value, allow_unicode=False):",
                "     value = re.sub(r'[^\\w\\s-]', '', value).strip().lower()",
                "-    return mark_safe(re.sub(r'[-\\s]+', '-', value))",
                "+    return re.sub(r'[-\\s]+', '-', value)",
                "diff --git a/tests/utils_tests/test_safestring.py b/tests/utils_tests/test_safestring.py",
                "index bb4dfd1280..b880d19f27 100644",
                "--- a/tests/utils_tests/test_safestring.py",
                "+++ b/tests/utils_tests/test_safestring.py",
                "@@ -2,3 +2,3 @@ from django.template import Context, Template",
                " from django.test import SimpleTestCase",
                "-from django.utils import html, text",
                "+from django.utils import html",
                " from django.utils.functional import lazy, lazystr",
                "@@ -71,6 +71,2 @@ class SafeStringTest(SimpleTestCase):",
                "-        s = text.slugify(lazystr('a'))",
                "-        s += mark_safe('&b')",
                "-        self.assertRenderEqual('{{ s }}', 'a&b', s=s)",
                "-",
                "     def test_mark_safe_as_decorator(self):",
                "diff --git a/tests/utils_tests/test_text.py b/tests/utils_tests/test_text.py",
                "index 693c436eb8..5e12391116 100644",
                "--- a/tests/utils_tests/test_text.py",
                "+++ b/tests/utils_tests/test_text.py",
                "@@ -1,2 +1,3 @@",
                " import json",
                "+import sys",
                "@@ -181,2 +182,4 @@ class TestUtilsText(SimpleTestCase):",
                "             self.assertEqual(text.slugify(value, allow_unicode=is_unicode), output)",
                "+        # interning the result may be useful, e.g. when fed to Path.",
                "+        self.assertEqual(sys.intern(text.slugify('a')), 'a')"
            ],
            "changed_files": [
                "django/utils/text.py",
                "tests/utils_tests/test_safestring.py",
                "tests/utils_tests/test_text.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29412": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29412",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3a6040246f16f92c7a45e606822d6940d94eae2a",
            "repository": "https://github.com/django/django",
            "timestamp": 1530192401,
            "hunks": 9,
            "message": "[2.1.x] Fixed #29514 -- Reverted \"Used datetime.timezone.utc instead of pytz.utc for better performance.\" This reverts commit 27ca5ce19f5f184018a61611c1bc319113b1d107 due to a regression. Backport of 2ec151e35da93047acfeea1b79c27010f2cb8594 from master",
            "diff": [
                "diff --git a/django/contrib/sessions/backends/file.py b/django/contrib/sessions/backends/file.py",
                "index 9948edf4cf..fe34dea56e 100644",
                "--- a/django/contrib/sessions/backends/file.py",
                "+++ b/django/contrib/sessions/backends/file.py",
                "@@ -61,3 +61,6 @@ class SessionStore(SessionBase):",
                "         modification = os.stat(self._key_to_file()).st_mtime",
                "-        return datetime.datetime.fromtimestamp(modification, timezone.utc if settings.USE_TZ else None)",
                "+        if settings.USE_TZ:",
                "+            modification = datetime.datetime.utcfromtimestamp(modification)",
                "+            return modification.replace(tzinfo=timezone.utc)",
                "+        return datetime.datetime.fromtimestamp(modification)",
                "diff --git a/django/core/files/storage.py b/django/core/files/storage.py",
                "index 1e499ebb1d..30788d6d75 100644",
                "--- a/django/core/files/storage.py",
                "+++ b/django/core/files/storage.py",
                "@@ -338,3 +338,7 @@ class FileSystemStorage(Storage):",
                "         \"\"\"",
                "-        return datetime.fromtimestamp(ts, timezone.utc if settings.USE_TZ else None)",
                "+        if settings.USE_TZ:",
                "+            # Safe to use .replace() because UTC doesn't have DST",
                "+            return datetime.utcfromtimestamp(ts).replace(tzinfo=timezone.utc)",
                "+        else:",
                "+            return datetime.fromtimestamp(ts)",
                "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py",
                "index 66370cc1d4..9b251e54cd 100644",
                "--- a/django/db/migrations/serializer.py",
                "+++ b/django/db/migrations/serializer.py",
                "@@ -52,3 +52,3 @@ class DatetimeSerializer(BaseSerializer):",
                "             self.value = self.value.astimezone(utc)",
                "-        value_repr = repr(self.value).replace(\"datetime.timezone(datetime.timedelta(0), 'UTC')\", 'utc')",
                "+        value_repr = repr(self.value).replace(\"<UTC>\", \"utc\")",
                "         if isinstance(self.value, datetime_safe.datetime):",
                "diff --git a/django/utils/feedgenerator.py b/django/utils/feedgenerator.py",
                "index 319a017e8c..e49f534a19 100644",
                "--- a/django/utils/feedgenerator.py",
                "+++ b/django/utils/feedgenerator.py",
                "@@ -175,3 +175,4 @@ class SyndicationFeed:",
                "-        return latest_date or datetime.datetime.now(utc)",
                "+        # datetime.now(tz=utc) is slower, as documented in django.utils.timezone.now",
                "+        return latest_date or datetime.datetime.utcnow().replace(tzinfo=utc)",
                "diff --git a/django/utils/timezone.py b/django/utils/timezone.py",
                "index 9870cd03a9..c1f0d70bc1 100644",
                "--- a/django/utils/timezone.py",
                "+++ b/django/utils/timezone.py",
                "@@ -4,6 +4,5 @@ Timezone-related classes and functions.",
                "-import datetime",
                " import functools",
                " from contextlib import ContextDecorator",
                "-from datetime import timedelta, tzinfo",
                "+from datetime import datetime, timedelta, tzinfo",
                " from threading import local",
                "@@ -55,4 +54,3 @@ class FixedOffset(tzinfo):",
                " # UTC time zone as a tzinfo instance.",
                "-# (Use utc = datetime.timezone.utc here when PY35 isn't supported.)",
                "-utc = datetime.timezone(ZERO, 'UTC')",
                "+utc = pytz.utc",
                "@@ -176,3 +174,3 @@ def template_localtime(value, use_tz=None):",
                "     should_convert = (",
                "-        isinstance(value, datetime.datetime) and",
                "+        isinstance(value, datetime) and",
                "         (settings.USE_TZ if use_tz is None else use_tz) and",
                "@@ -223,3 +221,7 @@ def now():",
                "     \"\"\"",
                "-    return datetime.datetime.now(utc if settings.USE_TZ else None)",
                "+    if settings.USE_TZ:",
                "+        # timeit shows that datetime.now(tz=utc) is 24% slower",
                "+        return datetime.utcnow().replace(tzinfo=utc)",
                "+    else:",
                "+        return datetime.now()"
            ],
            "changed_files": [
                "django/contrib/sessions/backends/file.py",
                "django/core/files/storage.py",
                "django/db/migrations/serializer.py",
                "django/utils/feedgenerator.py",
                "django/utils/timezone.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29514": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1",
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29514",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6b4d1ec8ff97cff4f1683912b0147d22410b05b8",
            "repository": "https://github.com/django/django",
            "timestamp": 1532989691,
            "hunks": 7,
            "message": "Fixed #29614 -- Added BTreeIndex to django.contrib.postres.",
            "diff": [
                "diff --git a/django/contrib/postgres/indexes.py b/django/contrib/postgres/indexes.py",
                "index 7c41c7f340..34e09b19f2 100644",
                "--- a/django/contrib/postgres/indexes.py",
                "+++ b/django/contrib/postgres/indexes.py",
                "@@ -3,3 +3,6 @@ from django.utils.functional import cached_property",
                "-__all__ = ['BrinIndex', 'GinIndex', 'GistIndex', 'HashIndex', 'SpGistIndex']",
                "+__all__ = [",
                "+    'BrinIndex', 'BTreeIndex', 'GinIndex', 'GistIndex', 'HashIndex',",
                "+    'SpGistIndex',",
                "+]",
                "@@ -57,2 +60,22 @@ class BrinIndex(PostgresIndex):",
                "+class BTreeIndex(PostgresIndex):",
                "+    suffix = 'btree'",
                "+",
                "+    def __init__(self, *, fillfactor=None, **kwargs):",
                "+        self.fillfactor = fillfactor",
                "+        super().__init__(**kwargs)",
                "+",
                "+    def deconstruct(self):",
                "+        path, args, kwargs = super().deconstruct()",
                "+        if self.fillfactor is not None:",
                "+            kwargs['fillfactor'] = self.fillfactor",
                "+        return path, args, kwargs",
                "+",
                "+    def get_with_params(self):",
                "+        with_params = []",
                "+        if self.fillfactor is not None:",
                "+            with_params.append('fillfactor = %d' % self.fillfactor)",
                "+        return with_params",
                "+",
                "+",
                " class GinIndex(PostgresIndex):",
                "diff --git a/django/db/backends/postgresql/introspection.py b/django/db/backends/postgresql/introspection.py",
                "index a24e37b0b8..584a2e86b6 100644",
                "--- a/django/db/backends/postgresql/introspection.py",
                "+++ b/django/db/backends/postgresql/introspection.py",
                "@@ -202,2 +202,3 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):",
                "             if index not in constraints:",
                "+                basic_index = type_ == 'btree' and not index.endswith('_btree') and options is None",
                "                 constraints[index] = {",
                "@@ -210,3 +211,3 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):",
                "                     \"index\": True,",
                "-                    \"type\": Index.suffix if type_ == 'btree' else type_,",
                "+                    \"type\": Index.suffix if basic_index else type_,",
                "                     \"definition\": definition,",
                "diff --git a/tests/postgres_tests/test_indexes.py b/tests/postgres_tests/test_indexes.py",
                "index 9bca4510fe..96ff829807 100644",
                "--- a/tests/postgres_tests/test_indexes.py",
                "+++ b/tests/postgres_tests/test_indexes.py",
                "@@ -1,3 +1,3 @@",
                " from django.contrib.postgres.indexes import (",
                "-    BrinIndex, GinIndex, GistIndex, HashIndex, SpGistIndex,",
                "+    BrinIndex, BTreeIndex, GinIndex, GistIndex, HashIndex, SpGistIndex,",
                " )",
                "@@ -49,2 +49,16 @@ class BrinIndexTests(IndexTestMixin, PostgreSQLTestCase):",
                "+class BTreeIndexTests(IndexTestMixin, PostgreSQLTestCase):",
                "+    index_class = BTreeIndex",
                "+",
                "+    def test_suffix(self):",
                "+        self.assertEqual(BTreeIndex.suffix, 'btree')",
                "+",
                "+    def test_deconstruction(self):",
                "+        index = BTreeIndex(fields=['title'], name='test_title_btree', fillfactor=80)",
                "+        path, args, kwargs = index.deconstruct()",
                "+        self.assertEqual(path, 'django.contrib.postgres.indexes.BTreeIndex')",
                "+        self.assertEqual(args, ())",
                "+        self.assertEqual(kwargs, {'fields': ['title'], 'name': 'test_title_btree', 'fillfactor': 80})",
                "+",
                "+",
                " class GinIndexTests(IndexTestMixin, PostgreSQLTestCase):",
                "@@ -196,2 +210,30 @@ class SchemaTests(PostgreSQLTestCase):",
                "+    def test_btree_index(self):",
                "+        # Ensure the table is there and doesn't have an index.",
                "+        self.assertNotIn('field', self.get_constraints(CharFieldModel._meta.db_table))",
                "+        # Add the index.",
                "+        index_name = 'char_field_model_field_btree'",
                "+        index = BTreeIndex(fields=['field'], name=index_name)",
                "+        with connection.schema_editor() as editor:",
                "+            editor.add_index(CharFieldModel, index)",
                "+        constraints = self.get_constraints(CharFieldModel._meta.db_table)",
                "+        # The index was added.",
                "+        self.assertEqual(constraints[index_name]['type'], BTreeIndex.suffix)",
                "+        # Drop the index.",
                "+        with connection.schema_editor() as editor:",
                "+            editor.remove_index(CharFieldModel, index)",
                "+        self.assertNotIn(index_name, self.get_constraints(CharFieldModel._meta.db_table))",
                "+",
                "+    def test_btree_parameters(self):",
                "+        index_name = 'integer_array_btree_fillfactor'",
                "+        index = BTreeIndex(fields=['field'], name=index_name, fillfactor=80)",
                "+        with connection.schema_editor() as editor:",
                "+            editor.add_index(CharFieldModel, index)",
                "+        constraints = self.get_constraints(CharFieldModel._meta.db_table)",
                "+        self.assertEqual(constraints[index_name]['type'], BTreeIndex.suffix)",
                "+        self.assertEqual(constraints[index_name]['options'], ['fillfactor=80'])",
                "+        with connection.schema_editor() as editor:",
                "+            editor.remove_index(CharFieldModel, index)",
                "+        self.assertNotIn(index_name, self.get_constraints(CharFieldModel._meta.db_table))",
                "+",
                "     def test_gist_index(self):"
            ],
            "changed_files": [
                "django/contrib/postgres/indexes.py",
                "django/db/backends/postgresql/introspection.py",
                "tests/postgres_tests/test_indexes.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29614": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29614",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ed7898e1b58c29cda648a799ac4bd5bc7e193b8b",
            "repository": "https://github.com/django/django",
            "timestamp": 1531536529,
            "hunks": 5,
            "message": "Fixed #28862 -- Disabled optimization of AlterFooTogether and RemoveField. AlterFooTogether operations cannot be swapped with RemoveField operations on the same model as they could be removing the the same field as well. Since AlterFooTogether operations don't track what their previous value was, it's impossible to determine whether or not the optimization is safe so the only way to proceed is to disable the optimization. Thanks Ramiro Morales for the in-depth analysis of the issue. Refs #24828",
            "diff": [
                "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py",
                "index ad436cf611..549b2bfc62 100644",
                "--- a/django/db/migrations/operations/models.py",
                "+++ b/django/db/migrations/operations/models.py",
                "@@ -451,6 +451,7 @@ class FieldRelatedOptionOperation(ModelOptionOperation):",
                "     def reduce(self, operation, app_label=None):",
                "-        if (isinstance(operation, FieldOperation) and",
                "-                self.name_lower == operation.model_name_lower and",
                "-                not self.references_field(operation.model_name, operation.name)):",
                "-            return [operation, self]",
                "+        if isinstance(operation, FieldOperation) and self.name_lower == operation.model_name_lower:",
                "+            if isinstance(operation, RemoveField):",
                "+                return False",
                "+            if not self.references_field(operation.model_name, operation.name):",
                "+                return [operation, self]",
                "         return super().reduce(operation, app_label=app_label)",
                "diff --git a/tests/migrations/test_autodetector.py b/tests/migrations/test_autodetector.py",
                "index e3ce3a129a..b181b084be 100644",
                "--- a/tests/migrations/test_autodetector.py",
                "+++ b/tests/migrations/test_autodetector.py",
                "@@ -1531,6 +1531,6 @@ class AutodetectorTests(TestCase):",
                "         self.assertNumberMigrations(changes, \"otherapp\", 1)",
                "-        self.assertOperationTypes(changes, \"otherapp\", 0, [\"RemoveField\", \"AlterUniqueTogether\", \"AlterIndexTogether\"])",
                "-        self.assertOperationAttributes(changes, \"otherapp\", 0, 0, model_name=\"book\", name=\"newfield\")",
                "-        self.assertOperationAttributes(changes, \"otherapp\", 0, 1, name=\"book\", unique_together={(\"author\", \"title\")})",
                "-        self.assertOperationAttributes(changes, \"otherapp\", 0, 2, name=\"book\", index_together={(\"author\", \"title\")})",
                "+        self.assertOperationTypes(changes, \"otherapp\", 0, [\"AlterUniqueTogether\", \"AlterIndexTogether\", \"RemoveField\"])",
                "+        self.assertOperationAttributes(changes, \"otherapp\", 0, 0, name=\"book\", unique_together={(\"author\", \"title\")})",
                "+        self.assertOperationAttributes(changes, \"otherapp\", 0, 1, name=\"book\", index_together={(\"author\", \"title\")})",
                "+        self.assertOperationAttributes(changes, \"otherapp\", 0, 2, model_name=\"book\", name=\"newfield\")",
                "diff --git a/tests/migrations/test_commands.py b/tests/migrations/test_commands.py",
                "index f625a47c7f..3c42755917 100644",
                "--- a/tests/migrations/test_commands.py",
                "+++ b/tests/migrations/test_commands.py",
                "@@ -1337,3 +1337,3 @@ class SquashMigrationsTests(MigrationTestBase):",
                "             call_command(\"squashmigrations\", \"migrations\", \"0002\", interactive=False, verbosity=1, stdout=out)",
                "-        self.assertIn(\"Optimized from 8 operations to 3 operations.\", out.getvalue())",
                "+        self.assertIn(\"Optimized from 8 operations to 4 operations.\", out.getvalue())",
                "diff --git a/tests/migrations/test_optimizer.py b/tests/migrations/test_optimizer.py",
                "index a408db9ef2..b841b531b1 100644",
                "--- a/tests/migrations/test_optimizer.py",
                "+++ b/tests/migrations/test_optimizer.py",
                "@@ -714,3 +714,3 @@ class OptimizerTests(SimpleTestCase):",
                "-        self.assertOptimizesTo(",
                "+        self.assertDoesNotOptimize(",
                "             [",
                "@@ -724,9 +724,2 @@ class OptimizerTests(SimpleTestCase):",
                "             ],",
                "-            [",
                "-                migrations.CreateModel(\"Foo\", [",
                "-                    (\"a\", models.IntegerField()),",
                "-                    (\"b\", models.IntegerField()),",
                "-                ]),",
                "-                alter,",
                "-            ],",
                "         )"
            ],
            "changed_files": [
                "django/db/migrations/operations/models.py",
                "tests/migrations/test_autodetector.py",
                "tests/migrations/test_commands.py",
                "tests/migrations/test_optimizer.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "28862": "",
                "24828": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 28862, 24828",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8e3f22f2513a5b64153ea9903690a38ac159031b",
            "repository": "https://github.com/django/django",
            "timestamp": 1531542729,
            "hunks": 22,
            "message": "Fixed #27731 -- Implemented CreateModel/AlterFooOperation reduction. This should alleviate the side effects of disabling the AlterFooOperation reduction with RemoveField to fix refs #28862 during migration squashing because CreateModel can perform a reduction with RemoveField. Thanks Nick Pope for the review.",
            "diff": [
                "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py",
                "index 549b2bfc62..8ae877b5fe 100644",
                "--- a/django/db/migrations/operations/models.py",
                "+++ b/django/db/migrations/operations/models.py",
                "@@ -144,2 +144,13 @@ class CreateModel(ModelOperation):",
                "             ]",
                "+        elif isinstance(operation, FieldRelatedOptionOperation) and self.name_lower == operation.name_lower:",
                "+            option_value = getattr(operation, operation.option_name)",
                "+            return [",
                "+                CreateModel(",
                "+                    self.name,",
                "+                    fields=self.fields,",
                "+                    options={**self.options, **{operation.option_name: option_value}},",
                "+                    bases=self.bases,",
                "+                    managers=self.managers,",
                "+                ),",
                "+            ]",
                "         elif isinstance(operation, FieldOperation) and self.name_lower == operation.model_name_lower:",
                "@@ -169,2 +180,14 @@ class CreateModel(ModelOperation):",
                "             elif isinstance(operation, RemoveField):",
                "+                options = self.options.copy()",
                "+                for option_name in ('unique_together', 'index_together'):",
                "+                    option = options.pop(option_name, None)",
                "+                    if option:",
                "+                        option = set(filter(bool, (",
                "+                            tuple(f for f in fields if f != operation.name_lower) for fields in option",
                "+                        )))",
                "+                        if option:",
                "+                            options[option_name] = option",
                "+                order_with_respect_to = options.get('order_with_respect_to')",
                "+                if order_with_respect_to == operation.name_lower:",
                "+                    del options['order_with_respect_to']",
                "                 return [",
                "@@ -177,3 +200,3 @@ class CreateModel(ModelOperation):",
                "                         ],",
                "-                        options=self.options,",
                "+                        options=options,",
                "                         bases=self.bases,",
                "@@ -183,2 +206,13 @@ class CreateModel(ModelOperation):",
                "             elif isinstance(operation, RenameField):",
                "+                options = self.options.copy()",
                "+                for option_name in ('unique_together', 'index_together'):",
                "+                    option = options.get(option_name)",
                "+                    if option:",
                "+                        options[option_name] = {",
                "+                            tuple(operation.new_name if f == operation.old_name else f for f in fields)",
                "+                            for fields in option",
                "+                        }",
                "+                order_with_respect_to = options.get('order_with_respect_to')",
                "+                if order_with_respect_to == operation.old_name:",
                "+                    options['order_with_respect_to'] = operation.new_name",
                "                 return [",
                "@@ -190,3 +224,3 @@ class CreateModel(ModelOperation):",
                "                         ],",
                "-                        options=self.options,",
                "+                        options=options,",
                "                         bases=self.bases,",
                "@@ -570,2 +604,4 @@ class AlterOrderWithRespectTo(FieldRelatedOptionOperation):",
                "+    option_name = 'order_with_respect_to'",
                "+",
                "     def __init__(self, name, order_with_respect_to):",
                "diff --git a/tests/migrations/test_autodetector.py b/tests/migrations/test_autodetector.py",
                "index b181b084be..02b95b5458 100644",
                "--- a/tests/migrations/test_autodetector.py",
                "+++ b/tests/migrations/test_autodetector.py",
                "@@ -2077,4 +2077,6 @@ class AutodetectorTests(TestCase):",
                "         self.assertNumberMigrations(changes, 'testapp', 1)",
                "-        self.assertOperationTypes(changes, 'testapp', 0, [\"CreateModel\", \"AlterOrderWithRespectTo\"])",
                "-        self.assertOperationAttributes(changes, 'testapp', 0, 1, name=\"author\", order_with_respect_to=\"book\")",
                "+        self.assertOperationTypes(changes, 'testapp', 0, [\"CreateModel\"])",
                "+        self.assertOperationAttributes(",
                "+            changes, 'testapp', 0, 0, name=\"Author\", options={'order_with_respect_to': 'book'}",
                "+        )",
                "         self.assertNotIn(\"_order\", [name for name, field in changes['testapp'][0].operations[0].fields])",
                "diff --git a/tests/migrations/test_commands.py b/tests/migrations/test_commands.py",
                "index 3c42755917..3408f2fefa 100644",
                "--- a/tests/migrations/test_commands.py",
                "+++ b/tests/migrations/test_commands.py",
                "@@ -1337,3 +1337,3 @@ class SquashMigrationsTests(MigrationTestBase):",
                "             call_command(\"squashmigrations\", \"migrations\", \"0002\", interactive=False, verbosity=1, stdout=out)",
                "-        self.assertIn(\"Optimized from 8 operations to 4 operations.\", out.getvalue())",
                "+        self.assertIn(\"Optimized from 8 operations to 2 operations.\", out.getvalue())",
                "diff --git a/tests/migrations/test_optimizer.py b/tests/migrations/test_optimizer.py",
                "index b841b531b1..b2c7b062c6 100644",
                "--- a/tests/migrations/test_optimizer.py",
                "+++ b/tests/migrations/test_optimizer.py",
                "@@ -596,4 +596,7 @@ class OptimizerTests(SimpleTestCase):",
                "         CreateModel, AlterFooTogether/AlterOrderWithRespectTo followed by an",
                "-        add/alter/rename field should optimize to CreateModel and the Alter*",
                "+        add/alter/rename field should optimize to CreateModel with options.",
                "         \"\"\"",
                "+        option_value = getattr(alter, alter.option_name)",
                "+        options = {alter.option_name: option_value}",
                "+",
                "         # AddField",
                "@@ -613,4 +616,3 @@ class OptimizerTests(SimpleTestCase):",
                "                     (\"c\", models.IntegerField()),",
                "-                ]),",
                "-                alter,",
                "+                ], options=options),",
                "             ],",
                "@@ -619,3 +621,3 @@ class OptimizerTests(SimpleTestCase):",
                "         # AlterField",
                "-        self.assertDoesNotOptimize(",
                "+        self.assertOptimizesTo(",
                "             [",
                "@@ -628,2 +630,8 @@ class OptimizerTests(SimpleTestCase):",
                "             ],",
                "+            [",
                "+                migrations.CreateModel(\"Foo\", [",
                "+                    (\"a\", models.IntegerField()),",
                "+                    (\"b\", models.CharField(max_length=255)),",
                "+                ], options=options),",
                "+            ],",
                "         )",
                "@@ -645,4 +653,3 @@ class OptimizerTests(SimpleTestCase):",
                "                     (\"c\", models.CharField(max_length=255)),",
                "-                ]),",
                "-                alter,",
                "+                ], options=options),",
                "             ],",
                "@@ -651,3 +658,11 @@ class OptimizerTests(SimpleTestCase):",
                "         # RenameField",
                "-        self.assertDoesNotOptimize(",
                "+        if isinstance(option_value, str):",
                "+            renamed_options = {alter.option_name: 'c'}",
                "+        else:",
                "+            renamed_options = {",
                "+                alter.option_name: {",
                "+                    tuple('c' if value == 'b' else value for value in item) for item in option_value",
                "+                }",
                "+            }",
                "+        self.assertOptimizesTo(",
                "             [",
                "@@ -660,2 +675,8 @@ class OptimizerTests(SimpleTestCase):",
                "             ],",
                "+            [",
                "+                migrations.CreateModel(\"Foo\", [",
                "+                    (\"a\", models.IntegerField()),",
                "+                    (\"c\", models.IntegerField()),",
                "+                ], options=renamed_options),",
                "+            ],",
                "         )",
                "@@ -675,6 +696,4 @@ class OptimizerTests(SimpleTestCase):",
                "                     (\"a\", models.IntegerField()),",
                "-                    (\"b\", models.IntegerField()),",
                "-                ]),",
                "-                alter,",
                "-                migrations.RenameField(\"Foo\", \"b\", \"c\"),",
                "+                    (\"c\", models.IntegerField()),",
                "+                ], options=renamed_options),",
                "             ],",
                "@@ -697,4 +716,3 @@ class OptimizerTests(SimpleTestCase):",
                "                     (\"d\", models.IntegerField()),",
                "-                ]),",
                "-                alter,",
                "+                ], options=options),",
                "             ],",
                "@@ -703,3 +721,11 @@ class OptimizerTests(SimpleTestCase):",
                "         # RemoveField",
                "-        self.assertDoesNotOptimize(",
                "+        if isinstance(option_value, str):",
                "+            removed_options = None",
                "+        else:",
                "+            removed_options = {",
                "+                alter.option_name: {",
                "+                    tuple(value for value in item if value != 'b') for item in option_value",
                "+                }",
                "+            }",
                "+        self.assertOptimizesTo(",
                "             [",
                "@@ -712,5 +738,10 @@ class OptimizerTests(SimpleTestCase):",
                "             ],",
                "+            [",
                "+                migrations.CreateModel(\"Foo\", [",
                "+                    (\"a\", models.IntegerField()),",
                "+                ], options=removed_options),",
                "+            ]",
                "         )",
                "-        self.assertDoesNotOptimize(",
                "+        self.assertOptimizesTo(",
                "             [",
                "@@ -724,2 +755,8 @@ class OptimizerTests(SimpleTestCase):",
                "             ],",
                "+            [",
                "+                migrations.CreateModel(\"Foo\", [",
                "+                    (\"a\", models.IntegerField()),",
                "+                    (\"b\", models.IntegerField()),",
                "+                ], options=options),",
                "+            ],",
                "         )"
            ],
            "changed_files": [
                "django/db/migrations/operations/models.py",
                "tests/migrations/test_autodetector.py",
                "tests/migrations/test_commands.py",
                "tests/migrations/test_optimizer.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "27731": "",
                "28862": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 27731, 28862",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4d48ddd8f93800a80330ec1dee7b7d4afe6ea95a",
            "repository": "https://github.com/django/django",
            "timestamp": 1531691237,
            "hunks": 5,
            "message": "Fixed #28917 -- Prevented Paginator's unordered warning on EmptyQuerySet. Thanks carltongibson for the idea and weijunji for the initial patch.",
            "diff": [
                "diff --git a/django/db/models/query.py b/django/db/models/query.py",
                "index 5ae451879c..c0d2dee3c1 100644",
                "--- a/django/db/models/query.py",
                "+++ b/django/db/models/query.py",
                "@@ -1102,4 +1102,6 @@ class QuerySet:",
                "         Return True if the QuerySet is ordered -- i.e. has an order_by()",
                "-        clause or a default ordering on the model.",
                "+        clause or a default ordering on the model (or is empty).",
                "         \"\"\"",
                "+        if isinstance(self, EmptyQuerySet):",
                "+            return True",
                "         if self.query.extra_order_by or self.query.order_by:",
                "diff --git a/tests/pagination/tests.py b/tests/pagination/tests.py",
                "index f13afc308f..987e713405 100644",
                "--- a/tests/pagination/tests.py",
                "+++ b/tests/pagination/tests.py",
                "@@ -1,2 +1,3 @@",
                " import unittest",
                "+import warnings",
                " from datetime import datetime",
                "@@ -370,2 +371,7 @@ class ModelPaginationTests(TestCase):",
                "+    def test_paginating_empty_queryset_does_not_warn(self):",
                "+        with warnings.catch_warnings(record=True) as recorded:",
                "+            Paginator(Article.objects.none(), 5)",
                "+        self.assertEqual(len(recorded), 0)",
                "+",
                "     def test_paginating_unordered_object_list_raises_warning(self):",
                "diff --git a/tests/queries/tests.py b/tests/queries/tests.py",
                "index 0d553c82d4..384bda4c77 100644",
                "--- a/tests/queries/tests.py",
                "+++ b/tests/queries/tests.py",
                "@@ -2026,2 +2026,5 @@ class QuerysetOrderedTests(unittest.TestCase):",
                "+    def test_empty_queryset(self):",
                "+        self.assertIs(Annotation.objects.none().ordered, True)",
                "+",
                "     def test_order_by_extra(self):"
            ],
            "changed_files": [
                "django/db/models/query.py",
                "tests/pagination/tests.py",
                "tests/queries/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "28917": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 28917",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0adfba968e28cfb4e4d681e658866debbbd68089",
            "repository": "https://github.com/django/django",
            "timestamp": 1532033080,
            "hunks": 15,
            "message": "Fixed #29578 -- Made numberformat.format() honor forced l10n usage. Thanks Sassan Haradji for the report.",
            "diff": [
                "diff --git a/django/utils/formats.py b/django/utils/formats.py",
                "index bba45e3677..d5e5a555f6 100644",
                "--- a/django/utils/formats.py",
                "+++ b/django/utils/formats.py",
                "@@ -181,3 +181,4 @@ def number_format(value, decimal_pos=None, use_l10n=None, force_grouping=False):",
                "         get_format('THOUSAND_SEPARATOR', lang, use_l10n=use_l10n),",
                "-        force_grouping=force_grouping",
                "+        force_grouping=force_grouping,",
                "+        use_l10n=use_l10n,",
                "     )",
                "diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py",
                "index 4dc37ae22b..9c0496342d 100644",
                "--- a/django/utils/numberformat.py",
                "+++ b/django/utils/numberformat.py",
                "@@ -7,3 +7,3 @@ from django.utils.safestring import mark_safe",
                " def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',",
                "-           force_grouping=False):",
                "+           force_grouping=False, use_l10n=None):",
                "     \"\"\"",
                "@@ -20,3 +20,3 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',",
                "     \"\"\"",
                "-    use_grouping = settings.USE_L10N and settings.USE_THOUSAND_SEPARATOR",
                "+    use_grouping = (use_l10n or (use_l10n is None and settings.USE_L10N)) and settings.USE_THOUSAND_SEPARATOR",
                "     use_grouping = use_grouping or force_grouping",
                "diff --git a/tests/admin_views/test_actions.py b/tests/admin_views/test_actions.py",
                "index c0ea30fcf7..1069f4a157 100644",
                "--- a/tests/admin_views/test_actions.py",
                "+++ b/tests/admin_views/test_actions.py",
                "@@ -74,3 +74,3 @@ class AdminActionsTest(TestCase):",
                "-    @override_settings(USE_THOUSAND_SEPARATOR=True, USE_L10N=True)",
                "+    @override_settings(USE_THOUSAND_SEPARATOR=True, USE_L10N=True, NUMBER_GROUPING=3)",
                "     def test_non_localized_pk(self):",
                "diff --git a/tests/i18n/tests.py b/tests/i18n/tests.py",
                "index 3837ec9132..9a159ff55a 100644",
                "--- a/tests/i18n/tests.py",
                "+++ b/tests/i18n/tests.py",
                "@@ -1041,20 +1041,22 @@ class FormattingTests(SimpleTestCase):",
                "         \"\"\"",
                "-        context = Context({'float': 3.14, 'date': datetime.date(2016, 12, 31)})",
                "+        context = Context({'int': 1455, 'float': 3.14, 'date': datetime.date(2016, 12, 31)})",
                "         template1 = Template(",
                "-            '{% load l10n %}{% localize %}{{ float }}/{{ date }}{% endlocalize %}; '",
                "-            '{% localize on %}{{ float }}/{{ date }}{% endlocalize %}'",
                "+            '{% load l10n %}{% localize %}{{ int }}/{{ float }}/{{ date }}{% endlocalize %}; '",
                "+            '{% localize on %}{{ int }}/{{ float }}/{{ date }}{% endlocalize %}'",
                "         )",
                "         template2 = Template(",
                "-            '{% load l10n %}{{ float }}/{{ date }}; '",
                "-            '{% localize off %}{{ float }}/{{ date }};{% endlocalize %} '",
                "-            '{{ float }}/{{ date }}'",
                "+            '{% load l10n %}{{ int }}/{{ float }}/{{ date }}; '",
                "+            '{% localize off %}{{ int }}/{{ float }}/{{ date }};{% endlocalize %} '",
                "+            '{{ int }}/{{ float }}/{{ date }}'",
                "         )",
                "         template3 = Template(",
                "-            '{% load l10n %}{{ float }}/{{ date }}; {{ float|unlocalize }}/{{ date|unlocalize }}'",
                "+            '{% load l10n %}{{ int }}/{{ float }}/{{ date }}; '",
                "+            '{{ int|unlocalize }}/{{ float|unlocalize }}/{{ date|unlocalize }}'",
                "         )",
                "         template4 = Template(",
                "-            '{% load l10n %}{{ float }}/{{ date }}; {{ float|localize }}/{{ date|localize }}'",
                "+            '{% load l10n %}{{ int }}/{{ float }}/{{ date }}; '",
                "+            '{{ int|localize }}/{{ float|localize }}/{{ date|localize }}'",
                "         )",
                "-        expected_localized = '3,14/31. Dezember 2016'",
                "-        expected_unlocalized = '3.14/Dez. 31, 2016'",
                "+        expected_localized = '1.455/3,14/31. Dezember 2016'",
                "+        expected_unlocalized = '1455/3.14/Dez. 31, 2016'",
                "         output1 = '; '.join([expected_localized, expected_localized])",
                "@@ -1064,6 +1066,6 @@ class FormattingTests(SimpleTestCase):",
                "         with translation.override('de', deactivate=True):",
                "-            with self.settings(USE_L10N=False):",
                "+            with self.settings(USE_L10N=False, USE_THOUSAND_SEPARATOR=True):",
                "                 self.assertEqual(template1.render(context), output1)",
                "                 self.assertEqual(template4.render(context), output4)",
                "-            with self.settings(USE_L10N=True):",
                "+            with self.settings(USE_L10N=True, USE_THOUSAND_SEPARATOR=True):",
                "                 self.assertEqual(template1.render(context), output1)",
                "diff --git a/tests/utils_tests/test_numberformat.py b/tests/utils_tests/test_numberformat.py",
                "index 3b815adfb8..b78b37551d 100644",
                "--- a/tests/utils_tests/test_numberformat.py",
                "+++ b/tests/utils_tests/test_numberformat.py",
                "@@ -2,4 +2,4 @@ from decimal import Decimal",
                " from sys import float_info",
                "-from unittest import TestCase",
                "+from django.test import SimpleTestCase",
                " from django.utils.numberformat import format as nformat",
                "@@ -7,3 +7,3 @@ from django.utils.numberformat import format as nformat",
                "-class TestNumberFormat(TestCase):",
                "+class TestNumberFormat(SimpleTestCase):",
                "@@ -16,2 +16,7 @@ class TestNumberFormat(TestCase):",
                "         self.assertEqual(nformat(-1234.33, '.', decimal_pos=1), '-1234.3')",
                "+        # The use_l10n parameter can force thousand grouping behavior.",
                "+        with self.settings(USE_THOUSAND_SEPARATOR=True, USE_L10N=True):",
                "+            self.assertEqual(nformat(1234, '.', grouping=3, thousand_sep=',', use_l10n=False), '1234')",
                "+        with self.settings(USE_THOUSAND_SEPARATOR=True, USE_L10N=False):",
                "+            self.assertEqual(nformat(1234, '.', grouping=3, thousand_sep=',', use_l10n=True), '1,234')"
            ],
            "changed_files": [
                "django/utils/formats.py",
                "django/utils/numberformat.py",
                "tests/admin_views/test_actions.py",
                "tests/i18n/tests.py",
                "tests/utils_tests/test_numberformat.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29578": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29578",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0cfca0f2ccc2050de9de65a28d241d8cafcfe666",
            "repository": "https://github.com/django/django",
            "timestamp": 1533261386,
            "hunks": 2,
            "message": "[2.1.x] Fixed #29627 -- Fixed QueryDict.urlencode() crash with non-string values. Regression in 7d96f0c49ab750799860e42716d7105e11de44de. Backport of d8e2be459f97f1773c7edf7d37de180139146176 from master",
            "diff": [
                "diff --git a/django/http/request.py b/django/http/request.py",
                "index 7c44dbb01e..36d05baf4d 100644",
                "--- a/django/http/request.py",
                "+++ b/django/http/request.py",
                "@@ -522,3 +522,3 @@ class QueryDict(MultiValueDict):",
                "             output.extend(",
                "-                encode(k.encode(self.encoding), v.encode(self.encoding))",
                "+                encode(k.encode(self.encoding), str(v).encode(self.encoding))",
                "                 for v in list_",
                "diff --git a/tests/httpwrappers/tests.py b/tests/httpwrappers/tests.py",
                "index 24260ae610..01ce20f93d 100644",
                "--- a/tests/httpwrappers/tests.py",
                "+++ b/tests/httpwrappers/tests.py",
                "@@ -116,2 +116,9 @@ class QueryDictTests(SimpleTestCase):",
                "+    def test_urlencode_int(self):",
                "+        # Normally QueryDict doesn't contain non-string values but lazily",
                "+        # written tests may make that mistake.",
                "+        q = QueryDict(mutable=True)",
                "+        q['a'] = 1",
                "+        self.assertEqual(q.urlencode(), 'a=1')",
                "+",
                "     def test_mutable_copy(self):"
            ],
            "changed_files": [
                "django/http/request.py",
                "tests/httpwrappers/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29627": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29627",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f72a7d8f441a8e5d9705a0a7c8e9c8830aa10950",
            "repository": "https://github.com/django/django",
            "timestamp": 1533777918,
            "hunks": 3,
            "message": "[2.1.x] Fixed #29653 -- Fixed missing related_query_name reverse accessor if GenericRelation is declared on an abstract base model. Regression in 4ab027b94409e6415b774797bf9d3593da9d9ea8. Thanks Lauri Kainulainen for the report. Backport of b5c7cb4d3306a7b4e8f87bcf365ff30ae53018ed from master",
            "diff": [
                "diff --git a/django/db/models/base.py b/django/db/models/base.py",
                "index fe8e7d3b0a..1fb66d34f9 100644",
                "--- a/django/db/models/base.py",
                "+++ b/django/db/models/base.py",
                "@@ -281,3 +281,4 @@ class ModelBase(type):",
                "                     field = copy.deepcopy(field)",
                "-                    field.mti_inherited = True",
                "+                    if not base._meta.abstract:",
                "+                        field.mti_inherited = True",
                "                     new_class.add_to_class(field.name, field)",
                "diff --git a/tests/generic_relations_regress/models.py b/tests/generic_relations_regress/models.py",
                "index f9cdb1b549..06f5888fbe 100644",
                "--- a/tests/generic_relations_regress/models.py",
                "+++ b/tests/generic_relations_regress/models.py",
                "@@ -160,3 +160,3 @@ class SpecialGenericRelation(GenericRelation):",
                " class HasLinks(models.Model):",
                "-    links = SpecialGenericRelation(Link)",
                "+    links = SpecialGenericRelation(Link, related_query_name='targets')",
                "diff --git a/tests/generic_relations_regress/tests.py b/tests/generic_relations_regress/tests.py",
                "index 769a64d0f1..fc7447fa51 100644",
                "--- a/tests/generic_relations_regress/tests.py",
                "+++ b/tests/generic_relations_regress/tests.py",
                "@@ -275 +275,10 @@ class GenericRelationTests(TestCase):",
                "         self.assertCountEqual(result, [link])",
                "+",
                "+    def test_generic_reverse_relation_with_abc(self):",
                "+        \"\"\"",
                "+        The reverse generic relation accessor (targets) is created if the",
                "+        GenericRelation comes from an abstract base model (HasLinks).",
                "+        \"\"\"",
                "+        thing = HasLinkThing.objects.create()",
                "+        link = Link.objects.create(content_object=thing)",
                "+        self.assertCountEqual(link.targets.all(), [thing])"
            ],
            "changed_files": [
                "django/db/models/base.py",
                "tests/generic_relations_regress/models.py",
                "tests/generic_relations_regress/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29653": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29653",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c7060912256cc9af6d01d2cedd7f7b9b1efd8890",
            "repository": "https://github.com/django/django",
            "timestamp": 1533285115,
            "hunks": 4,
            "message": "[2.1.x] Fixed #29613 -- Fixed --keepdb on PostgreSQL if the database exists and the user can't create databases. Regression in e776dd2db677d58dcb50aea20d3bb191537df25b. Thanks Tim Graham for the review. Backport of 1a9cbf41a130def83a7e384955544d08be0fc148 from master",
            "diff": [
                "diff --git a/django/db/backends/postgresql/creation.py b/django/db/backends/postgresql/creation.py",
                "index 0169fc5c1f..2cd8e88a70 100644",
                "--- a/django/db/backends/postgresql/creation.py",
                "+++ b/django/db/backends/postgresql/creation.py",
                "@@ -5,2 +5,3 @@ from psycopg2 import errorcodes",
                " from django.db.backends.base.creation import BaseDatabaseCreation",
                "+from django.db.backends.utils import strip_quotes",
                "@@ -30,4 +31,12 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "+    def _database_exists(self, cursor, database_name):",
                "+        cursor.execute('SELECT 1 FROM pg_catalog.pg_database WHERE datname = %s', [strip_quotes(database_name)])",
                "+        return cursor.fetchone() is not None",
                "+",
                "     def _execute_create_test_db(self, cursor, parameters, keepdb=False):",
                "         try:",
                "+            if keepdb and self._database_exists(cursor, parameters['dbname']):",
                "+                # If the database should be kept and it already exists, don't",
                "+                # try to create a new one.",
                "+                return",
                "             super()._execute_create_test_db(cursor, parameters, keepdb)",
                "diff --git a/tests/backends/postgresql/test_creation.py b/tests/backends/postgresql/test_creation.py",
                "index 9f51d5e6b2..7d6f319a80 100644",
                "--- a/tests/backends/postgresql/test_creation.py",
                "+++ b/tests/backends/postgresql/test_creation.py",
                "@@ -91,5 +91,12 @@ class DatabaseCreationTests(SimpleTestCase):",
                "         with self.patch_test_db_creation(self._execute_raise_permission_denied):",
                "-            with self.assertRaises(SystemExit):",
                "-                creation._create_test_db(verbosity=0, autoclobber=False, keepdb=False)",
                "-            with self.assertRaises(SystemExit):",
                "+            with mock.patch.object(DatabaseCreation, '_database_exists', return_value=False):",
                "+                with self.assertRaises(SystemExit):",
                "+                    creation._create_test_db(verbosity=0, autoclobber=False, keepdb=False)",
                "+                with self.assertRaises(SystemExit):",
                "+                    creation._create_test_db(verbosity=0, autoclobber=False, keepdb=True)",
                "+        # Simulate test database creation raising \"insufficient privileges\".",
                "+        # An error shouldn't appear when keepdb is on and the database already",
                "+        # exists.",
                "+        with self.patch_test_db_creation(self._execute_raise_permission_denied):",
                "+            with mock.patch.object(DatabaseCreation, '_database_exists', return_value=True):",
                "                 creation._create_test_db(verbosity=0, autoclobber=False, keepdb=True)"
            ],
            "changed_files": [
                "django/db/backends/postgresql/creation.py",
                "tests/backends/postgresql/test_creation.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29613": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29613",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "155b31d4ec138664d62665eb2d8a442469045b78",
            "repository": "https://github.com/django/django",
            "timestamp": 1533658119,
            "hunks": 5,
            "message": "Fixed #29648 -- Fixed crash when using subqueries inside datetime truncation functions.",
            "diff": [
                "diff --git a/django/db/models/functions/datetime.py b/django/db/models/functions/datetime.py",
                "index 74b88b77ca..1876aa7d5c 100644",
                "--- a/django/db/models/functions/datetime.py",
                "+++ b/django/db/models/functions/datetime.py",
                "@@ -166,4 +166,2 @@ class TruncBase(TimezoneMixin, Transform):",
                "         inner_sql, inner_params = compiler.compile(self.lhs)",
                "-        # Escape any params because trunc_sql will format the string.",
                "-        inner_sql = inner_sql.replace('%s', '%%s')",
                "         if isinstance(self.output_field, DateTimeField):",
                "diff --git a/tests/db_functions/models.py b/tests/db_functions/models.py",
                "index c31de39b85..083655e80f 100644",
                "--- a/tests/db_functions/models.py",
                "+++ b/tests/db_functions/models.py",
                "@@ -34,2 +34,3 @@ class Fan(models.Model):",
                "     author = models.ForeignKey(Author, models.CASCADE, related_name='fans')",
                "+    fan_since = models.DateTimeField(null=True, blank=True)",
                "diff --git a/tests/db_functions/test_datetime.py b/tests/db_functions/test_datetime.py",
                "index dc4c911ab9..07b6b0438a 100644",
                "--- a/tests/db_functions/test_datetime.py",
                "+++ b/tests/db_functions/test_datetime.py",
                "@@ -5,3 +5,5 @@ import pytz",
                " from django.conf import settings",
                "-from django.db.models import DateField, DateTimeField, IntegerField, TimeField",
                "+from django.db.models import (",
                "+    DateField, DateTimeField, IntegerField, Max, OuterRef, Subquery, TimeField,",
                "+)",
                " from django.db.models.functions import (",
                "@@ -17,3 +19,3 @@ from django.utils import timezone",
                "-from .models import DTModel",
                "+from .models import Author, DTModel, Fan",
                "@@ -856,2 +858,32 @@ class DateFunctionTests(TestCase):",
                "+    def test_trunc_subquery_with_parameters(self):",
                "+        author_1 = Author.objects.create(name='J. R. R. Tolkien')",
                "+        author_2 = Author.objects.create(name='G. R. R. Martin')",
                "+        fan_since_1 = datetime(2016, 2, 3, 15, 0, 0)",
                "+        fan_since_2 = datetime(2015, 2, 3, 15, 0, 0)",
                "+        fan_since_3 = datetime(2017, 2, 3, 15, 0, 0)",
                "+        if settings.USE_TZ:",
                "+            fan_since_1 = timezone.make_aware(fan_since_1, is_dst=False)",
                "+            fan_since_2 = timezone.make_aware(fan_since_2, is_dst=False)",
                "+            fan_since_3 = timezone.make_aware(fan_since_3, is_dst=False)",
                "+        Fan.objects.create(author=author_1, name='Tom', fan_since=fan_since_1)",
                "+        Fan.objects.create(author=author_1, name='Emma', fan_since=fan_since_2)",
                "+        Fan.objects.create(author=author_2, name='Isabella', fan_since=fan_since_3)",
                "+",
                "+        inner = Fan.objects.filter(",
                "+            author=OuterRef('pk'),",
                "+            name__in=('Emma', 'Isabella', 'Tom')",
                "+        ).values('author').annotate(newest_fan=Max('fan_since')).values('newest_fan')",
                "+        outer = Author.objects.annotate(",
                "+            newest_fan_year=TruncYear(Subquery(inner, output_field=DateTimeField()))",
                "+        )",
                "+        tz = pytz.UTC if settings.USE_TZ else None",
                "+        self.assertSequenceEqual(",
                "+            outer.order_by('name').values('name', 'newest_fan_year'),",
                "+            [",
                "+                {'name': 'G. R. R. Martin', 'newest_fan_year': datetime(2017, 1, 1, 0, 0, tzinfo=tz)},",
                "+                {'name': 'J. R. R. Tolkien', 'newest_fan_year': datetime(2016, 1, 1, 0, 0, tzinfo=tz)},",
                "+            ]",
                "+        )",
                "+"
            ],
            "changed_files": [
                "django/db/models/functions/datetime.py",
                "tests/db_functions/models.py",
                "tests/db_functions/test_datetime.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29648": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29648",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2ac7cd52b466e5090c0479de02c4765b4c483fa3",
            "repository": "https://github.com/django/django",
            "timestamp": 1532638155,
            "hunks": 2,
            "message": "Refs #29600 -- Removed datetime_safe usage in feedgenerator. The only effect would be if items in Atom feeds had a published date year of < 1000 (ensuring those years are padded with leading zeros).",
            "diff": [
                "diff --git a/django/utils/feedgenerator.py b/django/utils/feedgenerator.py",
                "index e49f534a19..f0123b3702 100644",
                "--- a/django/utils/feedgenerator.py",
                "+++ b/django/utils/feedgenerator.py",
                "@@ -28,3 +28,2 @@ from urllib.parse import urlparse",
                "-from django.utils import datetime_safe",
                " from django.utils.encoding import iri_to_uri",
                "@@ -55,3 +54,3 @@ def get_tag_uri(url, date):",
                "     if date is not None:",
                "-        d = ',%s' % datetime_safe.new_datetime(date).strftime('%Y-%m-%d')",
                "+        d = ',%s' % date.strftime('%Y-%m-%d')",
                "     return 'tag:%s%s:%s/%s' % (bits.hostname, d, bits.path, bits.fragment)"
            ],
            "changed_files": [
                "django/utils/feedgenerator.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29600": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29600",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "221ef69a9b89262456bb7abe0e5a4b2fda4a0695",
            "repository": "https://github.com/django/django",
            "timestamp": 1533117148,
            "hunks": 5,
            "message": "[2.1.x] Fixed #29499 -- Fixed race condition in QuerySet.update_or_create(). A race condition happened when the object didn't already exist and another process/thread created the object before update_or_create() did and then attempted to update the object, also before update_or_create() saved the object. The update by the other process/thread could be lost. Backport of 271542dad1686c438f658aa6220982495db09797 from master",
            "diff": [
                "diff --git a/django/db/models/query.py b/django/db/models/query.py",
                "index 5ae451879c..8642d6f798 100644",
                "--- a/django/db/models/query.py",
                "+++ b/django/db/models/query.py",
                "@@ -503,3 +503,5 @@ class QuerySet:",
                "             except self.model.DoesNotExist:",
                "-                obj, created = self._create_object_from_params(lookup, params)",
                "+                # Lock the row so that a concurrent update is blocked until",
                "+                # after update_or_create() has performed its save.",
                "+                obj, created = self._create_object_from_params(lookup, params, lock=True)",
                "                 if created:",
                "@@ -511,3 +513,3 @@ class QuerySet:",
                "-    def _create_object_from_params(self, lookup, params):",
                "+    def _create_object_from_params(self, lookup, params, lock=False):",
                "         \"\"\"",
                "@@ -523,3 +525,4 @@ class QuerySet:",
                "             try:",
                "-                return self.get(**lookup), False",
                "+                qs = self.select_for_update() if lock else self",
                "+                return qs.get(**lookup), False",
                "             except self.model.DoesNotExist:",
                "diff --git a/tests/get_or_create/models.py b/tests/get_or_create/models.py",
                "index 4a33a809bb..6510bb9464 100644",
                "--- a/tests/get_or_create/models.py",
                "+++ b/tests/get_or_create/models.py",
                "@@ -4,3 +4,3 @@ from django.db import models",
                " class Person(models.Model):",
                "-    first_name = models.CharField(max_length=100)",
                "+    first_name = models.CharField(max_length=100, unique=True)",
                "     last_name = models.CharField(max_length=100)",
                "diff --git a/tests/get_or_create/tests.py b/tests/get_or_create/tests.py",
                "index 1aed318608..ac21b86260 100644",
                "--- a/tests/get_or_create/tests.py",
                "+++ b/tests/get_or_create/tests.py",
                "@@ -516,2 +516,60 @@ class UpdateOrCreateTransactionTests(TransactionTestCase):",
                "+    @skipUnlessDBFeature('has_select_for_update')",
                "+    @skipUnlessDBFeature('supports_transactions')",
                "+    def test_creation_in_transaction(self):",
                "+        \"\"\"",
                "+        Objects are selected and updated in a transaction to avoid race",
                "+        conditions. This test checks the behavior of update_or_create() when",
                "+        the object doesn't already exist, but another thread creates the",
                "+        object before update_or_create() does and then attempts to update the",
                "+        object, also before update_or_create(). It forces update_or_create() to",
                "+        hold the lock in another thread for a relatively long time so that it",
                "+        can update while it holds the lock. The updated field isn't a field in",
                "+        'defaults', so update_or_create() shouldn't have an effect on it.",
                "+        \"\"\"",
                "+        lock_status = {'lock_count': 0}",
                "+",
                "+        def birthday_sleep():",
                "+            lock_status['lock_count'] += 1",
                "+            time.sleep(0.5)",
                "+            return date(1940, 10, 10)",
                "+",
                "+        def update_birthday_slowly():",
                "+            try:",
                "+                Person.objects.update_or_create(first_name='John', defaults={'birthday': birthday_sleep})",
                "+            finally:",
                "+                # Avoid leaking connection for Oracle",
                "+                connection.close()",
                "+",
                "+        def lock_wait(expected_lock_count):",
                "+            # timeout after ~0.5 seconds",
                "+            for i in range(20):",
                "+                time.sleep(0.025)",
                "+                if lock_status['lock_count'] == expected_lock_count:",
                "+                    return True",
                "+            self.skipTest('Database took too long to lock the row')",
                "+",
                "+        # update_or_create in a separate thread.",
                "+        t = Thread(target=update_birthday_slowly)",
                "+        before_start = datetime.now()",
                "+        t.start()",
                "+        lock_wait(1)",
                "+        # Create object *after* initial attempt by update_or_create to get obj",
                "+        # but before creation attempt.",
                "+        Person.objects.create(first_name='John', last_name='Lennon', birthday=date(1940, 10, 9))",
                "+        lock_wait(2)",
                "+        # At this point, the thread is pausing for 0.5 seconds, so now attempt",
                "+        # to modify object before update_or_create() calls save(). This should",
                "+        # be blocked until after the save().",
                "+        Person.objects.filter(first_name='John').update(last_name='NotLennon')",
                "+        after_update = datetime.now()",
                "+        # Wait for thread to finish",
                "+        t.join()",
                "+        # Check call to update_or_create() succeeded and the subsequent",
                "+        # (blocked) call to update().",
                "+        updated_person = Person.objects.get(first_name='John')",
                "+        self.assertEqual(updated_person.birthday, date(1940, 10, 10))  # set by update_or_create()",
                "+        self.assertEqual(updated_person.last_name, 'NotLennon')        # set by update()",
                "+        self.assertGreater(after_update - before_start, timedelta(seconds=1))",
                "+"
            ],
            "changed_files": [
                "django/db/models/query.py",
                "tests/get_or_create/models.py",
                "tests/get_or_create/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29499": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29499",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4441826026c888a479d5262d47fbbd72a689efa8",
            "repository": "https://github.com/django/django",
            "timestamp": 1533117148,
            "hunks": 5,
            "message": "[2.0.x] Fixed #29499 -- Fixed race condition in QuerySet.update_or_create(). A race condition happened when the object didn't already exist and another process/thread created the object before update_or_create() did and then attempted to update the object, also before update_or_create() saved the object. The update by the other process/thread could be lost. Backport of 271542dad1686c438f658aa6220982495db09797 from master",
            "diff": [
                "diff --git a/django/db/models/query.py b/django/db/models/query.py",
                "index ddedc8bdb5..b88dc351a6 100644",
                "--- a/django/db/models/query.py",
                "+++ b/django/db/models/query.py",
                "@@ -504,3 +504,5 @@ class QuerySet:",
                "             except self.model.DoesNotExist:",
                "-                obj, created = self._create_object_from_params(lookup, params)",
                "+                # Lock the row so that a concurrent update is blocked until",
                "+                # after update_or_create() has performed its save.",
                "+                obj, created = self._create_object_from_params(lookup, params, lock=True)",
                "                 if created:",
                "@@ -512,3 +514,3 @@ class QuerySet:",
                "-    def _create_object_from_params(self, lookup, params):",
                "+    def _create_object_from_params(self, lookup, params, lock=False):",
                "         \"\"\"",
                "@@ -524,3 +526,4 @@ class QuerySet:",
                "             try:",
                "-                return self.get(**lookup), False",
                "+                qs = self.select_for_update() if lock else self",
                "+                return qs.get(**lookup), False",
                "             except self.model.DoesNotExist:",
                "diff --git a/tests/get_or_create/models.py b/tests/get_or_create/models.py",
                "index 4a33a809bb..6510bb9464 100644",
                "--- a/tests/get_or_create/models.py",
                "+++ b/tests/get_or_create/models.py",
                "@@ -4,3 +4,3 @@ from django.db import models",
                " class Person(models.Model):",
                "-    first_name = models.CharField(max_length=100)",
                "+    first_name = models.CharField(max_length=100, unique=True)",
                "     last_name = models.CharField(max_length=100)",
                "diff --git a/tests/get_or_create/tests.py b/tests/get_or_create/tests.py",
                "index 1aed318608..ac21b86260 100644",
                "--- a/tests/get_or_create/tests.py",
                "+++ b/tests/get_or_create/tests.py",
                "@@ -516,2 +516,60 @@ class UpdateOrCreateTransactionTests(TransactionTestCase):",
                "+    @skipUnlessDBFeature('has_select_for_update')",
                "+    @skipUnlessDBFeature('supports_transactions')",
                "+    def test_creation_in_transaction(self):",
                "+        \"\"\"",
                "+        Objects are selected and updated in a transaction to avoid race",
                "+        conditions. This test checks the behavior of update_or_create() when",
                "+        the object doesn't already exist, but another thread creates the",
                "+        object before update_or_create() does and then attempts to update the",
                "+        object, also before update_or_create(). It forces update_or_create() to",
                "+        hold the lock in another thread for a relatively long time so that it",
                "+        can update while it holds the lock. The updated field isn't a field in",
                "+        'defaults', so update_or_create() shouldn't have an effect on it.",
                "+        \"\"\"",
                "+        lock_status = {'lock_count': 0}",
                "+",
                "+        def birthday_sleep():",
                "+            lock_status['lock_count'] += 1",
                "+            time.sleep(0.5)",
                "+            return date(1940, 10, 10)",
                "+",
                "+        def update_birthday_slowly():",
                "+            try:",
                "+                Person.objects.update_or_create(first_name='John', defaults={'birthday': birthday_sleep})",
                "+            finally:",
                "+                # Avoid leaking connection for Oracle",
                "+                connection.close()",
                "+",
                "+        def lock_wait(expected_lock_count):",
                "+            # timeout after ~0.5 seconds",
                "+            for i in range(20):",
                "+                time.sleep(0.025)",
                "+                if lock_status['lock_count'] == expected_lock_count:",
                "+                    return True",
                "+            self.skipTest('Database took too long to lock the row')",
                "+",
                "+        # update_or_create in a separate thread.",
                "+        t = Thread(target=update_birthday_slowly)",
                "+        before_start = datetime.now()",
                "+        t.start()",
                "+        lock_wait(1)",
                "+        # Create object *after* initial attempt by update_or_create to get obj",
                "+        # but before creation attempt.",
                "+        Person.objects.create(first_name='John', last_name='Lennon', birthday=date(1940, 10, 9))",
                "+        lock_wait(2)",
                "+        # At this point, the thread is pausing for 0.5 seconds, so now attempt",
                "+        # to modify object before update_or_create() calls save(). This should",
                "+        # be blocked until after the save().",
                "+        Person.objects.filter(first_name='John').update(last_name='NotLennon')",
                "+        after_update = datetime.now()",
                "+        # Wait for thread to finish",
                "+        t.join()",
                "+        # Check call to update_or_create() succeeded and the subsequent",
                "+        # (blocked) call to update().",
                "+        updated_person = Person.objects.get(first_name='John')",
                "+        self.assertEqual(updated_person.birthday, date(1940, 10, 10))  # set by update_or_create()",
                "+        self.assertEqual(updated_person.last_name, 'NotLennon')        # set by update()",
                "+        self.assertGreater(after_update - before_start, timedelta(seconds=1))",
                "+"
            ],
            "changed_files": [
                "django/db/models/query.py",
                "tests/get_or_create/models.py",
                "tests/get_or_create/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29499": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.10",
                "2.0.11",
                "2.0.12",
                "2.0.13",
                "2.0.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29499",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e3be4e94d1bc38f9aac087a40eebd0a46c3dacea",
            "repository": "https://github.com/django/django",
            "timestamp": 1533679488,
            "hunks": 4,
            "message": "[2.1.x] Fixed #29623 -- Fixed translation failure of DurationField's \"overflow\" error message. Backport of 730173d1c5cf210d8e3bd951fa49f64b9bc561ca from master",
            "diff": [
                "diff --git a/django/forms/fields.py b/django/forms/fields.py",
                "index 370f78e8b5..6e19c79144 100644",
                "--- a/django/forms/fields.py",
                "+++ b/django/forms/fields.py",
                "@@ -470,8 +470,3 @@ class DurationField(Field):",
                "         'invalid': _('Enter a valid duration.'),",
                "-        'overflow': _(",
                "-            'The number of days must be between {min_days} and {max_days}.'.format(",
                "-                min_days=datetime.timedelta.min.days,",
                "-                max_days=datetime.timedelta.max.days,",
                "-            )",
                "-        )",
                "+        'overflow': _('The number of days must be between {min_days} and {max_days}.')",
                "     }",
                "@@ -491,3 +486,6 @@ class DurationField(Field):",
                "         except OverflowError:",
                "-            raise ValidationError(self.error_messages['overflow'], code='overflow')",
                "+            raise ValidationError(self.error_messages['overflow'].format(",
                "+                min_days=datetime.timedelta.min.days,",
                "+                max_days=datetime.timedelta.max.days,",
                "+            ), code='overflow')",
                "         if value is None:",
                "diff --git a/tests/forms_tests/field_tests/test_durationfield.py b/tests/forms_tests/field_tests/test_durationfield.py",
                "index 4eac37c102..2c2e17acd3 100644",
                "--- a/tests/forms_tests/field_tests/test_durationfield.py",
                "+++ b/tests/forms_tests/field_tests/test_durationfield.py",
                "@@ -5,2 +5,3 @@ from django.forms import DurationField",
                " from django.test import SimpleTestCase",
                "+from django.utils import translation",
                " from django.utils.duration import duration_string",
                "@@ -33,2 +34,11 @@ class DurationFieldTest(FormFieldAssertionsMixin, SimpleTestCase):",
                "+    def test_overflow_translation(self):",
                "+        msg = \"Le nombre de jours doit \u00c3\u00aatre entre {min_days} et {max_days}.\".format(",
                "+            min_days=datetime.timedelta.min.days,",
                "+            max_days=datetime.timedelta.max.days,",
                "+        )",
                "+        with translation.override('fr'):",
                "+            with self.assertRaisesMessage(ValidationError, msg):",
                "+                DurationField().clean('1000000000 00:00:00')",
                "+",
                "     def test_durationfield_render(self):"
            ],
            "changed_files": [
                "django/forms/fields.py",
                "tests/forms_tests/field_tests/test_durationfield.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29623": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29623",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2092206bee3281e6809a8fddb5230d80902a02b4",
            "repository": "https://github.com/django/django",
            "timestamp": 1533219624,
            "hunks": 12,
            "message": "Refs #29600 -- Updated django.utils.datetime_safe now that Python 2 is unsupported.",
            "diff": [
                "diff --git a/django/utils/datetime_safe.py b/django/utils/datetime_safe.py",
                "index ed8420eb8e..7eaa5c21ce 100644",
                "--- a/django/utils/datetime_safe.py",
                "+++ b/django/utils/datetime_safe.py",
                "@@ -1,4 +1,4 @@",
                "-# Python's datetime strftime doesn't handle dates before 1900.",
                "-# These classes override date and datetime to support the formatting of a date",
                "-# through its full \"proleptic Gregorian\" date range.",
                "+# These classes override date and datetime to ensure that strftime('%Y')",
                "+# returns four digits (with leading zeros) on years < 1000.",
                "+# https://bugs.python.org/issue13305",
                " #",
                "@@ -6,4 +6,4 @@",
                " #",
                "-# >>> datetime_safe.date(1850, 8, 2).strftime(\"%Y/%m/%d was a %A\")",
                "-# '1850/08/02 was a Friday'",
                "+# >>> datetime_safe.date(10, 8, 2).strftime(\"%Y/%m/%d was a %A\")",
                "+# '0010/08/02 was a Monday'",
                "@@ -73,3 +73,3 @@ def _findall(text, substr):",
                " def strftime(dt, fmt):",
                "-    if dt.year >= 1900:",
                "+    if dt.year >= 1000:",
                "         return super(type(dt), dt).strftime(fmt)",
                "@@ -77,3 +77,3 @@ def strftime(dt, fmt):",
                "     if illegal_formatting:",
                "-        raise TypeError(\"strftime of dates before 1900 does not handle\" + illegal_formatting.group(0))",
                "+        raise TypeError(\"strftime of dates before 1000 does not handle \" + illegal_formatting.group(0))",
                "diff --git a/tests/utils_tests/test_datetime_safe.py b/tests/utils_tests/test_datetime_safe.py",
                "index 5fa08bc4f4..56eec838fa 100644",
                "--- a/tests/utils_tests/test_datetime_safe.py",
                "+++ b/tests/utils_tests/test_datetime_safe.py",
                "@@ -1,2 +1 @@",
                "-import unittest",
                " from datetime import (",
                "@@ -6,2 +5,3 @@ from datetime import (",
                "+from django.test import SimpleTestCase",
                " from django.utils.datetime_safe import date, datetime, time",
                "@@ -9,7 +9,8 @@ from django.utils.datetime_safe import date, datetime, time",
                "-class DatetimeTests(unittest.TestCase):",
                "+class DatetimeTests(SimpleTestCase):",
                "     def setUp(self):",
                "-        self.just_safe = (1900, 1, 1)",
                "-        self.just_unsafe = (1899, 12, 31, 23, 59, 59)",
                "+        self.percent_y_safe = (1900, 1, 1)  # >= 1900 required on Windows.",
                "+        self.just_safe = (1000, 1, 1)",
                "+        self.just_unsafe = (999, 12, 31, 23, 59, 59)",
                "         self.just_time = (11, 30, 59)",
                "@@ -36,10 +37,10 @@ class DatetimeTests(unittest.TestCase):",
                "     def test_safe_strftime(self):",
                "-        self.assertEqual(date(*self.just_unsafe[:3]).strftime('%Y-%m-%d (weekday %w)'), '1899-12-31 (weekday 0)')",
                "-        self.assertEqual(date(*self.just_safe).strftime('%Y-%m-%d (weekday %w)'), '1900-01-01 (weekday 1)')",
                "+        self.assertEqual(date(*self.just_unsafe[:3]).strftime('%Y-%m-%d (weekday %w)'), '0999-12-31 (weekday 2)')",
                "+        self.assertEqual(date(*self.just_safe).strftime('%Y-%m-%d (weekday %w)'), '1000-01-01 (weekday 3)')",
                "         self.assertEqual(",
                "-            datetime(*self.just_unsafe).strftime('%Y-%m-%d %H:%M:%S (weekday %w)'), '1899-12-31 23:59:59 (weekday 0)'",
                "+            datetime(*self.just_unsafe).strftime('%Y-%m-%d %H:%M:%S (weekday %w)'), '0999-12-31 23:59:59 (weekday 2)'",
                "         )",
                "         self.assertEqual(",
                "-            datetime(*self.just_safe).strftime('%Y-%m-%d %H:%M:%S (weekday %w)'), '1900-01-01 00:00:00 (weekday 1)'",
                "+            datetime(*self.just_safe).strftime('%Y-%m-%d %H:%M:%S (weekday %w)'), '1000-01-01 00:00:00 (weekday 3)'",
                "         )",
                "@@ -49,4 +50,6 @@ class DatetimeTests(unittest.TestCase):",
                "         # %y will error before this date",
                "-        self.assertEqual(date(*self.just_safe).strftime('%y'), '00')",
                "-        self.assertEqual(datetime(*self.just_safe).strftime('%y'), '00')",
                "+        self.assertEqual(date(*self.percent_y_safe).strftime('%y'), '00')",
                "+        self.assertEqual(datetime(*self.percent_y_safe).strftime('%y'), '00')",
                "+        with self.assertRaisesMessage(TypeError, 'strftime of dates before 1000 does not handle %y'):",
                "+            datetime(*self.just_unsafe).strftime('%y')"
            ],
            "changed_files": [
                "django/utils/datetime_safe.py",
                "tests/utils_tests/test_datetime_safe.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29600": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29600",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2a74ceb5f371c1083bfc9b95e093543ba09eb20f",
            "repository": "https://github.com/django/django",
            "timestamp": 1532363566,
            "hunks": 3,
            "message": "Fixed #24336 -- Made django.conf.urls.static() ignore all absolute URLs",
            "diff": [
                "diff --git a/django/conf/urls/static.py b/django/conf/urls/static.py",
                "index 150f4ffd3f..fa83645b9d 100644",
                "--- a/django/conf/urls/static.py",
                "+++ b/django/conf/urls/static.py",
                "@@ -1,2 +1,3 @@",
                " import re",
                "+from urllib.parse import urlsplit",
                "@@ -21,3 +22,3 @@ def static(prefix, view=serve, **kwargs):",
                "         raise ImproperlyConfigured(\"Empty static prefix not permitted\")",
                "-    elif not settings.DEBUG or '://' in prefix:",
                "+    elif not settings.DEBUG or urlsplit(prefix).netloc:",
                "         # No-op if not in debug mode or a non-local prefix.",
                "diff --git a/tests/view_tests/tests/test_static.py b/tests/view_tests/tests/test_static.py",
                "index 03cb19ea02..3154ce1703 100644",
                "--- a/tests/view_tests/tests/test_static.py",
                "+++ b/tests/view_tests/tests/test_static.py",
                "@@ -155,4 +155,5 @@ class StaticHelperTest(StaticTests):",
                "     def test_special_prefix(self):",
                "-        \"\"\"No URLs are served if prefix contains '://'.\"\"\"",
                "-        self.assertEqual(static('http://'), [])",
                "+        \"\"\"No URLs are served if prefix contains a netloc part.\"\"\"",
                "+        self.assertEqual(static('http://example.org'), [])",
                "+        self.assertEqual(static('//example.org'), [])"
            ],
            "changed_files": [
                "django/conf/urls/static.py",
                "tests/view_tests/tests/test_static.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "24336": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 24336",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "71a739f3d752015504d455bf6f01e63a04d1a383",
            "repository": "https://github.com/django/django",
            "timestamp": 1531966022,
            "hunks": 1,
            "message": "Fixed #29576 -- Corrected the test client's HTTP_COOKIE header.",
            "diff": [
                "diff --git a/tests/test_client_regress/tests.py b/tests/test_client_regress/tests.py",
                "index 36b28d3a92..7c41fa168e 100644",
                "--- a/tests/test_client_regress/tests.py",
                "+++ b/tests/test_client_regress/tests.py",
                "@@ -1425 +1425,7 @@ class RequestFactoryEnvironmentTests(SimpleTestCase):",
                "         self.assertEqual(request.META.get('SCRIPT_NAME') + request.META.get('PATH_INFO'), '/path/')",
                "+",
                "+    def test_cookies(self):",
                "+        factory = RequestFactory()",
                "+        factory.cookies.load('A=\"B\"; C=\"D\"; Path=/; Version=1')",
                "+        request = factory.get('/')",
                "+        self.assertEqual(request.META['HTTP_COOKIE'], 'A=\"B\"; C=\"D\"')"
            ],
            "changed_files": [
                "tests/test_client_regress/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29576": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29576",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b5c7cb4d3306a7b4e8f87bcf365ff30ae53018ed",
            "repository": "https://github.com/django/django",
            "timestamp": 1533777918,
            "hunks": 3,
            "message": "Fixed #29653 -- Fixed missing related_query_name reverse accessor if GenericRelation is declared on an abstract base model. Regression in 4ab027b94409e6415b774797bf9d3593da9d9ea8. Thanks Lauri Kainulainen for the report.",
            "diff": [
                "diff --git a/django/db/models/base.py b/django/db/models/base.py",
                "index d92fcb893a..3c2147ba78 100644",
                "--- a/django/db/models/base.py",
                "+++ b/django/db/models/base.py",
                "@@ -282,3 +282,4 @@ class ModelBase(type):",
                "                     field = copy.deepcopy(field)",
                "-                    field.mti_inherited = True",
                "+                    if not base._meta.abstract:",
                "+                        field.mti_inherited = True",
                "                     new_class.add_to_class(field.name, field)",
                "diff --git a/tests/generic_relations_regress/models.py b/tests/generic_relations_regress/models.py",
                "index f9cdb1b549..06f5888fbe 100644",
                "--- a/tests/generic_relations_regress/models.py",
                "+++ b/tests/generic_relations_regress/models.py",
                "@@ -160,3 +160,3 @@ class SpecialGenericRelation(GenericRelation):",
                " class HasLinks(models.Model):",
                "-    links = SpecialGenericRelation(Link)",
                "+    links = SpecialGenericRelation(Link, related_query_name='targets')",
                "diff --git a/tests/generic_relations_regress/tests.py b/tests/generic_relations_regress/tests.py",
                "index 769a64d0f1..fc7447fa51 100644",
                "--- a/tests/generic_relations_regress/tests.py",
                "+++ b/tests/generic_relations_regress/tests.py",
                "@@ -275 +275,10 @@ class GenericRelationTests(TestCase):",
                "         self.assertCountEqual(result, [link])",
                "+",
                "+    def test_generic_reverse_relation_with_abc(self):",
                "+        \"\"\"",
                "+        The reverse generic relation accessor (targets) is created if the",
                "+        GenericRelation comes from an abstract base model (HasLinks).",
                "+        \"\"\"",
                "+        thing = HasLinkThing.objects.create()",
                "+        link = Link.objects.create(content_object=thing)",
                "+        self.assertCountEqual(link.targets.all(), [thing])"
            ],
            "changed_files": [
                "django/db/models/base.py",
                "tests/generic_relations_regress/models.py",
                "tests/generic_relations_regress/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29653": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29653",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "058d33f3eddef950e4266ea942d39b1df95ee5de",
            "repository": "https://github.com/django/django",
            "timestamp": 1526744282,
            "hunks": 9,
            "message": "Fixed #29198 -- Added migrate --plan option.",
            "diff": [
                "diff --git a/django/core/management/commands/migrate.py b/django/core/management/commands/migrate.py",
                "index 1e407831b4..299edbe421 100644",
                "--- a/django/core/management/commands/migrate.py",
                "+++ b/django/core/management/commands/migrate.py",
                "@@ -18,2 +18,3 @@ from django.db.migrations.state import ModelState, ProjectState",
                " from django.utils.module_loading import module_has_submodule",
                "+from django.utils.text import Truncator",
                "@@ -52,2 +53,6 @@ class Command(BaseCommand):",
                "         )",
                "+        parser.add_argument(",
                "+            '--plan', action='store_true',",
                "+            help='Shows a list of the migration actions that will be performed.',",
                "+        )",
                "         parser.add_argument(",
                "@@ -136,4 +141,16 @@ class Command(BaseCommand):",
                "         plan = executor.migration_plan(targets)",
                "-        run_syncdb = options['run_syncdb'] and executor.loader.unmigrated_apps",
                "+        if options['plan']:",
                "+            self.stdout.write('Planned operations:', self.style.MIGRATE_LABEL)",
                "+            if not plan:",
                "+                self.stdout.write('  No planned migration operations.')",
                "+            for migration, backwards in plan:",
                "+                self.stdout.write(str(migration), self.style.MIGRATE_HEADING)",
                "+                for operation in migration.operations:",
                "+                    message, is_error = self.describe_operation(operation, backwards)",
                "+                    style = self.style.WARNING if is_error else None",
                "+                    self.stdout.write('    ' + message, style)",
                "+            return",
                "+",
                "+        run_syncdb = options['run_syncdb'] and executor.loader.unmigrated_apps",
                "         # Print some useful info",
                "@@ -311 +328,25 @@ class Command(BaseCommand):",
                "                 self.stdout.write(\"    Running deferred SQL...\\n\")",
                "+",
                "+    @staticmethod",
                "+    def describe_operation(operation, backwards):",
                "+        \"\"\"Return a string that describes a migration operation for --plan.\"\"\"",
                "+        prefix = ''",
                "+        if hasattr(operation, 'code'):",
                "+            code = operation.reverse_code if backwards else operation.code",
                "+            action = code.__doc__ if code else ''",
                "+        elif hasattr(operation, 'sql'):",
                "+            action = operation.reverse_sql if backwards else operation.sql",
                "+        else:",
                "+            action = ''",
                "+            if backwards:",
                "+                prefix = 'Undo '",
                "+        if action is None:",
                "+            action = 'IRREVERSIBLE'",
                "+            is_error = True",
                "+        else:",
                "+            action = action.replace('\\n', '')",
                "+            is_error = False",
                "+        if action:",
                "+            action = ' -> ' + action",
                "+        truncated = Truncator(action)",
                "+        return prefix + operation.describe() + truncated.chars(40), is_error",
                "diff --git a/tests/migrations/test_commands.py b/tests/migrations/test_commands.py",
                "index 8276049dc6..3bc37b6c15 100644",
                "--- a/tests/migrations/test_commands.py",
                "+++ b/tests/migrations/test_commands.py",
                "@@ -300,2 +300,69 @@ class MigrateTests(MigrationTestBase):",
                "+    @override_settings(MIGRATION_MODULES={'migrations': 'migrations.test_migrations_plan'})",
                "+    def test_migrate_plan(self):",
                "+        \"\"\"Tests migrate --plan output.\"\"\"",
                "+        out = io.StringIO()",
                "+        # Show the plan up to the third migration.",
                "+        call_command('migrate', 'migrations', '0003', plan=True, stdout=out, no_color=True)",
                "+        self.assertEqual(",
                "+            'Planned operations:\\n'",
                "+            'migrations.0001_initial\\n'",
                "+            '    Create model Salamander\\n'",
                "+            '    Raw Python operation -> Grow salamander tail.\\n'",
                "+            'migrations.0002_second\\n'",
                "+            '    Create model Book\\n'",
                "+            '    Raw SQL operation -> SELECT * FROM migrations_book\\n'",
                "+            'migrations.0003_third\\n'",
                "+            '    Create model Author\\n'",
                "+            '    Raw SQL operation -> SELECT * FROM migrations_author\\n',",
                "+            out.getvalue()",
                "+        )",
                "+        # Migrate to the third migration.",
                "+        call_command('migrate', 'migrations', '0003', verbosity=0)",
                "+        out = io.StringIO()",
                "+        # Show the plan for when there is nothing to apply.",
                "+        call_command('migrate', 'migrations', '0003', plan=True, stdout=out, no_color=True)",
                "+        self.assertEqual(",
                "+            'Planned operations:\\n'",
                "+            '  No planned migration operations.\\n',",
                "+            out.getvalue()",
                "+        )",
                "+        out = io.StringIO()",
                "+        # Show the plan for reverse migration back to 0001.",
                "+        call_command('migrate', 'migrations', '0001', plan=True, stdout=out, no_color=True)",
                "+        self.assertEqual(",
                "+            'Planned operations:\\n'",
                "+            'migrations.0003_third\\n'",
                "+            '    Undo Create model Author\\n'",
                "+            '    Raw SQL operation -> SELECT * FROM migrations_book\\n'",
                "+            'migrations.0002_second\\n'",
                "+            '    Undo Create model Book\\n'",
                "+            '    Raw SQL operation -> SELECT * FROM migrations_salamander\\n',",
                "+            out.getvalue()",
                "+        )",
                "+        out = io.StringIO()",
                "+        # Show the migration plan to fourth, with truncated details.",
                "+        call_command('migrate', 'migrations', '0004', plan=True, stdout=out, no_color=True)",
                "+        self.assertEqual(",
                "+            'Planned operations:\\n'",
                "+            'migrations.0004_fourth\\n'",
                "+            '    Raw SQL operation -> SELECT * FROM migrations_author W...\\n',",
                "+            out.getvalue()",
                "+        )",
                "+        # Migrate to the fourth migration.",
                "+        call_command('migrate', 'migrations', '0004', verbosity=0)",
                "+        out = io.StringIO()",
                "+        # Show the plan when an operation is irreversible.",
                "+        call_command('migrate', 'migrations', '0003', plan=True, stdout=out, no_color=True)",
                "+        self.assertEqual(",
                "+            'Planned operations:\\n'",
                "+            'migrations.0004_fourth\\n'",
                "+            '    Raw SQL operation -> IRREVERSIBLE\\n',",
                "+            out.getvalue()",
                "+        )",
                "+        # Cleanup by unmigrating everything: fake the irreversible, then",
                "+        # migrate all to zero.",
                "+        call_command('migrate', 'migrations', '0003', fake=True, verbosity=0)",
                "+        call_command('migrate', 'migrations', 'zero', verbosity=0)",
                "+",
                "     @override_settings(MIGRATION_MODULES={\"migrations\": \"migrations.test_migrations_empty\"})",
                "diff --git a/tests/migrations/test_migrations_plan/0001_initial.py b/tests/migrations/test_migrations_plan/0001_initial.py",
                "new file mode 100644",
                "index 0000000000..0a4001d52a",
                "--- /dev/null",
                "+++ b/tests/migrations/test_migrations_plan/0001_initial.py",
                "@@ -0,0 +1,28 @@",
                "+from django.db import migrations, models",
                "+",
                "+",
                "+def grow_tail(x, y):",
                "+    \"\"\"Grow salamander tail.\"\"\"",
                "+    pass",
                "+",
                "+",
                "+def shrink_tail(x, y):",
                "+    \"\"\"Shrink salamander tail.\"\"\"",
                "+    pass",
                "+",
                "+",
                "+class Migration(migrations.Migration):",
                "+",
                "+    initial = True",
                "+",
                "+    operations = [",
                "+        migrations.CreateModel(",
                "+            'Salamander',",
                "+            [",
                "+                ('id', models.AutoField(primary_key=True)),",
                "+                ('tail', models.IntegerField(default=0)),",
                "+                ('silly_field', models.BooleanField(default=False)),",
                "+            ],",
                "+        ),",
                "+        migrations.RunPython(grow_tail, shrink_tail),",
                "+    ]",
                "diff --git a/tests/migrations/test_migrations_plan/0002_second.py b/tests/migrations/test_migrations_plan/0002_second.py",
                "new file mode 100644",
                "index 0000000000..e8aeec880b",
                "--- /dev/null",
                "+++ b/tests/migrations/test_migrations_plan/0002_second.py",
                "@@ -0,0 +1,20 @@",
                "+from django.db import migrations, models",
                "+",
                "+",
                "+class Migration(migrations.Migration):",
                "+",
                "+    dependencies = [",
                "+        ('migrations', '0001_initial'),",
                "+    ]",
                "+",
                "+    operations = [",
                "+",
                "+        migrations.CreateModel(",
                "+            'Book',",
                "+            [",
                "+                ('id', models.AutoField(primary_key=True)),",
                "+            ],",
                "+        ),",
                "+        migrations.RunSQL('SELECT * FROM migrations_book', 'SELECT * FROM migrations_salamander')",
                "+",
                "+    ]",
                "diff --git a/tests/migrations/test_migrations_plan/0003_third.py b/tests/migrations/test_migrations_plan/0003_third.py",
                "new file mode 100644",
                "index 0000000000..d045a91448",
                "--- /dev/null",
                "+++ b/tests/migrations/test_migrations_plan/0003_third.py",
                "@@ -0,0 +1,19 @@",
                "+from django.db import migrations, models",
                "+",
                "+",
                "+class Migration(migrations.Migration):",
                "+",
                "+    dependencies = [",
                "+        ('migrations', '0002_second'),",
                "+    ]",
                "+",
                "+    operations = [",
                "+",
                "+        migrations.CreateModel(",
                "+            'Author',",
                "+            [",
                "+                ('id', models.AutoField(primary_key=True)),",
                "+            ],",
                "+        ),",
                "+        migrations.RunSQL('SELECT * FROM migrations_author', 'SELECT * FROM migrations_book')",
                "+    ]",
                "diff --git a/tests/migrations/test_migrations_plan/0004_fourth.py b/tests/migrations/test_migrations_plan/0004_fourth.py",
                "new file mode 100644",
                "index 0000000000..d3e1a54b4d",
                "--- /dev/null",
                "+++ b/tests/migrations/test_migrations_plan/0004_fourth.py",
                "@@ -0,0 +1,12 @@",
                "+from django.db import migrations",
                "+",
                "+",
                "+class Migration(migrations.Migration):",
                "+",
                "+    dependencies = [",
                "+        (\"migrations\", \"0003_third\"),",
                "+    ]",
                "+",
                "+    operations = [",
                "+        migrations.RunSQL('SELECT * FROM migrations_author WHERE id = 1')",
                "+    ]",
                "diff --git a/tests/migrations/test_migrations_plan/__init__.py b/tests/migrations/test_migrations_plan/__init__.py",
                "new file mode 100644",
                "index 0000000000..e69de29bb2"
            ],
            "changed_files": [
                "django/core/management/commands/migrate.py",
                "tests/migrations/test_commands.py",
                "tests/migrations/test_migrations_plan/0001_initial.py",
                "tests/migrations/test_migrations_plan/0002_second.py",
                "tests/migrations/test_migrations_plan/0003_third.py",
                "tests/migrations/test_migrations_plan/0004_fourth.py",
                "tests/migrations/test_migrations_plan/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29198": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29198",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ba83378a7762c51be235b521aa5b48233d6c6c82",
            "repository": "https://github.com/django/django",
            "timestamp": 1529922280,
            "hunks": 23,
            "message": "Fixed #29523 -- Removed jQuery usage in DateTimeShortcuts.js & collapse.js.",
            "diff": [
                "diff --git a/django/contrib/admin/helpers.py b/django/contrib/admin/helpers.py",
                "index 5e8e0caf69..d0350c3930 100644",
                "--- a/django/contrib/admin/helpers.py",
                "+++ b/django/contrib/admin/helpers.py",
                "@@ -83,8 +83,3 @@ class Fieldset:",
                "             extra = '' if settings.DEBUG else '.min'",
                "-            js = [",
                "-                'vendor/jquery/jquery%s.js' % extra,",
                "-                'jquery.init.js',",
                "-                'collapse%s.js' % extra,",
                "-            ]",
                "-            return forms.Media(js=['admin/js/%s' % url for url in js])",
                "+            return forms.Media(js=['admin/js/collapse%s.js' % extra])",
                "         return forms.Media()",
                "diff --git a/django/contrib/admin/static/admin/js/SelectFilter2.js b/django/contrib/admin/static/admin/js/SelectFilter2.js",
                "index b6bcda0c3c..4221778bb2 100644",
                "--- a/django/contrib/admin/static/admin/js/SelectFilter2.js",
                "+++ b/django/contrib/admin/static/admin/js/SelectFilter2.js",
                "@@ -168,9 +168,3 @@ Requires jQuery, core.js, and SelectBox.js.",
                "                 var j_to_box = $('#' + field_id + '_to');",
                "-                var resize_filters = function() { j_to_box.height($(filter_p).outerHeight() + j_from_box.outerHeight()); };",
                "-                if (j_from_box.outerHeight() > 0) {",
                "-                    resize_filters(); // This fieldset is already open. Resize now.",
                "-                } else {",
                "-                    // This fieldset is probably collapsed. Wait for its 'show' event.",
                "-                    j_to_box.closest('fieldset').one('show.fieldset', resize_filters);",
                "-                }",
                "+                j_to_box.height($(filter_p).outerHeight() + j_from_box.outerHeight());",
                "             }",
                "diff --git a/django/contrib/admin/static/admin/js/admin/DateTimeShortcuts.js b/django/contrib/admin/static/admin/js/admin/DateTimeShortcuts.js",
                "index b7ca95bd67..8b7de5eed7 100644",
                "--- a/django/contrib/admin/static/admin/js/admin/DateTimeShortcuts.js",
                "+++ b/django/contrib/admin/static/admin/js/admin/DateTimeShortcuts.js",
                "@@ -65,3 +65,2 @@",
                "         addTimezoneWarning: function(inp) {",
                "-            var $ = django.jQuery;",
                "             var warningClass = DateTimeShortcuts.timezoneWarningClass;",
                "@@ -75,3 +74,3 @@",
                "             // Check if warning is already there.",
                "-            if ($(inp).siblings('.' + warningClass).length) {",
                "+            if (inp.parentNode.querySelectorAll('.' + warningClass).length) {",
                "                 return;",
                "@@ -97,9 +96,7 @@",
                "-            var $warning = $('<span>');",
                "-            $warning.attr('class', warningClass);",
                "-            $warning.text(message);",
                "-",
                "-            $(inp).parent()",
                "-                .append($('<br>'))",
                "-                .append($warning);",
                "+            var warning = document.createElement('span');",
                "+            warning.className = warningClass;",
                "+            warning.textContent = message;",
                "+            inp.parentNode.appendChild(document.createElement('br'));",
                "+            inp.parentNode.appendChild(warning);",
                "         },",
                "@@ -117,3 +114,3 @@",
                "             now_link.setAttribute('href', \"#\");",
                "-            now_link.appendChild(document.createTextNode(gettext('Now')));",
                "+            now_link.textContent = gettext('Now');",
                "             now_link.addEventListener('click', function(e) {",
                "@@ -347,3 +344,3 @@",
                "             });",
                "-            django.jQuery(document).on('keyup', function(event) {",
                "+            document.addEventListener('keyup', function(event) {",
                "                 if (event.which === 27) {",
                "diff --git a/django/contrib/admin/static/admin/js/collapse.js b/django/contrib/admin/static/admin/js/collapse.js",
                "index 4b296896d4..3123878e10 100644",
                "--- a/django/contrib/admin/static/admin/js/collapse.js",
                "+++ b/django/contrib/admin/static/admin/js/collapse.js",
                "@@ -1,26 +1,52 @@",
                " /*global gettext*/",
                "-(function($) {",
                "+(function() {",
                "     'use strict';",
                "-    $(document).ready(function() {",
                "+    var closestElem = function(elem, tagName) {",
                "+        if (elem.nodeName === tagName.toUpperCase()) {",
                "+            return elem;",
                "+        }",
                "+        if (elem.parentNode.nodeName === 'BODY') {",
                "+            return null;",
                "+        }",
                "+        return elem.parentNode && closestElem(elem.parentNode, tagName);",
                "+    };",
                "+",
                "+    window.addEventListener('load', function() {",
                "         // Add anchor tag for Show/Hide link",
                "-        $(\"fieldset.collapse\").each(function(i, elem) {",
                "+        var fieldsets = document.querySelectorAll('fieldset.collapse');",
                "+        for (var i = 0; i < fieldsets.length; i++) {",
                "+            var elem = fieldsets[i];",
                "             // Don't hide if fields in this fieldset have errors",
                "-            if ($(elem).find(\"div.errors\").length === 0) {",
                "-                $(elem).addClass(\"collapsed\").find(\"h2\").first().append(' (<a id=\"fieldsetcollapser' +",
                "-                    i + '\" class=\"collapse-toggle\" href=\"#\">' + gettext(\"Show\") +",
                "-                    '</a>)');",
                "+            if (elem.querySelectorAll('div.errors').length === 0) {",
                "+                elem.classList.add('collapsed');",
                "+                var h2 = elem.querySelector('h2');",
                "+                var link = document.createElement('a');",
                "+                link.setAttribute('id', 'fieldsetcollapser' + i);",
                "+                link.setAttribute('class', 'collapse-toggle');",
                "+                link.setAttribute('href', '#');",
                "+                link.textContent = gettext('Show');",
                "+                h2.appendChild(document.createTextNode(' ('));",
                "+                h2.appendChild(link);",
                "+                h2.appendChild(document.createTextNode(')'));",
                "             }",
                "-        });",
                "+        }",
                "         // Add toggle to anchor tag",
                "-        $(\"fieldset.collapse a.collapse-toggle\").on('click', function(ev) {",
                "-            if ($(this).closest(\"fieldset\").hasClass(\"collapsed\")) {",
                "+        var toggles = document.querySelectorAll('fieldset.collapse a.collapse-toggle');",
                "+        var toggleFunc = function(ev) {",
                "+            ev.preventDefault();",
                "+            var fieldset = closestElem(this, 'fieldset');",
                "+            if (fieldset.classList.contains('collapsed')) {",
                "                 // Show",
                "-                $(this).text(gettext(\"Hide\")).closest(\"fieldset\").removeClass(\"collapsed\").trigger(\"show.fieldset\", [$(this).attr(\"id\")]);",
                "+                this.textContent = gettext('Hide');",
                "+                fieldset.classList.remove('collapsed');",
                "             } else {",
                "                 // Hide",
                "-                $(this).text(gettext(\"Show\")).closest(\"fieldset\").addClass(\"collapsed\").trigger(\"hide.fieldset\", [$(this).attr(\"id\")]);",
                "+                this.textContent = gettext('Show');",
                "+                fieldset.classList.add('collapsed');",
                "             }",
                "-            return false;",
                "-        });",
                "+        };",
                "+        for (i = 0; i < toggles.length; i++) {",
                "+            toggles[i].addEventListener('click', toggleFunc);",
                "+        }",
                "     });",
                "-})(django.jQuery);",
                "+})();",
                "diff --git a/django/contrib/admin/widgets.py b/django/contrib/admin/widgets.py",
                "index 4ce3e053f6..5bf54da7d6 100644",
                "--- a/django/contrib/admin/widgets.py",
                "+++ b/django/contrib/admin/widgets.py",
                "@@ -53,12 +53,7 @@ class FilteredSelectMultiple(forms.SelectMultiple):",
                " class AdminDateWidget(forms.DateInput):",
                "-    @property",
                "-    def media(self):",
                "-        extra = '' if settings.DEBUG else '.min'",
                "+    class Media:",
                "         js = [",
                "-            'vendor/jquery/jquery%s.js' % extra,",
                "-            'jquery.init.js',",
                "-            'calendar.js',",
                "-            'admin/DateTimeShortcuts.js',",
                "+            'admin/js/calendar.js',",
                "+            'admin/js/admin/DateTimeShortcuts.js',",
                "         ]",
                "-        return forms.Media(js=[\"admin/js/%s\" % path for path in js])",
                "@@ -70,12 +65,7 @@ class AdminDateWidget(forms.DateInput):",
                " class AdminTimeWidget(forms.TimeInput):",
                "-    @property",
                "-    def media(self):",
                "-        extra = '' if settings.DEBUG else '.min'",
                "+    class Media:",
                "         js = [",
                "-            'vendor/jquery/jquery%s.js' % extra,",
                "-            'jquery.init.js',",
                "-            'calendar.js',",
                "-            'admin/DateTimeShortcuts.js',",
                "+            'admin/js/calendar.js',",
                "+            'admin/js/admin/DateTimeShortcuts.js',",
                "         ]",
                "-        return forms.Media(js=[\"admin/js/%s\" % path for path in js])"
            ],
            "changed_files": [
                "django/contrib/admin/helpers.py",
                "django/contrib/admin/static/admin/js/SelectFilter2.js",
                "django/contrib/admin/static/admin/js/admin/DateTimeShortcuts.js",
                "django/contrib/admin/static/admin/js/collapse.js",
                "django/contrib/admin/widgets.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29523": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29523",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "861638a3074f289faf729d739edf6326332a484f",
            "repository": "https://github.com/django/django",
            "timestamp": 1532091555,
            "hunks": 6,
            "message": "Fixed #29568 -- Prevented unnecessary UPDATE queries creating child models.",
            "diff": [
                "diff --git a/django/db/models/base.py b/django/db/models/base.py",
                "index 3574f7f676..d92fcb893a 100644",
                "--- a/django/db/models/base.py",
                "+++ b/django/db/models/base.py",
                "@@ -745,5 +745,9 @@ class Model(metaclass=ModelBase):",
                "         with transaction.atomic(using=using, savepoint=False):",
                "+            parent_inserted = False",
                "             if not raw:",
                "-                self._save_parents(cls, using, update_fields)",
                "-            updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)",
                "+                parent_inserted = self._save_parents(cls, using, update_fields)",
                "+            updated = self._save_table(",
                "+                raw, cls, force_insert or parent_inserted,",
                "+                force_update, using, update_fields,",
                "+            )",
                "         # Store the database on which the object was saved",
                "@@ -765,2 +769,3 @@ class Model(metaclass=ModelBase):",
                "         meta = cls._meta",
                "+        inserted = False",
                "         for parent, field in meta.parents.items():",
                "@@ -770,4 +775,9 @@ class Model(metaclass=ModelBase):",
                "                 setattr(self, parent._meta.pk.attname, getattr(self, field.attname))",
                "-            self._save_parents(cls=parent, using=using, update_fields=update_fields)",
                "-            self._save_table(cls=parent, using=using, update_fields=update_fields)",
                "+            parent_inserted = self._save_parents(cls=parent, using=using, update_fields=update_fields)",
                "+            updated = self._save_table(",
                "+                cls=parent, using=using, update_fields=update_fields,",
                "+                force_insert=parent_inserted,",
                "+            )",
                "+            if not updated:",
                "+                inserted = True",
                "             # Set the parent's PK value to self.",
                "@@ -782,2 +792,3 @@ class Model(metaclass=ModelBase):",
                "                     field.delete_cached_value(self)",
                "+        return inserted",
                "diff --git a/tests/model_inheritance/tests.py b/tests/model_inheritance/tests.py",
                "index 7ab75b6cc3..4e8e92a60c 100644",
                "--- a/tests/model_inheritance/tests.py",
                "+++ b/tests/model_inheritance/tests.py",
                "@@ -135,2 +135,20 @@ class ModelInheritanceTests(TestCase):",
                "+    def test_create_child_no_update(self):",
                "+        \"\"\"Creating a child with non-abstract parents only issues INSERTs.\"\"\"",
                "+        def a():",
                "+            GrandChild.objects.create(",
                "+                email='grand_parent@example.com',",
                "+                first_name='grand',",
                "+                last_name='parent',",
                "+            )",
                "+",
                "+        def b():",
                "+            GrandChild().save()",
                "+        for i, test in enumerate([a, b]):",
                "+            with self.subTest(i=i), self.assertNumQueries(4), CaptureQueriesContext(connection) as queries:",
                "+                test()",
                "+                for query in queries:",
                "+                    sql = query['sql']",
                "+                    self.assertIn('INSERT INTO', sql, sql)",
                "+",
                "     def test_eq(self):"
            ],
            "changed_files": [
                "django/db/models/base.py",
                "tests/model_inheritance/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29568": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29568",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ff9543b351e79de78e7867f255ad15e51555ba4a",
            "repository": "https://github.com/django/django",
            "timestamp": 1512465322,
            "hunks": 7,
            "message": "Refs #25809, #28990 -- Added PostgreSQL version check for BrinIndex support.",
            "diff": [
                "diff --git a/django/contrib/postgres/indexes.py b/django/contrib/postgres/indexes.py",
                "index 34e09b19f2..1850b20978 100644",
                "--- a/django/contrib/postgres/indexes.py",
                "+++ b/django/contrib/postgres/indexes.py",
                "@@ -1,2 +1,3 @@",
                " from django.db.models import Index",
                "+from django.db.utils import NotSupportedError",
                " from django.utils.functional import cached_property",
                "@@ -20,2 +21,3 @@ class PostgresIndex(Index):",
                "     def create_sql(self, model, schema_editor, using=''):",
                "+        self.check_supported(schema_editor)",
                "         statement = super().create_sql(model, schema_editor, using=' USING %s' % self.suffix)",
                "@@ -29,2 +31,5 @@ class PostgresIndex(Index):",
                "+    def check_supported(self, schema_editor):",
                "+        pass",
                "+",
                "     def get_with_params(self):",
                "@@ -51,2 +56,8 @@ class BrinIndex(PostgresIndex):",
                "+    def check_supported(self, schema_editor):",
                "+        if not schema_editor.connection.features.has_brin_index_support:",
                "+            raise NotSupportedError('BRIN indexes require PostgreSQL 9.5+.')",
                "+        if self.autosummarize and not schema_editor.connection.features.has_brin_autosummarize:",
                "+            raise NotSupportedError('BRIN option autosummarize requires PostgreSQL 10+.')",
                "+",
                "     def get_with_params(self):",
                "diff --git a/tests/postgres_tests/test_indexes.py b/tests/postgres_tests/test_indexes.py",
                "index 96ff829807..f4ac359a3a 100644",
                "--- a/tests/postgres_tests/test_indexes.py",
                "+++ b/tests/postgres_tests/test_indexes.py",
                "@@ -1 +1,3 @@",
                "+from unittest import mock",
                "+",
                " from django.contrib.postgres.indexes import (",
                "@@ -4,2 +6,3 @@ from django.contrib.postgres.indexes import (",
                " from django.db import connection",
                "+from django.db.utils import NotSupportedError",
                " from django.test import skipUnlessDBFeature",
                "@@ -210,2 +213,21 @@ class SchemaTests(PostgreSQLTestCase):",
                "+    def test_brin_index_not_supported(self):",
                "+        index_name = 'brin_index_exception'",
                "+        index = BrinIndex(fields=['field'], name=index_name)",
                "+        with self.assertRaisesMessage(NotSupportedError, 'BRIN indexes require PostgreSQL 9.5+.'):",
                "+            with mock.patch('django.db.connection.features.has_brin_index_support', False):",
                "+                with connection.schema_editor() as editor:",
                "+                    editor.add_index(CharFieldModel, index)",
                "+        self.assertNotIn(index_name, self.get_constraints(CharFieldModel._meta.db_table))",
                "+",
                "+    @skipUnlessDBFeature('has_brin_index_support')",
                "+    def test_brin_autosummarize_not_supported(self):",
                "+        index_name = 'brin_options_exception'",
                "+        index = BrinIndex(fields=['field'], name=index_name, autosummarize=True)",
                "+        with self.assertRaisesMessage(NotSupportedError, 'BRIN option autosummarize requires PostgreSQL 10+.'):",
                "+            with mock.patch('django.db.connection.features.has_brin_autosummarize', False):",
                "+                with connection.schema_editor() as editor:",
                "+                    editor.add_index(CharFieldModel, index)",
                "+        self.assertNotIn(index_name, self.get_constraints(CharFieldModel._meta.db_table))",
                "+",
                "     def test_btree_index(self):"
            ],
            "changed_files": [
                "django/contrib/postgres/indexes.py",
                "tests/postgres_tests/test_indexes.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "25809": "",
                "28990": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 25809, 28990",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "271542dad1686c438f658aa6220982495db09797",
            "repository": "https://github.com/django/django",
            "timestamp": 1533117148,
            "hunks": 5,
            "message": "Fixed #29499 -- Fixed race condition in QuerySet.update_or_create(). A race condition happened when the object didn't already exist and another process/thread created the object before update_or_create() did and then attempted to update the object, also before update_or_create() saved the object. The update by the other process/thread could be lost.",
            "diff": [
                "diff --git a/django/db/models/query.py b/django/db/models/query.py",
                "index e023d7749d..c1c9e1ee6b 100644",
                "--- a/django/db/models/query.py",
                "+++ b/django/db/models/query.py",
                "@@ -503,3 +503,5 @@ class QuerySet:",
                "                 params = self._extract_model_params(defaults, **kwargs)",
                "-                obj, created = self._create_object_from_params(kwargs, params)",
                "+                # Lock the row so that a concurrent update is blocked until",
                "+                # after update_or_create() has performed its save.",
                "+                obj, created = self._create_object_from_params(kwargs, params, lock=True)",
                "                 if created:",
                "@@ -511,3 +513,3 @@ class QuerySet:",
                "-    def _create_object_from_params(self, lookup, params):",
                "+    def _create_object_from_params(self, lookup, params, lock=False):",
                "         \"\"\"",
                "@@ -523,3 +525,4 @@ class QuerySet:",
                "             try:",
                "-                return self.get(**lookup), False",
                "+                qs = self.select_for_update() if lock else self",
                "+                return qs.get(**lookup), False",
                "             except self.model.DoesNotExist:",
                "diff --git a/tests/get_or_create/models.py b/tests/get_or_create/models.py",
                "index 4a33a809bb..6510bb9464 100644",
                "--- a/tests/get_or_create/models.py",
                "+++ b/tests/get_or_create/models.py",
                "@@ -4,3 +4,3 @@ from django.db import models",
                " class Person(models.Model):",
                "-    first_name = models.CharField(max_length=100)",
                "+    first_name = models.CharField(max_length=100, unique=True)",
                "     last_name = models.CharField(max_length=100)",
                "diff --git a/tests/get_or_create/tests.py b/tests/get_or_create/tests.py",
                "index e4647d2ab5..194d4159b6 100644",
                "--- a/tests/get_or_create/tests.py",
                "+++ b/tests/get_or_create/tests.py",
                "@@ -537,2 +537,60 @@ class UpdateOrCreateTransactionTests(TransactionTestCase):",
                "+    @skipUnlessDBFeature('has_select_for_update')",
                "+    @skipUnlessDBFeature('supports_transactions')",
                "+    def test_creation_in_transaction(self):",
                "+        \"\"\"",
                "+        Objects are selected and updated in a transaction to avoid race",
                "+        conditions. This test checks the behavior of update_or_create() when",
                "+        the object doesn't already exist, but another thread creates the",
                "+        object before update_or_create() does and then attempts to update the",
                "+        object, also before update_or_create(). It forces update_or_create() to",
                "+        hold the lock in another thread for a relatively long time so that it",
                "+        can update while it holds the lock. The updated field isn't a field in",
                "+        'defaults', so update_or_create() shouldn't have an effect on it.",
                "+        \"\"\"",
                "+        lock_status = {'lock_count': 0}",
                "+",
                "+        def birthday_sleep():",
                "+            lock_status['lock_count'] += 1",
                "+            time.sleep(0.5)",
                "+            return date(1940, 10, 10)",
                "+",
                "+        def update_birthday_slowly():",
                "+            try:",
                "+                Person.objects.update_or_create(first_name='John', defaults={'birthday': birthday_sleep})",
                "+            finally:",
                "+                # Avoid leaking connection for Oracle",
                "+                connection.close()",
                "+",
                "+        def lock_wait(expected_lock_count):",
                "+            # timeout after ~0.5 seconds",
                "+            for i in range(20):",
                "+                time.sleep(0.025)",
                "+                if lock_status['lock_count'] == expected_lock_count:",
                "+                    return True",
                "+            self.skipTest('Database took too long to lock the row')",
                "+",
                "+        # update_or_create in a separate thread.",
                "+        t = Thread(target=update_birthday_slowly)",
                "+        before_start = datetime.now()",
                "+        t.start()",
                "+        lock_wait(1)",
                "+        # Create object *after* initial attempt by update_or_create to get obj",
                "+        # but before creation attempt.",
                "+        Person.objects.create(first_name='John', last_name='Lennon', birthday=date(1940, 10, 9))",
                "+        lock_wait(2)",
                "+        # At this point, the thread is pausing for 0.5 seconds, so now attempt",
                "+        # to modify object before update_or_create() calls save(). This should",
                "+        # be blocked until after the save().",
                "+        Person.objects.filter(first_name='John').update(last_name='NotLennon')",
                "+        after_update = datetime.now()",
                "+        # Wait for thread to finish",
                "+        t.join()",
                "+        # Check call to update_or_create() succeeded and the subsequent",
                "+        # (blocked) call to update().",
                "+        updated_person = Person.objects.get(first_name='John')",
                "+        self.assertEqual(updated_person.birthday, date(1940, 10, 10))  # set by update_or_create()",
                "+        self.assertEqual(updated_person.last_name, 'NotLennon')        # set by update()",
                "+        self.assertGreater(after_update - before_start, timedelta(seconds=1))",
                "+"
            ],
            "changed_files": [
                "django/db/models/query.py",
                "tests/get_or_create/models.py",
                "tests/get_or_create/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29499": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29499",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3767c7ff391d5f277e25bca38ef3730ddf9cea9c",
            "repository": "https://github.com/django/django",
            "timestamp": 1533611587,
            "hunks": 7,
            "message": "Fixed #29244 -- Prevented Paginator.count() from silencing TypeError and AttributeError.",
            "diff": [
                "diff --git a/django/core/paginator.py b/django/core/paginator.py",
                "index 4af80a26f2..d48a244a44 100644",
                "--- a/django/core/paginator.py",
                "+++ b/django/core/paginator.py",
                "@@ -1,2 +1,3 @@",
                " import collections.abc",
                "+import inspect",
                " import warnings",
                "@@ -5,2 +6,3 @@ from math import ceil",
                " from django.utils.functional import cached_property",
                "+from django.utils.inspect import method_has_no_args",
                " from django.utils.translation import gettext_lazy as _",
                "@@ -85,9 +87,6 @@ class Paginator:",
                "         \"\"\"Return the total number of objects, across all pages.\"\"\"",
                "-        try:",
                "-            return self.object_list.count()",
                "-        except (AttributeError, TypeError):",
                "-            # AttributeError if object_list has no count() method.",
                "-            # TypeError if object_list.count() requires arguments",
                "-            # (i.e. is of type list).",
                "-            return len(self.object_list)",
                "+        c = getattr(self.object_list, 'count', None)",
                "+        if callable(c) and not inspect.isbuiltin(c) and method_has_no_args(c):",
                "+            return c()",
                "+        return len(self.object_list)",
                "diff --git a/tests/pagination/tests.py b/tests/pagination/tests.py",
                "index 48d4acbb11..8ab04940ab 100644",
                "--- a/tests/pagination/tests.py",
                "+++ b/tests/pagination/tests.py",
                "@@ -1,2 +1 @@",
                "-import unittest",
                " import warnings",
                "@@ -8,3 +7,3 @@ from django.core.paginator import (",
                " )",
                "-from django.test import TestCase",
                "+from django.test import SimpleTestCase, TestCase",
                "@@ -14,3 +13,3 @@ from .models import Article",
                "-class PaginationTests(unittest.TestCase):",
                "+class PaginationTests(SimpleTestCase):",
                "     \"\"\"",
                "@@ -153,2 +152,18 @@ class PaginationTests(unittest.TestCase):",
                "+    def test_count_does_not_silence_attribute_error(self):",
                "+        class AttributeErrorContainer:",
                "+            def count(self):",
                "+                raise AttributeError('abc')",
                "+",
                "+        with self.assertRaisesMessage(AttributeError, 'abc'):",
                "+            Paginator(AttributeErrorContainer(), 10).count()",
                "+",
                "+    def test_count_does_not_silence_type_error(self):",
                "+        class TypeErrorContainer:",
                "+            def count(self):",
                "+                raise TypeError('abc')",
                "+",
                "+        with self.assertRaisesMessage(TypeError, 'abc'):",
                "+            Paginator(TypeErrorContainer(), 10).count()",
                "+",
                "     def check_indexes(self, params, page_num, indexes):"
            ],
            "changed_files": [
                "django/core/paginator.py",
                "tests/pagination/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29244": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29244",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "05b0ae53eaca9312ad40d285390b5b93356c88d8",
            "repository": "https://github.com/django/django",
            "timestamp": 1533135943,
            "hunks": 1,
            "message": "[2.0.x] Post-release version bump.",
            "diff": [
                "diff --git a/django/__init__.py b/django/__init__.py",
                "index ad8c32541c..25f477adc3 100644",
                "--- a/django/__init__.py",
                "+++ b/django/__init__.py",
                "@@ -2,3 +2,3 @@ from django.utils.version import get_version",
                "-VERSION = (2, 0, 8, 'final', 0)",
                "+VERSION = (2, 0, 9, 'alpha', 0)"
            ],
            "changed_files": [
                "django/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.10",
                "2.0.11",
                "2.0.12",
                "2.0.13",
                "2.0.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8d4ab0c41fa0c4243e7c762de6e6077bb884c048",
            "repository": "https://github.com/django/django",
            "timestamp": 1532133472,
            "hunks": 8,
            "message": "Added tests for migrate logging and error messages.",
            "diff": [
                "diff --git a/tests/migrations/test_commands.py b/tests/migrations/test_commands.py",
                "index 3408f2fefa..377490370b 100644",
                "--- a/tests/migrations/test_commands.py",
                "+++ b/tests/migrations/test_commands.py",
                "@@ -38,3 +38,7 @@ class MigrateTests(MigrationTestBase):",
                "         # Run the migrations to 0001 only",
                "-        call_command(\"migrate\", \"migrations\", \"0001\", verbosity=0)",
                "+        stdout = io.StringIO()",
                "+        call_command('migrate', 'migrations', '0001', verbosity=1, stdout=stdout, no_color=True)",
                "+        stdout = stdout.getvalue()",
                "+        self.assertIn('Target specific migration: 0001_initial, from migrations', stdout)",
                "+        self.assertIn('Applying migrations.0001_initial... OK', stdout)",
                "         # The correct tables exist",
                "@@ -50,3 +54,7 @@ class MigrateTests(MigrationTestBase):",
                "         # Unmigrate everything",
                "-        call_command(\"migrate\", \"migrations\", \"zero\", verbosity=0)",
                "+        stdout = io.StringIO()",
                "+        call_command('migrate', 'migrations', 'zero', verbosity=1, stdout=stdout, no_color=True)",
                "+        stdout = stdout.getvalue()",
                "+        self.assertIn('Unapply all migrations: migrations', stdout)",
                "+        self.assertIn('Unapplying migrations.0002_second... OK', stdout)",
                "         # Tables are gone",
                "@@ -66,2 +74,23 @@ class MigrateTests(MigrationTestBase):",
                "+    @override_settings(INSTALLED_APPS=['migrations', 'migrations.migrations_test_apps.unmigrated_app_syncdb'])",
                "+    def test_app_without_migrations(self):",
                "+        msg = \"App 'unmigrated_app_syncdb' does not have migrations.\"",
                "+        with self.assertRaisesMessage(CommandError, msg):",
                "+            call_command('migrate', app_label='unmigrated_app_syncdb')",
                "+",
                "+    @override_settings(MIGRATION_MODULES={'migrations': 'migrations.test_migrations_clashing_prefix'})",
                "+    def test_ambigious_prefix(self):",
                "+        msg = (",
                "+            \"More than one migration matches 'a' in app 'migrations'. Please \"",
                "+            \"be more specific.\"",
                "+        )",
                "+        with self.assertRaisesMessage(CommandError, msg):",
                "+            call_command('migrate', app_label='migrations', migration_name='a')",
                "+",
                "+    @override_settings(MIGRATION_MODULES={'migrations': 'migrations.test_migrations'})",
                "+    def test_unknown_prefix(self):",
                "+        msg = \"Cannot find a migration matching 'nonexistent' from app 'migrations'.\"",
                "+        with self.assertRaisesMessage(CommandError, msg):",
                "+            call_command('migrate', app_label='migrations', migration_name='nonexistent')",
                "+",
                "     @override_settings(MIGRATION_MODULES={\"migrations\": \"migrations.test_migrations_initial_false\"})",
                "@@ -554,4 +583,5 @@ class MigrateTests(MigrationTestBase):",
                "         \"\"\"",
                "+        stdout = io.StringIO()",
                "         with mock.patch.object(BaseDatabaseSchemaEditor, 'execute') as execute:",
                "-            call_command('migrate', run_syncdb=True, verbosity=0)",
                "+            call_command('migrate', run_syncdb=True, verbosity=1, stdout=stdout, no_color=True)",
                "             create_table_count = len([call for call in execute.mock_calls if 'CREATE TABLE' in str(call)])",
                "@@ -561,2 +591,6 @@ class MigrateTests(MigrationTestBase):",
                "             self.assertGreater(len(execute.mock_calls), 2)",
                "+        stdout = stdout.getvalue()",
                "+        self.assertIn('Synchronize unmigrated apps: unmigrated_app_syncdb', stdout)",
                "+        self.assertIn('Creating tables...', stdout)",
                "+        self.assertIn('Creating table unmigrated_app_syncdb_classroom', stdout)",
                "diff --git a/tests/migrations/test_migrations_clashing_prefix/__init__.py b/tests/migrations/test_migrations_clashing_prefix/__init__.py",
                "new file mode 100644",
                "index 0000000000..e69de29bb2",
                "diff --git a/tests/migrations/test_migrations_clashing_prefix/a.py b/tests/migrations/test_migrations_clashing_prefix/a.py",
                "new file mode 100644",
                "index 0000000000..bd613aa95e",
                "--- /dev/null",
                "+++ b/tests/migrations/test_migrations_clashing_prefix/a.py",
                "@@ -0,0 +1,5 @@",
                "+from django.db import migrations",
                "+",
                "+",
                "+class Migration(migrations.Migration):",
                "+    pass",
                "diff --git a/tests/migrations/test_migrations_clashing_prefix/ab.py b/tests/migrations/test_migrations_clashing_prefix/ab.py",
                "new file mode 100644",
                "index 0000000000..54f8924bac",
                "--- /dev/null",
                "+++ b/tests/migrations/test_migrations_clashing_prefix/ab.py",
                "@@ -0,0 +1,5 @@",
                "+from django.db import migrations",
                "+",
                "+",
                "+class Migration(migrations.Migration):",
                "+    dependencies = [('migrations', 'a')]"
            ],
            "changed_files": [
                "tests/migrations/test_commands.py",
                "tests/migrations/test_migrations_clashing_prefix/__init__.py",
                "tests/migrations/test_migrations_clashing_prefix/a.py",
                "tests/migrations/test_migrations_clashing_prefix/ab.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "9bcbda43dc6c5fc739bcfde35a6c4e18254471c2",
            "repository": "https://github.com/django/django",
            "timestamp": 1532099592,
            "hunks": 1,
            "message": "Added test for DateTimeShortcuts.js time zone warning.",
            "diff": [
                "diff --git a/js_tests/admin/DateTimeShortcuts.test.js b/js_tests/admin/DateTimeShortcuts.test.js",
                "index 4e534954f3..7cc0bda60c 100644",
                "--- a/js_tests/admin/DateTimeShortcuts.test.js",
                "+++ b/js_tests/admin/DateTimeShortcuts.test.js",
                "@@ -32 +32,12 @@ QUnit.test('custom time shortcuts', function(assert) {",
                " });",
                "+",
                "+QUnit.test('time zone offset warning', function(assert) {",
                "+    var $ = django.jQuery;",
                "+    var savedOffset = $('body').attr('data-admin-utc-offset');",
                "+    var timeField = $('<input type=\"text\" name=\"time_test\" class=\"vTimeField\">');",
                "+    $('#qunit-fixture').append(timeField);",
                "+    $('body').attr('data-admin-utc-offset', new Date().getTimezoneOffset() * -60 + 3600);",
                "+    DateTimeShortcuts.init();",
                "+    $('body').attr('data-admin-utc-offset', savedOffset);",
                "+    assert.equal($('.timezonewarning').text(), 'Note: You are 1 hour behind server time.');",
                "+});"
            ],
            "changed_files": [
                "js_tests/admin/DateTimeShortcuts.test.js"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "adfd2614045518cc9221aef1f17fd3ffeac3d2cc",
            "repository": "https://github.com/django/django",
            "timestamp": 1533142553,
            "hunks": 18,
            "message": "[2.1.x] Fixed typos in comments and docs. Backport of 97e637a87fb45c4de970cca6cb783d93473c9d15 from master",
            "diff": [
                "diff --git a/django/contrib/auth/models.py b/django/contrib/auth/models.py",
                "index c4ccf5b4ef..cc4f48861a 100644",
                "--- a/django/contrib/auth/models.py",
                "+++ b/django/contrib/auth/models.py",
                "@@ -278,3 +278,3 @@ class PermissionsMixin(models.Model):",
                "         Return True if the user has any permissions in the given app label.",
                "-        Use simlar logic as has_perm(), above.",
                "+        Use similar logic as has_perm(), above.",
                "         \"\"\"",
                "diff --git a/django/contrib/gis/db/backends/postgis/operations.py b/django/contrib/gis/db/backends/postgis/operations.py",
                "index dd3fdb37b0..b6add9390a 100644",
                "--- a/django/contrib/gis/db/backends/postgis/operations.py",
                "+++ b/django/contrib/gis/db/backends/postgis/operations.py",
                "@@ -33,3 +33,3 @@ class PostGISOperator(SpatialOperator):",
                "         # Only a subset of the operators and functions are available for the",
                "-        # raster type. Lookups that don't suport raster will be converted to",
                "+        # raster type. Lookups that don't support raster will be converted to",
                "         # polygons. If the raster argument is set to BILATERAL, then the",
                "diff --git a/django/contrib/gis/gdal/feature.py b/django/contrib/gis/gdal/feature.py",
                "index db8c981312..a8aadbf883 100644",
                "--- a/django/contrib/gis/gdal/feature.py",
                "+++ b/django/contrib/gis/gdal/feature.py",
                "@@ -96,3 +96,3 @@ class Feature(GDALBase):",
                "     def geom_type(self):",
                "-        \"Return the OGR Geometry Type for this Feture.\"",
                "+        \"Return the OGR Geometry Type for this Feature.\"",
                "         return OGRGeomType(capi.get_fd_geom_type(self._layer._ldefn))",
                "diff --git a/django/core/serializers/base.py b/django/core/serializers/base.py",
                "index 4ff0c753f8..6fde1ae60b 100644",
                "--- a/django/core/serializers/base.py",
                "+++ b/django/core/serializers/base.py",
                "@@ -187,3 +187,3 @@ class Deserializer:",
                "     def __next__(self):",
                "-        \"\"\"Iteration iterface -- return the next item in the stream\"\"\"",
                "+        \"\"\"Iteration interface -- return the next item in the stream\"\"\"",
                "         raise NotImplementedError('subclasses of Deserializer must provide a __next__() method')",
                "diff --git a/django/db/migrations/operations/base.py b/django/db/migrations/operations/base.py",
                "index 3fb1002c44..b2fe1c4853 100644",
                "--- a/django/db/migrations/operations/base.py",
                "+++ b/django/db/migrations/operations/base.py",
                "@@ -105,3 +105,3 @@ class Operation:",
                "         \"\"\"",
                "-        Return wether or not a model may be migrated.",
                "+        Return whether or not a model may be migrated.",
                "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py",
                "index d913abab2e..879de0474a 100644",
                "--- a/django/db/models/sql/where.py",
                "+++ b/django/db/models/sql/where.py",
                "@@ -144,3 +144,3 @@ class WhereNode(tree.Node):",
                "         Create a clone of the tree. Must only be called on root nodes (nodes",
                "-        with empty subtree_parents). Childs must be either (Contraint, lookup,",
                "+        with empty subtree_parents). Childs must be either (Constraint, lookup,",
                "         value) tuples, or objects supporting .clone().",
                "diff --git a/django/template/base.py b/django/template/base.py",
                "index f6a60ecdf7..9f4fe3363d 100644",
                "--- a/django/template/base.py",
                "+++ b/django/template/base.py",
                "@@ -762,3 +762,3 @@ class Variable:",
                "-            # Try to interpret values containg a period or an 'e'/'E'",
                "+            # Try to interpret values containing a period or an 'e'/'E'",
                "             # (possibly scientific notation) as a float;  otherwise, try int.",
                "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py",
                "index 2346f50383..ef6579f5bb 100644",
                "--- a/django/template/defaultfilters.py",
                "+++ b/django/template/defaultfilters.py",
                "@@ -224,4 +224,4 @@ def stringformat(value, arg):",
                "-    This specifier uses Python string formating syntax, with the exception that",
                "-    the leading \"%\" is dropped.",
                "+    This specifier uses Python string formatting syntax, with the exception",
                "+    that the leading \"%\" is dropped.",
                "diff --git a/docs/spelling_wordlist b/docs/spelling_wordlist",
                "index e25feeba2f..8c7147ee5d 100644",
                "--- a/docs/spelling_wordlist",
                "+++ b/docs/spelling_wordlist",
                "@@ -748,3 +748,2 @@ urlpatterns",
                " urls",
                "-useable",
                " username",
                "diff --git a/tests/admin_changelist/tests.py b/tests/admin_changelist/tests.py",
                "index 6c9b424a5a..c12bfc7c93 100644",
                "--- a/tests/admin_changelist/tests.py",
                "+++ b/tests/admin_changelist/tests.py",
                "@@ -349,3 +349,3 @@ class ChangeListTests(TestCase):",
                "         results shouldn't appear more than once. Model managed in the",
                "-        admin inherits from the one that defins the relationship.",
                "+        admin inherits from the one that defines the relationship.",
                "         \"\"\"",
                "diff --git a/tests/admin_views/tests.py b/tests/admin_views/tests.py",
                "index e64ee9b6a3..913cc0528a 100644",
                "--- a/tests/admin_views/tests.py",
                "+++ b/tests/admin_views/tests.py",
                "@@ -1762,3 +1762,3 @@ class AdminViewPermissionsTest(TestCase):",
                "         # view user should be able to view the article but not change any of them",
                "-        # (the POST can be sent, but no modification occures)",
                "+        # (the POST can be sent, but no modification occurs)",
                "         self.client.force_login(self.viewuser)",
                "@@ -2243,3 +2243,3 @@ class AdminViewPermissionsTest(TestCase):",
                "         Post-save message shouldn't contain a link to the change form if the",
                "-        user doen't have the change permission.",
                "+        user doesn't have the change permission.",
                "         \"\"\"",
                "@@ -3610,3 +3610,3 @@ class AdminCustomQuerysetTest(TestCase):",
                "         # model has __str__ method",
                "-        t = Telegram.objects.create(title=\"Frist Telegram\")",
                "+        t = Telegram.objects.create(title=\"First Telegram\")",
                "         self.assertEqual(Telegram.objects.count(), 1)",
                "diff --git a/tests/dbshell/test_postgresql_psycopg2.py b/tests/dbshell/test_postgresql_psycopg2.py",
                "index a229e13a47..8e5af5f1f3 100644",
                "--- a/tests/dbshell/test_postgresql_psycopg2.py",
                "+++ b/tests/dbshell/test_postgresql_psycopg2.py",
                "@@ -114,3 +114,3 @@ class PostgreSqlDbshellCommandTestCase(SimpleTestCase):",
                "             DatabaseClient.runshell_db({})",
                "-        # dbshell restores the orignal handler.",
                "+        # dbshell restores the original handler.",
                "         self.assertEqual(sigint_handler, signal.getsignal(signal.SIGINT))",
                "diff --git a/tests/forms_tests/widget_tests/test_selectdatewidget.py b/tests/forms_tests/widget_tests/test_selectdatewidget.py",
                "index 1fe72ca8fb..3fcd1f64d1 100644",
                "--- a/tests/forms_tests/widget_tests/test_selectdatewidget.py",
                "+++ b/tests/forms_tests/widget_tests/test_selectdatewidget.py",
                "@@ -319,3 +319,3 @@ class SelectDateWidgetTest(WidgetTest):",
                "-        # Rendering the default state with empty_label setted as string.",
                "+        # Rendering the default state with empty_label set as string.",
                "         self.assertInHTML('<option selected value=\"\">empty_label</option>', w.render('mydate', ''), count=3)",
                "diff --git a/tests/httpwrappers/tests.py b/tests/httpwrappers/tests.py",
                "index 985380cc57..24260ae610 100644",
                "--- a/tests/httpwrappers/tests.py",
                "+++ b/tests/httpwrappers/tests.py",
                "@@ -735,3 +735,3 @@ class CookieTests(unittest.TestCase):",
                "         self.assertIn('django_language', parse_cookie('abc=def; unnamed; django_language=en'))",
                "-        # Even a double quote may be an unamed value.",
                "+        # Even a double quote may be an unnamed value.",
                "         self.assertEqual(parse_cookie('a=b; \"; c=d'), {'a': 'b', '': '\"', 'c': 'd'})",
                "diff --git a/tests/pagination/tests.py b/tests/pagination/tests.py",
                "index f13afc308f..397a093340 100644",
                "--- a/tests/pagination/tests.py",
                "+++ b/tests/pagination/tests.py",
                "@@ -372,3 +372,3 @@ class ModelPaginationTests(TestCase):",
                "         \"\"\"",
                "-        Unordered object list warning with an object that has an orderd",
                "+        Unordered object list warning with an object that has an ordered",
                "         attribute but not a model attribute.",
                "diff --git a/tests/template_tests/syntax_tests/test_cache.py b/tests/template_tests/syntax_tests/test_cache.py",
                "index 6a59cb3c75..80af1c2bd6 100644",
                "--- a/tests/template_tests/syntax_tests/test_cache.py",
                "+++ b/tests/template_tests/syntax_tests/test_cache.py",
                "@@ -110,3 +110,3 @@ class CacheTagTests(SimpleTestCase):",
                "                     'Into a rancid festering/Or else I shall rend thee in the gobberwarts'",
                "-                    'with my blurglecruncheon/See if I dont.'",
                "+                    'with my blurglecruncheon/See if I don\\'t.'",
                "                 ),"
            ],
            "changed_files": [
                "django/contrib/auth/models.py",
                "django/contrib/gis/db/backends/postgis/operations.py",
                "django/contrib/gis/gdal/feature.py",
                "django/core/serializers/base.py",
                "django/db/migrations/operations/base.py",
                "django/db/models/sql/where.py",
                "django/template/base.py",
                "django/template/defaultfilters.py",
                "docs/spelling_wordlist",
                "tests/admin_changelist/tests.py",
                "tests/admin_views/tests.py",
                "tests/dbshell/test_postgresql_psycopg2.py",
                "tests/forms_tests/widget_tests/test_selectdatewidget.py",
                "tests/httpwrappers/tests.py",
                "tests/pagination/tests.py",
                "tests/template_tests/syntax_tests/test_cache.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "93e721a0b8155470336357c148c4d8364c36bbee",
            "repository": "https://github.com/django/django",
            "timestamp": 1531730900,
            "hunks": 1,
            "message": "Fixed django/http/request.py docstring typo.",
            "diff": [
                "diff --git a/django/http/request.py b/django/http/request.py",
                "index 4e4447f35f..05aa89252b 100644",
                "--- a/django/http/request.py",
                "+++ b/django/http/request.py",
                "@@ -166,3 +166,3 @@ class HttpRequest:",
                "         Build an absolute URI from the location and the variables available in",
                "-        this request. If no ``location`` is specified, bulid the absolute URI",
                "+        this request. If no ``location`` is specified, build the absolute URI",
                "         using request.get_full_path(). If the location is absolute, convert it"
            ],
            "changed_files": [
                "django/http/request.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7b407c9e9439ee460bb7b3028993faead062e24f",
            "repository": "https://github.com/django/django",
            "timestamp": 1533068275,
            "hunks": 414,
            "message": "Updated core translations from Transifex Forwardport of 734e2c65ae54552b61ad34105ba4debe936fe223 from stable/2.1.x.",
            "diff": [
                "diff --git a/django/conf/locale/az/LC_MESSAGES/django.mo b/django/conf/locale/az/LC_MESSAGES/django.mo",
                "index 9f7fd2ba6f..5d42c5a0d5 100644",
                "Binary files a/django/conf/locale/az/LC_MESSAGES/django.mo and b/django/conf/locale/az/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/az/LC_MESSAGES/django.po b/django/conf/locale/az/LC_MESSAGES/django.po",
                "index 313c304082..0b5f9740d1 100644",
                "--- a/django/conf/locale/az/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/az/LC_MESSAGES/django.po",
                "@@ -3,2 +3,3 @@",
                " # Translators:",
                "+# Emin Mastizada <emin@linux.com>, 2018",
                " # Emin Mastizada <emin@linux.com>, 2015-2016",
                "@@ -9,4 +10,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 01:13+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 00:21+0000\\n\"",
                " \"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "@@ -161,2 +162,5 @@ msgstr \"G\u00c3\u00bcrc\u00c3\u00bcc\u00c9\u0099\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabile\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -297,9 +301,9 @@ msgstr \"Sindikasiya\"",
                " msgid \"That page number is not an integer\"",
                "-msgstr \"\"",
                "+msgstr \"S\u00c9\u0099hif\u00c9\u0099 n\u00c3\u00b6mr\u00c9\u0099si r\u00c9\u0099q\u00c9\u0099m deyil\"",
                " msgid \"That page number is less than 1\"",
                "-msgstr \"\"",
                "+msgstr \"S\u00c9\u0099hif\u00c9\u0099 n\u00c3\u00b6mr\u00c9\u0099si 1-d\u00c9\u0099n balacad\u00c4\u00b1r\"",
                " msgid \"That page contains no results\"",
                "-msgstr \"\"",
                "+msgstr \"S\u00c9\u0099hif\u00c9\u0099d\u00c9\u0099 n\u00c9\u0099tic\u00c9\u0099 yoxdur\"",
                "@@ -385,2 +389,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00c6\u008fd\u00c9\u0099d daxil edin.\"",
                "+",
                " #, python-format",
                "@@ -410,5 +417,7 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"'%(extension)s' fayl uzant\u00c4\u00b1s\u00c4\u00b1na icaz\u00c9\u0099 verilmir. \u00c4\u00b0caz\u00c9\u0099 veril\u00c9\u0099n fayl \"",
                "+\"uzant\u00c4\u00b1lar\u00c4\u00b1: '%(allowed_extensions)s'\"",
                " msgid \"Null characters are not allowed.\"",
                "-msgstr \"\"",
                "+msgstr \"Null simvollara icaz\u00c9\u0099 verilmir.\"",
                "@@ -462,2 +471,6 @@ msgstr \"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri True v\u00c9\u0099 ya False olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -477,4 +490,3 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri s\u00c9\u0099hv tarix format\u00c4\u00b1ndad\u00c4\u00b1r. Bu \u00c4\u00b0\u00c4\u00b0\u00c4\u00b0\u00c4\u00b0-AA-GG format\u00c4\u00b1nda \"",
                "-\"olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "+\"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri s\u00c9\u0099hv tarix format\u00c4\u00b1ndad\u00c4\u00b1r. Format\u00c4\u00b1 YYYY-MM-DD olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -485,3 +497,3 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"'%(value)s d\u00c9\u0099y\u00c9\u0099ri d\u00c3\u00bczg\u00c3\u00bcn formatdad\u00c4\u00b1r (\u00c4\u00b0\u00c4\u00b0\u00c4\u00b0\u00c4\u00b0-AA-GG) amma bu x\u00c9\u0099tal\u00c4\u00b1 tarixdir.\"",
                "+\"'%(value)s d\u00c9\u0099y\u00c9\u0099ri d\u00c3\u00bczg\u00c3\u00bcn formatdad\u00c4\u00b1r (YYYY-MM-DD) amma bu x\u00c9\u0099tal\u00c4\u00b1 tarixdir.\"",
                "@@ -495,2 +507,4 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"'%(value)s' d\u00c9\u0099y\u00c9\u0099rinin format\u00c4\u00b1 s\u00c9\u0099hvdir. Format\u00c4\u00b1 YYYY-MM-DD HH:MM[:ss[.uuuuuu]]\"",
                "+\"[TZ] olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -501,2 +515,4 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"'%(value)s' d\u00c9\u0099y\u00c9\u0099rinin format\u00c4\u00b1 d\u00c3\u00bczg\u00c3\u00bcnd\u00c3\u00bcr (YYYY-MM-DD HH:MM[:ss[.uuuuuu]][TZ]) \"",
                "+\"ancaq tarix s\u00c9\u0099hvdir.\"",
                "@@ -507,3 +523,3 @@ msgstr \"Tarix (vaxt il\u00c9\u0099)\"",
                " msgid \"'%(value)s' value must be a decimal number.\"",
                "-msgstr \"\"",
                "+msgstr \"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri decimal r\u00c9\u0099q\u00c9\u0099m olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -517,2 +533,4 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"'%(value)s' d\u00c9\u0099y\u00c9\u0099rinin format\u00c4\u00b1 s\u00c9\u0099hvdir. Format\u00c4\u00b1 [DD] [HH:[MM:]]ss[.uuuuuu] \"",
                "+\"olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -529,3 +547,3 @@ msgstr \"Fayl\u00c4\u00b1n \u00c3\u00bcnvan\u00c4\u00b1\"",
                " msgid \"'%(value)s' value must be a float.\"",
                "-msgstr \"\"",
                "+msgstr \"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri float olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -542,3 +560,3 @@ msgstr \"IP \u00c3\u00bcnvan\"",
                " msgid \"'%(value)s' value must be either None, True or False.\"",
                "-msgstr \"\"",
                "+msgstr \"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri None, True v\u00c9\u0099 ya False olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -568,2 +586,3 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"'%(value)s' d\u00c9\u0099y\u00c9\u0099rinin format\u00c4\u00b1 s\u00c9\u0099hvdir. Format\u00c4\u00b1 HH:MM[:ss[.uuuuuu]] olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -574,2 +593,4 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri d\u00c3\u00bczg\u00c3\u00bcn formatdad\u00c4\u00b1r (HH:MM[:ss[.uuuuuu]]), ancaq vaxt\u00c4\u00b1 \"",
                "+\"s\u00c9\u0099hvdir.\"",
                "@@ -582,3 +603,3 @@ msgstr \"URL\"",
                " msgid \"Raw binary data\"",
                "-msgstr \"\"",
                "+msgstr \"D\u00c3\u00bcz ikili (binary) m\u00c9\u0099lumat\"",
                "@@ -596,3 +617,3 @@ msgstr \"\u00c5\u009e\u00c9\u0099kil\"",
                " msgid \"%(model)s instance with %(field)s %(value)r does not exist.\"",
                "-msgstr \"\"",
                "+msgstr \"%(field)s d\u00c9\u0099y\u00c9\u0099ri %(value)r olan %(model)s m\u00c3\u00b6vcud deyil.\"",
                "@@ -606,3 +627,3 @@ msgstr \"Birin-bir\u00c9\u0099 m\u00c3\u00bcnasib\u00c9\u0099t\"",
                " msgid \"%(from)s-%(to)s relationship\"",
                "-msgstr \"\"",
                "+msgstr \"%(from)s-%(to)s \u00c9\u0099laq\u00c9\u0099si\"",
                "@@ -610,3 +631,3 @@ msgstr \"\"",
                " msgid \"%(from)s-%(to)s relationships\"",
                "-msgstr \"\"",
                "+msgstr \"%(from)s-%(to)s \u00c9\u0099laq\u00c9\u0099l\u00c9\u0099ri\"",
                "@@ -627,5 +648,2 @@ msgstr \"Tam \u00c9\u0099d\u00c9\u0099d daxil edin.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00c6\u008fd\u00c9\u0099d daxil edin.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -642,2 +660,6 @@ msgstr \"Ke\u00c3\u00a7\u00c9\u0099rli m\u00c3\u00bcdd\u00c9\u0099t daxil edin.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -656,3 +678,5 @@ msgid_plural \"\"",
                " msgstr[0] \"\"",
                "+\"Bu fayl ad\u00c4\u00b1n\u00c4\u00b1n \u00c9\u0099n \u00c3\u00a7ox %(max)d simvol oldu\u00c4\u009funa \u00c9\u0099min olun (%(length)d var).\"",
                " msgstr[1] \"\"",
                "+\"Bu fayl ad\u00c4\u00b1n\u00c4\u00b1n \u00c9\u0099n \u00c3\u00a7ox %(max)d simvol oldu\u00c4\u009funa \u00c9\u0099min olun (%(length)d var).\"",
                "@@ -691,3 +715,3 @@ msgstr \"(Gizli %(name)s sah\u00c9\u0099si) %(error)s\"",
                " msgid \"ManagementForm data is missing or has been tampered with\"",
                "-msgstr \"\"",
                "+msgstr \"ManagementForm m\u00c9\u0099lumatlar\u00c4\u00b1 \u00c9\u0099ksikdir v\u00c9\u0099 ya korlan\u00c4\u00b1b\"",
                "@@ -733,3 +757,3 @@ msgstr \"A\u00c5\u009fa\u00c4\u009f\u00c4\u00b1da t\u00c9\u0099krarlanan qiym\u00c9\u0099tl\u00c9\u0099r\u00c9\u0099 d\u00c3\u00bcz\u00c9\u0099li\u00c5\u009f edin.\"",
                " msgid \"The inline value did not match the parent instance.\"",
                "-msgstr \"\"",
                "+msgstr \"S\u00c9\u0099tiri\u00c3\u00a7i d\u00c9\u0099y\u00c9\u0099r ana n\u00c3\u00bcsx\u00c9\u0099y\u00c9\u0099 uy\u00c4\u009fun deyil.\"",
                "@@ -740,3 +764,3 @@ msgstr \"D\u00c3\u00bczg\u00c3\u00bcn se\u00c3\u00a7im edin. Bu se\u00c3\u00a7im m\u00c3\u00bcmk\u00c3\u00bcn deyil.\"",
                " msgid \"\\\"%(pk)s\\\" is not a valid value.\"",
                "-msgstr \"\"",
                "+msgstr \"\\\"%(pk)s\\\" d\u00c3\u00bczg\u00c3\u00bcn d\u00c9\u0099y\u00c9\u0099r deyil.\"",
                "@@ -1091,2 +1115,5 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Bu HTTPS sayt s\u00c9\u0099yyah\u00c4\u00b1n\u00c4\u00b1z t\u00c9\u0099r\u00c9\u0099find\u00c9\u0099n 'Referer header' g\u00c3\u00b6nd\u00c9\u0099rilm\u00c9\u0099sini t\u00c9\u0099l\u00c9\u0099b \"",
                "+\"edir, amma g\u00c3\u00b6nd\u00c9\u0099rilmir. Bu ba\u00c5\u009fl\u00c4\u00b1q s\u00c9\u0099yyah\u00c4\u00b1n\u00c4\u00b1z\u00c4\u00b1n \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcnc\u00c3\u00bc biri t\u00c9\u0099r\u00c9\u0099find\u00c9\u0099n hack-\"",
                "+\"l\u00c9\u0099nm\u00c9\u0099diyin\u00c9\u0099 \u00c9\u0099min olmaq \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn istifad\u00c9\u0099 edilir.\"",
                "@@ -1097,2 +1124,5 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00c6\u008fg\u00c9\u0099r s\u00c9\u0099yyah\u00c4\u00b1n\u00c4\u00b1z\u00c4\u00b1n 'Referer' ba\u00c5\u009fl\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n\u00c4\u00b1 g\u00c3\u00b6nd\u00c9\u0099rm\u00c9\u0099sini s\u00c3\u00b6nd\u00c3\u00bcrm\u00c3\u00bcs\u00c3\u00bcn\u00c3\u00bczs\u00c9\u0099, l\u00c3\u00bctf\u00c9\u0099n \"",
                "+\"bu sayt \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn, HTTPS \u00c9\u0099laq\u00c9\u0099l\u00c9\u0099r \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn v\u00c9\u0099 ya 'same-origin' sor\u00c4\u009fular \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn aktiv \"",
                "+\"edin.\"",
                "@@ -1105,2 +1135,7 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00c6\u008fg\u00c9\u0099r <meta name=\\\"referrer\\\" content=\\\"no-referrer\\\"> etiketini v\u00c9\u0099 ya \"",
                "+\"'Referrer-Policy: no-referrer' ba\u00c5\u009fl\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n\u00c4\u00b1 i\u00c5\u009fl\u00c9\u0099dirsinizs\u00c9\u0099, l\u00c3\u00bctf\u00c9\u0099n silin. CSRF \"",
                "+\"qoruma d\u00c9\u0099qiq y\u00c3\u00b6nl\u00c9\u0099ndir\u00c9\u0099n yoxlamas\u00c4\u00b1 \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn 'Referer' ba\u00c5\u009fl\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n\u00c4\u00b1 t\u00c9\u0099l\u00c9\u0099b edir. \u00c6\u008fg\u00c9\u0099r \"",
                "+\"m\u00c9\u0099xfilik \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn d\u00c3\u00bc\u00c5\u009f\u00c3\u00bcn\u00c3\u00bcrs\u00c3\u00bcn\u00c3\u00bczs\u00c9\u0099, \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcnc\u00c3\u00bc t\u00c9\u0099r\u00c9\u0099f sayt ke\u00c3\u00a7idl\u00c9\u0099ri \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn <a rel=\"",
                "+\"\\\"noreferrer\\\" ...> kimi bir alternativ i\u00c5\u009fl\u00c9\u0099din.\"",
                "@@ -1111,2 +1146,5 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Bu sayt formalar\u00c4\u00b1 g\u00c3\u00b6nd\u00c9\u0099rm\u00c9\u0099k \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn CSRF \u00c3\u00a7\u00c9\u0099r\u00c9\u0099zini i\u00c5\u009fl\u00c9\u0099dir. Bu \u00c3\u00a7\u00c9\u0099r\u00c9\u0099z \"",
                "+\"s\u00c9\u0099yyah\u00c4\u00b1n\u00c4\u00b1z\u00c4\u00b1n \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcnc\u00c3\u00bc biri t\u00c9\u0099r\u00c9\u0099find\u00c9\u0099n hack-l\u00c9\u0099nm\u00c9\u0099diyin\u00c9\u0099 \u00c9\u0099min olmaq \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn \"",
                "+\"istifad\u00c9\u0099 edilir. \"",
                "@@ -1116,2 +1154,4 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00c6\u008fg\u00c9\u0099r s\u00c9\u0099yyah\u00c4\u00b1n\u00c4\u00b1zda \u00c3\u00a7\u00c9\u0099r\u00c9\u0099zl\u00c9\u0099r s\u00c3\u00b6nd\u00c3\u00bcr\u00c3\u00bcl\u00c3\u00bcbs\u00c9\u0099, l\u00c3\u00bctf\u00c9\u0099n bu sayt v\u00c9\u0099 ya 'same-origin' \"",
                "+\"sor\u00c4\u009fular \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn aktiv edin.\"",
                "@@ -1124,3 +1164,3 @@ msgstr \"\u00c4\u00b0l g\u00c3\u00b6st\u00c9\u0099rilm\u00c9\u0099yib\"",
                " msgid \"Date out of range\"",
                "-msgstr \"\"",
                "+msgstr \"Tarix aral\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n xaricind\u00c9\u0099dir\"",
                "@@ -1178,3 +1218,3 @@ msgstr \"%(directory)s-nin indeksi\"",
                " msgid \"Django: the Web framework for perfectionists with deadlines.\"",
                "-msgstr \"\"",
                "+msgstr \"Django: t\u00c9\u0099l\u00c9\u0099s\u00c9\u0099n m\u00c3\u00bck\u00c9\u0099mm\u00c9\u0099ll\u00c9\u0099k\u00c3\u00a7il\u00c9\u0099r \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn Web framework.\"",
                "@@ -1185,5 +1225,8 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Django %(version)s \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn <a href=\\\"https://docs.djangoproject.com/en/\"",
                "+\"%(version)s/releases/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">burax\u00c4\u00b1l\u00c4\u00b1\u00c5\u009f \"",
                "+\"qeydl\u00c9\u0099rin\u00c9\u0099</a> bax\u00c4\u00b1n\"",
                " msgid \"The install worked successfully! Congratulations!\"",
                "-msgstr \"\"",
                "+msgstr \"Qurulu\u00c5\u009f u\u00c4\u009furla tamamland\u00c4\u00b1! T\u00c9\u0099brikl\u00c9\u0099r!\"",
                "@@ -1196,19 +1239,22 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"T\u00c9\u0099nziml\u00c9\u0099m\u00c9\u0099 fayl\u00c4\u00b1n\u00c4\u00b1zda <a href=\\\"https://docs.djangoproject.com/en/\"",
                "+\"%(version)s/ref/settings/#debug\\\" target=\\\"_blank\\\" rel=\\\"noopener\"",
                "+\"\\\">DEBUG=True</a> v\u00c9\u0099 he\u00c3\u00a7 bir URL qurmad\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n\u00c4\u00b1z \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn bu s\u00c9\u0099hif\u00c9\u0099ni g\u00c3\u00b6r\u00c3\u00bcrs\u00c3\u00bcn\u00c3\u00bcz.\"",
                " msgid \"Django Documentation\"",
                "-msgstr \"\"",
                "+msgstr \"Django S\u00c9\u0099n\u00c9\u0099dl\u00c9\u0099ri\"",
                " msgid \"Topics, references, &amp; how-to's\"",
                "-msgstr \"\"",
                "+msgstr \"M\u00c3\u00b6vzular, istinadlar v\u00c9\u0099 n\u00c3\u00bcmun\u00c9\u0099l\u00c9\u0099r\"",
                " msgid \"Tutorial: A Polling App\"",
                "-msgstr \"\"",
                "+msgstr \"M\u00c9\u0099\u00c5\u009f\u00c4\u009f\u00c9\u0099l\u00c9\u0099: S\u00c9\u0099sverm\u00c9\u0099 T\u00c9\u0099tbiqi\"",
                " msgid \"Get started with Django\"",
                "-msgstr \"\"",
                "+msgstr \"Django-ya ba\u00c5\u009fla\"",
                " msgid \"Django Community\"",
                "-msgstr \"\"",
                "+msgstr \"Django \u00c4\u00b0cmas\u00c4\u00b1\"",
                " msgid \"Connect, get help, or contribute\"",
                "-msgstr \"\"",
                "+msgstr \"Qo\u00c5\u009ful, k\u00c3\u00b6m\u00c9\u0099k al v\u00c9\u0099 d\u00c9\u0099st\u00c9\u0099k ol\"",
                "diff --git a/django/conf/locale/cs/LC_MESSAGES/django.mo b/django/conf/locale/cs/LC_MESSAGES/django.mo",
                "index 1949ece124..784bf33409 100644",
                "Binary files a/django/conf/locale/cs/LC_MESSAGES/django.mo and b/django/conf/locale/cs/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/cs/LC_MESSAGES/django.po b/django/conf/locale/cs/LC_MESSAGES/django.po",
                "index a2348f5e4b..8bf8bc65c9 100644",
                "--- a/django/conf/locale/cs/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/cs/LC_MESSAGES/django.po",
                "@@ -13,4 +13,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-06 20:09+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-15 18:02+0000\\n\"",
                " \"Last-Translator: Vl\u00c3\u00a1\u00c4\u008fa Macek <macek@sandbox.cz>\\n\"",
                "@@ -21,3 +21,4 @@ msgstr \"\"",
                " \"Language: cs\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n == 1 && n % 1 == 0) ? 0 : (n >= 2 && n \"",
                "+\"<= 4 && n % 1 == 0) ? 1: (n % 1 != 0 ) ? 2 : 3;\\n\"",
                "@@ -30,3 +31,3 @@ msgstr \"arabsky\"",
                " msgid \"Asturian\"",
                "-msgstr \"Asturian\"",
                "+msgstr \"astur\u00c5\u00a1tinou\"",
                "@@ -162,3 +163,3 @@ msgstr \"japonsky\"",
                " msgid \"Georgian\"",
                "-msgstr \"gruz\u00c3\u00adnsky\"",
                "+msgstr \"gruz\u00c3\u00adn\u00c5\u00a1tinou\"",
                "@@ -374,2 +375,4 @@ msgstr[2] \"\"",
                " \"Tato hodnota m\u00c3\u00a1 m\u00c3\u00adt nejm\u00c3\u00a9n\u00c4\u009b %(limit_value)d znak\u00c5\u00af (nyn\u00c3\u00ad m\u00c3\u00a1 %(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"Tato hodnota m\u00c3\u00a1 m\u00c3\u00adt nejm\u00c3\u00a9n\u00c4\u009b %(limit_value)d znak\u00c5\u00af (nyn\u00c3\u00ad m\u00c3\u00a1 %(show_value)d).\"",
                "@@ -388,2 +391,7 @@ msgstr[2] \"\"",
                " \"Tato hodnota m\u00c3\u00a1 m\u00c3\u00adt nejv\u00c3\u00bd\u00c5\u00a1e %(limit_value)d znak\u00c5\u00af (nyn\u00c3\u00ad m\u00c3\u00a1 %(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"Tato hodnota m\u00c3\u00a1 m\u00c3\u00adt nejv\u00c3\u00bd\u00c5\u00a1e %(limit_value)d znak\u00c5\u00af (nyn\u00c3\u00ad m\u00c3\u00a1 %(show_value)d).\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Zadejte \u00c4\u008d\u00c3\u00adslo.\"",
                "@@ -395,2 +403,3 @@ msgstr[1] \"Ujist\u00c4\u009bte se, \u00c5\u00bee pole neobsahuje celkem v\u00c3\u00adce ne\u00c5\u00be %(max)s \u00c4\u008d\u00c3\u00adslice",
                " msgstr[2] \"Ujist\u00c4\u009bte se, \u00c5\u00bee pole neobsahuje celkem v\u00c3\u00adce ne\u00c5\u00be %(max)s \u00c4\u008d\u00c3\u00adslic.\"",
                "+msgstr[3] \"Ujist\u00c4\u009bte se, \u00c5\u00bee pole neobsahuje celkem v\u00c3\u00adce ne\u00c5\u00be %(max)s \u00c4\u008d\u00c3\u00adslic.\"",
                "@@ -402,2 +411,3 @@ msgstr[1] \"Ujist\u00c4\u009bte se, \u00c5\u00bee pole neobsahuje v\u00c3\u00adce ne\u00c5\u00be %(max)s desetinn\u00c3\u00a1 m\u00c3\u00adst",
                " msgstr[2] \"Ujist\u00c4\u009bte se, \u00c5\u00bee pole neobsahuje v\u00c3\u00adce ne\u00c5\u00be %(max)s desetinn\u00c3\u00bdch m\u00c3\u00adst.\"",
                "+msgstr[3] \"Ujist\u00c4\u009bte se, \u00c5\u00bee pole neobsahuje v\u00c3\u00adce ne\u00c5\u00be %(max)s desetinn\u00c3\u00bdch m\u00c3\u00adst.\"",
                "@@ -417,2 +427,5 @@ msgstr[2] \"\"",
                " \"\u00c4\u008d\u00c3\u00a1rkou (te\u00c4\u008dkou).\"",
                "+msgstr[3] \"\"",
                "+\"Ujist\u00c4\u009bte se, \u00c5\u00bee hodnota neobsahuje v\u00c3\u00adce ne\u00c5\u00be %(max)s m\u00c3\u00adst p\u00c5\u0099ed desetinnou \"",
                "+\"\u00c4\u008d\u00c3\u00a1rkou (te\u00c4\u008dkou).\"",
                "@@ -480,2 +493,6 @@ msgstr \"Hodnota '%(value)s' mus\u00c3\u00ad b\u00c3\u00bdt bu\u00c4\u008f True nebo False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"Hodnota '%(value)s' mus\u00c3\u00ad b\u00c3\u00bdt bu\u00c4\u008f True, False nebo None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -654,5 +671,2 @@ msgstr \"Zadejte cel\u00c3\u00a9 \u00c4\u008d\u00c3\u00adslo.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Zadejte \u00c4\u008d\u00c3\u00adslo.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -669,2 +683,6 @@ msgstr \"Zadejte platnou d\u00c3\u00a9lku trv\u00c3\u00a1n\u00c3\u00ad.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Po\u00c4\u008det dn\u00c3\u00ad mus\u00c3\u00ad b\u00c3\u00bdt mezi {min_days} a {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -689,2 +707,4 @@ msgstr[2] \"\"",
                " \"Tento n\u00c3\u00a1zev souboru m\u00c3\u00a1 m\u00c3\u00adt nejv\u00c3\u00bd\u00c5\u00a1e %(max)d znak\u00c5\u00af (nyn\u00c3\u00ad m\u00c3\u00a1 %(length)d).\"",
                "+msgstr[3] \"\"",
                "+\"Tento n\u00c3\u00a1zev souboru m\u00c3\u00a1 m\u00c3\u00adt nejv\u00c3\u00bd\u00c5\u00a1e %(max)d znak\u00c5\u00af (nyn\u00c3\u00ad m\u00c3\u00a1 %(length)d).\"",
                "@@ -729,2 +749,3 @@ msgstr[1] \"Ode\u00c5\u00a1lete %d nebo m\u00c3\u00a9n\u00c4\u009b formul\u00c3\u00a1\u00c5\u0099\u00c5\u00af.\"",
                " msgstr[2] \"Ode\u00c5\u00a1lete %d nebo m\u00c3\u00a9n\u00c4\u009b formul\u00c3\u00a1\u00c5\u0099\u00c5\u00af.\"",
                "+msgstr[3] \"Ode\u00c5\u00a1lete %d nebo m\u00c3\u00a9n\u00c4\u009b formul\u00c3\u00a1\u00c5\u0099\u00c5\u00af.\"",
                "@@ -736,2 +757,3 @@ msgstr[1] \"Ode\u00c5\u00a1lete %d nebo v\u00c3\u00adce formul\u00c3\u00a1\u00c5\u0099\u00c5\u00af.\"",
                " msgstr[2] \"Ode\u00c5\u00a1lete %d nebo v\u00c3\u00adce formul\u00c3\u00a1\u00c5\u0099\u00c5\u00af.\"",
                "+msgstr[3] \"Ode\u00c5\u00a1lete %d nebo v\u00c3\u00adce formul\u00c3\u00a1\u00c5\u0099\u00c5\u00af.\"",
                "@@ -807,2 +829,3 @@ msgstr[1] \"%(size)d bajty\"",
                " msgstr[2] \"%(size)d bajt\u00c5\u00af\"",
                "+msgstr[3] \"%(size)d bajt\u00c5\u00af\"",
                "@@ -1077,2 +1100,3 @@ msgstr[1] \"%d roky\"",
                " msgstr[2] \"%d let\"",
                "+msgstr[3] \"%d let\"",
                "@@ -1084,2 +1108,3 @@ msgstr[1] \"%d m\u00c4\u009bs\u00c3\u00adce\"",
                " msgstr[2] \"%d m\u00c4\u009bs\u00c3\u00adc\u00c5\u00af\"",
                "+msgstr[3] \"%d m\u00c4\u009bs\u00c3\u00adc\u00c5\u00af\"",
                "@@ -1091,2 +1116,3 @@ msgstr[1] \"%d t\u00c3\u00bddny\"",
                " msgstr[2] \"%d t\u00c3\u00bddn\u00c5\u00af\"",
                "+msgstr[3] \"%d t\u00c3\u00bddn\u00c5\u00af\"",
                "@@ -1098,2 +1124,3 @@ msgstr[1] \"%d dny\"",
                " msgstr[2] \"%d dn\u00c3\u00ad\"",
                "+msgstr[3] \"%d dn\u00c3\u00ad\"",
                "@@ -1105,2 +1132,3 @@ msgstr[1] \"%d hodiny\"",
                " msgstr[2] \"%d hodin\"",
                "+msgstr[3] \"%d hodin\"",
                "@@ -1112,2 +1140,3 @@ msgstr[1] \"%d minuty\"",
                " msgstr[2] \"%d minut\"",
                "+msgstr[3] \"%d minut\"",
                "diff --git a/django/conf/locale/da/LC_MESSAGES/django.mo b/django/conf/locale/da/LC_MESSAGES/django.mo",
                "index 68467b6643..0f4189e380 100644",
                "Binary files a/django/conf/locale/da/LC_MESSAGES/django.mo and b/django/conf/locale/da/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/da/LC_MESSAGES/django.po b/django/conf/locale/da/LC_MESSAGES/django.po",
                "index c4107c2add..51d970d2dd 100644",
                "--- a/django/conf/locale/da/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/da/LC_MESSAGES/django.po",
                "@@ -5,3 +5,3 @@",
                " # Danni Randeris <danniranderis+djangocore@gmail.com>, 2014",
                "-# Erik Wognsen <r4mses@gmail.com>, 2013-2017",
                "+# Erik Wognsen <r4mses@gmail.com>, 2013-2018",
                " # Finn Gruwier Larsen, 2011",
                "@@ -15,4 +15,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-02 11:14+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 20:46+0000\\n\"",
                " \"Last-Translator: Erik Wognsen <r4mses@gmail.com>\\n\"",
                "@@ -387,2 +387,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Indtast et tal.\"",
                "+",
                " #, python-format",
                "@@ -465,2 +468,6 @@ msgstr \"'%(value)s'-v\u00c3\u00a6rdien skal v\u00c3\u00a6re enten True eller False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' v\u00c3\u00a6rdien skal v\u00c3\u00a6re enten True, False eller None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -641,5 +648,2 @@ msgstr \"Indtast et heltal.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Indtast et tal.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -656,2 +660,6 @@ msgstr \"Indtast en gyldig varighed.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Antallet af dage skal v\u00c3\u00a6re mellem {min_days} og {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/de/LC_MESSAGES/django.mo b/django/conf/locale/de/LC_MESSAGES/django.mo",
                "index a51de63a48..e90c930ed2 100644",
                "Binary files a/django/conf/locale/de/LC_MESSAGES/django.mo and b/django/conf/locale/de/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/de/LC_MESSAGES/django.po b/django/conf/locale/de/LC_MESSAGES/django.po",
                "index 38f59215f4..273932719c 100644",
                "--- a/django/conf/locale/de/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/de/LC_MESSAGES/django.po",
                "@@ -6,5 +6,6 @@",
                " # Daniel Roschka <dunedan@phoenitydawn.de>, 2016",
                "-# Jannis, 2011,2013",
                "-# Jannis Leidel <jannis@leidel.info>, 2013-2017",
                "-# Jannis, 2016",
                "+# Florian Apolloner <florian@apolloner.eu>, 2018",
                "+# Jannis Vajen, 2011,2013",
                "+# Jannis Leidel <jannis@leidel.info>, 2013-2018",
                "+# Jannis Vajen, 2016",
                " # Markus Holtermann <inyoka@markusholtermann.eu>, 2013,2015",
                "@@ -14,4 +15,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-27 16:21+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 00:21+0000\\n\"",
                " \"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "@@ -165,2 +166,5 @@ msgstr \"Georgisch\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabylisch\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -351,3 +355,3 @@ msgstr \"\"",
                " \"Bitte sicherstellen, dass der Wert %(limit_value)s ist. (Er ist \"",
                "-\"%(show_value)s)\"",
                "+\"%(show_value)s.)\"",
                "@@ -370,6 +374,6 @@ msgstr[0] \"\"",
                " \"Bitte sicherstellen, dass der Wert aus mindestens %(limit_value)d Zeichen \"",
                "-\"besteht. (Er besteht aus %(show_value)d Zeichen).\"",
                "+\"besteht. (Er besteht aus %(show_value)d Zeichen.)\"",
                " msgstr[1] \"\"",
                " \"Bitte sicherstellen, dass der Wert aus mindestens %(limit_value)d Zeichen \"",
                "-\"besteht. (Er besteht aus %(show_value)d Zeichen).\"",
                "+\"besteht. (Er besteht aus %(show_value)d Zeichen.)\"",
                "@@ -384,6 +388,9 @@ msgstr[0] \"\"",
                " \"Bitte sicherstellen, dass der Wert aus h\u00c3\u00b6chstens %(limit_value)d Zeichen \"",
                "-\"besteht. (Er besteht aus %(show_value)d Zeichen).\"",
                "+\"besteht. (Er besteht aus %(show_value)d Zeichen.)\"",
                " msgstr[1] \"\"",
                " \"Bitte sicherstellen, dass der Wert aus h\u00c3\u00b6chstens %(limit_value)d Zeichen \"",
                "-\"besteht. (Er besteht aus %(show_value)d Zeichen).\"",
                "+\"besteht. (Er besteht aus %(show_value)d Zeichen.)\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Bitte eine Zahl eingeben.\"",
                "@@ -422,3 +429,3 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"Dateiendung \u00e2\u0080\u009e%(extension)s\u00e2\u0080\u009c ist nicht erlaubt. Erlaubte Dateiendungen: sind: \"",
                "+\"Dateiendung \u00e2\u0080\u009e%(extension)s\u00e2\u0080\u009c ist nicht erlaubt. Erlaubte Dateiendungen sind: \"",
                " \"\u00e2\u0080\u009e%(allowed_extensions)s\u00e2\u0080\u009c.\"",
                "@@ -475,2 +482,6 @@ msgstr \"\u00e2\u0080\u009e%(value)s\u00e2\u0080\u009c Wert muss entweder True oder False sein.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -650,5 +661,2 @@ msgstr \"Bitte eine ganze Zahl eingeben.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Bitte eine Zahl eingeben.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -665,2 +673,6 @@ msgstr \"Bitte eine g\u00c3\u00bcltige Zeitspanne eingeben.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -681,6 +693,6 @@ msgstr[0] \"\"",
                " \"Bitte sicherstellen, dass der Dateiname aus h\u00c3\u00b6chstens %(max)d Zeichen \"",
                "-\"besteht. (Er besteht aus %(length)d Zeichen).\"",
                "+\"besteht. (Er besteht aus %(length)d Zeichen.)\"",
                " msgstr[1] \"\"",
                " \"Bitte sicherstellen, dass der Dateiname aus h\u00c3\u00b6chstens %(max)d Zeichen \"",
                "-\"besteht. (Er besteht aus %(length)d Zeichen).\"",
                "+\"besteht. (Er besteht aus %(length)d Zeichen.)\"",
                "diff --git a/django/conf/locale/dsb/LC_MESSAGES/django.mo b/django/conf/locale/dsb/LC_MESSAGES/django.mo",
                "index 8d0abbc160..34cf9c5a86 100644",
                "Binary files a/django/conf/locale/dsb/LC_MESSAGES/django.mo and b/django/conf/locale/dsb/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/dsb/LC_MESSAGES/django.po b/django/conf/locale/dsb/LC_MESSAGES/django.po",
                "index 4516b8fce0..e3e343818f 100644",
                "--- a/django/conf/locale/dsb/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/dsb/LC_MESSAGES/django.po",
                "@@ -3,3 +3,3 @@",
                " # Translators:",
                "-# Michael Wolf <milupo@sorbzilla.de>, 2016-2017",
                "+# Michael Wolf <milupo@sorbzilla.de>, 2016-2018",
                " msgid \"\"",
                "@@ -8,4 +8,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-09 18:46+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-26 10:19+0000\\n\"",
                " \"Last-Translator: Michael Wolf <milupo@sorbzilla.de>\\n\"",
                "@@ -400,2 +400,5 @@ msgstr[3] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Zap\u00c3\u00b3daj\u00c5\u009bo licbu.\"",
                "+",
                " #, python-format",
                "@@ -484,2 +487,6 @@ msgstr \"G\u00c3\u00b3dnota '%(value)s musy pak True pak False by\u00c5\u009b.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"G\u00c3\u00b3dnota '%(value)s' musy pak True, False pak None by\u00c5\u009b.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -659,5 +666,2 @@ msgstr \"Zap\u00c3\u00b3daj\u00c5\u009bo ce\u00c5\u0082u licbu.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Zap\u00c3\u00b3daj\u00c5\u009bo licbu.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -674,2 +678,6 @@ msgstr \"Zap\u00c3\u00b3da\u00c5\u009be p\u00c5\u0082a\u00c5\u009biwe tra\u00c5\u009be.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Licba dnjow musy mjazy  {min_days} a {max_days} by\u00c5\u009b.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/eo/LC_MESSAGES/django.mo b/django/conf/locale/eo/LC_MESSAGES/django.mo",
                "index bcff4b692d..6b3f0ec01f 100644",
                "Binary files a/django/conf/locale/eo/LC_MESSAGES/django.mo and b/django/conf/locale/eo/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/eo/LC_MESSAGES/django.po b/django/conf/locale/eo/LC_MESSAGES/django.po",
                "index 1e72914060..bb16d5d62f 100644",
                "--- a/django/conf/locale/eo/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/eo/LC_MESSAGES/django.po",
                "@@ -14,4 +14,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-02-27 21:45+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-30 21:46+0000\\n\"",
                " \"Last-Translator: Baptiste Darthenay <baptiste+transifex@darthenay.fr>\\n\"",
                "@@ -391,2 +391,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Enigu nombron.\"",
                "+",
                " #, python-format",
                "@@ -469,2 +472,6 @@ msgstr \"'%(value)s' valoro devas esti Vera a\u00c5\u00ad Malvera\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\u00e2\u0080\u009c%(value)s\u00e2\u0080\u009d valoro devas esti Vera, Malvera a\u00c5\u00ad Neniu.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -645,5 +652,2 @@ msgstr \"Enigu plenan nombron.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Enigu nombron.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -660,2 +664,6 @@ msgstr \"Enigu validan da\u00c5\u00adron.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"La nombro da tagoj devas esti inter {min_days} kaj {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -756,3 +764,3 @@ msgstr \"Bonvolu \u00c4\u009dustigi la duoblan valoron sube.\"",
                " msgid \"The inline value did not match the parent instance.\"",
                "-msgstr \"\"",
                "+msgstr \"La enteksta valoro ne egalas la patran aperon.\"",
                "@@ -1135,2 +1143,7 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Se vi uzas la <meta name=\\\"referrer\\\" content=\\\"no-referrer\\\">markon a\u00c5\u00ad \"",
                "+\"inkluzivante la 'Referrer-Policy: no-referrer' titolo, bonvolu forigi ilin. \"",
                "+\"La CSRFa protekto postulas ke la 'Referer' titolo faru striktan \"",
                "+\"referencantan kontroladon. Se vi estas koncernita pri privateco, uzu \"",
                "+\"alternativojn kiel <a rel=\\\"noreferrer\\\" ...> por ligoj al aliaj retejoj.\"",
                "@@ -1159,3 +1172,3 @@ msgstr \"Neniu jaro specifita\"",
                " msgid \"Date out of range\"",
                "-msgstr \"\"",
                "+msgstr \"Dato ne en la intervalo\"",
                "@@ -1215,3 +1228,3 @@ msgstr \"Indekso de %(directory)s\"",
                " msgid \"Django: the Web framework for perfectionists with deadlines.\"",
                "-msgstr \"\"",
                "+msgstr \"D\u00c4\u00b5ango: la retframo por perfektemuloj kun limdatoj\"",
                "@@ -1222,5 +1235,7 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Vidu <a href=\\\"https://docs.djangoproject.com/en/%(version)s/releases/\\\" \"",
                "+\"target=\\\"_blank\\\" rel=\\\"noopener\\\">eldonajn notojn</a> por D\u00c4\u00b5ango %(version)s\"",
                " msgid \"The install worked successfully! Congratulations!\"",
                "-msgstr \"\"",
                "+msgstr \"La instalado sukcesis! Gratulojn!\"",
                "@@ -1233,2 +1248,5 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Vi vidas \u00c4\u0089i tiun pa\u00c4\u009don \u00c4\u0089ar <a href=\\\"https://docs.djangoproject.com/en/\"",
                "+\"%(version)s/ref/settings/#debug\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">DEBUG = \"",
                "+\"True</a> estas en via agorda dosiero kaj vi ne agordis ajnan URL.\"",
                "@@ -1238,9 +1256,9 @@ msgstr \"Djanga dokumentaro\"",
                " msgid \"Topics, references, &amp; how-to's\"",
                "-msgstr \"\"",
                "+msgstr \"Temoj, referencoj &amp; manlibroj\"",
                " msgid \"Tutorial: A Polling App\"",
                "-msgstr \"\"",
                "+msgstr \"Instruilo: apo pri enketoj\"",
                " msgid \"Get started with Django\"",
                "-msgstr \"\"",
                "+msgstr \"Komencu kun D\u00c4\u00b5ango\"",
                "@@ -1250,2 +1268,2 @@ msgstr \"Djanga komunumo\"",
                " msgid \"Connect, get help, or contribute\"",
                "-msgstr \"\"",
                "+msgstr \"Konekti\u00c4\u009du, ricevu helpon a\u00c5\u00ad kontribuu\"",
                "diff --git a/django/conf/locale/es_AR/LC_MESSAGES/django.mo b/django/conf/locale/es_AR/LC_MESSAGES/django.mo",
                "index d312b9d51f..d4f0f2a1f0 100644",
                "Binary files a/django/conf/locale/es_AR/LC_MESSAGES/django.mo and b/django/conf/locale/es_AR/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/es_AR/LC_MESSAGES/django.po b/django/conf/locale/es_AR/LC_MESSAGES/django.po",
                "index fb610a584a..bd53fe8f78 100644",
                "--- a/django/conf/locale/es_AR/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/es_AR/LC_MESSAGES/django.po",
                "@@ -11,4 +11,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-22 14:52+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-06-18 20:22+0000\\n\"",
                " \"Last-Translator: Ramiro Morales\\n\"",
                "@@ -390,2 +390,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Introduzca un n\u00c3\u00bamero.\"",
                "+",
                " #, python-format",
                "@@ -471,2 +474,6 @@ msgstr \"El valor de '%(value)s' debe ser Verdadero o Falso.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"El valor de '%(value)s' debe ser Verdadero, Falso o None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -647,5 +654,2 @@ msgstr \"Introduzca un n\u00c3\u00bamero entero.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Introduzca un n\u00c3\u00bamero.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -662,2 +666,6 @@ msgstr \"Introduzca una duraci\u00c3\u00b3n v\u00c3\u00a1lida.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"La cantidad de d\u00c3\u00adas debe tener valores entre {min_days} y {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/fa/LC_MESSAGES/django.mo b/django/conf/locale/fa/LC_MESSAGES/django.mo",
                "index 0105ba3c63..fa9d7e48df 100644",
                "Binary files a/django/conf/locale/fa/LC_MESSAGES/django.mo and b/django/conf/locale/fa/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/fa/LC_MESSAGES/django.po b/django/conf/locale/fa/LC_MESSAGES/django.po",
                "index 2d67ad0cdf..1143b2eea2 100644",
                "--- a/django/conf/locale/fa/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/fa/LC_MESSAGES/django.po",
                "@@ -7,2 +7,3 @@",
                " # Mazdak Badakhshan <geraneum@gmail.com>, 2014",
                "+# MJafar Mashhadi <raindigital2007@gmail.com>, 2018",
                " # Mohammad Hossein Mojtahedi <Mhm5000@gmail.com>, 2013",
                "@@ -16,5 +17,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 01:13+0000\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-06-23 23:00+0000\\n\"",
                "+\"Last-Translator: MJafar Mashhadi <raindigital2007@gmail.com>\\n\"",
                " \"Language-Team: Persian (http://www.transifex.com/django/django/language/\"",
                "@@ -25,3 +26,3 @@ msgstr \"\"",
                " \"Language: fa\\n\"",
                "-\"Plural-Forms: nplurals=1; plural=0;\\n\"",
                "+\"Plural-Forms: nplurals=2; plural=(n > 1);\\n\"",
                "@@ -168,2 +169,5 @@ msgstr \"\u00da\u00af\u00d8\u00b1\u00d8\u00ac\u00db\u008c\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -304,9 +308,9 @@ msgstr \"\u00d9\u00be\u00db\u008c\u00d9\u0088\u00d9\u0086\u00d8\u00af\"",
                " msgid \"That page number is not an integer\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d8\u00b4\u00d9\u0085\u00d8\u00a7\u00d8\u00b1\u00d9\u0087\u00d9\u0094 \u00d8\u00b5\u00d9\u0081\u00d8\u00ad\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00db\u008c\u00da\u00a9 \u00d8\u00b9\u00d8\u00af\u00d8\u00af \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af\"",
                " msgid \"That page number is less than 1\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d8\u00b4\u00d9\u0085\u00d8\u00a7\u00d8\u00b1\u00d9\u0087\u00d9\u0094 \u00d8\u00b5\u00d9\u0081\u00d8\u00ad\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00a8\u00d8\u00b2\u00d8\u00b1\u00da\u00af\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a7\u00d8\u00b2 \u00db\u00b1 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af\"",
                " msgid \"That page contains no results\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d8\u00b5\u00d9\u0081\u00d8\u00ad\u00d9\u0087 \u00d8\u00ae\u00d8\u00a7\u00d9\u0084\u00db\u008c \u00d8\u00a7\u00d8\u00b2 \u00d8\u00a7\u00d8\u00b7\u00d9\u0084\u00d8\u00a7\u00d8\u00b9\u00d8\u00a7\u00d8\u00aa \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\"",
                "@@ -368,2 +372,5 @@ msgstr[0] \"\"",
                " \"\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa).\"",
                "+msgstr[1] \"\"",
                "+\"\u00d8\u00b7\u00d9\u0088\u00d9\u0084 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u0085\u00d9\u0082\u00d8\u00af\u00d8\u00a7\u00d8\u00b1 \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00ad\u00d8\u00af\u00d8\u00a7\u00d9\u0082\u00d9\u0084 %(limit_value)d \u00da\u00a9\u00d8\u00a7\u00d8\u00b1\u00d8\u00a7\u00da\u00a9\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af (\u00d8\u00b7\u00d9\u0088\u00d9\u0084\u00d8\u00b4 %(show_value)d \"",
                "+\"\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa).\"",
                "@@ -379,2 +386,8 @@ msgstr[0] \"\"",
                " \"\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa).\"",
                "+msgstr[1] \"\"",
                "+\"\u00d8\u00b7\u00d9\u0088\u00d9\u0084 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u0085\u00d9\u0082\u00d8\u00af\u00d8\u00a7\u00d8\u00b1 \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00ad\u00d8\u00af\u00d8\u00a7\u00da\u00a9\u00d8\u00ab\u00d8\u00b1 %(limit_value)d \u00da\u00a9\u00d8\u00a7\u00d8\u00b1\u00d8\u00a7\u00da\u00a9\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af (\u00d8\u00b7\u00d9\u0088\u00d9\u0084\u00d8\u00b4 %(show_value)d \"",
                "+\"\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa).\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00db\u008c\u00da\u00a9 \u00d8\u00b9\u00d8\u00af\u00d8\u00af \u00d9\u0088\u00d8\u00a7\u00d8\u00b1\u00d8\u00af \u00da\u00a9\u00d9\u0086\u00db\u008c\u00d8\u00af.\"",
                "@@ -384,2 +397,3 @@ msgid_plural \"Ensure that there are no more than %(max)s digits in total.\"",
                " msgstr[0] \"\u00d9\u0086\u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00af\u00d8\u00b1 \u00d9\u0085\u00d8\u00ac\u00d9\u0085\u00d9\u0088\u00d8\u00b9 \u00d8\u00a8\u00db\u008c\u00d8\u00b4 \u00d8\u00a7\u00d8\u00b2 %(max)s \u00d8\u00b1\u00d9\u0082\u00d9\u0085 \u00d8\u00af\u00d8\u00a7\u00d8\u00b4\u00d8\u00aa\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af.\"",
                "+msgstr[1] \"\u00d9\u0086\u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00af\u00d8\u00b1 \u00d9\u0085\u00d8\u00ac\u00d9\u0085\u00d9\u0088\u00d8\u00b9 \u00d8\u00a8\u00db\u008c\u00d8\u00b4 \u00d8\u00a7\u00d8\u00b2 %(max)s \u00d8\u00b1\u00d9\u0082\u00d9\u0085 \u00d8\u00af\u00d8\u00a7\u00d8\u00b4\u00d8\u00aa\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af.\"",
                "@@ -389,2 +403,3 @@ msgid_plural \"Ensure that there are no more than %(max)s decimal places.\"",
                " msgstr[0] \"\u00d9\u0086\u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00a8\u00db\u008c\u00d8\u00b4 \u00d8\u00a7\u00d8\u00b2 %(max)s \u00d8\u00b1\u00d9\u0082\u00d9\u0085 \u00d8\u00a7\u00d8\u00b9\u00d8\u00b4\u00d8\u00a7\u00d8\u00b1 \u00d8\u00af\u00d8\u00a7\u00d8\u00b4\u00d8\u00aa\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af.\"",
                "+msgstr[1] \"\u00d9\u0086\u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00a8\u00db\u008c\u00d8\u00b4 \u00d8\u00a7\u00d8\u00b2 %(max)s \u00d8\u00b1\u00d9\u0082\u00d9\u0085 \u00d8\u00a7\u00d8\u00b9\u00d8\u00b4\u00d8\u00a7\u00d8\u00b1 \u00d8\u00af\u00d8\u00a7\u00d8\u00b4\u00d8\u00aa\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af.\"",
                "@@ -396,2 +411,3 @@ msgid_plural \"\"",
                " msgstr[0] \"\u00d9\u0086\u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00a8\u00db\u008c\u00d8\u00b4 \u00d8\u00a7\u00d8\u00b2 %(max)s \u00d8\u00b1\u00d9\u0082\u00d9\u0085 \u00d9\u0082\u00d8\u00a8\u00d9\u0084 \u00d9\u0085\u00d9\u0085\u00db\u008c\u00d8\u00b2 \u00d8\u00af\u00d8\u00a7\u00d8\u00b4\u00d8\u00aa\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af.\"",
                "+msgstr[1] \"\u00d9\u0086\u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00a8\u00db\u008c\u00d8\u00b4 \u00d8\u00a7\u00d8\u00b2 %(max)s \u00d8\u00b1\u00d9\u0082\u00d9\u0085 \u00d9\u0082\u00d8\u00a8\u00d9\u0084 \u00d9\u0085\u00d9\u0085\u00db\u008c\u00d8\u00b2 \u00d8\u00af\u00d8\u00a7\u00d8\u00b4\u00d8\u00aa\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af.\"",
                "@@ -402,2 +418,4 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\u00d9\u0081\u00d8\u00a7\u00d8\u00af\u00d9\u0087 \u00d8\u00a7\u00d8\u00b2 \u00d9\u00be\u00d8\u00b1\u00d9\u0088\u00d9\u0086\u00d8\u00af\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7 \u00d9\u00be\u00d8\u00b3\u00d9\u0088\u00d9\u0086\u00d8\u00af '%(extension)s' \u00d9\u0085\u00d8\u00ac\u00d8\u00a7\u00d8\u00b2 \u00d9\u0086\u00db\u008c\u00d8\u00b3\u00d8\u00aa. \u00d9\u00be\u00d8\u00b3\u00d9\u0088\u00d9\u0086\u00d8\u00af\u00e2\u0080\u008c\u00d9\u0087\u00d8\u00a7\u00db\u008c \u00d9\u0085\u00d8\u00ac\u00d8\u00a7\u00d8\u00b2 \u00d8\u00b9\u00d8\u00a8\u00d8\u00a7\u00d8\u00b1\u00d8\u00aa\u00d9\u0086\u00d8\u00af \"",
                "+\"\u00d8\u00a7\u00d8\u00b2: '%(allowed_extensions)s'\"",
                "@@ -453,2 +471,6 @@ msgstr \"\u00d9\u0085\u00d9\u0082\u00d8\u00af\u00d8\u00a7\u00d8\u00b1 \u00c2\u00ab%(value)s\u00c2\u00bb \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00db\u008c\u00d8\u00a7 True \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af \u00d9\u0088 \u00db\u008c\u00d8\u00a7 False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\u00d9\u0085\u00d9\u0082\u00d8\u00af\u00d8\u00a7\u00d8\u00b1 \u00c2\u00ab%(value)s\u00c2\u00bb \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00db\u008c\u00d8\u00a7 None \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af \u00db\u008c\u00d8\u00a7 True \u00d9\u0088 \u00db\u008c\u00d8\u00a7 False.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -629,5 +651,2 @@ msgstr \"\u00d8\u00a8\u00d9\u0087 \u00d8\u00b7\u00d9\u0088\u00d8\u00b1 \u00da\u00a9\u00d8\u00a7\u00d9\u0085\u00d9\u0084 \u00db\u008c\u00da\u00a9 \u00d8\u00b9\u00d8\u00af\u00d8\u00af \u00d9\u0088\u00d8\u00a7\u00d8\u00b1\u00d8\u00af \u00da\u00a9\u00d9\u0086\u00db\u008c\u00d8\u00af.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00db\u008c\u00da\u00a9 \u00d8\u00b9\u00d8\u00af\u00d8\u00af \u00d9\u0088\u00d8\u00a7\u00d8\u00b1\u00d8\u00af \u00da\u00a9\u00d9\u0086\u00db\u008c\u00d8\u00af.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -644,2 +663,6 @@ msgstr \"\u00db\u008c\u00da\u00a9 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b2\u00d9\u0087\u00d9\u0094 \u00d8\u00b2\u00d9\u0085\u00d8\u00a7\u00d9\u0086\u00db\u008c \u00d9\u0085\u00d8\u00b9\u00d8\u00aa\u00d8\u00a8\u00d8\u00b1 \u00d9\u0088\u00d8\u00a7\u00d8\u00b1\u00d8\u00af \u00da\u00a9\u00d9\u0086\u00db\u008c\u00d8\u00af.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -659,2 +682,4 @@ msgstr[0] \"\"",
                " \"\u00d8\u00b7\u00d9\u0088\u00d9\u0084 \u00d8\u00b9\u00d9\u0086\u00d9\u0088\u00d8\u00a7\u00d9\u0086 \u00d9\u00be\u00d8\u00b1\u00d9\u0088\u00d9\u0086\u00d8\u00af\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00ad\u00d8\u00af\u00d8\u00a7\u00d9\u0082\u00d9\u0084 %(max)d \u00da\u00a9\u00d8\u00a7\u00d8\u00b1\u00d8\u00a7\u00da\u00a9\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af (\u00d8\u00b7\u00d9\u0088\u00d9\u0084\u00d8\u00b4 %(length)d \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa).\"",
                "+msgstr[1] \"\"",
                "+\"\u00d8\u00b7\u00d9\u0088\u00d9\u0084 \u00d8\u00b9\u00d9\u0086\u00d9\u0088\u00d8\u00a7\u00d9\u0086 \u00d9\u00be\u00d8\u00b1\u00d9\u0088\u00d9\u0086\u00d8\u00af\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00ad\u00d8\u00af\u00d8\u00a7\u00d9\u0082\u00d9\u0084 %(max)d \u00da\u00a9\u00d8\u00a7\u00d8\u00b1\u00d8\u00a7\u00da\u00a9\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af (\u00d8\u00b7\u00d9\u0088\u00d9\u0084\u00d8\u00b4 %(length)d \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa).\"",
                "@@ -698,2 +723,3 @@ msgid_plural \"Please submit %d or fewer forms.\"",
                " msgstr[0] \"\u00d9\u0084\u00d8\u00b7\u00d9\u0081\u00d8\u00a7\u00d9\u008b %d \u00db\u008c\u00d8\u00a7 \u00da\u00a9\u00d9\u0085\u00d8\u00aa\u00d8\u00b1 \u00d9\u0081\u00d8\u00b1\u00d9\u0085 \u00d8\u00a8\u00d9\u0081\u00d8\u00b1\u00d8\u00b3\u00d8\u00aa\u00db\u008c\u00d8\u00af.\"",
                "+msgstr[1] \"\u00d9\u0084\u00d8\u00b7\u00d9\u0081\u00d8\u00a7\u00d9\u008b %d \u00db\u008c\u00d8\u00a7 \u00da\u00a9\u00d9\u0085\u00d8\u00aa\u00d8\u00b1 \u00d9\u0081\u00d8\u00b1\u00d9\u0085 \u00d8\u00a8\u00d9\u0081\u00d8\u00b1\u00d8\u00b3\u00d8\u00aa\u00db\u008c\u00d8\u00af.\"",
                "@@ -703,2 +729,3 @@ msgid_plural \"Please submit %d or more forms.\"",
                " msgstr[0] \"\u00d9\u0084\u00d8\u00b7\u00d9\u0081\u00d8\u00a7\u00d9\u008b %d \u00db\u008c\u00d8\u00a7 \u00d8\u00a8\u00db\u008c\u00d8\u00b4\u00d8\u00aa\u00d8\u00b1 \u00d9\u0081\u00d8\u00b1\u00d9\u0085 \u00d8\u00a8\u00d9\u0081\u00d8\u00b1\u00d8\u00b3\u00d8\u00aa\u00db\u008c\u00d8\u00af.\"",
                "+msgstr[1] \"\u00d9\u0084\u00d8\u00b7\u00d9\u0081\u00d8\u00a7\u00d9\u008b %d \u00db\u008c\u00d8\u00a7 \u00d8\u00a8\u00db\u008c\u00d8\u00b4\u00d8\u00aa\u00d8\u00b1 \u00d9\u0081\u00d8\u00b1\u00d9\u0085 \u00d8\u00a8\u00d9\u0081\u00d8\u00b1\u00d8\u00b3\u00d8\u00aa\u00db\u008c\u00d8\u00af.\"",
                "@@ -772,2 +799,3 @@ msgid_plural \"%(size)d bytes\"",
                " msgstr[0] \"%(size)d \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00aa\"",
                "+msgstr[1] \"%(size)d \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00aa\"",
                "@@ -1040,2 +1068,3 @@ msgid_plural \"%d years\"",
                " msgstr[0] \"%d \u00d8\u00b3\u00d8\u00a7\u00d9\u0084\"",
                "+msgstr[1] \"%d \u00d8\u00b3\u00d8\u00a7\u00d9\u0084\"",
                "@@ -1045,2 +1074,3 @@ msgid_plural \"%d months\"",
                " msgstr[0] \"%d \u00d9\u0085\u00d8\u00a7\u00d9\u0087\"",
                "+msgstr[1] \"%d \u00d9\u0085\u00d8\u00a7\u00d9\u0087\"",
                "@@ -1050,2 +1080,3 @@ msgid_plural \"%d weeks\"",
                " msgstr[0] \"%d \u00d9\u0087\u00d9\u0081\u00d8\u00aa\u00d9\u0087\"",
                "+msgstr[1] \"%d \u00d9\u0087\u00d9\u0081\u00d8\u00aa\u00d9\u0087\"",
                "@@ -1055,2 +1086,3 @@ msgid_plural \"%d days\"",
                " msgstr[0] \"%d \u00d8\u00b1\u00d9\u0088\u00d8\u00b2\"",
                "+msgstr[1] \"%d \u00d8\u00b1\u00d9\u0088\u00d8\u00b2\"",
                "@@ -1060,2 +1092,3 @@ msgid_plural \"%d hours\"",
                " msgstr[0] \"%d \u00d8\u00b3\u00d8\u00a7\u00d8\u00b9\u00d8\u00aa\"",
                "+msgstr[1] \"%d \u00d8\u00b3\u00d8\u00a7\u00d8\u00b9\u00d8\u00aa\"",
                "@@ -1065,2 +1098,3 @@ msgid_plural \"%d minutes\"",
                " msgstr[0] \"%d \u00d8\u00af\u00d9\u0082\u00db\u008c\u00d9\u0082\u00d9\u0087\"",
                "+msgstr[1] \"%d \u00d8\u00af\u00d9\u0082\u00db\u008c\u00d9\u0082\u00d9\u0087\"",
                "@@ -1081,5 +1115,6 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"\u00d8\u00b4\u00d9\u0085\u00d8\u00a7 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u00be\u00db\u008c\u00d8\u00ba\u00d8\u00a7\u00d9\u0085 \u00d8\u00b1\u00d8\u00a7 \u00d9\u0085\u00db\u008c\u00d8\u00a8\u00db\u008c\u00d9\u0086\u00db\u008c\u00d8\u00af \u00da\u0086\u00d9\u0088\u00d9\u0086 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d8\u00b3\u00d8\u00a7\u00db\u008c\u00d8\u00aa\u00d9\u0090 HTTPS \u00d9\u0086\u00db\u008c\u00d8\u00a7\u00d8\u00b2\u00d9\u0085\u00d9\u0086\u00d8\u00af \u00db\u008c\u00da\u00a9 \u00c2\u00ab\u00d8\u00aa\u00db\u008c\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a7\u00d8\u00b1\u00d8\u00ac\u00d8\u00a7\u00d8\u00b9\u00c2\u00bb \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \"",
                "-\"\u00d8\u00a7\u00d8\u00b1\u00d8\u00b3\u00d8\u00a7\u00d9\u0084 \u00d8\u00a8\u00d9\u0087 \u00d8\u00a8\u00d8\u00b1\u00d9\u0088\u00d8\u00b2\u00d8\u00b1 \u00d8\u00b4\u00d9\u0085\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\u00d8\u008c \u00d9\u0088\u00d9\u0084\u00db\u008c \u00d9\u0087\u00db\u008c\u00da\u0086 \u00da\u0086\u00db\u008c\u00d8\u00b2\u00db\u008c \u00d8\u00a7\u00d8\u00b1\u00d8\u00b3\u00d8\u00a7\u00d9\u0084 \u00d9\u0086\u00d8\u00b4\u00d8\u00af\u00d9\u0087 \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa. \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d8\u00aa\u00db\u008c\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a8\u00d9\u0087 \u00d8\u00af\u00d9\u0084\u00d8\u00a7\u00db\u008c\u00d9\u0084 \u00d8\u00a7\u00d9\u0085\u00d9\u0086\u00db\u008c\u00d8\u00aa\u00db\u008c \"",
                "-\"\u00d9\u0085\u00d9\u0088\u00d8\u00b1\u00d8\u00af \u00d9\u0086\u00db\u008c\u00d8\u00a7\u00d8\u00b2 \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\u00d8\u008c \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00db\u008c\u00d9\u0086\u00da\u00a9\u00d9\u0087 \u00d8\u00a7\u00d8\u00b2 \u00d9\u0087\u00d8\u00a7\u00db\u008c\u00d8\u00ac\u00da\u00a9 \u00d9\u0086\u00d8\u00b4\u00d8\u00af\u00d9\u0086 \u00d8\u00a8\u00d8\u00b1\u00d9\u0088\u00d8\u00b2\u00d8\u00b1 \u00d8\u00a7\u00d8\u00b7\u00d9\u0085\u00db\u008c\u00d9\u0086\u00d8\u00a7\u00d9\u0086 \u00d8\u00ad\u00d8\u00a7\u00d8\u00b5\u00d9\u0084 \u00d8\u00b4\u00d9\u0088\u00d8\u00af.\"",
                "+\"\u00d8\u00b4\u00d9\u0085\u00d8\u00a7 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u00be\u00db\u008c\u00d8\u00a7\u00d9\u0085 \u00d8\u00b1\u00d8\u00a7 \u00d9\u0085\u00db\u008c\u00e2\u0080\u008c\u00d8\u00a8\u00db\u008c\u00d9\u0086\u00db\u008c\u00d8\u00af \u00da\u0086\u00d9\u0088\u00d9\u0086 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d8\u00b3\u00d8\u00a7\u00db\u008c\u00d8\u00aa\u00d9\u0090 HTTPS \u00d9\u0086\u00db\u008c\u00d8\u00a7\u00d8\u00b2\u00d9\u0085\u00d9\u0086\u00d8\u00af \u00db\u008c\u00da\u00a9 \u00c2\u00ab\u00d8\u00aa\u00db\u008c\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a7\u00d8\u00b1\u00d8\u00ac\u00d8\u00a7\u00d8\u00b9 (Referer \"",
                "+\"header)\u00c2\u00bb \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00d8\u00b1\u00d8\u00b3\u00d8\u00a7\u00d9\u0084 \u00d8\u00a8\u00d9\u0087 \u00d9\u0085\u00d8\u00b1\u00d9\u0088\u00d8\u00b1\u00da\u00af\u00d8\u00b1 \u00d8\u00b4\u00d9\u0085\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa \u00d8\u00a7\u00d9\u0085\u00d8\u00a7 \u00d9\u0087\u00db\u008c\u00da\u0086 \u00da\u0086\u00db\u008c\u00d8\u00b2\u00db\u008c \u00d8\u00a7\u00d8\u00b1\u00d8\u00b3\u00d8\u00a7\u00d9\u0084 \u00d9\u0086\u00d8\u00b4\u00d8\u00af\u00d9\u0087 \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa. \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d8\u00aa\u00db\u008c\u00d8\u00aa\u00d8\u00b1 \"",
                "+\"\u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00d9\u0085\u00d9\u0086\u00db\u008c\u00d8\u00aa \u00d8\u00b4\u00d9\u0085\u00d8\u00a7 \u00d8\u00a8\u00d8\u00a7 \u00d8\u00ad\u00d8\u00b5\u00d9\u0088\u00d9\u0084 \u00d8\u00a7\u00d8\u00b7\u00d9\u0085\u00db\u008c\u00d9\u0086\u00d8\u00a7\u00d9\u0086 \u00d8\u00a7\u00d8\u00b2 \u00d8\u00a7\u00db\u008c\u00d9\u0086\u00da\u00a9\u00d9\u0087 \u00da\u00a9\u00d9\u0086\u00d8\u00aa\u00d8\u00b1\u00d9\u0084 \u00d9\u0085\u00d8\u00b1\u00d9\u0088\u00d8\u00b1\u00da\u00af\u00d8\u00b1\u00d8\u00aa\u00d8\u00a7\u00d9\u0086 \u00d8\u00a8\u00d9\u0087 \u00d8\u00af\u00d8\u00b3\u00d8\u00aa \u00d8\u00b4\u00d8\u00ae\u00d8\u00b5 \u00d8\u00ab\u00d8\u00a7\u00d9\u0084\u00d8\u00ab\u00db\u008c \"",
                "+\"\u00d9\u0086\u00db\u008c\u00d9\u0081\u00d8\u00aa\u00d8\u00a7\u00d8\u00af\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af \u00d8\u00b6\u00d8\u00b1\u00d9\u0088\u00d8\u00b1\u00db\u008c \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa.\"",
                "@@ -1090,5 +1125,5 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"\u00d8\u00a7\u00da\u00af\u00d8\u00b1 \u00d8\u00a8\u00d8\u00b2\u00d9\u0088\u00d8\u00b2\u00d8\u00b1 \u00d8\u00ae\u00d9\u0088\u00d8\u00af \u00d8\u00b1\u00d8\u00a7 \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00ba\u00db\u008c\u00d8\u00b1 \u00d9\u0081\u00d8\u00b9\u00d8\u00a7\u00d9\u0084 \u00da\u00a9\u00d8\u00b1\u00d8\u00af\u00d9\u0086 \u00d8\u00aa\u00db\u008c\u00d8\u00aa\u00d8\u00b1\u00d9\u0087\u00d8\u00a7\u00db\u008c \u00c2\u00ab\u00d8\u00a7\u00d8\u00b1\u00d8\u00ac\u00d8\u00a7\u00d8\u00b9\u00c2\u00bb \u00d8\u00aa\u00d9\u0086\u00d8\u00b8\u00db\u008c\u00d9\u0085 \u00da\u00a9\u00d8\u00b1\u00d8\u00af\u00d9\u0087\u00e2\u0080\u008c\u00d8\u00a7\u00db\u008c\u00d8\u00af\u00d8\u008c \u00d9\u0084\u00d8\u00b7\u00d9\u0081\u00d8\u00a7 \"",
                "-\"\u00d9\u0085\u00d8\u00ac\u00d8\u00af\u00d8\u00af\u00d8\u00a7 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u0088\u00db\u008c\u00da\u0098\u00da\u00af\u00db\u008c \u00d8\u00b1\u00d8\u00a7 \u00d9\u0081\u00d8\u00b9\u00d8\u00a7\u00d9\u0084 \u00da\u00a9\u00d9\u0086\u00db\u008c\u00d8\u00af\u00d8\u008c \u00d8\u00ad\u00d8\u00af\u00d8\u00a7\u00d9\u0082\u00d9\u0084 \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u0088\u00d8\u00a8\u00d8\u00b3\u00d8\u00a7\u00db\u008c\u00d8\u00aa\u00d8\u008c \u00db\u008c\u00d8\u00a7 \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00d8\u00aa\u00d8\u00b5\u00d8\u00a7\u00d9\u0084\u00d8\u00a7\u00d8\u00aa HTTPS\u00d8\u008c \"",
                "-\"\u00db\u008c\u00d8\u00a7 \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00af\u00d8\u00b1\u00d8\u00ae\u00d9\u0088\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\u00d9\u0087\u00d8\u00a7\u00db\u008c\u00db\u008c \u00d8\u00a8\u00d8\u00a7 \u00c2\u00ab\u00d9\u0085\u00d8\u00a8\u00d8\u00af\u00d8\u00a7 \u00db\u008c\u00da\u00a9\u00d8\u00b3\u00d8\u00a7\u00d9\u0086\u00c2\u00bb.\"",
                "+\"\u00d8\u00a7\u00da\u00af\u00d8\u00b1 \u00d8\u00aa\u00db\u008c\u00d8\u00aa\u00d8\u00b1\u00d9\u0087\u00d8\u00a7\u00db\u008c \u00c2\u00ab\u00d8\u00a7\u00d8\u00b1\u00d8\u00ac\u00d8\u00a7\u00d8\u00b9 (Referer)\u00c2\u00bb \u00d8\u00b1\u00d8\u00a7 \u00d8\u00af\u00d8\u00b1 \u00d9\u0085\u00d8\u00b1\u00d9\u0088\u00d8\u00b1\u00da\u00af\u00d8\u00b1\u00d8\u00aa\u00d8\u00a7\u00d9\u0086 \u00d8\u00ba\u00db\u008c\u00d8\u00b1\u00d9\u0081\u00d8\u00b9\u00d8\u00a7\u00d9\u0084 \u00da\u00a9\u00d8\u00b1\u00d8\u00af\u00d9\u0087\u00e2\u0080\u008c\u00d8\u00a7\u00db\u008c\u00d8\u00af\u00d8\u008c \u00d9\u0084\u00d8\u00b7\u00d9\u0081\u00d8\u00a7\u00d9\u008b \u00d9\u0085\u00d8\u00ac\u00d8\u00af\u00d8\u00af\u00d8\u00a7\u00d9\u008b \"",
                "+\"\u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u0088\u00db\u008c\u00da\u0098\u00da\u00af\u00db\u008c \u00d8\u00b1\u00d8\u00a7 \u00d9\u0081\u00d8\u00b9\u00d8\u00a7\u00d9\u0084 \u00da\u00a9\u00d9\u0086\u00db\u008c\u00d8\u00af\u00d8\u008c \u00d8\u00ad\u00d8\u00af\u00d8\u00a7\u00d9\u0082\u00d9\u0084 \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u0088\u00d8\u00a8\u00d8\u00b3\u00d8\u00a7\u00db\u008c\u00d8\u00aa\u00d8\u008c \u00db\u008c\u00d8\u00a7 \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00d8\u00aa\u00d8\u00b5\u00d8\u00a7\u00d9\u0084\u00d8\u00a7\u00d8\u00aa HTTPS\u00d8\u008c \u00db\u008c\u00d8\u00a7 \"",
                "+\"\u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00af\u00d8\u00b1\u00d8\u00ae\u00d9\u0088\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\u00d9\u0087\u00d8\u00a7\u00db\u008c\u00db\u008c \u00d8\u00a8\u00d8\u00a7 \u00c2\u00ab\u00d9\u0085\u00d8\u00a8\u00d8\u00af\u00d8\u00a7 \u00db\u008c\u00da\u00a9\u00d8\u00b3\u00d8\u00a7\u00d9\u0086 (same-origin)\u00c2\u00bb.\"",
                "@@ -1107,5 +1142,5 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"\u00d8\u00b4\u00d9\u0085\u00d8\u00a7 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u00be\u00db\u008c\u00d8\u00ba\u00d8\u00a7\u00d9\u0085 \u00d8\u00b1\u00d8\u00a7 \u00d9\u0085\u00db\u008c\u00d8\u00a8\u00db\u008c\u00d9\u0086\u00db\u008c\u00d8\u00af \u00da\u0086\u00d9\u0088\u00d9\u0086 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d8\u00b3\u00d8\u00a7\u00db\u008c\u00d8\u00aa \u00d9\u0086\u00db\u008c\u00d8\u00a7\u00d8\u00b2\u00d9\u0085\u00d9\u0086\u00d8\u00af \u00da\u00a9\u00d9\u0088\u00da\u00a9\u00db\u008c \u00c2\u00ab\u00d8\u00ac\u00d8\u00b9\u00d9\u0084 \u00d8\u00af\u00d8\u00b1\u00d8\u00ae\u00d9\u0088\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa \u00d9\u0085\u00db\u008c\u00d8\u00a7\u00d9\u0086 \u00d9\u0088\u00d8\u00a8\u00da\u00af\u00d8\u00a7\u00d9\u0087\u00db\u008c\u00c2\u00bb \"",
                "-\"\u00d8\u00af\u00d8\u00b1 \u00d8\u00b2\u00d9\u0085\u00d8\u00a7\u00d9\u0086 \u00d8\u00a7\u00d8\u00b1\u00d8\u00a7\u00d8\u00a6\u00d9\u0087 \u00db\u008c \u00d9\u0081\u00d9\u0088\u00d8\u00b1\u00d9\u0085 \u00d9\u0085\u00db\u008c\u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af. \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00da\u00a9\u00d9\u0088\u00da\u00a9\u00db\u008c\u00e2\u0080\u008c\u00d9\u0087\u00d8\u00a7 \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d9\u0085\u00d8\u00b3\u00d8\u00a7\u00d8\u00a6\u00d9\u0084 \u00d8\u00a7\u00d9\u0085\u00d9\u0086\u00db\u008c\u00d8\u00aa\u00db\u008c \u00d8\u00b6\u00d8\u00b1\u00d9\u0088\u00d8\u00b1\u00db\u008c \u00d9\u0087\u00d8\u00b3\u00d8\u00aa\u00d9\u0086\u00d8\u00af\u00d8\u008c \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \"",
                "-\"\u00d8\u00a7\u00d8\u00b7\u00d9\u0085\u00db\u008c\u00d9\u0086\u00d8\u00a7\u00d9\u0086 \u00d8\u00a7\u00d8\u00b2 \u00d8\u00a7\u00db\u008c\u00d9\u0086\u00da\u00a9\u00d9\u0087 \u00d8\u00a8\u00d8\u00b1\u00d9\u0088\u00d8\u00b2\u00d8\u00b1 \u00d8\u00b4\u00d9\u0085\u00d8\u00a7 \u00d8\u00aa\u00d9\u0088\u00d8\u00b3\u00d8\u00b7 \u00d8\u00b4\u00d8\u00ae\u00d8\u00b5 \u00d8\u00ab\u00d8\u00a7\u00d9\u0084\u00d8\u00ab\u00db\u008c \u00d9\u0087\u00d8\u00a7\u00db\u008c\u00d8\u00ac\u00da\u00a9 \u00d9\u0086\u00d8\u00b4\u00d8\u00af\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af.\"",
                "+\"\u00d8\u00b4\u00d9\u0085\u00d8\u00a7 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u00be\u00db\u008c\u00d8\u00a7\u00d9\u0085 \u00d8\u00b1\u00d8\u00a7 \u00d9\u0085\u00db\u008c\u00d8\u00a8\u00db\u008c\u00d9\u0086\u00db\u008c\u00d8\u00af \u00da\u0086\u00d9\u0088\u00d9\u0086 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d8\u00b3\u00d8\u00a7\u00db\u008c\u00d8\u00aa \u00d9\u0086\u00db\u008c\u00d8\u00a7\u00d8\u00b2\u00d9\u0085\u00d9\u0086\u00d8\u00af \u00da\u00a9\u00d9\u0088\u00da\u00a9\u00db\u008c \u00c2\u00ab\u00d8\u00ac\u00d8\u00b9\u00d9\u0084 \u00d8\u00af\u00d8\u00b1\u00d8\u00ae\u00d9\u0088\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa \u00d9\u0085\u00db\u008c\u00d8\u00a7\u00d9\u0086 \u00d9\u0088\u00d8\u00a8\u00da\u00af\u00d8\u00a7\u00d9\u0087\u00db\u008c \"",
                "+\"(CSRF)\u00c2\u00bb \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa. \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00da\u00a9\u00d9\u0088\u00da\u00a9\u00db\u008c \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00d9\u0085\u00d9\u0086\u00db\u008c\u00d8\u00aa \u00d8\u00b4\u00d9\u0085\u00d8\u00a7 \u00d8\u00b6\u00d8\u00b1\u00d9\u0088\u00d8\u00b1\u00db\u008c \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa. \u00d8\u00a8\u00d8\u00a7 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00da\u00a9\u00d9\u0088\u00da\u00a9\u00db\u008c \u00d9\u0085\u00db\u008c\u00e2\u0080\u008c\u00d8\u00aa\u00d9\u0088\u00d8\u00a7\u00d9\u0086\u00db\u008c\u00d9\u0085 \u00d8\u00a7\u00d8\u00b2 \"",
                "+\"\u00d8\u00a7\u00db\u008c\u00d9\u0086\u00da\u00a9\u00d9\u0087 \u00d8\u00b4\u00d8\u00ae\u00d8\u00b5 \u00d8\u00ab\u00d8\u00a7\u00d9\u0084\u00d8\u00ab\u00db\u008c \u00da\u00a9\u00d9\u0086\u00d8\u00aa\u00d8\u00b1\u00d9\u0084 \u00d9\u0085\u00d8\u00b1\u00d9\u0088\u00d8\u00b1\u00da\u00af\u00d8\u00b1\u00d8\u00aa\u00d8\u00a7\u00d9\u0086 \u00d8\u00b1\u00d8\u00a7 \u00d8\u00a8\u00d9\u0087 \u00d8\u00af\u00d8\u00b3\u00d8\u00aa \u00d9\u0086\u00da\u00af\u00d8\u00b1\u00d9\u0081\u00d8\u00aa\u00d9\u0087 \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa \u00d8\u00a7\u00d8\u00b7\u00d9\u0085\u00db\u008c\u00d9\u0086\u00d8\u00a7\u00d9\u0086 \u00d9\u00be\u00db\u008c\u00d8\u00af\u00d8\u00a7 \u00da\u00a9\u00d9\u0086\u00db\u008c\u00d9\u0085.\"",
                "@@ -1125,3 +1160,3 @@ msgstr \"\u00d9\u0087\u00db\u008c\u00da\u0086 \u00d8\u00b3\u00d8\u00a7\u00d9\u0084\u00db\u008c \u00d9\u0085\u00d8\u00b4\u00d8\u00ae\u00d8\u00b5 \u00d9\u0086\u00d8\u00b4\u00d8\u00af\u00d9\u0087 \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\"",
                " msgid \"Date out of range\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d8\u00aa\u00d8\u00a7\u00d8\u00b1\u00db\u008c\u00d8\u00ae \u00d8\u00ba\u00db\u008c\u00d8\u00b1\u00d9\u0085\u00d8\u00ac\u00d8\u00a7\u00d8\u00b2 \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\"",
                "@@ -1199,3 +1234,3 @@ msgstr \"\"",
                " msgid \"Django Documentation\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d9\u0085\u00d8\u00b3\u00d8\u00aa\u00d9\u0086\u00d8\u00af\u00d8\u00a7\u00d8\u00aa \u00d8\u00ac\u00d9\u0086\u00da\u00af\u00d9\u0088\"",
                "@@ -1205,9 +1240,9 @@ msgstr \"\"",
                " msgid \"Tutorial: A Polling App\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d8\u00a2\u00d9\u0085\u00d9\u0088\u00d8\u00b2\u00d8\u00b4 \u00da\u00af\u00d8\u00a7\u00d9\u0085 \u00d8\u00a8\u00d9\u0087 \u00da\u00af\u00d8\u00a7\u00d9\u0085: \u00d8\u00a8\u00d8\u00b1\u00d9\u0086\u00d8\u00a7\u00d9\u0085\u00da\u00a9\u00db\u008c \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00b1\u00d8\u00a3\u00db\u008c\u00e2\u0080\u008c\u00da\u00af\u00db\u008c\u00d8\u00b1\u00db\u008c\"",
                " msgid \"Get started with Django\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d8\u00b4\u00d8\u00b1\u00d9\u0088\u00d8\u00b9 \u00d8\u00a8\u00d9\u0087 \u00da\u00a9\u00d8\u00a7\u00d8\u00b1 \u00d8\u00a8\u00d8\u00a7 \u00d8\u00ac\u00d9\u0086\u00da\u00af\u00d9\u0088\"",
                " msgid \"Django Community\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d8\u00ac\u00d8\u00a7\u00d9\u0085\u00d8\u00b9\u00d9\u0087\u00d9\u0094 \u00d8\u00ac\u00d9\u0086\u00da\u00af\u00d9\u0088\"",
                "diff --git a/django/conf/locale/fi/LC_MESSAGES/django.mo b/django/conf/locale/fi/LC_MESSAGES/django.mo",
                "index d7f35ce35d..1d027960ed 100644",
                "Binary files a/django/conf/locale/fi/LC_MESSAGES/django.mo and b/django/conf/locale/fi/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/fi/LC_MESSAGES/django.po b/django/conf/locale/fi/LC_MESSAGES/django.po",
                "index 0247661ec1..fbab3be89e 100644",
                "--- a/django/conf/locale/fi/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/fi/LC_MESSAGES/django.po",
                "@@ -3,3 +3,3 @@",
                " # Translators:",
                "-# Aarni Koskela, 2015,2017",
                "+# Aarni Koskela, 2015,2017-2018",
                " # Antti Kaihola <antti.15+transifex@kaihola.fi>, 2011",
                "@@ -12,4 +12,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 01:13+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 00:21+0000\\n\"",
                " \"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "@@ -164,2 +164,5 @@ msgstr \"georgia\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabyle\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -386,2 +389,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Sy\u00c3\u00b6t\u00c3\u00a4 luku.\"",
                "+",
                " #, python-format",
                "@@ -417,3 +423,3 @@ msgstr \"\"",
                " msgid \"Null characters are not allowed.\"",
                "-msgstr \"\"",
                "+msgstr \"Tyhji\u00c3\u00a4 merkkej\u00c3\u00a4 (null) ei sallita.\"",
                "@@ -467,2 +473,6 @@ msgstr \"%(value)s-arvo pit\u00c3\u00a4\u00c3\u00a4 olla joko tosi tai ep\u00c3\u00a4tosi.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -639,5 +649,2 @@ msgstr \"Sy\u00c3\u00b6t\u00c3\u00a4 kokonaisluku.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Sy\u00c3\u00b6t\u00c3\u00a4 luku.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -654,2 +661,6 @@ msgstr \"Sy\u00c3\u00b6t\u00c3\u00a4 oikea kesto.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -752,3 +763,3 @@ msgstr \"Valitse oikea vaihtoehto. Valintasi ei l\u00c3\u00b6ydy vaihtoehtojen joukosta.\"",
                " msgid \"\\\"%(pk)s\\\" is not a valid value.\"",
                "-msgstr \"\"",
                "+msgstr \"\\\"%(pk)s\\\" ei ole kelvollinen arvo.\"",
                "@@ -1124,2 +1135,7 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Jos k\u00c3\u00a4yt\u00c3\u00a4t <meta name=\\\"referrer\\\" content=\\\"no-referrer\\\">-tagia tai \"",
                "+\"\\\"Referrer-Policy: no-referrer\\\" -otsaketta, ole hyv\u00c3\u00a4 ja poista ne. CSRF-\"",
                "+\"suojaus vaatii Referer-otsakkeen tehd\u00c3\u00a4kseen tarkan referer-tarkistuksen. Jos \"",
                "+\"vaadit yksityisyytt\u00c3\u00a4, k\u00c3\u00a4yt\u00c3\u00a4 vaihtoehtoja kuten <a rel=\\\"noreferrer\\\" ...\"",
                "+\">linkitt\u00c3\u00a4\u00c3\u00a4ksesi kolmannen osapuolen sivuille.\"",
                "@@ -1149,3 +1165,3 @@ msgstr \"Vuosi puuttuu\"",
                " msgid \"Date out of range\"",
                "-msgstr \"\"",
                "+msgstr \"P\u00c3\u00a4iv\u00c3\u00a4m\u00c3\u00a4\u00c3\u00a4r\u00c3\u00a4 ei alueella\"",
                "@@ -1212,3 +1228,3 @@ msgstr \"\"",
                " msgid \"The install worked successfully! Congratulations!\"",
                "-msgstr \"\"",
                "+msgstr \"Asennus toimi! Onneksi olkoon!\"",
                "@@ -1221,17 +1237,20 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"N\u00c3\u00a4et t\u00c3\u00a4m\u00c3\u00a4n viestin, koska asetuksissasi on <a href=\\\"https://docs.\"",
                "+\"djangoproject.com/en/%(version)s/ref/settings/#debug\\\" target=\\\"_blank\\\" rel=\"",
                "+\"\\\"noopener\\\">DEBUG = True</a> etk\u00c3\u00a4 ole konfiguroinut yht\u00c3\u00a4\u00c3\u00a4n URL-osoitetta.\"",
                " msgid \"Django Documentation\"",
                "-msgstr \"\"",
                "+msgstr \"Django-dokumentaatio\"",
                " msgid \"Topics, references, &amp; how-to's\"",
                "-msgstr \"\"",
                "+msgstr \"Aiheet, viittaukset &amp; how-tot\"",
                " msgid \"Tutorial: A Polling App\"",
                "-msgstr \"\"",
                "+msgstr \"Tutoriaali: kyselyapplikaatio\"",
                " msgid \"Get started with Django\"",
                "-msgstr \"\"",
                "+msgstr \"Miten p\u00c3\u00a4\u00c3\u00a4st\u00c3\u00a4 alkuun Djangolla\"",
                " msgid \"Django Community\"",
                "-msgstr \"\"",
                "+msgstr \"Django-yhteis\u00c3\u00b6\"",
                "diff --git a/django/conf/locale/fr/LC_MESSAGES/django.mo b/django/conf/locale/fr/LC_MESSAGES/django.mo",
                "index 42780bbc26..cd2bbfd6ca 100644",
                "Binary files a/django/conf/locale/fr/LC_MESSAGES/django.mo and b/django/conf/locale/fr/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/fr/LC_MESSAGES/django.po b/django/conf/locale/fr/LC_MESSAGES/django.po",
                "index e88a70ff27..91c9d9ef6d 100644",
                "--- a/django/conf/locale/fr/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/fr/LC_MESSAGES/django.po",
                "@@ -4,3 +4,3 @@",
                " # charettes <charette.s@gmail.com>, 2012",
                "-# Claude Paroz <claude@2xlibre.net>, 2013-2017",
                "+# Claude Paroz <claude@2xlibre.net>, 2013-2018",
                " # Claude Paroz <claude@2xlibre.net>, 2011",
                "@@ -14,4 +14,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 08:05+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 12:50+0000\\n\"",
                " \"Last-Translator: Claude Paroz <claude@2xlibre.net>\\n\"",
                "@@ -165,2 +165,5 @@ msgstr \"G\u00c3\u00a9orgien\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabyle\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -391,2 +394,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Saisissez un nombre.\"",
                "+",
                " #, python-format",
                "@@ -474,2 +480,7 @@ msgstr \"La valeur \u00c2\u00ab\u00c2\u00a0%(value)s\u00c2\u00a0\u00c2\u00bb doit \u00c3\u00aatre soit True (vrai), soit False (fau",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\"",
                "+\"La valeur \u00c2\u00ab\u00c2\u00a0%(value)s\u00c2\u00a0\u00c2\u00bb doit \u00c3\u00aatre True (vrai), False (faux) ou None (aucun).\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -652,5 +663,2 @@ msgstr \"Saisissez un nombre entier.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Saisissez un nombre.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -667,2 +675,6 @@ msgstr \"Saisissez une dur\u00c3\u00a9e valide.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Le nombre de jours doit \u00c3\u00aatre entre {min_days} et {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/gd/LC_MESSAGES/django.mo b/django/conf/locale/gd/LC_MESSAGES/django.mo",
                "index 63f8547665..9537634512 100644",
                "Binary files a/django/conf/locale/gd/LC_MESSAGES/django.mo and b/django/conf/locale/gd/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/gd/LC_MESSAGES/django.po b/django/conf/locale/gd/LC_MESSAGES/django.po",
                "index 315ab6100a..103853e5d5 100644",
                "--- a/django/conf/locale/gd/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/gd/LC_MESSAGES/django.po",
                "@@ -12,4 +12,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 06:41+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-29 09:31+0000\\n\"",
                " \"Last-Translator: GunChleoc\\n\"",
                "@@ -165,2 +165,5 @@ msgstr \"Cairtbheilis\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabyle\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -405,2 +408,5 @@ msgstr[3] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Cuir a-steach \u00c3\u00a0ireamh.\"",
                "+",
                " #, python-format",
                "@@ -502,2 +508,6 @@ msgstr \"Feumaidh \u00e2\u0080\u009c%(value)s\u00e2\u0080\u009d a bhith True no False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"Feumaidh \u00e2\u0080\u009c%(value)s\u00e2\u0080\u009d a bhith True, False no None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -680,5 +690,2 @@ msgstr \"Cuir a-steach \u00c3\u00a0ireamh shl\u00c3\u00a0n.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Cuir a-steach \u00c3\u00a0ireamh.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -695,2 +702,7 @@ msgstr \"Cuir a-steach faid dhligheach.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+\"Feumaidh an \u00c3\u00a0ireamh de l\u00c3\u00a0ithean a bhith eadar {min_days} is {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/hsb/LC_MESSAGES/django.mo b/django/conf/locale/hsb/LC_MESSAGES/django.mo",
                "index d290384221..909649f45d 100644",
                "Binary files a/django/conf/locale/hsb/LC_MESSAGES/django.mo and b/django/conf/locale/hsb/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/hsb/LC_MESSAGES/django.po b/django/conf/locale/hsb/LC_MESSAGES/django.po",
                "index f5bba5856c..37cc5ba7d6 100644",
                "--- a/django/conf/locale/hsb/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/hsb/LC_MESSAGES/django.po",
                "@@ -3,3 +3,3 @@",
                " # Translators:",
                "-# Michael Wolf <milupo@sorbzilla.de>, 2016-2017",
                "+# Michael Wolf <milupo@sorbzilla.de>, 2016-2018",
                " msgid \"\"",
                "@@ -8,4 +8,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-09 18:46+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-26 11:17+0000\\n\"",
                " \"Last-Translator: Michael Wolf <milupo@sorbzilla.de>\\n\"",
                "@@ -398,2 +398,5 @@ msgstr[3] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Zapodaj\u00c4\u0087e li\u00c4\u008dbu.\"",
                "+",
                " #, python-format",
                "@@ -482,2 +485,6 @@ msgstr \"H\u00c3\u00b3dnota '%(value)s' dyrbi pak True pak False by\u00c4\u0087.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"H\u00c3\u00b3dnota '%(value)s' dyrbi pak True, False pak None by\u00c4\u0087.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -657,5 +664,2 @@ msgstr \"Zapodaj\u00c4\u0087e cy\u00c5\u0082u li\u00c4\u008dbu.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Zapodaj\u00c4\u0087e li\u00c4\u008dbu.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -672,2 +676,6 @@ msgstr \"Zapodaj\u00c4\u0087e p\u00c5\u0082a\u00c4\u0087iwe tra\u00c4\u0087e.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Li\u00c4\u008dba dnjow dyrbi mjez {min_days} a {max_days} by\u00c4\u0087.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/hu/LC_MESSAGES/django.mo b/django/conf/locale/hu/LC_MESSAGES/django.mo",
                "index 46a6b39733..a7ac689d9a 100644",
                "Binary files a/django/conf/locale/hu/LC_MESSAGES/django.mo and b/django/conf/locale/hu/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/hu/LC_MESSAGES/django.po b/django/conf/locale/hu/LC_MESSAGES/django.po",
                "index 97d4078891..64456a665d 100644",
                "--- a/django/conf/locale/hu/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/hu/LC_MESSAGES/django.po",
                "@@ -3,3 +3,4 @@",
                " # Translators:",
                "-# Andr\u00c3\u00a1s Veres-Szentkir\u00c3\u00a1lyi, 2016-2017",
                "+# Akos Zsolt Hochrein <hoch.akos@gmail.com>, 2018",
                "+# Andr\u00c3\u00a1s Veres-Szentkir\u00c3\u00a1lyi, 2016-2018",
                " # Attila Nagy <>, 2012",
                "@@ -14,5 +15,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-24 13:36+0000\\n\"",
                "-\"Last-Translator: Andr\u00c3\u00a1s Veres-Szentkir\u00c3\u00a1lyi\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-26 09:24+0000\\n\"",
                "+\"Last-Translator: Akos Zsolt Hochrein <hoch.akos@gmail.com>\\n\"",
                " \"Language-Team: Hungarian (http://www.transifex.com/django/django/language/\"",
                "@@ -166,2 +167,5 @@ msgstr \"Gr\u00c3\u00baz\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabil\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -390,2 +394,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Adj meg egy sz\u00c3\u00a1mot.\"",
                "+",
                " #, python-format",
                "@@ -475,2 +482,6 @@ msgstr \"'%(value)s' \u00c3\u00a9rt\u00c3\u00a9k csak igaz (True) vagy hamis (False) lehet.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' \u00c3\u00a9rt\u00c3\u00a9knek True, False vagy None-nak kell lennie.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -652,5 +663,2 @@ msgstr \"Adjon meg egy eg\u00c3\u00a9sz sz\u00c3\u00a1mot.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Adj meg egy sz\u00c3\u00a1mot.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -667,2 +675,6 @@ msgstr \"Adjon meg egy \u00c3\u00a9rv\u00c3\u00a9nyes id\u00c5\u0091tartamot.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"A napok sz\u00c3\u00a1m\u00c3\u00a1nak {min_days} \u00c3\u00a9s {max_days} k\u00c3\u00b6z\u00c3\u00a9 kell esnie.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/id/LC_MESSAGES/django.mo b/django/conf/locale/id/LC_MESSAGES/django.mo",
                "index 28e6c69d76..df13536c20 100644",
                "Binary files a/django/conf/locale/id/LC_MESSAGES/django.mo and b/django/conf/locale/id/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/id/LC_MESSAGES/django.po b/django/conf/locale/id/LC_MESSAGES/django.po",
                "index d01f0633e2..99fc195f05 100644",
                "--- a/django/conf/locale/id/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/id/LC_MESSAGES/django.po",
                "@@ -15,4 +15,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-11 07:10+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-06-18 23:24+0000\\n\"",
                " \"Last-Translator: Fery Setiawan <gembelweb@gmail.com>\\n\"",
                "@@ -386,2 +386,5 @@ msgstr[0] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Masukkan sebuah bilangan.\"",
                "+",
                " #, python-format",
                "@@ -463,2 +466,6 @@ msgstr \"Nilai '%(value)s' haruslah bernilai Benar atau Salah.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"Nilai '%(value)s' harus True, False, atau None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -639,5 +646,2 @@ msgstr \"Masukkan keseluruhan angka bilangan.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Masukkan sebuah bilangan.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -654,2 +658,6 @@ msgstr \"Masukan durasi waktu yang benar.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Jumlah hari harus diantara {min_days} dan {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/is/LC_MESSAGES/django.mo b/django/conf/locale/is/LC_MESSAGES/django.mo",
                "index f124c7abae..463814a893 100644",
                "Binary files a/django/conf/locale/is/LC_MESSAGES/django.mo and b/django/conf/locale/is/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/is/LC_MESSAGES/django.po b/django/conf/locale/is/LC_MESSAGES/django.po",
                "index 5ef6aa1396..09aaab84b5 100644",
                "--- a/django/conf/locale/is/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/is/LC_MESSAGES/django.po",
                "@@ -6,5 +6,6 @@",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "+# Matt R, 2018",
                " # saevarom <saevar@saevar.is>, 2011",
                " # saevarom <saevar@saevar.is>, 2013,2015",
                "-# Thordur Sigurdsson <thordur@ja.is>, 2016-2017",
                "+# Thordur Sigurdsson <thordur@ja.is>, 2016-2018",
                " msgid \"\"",
                "@@ -13,4 +14,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-27 07:32+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-06-22 20:45+0000\\n\"",
                " \"Last-Translator: Thordur Sigurdsson <thordur@ja.is>\\n\"",
                "@@ -165,2 +166,5 @@ msgstr \"Georg\u00c3\u00adska\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -390,2 +394,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Sl\u00c3\u00a1\u00c3\u00b0u inn t\u00c3\u00b6lu.\"",
                "+",
                " #, python-format",
                "@@ -470,2 +477,6 @@ msgstr \"'%(value)s' ver\u00c3\u00b0ur a\u00c3\u00b0 vera anna\u00c3\u00b0hvort satt e\u00c3\u00b0a \u00c3\u00b3satt.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' ver\u00c3\u00b0ur a\u00c3\u00b0 vera eitt eftirtalinna: True, False e\u00c3\u00b0a None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -644,5 +655,2 @@ msgstr \"Sl\u00c3\u00a1\u00c3\u00b0u inn heilt\u00c3\u00b6lu.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Sl\u00c3\u00a1\u00c3\u00b0u inn t\u00c3\u00b6lu.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -659,2 +667,6 @@ msgstr \"Sl\u00c3\u00a1\u00c3\u00b0u inn gilt t\u00c3\u00admabil.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Fj\u00c3\u00b6ldi daga ver\u00c3\u00b0ur a\u00c3\u00b0 vera \u00c3\u00a1 milli {min_days} og {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -857,21 +869,21 @@ msgstr \"sunnudagur\"",
                " msgid \"Mon\"",
                "-msgstr \"M\u00c3\u00a1n\"",
                "+msgstr \"m\u00c3\u00a1n\"",
                " msgid \"Tue\"",
                "-msgstr \"\u00c3\u009eri\"",
                "+msgstr \"\u00c3\u00beri\"",
                " msgid \"Wed\"",
                "-msgstr \"Mi\u00c3\u00b0\"",
                "+msgstr \"mi\u00c3\u00b0\"",
                " msgid \"Thu\"",
                "-msgstr \"Fim\"",
                "+msgstr \"fim\"",
                " msgid \"Fri\"",
                "-msgstr \"F\u00c3\u00b6s\"",
                "+msgstr \"f\u00c3\u00b6s\"",
                " msgid \"Sat\"",
                "-msgstr \"Lau\"",
                "+msgstr \"lau\"",
                " msgid \"Sun\"",
                "-msgstr \"Sun\"",
                "+msgstr \"sun\"",
                "@@ -951,3 +963,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"Jan.\"",
                "-msgstr \"Jan.\"",
                "+msgstr \"jan.\"",
                "@@ -955,3 +967,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"Feb.\"",
                "-msgstr \"Feb.\"",
                "+msgstr \"feb.\"",
                "@@ -959,3 +971,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"March\"",
                "-msgstr \"Mars\"",
                "+msgstr \"mars\"",
                "@@ -963,3 +975,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"April\"",
                "-msgstr \"Apr\u00c3\u00adl\"",
                "+msgstr \"apr\u00c3\u00adl\"",
                "@@ -967,3 +979,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"May\"",
                "-msgstr \"Ma\u00c3\u00ad\"",
                "+msgstr \"ma\u00c3\u00ad\"",
                "@@ -971,3 +983,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"June\"",
                "-msgstr \"J\u00c3\u00ban\u00c3\u00ad\"",
                "+msgstr \"j\u00c3\u00ban\u00c3\u00ad\"",
                "@@ -975,3 +987,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"July\"",
                "-msgstr \"J\u00c3\u00bal\u00c3\u00ad\"",
                "+msgstr \"j\u00c3\u00bal\u00c3\u00ad\"",
                "@@ -979,3 +991,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"Aug.\"",
                "-msgstr \"\u00c3\u0081g.\"",
                "+msgstr \"\u00c3\u00a1g.\"",
                "@@ -983,3 +995,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"Sept.\"",
                "-msgstr \"Sept.\"",
                "+msgstr \"sept.\"",
                "@@ -987,3 +999,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"Oct.\"",
                "-msgstr \"Okt.\"",
                "+msgstr \"okt.\"",
                "@@ -991,3 +1003,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"Nov.\"",
                "-msgstr \"N\u00c3\u00b3v.\"",
                "+msgstr \"n\u00c3\u00b3v.\"",
                "@@ -995,3 +1007,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"Dec.\"",
                "-msgstr \"Des.\"",
                "+msgstr \"des.\"",
                "@@ -999,3 +1011,3 @@ msgctxt \"alt. month\"",
                " msgid \"January\"",
                "-msgstr \"Jan\u00c3\u00baar\"",
                "+msgstr \"jan\u00c3\u00baar\"",
                "@@ -1003,3 +1015,3 @@ msgctxt \"alt. month\"",
                " msgid \"February\"",
                "-msgstr \"Febr\u00c3\u00baar\"",
                "+msgstr \"febr\u00c3\u00baar\"",
                "@@ -1007,3 +1019,3 @@ msgctxt \"alt. month\"",
                " msgid \"March\"",
                "-msgstr \"Mars\"",
                "+msgstr \"mars\"",
                "@@ -1011,3 +1023,3 @@ msgctxt \"alt. month\"",
                " msgid \"April\"",
                "-msgstr \"Apr\u00c3\u00adl\"",
                "+msgstr \"apr\u00c3\u00adl\"",
                "@@ -1015,3 +1027,3 @@ msgctxt \"alt. month\"",
                " msgid \"May\"",
                "-msgstr \"Ma\u00c3\u00ad\"",
                "+msgstr \"ma\u00c3\u00ad\"",
                "@@ -1019,3 +1031,3 @@ msgctxt \"alt. month\"",
                " msgid \"June\"",
                "-msgstr \"J\u00c3\u00ban\u00c3\u00ad\"",
                "+msgstr \"j\u00c3\u00ban\u00c3\u00ad\"",
                "@@ -1023,3 +1035,3 @@ msgctxt \"alt. month\"",
                " msgid \"July\"",
                "-msgstr \"J\u00c3\u00bal\u00c3\u00ad\"",
                "+msgstr \"j\u00c3\u00bal\u00c3\u00ad\"",
                "@@ -1027,3 +1039,3 @@ msgctxt \"alt. month\"",
                " msgid \"August\"",
                "-msgstr \"\u00c3\u0081g\u00c3\u00bast\"",
                "+msgstr \"\u00c3\u00a1g\u00c3\u00bast\"",
                "@@ -1031,3 +1043,3 @@ msgctxt \"alt. month\"",
                " msgid \"September\"",
                "-msgstr \"September\"",
                "+msgstr \"september\"",
                "@@ -1035,3 +1047,3 @@ msgctxt \"alt. month\"",
                " msgid \"October\"",
                "-msgstr \"Okt\u00c3\u00b3ber\"",
                "+msgstr \"okt\u00c3\u00b3ber\"",
                "@@ -1039,3 +1051,3 @@ msgctxt \"alt. month\"",
                " msgid \"November\"",
                "-msgstr \"N\u00c3\u00b3vember\"",
                "+msgstr \"n\u00c3\u00b3vember\"",
                "@@ -1043,3 +1055,3 @@ msgctxt \"alt. month\"",
                " msgid \"December\"",
                "-msgstr \"Desember\"",
                "+msgstr \"desember\"",
                "diff --git a/django/conf/locale/it/LC_MESSAGES/django.mo b/django/conf/locale/it/LC_MESSAGES/django.mo",
                "index f8ae8fa60e..ece4baa2aa 100644",
                "Binary files a/django/conf/locale/it/LC_MESSAGES/django.mo and b/django/conf/locale/it/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/it/LC_MESSAGES/django.po b/django/conf/locale/it/LC_MESSAGES/django.po",
                "index a5f8ffed80..35ad800b54 100644",
                "--- a/django/conf/locale/it/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/it/LC_MESSAGES/django.po",
                "@@ -3,5 +3,6 @@",
                " # Translators:",
                "-# bbstuntman <claudiu.andrei.roman@gmail.com>, 2017",
                "+# Topolino_Hackerino <claudiu.andrei.roman@gmail.com>, 2017",
                " # Carlo Miron <C8E@miron.it>, 2011",
                " # Carlo Miron <C8E@miron.it>, 2014",
                "+# Carlo Miron <C8E@miron.it>, 2018",
                " # Denis Darii <denis.darii@gmail.com>, 2011",
                "@@ -12,2 +13,3 @@",
                " # Marco Bonetti, 2014",
                "+# Mirco Grillo <mirco.grillomg@gmail.com>, 2018",
                " # Nicola Larosa <transifex@teknico.net>, 2013",
                "@@ -21,5 +23,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 13:51+0000\\n\"",
                "-\"Last-Translator: palmux <palmux@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-30 21:04+0000\\n\"",
                "+\"Last-Translator: Carlo Miron <C8E@miron.it>\\n\"",
                " \"Language-Team: Italian (http://www.transifex.com/django/django/language/\"",
                "@@ -173,2 +175,5 @@ msgstr \"Georgiano\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Cabilo\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -396,2 +401,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Inserisci un numero.\"",
                "+",
                " #, python-format",
                "@@ -475,2 +483,6 @@ msgstr \"Il valore '%(value)s' deve essere True oppure False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"Il valore di %(value)s deve essere True, False o None\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -651,5 +663,2 @@ msgstr \"Inserisci un numero intero.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Inserisci un numero.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -666,2 +675,6 @@ msgstr \"Inserisci una durata valida.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Il numero di giorni deve essere compreso tra {min_days} e {max_days}\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/ja/LC_MESSAGES/django.mo b/django/conf/locale/ja/LC_MESSAGES/django.mo",
                "index 9c7fa3497f..cf1abc4c03 100644",
                "Binary files a/django/conf/locale/ja/LC_MESSAGES/django.mo and b/django/conf/locale/ja/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/ja/LC_MESSAGES/django.po b/django/conf/locale/ja/LC_MESSAGES/django.po",
                "index d078258f54..04b771bfaa 100644",
                "--- a/django/conf/locale/ja/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/ja/LC_MESSAGES/django.po",
                "@@ -7,3 +7,3 @@",
                " # Masashi SHIBATA <contact@c-bata.link>, 2017",
                "-# Shinya Okano <tokibito@gmail.com>, 2012-2017",
                "+# Shinya Okano <tokibito@gmail.com>, 2012-2018",
                " # Tetsuya Morimoto <tetsuya.morimoto@gmail.com>, 2011",
                "@@ -13,4 +13,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-04 02:33+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-23 03:26+0000\\n\"",
                " \"Last-Translator: Shinya Okano <tokibito@gmail.com>\\n\"",
                "@@ -384,2 +384,5 @@ msgstr[0] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00e6\u0095\u00b4\u00e6\u0095\u00b0\u00e3\u0082\u0092\u00e5\u0085\u00a5\u00e5\u008a\u009b\u00e3\u0081\u0097\u00e3\u0081\u00a6\u00e3\u0081\u008f\u00e3\u0081\u00a0\u00e3\u0081\u0095\u00e3\u0081\u0084\u00e3\u0080\u0082\"",
                "+",
                " #, python-format",
                "@@ -460,2 +463,6 @@ msgstr \"'%(value)s' \u00e3\u0081\u00af\u00e7\u009c\u009f\u00e5\u0081\u00bd\u00e5\u0080\u00a4\u00e3\u0081\u00ab\u00e3\u0081\u0097\u00e3\u0081\u00aa\u00e3\u0081\u0091\u00e3\u0082\u008c\u00e3\u0081\u00b0\u00e3\u0081\u00aa\u00e3\u0082\u008a\u00e3\u0081\u00be\u00e3\u0081\u009b\u00e3\u0082\u0093\u00e3\u0080\u0082\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' \u00e3\u0081\u00afTrue\u00e3\u0080\u0081False\u00e3\u0081\u00be\u00e3\u0081\u009f\u00e3\u0081\u00afNone\u00e3\u0081\u00ae\u00e5\u0080\u00a4\u00e3\u0081\u00a7\u00e3\u0081\u00aa\u00e3\u0081\u0091\u00e3\u0082\u008c\u00e3\u0081\u00b0\u00e3\u0081\u00aa\u00e3\u0082\u008a\u00e3\u0081\u00be\u00e3\u0081\u009b\u00e3\u0082\u0093\u00e3\u0080\u0082\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -631,5 +638,2 @@ msgstr \"\u00e6\u0095\u00b4\u00e6\u0095\u00b0\u00e3\u0082\u0092\u00e5\u0085\u00a5\u00e5\u008a\u009b\u00e3\u0081\u0097\u00e3\u0081\u00a6\u00e3\u0081\u008f\u00e3\u0081\u00a0\u00e3\u0081\u0095\u00e3\u0081\u0084\u00e3\u0080\u0082\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00e6\u0095\u00b4\u00e6\u0095\u00b0\u00e3\u0082\u0092\u00e5\u0085\u00a5\u00e5\u008a\u009b\u00e3\u0081\u0097\u00e3\u0081\u00a6\u00e3\u0081\u008f\u00e3\u0081\u00a0\u00e3\u0081\u0095\u00e3\u0081\u0084\u00e3\u0080\u0082\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -646,2 +650,6 @@ msgstr \"\u00e6\u0099\u0082\u00e9\u0096\u0093\u00e5\u00b7\u00ae\u00e5\u0088\u0086\u00e3\u0082\u0092\u00e6\u00ad\u00a3\u00e3\u0081\u0097\u00e3\u0081\u008f\u00e5\u0085\u00a5\u00e5\u008a\u009b\u00e3\u0081\u0097\u00e3\u0081\u00a6\u00e3\u0081\u008f\u00e3\u0081\u00a0\u00e3\u0081\u0095\u00e3\u0081\u0084\u00e3\u0080\u0082\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\u00e6\u0097\u00a5\u00e6\u0095\u00b0\u00e3\u0081\u00af{min_days}\u00e3\u0081\u008b\u00e3\u0082\u0089{max_days}\u00e3\u0081\u00ae\u00e9\u0096\u0093\u00e3\u0081\u00a7\u00e3\u0081\u00aa\u00e3\u0081\u0091\u00e3\u0082\u008c\u00e3\u0081\u00b0\u00e3\u0081\u00aa\u00e3\u0082\u008a\u00e3\u0081\u00be\u00e3\u0081\u009b\u00e3\u0082\u0093\u00e3\u0080\u0082\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/ko/LC_MESSAGES/django.mo b/django/conf/locale/ko/LC_MESSAGES/django.mo",
                "index 23b87ccb9b..319303c44f 100644",
                "Binary files a/django/conf/locale/ko/LC_MESSAGES/django.mo and b/django/conf/locale/ko/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/ko/LC_MESSAGES/django.po b/django/conf/locale/ko/LC_MESSAGES/django.po",
                "index 0c2e0e20ae..03c1f6643c 100644",
                "--- a/django/conf/locale/ko/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/ko/LC_MESSAGES/django.po",
                "@@ -4,3 +4,3 @@",
                " # BJ Jang <qgis.tr.kr@gmail.com>, 2014",
                "-# \u00ec\u00a4\u0080\u00ea\u00b5\u00ac \u00ea\u00b0\u0095 <chr0m3.kr@gmail.com>, 2017",
                "+# JunGu Kang <chr0m3.kr@gmail.com>, 2017",
                " # Jiyoon, Ha <cryptography@konkuk.ac.kr>, 2016",
                "@@ -13,4 +13,5 @@",
                " # JuneHyeon Bae <devunt@gmail.com>, 2014",
                "-# \u00ec\u00a4\u0080\u00ea\u00b5\u00ac \u00ea\u00b0\u0095 <chr0m3.kr@gmail.com>, 2015",
                "+# JunGu Kang <chr0m3.kr@gmail.com>, 2015",
                " # Kagami Sascha Rosylight <saschanaz@outlook.com>, 2017",
                "+# Noh Seho <iam@sehonoh.kr>, 2018",
                " # Subin Choi <os1742@gmail.com>, 2016",
                "@@ -21,5 +22,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-11 14:17+0000\\n\"",
                "-\"Last-Translator: \u00ec\u00a4\u0080\u00ea\u00b5\u00ac \u00ea\u00b0\u0095 <chr0m3.kr@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-18 08:57+0000\\n\"",
                "+\"Last-Translator: Noh Seho <iam@sehonoh.kr>\\n\"",
                " \"Language-Team: Korean (http://www.transifex.com/django/django/language/ko/)\\n\"",
                "@@ -391,2 +392,5 @@ msgstr[0] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00ec\u0088\u00ab\u00ec\u009e\u0090\u00eb\u00a5\u00bc \u00ec\u009e\u0085\u00eb\u00a0\u00a5\u00ed\u0095\u0098\u00ec\u0084\u00b8\u00ec\u009a\u0094.\"",
                "+",
                " #, python-format",
                "@@ -467,2 +471,6 @@ msgstr \"'%(value)s' \u00ea\u00b0\u0092\u00ec\u009d\u0080 \u00ea\u00b0\u0092\u00ec\u009d\u00b4 \u00ec\u0097\u0086\u00ea\u00b1\u00b0\u00eb\u0082\u0098, \u00ec\u00b0\u00b8 \u00eb\u0098\u0090\u00eb\u008a\u0094 \u00ea\u00b1\u00b0\u00ec\u00a7\u0093 \u00ec\u00a4\u0091 \u00ed\u0095\u0098\u00eb\u0082\u0098 \u00ec\u0097\u00ac\u00ec\u0095\u00bc",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s'\u00ea\u00b0\u0092\u00ec\u009d\u0080 \u00eb\u00b0\u0098\u00eb\u0093\u009c\u00ec\u008b\u009c True, False, None \u00ec\u00a4\u0091 \u00ed\u0095\u0098\u00eb\u0082\u0098\u00ec\u0097\u00ac\u00ec\u0095\u00bc\u00eb\u00a7\u008c \u00ed\u0095\u00a9\u00eb\u008b\u0088\u00eb\u008b\u00a4.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -640,5 +648,2 @@ msgstr \"\u00ec\u00a0\u0095\u00ec\u0088\u0098\u00eb\u00a5\u00bc \u00ec\u009e\u0085\u00eb\u00a0\u00a5\u00ed\u0095\u0098\u00ec\u0084\u00b8\u00ec\u009a\u0094.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00ec\u0088\u00ab\u00ec\u009e\u0090\u00eb\u00a5\u00bc \u00ec\u009e\u0085\u00eb\u00a0\u00a5\u00ed\u0095\u0098\u00ec\u0084\u00b8\u00ec\u009a\u0094.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -655,2 +660,6 @@ msgstr \"\u00ec\u0098\u00ac\u00eb\u00b0\u0094\u00eb\u00a5\u00b8 \u00ea\u00b8\u00b0\u00ea\u00b0\u0084\u00ec\u009d\u0084 \u00ec\u009e\u0085\u00eb\u00a0\u00a5\u00ed\u0095\u0098\u00ec\u0084\u00b8\u00ec\u009a\u0094.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\u00eb\u0082\u00a0\u00ec\u00a7\u009c\u00eb\u008a\u0094 {min_days}\u00ec\u0099\u0080 {max_days} \u00ec\u0082\u00ac\u00ec\u009d\u00b4\u00ec\u0097\u00ac\u00ec\u0095\u00bc \u00ed\u0095\u00a9\u00eb\u008b\u0088\u00eb\u008b\u00a4.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/lt/LC_MESSAGES/django.mo b/django/conf/locale/lt/LC_MESSAGES/django.mo",
                "index c474f7a623..96ff3bdfb2 100644",
                "Binary files a/django/conf/locale/lt/LC_MESSAGES/django.mo and b/django/conf/locale/lt/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/lt/LC_MESSAGES/django.po b/django/conf/locale/lt/LC_MESSAGES/django.po",
                "index d398d13bc9..5480854cbd 100644",
                "--- a/django/conf/locale/lt/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/lt/LC_MESSAGES/django.po",
                "@@ -6,3 +6,3 @@",
                " # lauris <lauris@runbox.com>, 2011",
                "-# Matas Dailyda <matas@dailyda.com>, 2015-2017",
                "+# Matas Dailyda <matas@dailyda.com>, 2015-2018",
                " # naktinis <naktinis@gmail.com>, 2012",
                "@@ -16,4 +16,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-04 11:04+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 08:24+0000\\n\"",
                " \"Last-Translator: Matas Dailyda <matas@dailyda.com>\\n\"",
                "@@ -25,4 +25,5 @@ msgstr \"\"",
                " \"Language: lt\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && (n\"",
                "-\"%100<10 || n%100>=20) ? 1 : 2);\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 10 == 1 && (n % 100 > 19 || n % 100 < \"",
                "+\"11) ? 0 : (n % 10 >= 2 && n % 10 <=9) && (n % 100 > 19 || n % 100 < 11) ? \"",
                "+\"1 : n % 1 != 0 ? 2: 3);\\n\"",
                "@@ -384,2 +385,5 @@ msgstr[2] \"\"",
                " \"(dabartinis ilgis %(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"\u00c4\u00aesitikinkite, kad reik\u00c5\u00a1m\u00c4\u0097 sudaryta i\u00c5\u00a1 nema\u00c5\u00beiau kaip %(limit_value)d \u00c5\u00beenkl\u00c5\u00b3 \"",
                "+\"(dabartinis ilgis %(show_value)d).\"",
                "@@ -401,2 +405,8 @@ msgstr[2] \"\"",
                " \"(dabartinis ilgis %(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"\u00c4\u00aesitikinkite, kad reik\u00c5\u00a1m\u00c4\u0097 sudaryta i\u00c5\u00a1 nedaugiau kaip %(limit_value)d \u00c5\u00beenkl\u00c5\u00b3 \"",
                "+\"(dabartinis ilgis %(show_value)d).\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00c4\u00aeveskite skai\u00c4\u008di\u00c5\u00b3.\"",
                "@@ -408,2 +418,3 @@ msgstr[1] \"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmenys.\"",
                " msgstr[2] \"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmen\u00c5\u00b3.\"",
                "+msgstr[3] \"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmen\u00c5\u00b3.\"",
                "@@ -415,2 +426,3 @@ msgstr[1] \"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmenys po kablelio.\"",
                " msgstr[2] \"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmen\u00c5\u00b3 po kablelio.\"",
                "+msgstr[3] \"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmen\u00c5\u00b3 po kablelio.\"",
                "@@ -426,2 +438,4 @@ msgstr[2] \"\"",
                " \"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmen\u00c5\u00b3 prie\u00c5\u00a1 kablel\u00c4\u00af.\"",
                "+msgstr[3] \"\"",
                "+\"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmen\u00c5\u00b3 prie\u00c5\u00a1 kablel\u00c4\u00af.\"",
                "@@ -485,2 +499,6 @@ msgstr \"'%(value)s' reik\u00c5\u00a1m\u00c4\u0097 turi b\u00c5\u00abti arba True, arba False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' reik\u00c5\u00a1m\u00c4\u0097 turi b\u00c5\u00abti True, False, arba None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -661,5 +679,2 @@ msgstr \"\u00c4\u00aeveskite piln\u00c4\u0085 skai\u00c4\u008di\u00c5\u00b3.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00c4\u00aeveskite skai\u00c4\u008di\u00c5\u00b3.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -676,2 +691,6 @@ msgstr \"\u00c4\u00aeveskite tinkam\u00c4\u0085 trukm\u00c4\u0099.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Dien\u00c5\u00b3 skai\u00c4\u008dius turi b\u00c5\u00abti tarp {min_days} ir {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -698,2 +717,5 @@ msgstr[2] \"\"",
                " \"\u00c5\u00beenkl\u00c5\u00b3 (dabartinis ilgis %(length)d).\"",
                "+msgstr[3] \"\"",
                "+\"\u00c4\u00aesitikinkite, kad failo pavadinimas sudarytas i\u00c5\u00a1 nedaugiau kaip %(max)d \"",
                "+\"\u00c5\u00beenkl\u00c5\u00b3 (dabartinis ilgis %(length)d).\"",
                "@@ -739,2 +761,3 @@ msgstr[1] \"Pra\u00c5\u00a1ome pateikti %d arba ma\u00c5\u00beiau form\u00c5\u00b3.\"",
                " msgstr[2] \"Pra\u00c5\u00a1ome pateikti %d arba ma\u00c5\u00beiau form\u00c5\u00b3.\"",
                "+msgstr[3] \"Pra\u00c5\u00a1ome pateikti %d arba ma\u00c5\u00beiau form\u00c5\u00b3.\"",
                "@@ -746,2 +769,3 @@ msgstr[1] \"Pra\u00c5\u00a1ome pateikti %d arba daugiau form\u00c5\u00b3.\"",
                " msgstr[2] \"Pra\u00c5\u00a1ome pateikti %d arba daugiau form\u00c5\u00b3.\"",
                "+msgstr[3] \"Pra\u00c5\u00a1ome pateikti %d arba daugiau form\u00c5\u00b3.\"",
                "@@ -819,2 +843,3 @@ msgstr[1] \"%(size)d baitai\"",
                " msgstr[2] \"%(size)d baitai\"",
                "+msgstr[3] \"%(size)d baitai\"",
                "@@ -1089,2 +1114,3 @@ msgstr[1] \"%d metai\"",
                " msgstr[2] \"%d met\u00c5\u00b3\"",
                "+msgstr[3] \"%d met\u00c5\u00b3\"",
                "@@ -1096,2 +1122,3 @@ msgstr[1] \"%d m\u00c4\u0097nesiai\"",
                " msgstr[2] \"%d m\u00c4\u0097nesi\u00c5\u00b3\"",
                "+msgstr[3] \"%d m\u00c4\u0097nesi\u00c5\u00b3\"",
                "@@ -1103,2 +1130,3 @@ msgstr[1] \"%d savait\u00c4\u0097s\"",
                " msgstr[2] \"%d savai\u00c4\u008di\u00c5\u00b3\"",
                "+msgstr[3] \"%d savai\u00c4\u008di\u00c5\u00b3\"",
                "@@ -1110,2 +1138,3 @@ msgstr[1] \"%d dienos\"",
                " msgstr[2] \"%d dien\u00c5\u00b3\"",
                "+msgstr[3] \"%d dien\u00c5\u00b3\"",
                "@@ -1117,2 +1146,3 @@ msgstr[1] \"%d valandos\"",
                " msgstr[2] \"%d valand\u00c5\u00b3\"",
                "+msgstr[3] \"%d valand\u00c5\u00b3\"",
                "@@ -1124,2 +1154,3 @@ msgstr[1] \"%d minut\u00c4\u0097s\"",
                " msgstr[2] \"%d minu\u00c4\u008di\u00c5\u00b3\"",
                "+msgstr[3] \"%d minu\u00c4\u008di\u00c5\u00b3\"",
                "diff --git a/django/conf/locale/lv/LC_MESSAGES/django.mo b/django/conf/locale/lv/LC_MESSAGES/django.mo",
                "index 786de09fac..a0771eb559 100644",
                "Binary files a/django/conf/locale/lv/LC_MESSAGES/django.mo and b/django/conf/locale/lv/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/lv/LC_MESSAGES/django.po b/django/conf/locale/lv/LC_MESSAGES/django.po",
                "index 1a57669da8..5367e97709 100644",
                "--- a/django/conf/locale/lv/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/lv/LC_MESSAGES/django.po",
                "@@ -5,3 +5,3 @@",
                " # NullIsNot0 <nullisnot0@inbox.lv>, 2017",
                "-# NullIsNot0 <nullisnot0@inbox.lv>, 2017",
                "+# NullIsNot0 <nullisnot0@inbox.lv>, 2017-2018",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "@@ -9,2 +9,3 @@",
                " # M\u00c4\u0081ris Narti\u00c5\u00a1s <maris.gis@gmail.com>, 2016",
                "+# M\u00c4\u0081rti\u00c5\u0086\u00c5\u00a1 \u00c5\u00a0ulcs <shulcsm@gmail.com>, 2018",
                " # NullIsNot0 <nullisnot0@inbox.lv>, 2018",
                "@@ -15,4 +16,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-17 17:32+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-06-03 12:12+0000\\n\"",
                " \"Last-Translator: NullIsNot0 <nullisnot0@inbox.lv>\\n\"",
                "@@ -393,2 +394,5 @@ msgstr[2] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Ievadiet skaitli.\"",
                "+",
                " #, python-format",
                "@@ -438,3 +442,3 @@ msgstr \"un\"",
                " msgid \"%(model_name)s with this %(field_labels)s already exists.\"",
                "-msgstr \"%(model_name)s ar \u00c5\u00a1iem %(field_labels)s jau eksist\u00c4\u0093.\"",
                "+msgstr \"%(model_name)s ar \u00c5\u00a1\u00c4\u0081du lauka %(field_labels)s v\u00c4\u0093rt\u00c4\u00abbu jau eksist\u00c4\u0093.\"",
                "@@ -452,3 +456,3 @@ msgstr \"\u00c5\u00a0is lauks nevar b\u00c5\u00abt tuk\u00c5\u00a1s\"",
                " msgid \"%(model_name)s with this %(field_label)s already exists.\"",
                "-msgstr \"%(model_name)s ar nosaukumu %(field_label)s jau eksist\u00c4\u0093.\"",
                "+msgstr \"%(model_name)s ar \u00c5\u00a1\u00c4\u0081du lauka %(field_label)s v\u00c4\u0093rt\u00c4\u00abbu jau eksist\u00c4\u0093.\"",
                "@@ -479,2 +483,6 @@ msgstr \"'%(value)s' v\u00c4\u0093rt\u00c4\u00abbai ir j\u00c4\u0081b\u00c5\u00abt vai nu True vai False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' v\u00c4\u0093rt\u00c4\u00abbai j\u00c4\u0081b\u00c5\u00abt True, False, vai None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -654,5 +662,2 @@ msgstr \"Ievadiet veselu skaitli.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Ievadiet skaitli.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -669,2 +674,6 @@ msgstr \"Ievadiet korektu ilgumu.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Dienu skaitam j\u00c4\u0081b\u00c5\u00abt no {min_days} l\u00c4\u00abdz {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -858,3 +867,3 @@ msgstr \"tre\u00c5\u00a1diena\"",
                " msgid \"Thursday\"",
                "-msgstr \"ceturdiena\"",
                "+msgstr \"ceturtdiena\"",
                "diff --git a/django/conf/locale/mn/LC_MESSAGES/django.mo b/django/conf/locale/mn/LC_MESSAGES/django.mo",
                "index f7433bfdc0..c195a2a569 100644",
                "Binary files a/django/conf/locale/mn/LC_MESSAGES/django.mo and b/django/conf/locale/mn/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/mn/LC_MESSAGES/django.po b/django/conf/locale/mn/LC_MESSAGES/django.po",
                "index 7626a47012..e29166db17 100644",
                "--- a/django/conf/locale/mn/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/mn/LC_MESSAGES/django.po",
                "@@ -9,4 +9,4 @@",
                " # Tsolmon <mnts26@gmail.com>, 2011",
                "-# Zorig <zorig_ezd@yahoo.com>, 2013-2014,2016,2018",
                "-# \u00d0\u0090\u00d0\u00bd\u00d1\u0085\u00d0\u00b1\u00d0\u00b0\u00d1\u008f\u00d1\u0080 \u00d0\u0090\u00d0\u00bd\u00d1\u0085\u00d0\u00b0\u00d0\u00b0 <l.ankhbayar@gmail.com>, 2013-2016",
                "+# Zorig, 2013-2014,2016,2018",
                "+# \u00d0\u0090\u00d0\u00bd\u00d1\u0085\u00d0\u00b1\u00d0\u00b0\u00d1\u008f\u00d1\u0080 \u00d0\u0090\u00d0\u00bd\u00d1\u0085\u00d0\u00b0\u00d0\u00b0 <l.ankhbayar@gmail.com>, 2013-2016,2018",
                " # \u00d0\u0091\u00d0\u00b0\u00d1\u008f\u00d1\u0081\u00d0\u00b3\u00d0\u00b0\u00d0\u00bb\u00d0\u00b0\u00d0\u00bd \u00d0\u00a6\u00d1\u008d\u00d0\u00b2\u00d0\u00bb\u00d1\u008d\u00d1\u008d <bayasaa_7672@yahoo.com>, 2011,2015,2017",
                "@@ -17,5 +17,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-02-21 00:40+0000\\n\"",
                "-\"Last-Translator: Zorig <zorig_ezd@yahoo.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-09 06:54+0000\\n\"",
                "+\"Last-Translator: \u00d0\u0090\u00d0\u00bd\u00d1\u0085\u00d0\u00b1\u00d0\u00b0\u00d1\u008f\u00d1\u0080 \u00d0\u0090\u00d0\u00bd\u00d1\u0085\u00d0\u00b0\u00d0\u00b0 <l.ankhbayar@gmail.com>\\n\"",
                " \"Language-Team: Mongolian (http://www.transifex.com/django/django/language/\"",
                "@@ -170,3 +170,3 @@ msgstr \"\u00d0\u0093\u00d2\u00af\u00d1\u0080\u00d0\u00b6\"",
                " msgid \"Kabyle\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u009a\u00d0\u00b0\u00d0\u00b1\u00d0\u00b8\u00d0\u00bb\u00d1\u008d\"",
                "@@ -394,2 +394,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00d0\u00a2\u00d0\u00be\u00d0\u00be\u00d0\u00bd \u00d1\u0083\u00d1\u0082\u00d0\u00b3\u00d0\u00b0 \u00d0\u00be\u00d1\u0080\u00d1\u0083\u00d1\u0083\u00d0\u00bb\u00d0\u00bd\u00d0\u00b0 \u00d1\u0083\u00d1\u0083.\"",
                "+",
                " #, python-format",
                "@@ -473,2 +476,6 @@ msgstr \"'%(value)s' \u00d0\u00b7\u00d0\u00b0\u00d0\u00b0\u00d0\u00b2\u00d0\u00b0\u00d0\u00bb True \u00d1\u008d\u00d1\u0081\u00d0\u00b2\u00d1\u008d\u00d0\u00bb False \u00d1\u0083\u00d1\u0082\u00d0\u00b3\u00d0\u00b0 \u00d0\u00b0\u00d0\u00b2\u00d0\u00b0\u00d1\u0085.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -645,5 +652,2 @@ msgstr \"\u00d0\u0091\u00d2\u00af\u00d1\u0085\u00d1\u008d\u00d0\u00bb \u00d1\u0082\u00d0\u00be\u00d0\u00be\u00d0\u00bd \u00d1\u0083\u00d1\u0082\u00d0\u00b3\u00d0\u00b0 \u00d0\u00be\u00d1\u0080\u00d1\u0083\u00d1\u0083\u00d0\u00bb\u00d0\u00bd\u00d0\u00b0 \u00d1\u0083\u00d1\u0083.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00d0\u00a2\u00d0\u00be\u00d0\u00be\u00d0\u00bd \u00d1\u0083\u00d1\u0082\u00d0\u00b3\u00d0\u00b0 \u00d0\u00be\u00d1\u0080\u00d1\u0083\u00d1\u0083\u00d0\u00bb\u00d0\u00bd\u00d0\u00b0 \u00d1\u0083\u00d1\u0083.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -660,2 +664,6 @@ msgstr \"\u00d2\u00ae\u00d1\u0080\u00d0\u00b3\u00d1\u008d\u00d0\u00bb\u00d0\u00b6\u00d0\u00b8\u00d0\u00bb\u00d1\u008d\u00d1\u0085 \u00d1\u0085\u00d1\u0083\u00d0\u00b3\u00d0\u00b0\u00d1\u0086\u00d0\u00b0\u00d0\u00b0\u00d0\u00b3 \u00d0\u00b7\u00d3\u00a9\u00d0\u00b2 \u00d0\u00be\u00d1\u0080\u00d1\u0083\u00d1\u0083\u00d0\u00bb\u00d0\u00bd\u00d0\u00b0 \u00d1\u0083\u00d1\u0083.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -1229,2 +1237,6 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00d0\u00a2\u00d0\u00b0\u00d0\u00bd\u00d0\u00b8\u00d0\u00b9 \u00d1\u0082\u00d0\u00be\u00d1\u0085\u00d0\u00b8\u00d1\u0080\u00d0\u00b3\u00d0\u00be\u00d0\u00be\u00d0\u00bd\u00d1\u008b \u00d1\u0084\u00d0\u00b0\u00d0\u00b9\u00d0\u00bb \u00d0\u00b4\u00d1\u008d\u00d1\u008d\u00d1\u0080 <a href=\\\"https://docs.djangoproject.com/en/\"",
                "+\"%(version)s/ref/settings/#debug\\\" target=\\\"_blank\\\" rel=\\\"noopener\"",
                "+\"\\\">DEBUG=TRUE</a> \u00d0\u00b3\u00d1\u008d\u00d0\u00b6 \u00d1\u0082\u00d0\u00be\u00d1\u0085\u00d0\u00b8\u00d1\u0080\u00d1\u0083\u00d1\u0083\u00d0\u00bb\u00d1\u0081\u00d0\u00b0\u00d0\u00bd \u00d0\u00bc\u00d3\u00a9\u00d0\u00bd URLs \u00d0\u00b4\u00d1\u008d\u00d1\u008d\u00d1\u0080 \u00d1\u0082\u00d0\u00be\u00d1\u0085\u00d0\u00b8\u00d1\u0080\u00d0\u00b3\u00d0\u00be\u00d0\u00be \u00d1\u0085\u00d0\u00b8\u00d0\u00b9\u00d0\u00b3\u00d1\u008d\u00d1\u008d\u00d0\u00b3\u00d2\u00af\u00d0\u00b9 \u00d1\u0083\u00d1\u0087\u00d1\u0080\u00d0\u00b0\u00d0\u00b0\u00d1\u0081 \"",
                "+\"\u00d1\u008d\u00d0\u00bd\u00d1\u008d \u00d1\u0085\u00d1\u0083\u00d1\u0083\u00d0\u00b4\u00d0\u00b0\u00d1\u0081\u00d1\u008b\u00d0\u00b3 \u00d1\u0085\u00d0\u00b0\u00d1\u0080\u00d0\u00b6 \u00d0\u00b1\u00d0\u00b0\u00d0\u00b9\u00d0\u00bd\u00d0\u00b0.\"",
                "@@ -1237,3 +1249,3 @@ msgstr \"\"",
                " msgid \"Tutorial: A Polling App\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u00a5\u00d0\u00b8\u00d1\u0087\u00d1\u008d\u00d1\u008d\u00d0\u00bb: \u00d0\u00a1\u00d0\u00b0\u00d0\u00bd\u00d0\u00b0\u00d0\u00bb \u00d0\u00b0\u00d1\u0081\u00d1\u0083\u00d1\u0083\u00d0\u00bb\u00d0\u00b3\u00d0\u00b0 App\"",
                "@@ -1243,3 +1255,3 @@ msgstr \"\u00d0\u0094\u00d0\u00b6\u00d0\u00b0\u00d0\u00bd\u00d0\u00b3\u00d0\u00be\u00d1\u0082\u00d0\u00be\u00d0\u00b9 \u00d0\u00b0\u00d0\u00b6\u00d0\u00b8\u00d0\u00bb\u00d0\u00bb\u00d0\u00b0\u00d0\u00b6 \u00d1\u008d\u00d1\u0085\u00d0\u00bb\u00d1\u008d\u00d1\u0085\"",
                " msgid \"Django Community\"",
                "-msgstr \"\"",
                "+msgstr \"Django \u00d0\u0091\u00d2\u00af\u00d0\u00bb\u00d0\u00b3\u00d1\u008d\u00d0\u00bc\"",
                "diff --git a/django/conf/locale/nb/LC_MESSAGES/django.mo b/django/conf/locale/nb/LC_MESSAGES/django.mo",
                "index 92a87f4124..376044aa63 100644",
                "Binary files a/django/conf/locale/nb/LC_MESSAGES/django.mo and b/django/conf/locale/nb/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/nb/LC_MESSAGES/django.po b/django/conf/locale/nb/LC_MESSAGES/django.po",
                "index 0fa0463692..23c7e1553d 100644",
                "--- a/django/conf/locale/nb/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/nb/LC_MESSAGES/django.po",
                "@@ -9,3 +9,3 @@",
                " # Jon <jon@kolonial.no>, 2014",
                "-# Jon <jon@kolonial.no>, 2017",
                "+# Jon <jon@kolonial.no>, 2017-2018",
                " # Jon <jon@kolonial.no>, 2013",
                "@@ -18,4 +18,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-27 12:38+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-30 11:29+0000\\n\"",
                " \"Last-Translator: Jon <jon@kolonial.no>\\n\"",
                "@@ -170,2 +170,5 @@ msgstr \"Georgisk\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabylsk\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -391,2 +394,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Oppgi et tall.\"",
                "+",
                " #, python-format",
                "@@ -468,2 +474,6 @@ msgstr \"Verdien '%(value)s' m\u00c3\u00a5 v\u00c3\u00a6re enten True eller False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s'-verdien m\u00c3\u00a5 v\u00c3\u00a6re enten True, False, eller None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -643,5 +653,2 @@ msgstr \"Oppgi et heltall.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Oppgi et tall.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -658,2 +665,6 @@ msgstr \"Oppgi en gyldig varighet.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Antall dager m\u00c3\u00a5 v\u00c3\u00a6re mellom {min_days} og {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/ne/LC_MESSAGES/django.mo b/django/conf/locale/ne/LC_MESSAGES/django.mo",
                "index 6f820e144c..fc25d6d4df 100644",
                "Binary files a/django/conf/locale/ne/LC_MESSAGES/django.mo and b/django/conf/locale/ne/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/ne/LC_MESSAGES/django.po b/django/conf/locale/ne/LC_MESSAGES/django.po",
                "index c990aee18d..f8cd93baaa 100644",
                "--- a/django/conf/locale/ne/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/ne/LC_MESSAGES/django.po",
                "@@ -11,4 +11,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-02-10 13:00+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-21 02:37+0000\\n\"",
                " \"Last-Translator: Sagar Chalise <chalisesagar@gmail.com>\\n\"",
                "@@ -383,2 +383,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00e0\u00a4\u00b8\u00e0\u00a4\u0082\u00e0\u00a4\u0096\u00e0\u00a5\u008d\u00e0\u00a4\u00af\u00e0\u00a4\u00be \u00e0\u00a4\u00b0\u00e0\u00a4\u00be\u00e0\u00a4\u0096\u00e0\u00a5\u008d\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00b9\u00e0\u00a5\u008b\u00e0\u00a4\u00b8 \u00e0\u00a5\u00a4\"",
                "+",
                " #, python-format",
                "@@ -408,2 +411,3 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"'%(extension)s' \u00e0\u00a4\u00ab\u00e0\u00a4\u00be\u00e0\u00a4\u0087\u00e0\u00a4\u00b2\u00e0\u00a4\u0095\u00e0\u00a5\u008b \u00e0\u00a4\u0085\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00ae\u00e0\u00a4\u00a4\u00e0\u00a4\u00bf \u00e0\u00a4\u009b\u00e0\u00a5\u0088\u00e0\u00a4\u00a8\u00e0\u00a5\u00a4 \u00e0\u00a4\u0085\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00ae\u00e0\u00a4\u00a4\u00e0\u00a4\u00bf \u00e0\u00a4\u00ad\u00e0\u00a4\u008f\u00e0\u00a4\u0095\u00e0\u00a4\u00be \u00e0\u00a4\u00ab\u00e0\u00a4\u00be\u00e0\u00a4\u0087\u00e0\u00a4\u00b2\u00e0\u00a4\u00b9\u00e0\u00a4\u00b0\u00e0\u00a5\u0082: '%(allowed_extensions)s'\"",
                "@@ -459,2 +463,6 @@ msgstr \"%(value)s' \u00e0\u00a4\u0095\u00e0\u00a5\u008b \u00e0\u00a4\u00ae\u00e0\u00a4\u00be\u00e0\u00a4\u00a8 True \u00e0\u00a4\u0085\u00e0\u00a4\u00a5\u00e0\u00a4\u00b5\u00e0\u00a4\u00be False \u00e0\u00a4\u00b9\u00e0\u00a5\u0081\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00aa\u00e0\u00a4\u00b0",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -621,5 +629,2 @@ msgstr \"\u00e0\u00a4\u00b8\u00e0\u00a4\u0082\u00e0\u00a4\u0096\u00e0\u00a5\u008d\u00e0\u00a4\u00af\u00e0\u00a4\u00be \u00e0\u00a4\u00b0\u00e0\u00a4\u00be\u00e0\u00a4\u0096\u00e0\u00a5\u008d\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00b9\u00e0\u00a5\u008b\u00e0\u00a4\u00b8 \u00e0\u00a5\u00a4\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00e0\u00a4\u00b8\u00e0\u00a4\u0082\u00e0\u00a4\u0096\u00e0\u00a5\u008d\u00e0\u00a4\u00af\u00e0\u00a4\u00be \u00e0\u00a4\u00b0\u00e0\u00a4\u00be\u00e0\u00a4\u0096\u00e0\u00a5\u008d\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00b9\u00e0\u00a5\u008b\u00e0\u00a4\u00b8 \u00e0\u00a5\u00a4\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -636,2 +641,6 @@ msgstr \"\u00e0\u00a4\u0089\u00e0\u00a4\u00aa\u00e0\u00a4\u00af\u00e0\u00a5\u0081\u00e0\u00a4\u0095\u00e0\u00a5\u008d\u00e0\u00a4\u00a4 \u00e0\u00a4\u0085\u00e0\u00a4\u00b5\u00e0\u00a4\u00a7\u00e0\u00a4\u00bf \u00e0\u00a4\u00b0\u00e0\u00a4\u00be\u00e0\u00a4\u0096\u00e0\u00a5\u008d\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00b9\u00e0\u00a5\u008b\u00e0\u00a4\u00b8 \u00e0\u00a5\u00a4\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\u00e0\u00a4\u00a6\u00e0\u00a4\u00bf\u00e0\u00a4\u00a8 \u00e0\u00a4\u0097\u00e0\u00a4\u00a8\u00e0\u00a5\u008d\u00e0\u00a4\u00a4\u00e0\u00a5\u0080 {min_days} \u00e0\u00a4\u00b0 {max_days} \u00e0\u00a4\u00ac\u00e0\u00a5\u0080\u00e0\u00a4\u009a\u00e0\u00a4\u00ae\u00e0\u00a4\u00be \u00e0\u00a4\u00b9\u00e0\u00a5\u0081\u00e0\u00a4\u00a8\u00e0\u00a5\u0081 \u00e0\u00a4\u00aa\u00e0\u00a4\u00b0\u00e0\u00a5\u008d\u00e0\u00a4\u009b \u00e0\u00a5\u00a4 \"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -1194,6 +1203,6 @@ msgstr \"\u00e0\u00a4\u009c\u00e0\u00a5\u008d\u00e0\u00a4\u00af\u00e0\u00a4\u00be\u00e0\u00a4\u0099\u00e0\u00a5\u008d\u00e0\u00a4\u0097\u00e0\u00a5\u008b \u00e0\u00a4\u00a6\u00e0\u00a4\u00b8\u00e0\u00a5\u008d\u00e0\u00a4\u00a4\u00e0\u00a4\u00be\u00e0\u00a4\u00b5\u00e0\u00a5\u0087\u00e0\u00a4\u009c \u00e0\u00a5\u00a4\"",
                " msgid \"Topics, references, &amp; how-to's\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00a4\u00b6\u00e0\u00a5\u0080\u00e0\u00a4\u00b0\u00e0\u00a5\u008d\u00e0\u00a4\u00b7\u00e0\u00a4\u0095,  \u00e0\u00a4\u00b8\u00e0\u00a4\u00a8\u00e0\u00a5\u008d\u00e0\u00a4\u00a6\u00e0\u00a4\u00b0\u00e0\u00a5\u008d\u00e0\u00a4\u00ad \u00e0\u00a4\u00a4\u00e0\u00a4\u00a5\u00e0\u00a4\u00be \u00e0\u00a4\u00a4\u00e0\u00a4\u00b0\u00e0\u00a4\u00bf\u00e0\u00a4\u0095\u00e0\u00a4\u00be\u00e0\u00a4\u00b9\u00e0\u00a4\u00b0\u00e0\u00a5\u0082\"",
                " msgid \"Tutorial: A Polling App\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00a4\u00ae\u00e0\u00a4\u00a4\u00e0\u00a4\u00a6\u00e0\u00a4\u00be\u00e0\u00a4\u00a8 \u00e0\u00a4\u008f\u00e0\u00a4\u00aa \u00e0\u00a4\u0089\u00e0\u00a4\u00a6\u00e0\u00a4\u00be\u00e0\u00a4\u00b9\u00e0\u00a4\u00b0\u00e0\u00a4\u00a3 \"",
                "@@ -1206,2 +1215,2 @@ msgstr \"\u00e0\u00a4\u009c\u00e0\u00a5\u008d\u00e0\u00a4\u00af\u00e0\u00a4\u00be\u00e0\u00a4\u0099\u00e0\u00a5\u008d\u00e0\u00a4\u0097\u00e0\u00a5\u008b \u00e0\u00a4\u00b8\u00e0\u00a4\u00ae\u00e0\u00a5\u0081\u00e0\u00a4\u00a6\u00e0\u00a4\u00be\u00e0\u00a4\u00af\"",
                " msgid \"Connect, get help, or contribute\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00a4\u00b8\u00e0\u00a4\u00b9\u00e0\u00a4\u00af\u00e0\u00a5\u008b\u00e0\u00a4\u0097 \u00e0\u00a4\u0085\u00e0\u00a4\u00a5\u00e0\u00a4\u00b5\u00e0\u00a4\u00be \u00e0\u00a4\u00af\u00e0\u00a5\u008b\u00e0\u00a4\u0097\u00e0\u00a4\u00a6\u00e0\u00a4\u00be\u00e0\u00a4\u00a8 \u00e0\u00a4\u0097\u00e0\u00a4\u00b0\u00e0\u00a5\u0080 \u00e0\u00a4\u009c\u00e0\u00a5\u008b\u00e0\u00a4\u00a1\u00e0\u00a4\u00bf\u00e0\u00a4\u00a8\u00e0\u00a5\u0081 \u00e0\u00a4\u00b9\u00e0\u00a5\u008b\u00e0\u00a4\u00b8\"",
                "diff --git a/django/conf/locale/pl/LC_MESSAGES/django.mo b/django/conf/locale/pl/LC_MESSAGES/django.mo",
                "index cfcc4a3c85..29b40b59f6 100644",
                "Binary files a/django/conf/locale/pl/LC_MESSAGES/django.mo and b/django/conf/locale/pl/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/pl/LC_MESSAGES/django.po b/django/conf/locale/pl/LC_MESSAGES/django.po",
                "index bc674e4554..e78cca6fcc 100644",
                "--- a/django/conf/locale/pl/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/pl/LC_MESSAGES/django.po",
                "@@ -16,3 +16,3 @@",
                " # \u00c5\u0081ukasz Rekucki (lqc) <lrekucki@gmail.com>, 2011",
                "-# m_aciek <maciej.olko@gmail.com>, 2016-2017",
                "+# m_aciek <maciej.olko@gmail.com>, 2016-2018",
                " # m_aciek <maciej.olko@gmail.com>, 2015",
                "@@ -32,4 +32,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-02 15:59+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 23:43+0000\\n\"",
                " \"Last-Translator: m_aciek <maciej.olko@gmail.com>\\n\"",
                "@@ -422,2 +422,5 @@ msgstr[3] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Wpisz liczb\u00c4\u0099.\"",
                "+",
                " #, python-format",
                "@@ -513,2 +516,6 @@ msgstr \"warto\u00c5\u009b\u00c4\u0087 '%(value)s' musi by\u00c4\u0087 True lub False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"Warto\u00c5\u009b\u00c4\u0087 \u00e2\u0080\u009e%(value)s\u00e2\u0080\u009d musi wynosi\u00c4\u0087 True, False lub None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -689,5 +696,2 @@ msgstr \"Wpisz liczb\u00c4\u0099 ca\u00c5\u0082kowit\u00c4\u0085.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Wpisz liczb\u00c4\u0099.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -704,2 +708,6 @@ msgstr \"Wpisz poprawny czas trwania.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Liczba dni musi wynosi\u00c4\u0087 mi\u00c4\u0099dzy {min_days} a {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/pt_BR/LC_MESSAGES/django.mo b/django/conf/locale/pt_BR/LC_MESSAGES/django.mo",
                "index 4a4a42f4ad..851c672927 100644",
                "Binary files a/django/conf/locale/pt_BR/LC_MESSAGES/django.mo and b/django/conf/locale/pt_BR/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/pt_BR/LC_MESSAGES/django.po b/django/conf/locale/pt_BR/LC_MESSAGES/django.po",
                "index 34b546a6ee..01569ec5d5 100644",
                "--- a/django/conf/locale/pt_BR/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/pt_BR/LC_MESSAGES/django.po",
                "@@ -20,2 +20,3 @@",
                " # Luiz Boaretto <lboaretto@gmail.com>, 2017",
                "+# Marcelo Moro Brondani <mbrondani@inf.ufsm.br>, 2018",
                " # Sandro <sandrossv@hotmail.com>, 2011",
                "@@ -24,2 +25,3 @@",
                " # Wiliam Souza <wiliamsouza83@gmail.com>, 2015",
                "+# Xico Petry <xico.petry@gmail.com>, 2018",
                " msgid \"\"",
                "@@ -28,5 +30,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-22 16:27+0000\\n\"",
                "-\"Last-Translator: Camilo B. Moreira <camilo.moreira@fatec.sp.gov.br>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-19 17:55+0000\\n\"",
                "+\"Last-Translator: Xico Petry <xico.petry@gmail.com>\\n\"",
                " \"Language-Team: Portuguese (Brazil) (http://www.transifex.com/django/django/\"",
                "@@ -180,2 +182,5 @@ msgstr \"Georgiano\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Cabila\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -402,2 +407,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Informe um n\u00c3\u00bamero.\"",
                "+",
                " #, python-format",
                "@@ -483,2 +491,6 @@ msgstr \"'%(value)s' valor deve ser True ou False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"O valor '%(value)s' deve ser True, False ou Nenhum.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -659,5 +671,2 @@ msgstr \"Informe um n\u00c3\u00bamero inteiro.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Informe um n\u00c3\u00bamero.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -674,2 +683,6 @@ msgstr \"Insira uma dura\u00c3\u00a7\u00c3\u00a3o v\u00c3\u00a1lida.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"O n\u00c3\u00bamero de dias deve ser entre {min_days} e {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -1146,2 +1159,7 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Se voc\u00c3\u00aa estiver usando a tag <meta name=\\\"referrer\\\" content=\\\"no-referrer\"",
                "+\"\\\"> ou incluindo o cabe\u00c3\u00a7alho \\\"Referrer-Policy: no-referrer\\\", remova-os. A \"",
                "+\"prote\u00c3\u00a7\u00c3\u00a3o contra CSRF requer que o cabe\u00c3\u00a7alho 'Referer' fa\u00c3\u00a7a uma verifica\u00c3\u00a7\u00c3\u00a3o \"",
                "+\"rigorosa do referenciador. Se voc\u00c3\u00aa estiver preocupado com a privacidade, use \"",
                "+\"alternativas  <a rel=\\\"noreferrer\\\" ...> para links para sites de terceiros.\"",
                "diff --git a/django/conf/locale/ro/LC_MESSAGES/django.mo b/django/conf/locale/ro/LC_MESSAGES/django.mo",
                "index 9c06471ab5..0b0242abb5 100644",
                "Binary files a/django/conf/locale/ro/LC_MESSAGES/django.mo and b/django/conf/locale/ro/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/ro/LC_MESSAGES/django.po b/django/conf/locale/ro/LC_MESSAGES/django.po",
                "index f43332c099..dbc03a696c 100644",
                "--- a/django/conf/locale/ro/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/ro/LC_MESSAGES/django.po",
                "@@ -16,4 +16,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-17 09:13+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 05:42+0000\\n\"",
                " \"Last-Translator: Bogdan Mateescu\\n\"",
                "@@ -170,3 +170,3 @@ msgstr \"Georgian\u00c4\u0083\"",
                " msgid \"Kabyle\"",
                "-msgstr \"\"",
                "+msgstr \"Kabyle\"",
                "@@ -383,4 +383,4 @@ msgstr[1] \"\"",
                " msgstr[2] \"\"",
                "-\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 aceast\u00c4\u0083 valoare are cel pu\u00c8\u009bin %(limit_value)d caractere (are \"",
                "-\"%(show_value)d).\"",
                "+\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 aceast\u00c4\u0083 valoare are cel pu\u00c8\u009bin %(limit_value)d de caractere \"",
                "+\"(are %(show_value)d).\"",
                "@@ -400,4 +400,7 @@ msgstr[1] \"\"",
                " msgstr[2] \"\"",
                "-\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 aceast\u00c4\u0083 valoare are cel mult %(limit_value)d caractere (are \"",
                "-\"%(show_value)d).\"",
                "+\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 aceast\u00c4\u0083 valoare are cel mult %(limit_value)d de caractere \"",
                "+\"(are %(show_value)d).\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Introduce\u00c5\u00a3i un num\u00c4\u0083r.\"",
                "@@ -408,3 +411,3 @@ msgstr[0] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu este mai mult de %(max)s cifr\u00c4\u0083 \u00c3\u00aen total.\"",
                " msgstr[1] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s cifre \u00c3\u00aen total.\"",
                "-msgstr[2] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s cifre \u00c3\u00aen total.\"",
                "+msgstr[2] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s de cifre \u00c3\u00aen total.\"",
                "@@ -415,3 +418,3 @@ msgstr[0] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu este mai mult de %(max)s zecimal\u00c4\u0083 \u00c3\u00aen total.\"",
                " msgstr[1] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s zecimale \u00c3\u00aen total.\"",
                "-msgstr[2] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s zecimale \u00c3\u00aen total.\"",
                "+msgstr[2] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s de zecimale \u00c3\u00aen total.\"",
                "@@ -427,3 +430,4 @@ msgstr[1] \"\"",
                " msgstr[2] \"\"",
                "-\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s cifre \u00c3\u00aenainte de punctul zecimal.\"",
                "+\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s de cifre \u00c3\u00aenainte de punctul \"",
                "+\"zecimal.\"",
                "@@ -438,3 +442,3 @@ msgstr \"\"",
                " msgid \"Null characters are not allowed.\"",
                "-msgstr \"\"",
                "+msgstr \"Caracterele Null nu sunt permise.\"",
                "@@ -488,2 +492,6 @@ msgstr \"'%(value)s' trebuie s\u00c4\u0083 fie True sau False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' valoarea trebuie s\u00c4\u0083 fie True, False, sau None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -662,5 +670,2 @@ msgstr \"Introduce\u00c5\u00a3i un num\u00c4\u0083r \u00c3\u00aentreg.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Introduce\u00c5\u00a3i un num\u00c4\u0083r.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -677,2 +682,6 @@ msgstr \"Introduce\u00c8\u009bi o durat\u00c4\u0083 valid\u00c4\u0083.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Num\u00c4\u0083rul de zile trebuie s\u00c4\u0083 fie cuprins \u00c3\u00aentre {min_days} \u00c8\u0099i {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -691,9 +700,9 @@ msgid_plural \"\"",
                " msgstr[0] \"\"",
                "-\"Verifica\u00c8\u009bi c\u00c4\u0083 numele fi\u00c8\u0099ierului are cel mult %(max)d caractere (are \"",
                "+\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 numele fi\u00c8\u0099ierului are cel mult %(max)d caracter (are \"",
                " \"%(length)d).\"",
                " msgstr[1] \"\"",
                "-\"Verifica\u00c8\u009bi c\u00c4\u0083 numele fi\u00c8\u0099ierului are cel mult %(max)d caractere (are \"",
                "+\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 numele fi\u00c8\u0099ierului are cel mult %(max)d caractere (are \"",
                " \"%(length)d).\"",
                " msgstr[2] \"\"",
                "-\"Verifica\u00c8\u009bi c\u00c4\u0083 numele fi\u00c8\u0099ierului are cel mult %(max)d caractere (are \"",
                "+\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 numele fi\u00c8\u0099ierului are cel mult %(max)d de caractere (are \"",
                " \"%(length)d).\"",
                "@@ -741,3 +750,3 @@ msgstr[0] \"Trimite\u00c8\u009bi maxim %d formular.\"",
                " msgstr[1] \"Trimite\u00c8\u009bi maxim %d formulare.\"",
                "-msgstr[2] \"Trimite\u00c8\u009bi maxim %d formulare.\"",
                "+msgstr[2] \"Trimite\u00c8\u009bi maxim %d de formulare.\"",
                "@@ -748,3 +757,3 @@ msgstr[0] \"Trimite\u00c8\u009bi minim %d formular.\"",
                " msgstr[1] \"Trimite\u00c8\u009bi minim %d formulare.\"",
                "-msgstr[2] \"Trimite\u00c8\u009bi minim %d formulare.\"",
                "+msgstr[2] \"Trimite\u00c8\u009bi minim %d de formulare.\"",
                "@@ -776,3 +785,3 @@ msgstr \"Corecta\u00c5\u00a3i valorile duplicate de mai jos.\"",
                " msgid \"The inline value did not match the parent instance.\"",
                "-msgstr \"\"",
                "+msgstr \"Valoarea \u00c3\u00aen linie nu s-a potrivit cu instan\u00c8\u009ba p\u00c4\u0083rinte.\"",
                "@@ -819,5 +828,5 @@ msgid \"%(size)d byte\"",
                " msgid_plural \"%(size)d bytes\"",
                "-msgstr[0] \"%(size)d byte\"",
                "-msgstr[1] \"%(size)d bytes\"",
                "-msgstr[2] \"%(size)d bytes\"",
                "+msgstr[0] \"%(size)d octet\"",
                "+msgstr[1] \"%(size)d octe\u00c5\u00a3i\"",
                "+msgstr[2] \"%(size)d de octe\u00c5\u00a3i\"",
                "@@ -1091,3 +1100,3 @@ msgstr[0] \"%d an\"",
                " msgstr[1] \"%d ani\"",
                "-msgstr[2] \"%d ani\"",
                "+msgstr[2] \"%d de ani\"",
                "@@ -1098,3 +1107,3 @@ msgstr[0] \"%d lun\u00c4\u0083\"",
                " msgstr[1] \"%d luni\"",
                "-msgstr[2] \"%d luni\"",
                "+msgstr[2] \"%d de luni\"",
                "@@ -1105,3 +1114,3 @@ msgstr[0] \"%d s\u00c4\u0083pt\u00c4\u0083m\u00c3\u00a2n\u00c4\u0083\"",
                " msgstr[1] \"%d s\u00c4\u0083pt\u00c4\u0083m\u00c3\u00a2ni\"",
                "-msgstr[2] \"%d s\u00c4\u0083pt\u00c4\u0083m\u00c3\u00a2ni\"",
                "+msgstr[2] \"%d de s\u00c4\u0083pt\u00c4\u0083m\u00c3\u00a2ni\"",
                "@@ -1112,3 +1121,3 @@ msgstr[0] \"%d zi\"",
                " msgstr[1] \"%d zile\"",
                "-msgstr[2] \"%d zile\"",
                "+msgstr[2] \"%d de zile\"",
                "@@ -1119,3 +1128,3 @@ msgstr[0] \"%d or\u00c4\u0083\"",
                " msgstr[1] \"%d ore\"",
                "-msgstr[2] \"%d ore\"",
                "+msgstr[2] \"%d de ore\"",
                "@@ -1124,5 +1133,5 @@ msgid \"%d minute\"",
                " msgid_plural \"%d minutes\"",
                "-msgstr[0] \"%d minut\u00c4\u0083\"",
                "+msgstr[0] \"%d minut\"",
                " msgstr[1] \"%d minute\"",
                "-msgstr[2] \"%d minute\"",
                "+msgstr[2] \"%d de minute\"",
                "@@ -1164,2 +1173,8 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Dac\u00c4\u0083 utiliza\u00c8\u009bi eticheta <meta name=\\\"referrer\\\" content=\\\"no-referrer\\\"> sau \"",
                "+\"include\u00c8\u009bi antetul 'Referrer-Policy: no-referrer', te rug\u00c4\u0083m sa \u00c3\u00ael elimini. \"",
                "+\"Protec\u00c8\u009bia CSRF necesit\u00c4\u0083 antetul 'Referer' pentru a face verificarea strict\u00c4\u0083 \"",
                "+\"a 'referer'. Dac\u00c4\u0083 sunte\u00c8\u009bi \u00c3\u00aengrijorat de confiden\u00c8\u009bialitate, utiliza\u00c8\u009bi \"",
                "+\"alternative ca <a rel=\\\"noreferrer\\\" ...> pentru linkuri c\u00c4\u0083tre site-uri \"",
                "+\"ter\u00c8\u009be.\"",
                "@@ -1189,3 +1204,3 @@ msgstr \"Niciun an specificat\"",
                " msgid \"Date out of range\"",
                "-msgstr \"\"",
                "+msgstr \"Dat\u00c4\u0083 \u00c3\u00aen afara intervalului\"",
                "@@ -1244,3 +1259,3 @@ msgstr \"Index pentru %(directory)s\"",
                " msgid \"Django: the Web framework for perfectionists with deadlines.\"",
                "-msgstr \"\"",
                "+msgstr \"Django: Framework-ul web pentru perfec\u00c8\u009bioni\u00c8\u0099ti cu termene limit\u00c4\u0083.\"",
                "@@ -1265,2 +1280,5 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Vede\u00c8\u009bi aceast\u00c4\u0083 pagin\u00c4\u0083 deoarece <a href=\\\"https://docs.djangoproject.com/en/\"",
                "+\"%(version)s/ref/settings/#debug\\\" target=\\\"_blank\\\" rel=\\\"noopener\"",
                "+\"\\\">DEBUG=True</a> este \u00c3\u00aen fi\u00c8\u0099ierul de set\u00c4\u0083ri \u00c8\u0099i nu a\u00c8\u009bi configurat niciun URL.\"",
                "@@ -1270,3 +1288,3 @@ msgstr \"Documenta\u00c8\u009bia Django\"",
                " msgid \"Topics, references, &amp; how-to's\"",
                "-msgstr \"\"",
                "+msgstr \"Subiecte, referin\u00c5\u00a3e, &amp; cum s\u00c4\u0083\"",
                "@@ -1276,3 +1294,3 @@ msgstr \"Tutorial: O aplica\u00c8\u009bie de votare\"",
                " msgid \"Get started with Django\"",
                "-msgstr \"\"",
                "+msgstr \"\u00c3\u008encepe\u00c8\u009bi cu Django\"",
                "diff --git a/django/conf/locale/ru/LC_MESSAGES/django.mo b/django/conf/locale/ru/LC_MESSAGES/django.mo",
                "index 604202d90c..a681d9e843 100644",
                "Binary files a/django/conf/locale/ru/LC_MESSAGES/django.mo and b/django/conf/locale/ru/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/ru/LC_MESSAGES/django.po b/django/conf/locale/ru/LC_MESSAGES/django.po",
                "index 7a2563a925..ba5c81ba93 100644",
                "--- a/django/conf/locale/ru/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/ru/LC_MESSAGES/django.po",
                "@@ -8,3 +8,3 @@",
                " # eigrad <andrew@ei-grad.ru>, 2012",
                "-# Eugene MechanisM <eugene@mechanism.pro>, 2013",
                "+# Eugene <eugene.mechanism@gmail.com>, 2013",
                " # eXtractor <evg.kirov@gmail.com>, 2015",
                "@@ -16,5 +16,5 @@",
                " # Nikolay Korotkiy <sikmir@gmail.com>, 2018",
                "-# Vasiliy Anikin <anikin.vasya@gmail.com>, 2017",
                "+# \u00d0\u0092\u00d0\u00b0\u00d1\u0081\u00d1\u008f \u00d0\u0090\u00d0\u00bd\u00d0\u00b8\u00d0\u00ba\u00d0\u00b8\u00d0\u00bd <anikin.vasya@gmail.com>, 2017",
                " # \u00d0\u0090\u00d0\u00bb\u00d0\u00b5\u00d0\u00ba\u00d1\u0081\u00d0\u00b5\u00d0\u00b9 \u00d0\u0091\u00d0\u00be\u00d1\u0080\u00d0\u00b8\u00d1\u0081\u00d0\u00ba\u00d0\u00b8\u00d0\u00bd <sun.void@gmail.com>, 2013-2017",
                "-# \u00d0\u0094\u00d0\u00bc\u00d0\u00b8\u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00b9 \u00d0\u00a8\u00d0\u00b0\u00d1\u0082\u00d0\u00b5\u00d1\u0080\u00d0\u00b0 <mr.bobsans@gmail.com>, 2016",
                "+# \u00d0\u0094\u00d0\u00bc\u00d0\u00b8\u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00b9 \u00d0\u00a8\u00d0\u00b0\u00d1\u0082\u00d0\u00b5\u00d1\u0080\u00d0\u00b0 <mr.bobsans@gmail.com>, 2016,2018",
                " msgid \"\"",
                "@@ -23,5 +23,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-13 10:40+0000\\n\"",
                "-\"Last-Translator: Nikolay Korotkiy <sikmir@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-23 14:39+0000\\n\"",
                "+\"Last-Translator: SeryiMysh <vital@dorokhin.kz>\\n\"",
                " \"Language-Team: Russian (http://www.transifex.com/django/django/language/\"",
                "@@ -415,2 +415,5 @@ msgstr[3] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d1\u0087\u00d0\u00b8\u00d1\u0081\u00d0\u00bb\u00d0\u00be.\"",
                "+",
                " #, python-format",
                "@@ -501,2 +504,6 @@ msgstr \"\u00d0\u0097\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00b8\u00d0\u00b5 '%(value)s' \u00d0\u00b4\u00d0\u00be\u00d0\u00bb\u00d0\u00b6\u00d0\u00bd\u00d0\u00be \u00d0\u00b1\u00d1\u008b\u00d1\u0082\u00d1\u008c True \u00d0\u00b8\u00d0\u00bb\u00d0\u00b8 False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\u00d0\u0097\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00b8\u00d0\u00b5 '%(value)s' \u00d0\u00b4\u00d0\u00be\u00d0\u00bb\u00d0\u00b6\u00d0\u00bd\u00d0\u00be \u00d0\u00b1\u00d1\u008b\u00d1\u0082\u00d1\u008c True, False \u00d0\u00b8\u00d0\u00bb\u00d0\u00b8 None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -679,5 +686,2 @@ msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d1\u0086\u00d0\u00b5\u00d0\u00bb\u00d0\u00be\u00d0\u00b5 \u00d1\u0087\u00d0\u00b8\u00d1\u0081\u00d0\u00bb\u00d0\u00be.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d1\u0087\u00d0\u00b8\u00d1\u0081\u00d0\u00bb\u00d0\u00be.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -694,2 +698,6 @@ msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00bd\u00d1\u0083\u00d1\u008e \u00d0\u00bf\u00d1\u0080\u00d0\u00be\u00d0\u00b4\u00d0\u00be\u00d0\u00bb\u00d0\u00b6\u00d0\u00b8\u00d1\u0082\u00d0\u00b5\u00d0\u00bb\u00d1\u008c\u00d0\u00bd\u00d0\u00be\u00d1\u0081\u00d1\u0082\u00d1\u008c.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\u00d0\u009a\u00d0\u00be\u00d0\u00bb\u00d0\u00b8\u00d1\u0087\u00d0\u00b5\u00d1\u0081\u00d1\u0082\u00d0\u00b2\u00d0\u00be \u00d0\u00b4\u00d0\u00bd\u00d0\u00b5\u00d0\u00b9 \u00d0\u00b4\u00d0\u00be\u00d0\u00bb\u00d0\u00b6\u00d0\u00bd\u00d0\u00be \u00d0\u00b1\u00d1\u008b\u00d1\u0082\u00d1\u008c \u00d0\u00b2 \u00d0\u00b4\u00d0\u00b8\u00d0\u00b0\u00d0\u00bf\u00d0\u00b0\u00d0\u00b7\u00d0\u00be\u00d0\u00bd\u00d0\u00b5 \u00d0\u00be\u00d1\u0082 {min_days} \u00d0\u00b4\u00d0\u00be {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/sq/LC_MESSAGES/django.mo b/django/conf/locale/sq/LC_MESSAGES/django.mo",
                "index ec510342b3..75cf0547bd 100644",
                "Binary files a/django/conf/locale/sq/LC_MESSAGES/django.mo and b/django/conf/locale/sq/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/sq/LC_MESSAGES/django.po b/django/conf/locale/sq/LC_MESSAGES/django.po",
                "index a93ad3d85d..c73db58315 100644",
                "--- a/django/conf/locale/sq/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/sq/LC_MESSAGES/django.po",
                "@@ -4,3 +4,3 @@",
                " # Besnik <besnik@programeshqip.org>, 2011-2014",
                "-# Besnik <besnik@programeshqip.org>, 2015-2017",
                "+# Besnik <besnik@programeshqip.org>, 2015-2018",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "@@ -10,4 +10,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-29 22:51+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 09:14+0000\\n\"",
                " \"Last-Translator: Besnik <besnik@programeshqip.org>\\n\"",
                "@@ -162,2 +162,5 @@ msgstr \"Gjeorgjiane\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabilase\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -384,2 +387,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Jepni nj\u00c3\u00ab num\u00c3\u00abr.\"",
                "+",
                " #, python-format",
                "@@ -464,2 +470,6 @@ msgstr \"Vlera '%(value)s' duhet t\u00c3\u00ab jet\u00c3\u00ab True ose False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"Vlera p\u00c3\u00abr '%(value)s' duhet t\u00c3\u00ab jet\u00c3\u00ab ose True, ose False, ose None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -640,5 +650,2 @@ msgstr \"Jepni nj\u00c3\u00ab num\u00c3\u00abr t\u00c3\u00ab t\u00c3\u00abr\u00c3\u00ab.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Jepni nj\u00c3\u00ab num\u00c3\u00abr.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -655,2 +662,6 @@ msgstr \"Jepni nj\u00c3\u00ab koh\u00c3\u00abzgjatje t\u00c3\u00ab vlefshme.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Numri i dit\u00c3\u00abve duhet t\u00c3\u00ab jet\u00c3\u00ab mes {min_days} dhe {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -1219,3 +1230,3 @@ msgstr \"Tregues i %(directory)s\"",
                " msgid \"Django: the Web framework for perfectionists with deadlines.\"",
                "-msgstr \"\"",
                "+msgstr \"Django: platforma Web p\u00c3\u00abr perfeksionist\u00c3\u00ab me afate.\"",
                "diff --git a/django/conf/locale/sr/LC_MESSAGES/django.mo b/django/conf/locale/sr/LC_MESSAGES/django.mo",
                "index 1b736db75f..467823bb88 100644",
                "Binary files a/django/conf/locale/sr/LC_MESSAGES/django.mo and b/django/conf/locale/sr/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/sr/LC_MESSAGES/django.po b/django/conf/locale/sr/LC_MESSAGES/django.po",
                "index d596075dcb..5f426af950 100644",
                "--- a/django/conf/locale/sr/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/sr/LC_MESSAGES/django.po",
                "@@ -10,4 +10,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-30 10:00+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 20:03+0000\\n\"",
                " \"Last-Translator: Branko Kokanovic <branko@kokanovic.org>\\n\"",
                "@@ -394,2 +394,5 @@ msgstr[2] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00d0\u00a3\u00d0\u00bd\u00d0\u00b5\u00d1\u0081\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d0\u00b1\u00d1\u0080\u00d0\u00be\u00d1\u0098.\"",
                "+",
                " #, python-format",
                "@@ -476,2 +479,6 @@ msgstr \"\u00d0\u0092\u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00bd\u00d0\u00be\u00d1\u0081\u00d1\u0082 '%(value)s' \u00d0\u00bc\u00d0\u00be\u00d1\u0080\u00d0\u00b0 \u00d0\u00b1\u00d0\u00b8\u00d1\u0082\u00d0\u00b8 \u00d0\u00b8\u00d0\u00bb\u00d0\u00b8 True \u00d0\u00b8\u00d0\u00bb\u00d0\u00b8 False.",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' \u00d0\u00b2\u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00bd\u00d0\u00be\u00d1\u0081\u00d1\u0082 \u00d0\u00bc\u00d0\u00be\u00d1\u0080\u00d0\u00b0 \u00d0\u00b1\u00d0\u00b8\u00d1\u0082\u00d0\u00b8 \u00d0\u00b8\u00d0\u00bb\u00d0\u00b8 True, False, \u00d0\u00b8\u00d0\u00bb\u00d0\u00b8 None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -652,5 +659,2 @@ msgstr \"\u00d0\u00a3\u00d0\u00bd\u00d0\u00b5\u00d1\u0081\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d1\u0086\u00d0\u00b5\u00d0\u00be \u00d0\u00b1\u00d1\u0080\u00d0\u00be\u00d1\u0098.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00d0\u00a3\u00d0\u00bd\u00d0\u00b5\u00d1\u0081\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d0\u00b1\u00d1\u0080\u00d0\u00be\u00d1\u0098.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -667,2 +671,6 @@ msgstr \"\u00d0\u00a3\u00d0\u00bd\u00d0\u00b5\u00d1\u0081\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d0\u00b8\u00d1\u0081\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d0\u00b0\u00d0\u00bd \u00d0\u00b2\u00d1\u0080\u00d0\u00b5\u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0081\u00d0\u00ba\u00d0\u00b8 \u00d0\u00b8\u00d0\u00bd\u00d1\u0082\u00d0\u00b5\u00d1\u0080\u00d0\u00b2\u00d0\u00b0\u00d0\u00bb.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\u00d0\u0091\u00d1\u0080\u00d0\u00be\u00d1\u0098 \u00d0\u00b4\u00d0\u00b0\u00d0\u00bd\u00d0\u00b0 \u00d0\u00bc\u00d0\u00be\u00d1\u0080\u00d0\u00b0 \u00d0\u00b1\u00d0\u00b8\u00d1\u0082\u00d0\u00b8 \u00d0\u00b8\u00d0\u00b7\u00d0\u00bc\u00d0\u00b5\u00d1\u0092\u00d1\u0083 {min_days} \u00d0\u00b8 {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/th/LC_MESSAGES/django.mo b/django/conf/locale/th/LC_MESSAGES/django.mo",
                "index 9de95da23f..49dc53ad55 100644",
                "Binary files a/django/conf/locale/th/LC_MESSAGES/django.mo and b/django/conf/locale/th/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/th/LC_MESSAGES/django.po b/django/conf/locale/th/LC_MESSAGES/django.po",
                "index 8d9ab3d7e3..174759549c 100644",
                "--- a/django/conf/locale/th/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/th/LC_MESSAGES/django.po",
                "@@ -5,3 +5,3 @@",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "-# Kowit Charoenratchatabhan <kowit.s.c@gmail.com>, 2014",
                "+# Kowit Charoenratchatabhan <kowit.s.c@gmail.com>, 2014,2018",
                " # Naowal Siripatana <naowalzaza@gmail.com>, 2017",
                "@@ -15,4 +15,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 01:13+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 00:21+0000\\n\"",
                " \"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "@@ -166,2 +166,5 @@ msgstr \"\u00e0\u00b8\u0088\u00e0\u00b8\u00ad\u00e0\u00b8\u00a3\u00e0\u00b9\u008c\u00e0\u00b9\u0080\u00e0\u00b8\u0088\u00e0\u00b8\u00b5\u00e0\u00b8\u00a2\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -290,3 +293,3 @@ msgstr \"\u00e0\u00b8\u0088\u00e0\u00b8\u00b5\u00e0\u00b8\u0099\u00e0\u00b8\u0095\u00e0\u00b8\u00b1\u00e0\u00b8\u00a7\u00e0\u00b9\u0080\u00e0\u00b8\u0095\u00e0\u00b9\u0087\u00e0\u00b8\u00a1\"",
                " msgid \"Messages\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b8\u0082\u00e0\u00b9\u0089\u00e0\u00b8\u00ad\u00e0\u00b8\u0084\u00e0\u00b8\u00a7\u00e0\u00b8\u00b2\u00e0\u00b8\u00a1\"",
                "@@ -302,6 +305,6 @@ msgstr \"\"",
                " msgid \"That page number is not an integer\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b8\u00ab\u00e0\u00b8\u00a1\u00e0\u00b8\u00b2\u00e0\u00b8\u00a2\u00e0\u00b9\u0080\u00e0\u00b8\u00a5\u00e0\u00b8\u0082\u00e0\u00b8\u00ab\u00e0\u00b8\u0099\u00e0\u00b9\u0089\u00e0\u00b8\u00b2\u00e0\u00b8\u0094\u00e0\u00b8\u00b1\u00e0\u00b8\u0087\u00e0\u00b8\u0081\u00e0\u00b8\u00a5\u00e0\u00b9\u0088\u00e0\u00b8\u00b2\u00e0\u00b8\u00a7\u00e0\u00b9\u0084\u00e0\u00b8\u00a1\u00e0\u00b9\u0088\u00e0\u00b9\u0083\u00e0\u00b8\u008a\u00e0\u00b9\u0088\u00e0\u00b8\u0088\u00e0\u00b8\u00b3\u00e0\u00b8\u0099\u00e0\u00b8\u00a7\u00e0\u00b8\u0099\u00e0\u00b9\u0080\u00e0\u00b8\u0095\u00e0\u00b9\u0087\u00e0\u00b8\u00a1\"",
                " msgid \"That page number is less than 1\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b8\u00ab\u00e0\u00b8\u00a1\u00e0\u00b8\u00b2\u00e0\u00b8\u00a2\u00e0\u00b9\u0080\u00e0\u00b8\u00a5\u00e0\u00b8\u0082\u00e0\u00b8\u00ab\u00e0\u00b8\u0099\u00e0\u00b9\u0089\u00e0\u00b8\u00b2\u00e0\u00b8\u0094\u00e0\u00b8\u00b1\u00e0\u00b8\u0087\u00e0\u00b8\u0081\u00e0\u00b8\u00a5\u00e0\u00b9\u0088\u00e0\u00b8\u00b2\u00e0\u00b8\u00a7\u00e0\u00b8\u00a1\u00e0\u00b8\u00b5\u00e0\u00b8\u0084\u00e0\u00b9\u0088\u00e0\u00b8\u00b2\u00e0\u00b8\u0099\u00e0\u00b9\u0089\u00e0\u00b8\u00ad\u00e0\u00b8\u00a2\u00e0\u00b8\u0081\u00e0\u00b8\u00a7\u00e0\u00b9\u0088\u00e0\u00b8\u00b2 1\"",
                "@@ -374,2 +377,5 @@ msgstr[0] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00e0\u00b8\u0081\u00e0\u00b8\u00a3\u00e0\u00b8\u00ad\u00e0\u00b8\u0081\u00e0\u00b8\u00ab\u00e0\u00b8\u00a1\u00e0\u00b8\u00b2\u00e0\u00b8\u00a2\u00e0\u00b9\u0080\u00e0\u00b8\u00a5\u00e0\u00b8\u0082\"",
                "+",
                " #, python-format",
                "@@ -437,3 +443,3 @@ msgstr \"\u00e0\u00b8\u0088\u00e0\u00b8\u00b3\u00e0\u00b8\u0099\u00e0\u00b8\u00a7\u00e0\u00b8\u0099\u00e0\u00b9\u0080\u00e0\u00b8\u0095\u00e0\u00b9\u0087\u00e0\u00b8\u00a1\"",
                " msgid \"'%(value)s' value must be an integer.\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b8\u0084\u00e0\u00b9\u0088\u00e0\u00b8\u00b2\u00e0\u00b8\u0082\u00e0\u00b8\u00ad\u00e0\u00b8\u0087 %(value)s \u00e0\u00b8\u0095\u00e0\u00b9\u0089\u00e0\u00b8\u00ad\u00e0\u00b8\u0087\u00e0\u00b9\u0080\u00e0\u00b8\u009b\u00e0\u00b9\u0087\u00e0\u00b8\u0099 integer\"",
                "@@ -444,2 +450,6 @@ msgstr \"\u00e0\u00b8\u0088\u00e0\u00b8\u00b3\u00e0\u00b8\u0099\u00e0\u00b8\u00a7\u00e0\u00b8\u0099\u00e0\u00b9\u0080\u00e0\u00b8\u0095\u00e0\u00b9\u0087\u00e0\u00b8\u00a1 (8 byte)\"",
                " msgid \"'%(value)s' value must be either True or False.\"",
                "+msgstr \"\u00e0\u00b8\u0084\u00e0\u00b9\u0088\u00e0\u00b8\u00b2\u00e0\u00b8\u0082\u00e0\u00b8\u00ad\u00e0\u00b8\u0087 %(value)s \u00e0\u00b8\u0095\u00e0\u00b9\u0089\u00e0\u00b8\u00ad\u00e0\u00b8\u0087\u00e0\u00b9\u0080\u00e0\u00b8\u009b\u00e0\u00b9\u0087\u00e0\u00b8\u0099 True \u00e0\u00b8\u00ab\u00e0\u00b8\u00a3\u00e0\u00b8\u00b7\u00e0\u00b8\u00ad False \u00e0\u00b8\u00ad\u00e0\u00b8\u00a2\u00e0\u00b9\u0088\u00e0\u00b8\u00b2\u00e0\u00b8\u0087\u00e0\u00b9\u0083\u00e0\u00b8\u0094\u00e0\u00b8\u00ad\u00e0\u00b8\u00a2\u00e0\u00b9\u0088\u00e0\u00b8\u00b2\u00e0\u00b8\u0087\u00e0\u00b8\u00ab\u00e0\u00b8\u0099\u00e0\u00b8\u00b6\u00e0\u00b9\u0088\u00e0\u00b8\u0087\"",
                "+",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                " msgstr \"\"",
                "@@ -500,3 +510,3 @@ msgstr \"\"",
                " msgid \"Duration\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b8\u008a\u00e0\u00b9\u0088\u00e0\u00b8\u00a7\u00e0\u00b8\u0087\u00e0\u00b9\u0080\u00e0\u00b8\u00a7\u00e0\u00b8\u00a5\u00e0\u00b8\u00b2\"",
                "@@ -609,5 +619,2 @@ msgstr \"\u00e0\u00b8\u0081\u00e0\u00b8\u00a3\u00e0\u00b8\u00ad\u00e0\u00b8\u0081\u00e0\u00b8\u00ab\u00e0\u00b8\u00a1\u00e0\u00b8\u00b2\u00e0\u00b8\u00a2\u00e0\u00b9\u0080\u00e0\u00b8\u00a5\u00e0\u00b8\u0082\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00e0\u00b8\u0081\u00e0\u00b8\u00a3\u00e0\u00b8\u00ad\u00e0\u00b8\u0081\u00e0\u00b8\u00ab\u00e0\u00b8\u00a1\u00e0\u00b8\u00b2\u00e0\u00b8\u00a2\u00e0\u00b9\u0080\u00e0\u00b8\u00a5\u00e0\u00b8\u0082\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -622,2 +629,6 @@ msgstr \"\u00e0\u00b8\u0081\u00e0\u00b8\u00a3\u00e0\u00b8\u00b8\u00e0\u00b8\u0093\u00e0\u00b8\u00b2\u00e0\u00b9\u0083\u00e0\u00b8\u00aa\u00e0\u00b9\u0088\u00e0\u00b8\u00a7\u00e0\u00b8\u00b1\u00e0\u00b8\u0099\u00e0\u00b9\u0080\u00e0\u00b8\u00a7\u00e0\u00b8\u00a5\u00e0\u00b8\u00b2\"",
                " msgid \"Enter a valid duration.\"",
                "+msgstr \"\u00e0\u00b9\u0083\u00e0\u00b8\u00aa\u00e0\u00b9\u0088\u00e0\u00b8\u00a3\u00e0\u00b8\u00b0\u00e0\u00b8\u00a2\u00e0\u00b8\u00b0\u00e0\u00b9\u0080\u00e0\u00b8\u00a7\u00e0\u00b8\u00a5\u00e0\u00b8\u00b2\u00e0\u00b8\u0097\u00e0\u00b8\u00b5\u00e0\u00b9\u0088\u00e0\u00b8\u0096\u00e0\u00b8\u00b9\u00e0\u00b8\u0081\u00e0\u00b8\u0095\u00e0\u00b9\u0089\u00e0\u00b8\u00ad\u00e0\u00b8\u0087\"",
                "+",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                " msgstr \"\"",
                "@@ -658,3 +669,3 @@ msgstr \"\"",
                " msgid \"Enter a valid UUID.\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b9\u0083\u00e0\u00b8\u00aa\u00e0\u00b9\u0088 UUID \u00e0\u00b8\u0097\u00e0\u00b8\u00b5\u00e0\u00b9\u0088\u00e0\u00b8\u0096\u00e0\u00b8\u00b9\u00e0\u00b8\u0081\u00e0\u00b8\u0095\u00e0\u00b9\u0089\u00e0\u00b8\u00ad\u00e0\u00b8\u0087\"",
                "@@ -1047,3 +1058,3 @@ msgstr \"0 \u00e0\u00b8\u0099\u00e0\u00b8\u00b2\u00e0\u00b8\u0097\u00e0\u00b8\u00b5\"",
                " msgid \"Forbidden\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b8\u00ab\u00e0\u00b8\u00a7\u00e0\u00b8\u0087\u00e0\u00b8\u00ab\u00e0\u00b9\u0089\u00e0\u00b8\u00b2\u00e0\u00b8\u00a1\"",
                "@@ -1174,6 +1185,6 @@ msgstr \"\"",
                " msgid \"Get started with Django\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b9\u0080\u00e0\u00b8\u00a3\u00e0\u00b8\u00b4\u00e0\u00b9\u0088\u00e0\u00b8\u00a1\u00e0\u00b8\u0095\u00e0\u00b9\u0089\u00e0\u00b8\u0099\u00e0\u00b8\u0081\u00e0\u00b8\u00b1\u00e0\u00b8\u009a Django\"",
                " msgid \"Django Community\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b8\u008a\u00e0\u00b8\u00b8\u00e0\u00b8\u00a1\u00e0\u00b8\u008a\u00e0\u00b8\u0099 Django\"",
                "diff --git a/django/conf/locale/tr/LC_MESSAGES/django.mo b/django/conf/locale/tr/LC_MESSAGES/django.mo",
                "index 83f6d1c32a..b45e506e11 100644",
                "Binary files a/django/conf/locale/tr/LC_MESSAGES/django.mo and b/django/conf/locale/tr/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/tr/LC_MESSAGES/django.po b/django/conf/locale/tr/LC_MESSAGES/django.po",
                "index 266d21c77f..f11c6bb766 100644",
                "--- a/django/conf/locale/tr/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/tr/LC_MESSAGES/django.po",
                "@@ -4,3 +4,3 @@",
                " # Ahmet Emre Alada\u00c4\u009f <emre.aladag@isik.edu.tr>, 2013",
                "-# BouRock, 2015-2017",
                "+# BouRock, 2015-2018",
                " # BouRock, 2014-2015",
                "@@ -18,4 +18,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-04 11:48+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 09:51+0000\\n\"",
                " \"Last-Translator: BouRock\\n\"",
                "@@ -396,2 +396,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Bir say\u00c4\u00b1 girin.\"",
                "+",
                " #, python-format",
                "@@ -477,2 +480,6 @@ msgstr \"'%(value)s' de\u00c4\u009feri ya True ya da False olmak zorundad\u00c4\u00b1r.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' de\u00c4\u009feri ya True, False ya da None olmak zorundad\u00c4\u00b1r.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -653,5 +660,2 @@ msgstr \"Tam bir say\u00c4\u00b1 girin.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Bir say\u00c4\u00b1 girin.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -668,2 +672,6 @@ msgstr \"Ge\u00c3\u00a7erli bir s\u00c3\u00bcre girin.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"G\u00c3\u00bcn say\u00c4\u00b1lar\u00c4\u00b1 {min_days} ve {max_days} aras\u00c4\u00b1nda olmak zorundad\u00c4\u00b1r.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo b/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo",
                "index b3a83792af..66141980d2 100644",
                "Binary files a/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo and b/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/zh_Hans/LC_MESSAGES/django.po b/django/conf/locale/zh_Hans/LC_MESSAGES/django.po",
                "index 3c376ce03b..f239ee548c 100644",
                "--- a/django/conf/locale/zh_Hans/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/zh_Hans/LC_MESSAGES/django.po",
                "@@ -3,3 +3,3 @@",
                " # Translators:",
                "-# Bestony <xiqingongzi@gmail.com>, 2017-2018",
                "+# Bai HuanCheng (Bestony) <xiqingongzi@gmail.com>, 2017-2018",
                " # Daniel Duan <DaNmarner@gmail.com>, 2013",
                "@@ -8,2 +8,3 @@",
                " # Lele Long <schemacs@gmail.com>, 2011,2015,2017",
                "+# Le Yang <youngleocn@qq.com>, 2018",
                " # Liping Wang <lynn.config@gmail.com>, 2016-2017",
                "@@ -26,5 +27,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-17 01:14+0000\\n\"",
                "-\"Last-Translator: Ziya Tang <tcztzy@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-06-25 13:50+0000\\n\"",
                "+\"Last-Translator: Le Yang <youngleocn@qq.com>\\n\"",
                " \"Language-Team: Chinese (China) (http://www.transifex.com/django/django/\"",
                "@@ -391,2 +392,5 @@ msgstr[0] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00e8\u00be\u0093\u00e5\u0085\u00a5\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00e3\u0080\u0082\"",
                "+",
                " #, python-format",
                "@@ -467,2 +471,6 @@ msgstr \"\u00e2\u0080\u0099%(value)s\u00e2\u0080\u0098 \u00e5\u00bf\u0085\u00e9\u00a1\u00bb\u00e4\u00b8\u00ba True \u00e6\u0088\u0096\u00e8\u0080\u0085 False\u00e3\u0080\u0082\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' \u00e5\u0080\u00bc\u00e5\u00bf\u0085\u00e9\u00a1\u00bb\u00e6\u0098\u00af None, True \u00e6\u0088\u0096 False \u00e4\u00b9\u008b\u00e4\u00b8\u0080\u00e3\u0080\u0082\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -633,5 +641,2 @@ msgstr \"\u00e8\u00be\u0093\u00e5\u0085\u00a5\u00e6\u0095\u00b4\u00e6\u0095\u00b0\u00e3\u0080\u0082\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00e8\u00be\u0093\u00e5\u0085\u00a5\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00e3\u0080\u0082\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -648,2 +653,6 @@ msgstr \"\u00e8\u00af\u00b7\u00e8\u00be\u0093\u00e5\u0085\u00a5\u00e6\u009c\u0089\u00e6\u0095\u0088\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0095\u00bf\u00e3\u0080\u0082\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\""
            ],
            "changed_files": [
                "django/conf/locale/az/LC_MESSAGES/django.mo",
                "django/conf/locale/az/LC_MESSAGES/django.po",
                "django/conf/locale/cs/LC_MESSAGES/django.mo",
                "django/conf/locale/cs/LC_MESSAGES/django.po",
                "django/conf/locale/da/LC_MESSAGES/django.mo",
                "django/conf/locale/da/LC_MESSAGES/django.po",
                "django/conf/locale/de/LC_MESSAGES/django.mo",
                "django/conf/locale/de/LC_MESSAGES/django.po",
                "django/conf/locale/dsb/LC_MESSAGES/django.mo",
                "django/conf/locale/dsb/LC_MESSAGES/django.po",
                "django/conf/locale/eo/LC_MESSAGES/django.mo",
                "django/conf/locale/eo/LC_MESSAGES/django.po",
                "django/conf/locale/es_AR/LC_MESSAGES/django.mo",
                "django/conf/locale/es_AR/LC_MESSAGES/django.po",
                "django/conf/locale/fa/LC_MESSAGES/django.mo",
                "django/conf/locale/fa/LC_MESSAGES/django.po",
                "django/conf/locale/fi/LC_MESSAGES/django.mo",
                "django/conf/locale/fi/LC_MESSAGES/django.po",
                "django/conf/locale/fr/LC_MESSAGES/django.mo",
                "django/conf/locale/fr/LC_MESSAGES/django.po",
                "django/conf/locale/gd/LC_MESSAGES/django.mo",
                "django/conf/locale/gd/LC_MESSAGES/django.po",
                "django/conf/locale/hsb/LC_MESSAGES/django.mo",
                "django/conf/locale/hsb/LC_MESSAGES/django.po",
                "django/conf/locale/hu/LC_MESSAGES/django.mo",
                "django/conf/locale/hu/LC_MESSAGES/django.po",
                "django/conf/locale/id/LC_MESSAGES/django.mo",
                "django/conf/locale/id/LC_MESSAGES/django.po",
                "django/conf/locale/is/LC_MESSAGES/django.mo",
                "django/conf/locale/is/LC_MESSAGES/django.po",
                "django/conf/locale/it/LC_MESSAGES/django.mo",
                "django/conf/locale/it/LC_MESSAGES/django.po",
                "django/conf/locale/ja/LC_MESSAGES/django.mo",
                "django/conf/locale/ja/LC_MESSAGES/django.po",
                "django/conf/locale/ko/LC_MESSAGES/django.mo",
                "django/conf/locale/ko/LC_MESSAGES/django.po",
                "django/conf/locale/lt/LC_MESSAGES/django.mo",
                "django/conf/locale/lt/LC_MESSAGES/django.po",
                "django/conf/locale/lv/LC_MESSAGES/django.mo",
                "django/conf/locale/lv/LC_MESSAGES/django.po",
                "django/conf/locale/mn/LC_MESSAGES/django.mo",
                "django/conf/locale/mn/LC_MESSAGES/django.po",
                "django/conf/locale/nb/LC_MESSAGES/django.mo",
                "django/conf/locale/nb/LC_MESSAGES/django.po",
                "django/conf/locale/ne/LC_MESSAGES/django.mo",
                "django/conf/locale/ne/LC_MESSAGES/django.po",
                "django/conf/locale/pl/LC_MESSAGES/django.mo",
                "django/conf/locale/pl/LC_MESSAGES/django.po",
                "django/conf/locale/pt_BR/LC_MESSAGES/django.mo",
                "django/conf/locale/pt_BR/LC_MESSAGES/django.po",
                "django/conf/locale/ro/LC_MESSAGES/django.mo",
                "django/conf/locale/ro/LC_MESSAGES/django.po",
                "django/conf/locale/ru/LC_MESSAGES/django.mo",
                "django/conf/locale/ru/LC_MESSAGES/django.po",
                "django/conf/locale/sq/LC_MESSAGES/django.mo",
                "django/conf/locale/sq/LC_MESSAGES/django.po",
                "django/conf/locale/sr/LC_MESSAGES/django.mo",
                "django/conf/locale/sr/LC_MESSAGES/django.po",
                "django/conf/locale/th/LC_MESSAGES/django.mo",
                "django/conf/locale/th/LC_MESSAGES/django.po",
                "django/conf/locale/tr/LC_MESSAGES/django.mo",
                "django/conf/locale/tr/LC_MESSAGES/django.po",
                "django/conf/locale/zh_Hans/LC_MESSAGES/django.mo",
                "django/conf/locale/zh_Hans/LC_MESSAGES/django.po"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5a017eef4ccf8c4818d85d3c8e7451998f921356",
            "repository": "https://github.com/django/django",
            "timestamp": 1532242075,
            "hunks": 2,
            "message": "Fixed test_migrate_syncdb_deferred_sql_executed_with_schemaeditor() on Oracle.",
            "diff": [
                "diff --git a/tests/migrations/test_commands.py b/tests/migrations/test_commands.py",
                "index 377490370b..8276049dc6 100644",
                "--- a/tests/migrations/test_commands.py",
                "+++ b/tests/migrations/test_commands.py",
                "@@ -13,2 +13,3 @@ from django.db import (",
                " from django.db.backends.base.schema import BaseDatabaseSchemaEditor",
                "+from django.db.backends.utils import truncate_name",
                " from django.db.migrations.exceptions import InconsistentMigrationHistory",
                "@@ -594,3 +595,4 @@ class MigrateTests(MigrationTestBase):",
                "         self.assertIn('Creating tables...', stdout)",
                "-        self.assertIn('Creating table unmigrated_app_syncdb_classroom', stdout)",
                "+        table_name = truncate_name('unmigrated_app_syncdb_classroom', connection.ops.max_name_length())",
                "+        self.assertIn('Creating table %s' % table_name, stdout)"
            ],
            "changed_files": [
                "tests/migrations/test_commands.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "fa54ebc722a64d5b1b2f76301a15bd4e1a28b3ee",
            "repository": "https://github.com/django/django",
            "timestamp": 1516804648,
            "hunks": 9,
            "message": "Simplified tests for PostgreSQL indexes. - Added mixin to make tests more DRY. - Removed redundant equality tests.",
            "diff": [
                "diff --git a/tests/postgres_tests/test_indexes.py b/tests/postgres_tests/test_indexes.py",
                "index 1e5dc7c380..defab8530a 100644",
                "--- a/tests/postgres_tests/test_indexes.py",
                "+++ b/tests/postgres_tests/test_indexes.py",
                "@@ -5,35 +5,28 @@ from django.test import skipUnlessDBFeature",
                " from . import PostgreSQLTestCase",
                "-from .models import CharFieldModel, DateTimeArrayModel, IntegerArrayModel",
                "+from .models import CharFieldModel, IntegerArrayModel",
                "-@skipUnlessDBFeature('has_brin_index_support')",
                "-class BrinIndexTests(PostgreSQLTestCase):",
                "-",
                "-    def test_suffix(self):",
                "-        self.assertEqual(BrinIndex.suffix, 'brin')",
                "-",
                "-    def test_not_eq(self):",
                "-        index = BrinIndex(fields=['title'])",
                "-        index_with_page_range = BrinIndex(fields=['title'], pages_per_range=16)",
                "-        self.assertNotEqual(index, index_with_page_range)",
                "+class IndexTestMixin:",
                "     def test_name_auto_generation(self):",
                "-        \"\"\"",
                "-        A name longer than 30 characters (since len(BrinIndex.suffix) is 4",
                "-        rather than usual limit of 3) is okay for PostgreSQL. For this test,",
                "-        the name of the field ('datetimes') must be at least 7 characters to",
                "-        generate a name longer than 30 characters.",
                "-        \"\"\"",
                "-        index = BrinIndex(fields=['datetimes'])",
                "-        index.set_name_with_model(DateTimeArrayModel)",
                "-        self.assertEqual(index.name, 'postgres_te_datetim_abf104_brin')",
                "+        index = self.index_class(fields=['field'])",
                "+        index.set_name_with_model(CharFieldModel)",
                "+        self.assertRegex(index.name, r'postgres_te_field_[0-9a-f]{6}_%s' % self.index_class.suffix)",
                "-    def test_deconstruction(self):",
                "-        index = BrinIndex(fields=['title'], name='test_title_brin')",
                "+    def test_deconstruction_no_customization(self):",
                "+        index = self.index_class(fields=['title'], name='test_title_%s' % self.index_class.suffix)",
                "         path, args, kwargs = index.deconstruct()",
                "-        self.assertEqual(path, 'django.contrib.postgres.indexes.BrinIndex')",
                "+        self.assertEqual(path, 'django.contrib.postgres.indexes.%s' % self.index_class.__name__)",
                "         self.assertEqual(args, ())",
                "-        self.assertEqual(kwargs, {'fields': ['title'], 'name': 'test_title_brin'})",
                "+        self.assertEqual(kwargs, {'fields': ['title'], 'name': 'test_title_%s' % self.index_class.suffix})",
                "+",
                "+",
                "+@skipUnlessDBFeature('has_brin_index_support')",
                "+class BrinIndexTests(IndexTestMixin, PostgreSQLTestCase):",
                "+    index_class = BrinIndex",
                "-    def test_deconstruction_with_pages_per_range(self):",
                "+    def test_suffix(self):",
                "+        self.assertEqual(BrinIndex.suffix, 'brin')",
                "+",
                "+    def test_deconstruction(self):",
                "         index = BrinIndex(fields=['title'], name='test_title_brin', pages_per_range=16)",
                "@@ -49,3 +42,4 @@ class BrinIndexTests(PostgreSQLTestCase):",
                "-class GinIndexTests(PostgreSQLTestCase):",
                "+class GinIndexTests(IndexTestMixin, PostgreSQLTestCase):",
                "+    index_class = GinIndex",
                "@@ -54,14 +48,2 @@ class GinIndexTests(PostgreSQLTestCase):",
                "-    def test_eq(self):",
                "-        index = GinIndex(fields=['title'])",
                "-        same_index = GinIndex(fields=['title'])",
                "-        another_index = GinIndex(fields=['author'])",
                "-        self.assertEqual(index, same_index)",
                "-        self.assertNotEqual(index, another_index)",
                "-",
                "-    def test_name_auto_generation(self):",
                "-        index = GinIndex(fields=['field'])",
                "-        index.set_name_with_model(IntegerArrayModel)",
                "-        self.assertEqual(index.name, 'postgres_te_field_def2f8_gin')",
                "-",
                "     def test_deconstruction(self):",
                "@@ -76,21 +58,12 @@ class GinIndexTests(PostgreSQLTestCase):",
                "         self.assertEqual(args, ())",
                "-        self.assertEqual(",
                "-            kwargs,",
                "-            {",
                "-                'fields': ['title'],",
                "-                'name': 'test_title_gin',",
                "-                'fastupdate': True,",
                "-                'gin_pending_list_limit': 128,",
                "-            }",
                "-        )",
                "+        self.assertEqual(kwargs, {",
                "+            'fields': ['title'],",
                "+            'name': 'test_title_gin',",
                "+            'fastupdate': True,",
                "+            'gin_pending_list_limit': 128,",
                "+        })",
                "-    def test_deconstruct_no_args(self):",
                "-        index = GinIndex(fields=['title'], name='test_title_gin')",
                "-        path, args, kwargs = index.deconstruct()",
                "-        self.assertEqual(path, 'django.contrib.postgres.indexes.GinIndex')",
                "-        self.assertEqual(args, ())",
                "-        self.assertEqual(kwargs, {'fields': ['title'], 'name': 'test_title_gin'})",
                "-",
                "-class GistIndexTests(PostgreSQLTestCase):",
                "+class GistIndexTests(IndexTestMixin, PostgreSQLTestCase):",
                "+    index_class = GistIndex",
                "@@ -99,14 +72,2 @@ class GistIndexTests(PostgreSQLTestCase):",
                "-    def test_eq(self):",
                "-        index = GistIndex(fields=['title'], fillfactor=64)",
                "-        same_index = GistIndex(fields=['title'], fillfactor=64)",
                "-        another_index = GistIndex(fields=['author'], buffering=True)",
                "-        self.assertEqual(index, same_index)",
                "-        self.assertNotEqual(index, another_index)",
                "-",
                "-    def test_name_auto_generation(self):",
                "-        index = GistIndex(fields=['field'])",
                "-        index.set_name_with_model(CharFieldModel)",
                "-        self.assertEqual(index.name, 'postgres_te_field_1e0206_gist')",
                "-",
                "     def test_deconstruction(self):",
                "@@ -116,18 +77,8 @@ class GistIndexTests(PostgreSQLTestCase):",
                "         self.assertEqual(args, ())",
                "-        self.assertEqual(",
                "-            kwargs,",
                "-            {",
                "-                'fields': ['title'],",
                "-                'name': 'test_title_gist',",
                "-                'buffering': False,",
                "-                'fillfactor': 80,",
                "-            }",
                "-        )",
                "-",
                "-    def test_deconstruction_no_customization(self):",
                "-        index = GistIndex(fields=['title'], name='test_title_gist')",
                "-        path, args, kwargs = index.deconstruct()",
                "-        self.assertEqual(path, 'django.contrib.postgres.indexes.GistIndex')",
                "-        self.assertEqual(args, ())",
                "-        self.assertEqual(kwargs, {'fields': ['title'], 'name': 'test_title_gist'})",
                "+        self.assertEqual(kwargs, {",
                "+            'fields': ['title'],",
                "+            'name': 'test_title_gist',",
                "+            'buffering': False,",
                "+            'fillfactor': 80,",
                "+        })"
            ],
            "changed_files": [
                "tests/postgres_tests/test_indexes.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c090ea97c1a199af13c23e83883fbb18598b49fe",
            "repository": "https://github.com/django/django",
            "timestamp": 1532981032,
            "hunks": 2,
            "message": "Fixed nonexistent field reference in test model __str__() method.",
            "diff": [
                "diff --git a/tests/model_formsets/models.py b/tests/model_formsets/models.py",
                "index 744a7f6019..92a07e010f 100644",
                "--- a/tests/model_formsets/models.py",
                "+++ b/tests/model_formsets/models.py",
                "@@ -125,5 +125,2 @@ class Restaurant(Place):",
                "-    def __str__(self):",
                "-        return self.name",
                "-",
                "@@ -225,3 +222,3 @@ class Post(models.Model):",
                "     def __str__(self):",
                "-        return self.name",
                "+        return self.title"
            ],
            "changed_files": [
                "tests/model_formsets/models.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b83b44f40ca18f12d60bf25c89ff2ca50e402003",
            "repository": "https://github.com/django/django",
            "timestamp": 1533131280,
            "hunks": 1,
            "message": "[2.0.x] Bumped version for 2.0.8 release.",
            "diff": [
                "diff --git a/django/__init__.py b/django/__init__.py",
                "index c6e356663b..ad8c32541c 100644",
                "--- a/django/__init__.py",
                "+++ b/django/__init__.py",
                "@@ -2,3 +2,3 @@ from django.utils.version import get_version",
                "-VERSION = (2, 0, 8, 'alpha', 0)",
                "+VERSION = (2, 0, 8, 'final', 0)"
            ],
            "changed_files": [
                "django/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.10",
                "2.0.11",
                "2.0.12",
                "2.0.13",
                "2.0.8",
                "2.0.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "03e918d7179fd7e738261c7f4c242d6627333646",
            "repository": "https://github.com/django/django",
            "timestamp": 1533414170,
            "hunks": 2,
            "message": "Added test for django.core.management.utils.get_random_secret_key().",
            "diff": [
                "diff --git a/tests/user_commands/tests.py b/tests/user_commands/tests.py",
                "index eb30065488..50b1b4244f 100644",
                "--- a/tests/user_commands/tests.py",
                "+++ b/tests/user_commands/tests.py",
                "@@ -9,3 +9,5 @@ from django.core import management",
                " from django.core.management import BaseCommand, CommandError, find_commands",
                "-from django.core.management.utils import find_command, popen_wrapper",
                "+from django.core.management.utils import (",
                "+    find_command, get_random_secret_key, popen_wrapper,",
                "+)",
                " from django.db import connection",
                "@@ -262 +264,7 @@ class UtilsTests(SimpleTestCase):",
                "             popen_wrapper(['a_42_command_that_doesnt_exist_42'])",
                "+",
                "+    def test_get_random_secret_key(self):",
                "+        key = get_random_secret_key()",
                "+        self.assertEqual(len(key), 50)",
                "+        for char in key:",
                "+            self.assertIn(char, 'abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)')"
            ],
            "changed_files": [
                "tests/user_commands/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "dff5beabbfaaf2466df0a74183f5dbf8032500eb",
            "repository": "https://github.com/django/django",
            "timestamp": 1531911965,
            "hunks": 1,
            "message": "[2.1.x] Bumped version for 2.1 release candidate 1.",
            "diff": [
                "diff --git a/django/__init__.py b/django/__init__.py",
                "index 8737ce5a78..ac31acabca 100644",
                "--- a/django/__init__.py",
                "+++ b/django/__init__.py",
                "@@ -2,3 +2,3 @@ from django.utils.version import get_version",
                "-VERSION = (2, 1, 0, 'beta', 1)",
                "+VERSION = (2, 1, 0, 'rc', 1)"
            ],
            "changed_files": [
                "django/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1",
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9",
                "2.1rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "08cbca3aebf50fb4bd30159c8001e1f918d1deda",
            "repository": "https://github.com/django/django",
            "timestamp": 1533135201,
            "hunks": 1,
            "message": "[1.11.x] Post-release version bump.",
            "diff": [
                "diff --git a/django/__init__.py b/django/__init__.py",
                "index 1cb2ca67b8..d346e1cc7d 100644",
                "--- a/django/__init__.py",
                "+++ b/django/__init__.py",
                "@@ -4,3 +4,3 @@ from django.utils.version import get_version",
                "-VERSION = (1, 11, 15, 'final', 0)",
                "+VERSION = (1, 11, 16, 'alpha', 0)"
            ],
            "changed_files": [
                "django/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.11.16",
                "1.11.17",
                "1.11.18",
                "1.11.19",
                "1.11.20",
                "1.11.21",
                "1.11.22",
                "1.11.23",
                "1.11.24",
                "1.11.25",
                "1.11.26",
                "1.11.27",
                "1.11.28",
                "1.11.29"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ec9d0123e0bf17b6219630ebe1c5f7240acc2743",
            "repository": "https://github.com/django/django",
            "timestamp": 1533331410,
            "hunks": 8,
            "message": "Made createsuperuser code more DRY.",
            "diff": [
                "diff --git a/django/contrib/auth/management/commands/createsuperuser.py b/django/contrib/auth/management/commands/createsuperuser.py",
                "index 541711606c..3a76bce90a 100644",
                "--- a/django/contrib/auth/management/commands/createsuperuser.py",
                "+++ b/django/contrib/auth/management/commands/createsuperuser.py",
                "@@ -66,5 +66,2 @@ class Command(BaseCommand):",
                "         user_data = {}",
                "-        # Same as user_data but with foreign keys as fake model instances",
                "-        # instead of raw IDs.",
                "-        fake_user_data = {}",
                "         verbose_field_name = self.username_field.verbose_name",
                "@@ -72,2 +69,5 @@ class Command(BaseCommand):",
                "             if options['interactive']:",
                "+                # Same as user_data but with foreign keys as fake model",
                "+                # instances instead of raw IDs.",
                "+                fake_user_data = {}",
                "                 if hasattr(self.stdin, 'isatty') and not self.stdin.isatty():",
                "@@ -84,14 +84,4 @@ class Command(BaseCommand):",
                "                 while username is None:",
                "-                    input_msg = capfirst(verbose_field_name)",
                "-                    if default_username:",
                "-                        input_msg += \" (leave blank to use '%s')\" % default_username",
                "-                    username_rel = self.username_field.remote_field",
                "-                    input_msg = '%s%s: ' % (",
                "-                        input_msg,",
                "-                        ' (%s.%s)' % (",
                "-                            username_rel.model._meta.object_name,",
                "-                            username_rel.field_name",
                "-                        ) if username_rel else ''",
                "-                    )",
                "-                    username = self.get_input_data(self.username_field, input_msg, default_username)",
                "+                    message = self._get_input_message(self.username_field, default_username)",
                "+                    username = self.get_input_data(self.username_field, message, default_username)",
                "                     if username:",
                "@@ -102,24 +92,9 @@ class Command(BaseCommand):",
                "                             continue",
                "-            else:",
                "-                if username is None:",
                "-                    raise CommandError('You must use --%s with --noinput.' % self.UserModel.USERNAME_FIELD)",
                "-                else:",
                "-                    error_msg = self._validate_username(username, verbose_field_name, database)",
                "-                    if error_msg:",
                "-                        raise CommandError(error_msg)",
                "-",
                "-            user_data[self.UserModel.USERNAME_FIELD] = username",
                "-            fake_user_data[self.UserModel.USERNAME_FIELD] = (",
                "-                self.username_field.remote_field.model(username) if self.username_field.remote_field",
                "-                else username",
                "-            )",
                "-            # Prompt for required fields.",
                "-            for field_name in self.UserModel.REQUIRED_FIELDS:",
                "-                if not options['interactive']:",
                "-                    if options[field_name]:",
                "-                        field = self.UserModel._meta.get_field(field_name)",
                "-                        user_data[field_name] = field.clean(options[field_name], None)",
                "-                    else:",
                "-                        raise CommandError('You must use --%s with --noinput.' % field_name)",
                "-                else:",
                "+                user_data[self.UserModel.USERNAME_FIELD] = username",
                "+                fake_user_data[self.UserModel.USERNAME_FIELD] = (",
                "+                    self.username_field.remote_field.model(username)",
                "+                    if self.username_field.remote_field else username",
                "+                )",
                "+                # Prompt for required fields.",
                "+                for field_name in self.UserModel.REQUIRED_FIELDS:",
                "                     field = self.UserModel._meta.get_field(field_name)",
                "@@ -127,9 +102,3 @@ class Command(BaseCommand):",
                "                     while user_data[field_name] is None:",
                "-                        message = '%s%s: ' % (",
                "-                            capfirst(field.verbose_name),",
                "-                            ' (%s.%s)' % (",
                "-                                field.remote_field.model._meta.object_name,",
                "-                                field.remote_field.field_name,",
                "-                            ) if field.remote_field else '',",
                "-                        )",
                "+                        message = self._get_input_message(field)",
                "                         input_value = self.get_input_data(field, message)",
                "@@ -142,3 +111,2 @@ class Command(BaseCommand):",
                "-            if options['interactive']:",
                "                 # Prompt for a password.",
                "@@ -164,2 +132,19 @@ class Command(BaseCommand):",
                "                             password = None",
                "+            else:",
                "+                # Non-interactive mode.",
                "+                if username is None:",
                "+                    raise CommandError('You must use --%s with --noinput.' % self.UserModel.USERNAME_FIELD)",
                "+                else:",
                "+                    error_msg = self._validate_username(username, verbose_field_name, database)",
                "+                    if error_msg:",
                "+                        raise CommandError(error_msg)",
                "+",
                "+                user_data[self.UserModel.USERNAME_FIELD] = username",
                "+                for field_name in self.UserModel.REQUIRED_FIELDS:",
                "+                    if options[field_name]:",
                "+                        field = self.UserModel._meta.get_field(field_name)",
                "+                        user_data[field_name] = field.clean(options[field_name], None)",
                "+                    else:",
                "+                        raise CommandError('You must use --%s with --noinput.' % field_name)",
                "+",
                "             user_data['password'] = password",
                "@@ -196,2 +181,12 @@ class Command(BaseCommand):",
                "+    def _get_input_message(self, field, default=None):",
                "+        return '%s%s%s: ' % (",
                "+            capfirst(field.verbose_name),",
                "+            \" (leave blank to use '%s')\" % default if default else '',",
                "+            ' (%s.%s)' % (",
                "+                field.remote_field.model._meta.object_name,",
                "+                field.remote_field.field_name,",
                "+            ) if field.remote_field else '',",
                "+        )",
                "+",
                "     def _validate_username(self, username, verbose_field_name, database):"
            ],
            "changed_files": [
                "django/contrib/auth/management/commands/createsuperuser.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "69eb70456bfd42becdbdf1ca6043ae2e3263beb5",
            "repository": "https://github.com/django/django",
            "timestamp": 1532703488,
            "hunks": 1,
            "message": "Fixed typo in ContentFile docstring.",
            "diff": [
                "diff --git a/django/core/files/base.py b/django/core/files/base.py",
                "index 5403d4a702..63e3ee99a9 100644",
                "--- a/django/core/files/base.py",
                "+++ b/django/core/files/base.py",
                "@@ -122,3 +122,3 @@ class ContentFile(File):",
                "     \"\"\"",
                "-    A File-like object that take just raw content, rather than an actual file.",
                "+    A File-like object that takes just raw content, rather than an actual file.",
                "     \"\"\""
            ],
            "changed_files": [
                "django/core/files/base.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "e7ad40fcf4b103bb5134f6a94eb86a4e10e53cb3",
            "repository": "https://github.com/django/django",
            "timestamp": 1533131773,
            "hunks": 2,
            "message": "[2.1.x] Bumped version for 2.1 release.",
            "diff": [
                "diff --git a/django/__init__.py b/django/__init__.py",
                "index ac31acabca..55aef9d465 100644",
                "--- a/django/__init__.py",
                "+++ b/django/__init__.py",
                "@@ -2,3 +2,3 @@ from django.utils.version import get_version",
                "-VERSION = (2, 1, 0, 'rc', 1)",
                "+VERSION = (2, 1, 0, 'final', 0)",
                "diff --git a/setup.py b/setup.py",
                "index ac0b62779c..5af6a3f7e6 100644",
                "--- a/setup.py",
                "+++ b/setup.py",
                "@@ -92,3 +92,3 @@ setup(",
                "     classifiers=[",
                "-        'Development Status :: 4 - Beta',",
                "+        'Development Status :: 5 - Production/Stable',",
                "         'Environment :: Web Environment',"
            ],
            "changed_files": [
                "django/__init__.py",
                "setup.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1",
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d77cbdcfa344ad1ae84aa743f773e2e24689dd54",
            "repository": "https://github.com/django/django",
            "timestamp": 1533049201,
            "hunks": 21,
            "message": "[2.1.x] Added words to docs/spelling_wordlist for Ubuntu 18.04. Backport of 8edb27b6c6d5d9e4f3ad95a91254588616854d16 from master",
            "diff": [
                "diff --git a/docs/spelling_wordlist b/docs/spelling_wordlist",
                "index e02548cfd7..b56a09473a 100644",
                "--- a/docs/spelling_wordlist",
                "+++ b/docs/spelling_wordlist",
                "@@ -71,2 +71,3 @@ Bokm\u00c3\u00a5l",
                " bolded",
                "+Bonham",
                " bookmarklet",
                "@@ -109,2 +110,4 @@ codebase",
                " codec",
                "+codename",
                "+codenamed",
                " coercible",
                "@@ -121,2 +124,3 @@ contenttypes",
                " contrib",
                "+covariance",
                " coveredby",
                "@@ -159,2 +163,4 @@ deduplicates",
                " deepcopy",
                "+deferrable",
                "+deprecations",
                " deserialization",
                "@@ -164,2 +170,3 @@ deserializer",
                " deserializing",
                "+deterministically",
                " Deutsch",
                "@@ -304,2 +311,3 @@ inbox",
                " incrementing",
                "+indexable",
                " indices",
                "@@ -333,2 +341,3 @@ iterable",
                " iterables",
                "+iteratively",
                " itunes",
                "@@ -361,2 +370,3 @@ linestring",
                " linework",
                "+linter",
                " Livni",
                "@@ -376,2 +386,3 @@ loopback",
                " lorem",
                "+lossy",
                " lowercased",
                "@@ -426,2 +437,3 @@ multithreaded",
                " multithreading",
                "+multivalued",
                " Mumbai",
                "@@ -447,2 +459,3 @@ nginx",
                " noding",
                "+nonnegative",
                " nonspatial",
                "@@ -467,2 +480,5 @@ outfile",
                " paginator",
                "+parallelization",
                "+parallelized",
                "+parameterization",
                " parameterized",
                "@@ -470,2 +486,3 @@ params",
                " parens",
                "+parsers",
                " Pawe\u00c5\u0082",
                "@@ -520,2 +537,3 @@ prepopulates",
                " preprocess",
                "+preprocessed",
                " preprocesses",
                "@@ -545,2 +563,4 @@ quoteless",
                " Radziej",
                "+raster",
                "+rasters",
                " rc",
                "@@ -637,2 +657,3 @@ solaris",
                " Solr",
                "+sortable",
                " spaceless",
                "@@ -682,2 +703,3 @@ submodules",
                " subpath",
                "+subprocesses",
                " subqueries",
                "@@ -745,2 +767,4 @@ triagers",
                " triaging",
                "+trigram",
                "+trigrams",
                " truncatechars",
                "@@ -756,2 +780,3 @@ umask",
                " Unaccent",
                "+unannotated",
                " unapplied",
                "@@ -783,2 +808,3 @@ unlocalize",
                " unlocalized",
                "+unmaintained",
                " unmanaged",
                "@@ -802,2 +828,3 @@ untrusted",
                " unvalidated",
                "+uppercased",
                " url"
            ],
            "changed_files": [
                "docs/spelling_wordlist"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1",
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "cebbcaa1baa6eb7f9ec3e223abdc496a983ea482",
            "repository": "https://github.com/django/django",
            "timestamp": 1532726100,
            "hunks": 2,
            "message": "Moved yesno filter test to its file.",
            "diff": [
                "diff --git a/tests/template_tests/filter_tests/test_yesno.py b/tests/template_tests/filter_tests/test_yesno.py",
                "index c496a600ee..70b383a2b6 100644",
                "--- a/tests/template_tests/filter_tests/test_yesno.py",
                "+++ b/tests/template_tests/filter_tests/test_yesno.py",
                "@@ -3,2 +3,11 @@ from django.test import SimpleTestCase",
                "+from ..utils import setup",
                "+",
                "+",
                "+class YesNoTests(SimpleTestCase):",
                "+    @setup({'t': '{{ var|yesno:\"yup,nup,mup\" }} {{ var|yesno }}'})",
                "+    def test_true(self):",
                "+        output = self.engine.render_to_string('t', {'var': True})",
                "+        self.assertEqual(output, 'yup yes')",
                "+",
                "diff --git a/tests/template_tests/syntax_tests/test_filter_syntax.py b/tests/template_tests/syntax_tests/test_filter_syntax.py",
                "index 176475c04c..f6f2857df8 100644",
                "--- a/tests/template_tests/syntax_tests/test_filter_syntax.py",
                "+++ b/tests/template_tests/syntax_tests/test_filter_syntax.py",
                "@@ -111,10 +111,2 @@ class FilterSyntaxTests(SimpleTestCase):",
                "-    @setup({'filter-syntax12': r'{{ var|yesno:\"yup,nup,mup\" }} {{ var|yesno }}'})",
                "-    def test_filter_syntax12(self):",
                "-        \"\"\"",
                "-        Default argument testing",
                "-        \"\"\"",
                "-        output = self.engine.render_to_string('filter-syntax12', {\"var\": True})",
                "-        self.assertEqual(output, 'yup yes')",
                "-",
                "     @setup({'filter-syntax13': r'1{{ var.method3 }}2'})"
            ],
            "changed_files": [
                "tests/template_tests/filter_tests/test_yesno.py",
                "tests/template_tests/syntax_tests/test_filter_syntax.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a73cf8110e6cccbf46bf77fd4ddce2df99df53ca",
            "repository": "https://github.com/django/django",
            "timestamp": 1531929255,
            "hunks": 5,
            "message": "Removed duplicate words in various comments.",
            "diff": [
                "diff --git a/django/contrib/gis/db/backends/base/features.py b/django/contrib/gis/db/backends/base/features.py",
                "index 91d0020ce8..66c024e606 100644",
                "--- a/django/contrib/gis/db/backends/base/features.py",
                "+++ b/django/contrib/gis/db/backends/base/features.py",
                "@@ -29,3 +29,3 @@ class BaseSpatialFeatures:",
                "     supports_empty_geometries = False",
                "-    # Can the the function be applied on geodetic coordinate systems?",
                "+    # Can the function be applied on geodetic coordinate systems?",
                "     supports_distance_geodetic = True",
                "diff --git a/django/contrib/messages/storage/fallback.py b/django/contrib/messages/storage/fallback.py",
                "index 97f82d7654..39df6f3c9d 100644",
                "--- a/django/contrib/messages/storage/fallback.py",
                "+++ b/django/contrib/messages/storage/fallback.py",
                "@@ -8,3 +8,3 @@ class FallbackStorage(BaseStorage):",
                "     Try to store all messages in the first backend. Store any unstored",
                "-    messages in each subsequent backend backend.",
                "+    messages in each subsequent backend.",
                "     \"\"\"",
                "diff --git a/django/core/management/__init__.py b/django/core/management/__init__.py",
                "index bffa3d666a..b4c28b3e62 100644",
                "--- a/django/core/management/__init__.py",
                "+++ b/django/core/management/__init__.py",
                "@@ -120,4 +120,4 @@ def call_command(command_name, *args, **options):",
                "     parse_args = [str(a) for a in args]",
                "-    # Any required arguments which are passed in via **options must must be",
                "-    # passed to parse_args().",
                "+    # Any required arguments which are passed in via **options must be passed",
                "+    # to parse_args().",
                "     parse_args += [",
                "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py",
                "index 2a3510f992..f5f26b9426 100644",
                "--- a/django/db/models/sql/query.py",
                "+++ b/django/db/models/sql/query.py",
                "@@ -1486,4 +1486,4 @@ class Query:",
                "         # To avoid making every caller of this method look up transforms",
                "-        # directly, compute transforms here and and create a partial that",
                "-        # converts fields to the appropriate wrapped version.",
                "+        # directly, compute transforms here and create a partial that converts",
                "+        # fields to the appropriate wrapped version.",
                "diff --git a/django/utils/tree.py b/django/utils/tree.py",
                "index b7f7b9798b..2a188acda7 100644",
                "--- a/django/utils/tree.py",
                "+++ b/django/utils/tree.py",
                "@@ -54,3 +54,3 @@ class Node:",
                "     def __len__(self):",
                "-        \"\"\"Return the the number of children this node has.\"\"\"",
                "+        \"\"\"Return the number of children this node has.\"\"\"",
                "         return len(self.children)"
            ],
            "changed_files": [
                "django/contrib/gis/db/backends/base/features.py",
                "django/contrib/messages/storage/fallback.py",
                "django/core/management/__init__.py",
                "django/db/models/sql/query.py",
                "django/utils/tree.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "97e637a87fb45c4de970cca6cb783d93473c9d15",
            "repository": "https://github.com/django/django",
            "timestamp": 1533142553,
            "hunks": 19,
            "message": "Fixed typos in comments and docs.",
            "diff": [
                "diff --git a/django/contrib/auth/models.py b/django/contrib/auth/models.py",
                "index c4ccf5b4ef..cc4f48861a 100644",
                "--- a/django/contrib/auth/models.py",
                "+++ b/django/contrib/auth/models.py",
                "@@ -278,3 +278,3 @@ class PermissionsMixin(models.Model):",
                "         Return True if the user has any permissions in the given app label.",
                "-        Use simlar logic as has_perm(), above.",
                "+        Use similar logic as has_perm(), above.",
                "         \"\"\"",
                "diff --git a/django/contrib/gis/db/backends/postgis/operations.py b/django/contrib/gis/db/backends/postgis/operations.py",
                "index dd3fdb37b0..b6add9390a 100644",
                "--- a/django/contrib/gis/db/backends/postgis/operations.py",
                "+++ b/django/contrib/gis/db/backends/postgis/operations.py",
                "@@ -33,3 +33,3 @@ class PostGISOperator(SpatialOperator):",
                "         # Only a subset of the operators and functions are available for the",
                "-        # raster type. Lookups that don't suport raster will be converted to",
                "+        # raster type. Lookups that don't support raster will be converted to",
                "         # polygons. If the raster argument is set to BILATERAL, then the",
                "diff --git a/django/contrib/gis/gdal/feature.py b/django/contrib/gis/gdal/feature.py",
                "index db8c981312..a8aadbf883 100644",
                "--- a/django/contrib/gis/gdal/feature.py",
                "+++ b/django/contrib/gis/gdal/feature.py",
                "@@ -96,3 +96,3 @@ class Feature(GDALBase):",
                "     def geom_type(self):",
                "-        \"Return the OGR Geometry Type for this Feture.\"",
                "+        \"Return the OGR Geometry Type for this Feature.\"",
                "         return OGRGeomType(capi.get_fd_geom_type(self._layer._ldefn))",
                "diff --git a/django/core/serializers/base.py b/django/core/serializers/base.py",
                "index 0d7946dc3f..624fc312bd 100644",
                "--- a/django/core/serializers/base.py",
                "+++ b/django/core/serializers/base.py",
                "@@ -190,3 +190,3 @@ class Deserializer:",
                "     def __next__(self):",
                "-        \"\"\"Iteration iterface -- return the next item in the stream\"\"\"",
                "+        \"\"\"Iteration interface -- return the next item in the stream\"\"\"",
                "         raise NotImplementedError('subclasses of Deserializer must provide a __next__() method')",
                "diff --git a/django/db/migrations/operations/base.py b/django/db/migrations/operations/base.py",
                "index a29e5230c7..b2f4ddd7d4 100644",
                "--- a/django/db/migrations/operations/base.py",
                "+++ b/django/db/migrations/operations/base.py",
                "@@ -105,3 +105,3 @@ class Operation:",
                "         \"\"\"",
                "-        Return wether or not a model may be migrated.",
                "+        Return whether or not a model may be migrated.",
                "diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py",
                "index d913abab2e..879de0474a 100644",
                "--- a/django/db/models/sql/where.py",
                "+++ b/django/db/models/sql/where.py",
                "@@ -144,3 +144,3 @@ class WhereNode(tree.Node):",
                "         Create a clone of the tree. Must only be called on root nodes (nodes",
                "-        with empty subtree_parents). Childs must be either (Contraint, lookup,",
                "+        with empty subtree_parents). Childs must be either (Constraint, lookup,",
                "         value) tuples, or objects supporting .clone().",
                "diff --git a/django/template/base.py b/django/template/base.py",
                "index f6a60ecdf7..9f4fe3363d 100644",
                "--- a/django/template/base.py",
                "+++ b/django/template/base.py",
                "@@ -762,3 +762,3 @@ class Variable:",
                "-            # Try to interpret values containg a period or an 'e'/'E'",
                "+            # Try to interpret values containing a period or an 'e'/'E'",
                "             # (possibly scientific notation) as a float;  otherwise, try int.",
                "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py",
                "index 53b9ade716..400ce7ceb5 100644",
                "--- a/django/template/defaultfilters.py",
                "+++ b/django/template/defaultfilters.py",
                "@@ -224,4 +224,4 @@ def stringformat(value, arg):",
                "-    This specifier uses Python string formating syntax, with the exception that",
                "-    the leading \"%\" is dropped.",
                "+    This specifier uses Python string formatting syntax, with the exception",
                "+    that the leading \"%\" is dropped.",
                "diff --git a/docs/spelling_wordlist b/docs/spelling_wordlist",
                "index 33d3ad2dac..6721a77e6f 100644",
                "--- a/docs/spelling_wordlist",
                "+++ b/docs/spelling_wordlist",
                "@@ -751,3 +751,2 @@ urlpatterns",
                " urls",
                "-useable",
                " username",
                "diff --git a/tests/admin_changelist/tests.py b/tests/admin_changelist/tests.py",
                "index 6c9b424a5a..c12bfc7c93 100644",
                "--- a/tests/admin_changelist/tests.py",
                "+++ b/tests/admin_changelist/tests.py",
                "@@ -349,3 +349,3 @@ class ChangeListTests(TestCase):",
                "         results shouldn't appear more than once. Model managed in the",
                "-        admin inherits from the one that defins the relationship.",
                "+        admin inherits from the one that defines the relationship.",
                "         \"\"\"",
                "diff --git a/tests/admin_views/tests.py b/tests/admin_views/tests.py",
                "index fe9a02e37a..6b1d23e31e 100644",
                "--- a/tests/admin_views/tests.py",
                "+++ b/tests/admin_views/tests.py",
                "@@ -1762,3 +1762,3 @@ class AdminViewPermissionsTest(TestCase):",
                "         # view user should be able to view the article but not change any of them",
                "-        # (the POST can be sent, but no modification occures)",
                "+        # (the POST can be sent, but no modification occurs)",
                "         self.client.force_login(self.viewuser)",
                "@@ -2242,3 +2242,3 @@ class AdminViewPermissionsTest(TestCase):",
                "         Post-save message shouldn't contain a link to the change form if the",
                "-        user doen't have the change permission.",
                "+        user doesn't have the change permission.",
                "         \"\"\"",
                "@@ -3609,3 +3609,3 @@ class AdminCustomQuerysetTest(TestCase):",
                "         # model has __str__ method",
                "-        t = Telegram.objects.create(title=\"Frist Telegram\")",
                "+        t = Telegram.objects.create(title=\"First Telegram\")",
                "         self.assertEqual(Telegram.objects.count(), 1)",
                "diff --git a/tests/dbshell/test_postgresql_psycopg2.py b/tests/dbshell/test_postgresql_psycopg2.py",
                "index a229e13a47..8e5af5f1f3 100644",
                "--- a/tests/dbshell/test_postgresql_psycopg2.py",
                "+++ b/tests/dbshell/test_postgresql_psycopg2.py",
                "@@ -114,3 +114,3 @@ class PostgreSqlDbshellCommandTestCase(SimpleTestCase):",
                "             DatabaseClient.runshell_db({})",
                "-        # dbshell restores the orignal handler.",
                "+        # dbshell restores the original handler.",
                "         self.assertEqual(sigint_handler, signal.getsignal(signal.SIGINT))",
                "diff --git a/tests/forms_tests/widget_tests/test_selectdatewidget.py b/tests/forms_tests/widget_tests/test_selectdatewidget.py",
                "index 7f8379c556..f9921af5f9 100644",
                "--- a/tests/forms_tests/widget_tests/test_selectdatewidget.py",
                "+++ b/tests/forms_tests/widget_tests/test_selectdatewidget.py",
                "@@ -319,3 +319,3 @@ class SelectDateWidgetTest(WidgetTest):",
                "-        # Rendering the default state with empty_label setted as string.",
                "+        # Rendering the default state with empty_label set as string.",
                "         self.assertInHTML('<option selected value=\"\">empty_label</option>', w.render('mydate', ''), count=3)",
                "diff --git a/tests/httpwrappers/tests.py b/tests/httpwrappers/tests.py",
                "index 985380cc57..24260ae610 100644",
                "--- a/tests/httpwrappers/tests.py",
                "+++ b/tests/httpwrappers/tests.py",
                "@@ -735,3 +735,3 @@ class CookieTests(unittest.TestCase):",
                "         self.assertIn('django_language', parse_cookie('abc=def; unnamed; django_language=en'))",
                "-        # Even a double quote may be an unamed value.",
                "+        # Even a double quote may be an unnamed value.",
                "         self.assertEqual(parse_cookie('a=b; \"; c=d'), {'a': 'b', '': '\"', 'c': 'd'})",
                "diff --git a/tests/indexes/tests.py b/tests/indexes/tests.py",
                "index 219dfe67b1..8dc81da6aa 100644",
                "--- a/tests/indexes/tests.py",
                "+++ b/tests/indexes/tests.py",
                "@@ -83,3 +83,3 @@ class SchemaIndexesNotPostgreSQLTests(TransactionTestCase):",
                "         with connection.schema_editor() as editor:",
                "-            # This would error if opclasses weren't ingored.",
                "+            # This would error if opclasses weren't ignored.",
                "             editor.add_index(IndexedArticle2, index)",
                "diff --git a/tests/pagination/tests.py b/tests/pagination/tests.py",
                "index 987e713405..48d4acbb11 100644",
                "--- a/tests/pagination/tests.py",
                "+++ b/tests/pagination/tests.py",
                "@@ -378,3 +378,3 @@ class ModelPaginationTests(TestCase):",
                "         \"\"\"",
                "-        Unordered object list warning with an object that has an orderd",
                "+        Unordered object list warning with an object that has an ordered",
                "         attribute but not a model attribute.",
                "diff --git a/tests/template_tests/syntax_tests/test_cache.py b/tests/template_tests/syntax_tests/test_cache.py",
                "index 6a59cb3c75..80af1c2bd6 100644",
                "--- a/tests/template_tests/syntax_tests/test_cache.py",
                "+++ b/tests/template_tests/syntax_tests/test_cache.py",
                "@@ -110,3 +110,3 @@ class CacheTagTests(SimpleTestCase):",
                "                     'Into a rancid festering/Or else I shall rend thee in the gobberwarts'",
                "-                    'with my blurglecruncheon/See if I dont.'",
                "+                    'with my blurglecruncheon/See if I don\\'t.'",
                "                 ),"
            ],
            "changed_files": [
                "django/contrib/auth/models.py",
                "django/contrib/gis/db/backends/postgis/operations.py",
                "django/contrib/gis/gdal/feature.py",
                "django/core/serializers/base.py",
                "django/db/migrations/operations/base.py",
                "django/db/models/sql/where.py",
                "django/template/base.py",
                "django/template/defaultfilters.py",
                "docs/spelling_wordlist",
                "tests/admin_changelist/tests.py",
                "tests/admin_views/tests.py",
                "tests/dbshell/test_postgresql_psycopg2.py",
                "tests/forms_tests/widget_tests/test_selectdatewidget.py",
                "tests/httpwrappers/tests.py",
                "tests/indexes/tests.py",
                "tests/pagination/tests.py",
                "tests/template_tests/syntax_tests/test_cache.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a7ca8afbbec1e2885c0c1b1562c76e0719427357",
            "repository": "https://github.com/django/django",
            "timestamp": 1531730900,
            "hunks": 1,
            "message": "[2.1.x] Fixed django/http/request.py docstring typo. Backport of 93e721a0b8155470336357c148c4d8364c36bbee from master",
            "diff": [
                "diff --git a/django/http/request.py b/django/http/request.py",
                "index f7f89913ef..7c44dbb01e 100644",
                "--- a/django/http/request.py",
                "+++ b/django/http/request.py",
                "@@ -167,3 +167,3 @@ class HttpRequest:",
                "         Build an absolute URI from the location and the variables available in",
                "-        this request. If no ``location`` is specified, bulid the absolute URI",
                "+        this request. If no ``location`` is specified, build the absolute URI",
                "         using request.get_full_path(). If the location is absolute, convert it"
            ],
            "changed_files": [
                "django/http/request.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1",
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9",
                "2.1rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "6010da2fbda5eee76b6ec586112561dd26b650e8",
            "repository": "https://github.com/django/django",
            "timestamp": 1533130826,
            "hunks": 1,
            "message": "[1.11.x] Bumped version for 1.11.15 release.",
            "diff": [
                "diff --git a/django/__init__.py b/django/__init__.py",
                "index eb45a75d03..1cb2ca67b8 100644",
                "--- a/django/__init__.py",
                "+++ b/django/__init__.py",
                "@@ -4,3 +4,3 @@ from django.utils.version import get_version",
                "-VERSION = (1, 11, 15, 'alpha', 0)",
                "+VERSION = (1, 11, 15, 'final', 0)"
            ],
            "changed_files": [
                "django/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.11.15",
                "1.11.16",
                "1.11.17",
                "1.11.18",
                "1.11.19",
                "1.11.20",
                "1.11.21",
                "1.11.22",
                "1.11.23",
                "1.11.24",
                "1.11.25",
                "1.11.26",
                "1.11.27",
                "1.11.28",
                "1.11.29"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b4fa94aed8ec5209176c9fa88aba3eacdca837f3",
            "repository": "https://github.com/django/django",
            "timestamp": 1533051158,
            "hunks": 68,
            "message": "Removed code terms from docs/spelling_wordlist.",
            "diff": [
                "diff --git a/docs/spelling_wordlist b/docs/spelling_wordlist",
                "index 6dde2732af..33d3ad2dac 100644",
                "--- a/docs/spelling_wordlist",
                "+++ b/docs/spelling_wordlist",
                "@@ -4,3 +4,2 @@ accessors",
                " Aceh",
                "-addslashes",
                " admin",
                "@@ -54,4 +53,2 @@ balancer",
                " basename",
                "-bbcontains",
                "-bboverlaps",
                " Bcc",
                "@@ -68,3 +65,2 @@ Bj\u00c3\u00b8rn",
                " blazingly",
                "-blocktrans",
                " blog",
                "@@ -93,3 +89,2 @@ callables",
                " camelCase",
                "-capfirst",
                " cardinality",
                "@@ -98,3 +93,2 @@ centroid",
                " changelist",
                "-changepassword",
                " changeset",
                "@@ -107,3 +101,2 @@ checksums",
                " clearable",
                "-clearsessions",
                " clickable",
                "@@ -116,3 +109,2 @@ codenamed",
                " coercible",
                "-collectstatic",
                " commenters",
                "@@ -120,3 +112,2 @@ committer",
                " committers",
                "-compilemessages",
                " concat",
                "@@ -124,3 +115,2 @@ conf",
                " config",
                "-ContentType",
                " contenttypes",
                "@@ -128,6 +118,2 @@ contrib",
                " covariance",
                "-coveredby",
                "-createcachetable",
                "-createdb",
                "-createsuperuser",
                " criticals",
                "@@ -156,4 +142,2 @@ datatype",
                " datetimes",
                "-dbshell",
                "-de",
                " Debian",
                "@@ -179,6 +163,3 @@ dictConfig",
                " dicts",
                "-dictsort",
                "-dictsortreversed",
                " diff",
                "-diffsettings",
                " Dimensionally",
                "@@ -189,5 +170,3 @@ Disqus",
                " distro",
                "-divisibleby",
                " Django",
                "-djangojs",
                " djangoproject",
                "@@ -207,5 +186,3 @@ dropdowns",
                " drupal",
                "-dumpdata",
                " Dunck",
                "-dwithin",
                " editability",
                "@@ -214,6 +191,4 @@ encodings",
                " Endian",
                "-endswith",
                " Enero",
                " environ",
                "-escapejs",
                " esque",
                "@@ -225,3 +200,2 @@ extensibility",
                " Facebook",
                "-facto",
                " fallback",
                "@@ -235,8 +209,5 @@ filename",
                " filenames",
                "-filesizeformat",
                " filesystem",
                " filesystems",
                "-findstatic",
                " Firesheep",
                "-firstof",
                " fk",
                "@@ -245,3 +216,2 @@ flatpages",
                " Flatpages",
                "-floatformat",
                " followup",
                "@@ -305,8 +275,4 @@ https",
                " hyperlinks",
                "-icontains",
                " ie",
                "-iendswith",
                " ies",
                "-iexact",
                "-ifchanged",
                " iframe",
                "@@ -321,6 +287,4 @@ inline",
                " inlines",
                "-inspectdb",
                " Instagram",
                " instantiation",
                "-intcomma",
                " interdependencies",
                "@@ -329,3 +293,2 @@ interoperability",
                " intranet",
                "-intword",
                " ip",
                "@@ -335,9 +298,4 @@ IPython",
                " irc",
                "-iregex",
                "-iriencode",
                " ise",
                "-isempty",
                "-isnull",
                " iso",
                "-istartswith",
                " iterable",
                "@@ -345,3 +303,2 @@ iterables",
                " iteratively",
                "-itunes",
                " iTunes",
                "@@ -364,3 +321,2 @@ lawrence",
                " lexer",
                "-lhs",
                " lifecycle",
                "@@ -368,5 +324,2 @@ lifecycles",
                " linearize",
                "-linebreaks",
                "-linebreaksbr",
                "-linenumbers",
                " linestring",
                "@@ -375,4 +328,2 @@ linter",
                " Livni",
                "-ljust",
                "-loaddata",
                " localflavor",
                "@@ -397,4 +348,2 @@ macOS",
                " Magee",
                "-makemessages",
                "-makemigrations",
                " Mako",
                "@@ -454,4 +403,2 @@ Nanggroe",
                " natively",
                "-naturalday",
                "-naturaltime",
                " nd",
                "@@ -469,3 +416,2 @@ OGC",
                " OGR",
                "-ogrinspect",
                " oldforms",
                "@@ -544,3 +490,2 @@ preprocessing",
                " programmatically",
                "-projectname",
                " proxied",
                "@@ -601,3 +546,2 @@ releasers",
                " reloader",
                "-removetags",
                " renderer",
                "@@ -614,4 +558,2 @@ revalidate",
                " reverter",
                "-rhs",
                "-rjust",
                " roadmap",
                "@@ -619,5 +561,3 @@ Roald",
                " rss",
                "-runserver",
                " runtime",
                "-safeseq",
                " Sandvik",
                "@@ -632,6 +572,4 @@ screenshot",
                " screenshots",
                "-sdist",
                " semimajor",
                " semiminor",
                "-sendtestemail",
                " serializability",
                "@@ -640,3 +578,2 @@ serializer",
                " serializers",
                "-servlet",
                " sessionid",
                "@@ -647,3 +584,2 @@ shapefiles",
                " sharding",
                "-showmigrations",
                " sid",
                "@@ -656,3 +592,2 @@ sliceable",
                " slippy",
                "-slugify",
                " SMTP",
                "@@ -661,3 +596,2 @@ Solr",
                " sortable",
                "-spaceless",
                " spam",
                "@@ -667,6 +601,2 @@ Springmeyer",
                " SQL",
                "-sqlflush",
                "-sqlmigrate",
                "-sqlsequencereset",
                "-squashmigrations",
                " ssi",
                "@@ -674,5 +604,2 @@ SSL",
                " stacktrace",
                "-startapp",
                "-startproject",
                "-startswith",
                " startup",
                "@@ -685,4 +612,2 @@ stdout",
                " storages",
                "-stringformat",
                "-striptags",
                " stylesheet",
                "@@ -710,3 +635,2 @@ subquery",
                " subselect",
                "-substr",
                " substring",
                "@@ -738,3 +662,2 @@ templating",
                " testcase",
                "-testserver",
                " textarea",
                "@@ -744,3 +667,2 @@ Thejaswi",
                " This'll",
                "-timedelta",
                " timeframe",
                "@@ -749,3 +671,2 @@ timelines",
                " timesaving",
                "-timesince",
                " timestamp",
                "@@ -753,3 +674,2 @@ timestamped",
                " timestamps",
                "-timeuntil",
                " timezones",
                "@@ -772,4 +692,2 @@ trigram",
                " trigrams",
                "-truncatechars",
                "-truncatewords",
                " tuple",
                "@@ -804,7 +722,4 @@ uninstall",
                " uninstalling",
                "-uninstalls",
                " unioning",
                " uniterated",
                "-unittest",
                "-unittests",
                " unlocalize",
                "@@ -833,7 +748,3 @@ uppercased",
                " url",
                "-urlencode",
                "-urlize",
                "-urlizetrunc",
                " urljoins",
                "-urllib",
                " urlpatterns",
                "@@ -865,3 +776,2 @@ virtualized",
                " Weblog",
                "-whatsnext",
                " whitelist",
                "@@ -871,3 +781,2 @@ whitespaces",
                " whizbang",
                "-widthratio",
                " wiki",
                "@@ -878,4 +787,2 @@ Willison",
                " wontfix",
                "-wordcount",
                "-wordwrap",
                " workflow",
                "@@ -889,3 +796,2 @@ XSS",
                " xxxxx",
                "-yesno",
                " Zope"
            ],
            "changed_files": [
                "docs/spelling_wordlist"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4263cd0e095c55a1011e5bf0746d651126a8da5f",
            "repository": "https://github.com/django/django",
            "timestamp": 1533138501,
            "hunks": 1,
            "message": "Simplified comment in BooleanField.to_python().",
            "diff": [
                "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py",
                "index 50d22bef0c..dbadfc6c90 100644",
                "--- a/django/db/models/fields/__init__.py",
                "+++ b/django/db/models/fields/__init__.py",
                "@@ -1000,4 +1000,3 @@ class BooleanField(Field):",
                "         if value in (True, False):",
                "-            # if value is 1 or 0 than it's equal to True or False, but we want",
                "-            # to return a true bool for semantic reasons.",
                "+            # 1/0 are equal to True/False. bool() converts former to latter.",
                "             return bool(value)"
            ],
            "changed_files": [
                "django/db/models/fields/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c26f001967a546165c03f06e19ae2423999fd639",
            "repository": "https://github.com/django/django",
            "timestamp": 1531730900,
            "hunks": 1,
            "message": "[2.0.x] Fixed django/http/request.py docstring typo. Backport of 93e721a0b8155470336357c148c4d8364c36bbee from master",
            "diff": [
                "diff --git a/django/http/request.py b/django/http/request.py",
                "index 28eae377a9..d51c325ee5 100644",
                "--- a/django/http/request.py",
                "+++ b/django/http/request.py",
                "@@ -160,3 +160,3 @@ class HttpRequest:",
                "         Build an absolute URI from the location and the variables available in",
                "-        this request. If no ``location`` is specified, bulid the absolute URI",
                "+        this request. If no ``location`` is specified, build the absolute URI",
                "         using request.get_full_path(). If the location is absolute, convert it"
            ],
            "changed_files": [
                "django/http/request.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.10",
                "2.0.11",
                "2.0.12",
                "2.0.13",
                "2.0.8",
                "2.0.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3f429e1955fc6377d25e1e3bfbca08426215e37d",
            "repository": "https://github.com/django/django",
            "timestamp": 1533135987,
            "hunks": 1,
            "message": "[2.1.x] Post-release version bump.",
            "diff": [
                "diff --git a/django/__init__.py b/django/__init__.py",
                "index 55aef9d465..8a41b6fa92 100644",
                "--- a/django/__init__.py",
                "+++ b/django/__init__.py",
                "@@ -2,3 +2,3 @@ from django.utils.version import get_version",
                "-VERSION = (2, 1, 0, 'final', 0)",
                "+VERSION = (2, 1, 1, 'alpha', 0)"
            ],
            "changed_files": [
                "django/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5f62efb5c860d527abec94682c0961322e93b1f0",
            "repository": "https://github.com/django/django",
            "timestamp": 1533051158,
            "hunks": 68,
            "message": "[2.1.x] Removed code terms from docs/spelling_wordlist. Backport of b4fa94aed8ec5209176c9fa88aba3eacdca837f3 from master",
            "diff": [
                "diff --git a/docs/spelling_wordlist b/docs/spelling_wordlist",
                "index b56a09473a..e25feeba2f 100644",
                "--- a/docs/spelling_wordlist",
                "+++ b/docs/spelling_wordlist",
                "@@ -4,3 +4,2 @@ accessors",
                " Aceh",
                "-addslashes",
                " admin",
                "@@ -51,4 +50,2 @@ balancer",
                " basename",
                "-bbcontains",
                "-bboverlaps",
                " Bcc",
                "@@ -65,3 +62,2 @@ Bj\u00c3\u00b8rn",
                " blazingly",
                "-blocktrans",
                " blog",
                "@@ -90,3 +86,2 @@ callables",
                " camelCase",
                "-capfirst",
                " cardinality",
                "@@ -95,3 +90,2 @@ centroid",
                " changelist",
                "-changepassword",
                " changeset",
                "@@ -104,3 +98,2 @@ checksums",
                " clearable",
                "-clearsessions",
                " clickable",
                "@@ -113,3 +106,2 @@ codenamed",
                " coercible",
                "-collectstatic",
                " commenters",
                "@@ -117,3 +109,2 @@ committer",
                " committers",
                "-compilemessages",
                " concat",
                "@@ -121,3 +112,2 @@ conf",
                " config",
                "-ContentType",
                " contenttypes",
                "@@ -125,6 +115,2 @@ contrib",
                " covariance",
                "-coveredby",
                "-createcachetable",
                "-createdb",
                "-createsuperuser",
                " criticals",
                "@@ -153,4 +139,2 @@ datatype",
                " datetimes",
                "-dbshell",
                "-de",
                " Debian",
                "@@ -176,6 +160,3 @@ dictConfig",
                " dicts",
                "-dictsort",
                "-dictsortreversed",
                " diff",
                "-diffsettings",
                " Dimensionally",
                "@@ -186,5 +167,3 @@ Disqus",
                " distro",
                "-divisibleby",
                " Django",
                "-djangojs",
                " djangoproject",
                "@@ -204,5 +183,3 @@ dropdowns",
                " drupal",
                "-dumpdata",
                " Dunck",
                "-dwithin",
                " editability",
                "@@ -211,6 +188,4 @@ encodings",
                " Endian",
                "-endswith",
                " Enero",
                " environ",
                "-escapejs",
                " esque",
                "@@ -222,3 +197,2 @@ extensibility",
                " Facebook",
                "-facto",
                " fallback",
                "@@ -232,8 +206,5 @@ filename",
                " filenames",
                "-filesizeformat",
                " filesystem",
                " filesystems",
                "-findstatic",
                " Firesheep",
                "-firstof",
                " fk",
                "@@ -242,3 +213,2 @@ flatpages",
                " Flatpages",
                "-floatformat",
                " followup",
                "@@ -302,8 +272,4 @@ https",
                " hyperlinks",
                "-icontains",
                " ie",
                "-iendswith",
                " ies",
                "-iexact",
                "-ifchanged",
                " iframe",
                "@@ -318,6 +284,4 @@ inline",
                " inlines",
                "-inspectdb",
                " Instagram",
                " instantiation",
                "-intcomma",
                " interdependencies",
                "@@ -326,3 +290,2 @@ interoperability",
                " intranet",
                "-intword",
                " ip",
                "@@ -332,9 +295,4 @@ IPython",
                " irc",
                "-iregex",
                "-iriencode",
                " ise",
                "-isempty",
                "-isnull",
                " iso",
                "-istartswith",
                " iterable",
                "@@ -342,3 +300,2 @@ iterables",
                " iteratively",
                "-itunes",
                " iTunes",
                "@@ -361,3 +318,2 @@ lawrence",
                " lexer",
                "-lhs",
                " lifecycle",
                "@@ -365,5 +321,2 @@ lifecycles",
                " linearize",
                "-linebreaks",
                "-linebreaksbr",
                "-linenumbers",
                " linestring",
                "@@ -372,4 +325,2 @@ linter",
                " Livni",
                "-ljust",
                "-loaddata",
                " localflavor",
                "@@ -394,4 +345,2 @@ macOS",
                " Magee",
                "-makemessages",
                "-makemigrations",
                " Mako",
                "@@ -451,4 +400,2 @@ Nanggroe",
                " natively",
                "-naturalday",
                "-naturaltime",
                " nd",
                "@@ -466,3 +413,2 @@ OGC",
                " OGR",
                "-ogrinspect",
                " oldforms",
                "@@ -541,3 +487,2 @@ preprocessing",
                " programmatically",
                "-projectname",
                " proxied",
                "@@ -598,3 +543,2 @@ releasers",
                " reloader",
                "-removetags",
                " renderer",
                "@@ -611,4 +555,2 @@ revalidate",
                " reverter",
                "-rhs",
                "-rjust",
                " roadmap",
                "@@ -616,5 +558,3 @@ Roald",
                " rss",
                "-runserver",
                " runtime",
                "-safeseq",
                " Sandvik",
                "@@ -629,6 +569,4 @@ screenshot",
                " screenshots",
                "-sdist",
                " semimajor",
                " semiminor",
                "-sendtestemail",
                " serializability",
                "@@ -637,3 +575,2 @@ serializer",
                " serializers",
                "-servlet",
                " sessionid",
                "@@ -644,3 +581,2 @@ shapefiles",
                " sharding",
                "-showmigrations",
                " sid",
                "@@ -653,3 +589,2 @@ sliceable",
                " slippy",
                "-slugify",
                " SMTP",
                "@@ -658,3 +593,2 @@ Solr",
                " sortable",
                "-spaceless",
                " spam",
                "@@ -664,6 +598,2 @@ Springmeyer",
                " SQL",
                "-sqlflush",
                "-sqlmigrate",
                "-sqlsequencereset",
                "-squashmigrations",
                " ssi",
                "@@ -671,5 +601,2 @@ SSL",
                " stacktrace",
                "-startapp",
                "-startproject",
                "-startswith",
                " startup",
                "@@ -682,4 +609,2 @@ stdout",
                " storages",
                "-stringformat",
                "-striptags",
                " stylesheet",
                "@@ -707,3 +632,2 @@ subquery",
                " subselect",
                "-substr",
                " substring",
                "@@ -735,3 +659,2 @@ templating",
                " testcase",
                "-testserver",
                " textarea",
                "@@ -741,3 +664,2 @@ Thejaswi",
                " This'll",
                "-timedelta",
                " timeframe",
                "@@ -746,3 +668,2 @@ timelines",
                " timesaving",
                "-timesince",
                " timestamp",
                "@@ -750,3 +671,2 @@ timestamped",
                " timestamps",
                "-timeuntil",
                " timezones",
                "@@ -769,4 +689,2 @@ trigram",
                " trigrams",
                "-truncatechars",
                "-truncatewords",
                " tuple",
                "@@ -801,7 +719,4 @@ uninstall",
                " uninstalling",
                "-uninstalls",
                " unioning",
                " uniterated",
                "-unittest",
                "-unittests",
                " unlocalize",
                "@@ -830,7 +745,3 @@ uppercased",
                " url",
                "-urlencode",
                "-urlize",
                "-urlizetrunc",
                " urljoins",
                "-urllib",
                " urlpatterns",
                "@@ -862,3 +773,2 @@ virtualized",
                " Weblog",
                "-whatsnext",
                " whitelist",
                "@@ -868,3 +778,2 @@ whitespaces",
                " whizbang",
                "-widthratio",
                " wiki",
                "@@ -875,4 +784,2 @@ Willison",
                " wontfix",
                "-wordcount",
                "-wordwrap",
                " workflow",
                "@@ -886,3 +793,2 @@ XSS",
                " xxxxx",
                "-yesno",
                " Zope"
            ],
            "changed_files": [
                "docs/spelling_wordlist"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1",
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "55b6f7af0c6ab7f25818445cfbb9e18ddafedcc9",
            "repository": "https://github.com/django/django",
            "timestamp": 1532033303,
            "hunks": 4,
            "message": "Completed test coverage for django.urls.utils.get_callable().",
            "diff": [
                "diff --git a/tests/urlpatterns_reverse/tests.py b/tests/urlpatterns_reverse/tests.py",
                "index 6112953d45..037182f756 100644",
                "--- a/tests/urlpatterns_reverse/tests.py",
                "+++ b/tests/urlpatterns_reverse/tests.py",
                "@@ -1139,16 +1139,41 @@ class ViewLoadingTests(SimpleTestCase):",
                "         self.assertEqual(get_callable('urlpatterns_reverse.views.empty_view'), empty_view)",
                "-",
                "-        # passing a callable should return the callable",
                "         self.assertEqual(get_callable(empty_view), empty_view)",
                "-    def test_exceptions(self):",
                "-        # A missing view (identified by an AttributeError) should raise",
                "-        # ViewDoesNotExist, ...",
                "-        with self.assertRaisesMessage(ViewDoesNotExist, \"View does not exist in\"):",
                "+    def test_view_does_not_exist(self):",
                "+        msg = \"View does not exist in module urlpatterns_reverse.views.\"",
                "+        with self.assertRaisesMessage(ViewDoesNotExist, msg):",
                "             get_callable('urlpatterns_reverse.views.i_should_not_exist')",
                "-        # ... but if the AttributeError is caused by something else don't",
                "-        # swallow it.",
                "-        with self.assertRaises(AttributeError):",
                "+",
                "+    def test_attributeerror_not_hidden(self):",
                "+        msg = 'I am here to confuse django.urls.get_callable'",
                "+        with self.assertRaisesMessage(AttributeError, msg):",
                "             get_callable('urlpatterns_reverse.views_broken.i_am_broken')",
                "+    def test_non_string_value(self):",
                "+        msg = \"'1' is not a callable or a dot-notation path\"",
                "+        with self.assertRaisesMessage(ViewDoesNotExist, msg):",
                "+            get_callable(1)",
                "+",
                "+    def test_string_without_dot(self):",
                "+        msg = \"Could not import 'test'. The path must be fully qualified.\"",
                "+        with self.assertRaisesMessage(ImportError, msg):",
                "+            get_callable('test')",
                "+",
                "+    def test_module_does_not_exist(self):",
                "+        with self.assertRaisesMessage(ImportError, \"No module named 'foo'\"):",
                "+            get_callable('foo.bar')",
                "+",
                "+    def test_parent_module_does_not_exist(self):",
                "+        msg = 'Parent module urlpatterns_reverse.foo does not exist.'",
                "+        with self.assertRaisesMessage(ViewDoesNotExist, msg):",
                "+            get_callable('urlpatterns_reverse.foo.bar')",
                "+",
                "+    def test_not_callable(self):",
                "+        msg = (",
                "+            \"Could not import 'urlpatterns_reverse.tests.resolve_test_data'. \"",
                "+            \"View is not callable.\"",
                "+        )",
                "+        with self.assertRaisesMessage(ViewDoesNotExist, msg):",
                "+            get_callable('urlpatterns_reverse.tests.resolve_test_data')",
                "+"
            ],
            "changed_files": [
                "tests/urlpatterns_reverse/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8edb27b6c6d5d9e4f3ad95a91254588616854d16",
            "repository": "https://github.com/django/django",
            "timestamp": 1533049201,
            "hunks": 23,
            "message": "Added words to docs/spelling_wordlist for Ubuntu 18.04.",
            "diff": [
                "diff --git a/docs/spelling_wordlist b/docs/spelling_wordlist",
                "index 8dae909931..6dde2732af 100644",
                "--- a/docs/spelling_wordlist",
                "+++ b/docs/spelling_wordlist",
                "@@ -20,4 +20,6 @@ appname",
                " apps",
                "-architected",
                " arccosine",
                "+architected",
                "+arcsine",
                "+arctangent",
                " arg",
                "@@ -72,2 +74,3 @@ Bokm\u00c3\u00a5l",
                " bolded",
                "+Bonham",
                " bookmarklet",
                "@@ -110,2 +113,4 @@ codebase",
                " codec",
                "+codename",
                "+codenamed",
                " coercible",
                "@@ -122,2 +127,3 @@ contenttypes",
                " contrib",
                "+covariance",
                " coveredby",
                "@@ -160,2 +166,4 @@ deduplicates",
                " deepcopy",
                "+deferrable",
                "+deprecations",
                " deserialization",
                "@@ -165,2 +173,3 @@ deserializer",
                " deserializing",
                "+deterministically",
                " Deutsch",
                "@@ -305,2 +314,3 @@ inbox",
                " incrementing",
                "+indexable",
                " indices",
                "@@ -334,2 +344,3 @@ iterable",
                " iterables",
                "+iteratively",
                " itunes",
                "@@ -362,2 +373,3 @@ linestring",
                " linework",
                "+linter",
                " Livni",
                "@@ -377,2 +389,3 @@ loopback",
                " lorem",
                "+lossy",
                " lowercased",
                "@@ -427,2 +440,3 @@ multithreaded",
                " multithreading",
                "+multivalued",
                " Mumbai",
                "@@ -448,2 +462,3 @@ nginx",
                " noding",
                "+nonnegative",
                " nonspatial",
                "@@ -468,2 +483,5 @@ outfile",
                " paginator",
                "+parallelization",
                "+parallelized",
                "+parameterization",
                " parameterized",
                "@@ -471,2 +489,3 @@ params",
                " parens",
                "+parsers",
                " Pawe\u00c5\u0082",
                "@@ -521,2 +540,3 @@ prepopulates",
                " preprocess",
                "+preprocessed",
                " preprocesses",
                "@@ -546,2 +566,4 @@ quoteless",
                " Radziej",
                "+raster",
                "+rasters",
                " rc",
                "@@ -638,2 +660,3 @@ solaris",
                " Solr",
                "+sortable",
                " spaceless",
                "@@ -683,2 +706,3 @@ submodules",
                " subpath",
                "+subprocesses",
                " subqueries",
                "@@ -746,2 +770,4 @@ triagers",
                " triaging",
                "+trigram",
                "+trigrams",
                " truncatechars",
                "@@ -757,2 +783,3 @@ umask",
                " Unaccent",
                "+unannotated",
                " unapplied",
                "@@ -784,2 +811,3 @@ unlocalize",
                " unlocalized",
                "+unmaintained",
                " unmanaged",
                "@@ -803,2 +831,3 @@ untrusted",
                " unvalidated",
                "+uppercased",
                " url"
            ],
            "changed_files": [
                "docs/spelling_wordlist"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ec594942cdb0418b5b2ca493f7b8f0e3dd132912",
            "repository": "https://github.com/django/django",
            "timestamp": 1533392151,
            "hunks": 2,
            "message": "Removed unnecessary str() in mail tests. Unnecessary since their introduction in fa75b2cb512409116b6f1b5229d6f99074d8e452.",
            "diff": [
                "diff --git a/tests/mail/tests.py b/tests/mail/tests.py",
                "index 77e1378192..b2de5e4c10 100644",
                "--- a/tests/mail/tests.py",
                "+++ b/tests/mail/tests.py",
                "@@ -1146,3 +1146,3 @@ class ConsoleBackendTests(BaseEmailBackendTests, SimpleTestCase):",
                "         messages = self.stream.getvalue().split('\\n' + ('-' * 79) + '\\n')",
                "-        return [message_from_bytes(str(m).encode()) for m in messages if m]",
                "+        return [message_from_bytes(m.encode()) for m in messages if m]",
                "@@ -1155,3 +1155,3 @@ class ConsoleBackendTests(BaseEmailBackendTests, SimpleTestCase):",
                "         send_mail('Subject', 'Content', 'from@example.com', ['to@example.com'], connection=connection)",
                "-        message = str(s.getvalue().split('\\n' + ('-' * 79) + '\\n')[0]).encode()",
                "+        message = s.getvalue().split('\\n' + ('-' * 79) + '\\n')[0].encode()",
                "         self.assertMessageHasHeaders(message, {"
            ],
            "changed_files": [
                "tests/mail/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "756b859576503a5dae7886bd1f2bbc3fe56ee1f7",
            "repository": "https://github.com/django/django",
            "timestamp": 1533611571,
            "hunks": 5,
            "message": "Renamed django.utils.inspect.func_has_no_args() to method_has_no_args().",
            "diff": [
                "diff --git a/django/contrib/admindocs/views.py b/django/contrib/admindocs/views.py",
                "index ac7cd11f1f..a8875a9747 100644",
                "--- a/django/contrib/admindocs/views.py",
                "+++ b/django/contrib/admindocs/views.py",
                "@@ -19,4 +19,4 @@ from django.utils.decorators import method_decorator",
                " from django.utils.inspect import (",
                "-    func_accepts_kwargs, func_accepts_var_args, func_has_no_args,",
                "-    get_func_full_args,",
                "+    func_accepts_kwargs, func_accepts_var_args, get_func_full_args,",
                "+    method_has_no_args,",
                " )",
                "@@ -277,3 +277,3 @@ class ModelDetailView(BaseAdminDocsView):",
                "                     })",
                "-                elif func_has_no_args(func) and not func_accepts_kwargs(func) and not func_accepts_var_args(func):",
                "+                elif method_has_no_args(func) and not func_accepts_kwargs(func) and not func_accepts_var_args(func):",
                "                     fields.append({",
                "diff --git a/django/utils/inspect.py b/django/utils/inspect.py",
                "index 355cac48f3..15cd7fbc45 100644",
                "--- a/django/utils/inspect.py",
                "+++ b/django/utils/inspect.py",
                "@@ -52,5 +52,6 @@ def func_accepts_var_args(func):",
                "-def func_has_no_args(func):",
                "+def method_has_no_args(meth):",
                "+    \"\"\"Return True if a method only accepts 'self'.\"\"\"",
                "     args = [",
                "-        p for p in inspect.signature(func).parameters.values()",
                "+        p for p in inspect.signature(meth).parameters.values()",
                "         if p.kind == p.POSITIONAL_OR_KEYWORD",
                "diff --git a/tests/utils_tests/test_inspect.py b/tests/utils_tests/test_inspect.py",
                "index 7464a9226d..dce8f95ecf 100644",
                "--- a/tests/utils_tests/test_inspect.py",
                "+++ b/tests/utils_tests/test_inspect.py",
                "@@ -35 +35,5 @@ class TestInspectMethods(unittest.TestCase):",
                "         self.assertIs(inspect.func_accepts_var_args(Person.one_argument), False)",
                "+",
                "+    def test_method_has_no_args(self):",
                "+        self.assertIs(inspect.method_has_no_args(Person.no_arguments), True)",
                "+        self.assertIs(inspect.method_has_no_args(Person.one_argument), False)"
            ],
            "changed_files": [
                "django/contrib/admindocs/views.py",
                "django/utils/inspect.py",
                "tests/utils_tests/test_inspect.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "734e2c65ae54552b61ad34105ba4debe936fe223",
            "repository": "https://github.com/django/django",
            "timestamp": 1533068275,
            "hunks": 414,
            "message": "[2.1.x] Updated core translations from Transifex",
            "diff": [
                "diff --git a/django/conf/locale/az/LC_MESSAGES/django.mo b/django/conf/locale/az/LC_MESSAGES/django.mo",
                "index 9f7fd2ba6f..5d42c5a0d5 100644",
                "Binary files a/django/conf/locale/az/LC_MESSAGES/django.mo and b/django/conf/locale/az/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/az/LC_MESSAGES/django.po b/django/conf/locale/az/LC_MESSAGES/django.po",
                "index 313c304082..0b5f9740d1 100644",
                "--- a/django/conf/locale/az/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/az/LC_MESSAGES/django.po",
                "@@ -3,2 +3,3 @@",
                " # Translators:",
                "+# Emin Mastizada <emin@linux.com>, 2018",
                " # Emin Mastizada <emin@linux.com>, 2015-2016",
                "@@ -9,4 +10,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 01:13+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 00:21+0000\\n\"",
                " \"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "@@ -161,2 +162,5 @@ msgstr \"G\u00c3\u00bcrc\u00c3\u00bcc\u00c9\u0099\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabile\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -297,9 +301,9 @@ msgstr \"Sindikasiya\"",
                " msgid \"That page number is not an integer\"",
                "-msgstr \"\"",
                "+msgstr \"S\u00c9\u0099hif\u00c9\u0099 n\u00c3\u00b6mr\u00c9\u0099si r\u00c9\u0099q\u00c9\u0099m deyil\"",
                " msgid \"That page number is less than 1\"",
                "-msgstr \"\"",
                "+msgstr \"S\u00c9\u0099hif\u00c9\u0099 n\u00c3\u00b6mr\u00c9\u0099si 1-d\u00c9\u0099n balacad\u00c4\u00b1r\"",
                " msgid \"That page contains no results\"",
                "-msgstr \"\"",
                "+msgstr \"S\u00c9\u0099hif\u00c9\u0099d\u00c9\u0099 n\u00c9\u0099tic\u00c9\u0099 yoxdur\"",
                "@@ -385,2 +389,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00c6\u008fd\u00c9\u0099d daxil edin.\"",
                "+",
                " #, python-format",
                "@@ -410,5 +417,7 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"'%(extension)s' fayl uzant\u00c4\u00b1s\u00c4\u00b1na icaz\u00c9\u0099 verilmir. \u00c4\u00b0caz\u00c9\u0099 veril\u00c9\u0099n fayl \"",
                "+\"uzant\u00c4\u00b1lar\u00c4\u00b1: '%(allowed_extensions)s'\"",
                " msgid \"Null characters are not allowed.\"",
                "-msgstr \"\"",
                "+msgstr \"Null simvollara icaz\u00c9\u0099 verilmir.\"",
                "@@ -462,2 +471,6 @@ msgstr \"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri True v\u00c9\u0099 ya False olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -477,4 +490,3 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri s\u00c9\u0099hv tarix format\u00c4\u00b1ndad\u00c4\u00b1r. Bu \u00c4\u00b0\u00c4\u00b0\u00c4\u00b0\u00c4\u00b0-AA-GG format\u00c4\u00b1nda \"",
                "-\"olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "+\"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri s\u00c9\u0099hv tarix format\u00c4\u00b1ndad\u00c4\u00b1r. Format\u00c4\u00b1 YYYY-MM-DD olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -485,3 +497,3 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"'%(value)s d\u00c9\u0099y\u00c9\u0099ri d\u00c3\u00bczg\u00c3\u00bcn formatdad\u00c4\u00b1r (\u00c4\u00b0\u00c4\u00b0\u00c4\u00b0\u00c4\u00b0-AA-GG) amma bu x\u00c9\u0099tal\u00c4\u00b1 tarixdir.\"",
                "+\"'%(value)s d\u00c9\u0099y\u00c9\u0099ri d\u00c3\u00bczg\u00c3\u00bcn formatdad\u00c4\u00b1r (YYYY-MM-DD) amma bu x\u00c9\u0099tal\u00c4\u00b1 tarixdir.\"",
                "@@ -495,2 +507,4 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"'%(value)s' d\u00c9\u0099y\u00c9\u0099rinin format\u00c4\u00b1 s\u00c9\u0099hvdir. Format\u00c4\u00b1 YYYY-MM-DD HH:MM[:ss[.uuuuuu]]\"",
                "+\"[TZ] olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -501,2 +515,4 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"'%(value)s' d\u00c9\u0099y\u00c9\u0099rinin format\u00c4\u00b1 d\u00c3\u00bczg\u00c3\u00bcnd\u00c3\u00bcr (YYYY-MM-DD HH:MM[:ss[.uuuuuu]][TZ]) \"",
                "+\"ancaq tarix s\u00c9\u0099hvdir.\"",
                "@@ -507,3 +523,3 @@ msgstr \"Tarix (vaxt il\u00c9\u0099)\"",
                " msgid \"'%(value)s' value must be a decimal number.\"",
                "-msgstr \"\"",
                "+msgstr \"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri decimal r\u00c9\u0099q\u00c9\u0099m olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -517,2 +533,4 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"'%(value)s' d\u00c9\u0099y\u00c9\u0099rinin format\u00c4\u00b1 s\u00c9\u0099hvdir. Format\u00c4\u00b1 [DD] [HH:[MM:]]ss[.uuuuuu] \"",
                "+\"olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -529,3 +547,3 @@ msgstr \"Fayl\u00c4\u00b1n \u00c3\u00bcnvan\u00c4\u00b1\"",
                " msgid \"'%(value)s' value must be a float.\"",
                "-msgstr \"\"",
                "+msgstr \"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri float olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -542,3 +560,3 @@ msgstr \"IP \u00c3\u00bcnvan\"",
                " msgid \"'%(value)s' value must be either None, True or False.\"",
                "-msgstr \"\"",
                "+msgstr \"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri None, True v\u00c9\u0099 ya False olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -568,2 +586,3 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"'%(value)s' d\u00c9\u0099y\u00c9\u0099rinin format\u00c4\u00b1 s\u00c9\u0099hvdir. Format\u00c4\u00b1 HH:MM[:ss[.uuuuuu]] olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -574,2 +593,4 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri d\u00c3\u00bczg\u00c3\u00bcn formatdad\u00c4\u00b1r (HH:MM[:ss[.uuuuuu]]), ancaq vaxt\u00c4\u00b1 \"",
                "+\"s\u00c9\u0099hvdir.\"",
                "@@ -582,3 +603,3 @@ msgstr \"URL\"",
                " msgid \"Raw binary data\"",
                "-msgstr \"\"",
                "+msgstr \"D\u00c3\u00bcz ikili (binary) m\u00c9\u0099lumat\"",
                "@@ -596,3 +617,3 @@ msgstr \"\u00c5\u009e\u00c9\u0099kil\"",
                " msgid \"%(model)s instance with %(field)s %(value)r does not exist.\"",
                "-msgstr \"\"",
                "+msgstr \"%(field)s d\u00c9\u0099y\u00c9\u0099ri %(value)r olan %(model)s m\u00c3\u00b6vcud deyil.\"",
                "@@ -606,3 +627,3 @@ msgstr \"Birin-bir\u00c9\u0099 m\u00c3\u00bcnasib\u00c9\u0099t\"",
                " msgid \"%(from)s-%(to)s relationship\"",
                "-msgstr \"\"",
                "+msgstr \"%(from)s-%(to)s \u00c9\u0099laq\u00c9\u0099si\"",
                "@@ -610,3 +631,3 @@ msgstr \"\"",
                " msgid \"%(from)s-%(to)s relationships\"",
                "-msgstr \"\"",
                "+msgstr \"%(from)s-%(to)s \u00c9\u0099laq\u00c9\u0099l\u00c9\u0099ri\"",
                "@@ -627,5 +648,2 @@ msgstr \"Tam \u00c9\u0099d\u00c9\u0099d daxil edin.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00c6\u008fd\u00c9\u0099d daxil edin.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -642,2 +660,6 @@ msgstr \"Ke\u00c3\u00a7\u00c9\u0099rli m\u00c3\u00bcdd\u00c9\u0099t daxil edin.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -656,3 +678,5 @@ msgid_plural \"\"",
                " msgstr[0] \"\"",
                "+\"Bu fayl ad\u00c4\u00b1n\u00c4\u00b1n \u00c9\u0099n \u00c3\u00a7ox %(max)d simvol oldu\u00c4\u009funa \u00c9\u0099min olun (%(length)d var).\"",
                " msgstr[1] \"\"",
                "+\"Bu fayl ad\u00c4\u00b1n\u00c4\u00b1n \u00c9\u0099n \u00c3\u00a7ox %(max)d simvol oldu\u00c4\u009funa \u00c9\u0099min olun (%(length)d var).\"",
                "@@ -691,3 +715,3 @@ msgstr \"(Gizli %(name)s sah\u00c9\u0099si) %(error)s\"",
                " msgid \"ManagementForm data is missing or has been tampered with\"",
                "-msgstr \"\"",
                "+msgstr \"ManagementForm m\u00c9\u0099lumatlar\u00c4\u00b1 \u00c9\u0099ksikdir v\u00c9\u0099 ya korlan\u00c4\u00b1b\"",
                "@@ -733,3 +757,3 @@ msgstr \"A\u00c5\u009fa\u00c4\u009f\u00c4\u00b1da t\u00c9\u0099krarlanan qiym\u00c9\u0099tl\u00c9\u0099r\u00c9\u0099 d\u00c3\u00bcz\u00c9\u0099li\u00c5\u009f edin.\"",
                " msgid \"The inline value did not match the parent instance.\"",
                "-msgstr \"\"",
                "+msgstr \"S\u00c9\u0099tiri\u00c3\u00a7i d\u00c9\u0099y\u00c9\u0099r ana n\u00c3\u00bcsx\u00c9\u0099y\u00c9\u0099 uy\u00c4\u009fun deyil.\"",
                "@@ -740,3 +764,3 @@ msgstr \"D\u00c3\u00bczg\u00c3\u00bcn se\u00c3\u00a7im edin. Bu se\u00c3\u00a7im m\u00c3\u00bcmk\u00c3\u00bcn deyil.\"",
                " msgid \"\\\"%(pk)s\\\" is not a valid value.\"",
                "-msgstr \"\"",
                "+msgstr \"\\\"%(pk)s\\\" d\u00c3\u00bczg\u00c3\u00bcn d\u00c9\u0099y\u00c9\u0099r deyil.\"",
                "@@ -1091,2 +1115,5 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Bu HTTPS sayt s\u00c9\u0099yyah\u00c4\u00b1n\u00c4\u00b1z t\u00c9\u0099r\u00c9\u0099find\u00c9\u0099n 'Referer header' g\u00c3\u00b6nd\u00c9\u0099rilm\u00c9\u0099sini t\u00c9\u0099l\u00c9\u0099b \"",
                "+\"edir, amma g\u00c3\u00b6nd\u00c9\u0099rilmir. Bu ba\u00c5\u009fl\u00c4\u00b1q s\u00c9\u0099yyah\u00c4\u00b1n\u00c4\u00b1z\u00c4\u00b1n \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcnc\u00c3\u00bc biri t\u00c9\u0099r\u00c9\u0099find\u00c9\u0099n hack-\"",
                "+\"l\u00c9\u0099nm\u00c9\u0099diyin\u00c9\u0099 \u00c9\u0099min olmaq \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn istifad\u00c9\u0099 edilir.\"",
                "@@ -1097,2 +1124,5 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00c6\u008fg\u00c9\u0099r s\u00c9\u0099yyah\u00c4\u00b1n\u00c4\u00b1z\u00c4\u00b1n 'Referer' ba\u00c5\u009fl\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n\u00c4\u00b1 g\u00c3\u00b6nd\u00c9\u0099rm\u00c9\u0099sini s\u00c3\u00b6nd\u00c3\u00bcrm\u00c3\u00bcs\u00c3\u00bcn\u00c3\u00bczs\u00c9\u0099, l\u00c3\u00bctf\u00c9\u0099n \"",
                "+\"bu sayt \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn, HTTPS \u00c9\u0099laq\u00c9\u0099l\u00c9\u0099r \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn v\u00c9\u0099 ya 'same-origin' sor\u00c4\u009fular \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn aktiv \"",
                "+\"edin.\"",
                "@@ -1105,2 +1135,7 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00c6\u008fg\u00c9\u0099r <meta name=\\\"referrer\\\" content=\\\"no-referrer\\\"> etiketini v\u00c9\u0099 ya \"",
                "+\"'Referrer-Policy: no-referrer' ba\u00c5\u009fl\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n\u00c4\u00b1 i\u00c5\u009fl\u00c9\u0099dirsinizs\u00c9\u0099, l\u00c3\u00bctf\u00c9\u0099n silin. CSRF \"",
                "+\"qoruma d\u00c9\u0099qiq y\u00c3\u00b6nl\u00c9\u0099ndir\u00c9\u0099n yoxlamas\u00c4\u00b1 \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn 'Referer' ba\u00c5\u009fl\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n\u00c4\u00b1 t\u00c9\u0099l\u00c9\u0099b edir. \u00c6\u008fg\u00c9\u0099r \"",
                "+\"m\u00c9\u0099xfilik \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn d\u00c3\u00bc\u00c5\u009f\u00c3\u00bcn\u00c3\u00bcrs\u00c3\u00bcn\u00c3\u00bczs\u00c9\u0099, \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcnc\u00c3\u00bc t\u00c9\u0099r\u00c9\u0099f sayt ke\u00c3\u00a7idl\u00c9\u0099ri \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn <a rel=\"",
                "+\"\\\"noreferrer\\\" ...> kimi bir alternativ i\u00c5\u009fl\u00c9\u0099din.\"",
                "@@ -1111,2 +1146,5 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Bu sayt formalar\u00c4\u00b1 g\u00c3\u00b6nd\u00c9\u0099rm\u00c9\u0099k \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn CSRF \u00c3\u00a7\u00c9\u0099r\u00c9\u0099zini i\u00c5\u009fl\u00c9\u0099dir. Bu \u00c3\u00a7\u00c9\u0099r\u00c9\u0099z \"",
                "+\"s\u00c9\u0099yyah\u00c4\u00b1n\u00c4\u00b1z\u00c4\u00b1n \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcnc\u00c3\u00bc biri t\u00c9\u0099r\u00c9\u0099find\u00c9\u0099n hack-l\u00c9\u0099nm\u00c9\u0099diyin\u00c9\u0099 \u00c9\u0099min olmaq \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn \"",
                "+\"istifad\u00c9\u0099 edilir. \"",
                "@@ -1116,2 +1154,4 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00c6\u008fg\u00c9\u0099r s\u00c9\u0099yyah\u00c4\u00b1n\u00c4\u00b1zda \u00c3\u00a7\u00c9\u0099r\u00c9\u0099zl\u00c9\u0099r s\u00c3\u00b6nd\u00c3\u00bcr\u00c3\u00bcl\u00c3\u00bcbs\u00c9\u0099, l\u00c3\u00bctf\u00c9\u0099n bu sayt v\u00c9\u0099 ya 'same-origin' \"",
                "+\"sor\u00c4\u009fular \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn aktiv edin.\"",
                "@@ -1124,3 +1164,3 @@ msgstr \"\u00c4\u00b0l g\u00c3\u00b6st\u00c9\u0099rilm\u00c9\u0099yib\"",
                " msgid \"Date out of range\"",
                "-msgstr \"\"",
                "+msgstr \"Tarix aral\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n xaricind\u00c9\u0099dir\"",
                "@@ -1178,3 +1218,3 @@ msgstr \"%(directory)s-nin indeksi\"",
                " msgid \"Django: the Web framework for perfectionists with deadlines.\"",
                "-msgstr \"\"",
                "+msgstr \"Django: t\u00c9\u0099l\u00c9\u0099s\u00c9\u0099n m\u00c3\u00bck\u00c9\u0099mm\u00c9\u0099ll\u00c9\u0099k\u00c3\u00a7il\u00c9\u0099r \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn Web framework.\"",
                "@@ -1185,5 +1225,8 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Django %(version)s \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn <a href=\\\"https://docs.djangoproject.com/en/\"",
                "+\"%(version)s/releases/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">burax\u00c4\u00b1l\u00c4\u00b1\u00c5\u009f \"",
                "+\"qeydl\u00c9\u0099rin\u00c9\u0099</a> bax\u00c4\u00b1n\"",
                " msgid \"The install worked successfully! Congratulations!\"",
                "-msgstr \"\"",
                "+msgstr \"Qurulu\u00c5\u009f u\u00c4\u009furla tamamland\u00c4\u00b1! T\u00c9\u0099brikl\u00c9\u0099r!\"",
                "@@ -1196,19 +1239,22 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"T\u00c9\u0099nziml\u00c9\u0099m\u00c9\u0099 fayl\u00c4\u00b1n\u00c4\u00b1zda <a href=\\\"https://docs.djangoproject.com/en/\"",
                "+\"%(version)s/ref/settings/#debug\\\" target=\\\"_blank\\\" rel=\\\"noopener\"",
                "+\"\\\">DEBUG=True</a> v\u00c9\u0099 he\u00c3\u00a7 bir URL qurmad\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n\u00c4\u00b1z \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn bu s\u00c9\u0099hif\u00c9\u0099ni g\u00c3\u00b6r\u00c3\u00bcrs\u00c3\u00bcn\u00c3\u00bcz.\"",
                " msgid \"Django Documentation\"",
                "-msgstr \"\"",
                "+msgstr \"Django S\u00c9\u0099n\u00c9\u0099dl\u00c9\u0099ri\"",
                " msgid \"Topics, references, &amp; how-to's\"",
                "-msgstr \"\"",
                "+msgstr \"M\u00c3\u00b6vzular, istinadlar v\u00c9\u0099 n\u00c3\u00bcmun\u00c9\u0099l\u00c9\u0099r\"",
                " msgid \"Tutorial: A Polling App\"",
                "-msgstr \"\"",
                "+msgstr \"M\u00c9\u0099\u00c5\u009f\u00c4\u009f\u00c9\u0099l\u00c9\u0099: S\u00c9\u0099sverm\u00c9\u0099 T\u00c9\u0099tbiqi\"",
                " msgid \"Get started with Django\"",
                "-msgstr \"\"",
                "+msgstr \"Django-ya ba\u00c5\u009fla\"",
                " msgid \"Django Community\"",
                "-msgstr \"\"",
                "+msgstr \"Django \u00c4\u00b0cmas\u00c4\u00b1\"",
                " msgid \"Connect, get help, or contribute\"",
                "-msgstr \"\"",
                "+msgstr \"Qo\u00c5\u009ful, k\u00c3\u00b6m\u00c9\u0099k al v\u00c9\u0099 d\u00c9\u0099st\u00c9\u0099k ol\"",
                "diff --git a/django/conf/locale/cs/LC_MESSAGES/django.mo b/django/conf/locale/cs/LC_MESSAGES/django.mo",
                "index 1949ece124..784bf33409 100644",
                "Binary files a/django/conf/locale/cs/LC_MESSAGES/django.mo and b/django/conf/locale/cs/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/cs/LC_MESSAGES/django.po b/django/conf/locale/cs/LC_MESSAGES/django.po",
                "index a2348f5e4b..8bf8bc65c9 100644",
                "--- a/django/conf/locale/cs/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/cs/LC_MESSAGES/django.po",
                "@@ -13,4 +13,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-06 20:09+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-15 18:02+0000\\n\"",
                " \"Last-Translator: Vl\u00c3\u00a1\u00c4\u008fa Macek <macek@sandbox.cz>\\n\"",
                "@@ -21,3 +21,4 @@ msgstr \"\"",
                " \"Language: cs\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n == 1 && n % 1 == 0) ? 0 : (n >= 2 && n \"",
                "+\"<= 4 && n % 1 == 0) ? 1: (n % 1 != 0 ) ? 2 : 3;\\n\"",
                "@@ -30,3 +31,3 @@ msgstr \"arabsky\"",
                " msgid \"Asturian\"",
                "-msgstr \"Asturian\"",
                "+msgstr \"astur\u00c5\u00a1tinou\"",
                "@@ -162,3 +163,3 @@ msgstr \"japonsky\"",
                " msgid \"Georgian\"",
                "-msgstr \"gruz\u00c3\u00adnsky\"",
                "+msgstr \"gruz\u00c3\u00adn\u00c5\u00a1tinou\"",
                "@@ -374,2 +375,4 @@ msgstr[2] \"\"",
                " \"Tato hodnota m\u00c3\u00a1 m\u00c3\u00adt nejm\u00c3\u00a9n\u00c4\u009b %(limit_value)d znak\u00c5\u00af (nyn\u00c3\u00ad m\u00c3\u00a1 %(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"Tato hodnota m\u00c3\u00a1 m\u00c3\u00adt nejm\u00c3\u00a9n\u00c4\u009b %(limit_value)d znak\u00c5\u00af (nyn\u00c3\u00ad m\u00c3\u00a1 %(show_value)d).\"",
                "@@ -388,2 +391,7 @@ msgstr[2] \"\"",
                " \"Tato hodnota m\u00c3\u00a1 m\u00c3\u00adt nejv\u00c3\u00bd\u00c5\u00a1e %(limit_value)d znak\u00c5\u00af (nyn\u00c3\u00ad m\u00c3\u00a1 %(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"Tato hodnota m\u00c3\u00a1 m\u00c3\u00adt nejv\u00c3\u00bd\u00c5\u00a1e %(limit_value)d znak\u00c5\u00af (nyn\u00c3\u00ad m\u00c3\u00a1 %(show_value)d).\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Zadejte \u00c4\u008d\u00c3\u00adslo.\"",
                "@@ -395,2 +403,3 @@ msgstr[1] \"Ujist\u00c4\u009bte se, \u00c5\u00bee pole neobsahuje celkem v\u00c3\u00adce ne\u00c5\u00be %(max)s \u00c4\u008d\u00c3\u00adslice",
                " msgstr[2] \"Ujist\u00c4\u009bte se, \u00c5\u00bee pole neobsahuje celkem v\u00c3\u00adce ne\u00c5\u00be %(max)s \u00c4\u008d\u00c3\u00adslic.\"",
                "+msgstr[3] \"Ujist\u00c4\u009bte se, \u00c5\u00bee pole neobsahuje celkem v\u00c3\u00adce ne\u00c5\u00be %(max)s \u00c4\u008d\u00c3\u00adslic.\"",
                "@@ -402,2 +411,3 @@ msgstr[1] \"Ujist\u00c4\u009bte se, \u00c5\u00bee pole neobsahuje v\u00c3\u00adce ne\u00c5\u00be %(max)s desetinn\u00c3\u00a1 m\u00c3\u00adst",
                " msgstr[2] \"Ujist\u00c4\u009bte se, \u00c5\u00bee pole neobsahuje v\u00c3\u00adce ne\u00c5\u00be %(max)s desetinn\u00c3\u00bdch m\u00c3\u00adst.\"",
                "+msgstr[3] \"Ujist\u00c4\u009bte se, \u00c5\u00bee pole neobsahuje v\u00c3\u00adce ne\u00c5\u00be %(max)s desetinn\u00c3\u00bdch m\u00c3\u00adst.\"",
                "@@ -417,2 +427,5 @@ msgstr[2] \"\"",
                " \"\u00c4\u008d\u00c3\u00a1rkou (te\u00c4\u008dkou).\"",
                "+msgstr[3] \"\"",
                "+\"Ujist\u00c4\u009bte se, \u00c5\u00bee hodnota neobsahuje v\u00c3\u00adce ne\u00c5\u00be %(max)s m\u00c3\u00adst p\u00c5\u0099ed desetinnou \"",
                "+\"\u00c4\u008d\u00c3\u00a1rkou (te\u00c4\u008dkou).\"",
                "@@ -480,2 +493,6 @@ msgstr \"Hodnota '%(value)s' mus\u00c3\u00ad b\u00c3\u00bdt bu\u00c4\u008f True nebo False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"Hodnota '%(value)s' mus\u00c3\u00ad b\u00c3\u00bdt bu\u00c4\u008f True, False nebo None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -654,5 +671,2 @@ msgstr \"Zadejte cel\u00c3\u00a9 \u00c4\u008d\u00c3\u00adslo.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Zadejte \u00c4\u008d\u00c3\u00adslo.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -669,2 +683,6 @@ msgstr \"Zadejte platnou d\u00c3\u00a9lku trv\u00c3\u00a1n\u00c3\u00ad.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Po\u00c4\u008det dn\u00c3\u00ad mus\u00c3\u00ad b\u00c3\u00bdt mezi {min_days} a {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -689,2 +707,4 @@ msgstr[2] \"\"",
                " \"Tento n\u00c3\u00a1zev souboru m\u00c3\u00a1 m\u00c3\u00adt nejv\u00c3\u00bd\u00c5\u00a1e %(max)d znak\u00c5\u00af (nyn\u00c3\u00ad m\u00c3\u00a1 %(length)d).\"",
                "+msgstr[3] \"\"",
                "+\"Tento n\u00c3\u00a1zev souboru m\u00c3\u00a1 m\u00c3\u00adt nejv\u00c3\u00bd\u00c5\u00a1e %(max)d znak\u00c5\u00af (nyn\u00c3\u00ad m\u00c3\u00a1 %(length)d).\"",
                "@@ -729,2 +749,3 @@ msgstr[1] \"Ode\u00c5\u00a1lete %d nebo m\u00c3\u00a9n\u00c4\u009b formul\u00c3\u00a1\u00c5\u0099\u00c5\u00af.\"",
                " msgstr[2] \"Ode\u00c5\u00a1lete %d nebo m\u00c3\u00a9n\u00c4\u009b formul\u00c3\u00a1\u00c5\u0099\u00c5\u00af.\"",
                "+msgstr[3] \"Ode\u00c5\u00a1lete %d nebo m\u00c3\u00a9n\u00c4\u009b formul\u00c3\u00a1\u00c5\u0099\u00c5\u00af.\"",
                "@@ -736,2 +757,3 @@ msgstr[1] \"Ode\u00c5\u00a1lete %d nebo v\u00c3\u00adce formul\u00c3\u00a1\u00c5\u0099\u00c5\u00af.\"",
                " msgstr[2] \"Ode\u00c5\u00a1lete %d nebo v\u00c3\u00adce formul\u00c3\u00a1\u00c5\u0099\u00c5\u00af.\"",
                "+msgstr[3] \"Ode\u00c5\u00a1lete %d nebo v\u00c3\u00adce formul\u00c3\u00a1\u00c5\u0099\u00c5\u00af.\"",
                "@@ -807,2 +829,3 @@ msgstr[1] \"%(size)d bajty\"",
                " msgstr[2] \"%(size)d bajt\u00c5\u00af\"",
                "+msgstr[3] \"%(size)d bajt\u00c5\u00af\"",
                "@@ -1077,2 +1100,3 @@ msgstr[1] \"%d roky\"",
                " msgstr[2] \"%d let\"",
                "+msgstr[3] \"%d let\"",
                "@@ -1084,2 +1108,3 @@ msgstr[1] \"%d m\u00c4\u009bs\u00c3\u00adce\"",
                " msgstr[2] \"%d m\u00c4\u009bs\u00c3\u00adc\u00c5\u00af\"",
                "+msgstr[3] \"%d m\u00c4\u009bs\u00c3\u00adc\u00c5\u00af\"",
                "@@ -1091,2 +1116,3 @@ msgstr[1] \"%d t\u00c3\u00bddny\"",
                " msgstr[2] \"%d t\u00c3\u00bddn\u00c5\u00af\"",
                "+msgstr[3] \"%d t\u00c3\u00bddn\u00c5\u00af\"",
                "@@ -1098,2 +1124,3 @@ msgstr[1] \"%d dny\"",
                " msgstr[2] \"%d dn\u00c3\u00ad\"",
                "+msgstr[3] \"%d dn\u00c3\u00ad\"",
                "@@ -1105,2 +1132,3 @@ msgstr[1] \"%d hodiny\"",
                " msgstr[2] \"%d hodin\"",
                "+msgstr[3] \"%d hodin\"",
                "@@ -1112,2 +1140,3 @@ msgstr[1] \"%d minuty\"",
                " msgstr[2] \"%d minut\"",
                "+msgstr[3] \"%d minut\"",
                "diff --git a/django/conf/locale/da/LC_MESSAGES/django.mo b/django/conf/locale/da/LC_MESSAGES/django.mo",
                "index 68467b6643..0f4189e380 100644",
                "Binary files a/django/conf/locale/da/LC_MESSAGES/django.mo and b/django/conf/locale/da/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/da/LC_MESSAGES/django.po b/django/conf/locale/da/LC_MESSAGES/django.po",
                "index c4107c2add..51d970d2dd 100644",
                "--- a/django/conf/locale/da/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/da/LC_MESSAGES/django.po",
                "@@ -5,3 +5,3 @@",
                " # Danni Randeris <danniranderis+djangocore@gmail.com>, 2014",
                "-# Erik Wognsen <r4mses@gmail.com>, 2013-2017",
                "+# Erik Wognsen <r4mses@gmail.com>, 2013-2018",
                " # Finn Gruwier Larsen, 2011",
                "@@ -15,4 +15,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-02 11:14+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 20:46+0000\\n\"",
                " \"Last-Translator: Erik Wognsen <r4mses@gmail.com>\\n\"",
                "@@ -387,2 +387,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Indtast et tal.\"",
                "+",
                " #, python-format",
                "@@ -465,2 +468,6 @@ msgstr \"'%(value)s'-v\u00c3\u00a6rdien skal v\u00c3\u00a6re enten True eller False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' v\u00c3\u00a6rdien skal v\u00c3\u00a6re enten True, False eller None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -641,5 +648,2 @@ msgstr \"Indtast et heltal.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Indtast et tal.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -656,2 +660,6 @@ msgstr \"Indtast en gyldig varighed.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Antallet af dage skal v\u00c3\u00a6re mellem {min_days} og {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/de/LC_MESSAGES/django.mo b/django/conf/locale/de/LC_MESSAGES/django.mo",
                "index a51de63a48..e90c930ed2 100644",
                "Binary files a/django/conf/locale/de/LC_MESSAGES/django.mo and b/django/conf/locale/de/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/de/LC_MESSAGES/django.po b/django/conf/locale/de/LC_MESSAGES/django.po",
                "index 38f59215f4..273932719c 100644",
                "--- a/django/conf/locale/de/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/de/LC_MESSAGES/django.po",
                "@@ -6,5 +6,6 @@",
                " # Daniel Roschka <dunedan@phoenitydawn.de>, 2016",
                "-# Jannis, 2011,2013",
                "-# Jannis Leidel <jannis@leidel.info>, 2013-2017",
                "-# Jannis, 2016",
                "+# Florian Apolloner <florian@apolloner.eu>, 2018",
                "+# Jannis Vajen, 2011,2013",
                "+# Jannis Leidel <jannis@leidel.info>, 2013-2018",
                "+# Jannis Vajen, 2016",
                " # Markus Holtermann <inyoka@markusholtermann.eu>, 2013,2015",
                "@@ -14,4 +15,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-27 16:21+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 00:21+0000\\n\"",
                " \"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "@@ -165,2 +166,5 @@ msgstr \"Georgisch\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabylisch\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -351,3 +355,3 @@ msgstr \"\"",
                " \"Bitte sicherstellen, dass der Wert %(limit_value)s ist. (Er ist \"",
                "-\"%(show_value)s)\"",
                "+\"%(show_value)s.)\"",
                "@@ -370,6 +374,6 @@ msgstr[0] \"\"",
                " \"Bitte sicherstellen, dass der Wert aus mindestens %(limit_value)d Zeichen \"",
                "-\"besteht. (Er besteht aus %(show_value)d Zeichen).\"",
                "+\"besteht. (Er besteht aus %(show_value)d Zeichen.)\"",
                " msgstr[1] \"\"",
                " \"Bitte sicherstellen, dass der Wert aus mindestens %(limit_value)d Zeichen \"",
                "-\"besteht. (Er besteht aus %(show_value)d Zeichen).\"",
                "+\"besteht. (Er besteht aus %(show_value)d Zeichen.)\"",
                "@@ -384,6 +388,9 @@ msgstr[0] \"\"",
                " \"Bitte sicherstellen, dass der Wert aus h\u00c3\u00b6chstens %(limit_value)d Zeichen \"",
                "-\"besteht. (Er besteht aus %(show_value)d Zeichen).\"",
                "+\"besteht. (Er besteht aus %(show_value)d Zeichen.)\"",
                " msgstr[1] \"\"",
                " \"Bitte sicherstellen, dass der Wert aus h\u00c3\u00b6chstens %(limit_value)d Zeichen \"",
                "-\"besteht. (Er besteht aus %(show_value)d Zeichen).\"",
                "+\"besteht. (Er besteht aus %(show_value)d Zeichen.)\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Bitte eine Zahl eingeben.\"",
                "@@ -422,3 +429,3 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"Dateiendung \u00e2\u0080\u009e%(extension)s\u00e2\u0080\u009c ist nicht erlaubt. Erlaubte Dateiendungen: sind: \"",
                "+\"Dateiendung \u00e2\u0080\u009e%(extension)s\u00e2\u0080\u009c ist nicht erlaubt. Erlaubte Dateiendungen sind: \"",
                " \"\u00e2\u0080\u009e%(allowed_extensions)s\u00e2\u0080\u009c.\"",
                "@@ -475,2 +482,6 @@ msgstr \"\u00e2\u0080\u009e%(value)s\u00e2\u0080\u009c Wert muss entweder True oder False sein.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -650,5 +661,2 @@ msgstr \"Bitte eine ganze Zahl eingeben.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Bitte eine Zahl eingeben.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -665,2 +673,6 @@ msgstr \"Bitte eine g\u00c3\u00bcltige Zeitspanne eingeben.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -681,6 +693,6 @@ msgstr[0] \"\"",
                " \"Bitte sicherstellen, dass der Dateiname aus h\u00c3\u00b6chstens %(max)d Zeichen \"",
                "-\"besteht. (Er besteht aus %(length)d Zeichen).\"",
                "+\"besteht. (Er besteht aus %(length)d Zeichen.)\"",
                " msgstr[1] \"\"",
                " \"Bitte sicherstellen, dass der Dateiname aus h\u00c3\u00b6chstens %(max)d Zeichen \"",
                "-\"besteht. (Er besteht aus %(length)d Zeichen).\"",
                "+\"besteht. (Er besteht aus %(length)d Zeichen.)\"",
                "diff --git a/django/conf/locale/dsb/LC_MESSAGES/django.mo b/django/conf/locale/dsb/LC_MESSAGES/django.mo",
                "index 8d0abbc160..34cf9c5a86 100644",
                "Binary files a/django/conf/locale/dsb/LC_MESSAGES/django.mo and b/django/conf/locale/dsb/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/dsb/LC_MESSAGES/django.po b/django/conf/locale/dsb/LC_MESSAGES/django.po",
                "index 4516b8fce0..e3e343818f 100644",
                "--- a/django/conf/locale/dsb/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/dsb/LC_MESSAGES/django.po",
                "@@ -3,3 +3,3 @@",
                " # Translators:",
                "-# Michael Wolf <milupo@sorbzilla.de>, 2016-2017",
                "+# Michael Wolf <milupo@sorbzilla.de>, 2016-2018",
                " msgid \"\"",
                "@@ -8,4 +8,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-09 18:46+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-26 10:19+0000\\n\"",
                " \"Last-Translator: Michael Wolf <milupo@sorbzilla.de>\\n\"",
                "@@ -400,2 +400,5 @@ msgstr[3] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Zap\u00c3\u00b3daj\u00c5\u009bo licbu.\"",
                "+",
                " #, python-format",
                "@@ -484,2 +487,6 @@ msgstr \"G\u00c3\u00b3dnota '%(value)s musy pak True pak False by\u00c5\u009b.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"G\u00c3\u00b3dnota '%(value)s' musy pak True, False pak None by\u00c5\u009b.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -659,5 +666,2 @@ msgstr \"Zap\u00c3\u00b3daj\u00c5\u009bo ce\u00c5\u0082u licbu.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Zap\u00c3\u00b3daj\u00c5\u009bo licbu.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -674,2 +678,6 @@ msgstr \"Zap\u00c3\u00b3da\u00c5\u009be p\u00c5\u0082a\u00c5\u009biwe tra\u00c5\u009be.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Licba dnjow musy mjazy  {min_days} a {max_days} by\u00c5\u009b.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/eo/LC_MESSAGES/django.mo b/django/conf/locale/eo/LC_MESSAGES/django.mo",
                "index bcff4b692d..6b3f0ec01f 100644",
                "Binary files a/django/conf/locale/eo/LC_MESSAGES/django.mo and b/django/conf/locale/eo/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/eo/LC_MESSAGES/django.po b/django/conf/locale/eo/LC_MESSAGES/django.po",
                "index 1e72914060..bb16d5d62f 100644",
                "--- a/django/conf/locale/eo/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/eo/LC_MESSAGES/django.po",
                "@@ -14,4 +14,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-02-27 21:45+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-30 21:46+0000\\n\"",
                " \"Last-Translator: Baptiste Darthenay <baptiste+transifex@darthenay.fr>\\n\"",
                "@@ -391,2 +391,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Enigu nombron.\"",
                "+",
                " #, python-format",
                "@@ -469,2 +472,6 @@ msgstr \"'%(value)s' valoro devas esti Vera a\u00c5\u00ad Malvera\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\u00e2\u0080\u009c%(value)s\u00e2\u0080\u009d valoro devas esti Vera, Malvera a\u00c5\u00ad Neniu.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -645,5 +652,2 @@ msgstr \"Enigu plenan nombron.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Enigu nombron.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -660,2 +664,6 @@ msgstr \"Enigu validan da\u00c5\u00adron.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"La nombro da tagoj devas esti inter {min_days} kaj {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -756,3 +764,3 @@ msgstr \"Bonvolu \u00c4\u009dustigi la duoblan valoron sube.\"",
                " msgid \"The inline value did not match the parent instance.\"",
                "-msgstr \"\"",
                "+msgstr \"La enteksta valoro ne egalas la patran aperon.\"",
                "@@ -1135,2 +1143,7 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Se vi uzas la <meta name=\\\"referrer\\\" content=\\\"no-referrer\\\">markon a\u00c5\u00ad \"",
                "+\"inkluzivante la 'Referrer-Policy: no-referrer' titolo, bonvolu forigi ilin. \"",
                "+\"La CSRFa protekto postulas ke la 'Referer' titolo faru striktan \"",
                "+\"referencantan kontroladon. Se vi estas koncernita pri privateco, uzu \"",
                "+\"alternativojn kiel <a rel=\\\"noreferrer\\\" ...> por ligoj al aliaj retejoj.\"",
                "@@ -1159,3 +1172,3 @@ msgstr \"Neniu jaro specifita\"",
                " msgid \"Date out of range\"",
                "-msgstr \"\"",
                "+msgstr \"Dato ne en la intervalo\"",
                "@@ -1215,3 +1228,3 @@ msgstr \"Indekso de %(directory)s\"",
                " msgid \"Django: the Web framework for perfectionists with deadlines.\"",
                "-msgstr \"\"",
                "+msgstr \"D\u00c4\u00b5ango: la retframo por perfektemuloj kun limdatoj\"",
                "@@ -1222,5 +1235,7 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Vidu <a href=\\\"https://docs.djangoproject.com/en/%(version)s/releases/\\\" \"",
                "+\"target=\\\"_blank\\\" rel=\\\"noopener\\\">eldonajn notojn</a> por D\u00c4\u00b5ango %(version)s\"",
                " msgid \"The install worked successfully! Congratulations!\"",
                "-msgstr \"\"",
                "+msgstr \"La instalado sukcesis! Gratulojn!\"",
                "@@ -1233,2 +1248,5 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Vi vidas \u00c4\u0089i tiun pa\u00c4\u009don \u00c4\u0089ar <a href=\\\"https://docs.djangoproject.com/en/\"",
                "+\"%(version)s/ref/settings/#debug\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">DEBUG = \"",
                "+\"True</a> estas en via agorda dosiero kaj vi ne agordis ajnan URL.\"",
                "@@ -1238,9 +1256,9 @@ msgstr \"Djanga dokumentaro\"",
                " msgid \"Topics, references, &amp; how-to's\"",
                "-msgstr \"\"",
                "+msgstr \"Temoj, referencoj &amp; manlibroj\"",
                " msgid \"Tutorial: A Polling App\"",
                "-msgstr \"\"",
                "+msgstr \"Instruilo: apo pri enketoj\"",
                " msgid \"Get started with Django\"",
                "-msgstr \"\"",
                "+msgstr \"Komencu kun D\u00c4\u00b5ango\"",
                "@@ -1250,2 +1268,2 @@ msgstr \"Djanga komunumo\"",
                " msgid \"Connect, get help, or contribute\"",
                "-msgstr \"\"",
                "+msgstr \"Konekti\u00c4\u009du, ricevu helpon a\u00c5\u00ad kontribuu\"",
                "diff --git a/django/conf/locale/es_AR/LC_MESSAGES/django.mo b/django/conf/locale/es_AR/LC_MESSAGES/django.mo",
                "index d312b9d51f..d4f0f2a1f0 100644",
                "Binary files a/django/conf/locale/es_AR/LC_MESSAGES/django.mo and b/django/conf/locale/es_AR/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/es_AR/LC_MESSAGES/django.po b/django/conf/locale/es_AR/LC_MESSAGES/django.po",
                "index fb610a584a..bd53fe8f78 100644",
                "--- a/django/conf/locale/es_AR/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/es_AR/LC_MESSAGES/django.po",
                "@@ -11,4 +11,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-22 14:52+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-06-18 20:22+0000\\n\"",
                " \"Last-Translator: Ramiro Morales\\n\"",
                "@@ -390,2 +390,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Introduzca un n\u00c3\u00bamero.\"",
                "+",
                " #, python-format",
                "@@ -471,2 +474,6 @@ msgstr \"El valor de '%(value)s' debe ser Verdadero o Falso.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"El valor de '%(value)s' debe ser Verdadero, Falso o None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -647,5 +654,2 @@ msgstr \"Introduzca un n\u00c3\u00bamero entero.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Introduzca un n\u00c3\u00bamero.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -662,2 +666,6 @@ msgstr \"Introduzca una duraci\u00c3\u00b3n v\u00c3\u00a1lida.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"La cantidad de d\u00c3\u00adas debe tener valores entre {min_days} y {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/fa/LC_MESSAGES/django.mo b/django/conf/locale/fa/LC_MESSAGES/django.mo",
                "index 0105ba3c63..fa9d7e48df 100644",
                "Binary files a/django/conf/locale/fa/LC_MESSAGES/django.mo and b/django/conf/locale/fa/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/fa/LC_MESSAGES/django.po b/django/conf/locale/fa/LC_MESSAGES/django.po",
                "index 2d67ad0cdf..1143b2eea2 100644",
                "--- a/django/conf/locale/fa/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/fa/LC_MESSAGES/django.po",
                "@@ -7,2 +7,3 @@",
                " # Mazdak Badakhshan <geraneum@gmail.com>, 2014",
                "+# MJafar Mashhadi <raindigital2007@gmail.com>, 2018",
                " # Mohammad Hossein Mojtahedi <Mhm5000@gmail.com>, 2013",
                "@@ -16,5 +17,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 01:13+0000\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-06-23 23:00+0000\\n\"",
                "+\"Last-Translator: MJafar Mashhadi <raindigital2007@gmail.com>\\n\"",
                " \"Language-Team: Persian (http://www.transifex.com/django/django/language/\"",
                "@@ -25,3 +26,3 @@ msgstr \"\"",
                " \"Language: fa\\n\"",
                "-\"Plural-Forms: nplurals=1; plural=0;\\n\"",
                "+\"Plural-Forms: nplurals=2; plural=(n > 1);\\n\"",
                "@@ -168,2 +169,5 @@ msgstr \"\u00da\u00af\u00d8\u00b1\u00d8\u00ac\u00db\u008c\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -304,9 +308,9 @@ msgstr \"\u00d9\u00be\u00db\u008c\u00d9\u0088\u00d9\u0086\u00d8\u00af\"",
                " msgid \"That page number is not an integer\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d8\u00b4\u00d9\u0085\u00d8\u00a7\u00d8\u00b1\u00d9\u0087\u00d9\u0094 \u00d8\u00b5\u00d9\u0081\u00d8\u00ad\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00db\u008c\u00da\u00a9 \u00d8\u00b9\u00d8\u00af\u00d8\u00af \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af\"",
                " msgid \"That page number is less than 1\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d8\u00b4\u00d9\u0085\u00d8\u00a7\u00d8\u00b1\u00d9\u0087\u00d9\u0094 \u00d8\u00b5\u00d9\u0081\u00d8\u00ad\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00a8\u00d8\u00b2\u00d8\u00b1\u00da\u00af\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a7\u00d8\u00b2 \u00db\u00b1 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af\"",
                " msgid \"That page contains no results\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d8\u00b5\u00d9\u0081\u00d8\u00ad\u00d9\u0087 \u00d8\u00ae\u00d8\u00a7\u00d9\u0084\u00db\u008c \u00d8\u00a7\u00d8\u00b2 \u00d8\u00a7\u00d8\u00b7\u00d9\u0084\u00d8\u00a7\u00d8\u00b9\u00d8\u00a7\u00d8\u00aa \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\"",
                "@@ -368,2 +372,5 @@ msgstr[0] \"\"",
                " \"\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa).\"",
                "+msgstr[1] \"\"",
                "+\"\u00d8\u00b7\u00d9\u0088\u00d9\u0084 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u0085\u00d9\u0082\u00d8\u00af\u00d8\u00a7\u00d8\u00b1 \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00ad\u00d8\u00af\u00d8\u00a7\u00d9\u0082\u00d9\u0084 %(limit_value)d \u00da\u00a9\u00d8\u00a7\u00d8\u00b1\u00d8\u00a7\u00da\u00a9\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af (\u00d8\u00b7\u00d9\u0088\u00d9\u0084\u00d8\u00b4 %(show_value)d \"",
                "+\"\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa).\"",
                "@@ -379,2 +386,8 @@ msgstr[0] \"\"",
                " \"\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa).\"",
                "+msgstr[1] \"\"",
                "+\"\u00d8\u00b7\u00d9\u0088\u00d9\u0084 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u0085\u00d9\u0082\u00d8\u00af\u00d8\u00a7\u00d8\u00b1 \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00ad\u00d8\u00af\u00d8\u00a7\u00da\u00a9\u00d8\u00ab\u00d8\u00b1 %(limit_value)d \u00da\u00a9\u00d8\u00a7\u00d8\u00b1\u00d8\u00a7\u00da\u00a9\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af (\u00d8\u00b7\u00d9\u0088\u00d9\u0084\u00d8\u00b4 %(show_value)d \"",
                "+\"\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa).\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00db\u008c\u00da\u00a9 \u00d8\u00b9\u00d8\u00af\u00d8\u00af \u00d9\u0088\u00d8\u00a7\u00d8\u00b1\u00d8\u00af \u00da\u00a9\u00d9\u0086\u00db\u008c\u00d8\u00af.\"",
                "@@ -384,2 +397,3 @@ msgid_plural \"Ensure that there are no more than %(max)s digits in total.\"",
                " msgstr[0] \"\u00d9\u0086\u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00af\u00d8\u00b1 \u00d9\u0085\u00d8\u00ac\u00d9\u0085\u00d9\u0088\u00d8\u00b9 \u00d8\u00a8\u00db\u008c\u00d8\u00b4 \u00d8\u00a7\u00d8\u00b2 %(max)s \u00d8\u00b1\u00d9\u0082\u00d9\u0085 \u00d8\u00af\u00d8\u00a7\u00d8\u00b4\u00d8\u00aa\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af.\"",
                "+msgstr[1] \"\u00d9\u0086\u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00af\u00d8\u00b1 \u00d9\u0085\u00d8\u00ac\u00d9\u0085\u00d9\u0088\u00d8\u00b9 \u00d8\u00a8\u00db\u008c\u00d8\u00b4 \u00d8\u00a7\u00d8\u00b2 %(max)s \u00d8\u00b1\u00d9\u0082\u00d9\u0085 \u00d8\u00af\u00d8\u00a7\u00d8\u00b4\u00d8\u00aa\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af.\"",
                "@@ -389,2 +403,3 @@ msgid_plural \"Ensure that there are no more than %(max)s decimal places.\"",
                " msgstr[0] \"\u00d9\u0086\u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00a8\u00db\u008c\u00d8\u00b4 \u00d8\u00a7\u00d8\u00b2 %(max)s \u00d8\u00b1\u00d9\u0082\u00d9\u0085 \u00d8\u00a7\u00d8\u00b9\u00d8\u00b4\u00d8\u00a7\u00d8\u00b1 \u00d8\u00af\u00d8\u00a7\u00d8\u00b4\u00d8\u00aa\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af.\"",
                "+msgstr[1] \"\u00d9\u0086\u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00a8\u00db\u008c\u00d8\u00b4 \u00d8\u00a7\u00d8\u00b2 %(max)s \u00d8\u00b1\u00d9\u0082\u00d9\u0085 \u00d8\u00a7\u00d8\u00b9\u00d8\u00b4\u00d8\u00a7\u00d8\u00b1 \u00d8\u00af\u00d8\u00a7\u00d8\u00b4\u00d8\u00aa\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af.\"",
                "@@ -396,2 +411,3 @@ msgid_plural \"\"",
                " msgstr[0] \"\u00d9\u0086\u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00a8\u00db\u008c\u00d8\u00b4 \u00d8\u00a7\u00d8\u00b2 %(max)s \u00d8\u00b1\u00d9\u0082\u00d9\u0085 \u00d9\u0082\u00d8\u00a8\u00d9\u0084 \u00d9\u0085\u00d9\u0085\u00db\u008c\u00d8\u00b2 \u00d8\u00af\u00d8\u00a7\u00d8\u00b4\u00d8\u00aa\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af.\"",
                "+msgstr[1] \"\u00d9\u0086\u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00a8\u00db\u008c\u00d8\u00b4 \u00d8\u00a7\u00d8\u00b2 %(max)s \u00d8\u00b1\u00d9\u0082\u00d9\u0085 \u00d9\u0082\u00d8\u00a8\u00d9\u0084 \u00d9\u0085\u00d9\u0085\u00db\u008c\u00d8\u00b2 \u00d8\u00af\u00d8\u00a7\u00d8\u00b4\u00d8\u00aa\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af.\"",
                "@@ -402,2 +418,4 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\u00d9\u0081\u00d8\u00a7\u00d8\u00af\u00d9\u0087 \u00d8\u00a7\u00d8\u00b2 \u00d9\u00be\u00d8\u00b1\u00d9\u0088\u00d9\u0086\u00d8\u00af\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7 \u00d9\u00be\u00d8\u00b3\u00d9\u0088\u00d9\u0086\u00d8\u00af '%(extension)s' \u00d9\u0085\u00d8\u00ac\u00d8\u00a7\u00d8\u00b2 \u00d9\u0086\u00db\u008c\u00d8\u00b3\u00d8\u00aa. \u00d9\u00be\u00d8\u00b3\u00d9\u0088\u00d9\u0086\u00d8\u00af\u00e2\u0080\u008c\u00d9\u0087\u00d8\u00a7\u00db\u008c \u00d9\u0085\u00d8\u00ac\u00d8\u00a7\u00d8\u00b2 \u00d8\u00b9\u00d8\u00a8\u00d8\u00a7\u00d8\u00b1\u00d8\u00aa\u00d9\u0086\u00d8\u00af \"",
                "+\"\u00d8\u00a7\u00d8\u00b2: '%(allowed_extensions)s'\"",
                "@@ -453,2 +471,6 @@ msgstr \"\u00d9\u0085\u00d9\u0082\u00d8\u00af\u00d8\u00a7\u00d8\u00b1 \u00c2\u00ab%(value)s\u00c2\u00bb \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00db\u008c\u00d8\u00a7 True \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af \u00d9\u0088 \u00db\u008c\u00d8\u00a7 False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\u00d9\u0085\u00d9\u0082\u00d8\u00af\u00d8\u00a7\u00d8\u00b1 \u00c2\u00ab%(value)s\u00c2\u00bb \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00db\u008c\u00d8\u00a7 None \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af \u00db\u008c\u00d8\u00a7 True \u00d9\u0088 \u00db\u008c\u00d8\u00a7 False.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -629,5 +651,2 @@ msgstr \"\u00d8\u00a8\u00d9\u0087 \u00d8\u00b7\u00d9\u0088\u00d8\u00b1 \u00da\u00a9\u00d8\u00a7\u00d9\u0085\u00d9\u0084 \u00db\u008c\u00da\u00a9 \u00d8\u00b9\u00d8\u00af\u00d8\u00af \u00d9\u0088\u00d8\u00a7\u00d8\u00b1\u00d8\u00af \u00da\u00a9\u00d9\u0086\u00db\u008c\u00d8\u00af.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00db\u008c\u00da\u00a9 \u00d8\u00b9\u00d8\u00af\u00d8\u00af \u00d9\u0088\u00d8\u00a7\u00d8\u00b1\u00d8\u00af \u00da\u00a9\u00d9\u0086\u00db\u008c\u00d8\u00af.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -644,2 +663,6 @@ msgstr \"\u00db\u008c\u00da\u00a9 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b2\u00d9\u0087\u00d9\u0094 \u00d8\u00b2\u00d9\u0085\u00d8\u00a7\u00d9\u0086\u00db\u008c \u00d9\u0085\u00d8\u00b9\u00d8\u00aa\u00d8\u00a8\u00d8\u00b1 \u00d9\u0088\u00d8\u00a7\u00d8\u00b1\u00d8\u00af \u00da\u00a9\u00d9\u0086\u00db\u008c\u00d8\u00af.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -659,2 +682,4 @@ msgstr[0] \"\"",
                " \"\u00d8\u00b7\u00d9\u0088\u00d9\u0084 \u00d8\u00b9\u00d9\u0086\u00d9\u0088\u00d8\u00a7\u00d9\u0086 \u00d9\u00be\u00d8\u00b1\u00d9\u0088\u00d9\u0086\u00d8\u00af\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00ad\u00d8\u00af\u00d8\u00a7\u00d9\u0082\u00d9\u0084 %(max)d \u00da\u00a9\u00d8\u00a7\u00d8\u00b1\u00d8\u00a7\u00da\u00a9\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af (\u00d8\u00b7\u00d9\u0088\u00d9\u0084\u00d8\u00b4 %(length)d \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa).\"",
                "+msgstr[1] \"\"",
                "+\"\u00d8\u00b7\u00d9\u0088\u00d9\u0084 \u00d8\u00b9\u00d9\u0086\u00d9\u0088\u00d8\u00a7\u00d9\u0086 \u00d9\u00be\u00d8\u00b1\u00d9\u0088\u00d9\u0086\u00d8\u00af\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00af \u00d8\u00ad\u00d8\u00af\u00d8\u00a7\u00d9\u0082\u00d9\u0084 %(max)d \u00da\u00a9\u00d8\u00a7\u00d8\u00b1\u00d8\u00a7\u00da\u00a9\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af (\u00d8\u00b7\u00d9\u0088\u00d9\u0084\u00d8\u00b4 %(length)d \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa).\"",
                "@@ -698,2 +723,3 @@ msgid_plural \"Please submit %d or fewer forms.\"",
                " msgstr[0] \"\u00d9\u0084\u00d8\u00b7\u00d9\u0081\u00d8\u00a7\u00d9\u008b %d \u00db\u008c\u00d8\u00a7 \u00da\u00a9\u00d9\u0085\u00d8\u00aa\u00d8\u00b1 \u00d9\u0081\u00d8\u00b1\u00d9\u0085 \u00d8\u00a8\u00d9\u0081\u00d8\u00b1\u00d8\u00b3\u00d8\u00aa\u00db\u008c\u00d8\u00af.\"",
                "+msgstr[1] \"\u00d9\u0084\u00d8\u00b7\u00d9\u0081\u00d8\u00a7\u00d9\u008b %d \u00db\u008c\u00d8\u00a7 \u00da\u00a9\u00d9\u0085\u00d8\u00aa\u00d8\u00b1 \u00d9\u0081\u00d8\u00b1\u00d9\u0085 \u00d8\u00a8\u00d9\u0081\u00d8\u00b1\u00d8\u00b3\u00d8\u00aa\u00db\u008c\u00d8\u00af.\"",
                "@@ -703,2 +729,3 @@ msgid_plural \"Please submit %d or more forms.\"",
                " msgstr[0] \"\u00d9\u0084\u00d8\u00b7\u00d9\u0081\u00d8\u00a7\u00d9\u008b %d \u00db\u008c\u00d8\u00a7 \u00d8\u00a8\u00db\u008c\u00d8\u00b4\u00d8\u00aa\u00d8\u00b1 \u00d9\u0081\u00d8\u00b1\u00d9\u0085 \u00d8\u00a8\u00d9\u0081\u00d8\u00b1\u00d8\u00b3\u00d8\u00aa\u00db\u008c\u00d8\u00af.\"",
                "+msgstr[1] \"\u00d9\u0084\u00d8\u00b7\u00d9\u0081\u00d8\u00a7\u00d9\u008b %d \u00db\u008c\u00d8\u00a7 \u00d8\u00a8\u00db\u008c\u00d8\u00b4\u00d8\u00aa\u00d8\u00b1 \u00d9\u0081\u00d8\u00b1\u00d9\u0085 \u00d8\u00a8\u00d9\u0081\u00d8\u00b1\u00d8\u00b3\u00d8\u00aa\u00db\u008c\u00d8\u00af.\"",
                "@@ -772,2 +799,3 @@ msgid_plural \"%(size)d bytes\"",
                " msgstr[0] \"%(size)d \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00aa\"",
                "+msgstr[1] \"%(size)d \u00d8\u00a8\u00d8\u00a7\u00db\u008c\u00d8\u00aa\"",
                "@@ -1040,2 +1068,3 @@ msgid_plural \"%d years\"",
                " msgstr[0] \"%d \u00d8\u00b3\u00d8\u00a7\u00d9\u0084\"",
                "+msgstr[1] \"%d \u00d8\u00b3\u00d8\u00a7\u00d9\u0084\"",
                "@@ -1045,2 +1074,3 @@ msgid_plural \"%d months\"",
                " msgstr[0] \"%d \u00d9\u0085\u00d8\u00a7\u00d9\u0087\"",
                "+msgstr[1] \"%d \u00d9\u0085\u00d8\u00a7\u00d9\u0087\"",
                "@@ -1050,2 +1080,3 @@ msgid_plural \"%d weeks\"",
                " msgstr[0] \"%d \u00d9\u0087\u00d9\u0081\u00d8\u00aa\u00d9\u0087\"",
                "+msgstr[1] \"%d \u00d9\u0087\u00d9\u0081\u00d8\u00aa\u00d9\u0087\"",
                "@@ -1055,2 +1086,3 @@ msgid_plural \"%d days\"",
                " msgstr[0] \"%d \u00d8\u00b1\u00d9\u0088\u00d8\u00b2\"",
                "+msgstr[1] \"%d \u00d8\u00b1\u00d9\u0088\u00d8\u00b2\"",
                "@@ -1060,2 +1092,3 @@ msgid_plural \"%d hours\"",
                " msgstr[0] \"%d \u00d8\u00b3\u00d8\u00a7\u00d8\u00b9\u00d8\u00aa\"",
                "+msgstr[1] \"%d \u00d8\u00b3\u00d8\u00a7\u00d8\u00b9\u00d8\u00aa\"",
                "@@ -1065,2 +1098,3 @@ msgid_plural \"%d minutes\"",
                " msgstr[0] \"%d \u00d8\u00af\u00d9\u0082\u00db\u008c\u00d9\u0082\u00d9\u0087\"",
                "+msgstr[1] \"%d \u00d8\u00af\u00d9\u0082\u00db\u008c\u00d9\u0082\u00d9\u0087\"",
                "@@ -1081,5 +1115,6 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"\u00d8\u00b4\u00d9\u0085\u00d8\u00a7 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u00be\u00db\u008c\u00d8\u00ba\u00d8\u00a7\u00d9\u0085 \u00d8\u00b1\u00d8\u00a7 \u00d9\u0085\u00db\u008c\u00d8\u00a8\u00db\u008c\u00d9\u0086\u00db\u008c\u00d8\u00af \u00da\u0086\u00d9\u0088\u00d9\u0086 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d8\u00b3\u00d8\u00a7\u00db\u008c\u00d8\u00aa\u00d9\u0090 HTTPS \u00d9\u0086\u00db\u008c\u00d8\u00a7\u00d8\u00b2\u00d9\u0085\u00d9\u0086\u00d8\u00af \u00db\u008c\u00da\u00a9 \u00c2\u00ab\u00d8\u00aa\u00db\u008c\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a7\u00d8\u00b1\u00d8\u00ac\u00d8\u00a7\u00d8\u00b9\u00c2\u00bb \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \"",
                "-\"\u00d8\u00a7\u00d8\u00b1\u00d8\u00b3\u00d8\u00a7\u00d9\u0084 \u00d8\u00a8\u00d9\u0087 \u00d8\u00a8\u00d8\u00b1\u00d9\u0088\u00d8\u00b2\u00d8\u00b1 \u00d8\u00b4\u00d9\u0085\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\u00d8\u008c \u00d9\u0088\u00d9\u0084\u00db\u008c \u00d9\u0087\u00db\u008c\u00da\u0086 \u00da\u0086\u00db\u008c\u00d8\u00b2\u00db\u008c \u00d8\u00a7\u00d8\u00b1\u00d8\u00b3\u00d8\u00a7\u00d9\u0084 \u00d9\u0086\u00d8\u00b4\u00d8\u00af\u00d9\u0087 \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa. \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d8\u00aa\u00db\u008c\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a8\u00d9\u0087 \u00d8\u00af\u00d9\u0084\u00d8\u00a7\u00db\u008c\u00d9\u0084 \u00d8\u00a7\u00d9\u0085\u00d9\u0086\u00db\u008c\u00d8\u00aa\u00db\u008c \"",
                "-\"\u00d9\u0085\u00d9\u0088\u00d8\u00b1\u00d8\u00af \u00d9\u0086\u00db\u008c\u00d8\u00a7\u00d8\u00b2 \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\u00d8\u008c \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00db\u008c\u00d9\u0086\u00da\u00a9\u00d9\u0087 \u00d8\u00a7\u00d8\u00b2 \u00d9\u0087\u00d8\u00a7\u00db\u008c\u00d8\u00ac\u00da\u00a9 \u00d9\u0086\u00d8\u00b4\u00d8\u00af\u00d9\u0086 \u00d8\u00a8\u00d8\u00b1\u00d9\u0088\u00d8\u00b2\u00d8\u00b1 \u00d8\u00a7\u00d8\u00b7\u00d9\u0085\u00db\u008c\u00d9\u0086\u00d8\u00a7\u00d9\u0086 \u00d8\u00ad\u00d8\u00a7\u00d8\u00b5\u00d9\u0084 \u00d8\u00b4\u00d9\u0088\u00d8\u00af.\"",
                "+\"\u00d8\u00b4\u00d9\u0085\u00d8\u00a7 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u00be\u00db\u008c\u00d8\u00a7\u00d9\u0085 \u00d8\u00b1\u00d8\u00a7 \u00d9\u0085\u00db\u008c\u00e2\u0080\u008c\u00d8\u00a8\u00db\u008c\u00d9\u0086\u00db\u008c\u00d8\u00af \u00da\u0086\u00d9\u0088\u00d9\u0086 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d8\u00b3\u00d8\u00a7\u00db\u008c\u00d8\u00aa\u00d9\u0090 HTTPS \u00d9\u0086\u00db\u008c\u00d8\u00a7\u00d8\u00b2\u00d9\u0085\u00d9\u0086\u00d8\u00af \u00db\u008c\u00da\u00a9 \u00c2\u00ab\u00d8\u00aa\u00db\u008c\u00d8\u00aa\u00d8\u00b1 \u00d8\u00a7\u00d8\u00b1\u00d8\u00ac\u00d8\u00a7\u00d8\u00b9 (Referer \"",
                "+\"header)\u00c2\u00bb \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00d8\u00b1\u00d8\u00b3\u00d8\u00a7\u00d9\u0084 \u00d8\u00a8\u00d9\u0087 \u00d9\u0085\u00d8\u00b1\u00d9\u0088\u00d8\u00b1\u00da\u00af\u00d8\u00b1 \u00d8\u00b4\u00d9\u0085\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa \u00d8\u00a7\u00d9\u0085\u00d8\u00a7 \u00d9\u0087\u00db\u008c\u00da\u0086 \u00da\u0086\u00db\u008c\u00d8\u00b2\u00db\u008c \u00d8\u00a7\u00d8\u00b1\u00d8\u00b3\u00d8\u00a7\u00d9\u0084 \u00d9\u0086\u00d8\u00b4\u00d8\u00af\u00d9\u0087 \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa. \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d8\u00aa\u00db\u008c\u00d8\u00aa\u00d8\u00b1 \"",
                "+\"\u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00d9\u0085\u00d9\u0086\u00db\u008c\u00d8\u00aa \u00d8\u00b4\u00d9\u0085\u00d8\u00a7 \u00d8\u00a8\u00d8\u00a7 \u00d8\u00ad\u00d8\u00b5\u00d9\u0088\u00d9\u0084 \u00d8\u00a7\u00d8\u00b7\u00d9\u0085\u00db\u008c\u00d9\u0086\u00d8\u00a7\u00d9\u0086 \u00d8\u00a7\u00d8\u00b2 \u00d8\u00a7\u00db\u008c\u00d9\u0086\u00da\u00a9\u00d9\u0087 \u00da\u00a9\u00d9\u0086\u00d8\u00aa\u00d8\u00b1\u00d9\u0084 \u00d9\u0085\u00d8\u00b1\u00d9\u0088\u00d8\u00b1\u00da\u00af\u00d8\u00b1\u00d8\u00aa\u00d8\u00a7\u00d9\u0086 \u00d8\u00a8\u00d9\u0087 \u00d8\u00af\u00d8\u00b3\u00d8\u00aa \u00d8\u00b4\u00d8\u00ae\u00d8\u00b5 \u00d8\u00ab\u00d8\u00a7\u00d9\u0084\u00d8\u00ab\u00db\u008c \"",
                "+\"\u00d9\u0086\u00db\u008c\u00d9\u0081\u00d8\u00aa\u00d8\u00a7\u00d8\u00af\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af \u00d8\u00b6\u00d8\u00b1\u00d9\u0088\u00d8\u00b1\u00db\u008c \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa.\"",
                "@@ -1090,5 +1125,5 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"\u00d8\u00a7\u00da\u00af\u00d8\u00b1 \u00d8\u00a8\u00d8\u00b2\u00d9\u0088\u00d8\u00b2\u00d8\u00b1 \u00d8\u00ae\u00d9\u0088\u00d8\u00af \u00d8\u00b1\u00d8\u00a7 \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00ba\u00db\u008c\u00d8\u00b1 \u00d9\u0081\u00d8\u00b9\u00d8\u00a7\u00d9\u0084 \u00da\u00a9\u00d8\u00b1\u00d8\u00af\u00d9\u0086 \u00d8\u00aa\u00db\u008c\u00d8\u00aa\u00d8\u00b1\u00d9\u0087\u00d8\u00a7\u00db\u008c \u00c2\u00ab\u00d8\u00a7\u00d8\u00b1\u00d8\u00ac\u00d8\u00a7\u00d8\u00b9\u00c2\u00bb \u00d8\u00aa\u00d9\u0086\u00d8\u00b8\u00db\u008c\u00d9\u0085 \u00da\u00a9\u00d8\u00b1\u00d8\u00af\u00d9\u0087\u00e2\u0080\u008c\u00d8\u00a7\u00db\u008c\u00d8\u00af\u00d8\u008c \u00d9\u0084\u00d8\u00b7\u00d9\u0081\u00d8\u00a7 \"",
                "-\"\u00d9\u0085\u00d8\u00ac\u00d8\u00af\u00d8\u00af\u00d8\u00a7 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u0088\u00db\u008c\u00da\u0098\u00da\u00af\u00db\u008c \u00d8\u00b1\u00d8\u00a7 \u00d9\u0081\u00d8\u00b9\u00d8\u00a7\u00d9\u0084 \u00da\u00a9\u00d9\u0086\u00db\u008c\u00d8\u00af\u00d8\u008c \u00d8\u00ad\u00d8\u00af\u00d8\u00a7\u00d9\u0082\u00d9\u0084 \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u0088\u00d8\u00a8\u00d8\u00b3\u00d8\u00a7\u00db\u008c\u00d8\u00aa\u00d8\u008c \u00db\u008c\u00d8\u00a7 \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00d8\u00aa\u00d8\u00b5\u00d8\u00a7\u00d9\u0084\u00d8\u00a7\u00d8\u00aa HTTPS\u00d8\u008c \"",
                "-\"\u00db\u008c\u00d8\u00a7 \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00af\u00d8\u00b1\u00d8\u00ae\u00d9\u0088\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\u00d9\u0087\u00d8\u00a7\u00db\u008c\u00db\u008c \u00d8\u00a8\u00d8\u00a7 \u00c2\u00ab\u00d9\u0085\u00d8\u00a8\u00d8\u00af\u00d8\u00a7 \u00db\u008c\u00da\u00a9\u00d8\u00b3\u00d8\u00a7\u00d9\u0086\u00c2\u00bb.\"",
                "+\"\u00d8\u00a7\u00da\u00af\u00d8\u00b1 \u00d8\u00aa\u00db\u008c\u00d8\u00aa\u00d8\u00b1\u00d9\u0087\u00d8\u00a7\u00db\u008c \u00c2\u00ab\u00d8\u00a7\u00d8\u00b1\u00d8\u00ac\u00d8\u00a7\u00d8\u00b9 (Referer)\u00c2\u00bb \u00d8\u00b1\u00d8\u00a7 \u00d8\u00af\u00d8\u00b1 \u00d9\u0085\u00d8\u00b1\u00d9\u0088\u00d8\u00b1\u00da\u00af\u00d8\u00b1\u00d8\u00aa\u00d8\u00a7\u00d9\u0086 \u00d8\u00ba\u00db\u008c\u00d8\u00b1\u00d9\u0081\u00d8\u00b9\u00d8\u00a7\u00d9\u0084 \u00da\u00a9\u00d8\u00b1\u00d8\u00af\u00d9\u0087\u00e2\u0080\u008c\u00d8\u00a7\u00db\u008c\u00d8\u00af\u00d8\u008c \u00d9\u0084\u00d8\u00b7\u00d9\u0081\u00d8\u00a7\u00d9\u008b \u00d9\u0085\u00d8\u00ac\u00d8\u00af\u00d8\u00af\u00d8\u00a7\u00d9\u008b \"",
                "+\"\u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u0088\u00db\u008c\u00da\u0098\u00da\u00af\u00db\u008c \u00d8\u00b1\u00d8\u00a7 \u00d9\u0081\u00d8\u00b9\u00d8\u00a7\u00d9\u0084 \u00da\u00a9\u00d9\u0086\u00db\u008c\u00d8\u00af\u00d8\u008c \u00d8\u00ad\u00d8\u00af\u00d8\u00a7\u00d9\u0082\u00d9\u0084 \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u0088\u00d8\u00a8\u00d8\u00b3\u00d8\u00a7\u00db\u008c\u00d8\u00aa\u00d8\u008c \u00db\u008c\u00d8\u00a7 \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00d8\u00aa\u00d8\u00b5\u00d8\u00a7\u00d9\u0084\u00d8\u00a7\u00d8\u00aa HTTPS\u00d8\u008c \u00db\u008c\u00d8\u00a7 \"",
                "+\"\u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00af\u00d8\u00b1\u00d8\u00ae\u00d9\u0088\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\u00d9\u0087\u00d8\u00a7\u00db\u008c\u00db\u008c \u00d8\u00a8\u00d8\u00a7 \u00c2\u00ab\u00d9\u0085\u00d8\u00a8\u00d8\u00af\u00d8\u00a7 \u00db\u008c\u00da\u00a9\u00d8\u00b3\u00d8\u00a7\u00d9\u0086 (same-origin)\u00c2\u00bb.\"",
                "@@ -1107,5 +1142,5 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"\u00d8\u00b4\u00d9\u0085\u00d8\u00a7 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u00be\u00db\u008c\u00d8\u00ba\u00d8\u00a7\u00d9\u0085 \u00d8\u00b1\u00d8\u00a7 \u00d9\u0085\u00db\u008c\u00d8\u00a8\u00db\u008c\u00d9\u0086\u00db\u008c\u00d8\u00af \u00da\u0086\u00d9\u0088\u00d9\u0086 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d8\u00b3\u00d8\u00a7\u00db\u008c\u00d8\u00aa \u00d9\u0086\u00db\u008c\u00d8\u00a7\u00d8\u00b2\u00d9\u0085\u00d9\u0086\u00d8\u00af \u00da\u00a9\u00d9\u0088\u00da\u00a9\u00db\u008c \u00c2\u00ab\u00d8\u00ac\u00d8\u00b9\u00d9\u0084 \u00d8\u00af\u00d8\u00b1\u00d8\u00ae\u00d9\u0088\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa \u00d9\u0085\u00db\u008c\u00d8\u00a7\u00d9\u0086 \u00d9\u0088\u00d8\u00a8\u00da\u00af\u00d8\u00a7\u00d9\u0087\u00db\u008c\u00c2\u00bb \"",
                "-\"\u00d8\u00af\u00d8\u00b1 \u00d8\u00b2\u00d9\u0085\u00d8\u00a7\u00d9\u0086 \u00d8\u00a7\u00d8\u00b1\u00d8\u00a7\u00d8\u00a6\u00d9\u0087 \u00db\u008c \u00d9\u0081\u00d9\u0088\u00d8\u00b1\u00d9\u0085 \u00d9\u0085\u00db\u008c\u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af. \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00da\u00a9\u00d9\u0088\u00da\u00a9\u00db\u008c\u00e2\u0080\u008c\u00d9\u0087\u00d8\u00a7 \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d9\u0085\u00d8\u00b3\u00d8\u00a7\u00d8\u00a6\u00d9\u0084 \u00d8\u00a7\u00d9\u0085\u00d9\u0086\u00db\u008c\u00d8\u00aa\u00db\u008c \u00d8\u00b6\u00d8\u00b1\u00d9\u0088\u00d8\u00b1\u00db\u008c \u00d9\u0087\u00d8\u00b3\u00d8\u00aa\u00d9\u0086\u00d8\u00af\u00d8\u008c \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \"",
                "-\"\u00d8\u00a7\u00d8\u00b7\u00d9\u0085\u00db\u008c\u00d9\u0086\u00d8\u00a7\u00d9\u0086 \u00d8\u00a7\u00d8\u00b2 \u00d8\u00a7\u00db\u008c\u00d9\u0086\u00da\u00a9\u00d9\u0087 \u00d8\u00a8\u00d8\u00b1\u00d9\u0088\u00d8\u00b2\u00d8\u00b1 \u00d8\u00b4\u00d9\u0085\u00d8\u00a7 \u00d8\u00aa\u00d9\u0088\u00d8\u00b3\u00d8\u00b7 \u00d8\u00b4\u00d8\u00ae\u00d8\u00b5 \u00d8\u00ab\u00d8\u00a7\u00d9\u0084\u00d8\u00ab\u00db\u008c \u00d9\u0087\u00d8\u00a7\u00db\u008c\u00d8\u00ac\u00da\u00a9 \u00d9\u0086\u00d8\u00b4\u00d8\u00af\u00d9\u0087 \u00d8\u00a8\u00d8\u00a7\u00d8\u00b4\u00d8\u00af.\"",
                "+\"\u00d8\u00b4\u00d9\u0085\u00d8\u00a7 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d9\u00be\u00db\u008c\u00d8\u00a7\u00d9\u0085 \u00d8\u00b1\u00d8\u00a7 \u00d9\u0085\u00db\u008c\u00d8\u00a8\u00db\u008c\u00d9\u0086\u00db\u008c\u00d8\u00af \u00da\u0086\u00d9\u0088\u00d9\u0086 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00d8\u00b3\u00d8\u00a7\u00db\u008c\u00d8\u00aa \u00d9\u0086\u00db\u008c\u00d8\u00a7\u00d8\u00b2\u00d9\u0085\u00d9\u0086\u00d8\u00af \u00da\u00a9\u00d9\u0088\u00da\u00a9\u00db\u008c \u00c2\u00ab\u00d8\u00ac\u00d8\u00b9\u00d9\u0084 \u00d8\u00af\u00d8\u00b1\u00d8\u00ae\u00d9\u0088\u00d8\u00a7\u00d8\u00b3\u00d8\u00aa \u00d9\u0085\u00db\u008c\u00d8\u00a7\u00d9\u0086 \u00d9\u0088\u00d8\u00a8\u00da\u00af\u00d8\u00a7\u00d9\u0087\u00db\u008c \"",
                "+\"(CSRF)\u00c2\u00bb \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa. \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00da\u00a9\u00d9\u0088\u00da\u00a9\u00db\u008c \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00a7\u00d9\u0085\u00d9\u0086\u00db\u008c\u00d8\u00aa \u00d8\u00b4\u00d9\u0085\u00d8\u00a7 \u00d8\u00b6\u00d8\u00b1\u00d9\u0088\u00d8\u00b1\u00db\u008c \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa. \u00d8\u00a8\u00d8\u00a7 \u00d8\u00a7\u00db\u008c\u00d9\u0086 \u00da\u00a9\u00d9\u0088\u00da\u00a9\u00db\u008c \u00d9\u0085\u00db\u008c\u00e2\u0080\u008c\u00d8\u00aa\u00d9\u0088\u00d8\u00a7\u00d9\u0086\u00db\u008c\u00d9\u0085 \u00d8\u00a7\u00d8\u00b2 \"",
                "+\"\u00d8\u00a7\u00db\u008c\u00d9\u0086\u00da\u00a9\u00d9\u0087 \u00d8\u00b4\u00d8\u00ae\u00d8\u00b5 \u00d8\u00ab\u00d8\u00a7\u00d9\u0084\u00d8\u00ab\u00db\u008c \u00da\u00a9\u00d9\u0086\u00d8\u00aa\u00d8\u00b1\u00d9\u0084 \u00d9\u0085\u00d8\u00b1\u00d9\u0088\u00d8\u00b1\u00da\u00af\u00d8\u00b1\u00d8\u00aa\u00d8\u00a7\u00d9\u0086 \u00d8\u00b1\u00d8\u00a7 \u00d8\u00a8\u00d9\u0087 \u00d8\u00af\u00d8\u00b3\u00d8\u00aa \u00d9\u0086\u00da\u00af\u00d8\u00b1\u00d9\u0081\u00d8\u00aa\u00d9\u0087 \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa \u00d8\u00a7\u00d8\u00b7\u00d9\u0085\u00db\u008c\u00d9\u0086\u00d8\u00a7\u00d9\u0086 \u00d9\u00be\u00db\u008c\u00d8\u00af\u00d8\u00a7 \u00da\u00a9\u00d9\u0086\u00db\u008c\u00d9\u0085.\"",
                "@@ -1125,3 +1160,3 @@ msgstr \"\u00d9\u0087\u00db\u008c\u00da\u0086 \u00d8\u00b3\u00d8\u00a7\u00d9\u0084\u00db\u008c \u00d9\u0085\u00d8\u00b4\u00d8\u00ae\u00d8\u00b5 \u00d9\u0086\u00d8\u00b4\u00d8\u00af\u00d9\u0087 \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\"",
                " msgid \"Date out of range\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d8\u00aa\u00d8\u00a7\u00d8\u00b1\u00db\u008c\u00d8\u00ae \u00d8\u00ba\u00db\u008c\u00d8\u00b1\u00d9\u0085\u00d8\u00ac\u00d8\u00a7\u00d8\u00b2 \u00d8\u00a7\u00d8\u00b3\u00d8\u00aa\"",
                "@@ -1199,3 +1234,3 @@ msgstr \"\"",
                " msgid \"Django Documentation\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d9\u0085\u00d8\u00b3\u00d8\u00aa\u00d9\u0086\u00d8\u00af\u00d8\u00a7\u00d8\u00aa \u00d8\u00ac\u00d9\u0086\u00da\u00af\u00d9\u0088\"",
                "@@ -1205,9 +1240,9 @@ msgstr \"\"",
                " msgid \"Tutorial: A Polling App\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d8\u00a2\u00d9\u0085\u00d9\u0088\u00d8\u00b2\u00d8\u00b4 \u00da\u00af\u00d8\u00a7\u00d9\u0085 \u00d8\u00a8\u00d9\u0087 \u00da\u00af\u00d8\u00a7\u00d9\u0085: \u00d8\u00a8\u00d8\u00b1\u00d9\u0086\u00d8\u00a7\u00d9\u0085\u00da\u00a9\u00db\u008c \u00d8\u00a8\u00d8\u00b1\u00d8\u00a7\u00db\u008c \u00d8\u00b1\u00d8\u00a3\u00db\u008c\u00e2\u0080\u008c\u00da\u00af\u00db\u008c\u00d8\u00b1\u00db\u008c\"",
                " msgid \"Get started with Django\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d8\u00b4\u00d8\u00b1\u00d9\u0088\u00d8\u00b9 \u00d8\u00a8\u00d9\u0087 \u00da\u00a9\u00d8\u00a7\u00d8\u00b1 \u00d8\u00a8\u00d8\u00a7 \u00d8\u00ac\u00d9\u0086\u00da\u00af\u00d9\u0088\"",
                " msgid \"Django Community\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d8\u00ac\u00d8\u00a7\u00d9\u0085\u00d8\u00b9\u00d9\u0087\u00d9\u0094 \u00d8\u00ac\u00d9\u0086\u00da\u00af\u00d9\u0088\"",
                "diff --git a/django/conf/locale/fi/LC_MESSAGES/django.mo b/django/conf/locale/fi/LC_MESSAGES/django.mo",
                "index d7f35ce35d..1d027960ed 100644",
                "Binary files a/django/conf/locale/fi/LC_MESSAGES/django.mo and b/django/conf/locale/fi/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/fi/LC_MESSAGES/django.po b/django/conf/locale/fi/LC_MESSAGES/django.po",
                "index 0247661ec1..fbab3be89e 100644",
                "--- a/django/conf/locale/fi/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/fi/LC_MESSAGES/django.po",
                "@@ -3,3 +3,3 @@",
                " # Translators:",
                "-# Aarni Koskela, 2015,2017",
                "+# Aarni Koskela, 2015,2017-2018",
                " # Antti Kaihola <antti.15+transifex@kaihola.fi>, 2011",
                "@@ -12,4 +12,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 01:13+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 00:21+0000\\n\"",
                " \"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "@@ -164,2 +164,5 @@ msgstr \"georgia\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabyle\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -386,2 +389,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Sy\u00c3\u00b6t\u00c3\u00a4 luku.\"",
                "+",
                " #, python-format",
                "@@ -417,3 +423,3 @@ msgstr \"\"",
                " msgid \"Null characters are not allowed.\"",
                "-msgstr \"\"",
                "+msgstr \"Tyhji\u00c3\u00a4 merkkej\u00c3\u00a4 (null) ei sallita.\"",
                "@@ -467,2 +473,6 @@ msgstr \"%(value)s-arvo pit\u00c3\u00a4\u00c3\u00a4 olla joko tosi tai ep\u00c3\u00a4tosi.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -639,5 +649,2 @@ msgstr \"Sy\u00c3\u00b6t\u00c3\u00a4 kokonaisluku.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Sy\u00c3\u00b6t\u00c3\u00a4 luku.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -654,2 +661,6 @@ msgstr \"Sy\u00c3\u00b6t\u00c3\u00a4 oikea kesto.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -752,3 +763,3 @@ msgstr \"Valitse oikea vaihtoehto. Valintasi ei l\u00c3\u00b6ydy vaihtoehtojen joukosta.\"",
                " msgid \"\\\"%(pk)s\\\" is not a valid value.\"",
                "-msgstr \"\"",
                "+msgstr \"\\\"%(pk)s\\\" ei ole kelvollinen arvo.\"",
                "@@ -1124,2 +1135,7 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Jos k\u00c3\u00a4yt\u00c3\u00a4t <meta name=\\\"referrer\\\" content=\\\"no-referrer\\\">-tagia tai \"",
                "+\"\\\"Referrer-Policy: no-referrer\\\" -otsaketta, ole hyv\u00c3\u00a4 ja poista ne. CSRF-\"",
                "+\"suojaus vaatii Referer-otsakkeen tehd\u00c3\u00a4kseen tarkan referer-tarkistuksen. Jos \"",
                "+\"vaadit yksityisyytt\u00c3\u00a4, k\u00c3\u00a4yt\u00c3\u00a4 vaihtoehtoja kuten <a rel=\\\"noreferrer\\\" ...\"",
                "+\">linkitt\u00c3\u00a4\u00c3\u00a4ksesi kolmannen osapuolen sivuille.\"",
                "@@ -1149,3 +1165,3 @@ msgstr \"Vuosi puuttuu\"",
                " msgid \"Date out of range\"",
                "-msgstr \"\"",
                "+msgstr \"P\u00c3\u00a4iv\u00c3\u00a4m\u00c3\u00a4\u00c3\u00a4r\u00c3\u00a4 ei alueella\"",
                "@@ -1212,3 +1228,3 @@ msgstr \"\"",
                " msgid \"The install worked successfully! Congratulations!\"",
                "-msgstr \"\"",
                "+msgstr \"Asennus toimi! Onneksi olkoon!\"",
                "@@ -1221,17 +1237,20 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"N\u00c3\u00a4et t\u00c3\u00a4m\u00c3\u00a4n viestin, koska asetuksissasi on <a href=\\\"https://docs.\"",
                "+\"djangoproject.com/en/%(version)s/ref/settings/#debug\\\" target=\\\"_blank\\\" rel=\"",
                "+\"\\\"noopener\\\">DEBUG = True</a> etk\u00c3\u00a4 ole konfiguroinut yht\u00c3\u00a4\u00c3\u00a4n URL-osoitetta.\"",
                " msgid \"Django Documentation\"",
                "-msgstr \"\"",
                "+msgstr \"Django-dokumentaatio\"",
                " msgid \"Topics, references, &amp; how-to's\"",
                "-msgstr \"\"",
                "+msgstr \"Aiheet, viittaukset &amp; how-tot\"",
                " msgid \"Tutorial: A Polling App\"",
                "-msgstr \"\"",
                "+msgstr \"Tutoriaali: kyselyapplikaatio\"",
                " msgid \"Get started with Django\"",
                "-msgstr \"\"",
                "+msgstr \"Miten p\u00c3\u00a4\u00c3\u00a4st\u00c3\u00a4 alkuun Djangolla\"",
                " msgid \"Django Community\"",
                "-msgstr \"\"",
                "+msgstr \"Django-yhteis\u00c3\u00b6\"",
                "diff --git a/django/conf/locale/fr/LC_MESSAGES/django.mo b/django/conf/locale/fr/LC_MESSAGES/django.mo",
                "index 42780bbc26..cd2bbfd6ca 100644",
                "Binary files a/django/conf/locale/fr/LC_MESSAGES/django.mo and b/django/conf/locale/fr/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/fr/LC_MESSAGES/django.po b/django/conf/locale/fr/LC_MESSAGES/django.po",
                "index e88a70ff27..91c9d9ef6d 100644",
                "--- a/django/conf/locale/fr/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/fr/LC_MESSAGES/django.po",
                "@@ -4,3 +4,3 @@",
                " # charettes <charette.s@gmail.com>, 2012",
                "-# Claude Paroz <claude@2xlibre.net>, 2013-2017",
                "+# Claude Paroz <claude@2xlibre.net>, 2013-2018",
                " # Claude Paroz <claude@2xlibre.net>, 2011",
                "@@ -14,4 +14,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 08:05+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 12:50+0000\\n\"",
                " \"Last-Translator: Claude Paroz <claude@2xlibre.net>\\n\"",
                "@@ -165,2 +165,5 @@ msgstr \"G\u00c3\u00a9orgien\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabyle\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -391,2 +394,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Saisissez un nombre.\"",
                "+",
                " #, python-format",
                "@@ -474,2 +480,7 @@ msgstr \"La valeur \u00c2\u00ab\u00c2\u00a0%(value)s\u00c2\u00a0\u00c2\u00bb doit \u00c3\u00aatre soit True (vrai), soit False (fau",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\"",
                "+\"La valeur \u00c2\u00ab\u00c2\u00a0%(value)s\u00c2\u00a0\u00c2\u00bb doit \u00c3\u00aatre True (vrai), False (faux) ou None (aucun).\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -652,5 +663,2 @@ msgstr \"Saisissez un nombre entier.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Saisissez un nombre.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -667,2 +675,6 @@ msgstr \"Saisissez une dur\u00c3\u00a9e valide.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Le nombre de jours doit \u00c3\u00aatre entre {min_days} et {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/gd/LC_MESSAGES/django.mo b/django/conf/locale/gd/LC_MESSAGES/django.mo",
                "index 63f8547665..9537634512 100644",
                "Binary files a/django/conf/locale/gd/LC_MESSAGES/django.mo and b/django/conf/locale/gd/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/gd/LC_MESSAGES/django.po b/django/conf/locale/gd/LC_MESSAGES/django.po",
                "index 315ab6100a..103853e5d5 100644",
                "--- a/django/conf/locale/gd/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/gd/LC_MESSAGES/django.po",
                "@@ -12,4 +12,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 06:41+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-29 09:31+0000\\n\"",
                " \"Last-Translator: GunChleoc\\n\"",
                "@@ -165,2 +165,5 @@ msgstr \"Cairtbheilis\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabyle\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -405,2 +408,5 @@ msgstr[3] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Cuir a-steach \u00c3\u00a0ireamh.\"",
                "+",
                " #, python-format",
                "@@ -502,2 +508,6 @@ msgstr \"Feumaidh \u00e2\u0080\u009c%(value)s\u00e2\u0080\u009d a bhith True no False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"Feumaidh \u00e2\u0080\u009c%(value)s\u00e2\u0080\u009d a bhith True, False no None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -680,5 +690,2 @@ msgstr \"Cuir a-steach \u00c3\u00a0ireamh shl\u00c3\u00a0n.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Cuir a-steach \u00c3\u00a0ireamh.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -695,2 +702,7 @@ msgstr \"Cuir a-steach faid dhligheach.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+\"Feumaidh an \u00c3\u00a0ireamh de l\u00c3\u00a0ithean a bhith eadar {min_days} is {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/hsb/LC_MESSAGES/django.mo b/django/conf/locale/hsb/LC_MESSAGES/django.mo",
                "index d290384221..909649f45d 100644",
                "Binary files a/django/conf/locale/hsb/LC_MESSAGES/django.mo and b/django/conf/locale/hsb/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/hsb/LC_MESSAGES/django.po b/django/conf/locale/hsb/LC_MESSAGES/django.po",
                "index f5bba5856c..37cc5ba7d6 100644",
                "--- a/django/conf/locale/hsb/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/hsb/LC_MESSAGES/django.po",
                "@@ -3,3 +3,3 @@",
                " # Translators:",
                "-# Michael Wolf <milupo@sorbzilla.de>, 2016-2017",
                "+# Michael Wolf <milupo@sorbzilla.de>, 2016-2018",
                " msgid \"\"",
                "@@ -8,4 +8,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-09 18:46+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-26 11:17+0000\\n\"",
                " \"Last-Translator: Michael Wolf <milupo@sorbzilla.de>\\n\"",
                "@@ -398,2 +398,5 @@ msgstr[3] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Zapodaj\u00c4\u0087e li\u00c4\u008dbu.\"",
                "+",
                " #, python-format",
                "@@ -482,2 +485,6 @@ msgstr \"H\u00c3\u00b3dnota '%(value)s' dyrbi pak True pak False by\u00c4\u0087.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"H\u00c3\u00b3dnota '%(value)s' dyrbi pak True, False pak None by\u00c4\u0087.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -657,5 +664,2 @@ msgstr \"Zapodaj\u00c4\u0087e cy\u00c5\u0082u li\u00c4\u008dbu.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Zapodaj\u00c4\u0087e li\u00c4\u008dbu.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -672,2 +676,6 @@ msgstr \"Zapodaj\u00c4\u0087e p\u00c5\u0082a\u00c4\u0087iwe tra\u00c4\u0087e.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Li\u00c4\u008dba dnjow dyrbi mjez {min_days} a {max_days} by\u00c4\u0087.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/hu/LC_MESSAGES/django.mo b/django/conf/locale/hu/LC_MESSAGES/django.mo",
                "index 46a6b39733..a7ac689d9a 100644",
                "Binary files a/django/conf/locale/hu/LC_MESSAGES/django.mo and b/django/conf/locale/hu/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/hu/LC_MESSAGES/django.po b/django/conf/locale/hu/LC_MESSAGES/django.po",
                "index 97d4078891..64456a665d 100644",
                "--- a/django/conf/locale/hu/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/hu/LC_MESSAGES/django.po",
                "@@ -3,3 +3,4 @@",
                " # Translators:",
                "-# Andr\u00c3\u00a1s Veres-Szentkir\u00c3\u00a1lyi, 2016-2017",
                "+# Akos Zsolt Hochrein <hoch.akos@gmail.com>, 2018",
                "+# Andr\u00c3\u00a1s Veres-Szentkir\u00c3\u00a1lyi, 2016-2018",
                " # Attila Nagy <>, 2012",
                "@@ -14,5 +15,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-24 13:36+0000\\n\"",
                "-\"Last-Translator: Andr\u00c3\u00a1s Veres-Szentkir\u00c3\u00a1lyi\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-26 09:24+0000\\n\"",
                "+\"Last-Translator: Akos Zsolt Hochrein <hoch.akos@gmail.com>\\n\"",
                " \"Language-Team: Hungarian (http://www.transifex.com/django/django/language/\"",
                "@@ -166,2 +167,5 @@ msgstr \"Gr\u00c3\u00baz\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabil\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -390,2 +394,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Adj meg egy sz\u00c3\u00a1mot.\"",
                "+",
                " #, python-format",
                "@@ -475,2 +482,6 @@ msgstr \"'%(value)s' \u00c3\u00a9rt\u00c3\u00a9k csak igaz (True) vagy hamis (False) lehet.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' \u00c3\u00a9rt\u00c3\u00a9knek True, False vagy None-nak kell lennie.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -652,5 +663,2 @@ msgstr \"Adjon meg egy eg\u00c3\u00a9sz sz\u00c3\u00a1mot.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Adj meg egy sz\u00c3\u00a1mot.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -667,2 +675,6 @@ msgstr \"Adjon meg egy \u00c3\u00a9rv\u00c3\u00a9nyes id\u00c5\u0091tartamot.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"A napok sz\u00c3\u00a1m\u00c3\u00a1nak {min_days} \u00c3\u00a9s {max_days} k\u00c3\u00b6z\u00c3\u00a9 kell esnie.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/id/LC_MESSAGES/django.mo b/django/conf/locale/id/LC_MESSAGES/django.mo",
                "index 28e6c69d76..df13536c20 100644",
                "Binary files a/django/conf/locale/id/LC_MESSAGES/django.mo and b/django/conf/locale/id/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/id/LC_MESSAGES/django.po b/django/conf/locale/id/LC_MESSAGES/django.po",
                "index d01f0633e2..99fc195f05 100644",
                "--- a/django/conf/locale/id/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/id/LC_MESSAGES/django.po",
                "@@ -15,4 +15,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-11 07:10+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-06-18 23:24+0000\\n\"",
                " \"Last-Translator: Fery Setiawan <gembelweb@gmail.com>\\n\"",
                "@@ -386,2 +386,5 @@ msgstr[0] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Masukkan sebuah bilangan.\"",
                "+",
                " #, python-format",
                "@@ -463,2 +466,6 @@ msgstr \"Nilai '%(value)s' haruslah bernilai Benar atau Salah.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"Nilai '%(value)s' harus True, False, atau None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -639,5 +646,2 @@ msgstr \"Masukkan keseluruhan angka bilangan.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Masukkan sebuah bilangan.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -654,2 +658,6 @@ msgstr \"Masukan durasi waktu yang benar.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Jumlah hari harus diantara {min_days} dan {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/is/LC_MESSAGES/django.mo b/django/conf/locale/is/LC_MESSAGES/django.mo",
                "index f124c7abae..463814a893 100644",
                "Binary files a/django/conf/locale/is/LC_MESSAGES/django.mo and b/django/conf/locale/is/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/is/LC_MESSAGES/django.po b/django/conf/locale/is/LC_MESSAGES/django.po",
                "index 5ef6aa1396..09aaab84b5 100644",
                "--- a/django/conf/locale/is/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/is/LC_MESSAGES/django.po",
                "@@ -6,5 +6,6 @@",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "+# Matt R, 2018",
                " # saevarom <saevar@saevar.is>, 2011",
                " # saevarom <saevar@saevar.is>, 2013,2015",
                "-# Thordur Sigurdsson <thordur@ja.is>, 2016-2017",
                "+# Thordur Sigurdsson <thordur@ja.is>, 2016-2018",
                " msgid \"\"",
                "@@ -13,4 +14,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-27 07:32+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-06-22 20:45+0000\\n\"",
                " \"Last-Translator: Thordur Sigurdsson <thordur@ja.is>\\n\"",
                "@@ -165,2 +166,5 @@ msgstr \"Georg\u00c3\u00adska\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -390,2 +394,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Sl\u00c3\u00a1\u00c3\u00b0u inn t\u00c3\u00b6lu.\"",
                "+",
                " #, python-format",
                "@@ -470,2 +477,6 @@ msgstr \"'%(value)s' ver\u00c3\u00b0ur a\u00c3\u00b0 vera anna\u00c3\u00b0hvort satt e\u00c3\u00b0a \u00c3\u00b3satt.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' ver\u00c3\u00b0ur a\u00c3\u00b0 vera eitt eftirtalinna: True, False e\u00c3\u00b0a None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -644,5 +655,2 @@ msgstr \"Sl\u00c3\u00a1\u00c3\u00b0u inn heilt\u00c3\u00b6lu.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Sl\u00c3\u00a1\u00c3\u00b0u inn t\u00c3\u00b6lu.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -659,2 +667,6 @@ msgstr \"Sl\u00c3\u00a1\u00c3\u00b0u inn gilt t\u00c3\u00admabil.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Fj\u00c3\u00b6ldi daga ver\u00c3\u00b0ur a\u00c3\u00b0 vera \u00c3\u00a1 milli {min_days} og {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -857,21 +869,21 @@ msgstr \"sunnudagur\"",
                " msgid \"Mon\"",
                "-msgstr \"M\u00c3\u00a1n\"",
                "+msgstr \"m\u00c3\u00a1n\"",
                " msgid \"Tue\"",
                "-msgstr \"\u00c3\u009eri\"",
                "+msgstr \"\u00c3\u00beri\"",
                " msgid \"Wed\"",
                "-msgstr \"Mi\u00c3\u00b0\"",
                "+msgstr \"mi\u00c3\u00b0\"",
                " msgid \"Thu\"",
                "-msgstr \"Fim\"",
                "+msgstr \"fim\"",
                " msgid \"Fri\"",
                "-msgstr \"F\u00c3\u00b6s\"",
                "+msgstr \"f\u00c3\u00b6s\"",
                " msgid \"Sat\"",
                "-msgstr \"Lau\"",
                "+msgstr \"lau\"",
                " msgid \"Sun\"",
                "-msgstr \"Sun\"",
                "+msgstr \"sun\"",
                "@@ -951,3 +963,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"Jan.\"",
                "-msgstr \"Jan.\"",
                "+msgstr \"jan.\"",
                "@@ -955,3 +967,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"Feb.\"",
                "-msgstr \"Feb.\"",
                "+msgstr \"feb.\"",
                "@@ -959,3 +971,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"March\"",
                "-msgstr \"Mars\"",
                "+msgstr \"mars\"",
                "@@ -963,3 +975,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"April\"",
                "-msgstr \"Apr\u00c3\u00adl\"",
                "+msgstr \"apr\u00c3\u00adl\"",
                "@@ -967,3 +979,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"May\"",
                "-msgstr \"Ma\u00c3\u00ad\"",
                "+msgstr \"ma\u00c3\u00ad\"",
                "@@ -971,3 +983,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"June\"",
                "-msgstr \"J\u00c3\u00ban\u00c3\u00ad\"",
                "+msgstr \"j\u00c3\u00ban\u00c3\u00ad\"",
                "@@ -975,3 +987,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"July\"",
                "-msgstr \"J\u00c3\u00bal\u00c3\u00ad\"",
                "+msgstr \"j\u00c3\u00bal\u00c3\u00ad\"",
                "@@ -979,3 +991,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"Aug.\"",
                "-msgstr \"\u00c3\u0081g.\"",
                "+msgstr \"\u00c3\u00a1g.\"",
                "@@ -983,3 +995,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"Sept.\"",
                "-msgstr \"Sept.\"",
                "+msgstr \"sept.\"",
                "@@ -987,3 +999,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"Oct.\"",
                "-msgstr \"Okt.\"",
                "+msgstr \"okt.\"",
                "@@ -991,3 +1003,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"Nov.\"",
                "-msgstr \"N\u00c3\u00b3v.\"",
                "+msgstr \"n\u00c3\u00b3v.\"",
                "@@ -995,3 +1007,3 @@ msgctxt \"abbrev. month\"",
                " msgid \"Dec.\"",
                "-msgstr \"Des.\"",
                "+msgstr \"des.\"",
                "@@ -999,3 +1011,3 @@ msgctxt \"alt. month\"",
                " msgid \"January\"",
                "-msgstr \"Jan\u00c3\u00baar\"",
                "+msgstr \"jan\u00c3\u00baar\"",
                "@@ -1003,3 +1015,3 @@ msgctxt \"alt. month\"",
                " msgid \"February\"",
                "-msgstr \"Febr\u00c3\u00baar\"",
                "+msgstr \"febr\u00c3\u00baar\"",
                "@@ -1007,3 +1019,3 @@ msgctxt \"alt. month\"",
                " msgid \"March\"",
                "-msgstr \"Mars\"",
                "+msgstr \"mars\"",
                "@@ -1011,3 +1023,3 @@ msgctxt \"alt. month\"",
                " msgid \"April\"",
                "-msgstr \"Apr\u00c3\u00adl\"",
                "+msgstr \"apr\u00c3\u00adl\"",
                "@@ -1015,3 +1027,3 @@ msgctxt \"alt. month\"",
                " msgid \"May\"",
                "-msgstr \"Ma\u00c3\u00ad\"",
                "+msgstr \"ma\u00c3\u00ad\"",
                "@@ -1019,3 +1031,3 @@ msgctxt \"alt. month\"",
                " msgid \"June\"",
                "-msgstr \"J\u00c3\u00ban\u00c3\u00ad\"",
                "+msgstr \"j\u00c3\u00ban\u00c3\u00ad\"",
                "@@ -1023,3 +1035,3 @@ msgctxt \"alt. month\"",
                " msgid \"July\"",
                "-msgstr \"J\u00c3\u00bal\u00c3\u00ad\"",
                "+msgstr \"j\u00c3\u00bal\u00c3\u00ad\"",
                "@@ -1027,3 +1039,3 @@ msgctxt \"alt. month\"",
                " msgid \"August\"",
                "-msgstr \"\u00c3\u0081g\u00c3\u00bast\"",
                "+msgstr \"\u00c3\u00a1g\u00c3\u00bast\"",
                "@@ -1031,3 +1043,3 @@ msgctxt \"alt. month\"",
                " msgid \"September\"",
                "-msgstr \"September\"",
                "+msgstr \"september\"",
                "@@ -1035,3 +1047,3 @@ msgctxt \"alt. month\"",
                " msgid \"October\"",
                "-msgstr \"Okt\u00c3\u00b3ber\"",
                "+msgstr \"okt\u00c3\u00b3ber\"",
                "@@ -1039,3 +1051,3 @@ msgctxt \"alt. month\"",
                " msgid \"November\"",
                "-msgstr \"N\u00c3\u00b3vember\"",
                "+msgstr \"n\u00c3\u00b3vember\"",
                "@@ -1043,3 +1055,3 @@ msgctxt \"alt. month\"",
                " msgid \"December\"",
                "-msgstr \"Desember\"",
                "+msgstr \"desember\"",
                "diff --git a/django/conf/locale/it/LC_MESSAGES/django.mo b/django/conf/locale/it/LC_MESSAGES/django.mo",
                "index f8ae8fa60e..ece4baa2aa 100644",
                "Binary files a/django/conf/locale/it/LC_MESSAGES/django.mo and b/django/conf/locale/it/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/it/LC_MESSAGES/django.po b/django/conf/locale/it/LC_MESSAGES/django.po",
                "index a5f8ffed80..35ad800b54 100644",
                "--- a/django/conf/locale/it/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/it/LC_MESSAGES/django.po",
                "@@ -3,5 +3,6 @@",
                " # Translators:",
                "-# bbstuntman <claudiu.andrei.roman@gmail.com>, 2017",
                "+# Topolino_Hackerino <claudiu.andrei.roman@gmail.com>, 2017",
                " # Carlo Miron <C8E@miron.it>, 2011",
                " # Carlo Miron <C8E@miron.it>, 2014",
                "+# Carlo Miron <C8E@miron.it>, 2018",
                " # Denis Darii <denis.darii@gmail.com>, 2011",
                "@@ -12,2 +13,3 @@",
                " # Marco Bonetti, 2014",
                "+# Mirco Grillo <mirco.grillomg@gmail.com>, 2018",
                " # Nicola Larosa <transifex@teknico.net>, 2013",
                "@@ -21,5 +23,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 13:51+0000\\n\"",
                "-\"Last-Translator: palmux <palmux@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-30 21:04+0000\\n\"",
                "+\"Last-Translator: Carlo Miron <C8E@miron.it>\\n\"",
                " \"Language-Team: Italian (http://www.transifex.com/django/django/language/\"",
                "@@ -173,2 +175,5 @@ msgstr \"Georgiano\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Cabilo\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -396,2 +401,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Inserisci un numero.\"",
                "+",
                " #, python-format",
                "@@ -475,2 +483,6 @@ msgstr \"Il valore '%(value)s' deve essere True oppure False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"Il valore di %(value)s deve essere True, False o None\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -651,5 +663,2 @@ msgstr \"Inserisci un numero intero.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Inserisci un numero.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -666,2 +675,6 @@ msgstr \"Inserisci una durata valida.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Il numero di giorni deve essere compreso tra {min_days} e {max_days}\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/ja/LC_MESSAGES/django.mo b/django/conf/locale/ja/LC_MESSAGES/django.mo",
                "index 9c7fa3497f..cf1abc4c03 100644",
                "Binary files a/django/conf/locale/ja/LC_MESSAGES/django.mo and b/django/conf/locale/ja/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/ja/LC_MESSAGES/django.po b/django/conf/locale/ja/LC_MESSAGES/django.po",
                "index d078258f54..04b771bfaa 100644",
                "--- a/django/conf/locale/ja/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/ja/LC_MESSAGES/django.po",
                "@@ -7,3 +7,3 @@",
                " # Masashi SHIBATA <contact@c-bata.link>, 2017",
                "-# Shinya Okano <tokibito@gmail.com>, 2012-2017",
                "+# Shinya Okano <tokibito@gmail.com>, 2012-2018",
                " # Tetsuya Morimoto <tetsuya.morimoto@gmail.com>, 2011",
                "@@ -13,4 +13,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-04 02:33+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-23 03:26+0000\\n\"",
                " \"Last-Translator: Shinya Okano <tokibito@gmail.com>\\n\"",
                "@@ -384,2 +384,5 @@ msgstr[0] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00e6\u0095\u00b4\u00e6\u0095\u00b0\u00e3\u0082\u0092\u00e5\u0085\u00a5\u00e5\u008a\u009b\u00e3\u0081\u0097\u00e3\u0081\u00a6\u00e3\u0081\u008f\u00e3\u0081\u00a0\u00e3\u0081\u0095\u00e3\u0081\u0084\u00e3\u0080\u0082\"",
                "+",
                " #, python-format",
                "@@ -460,2 +463,6 @@ msgstr \"'%(value)s' \u00e3\u0081\u00af\u00e7\u009c\u009f\u00e5\u0081\u00bd\u00e5\u0080\u00a4\u00e3\u0081\u00ab\u00e3\u0081\u0097\u00e3\u0081\u00aa\u00e3\u0081\u0091\u00e3\u0082\u008c\u00e3\u0081\u00b0\u00e3\u0081\u00aa\u00e3\u0082\u008a\u00e3\u0081\u00be\u00e3\u0081\u009b\u00e3\u0082\u0093\u00e3\u0080\u0082\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' \u00e3\u0081\u00afTrue\u00e3\u0080\u0081False\u00e3\u0081\u00be\u00e3\u0081\u009f\u00e3\u0081\u00afNone\u00e3\u0081\u00ae\u00e5\u0080\u00a4\u00e3\u0081\u00a7\u00e3\u0081\u00aa\u00e3\u0081\u0091\u00e3\u0082\u008c\u00e3\u0081\u00b0\u00e3\u0081\u00aa\u00e3\u0082\u008a\u00e3\u0081\u00be\u00e3\u0081\u009b\u00e3\u0082\u0093\u00e3\u0080\u0082\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -631,5 +638,2 @@ msgstr \"\u00e6\u0095\u00b4\u00e6\u0095\u00b0\u00e3\u0082\u0092\u00e5\u0085\u00a5\u00e5\u008a\u009b\u00e3\u0081\u0097\u00e3\u0081\u00a6\u00e3\u0081\u008f\u00e3\u0081\u00a0\u00e3\u0081\u0095\u00e3\u0081\u0084\u00e3\u0080\u0082\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00e6\u0095\u00b4\u00e6\u0095\u00b0\u00e3\u0082\u0092\u00e5\u0085\u00a5\u00e5\u008a\u009b\u00e3\u0081\u0097\u00e3\u0081\u00a6\u00e3\u0081\u008f\u00e3\u0081\u00a0\u00e3\u0081\u0095\u00e3\u0081\u0084\u00e3\u0080\u0082\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -646,2 +650,6 @@ msgstr \"\u00e6\u0099\u0082\u00e9\u0096\u0093\u00e5\u00b7\u00ae\u00e5\u0088\u0086\u00e3\u0082\u0092\u00e6\u00ad\u00a3\u00e3\u0081\u0097\u00e3\u0081\u008f\u00e5\u0085\u00a5\u00e5\u008a\u009b\u00e3\u0081\u0097\u00e3\u0081\u00a6\u00e3\u0081\u008f\u00e3\u0081\u00a0\u00e3\u0081\u0095\u00e3\u0081\u0084\u00e3\u0080\u0082\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\u00e6\u0097\u00a5\u00e6\u0095\u00b0\u00e3\u0081\u00af{min_days}\u00e3\u0081\u008b\u00e3\u0082\u0089{max_days}\u00e3\u0081\u00ae\u00e9\u0096\u0093\u00e3\u0081\u00a7\u00e3\u0081\u00aa\u00e3\u0081\u0091\u00e3\u0082\u008c\u00e3\u0081\u00b0\u00e3\u0081\u00aa\u00e3\u0082\u008a\u00e3\u0081\u00be\u00e3\u0081\u009b\u00e3\u0082\u0093\u00e3\u0080\u0082\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/ko/LC_MESSAGES/django.mo b/django/conf/locale/ko/LC_MESSAGES/django.mo",
                "index 23b87ccb9b..319303c44f 100644",
                "Binary files a/django/conf/locale/ko/LC_MESSAGES/django.mo and b/django/conf/locale/ko/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/ko/LC_MESSAGES/django.po b/django/conf/locale/ko/LC_MESSAGES/django.po",
                "index 0c2e0e20ae..03c1f6643c 100644",
                "--- a/django/conf/locale/ko/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/ko/LC_MESSAGES/django.po",
                "@@ -4,3 +4,3 @@",
                " # BJ Jang <qgis.tr.kr@gmail.com>, 2014",
                "-# \u00ec\u00a4\u0080\u00ea\u00b5\u00ac \u00ea\u00b0\u0095 <chr0m3.kr@gmail.com>, 2017",
                "+# JunGu Kang <chr0m3.kr@gmail.com>, 2017",
                " # Jiyoon, Ha <cryptography@konkuk.ac.kr>, 2016",
                "@@ -13,4 +13,5 @@",
                " # JuneHyeon Bae <devunt@gmail.com>, 2014",
                "-# \u00ec\u00a4\u0080\u00ea\u00b5\u00ac \u00ea\u00b0\u0095 <chr0m3.kr@gmail.com>, 2015",
                "+# JunGu Kang <chr0m3.kr@gmail.com>, 2015",
                " # Kagami Sascha Rosylight <saschanaz@outlook.com>, 2017",
                "+# Noh Seho <iam@sehonoh.kr>, 2018",
                " # Subin Choi <os1742@gmail.com>, 2016",
                "@@ -21,5 +22,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-11 14:17+0000\\n\"",
                "-\"Last-Translator: \u00ec\u00a4\u0080\u00ea\u00b5\u00ac \u00ea\u00b0\u0095 <chr0m3.kr@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-18 08:57+0000\\n\"",
                "+\"Last-Translator: Noh Seho <iam@sehonoh.kr>\\n\"",
                " \"Language-Team: Korean (http://www.transifex.com/django/django/language/ko/)\\n\"",
                "@@ -391,2 +392,5 @@ msgstr[0] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00ec\u0088\u00ab\u00ec\u009e\u0090\u00eb\u00a5\u00bc \u00ec\u009e\u0085\u00eb\u00a0\u00a5\u00ed\u0095\u0098\u00ec\u0084\u00b8\u00ec\u009a\u0094.\"",
                "+",
                " #, python-format",
                "@@ -467,2 +471,6 @@ msgstr \"'%(value)s' \u00ea\u00b0\u0092\u00ec\u009d\u0080 \u00ea\u00b0\u0092\u00ec\u009d\u00b4 \u00ec\u0097\u0086\u00ea\u00b1\u00b0\u00eb\u0082\u0098, \u00ec\u00b0\u00b8 \u00eb\u0098\u0090\u00eb\u008a\u0094 \u00ea\u00b1\u00b0\u00ec\u00a7\u0093 \u00ec\u00a4\u0091 \u00ed\u0095\u0098\u00eb\u0082\u0098 \u00ec\u0097\u00ac\u00ec\u0095\u00bc",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s'\u00ea\u00b0\u0092\u00ec\u009d\u0080 \u00eb\u00b0\u0098\u00eb\u0093\u009c\u00ec\u008b\u009c True, False, None \u00ec\u00a4\u0091 \u00ed\u0095\u0098\u00eb\u0082\u0098\u00ec\u0097\u00ac\u00ec\u0095\u00bc\u00eb\u00a7\u008c \u00ed\u0095\u00a9\u00eb\u008b\u0088\u00eb\u008b\u00a4.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -640,5 +648,2 @@ msgstr \"\u00ec\u00a0\u0095\u00ec\u0088\u0098\u00eb\u00a5\u00bc \u00ec\u009e\u0085\u00eb\u00a0\u00a5\u00ed\u0095\u0098\u00ec\u0084\u00b8\u00ec\u009a\u0094.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00ec\u0088\u00ab\u00ec\u009e\u0090\u00eb\u00a5\u00bc \u00ec\u009e\u0085\u00eb\u00a0\u00a5\u00ed\u0095\u0098\u00ec\u0084\u00b8\u00ec\u009a\u0094.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -655,2 +660,6 @@ msgstr \"\u00ec\u0098\u00ac\u00eb\u00b0\u0094\u00eb\u00a5\u00b8 \u00ea\u00b8\u00b0\u00ea\u00b0\u0084\u00ec\u009d\u0084 \u00ec\u009e\u0085\u00eb\u00a0\u00a5\u00ed\u0095\u0098\u00ec\u0084\u00b8\u00ec\u009a\u0094.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\u00eb\u0082\u00a0\u00ec\u00a7\u009c\u00eb\u008a\u0094 {min_days}\u00ec\u0099\u0080 {max_days} \u00ec\u0082\u00ac\u00ec\u009d\u00b4\u00ec\u0097\u00ac\u00ec\u0095\u00bc \u00ed\u0095\u00a9\u00eb\u008b\u0088\u00eb\u008b\u00a4.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/lt/LC_MESSAGES/django.mo b/django/conf/locale/lt/LC_MESSAGES/django.mo",
                "index c474f7a623..96ff3bdfb2 100644",
                "Binary files a/django/conf/locale/lt/LC_MESSAGES/django.mo and b/django/conf/locale/lt/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/lt/LC_MESSAGES/django.po b/django/conf/locale/lt/LC_MESSAGES/django.po",
                "index d398d13bc9..5480854cbd 100644",
                "--- a/django/conf/locale/lt/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/lt/LC_MESSAGES/django.po",
                "@@ -6,3 +6,3 @@",
                " # lauris <lauris@runbox.com>, 2011",
                "-# Matas Dailyda <matas@dailyda.com>, 2015-2017",
                "+# Matas Dailyda <matas@dailyda.com>, 2015-2018",
                " # naktinis <naktinis@gmail.com>, 2012",
                "@@ -16,4 +16,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-04 11:04+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 08:24+0000\\n\"",
                " \"Last-Translator: Matas Dailyda <matas@dailyda.com>\\n\"",
                "@@ -25,4 +25,5 @@ msgstr \"\"",
                " \"Language: lt\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && (n\"",
                "-\"%100<10 || n%100>=20) ? 1 : 2);\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 10 == 1 && (n % 100 > 19 || n % 100 < \"",
                "+\"11) ? 0 : (n % 10 >= 2 && n % 10 <=9) && (n % 100 > 19 || n % 100 < 11) ? \"",
                "+\"1 : n % 1 != 0 ? 2: 3);\\n\"",
                "@@ -384,2 +385,5 @@ msgstr[2] \"\"",
                " \"(dabartinis ilgis %(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"\u00c4\u00aesitikinkite, kad reik\u00c5\u00a1m\u00c4\u0097 sudaryta i\u00c5\u00a1 nema\u00c5\u00beiau kaip %(limit_value)d \u00c5\u00beenkl\u00c5\u00b3 \"",
                "+\"(dabartinis ilgis %(show_value)d).\"",
                "@@ -401,2 +405,8 @@ msgstr[2] \"\"",
                " \"(dabartinis ilgis %(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"\u00c4\u00aesitikinkite, kad reik\u00c5\u00a1m\u00c4\u0097 sudaryta i\u00c5\u00a1 nedaugiau kaip %(limit_value)d \u00c5\u00beenkl\u00c5\u00b3 \"",
                "+\"(dabartinis ilgis %(show_value)d).\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00c4\u00aeveskite skai\u00c4\u008di\u00c5\u00b3.\"",
                "@@ -408,2 +418,3 @@ msgstr[1] \"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmenys.\"",
                " msgstr[2] \"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmen\u00c5\u00b3.\"",
                "+msgstr[3] \"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmen\u00c5\u00b3.\"",
                "@@ -415,2 +426,3 @@ msgstr[1] \"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmenys po kablelio.\"",
                " msgstr[2] \"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmen\u00c5\u00b3 po kablelio.\"",
                "+msgstr[3] \"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmen\u00c5\u00b3 po kablelio.\"",
                "@@ -426,2 +438,4 @@ msgstr[2] \"\"",
                " \"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmen\u00c5\u00b3 prie\u00c5\u00a1 kablel\u00c4\u00af.\"",
                "+msgstr[3] \"\"",
                "+\"\u00c4\u00aesitikinkite, kad yra nedaugiau nei %(max)s skaitmen\u00c5\u00b3 prie\u00c5\u00a1 kablel\u00c4\u00af.\"",
                "@@ -485,2 +499,6 @@ msgstr \"'%(value)s' reik\u00c5\u00a1m\u00c4\u0097 turi b\u00c5\u00abti arba True, arba False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' reik\u00c5\u00a1m\u00c4\u0097 turi b\u00c5\u00abti True, False, arba None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -661,5 +679,2 @@ msgstr \"\u00c4\u00aeveskite piln\u00c4\u0085 skai\u00c4\u008di\u00c5\u00b3.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00c4\u00aeveskite skai\u00c4\u008di\u00c5\u00b3.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -676,2 +691,6 @@ msgstr \"\u00c4\u00aeveskite tinkam\u00c4\u0085 trukm\u00c4\u0099.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Dien\u00c5\u00b3 skai\u00c4\u008dius turi b\u00c5\u00abti tarp {min_days} ir {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -698,2 +717,5 @@ msgstr[2] \"\"",
                " \"\u00c5\u00beenkl\u00c5\u00b3 (dabartinis ilgis %(length)d).\"",
                "+msgstr[3] \"\"",
                "+\"\u00c4\u00aesitikinkite, kad failo pavadinimas sudarytas i\u00c5\u00a1 nedaugiau kaip %(max)d \"",
                "+\"\u00c5\u00beenkl\u00c5\u00b3 (dabartinis ilgis %(length)d).\"",
                "@@ -739,2 +761,3 @@ msgstr[1] \"Pra\u00c5\u00a1ome pateikti %d arba ma\u00c5\u00beiau form\u00c5\u00b3.\"",
                " msgstr[2] \"Pra\u00c5\u00a1ome pateikti %d arba ma\u00c5\u00beiau form\u00c5\u00b3.\"",
                "+msgstr[3] \"Pra\u00c5\u00a1ome pateikti %d arba ma\u00c5\u00beiau form\u00c5\u00b3.\"",
                "@@ -746,2 +769,3 @@ msgstr[1] \"Pra\u00c5\u00a1ome pateikti %d arba daugiau form\u00c5\u00b3.\"",
                " msgstr[2] \"Pra\u00c5\u00a1ome pateikti %d arba daugiau form\u00c5\u00b3.\"",
                "+msgstr[3] \"Pra\u00c5\u00a1ome pateikti %d arba daugiau form\u00c5\u00b3.\"",
                "@@ -819,2 +843,3 @@ msgstr[1] \"%(size)d baitai\"",
                " msgstr[2] \"%(size)d baitai\"",
                "+msgstr[3] \"%(size)d baitai\"",
                "@@ -1089,2 +1114,3 @@ msgstr[1] \"%d metai\"",
                " msgstr[2] \"%d met\u00c5\u00b3\"",
                "+msgstr[3] \"%d met\u00c5\u00b3\"",
                "@@ -1096,2 +1122,3 @@ msgstr[1] \"%d m\u00c4\u0097nesiai\"",
                " msgstr[2] \"%d m\u00c4\u0097nesi\u00c5\u00b3\"",
                "+msgstr[3] \"%d m\u00c4\u0097nesi\u00c5\u00b3\"",
                "@@ -1103,2 +1130,3 @@ msgstr[1] \"%d savait\u00c4\u0097s\"",
                " msgstr[2] \"%d savai\u00c4\u008di\u00c5\u00b3\"",
                "+msgstr[3] \"%d savai\u00c4\u008di\u00c5\u00b3\"",
                "@@ -1110,2 +1138,3 @@ msgstr[1] \"%d dienos\"",
                " msgstr[2] \"%d dien\u00c5\u00b3\"",
                "+msgstr[3] \"%d dien\u00c5\u00b3\"",
                "@@ -1117,2 +1146,3 @@ msgstr[1] \"%d valandos\"",
                " msgstr[2] \"%d valand\u00c5\u00b3\"",
                "+msgstr[3] \"%d valand\u00c5\u00b3\"",
                "@@ -1124,2 +1154,3 @@ msgstr[1] \"%d minut\u00c4\u0097s\"",
                " msgstr[2] \"%d minu\u00c4\u008di\u00c5\u00b3\"",
                "+msgstr[3] \"%d minu\u00c4\u008di\u00c5\u00b3\"",
                "diff --git a/django/conf/locale/lv/LC_MESSAGES/django.mo b/django/conf/locale/lv/LC_MESSAGES/django.mo",
                "index 786de09fac..a0771eb559 100644",
                "Binary files a/django/conf/locale/lv/LC_MESSAGES/django.mo and b/django/conf/locale/lv/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/lv/LC_MESSAGES/django.po b/django/conf/locale/lv/LC_MESSAGES/django.po",
                "index 1a57669da8..5367e97709 100644",
                "--- a/django/conf/locale/lv/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/lv/LC_MESSAGES/django.po",
                "@@ -5,3 +5,3 @@",
                " # NullIsNot0 <nullisnot0@inbox.lv>, 2017",
                "-# NullIsNot0 <nullisnot0@inbox.lv>, 2017",
                "+# NullIsNot0 <nullisnot0@inbox.lv>, 2017-2018",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "@@ -9,2 +9,3 @@",
                " # M\u00c4\u0081ris Narti\u00c5\u00a1s <maris.gis@gmail.com>, 2016",
                "+# M\u00c4\u0081rti\u00c5\u0086\u00c5\u00a1 \u00c5\u00a0ulcs <shulcsm@gmail.com>, 2018",
                " # NullIsNot0 <nullisnot0@inbox.lv>, 2018",
                "@@ -15,4 +16,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-17 17:32+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-06-03 12:12+0000\\n\"",
                " \"Last-Translator: NullIsNot0 <nullisnot0@inbox.lv>\\n\"",
                "@@ -393,2 +394,5 @@ msgstr[2] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Ievadiet skaitli.\"",
                "+",
                " #, python-format",
                "@@ -438,3 +442,3 @@ msgstr \"un\"",
                " msgid \"%(model_name)s with this %(field_labels)s already exists.\"",
                "-msgstr \"%(model_name)s ar \u00c5\u00a1iem %(field_labels)s jau eksist\u00c4\u0093.\"",
                "+msgstr \"%(model_name)s ar \u00c5\u00a1\u00c4\u0081du lauka %(field_labels)s v\u00c4\u0093rt\u00c4\u00abbu jau eksist\u00c4\u0093.\"",
                "@@ -452,3 +456,3 @@ msgstr \"\u00c5\u00a0is lauks nevar b\u00c5\u00abt tuk\u00c5\u00a1s\"",
                " msgid \"%(model_name)s with this %(field_label)s already exists.\"",
                "-msgstr \"%(model_name)s ar nosaukumu %(field_label)s jau eksist\u00c4\u0093.\"",
                "+msgstr \"%(model_name)s ar \u00c5\u00a1\u00c4\u0081du lauka %(field_label)s v\u00c4\u0093rt\u00c4\u00abbu jau eksist\u00c4\u0093.\"",
                "@@ -479,2 +483,6 @@ msgstr \"'%(value)s' v\u00c4\u0093rt\u00c4\u00abbai ir j\u00c4\u0081b\u00c5\u00abt vai nu True vai False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' v\u00c4\u0093rt\u00c4\u00abbai j\u00c4\u0081b\u00c5\u00abt True, False, vai None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -654,5 +662,2 @@ msgstr \"Ievadiet veselu skaitli.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Ievadiet skaitli.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -669,2 +674,6 @@ msgstr \"Ievadiet korektu ilgumu.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Dienu skaitam j\u00c4\u0081b\u00c5\u00abt no {min_days} l\u00c4\u00abdz {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -858,3 +867,3 @@ msgstr \"tre\u00c5\u00a1diena\"",
                " msgid \"Thursday\"",
                "-msgstr \"ceturdiena\"",
                "+msgstr \"ceturtdiena\"",
                "diff --git a/django/conf/locale/mn/LC_MESSAGES/django.mo b/django/conf/locale/mn/LC_MESSAGES/django.mo",
                "index f7433bfdc0..c195a2a569 100644",
                "Binary files a/django/conf/locale/mn/LC_MESSAGES/django.mo and b/django/conf/locale/mn/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/mn/LC_MESSAGES/django.po b/django/conf/locale/mn/LC_MESSAGES/django.po",
                "index 7626a47012..e29166db17 100644",
                "--- a/django/conf/locale/mn/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/mn/LC_MESSAGES/django.po",
                "@@ -9,4 +9,4 @@",
                " # Tsolmon <mnts26@gmail.com>, 2011",
                "-# Zorig <zorig_ezd@yahoo.com>, 2013-2014,2016,2018",
                "-# \u00d0\u0090\u00d0\u00bd\u00d1\u0085\u00d0\u00b1\u00d0\u00b0\u00d1\u008f\u00d1\u0080 \u00d0\u0090\u00d0\u00bd\u00d1\u0085\u00d0\u00b0\u00d0\u00b0 <l.ankhbayar@gmail.com>, 2013-2016",
                "+# Zorig, 2013-2014,2016,2018",
                "+# \u00d0\u0090\u00d0\u00bd\u00d1\u0085\u00d0\u00b1\u00d0\u00b0\u00d1\u008f\u00d1\u0080 \u00d0\u0090\u00d0\u00bd\u00d1\u0085\u00d0\u00b0\u00d0\u00b0 <l.ankhbayar@gmail.com>, 2013-2016,2018",
                " # \u00d0\u0091\u00d0\u00b0\u00d1\u008f\u00d1\u0081\u00d0\u00b3\u00d0\u00b0\u00d0\u00bb\u00d0\u00b0\u00d0\u00bd \u00d0\u00a6\u00d1\u008d\u00d0\u00b2\u00d0\u00bb\u00d1\u008d\u00d1\u008d <bayasaa_7672@yahoo.com>, 2011,2015,2017",
                "@@ -17,5 +17,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-02-21 00:40+0000\\n\"",
                "-\"Last-Translator: Zorig <zorig_ezd@yahoo.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-09 06:54+0000\\n\"",
                "+\"Last-Translator: \u00d0\u0090\u00d0\u00bd\u00d1\u0085\u00d0\u00b1\u00d0\u00b0\u00d1\u008f\u00d1\u0080 \u00d0\u0090\u00d0\u00bd\u00d1\u0085\u00d0\u00b0\u00d0\u00b0 <l.ankhbayar@gmail.com>\\n\"",
                " \"Language-Team: Mongolian (http://www.transifex.com/django/django/language/\"",
                "@@ -170,3 +170,3 @@ msgstr \"\u00d0\u0093\u00d2\u00af\u00d1\u0080\u00d0\u00b6\"",
                " msgid \"Kabyle\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u009a\u00d0\u00b0\u00d0\u00b1\u00d0\u00b8\u00d0\u00bb\u00d1\u008d\"",
                "@@ -394,2 +394,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00d0\u00a2\u00d0\u00be\u00d0\u00be\u00d0\u00bd \u00d1\u0083\u00d1\u0082\u00d0\u00b3\u00d0\u00b0 \u00d0\u00be\u00d1\u0080\u00d1\u0083\u00d1\u0083\u00d0\u00bb\u00d0\u00bd\u00d0\u00b0 \u00d1\u0083\u00d1\u0083.\"",
                "+",
                " #, python-format",
                "@@ -473,2 +476,6 @@ msgstr \"'%(value)s' \u00d0\u00b7\u00d0\u00b0\u00d0\u00b0\u00d0\u00b2\u00d0\u00b0\u00d0\u00bb True \u00d1\u008d\u00d1\u0081\u00d0\u00b2\u00d1\u008d\u00d0\u00bb False \u00d1\u0083\u00d1\u0082\u00d0\u00b3\u00d0\u00b0 \u00d0\u00b0\u00d0\u00b2\u00d0\u00b0\u00d1\u0085.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -645,5 +652,2 @@ msgstr \"\u00d0\u0091\u00d2\u00af\u00d1\u0085\u00d1\u008d\u00d0\u00bb \u00d1\u0082\u00d0\u00be\u00d0\u00be\u00d0\u00bd \u00d1\u0083\u00d1\u0082\u00d0\u00b3\u00d0\u00b0 \u00d0\u00be\u00d1\u0080\u00d1\u0083\u00d1\u0083\u00d0\u00bb\u00d0\u00bd\u00d0\u00b0 \u00d1\u0083\u00d1\u0083.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00d0\u00a2\u00d0\u00be\u00d0\u00be\u00d0\u00bd \u00d1\u0083\u00d1\u0082\u00d0\u00b3\u00d0\u00b0 \u00d0\u00be\u00d1\u0080\u00d1\u0083\u00d1\u0083\u00d0\u00bb\u00d0\u00bd\u00d0\u00b0 \u00d1\u0083\u00d1\u0083.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -660,2 +664,6 @@ msgstr \"\u00d2\u00ae\u00d1\u0080\u00d0\u00b3\u00d1\u008d\u00d0\u00bb\u00d0\u00b6\u00d0\u00b8\u00d0\u00bb\u00d1\u008d\u00d1\u0085 \u00d1\u0085\u00d1\u0083\u00d0\u00b3\u00d0\u00b0\u00d1\u0086\u00d0\u00b0\u00d0\u00b0\u00d0\u00b3 \u00d0\u00b7\u00d3\u00a9\u00d0\u00b2 \u00d0\u00be\u00d1\u0080\u00d1\u0083\u00d1\u0083\u00d0\u00bb\u00d0\u00bd\u00d0\u00b0 \u00d1\u0083\u00d1\u0083.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -1229,2 +1237,6 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00d0\u00a2\u00d0\u00b0\u00d0\u00bd\u00d0\u00b8\u00d0\u00b9 \u00d1\u0082\u00d0\u00be\u00d1\u0085\u00d0\u00b8\u00d1\u0080\u00d0\u00b3\u00d0\u00be\u00d0\u00be\u00d0\u00bd\u00d1\u008b \u00d1\u0084\u00d0\u00b0\u00d0\u00b9\u00d0\u00bb \u00d0\u00b4\u00d1\u008d\u00d1\u008d\u00d1\u0080 <a href=\\\"https://docs.djangoproject.com/en/\"",
                "+\"%(version)s/ref/settings/#debug\\\" target=\\\"_blank\\\" rel=\\\"noopener\"",
                "+\"\\\">DEBUG=TRUE</a> \u00d0\u00b3\u00d1\u008d\u00d0\u00b6 \u00d1\u0082\u00d0\u00be\u00d1\u0085\u00d0\u00b8\u00d1\u0080\u00d1\u0083\u00d1\u0083\u00d0\u00bb\u00d1\u0081\u00d0\u00b0\u00d0\u00bd \u00d0\u00bc\u00d3\u00a9\u00d0\u00bd URLs \u00d0\u00b4\u00d1\u008d\u00d1\u008d\u00d1\u0080 \u00d1\u0082\u00d0\u00be\u00d1\u0085\u00d0\u00b8\u00d1\u0080\u00d0\u00b3\u00d0\u00be\u00d0\u00be \u00d1\u0085\u00d0\u00b8\u00d0\u00b9\u00d0\u00b3\u00d1\u008d\u00d1\u008d\u00d0\u00b3\u00d2\u00af\u00d0\u00b9 \u00d1\u0083\u00d1\u0087\u00d1\u0080\u00d0\u00b0\u00d0\u00b0\u00d1\u0081 \"",
                "+\"\u00d1\u008d\u00d0\u00bd\u00d1\u008d \u00d1\u0085\u00d1\u0083\u00d1\u0083\u00d0\u00b4\u00d0\u00b0\u00d1\u0081\u00d1\u008b\u00d0\u00b3 \u00d1\u0085\u00d0\u00b0\u00d1\u0080\u00d0\u00b6 \u00d0\u00b1\u00d0\u00b0\u00d0\u00b9\u00d0\u00bd\u00d0\u00b0.\"",
                "@@ -1237,3 +1249,3 @@ msgstr \"\"",
                " msgid \"Tutorial: A Polling App\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u00a5\u00d0\u00b8\u00d1\u0087\u00d1\u008d\u00d1\u008d\u00d0\u00bb: \u00d0\u00a1\u00d0\u00b0\u00d0\u00bd\u00d0\u00b0\u00d0\u00bb \u00d0\u00b0\u00d1\u0081\u00d1\u0083\u00d1\u0083\u00d0\u00bb\u00d0\u00b3\u00d0\u00b0 App\"",
                "@@ -1243,3 +1255,3 @@ msgstr \"\u00d0\u0094\u00d0\u00b6\u00d0\u00b0\u00d0\u00bd\u00d0\u00b3\u00d0\u00be\u00d1\u0082\u00d0\u00be\u00d0\u00b9 \u00d0\u00b0\u00d0\u00b6\u00d0\u00b8\u00d0\u00bb\u00d0\u00bb\u00d0\u00b0\u00d0\u00b6 \u00d1\u008d\u00d1\u0085\u00d0\u00bb\u00d1\u008d\u00d1\u0085\"",
                " msgid \"Django Community\"",
                "-msgstr \"\"",
                "+msgstr \"Django \u00d0\u0091\u00d2\u00af\u00d0\u00bb\u00d0\u00b3\u00d1\u008d\u00d0\u00bc\"",
                "diff --git a/django/conf/locale/nb/LC_MESSAGES/django.mo b/django/conf/locale/nb/LC_MESSAGES/django.mo",
                "index 92a87f4124..376044aa63 100644",
                "Binary files a/django/conf/locale/nb/LC_MESSAGES/django.mo and b/django/conf/locale/nb/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/nb/LC_MESSAGES/django.po b/django/conf/locale/nb/LC_MESSAGES/django.po",
                "index 0fa0463692..23c7e1553d 100644",
                "--- a/django/conf/locale/nb/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/nb/LC_MESSAGES/django.po",
                "@@ -9,3 +9,3 @@",
                " # Jon <jon@kolonial.no>, 2014",
                "-# Jon <jon@kolonial.no>, 2017",
                "+# Jon <jon@kolonial.no>, 2017-2018",
                " # Jon <jon@kolonial.no>, 2013",
                "@@ -18,4 +18,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-27 12:38+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-30 11:29+0000\\n\"",
                " \"Last-Translator: Jon <jon@kolonial.no>\\n\"",
                "@@ -170,2 +170,5 @@ msgstr \"Georgisk\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabylsk\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -391,2 +394,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Oppgi et tall.\"",
                "+",
                " #, python-format",
                "@@ -468,2 +474,6 @@ msgstr \"Verdien '%(value)s' m\u00c3\u00a5 v\u00c3\u00a6re enten True eller False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s'-verdien m\u00c3\u00a5 v\u00c3\u00a6re enten True, False, eller None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -643,5 +653,2 @@ msgstr \"Oppgi et heltall.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Oppgi et tall.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -658,2 +665,6 @@ msgstr \"Oppgi en gyldig varighet.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Antall dager m\u00c3\u00a5 v\u00c3\u00a6re mellom {min_days} og {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/ne/LC_MESSAGES/django.mo b/django/conf/locale/ne/LC_MESSAGES/django.mo",
                "index 6f820e144c..fc25d6d4df 100644",
                "Binary files a/django/conf/locale/ne/LC_MESSAGES/django.mo and b/django/conf/locale/ne/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/ne/LC_MESSAGES/django.po b/django/conf/locale/ne/LC_MESSAGES/django.po",
                "index c990aee18d..f8cd93baaa 100644",
                "--- a/django/conf/locale/ne/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/ne/LC_MESSAGES/django.po",
                "@@ -11,4 +11,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-02-10 13:00+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-21 02:37+0000\\n\"",
                " \"Last-Translator: Sagar Chalise <chalisesagar@gmail.com>\\n\"",
                "@@ -383,2 +383,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00e0\u00a4\u00b8\u00e0\u00a4\u0082\u00e0\u00a4\u0096\u00e0\u00a5\u008d\u00e0\u00a4\u00af\u00e0\u00a4\u00be \u00e0\u00a4\u00b0\u00e0\u00a4\u00be\u00e0\u00a4\u0096\u00e0\u00a5\u008d\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00b9\u00e0\u00a5\u008b\u00e0\u00a4\u00b8 \u00e0\u00a5\u00a4\"",
                "+",
                " #, python-format",
                "@@ -408,2 +411,3 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"'%(extension)s' \u00e0\u00a4\u00ab\u00e0\u00a4\u00be\u00e0\u00a4\u0087\u00e0\u00a4\u00b2\u00e0\u00a4\u0095\u00e0\u00a5\u008b \u00e0\u00a4\u0085\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00ae\u00e0\u00a4\u00a4\u00e0\u00a4\u00bf \u00e0\u00a4\u009b\u00e0\u00a5\u0088\u00e0\u00a4\u00a8\u00e0\u00a5\u00a4 \u00e0\u00a4\u0085\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00ae\u00e0\u00a4\u00a4\u00e0\u00a4\u00bf \u00e0\u00a4\u00ad\u00e0\u00a4\u008f\u00e0\u00a4\u0095\u00e0\u00a4\u00be \u00e0\u00a4\u00ab\u00e0\u00a4\u00be\u00e0\u00a4\u0087\u00e0\u00a4\u00b2\u00e0\u00a4\u00b9\u00e0\u00a4\u00b0\u00e0\u00a5\u0082: '%(allowed_extensions)s'\"",
                "@@ -459,2 +463,6 @@ msgstr \"%(value)s' \u00e0\u00a4\u0095\u00e0\u00a5\u008b \u00e0\u00a4\u00ae\u00e0\u00a4\u00be\u00e0\u00a4\u00a8 True \u00e0\u00a4\u0085\u00e0\u00a4\u00a5\u00e0\u00a4\u00b5\u00e0\u00a4\u00be False \u00e0\u00a4\u00b9\u00e0\u00a5\u0081\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00aa\u00e0\u00a4\u00b0",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -621,5 +629,2 @@ msgstr \"\u00e0\u00a4\u00b8\u00e0\u00a4\u0082\u00e0\u00a4\u0096\u00e0\u00a5\u008d\u00e0\u00a4\u00af\u00e0\u00a4\u00be \u00e0\u00a4\u00b0\u00e0\u00a4\u00be\u00e0\u00a4\u0096\u00e0\u00a5\u008d\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00b9\u00e0\u00a5\u008b\u00e0\u00a4\u00b8 \u00e0\u00a5\u00a4\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00e0\u00a4\u00b8\u00e0\u00a4\u0082\u00e0\u00a4\u0096\u00e0\u00a5\u008d\u00e0\u00a4\u00af\u00e0\u00a4\u00be \u00e0\u00a4\u00b0\u00e0\u00a4\u00be\u00e0\u00a4\u0096\u00e0\u00a5\u008d\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00b9\u00e0\u00a5\u008b\u00e0\u00a4\u00b8 \u00e0\u00a5\u00a4\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -636,2 +641,6 @@ msgstr \"\u00e0\u00a4\u0089\u00e0\u00a4\u00aa\u00e0\u00a4\u00af\u00e0\u00a5\u0081\u00e0\u00a4\u0095\u00e0\u00a5\u008d\u00e0\u00a4\u00a4 \u00e0\u00a4\u0085\u00e0\u00a4\u00b5\u00e0\u00a4\u00a7\u00e0\u00a4\u00bf \u00e0\u00a4\u00b0\u00e0\u00a4\u00be\u00e0\u00a4\u0096\u00e0\u00a5\u008d\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00b9\u00e0\u00a5\u008b\u00e0\u00a4\u00b8 \u00e0\u00a5\u00a4\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\u00e0\u00a4\u00a6\u00e0\u00a4\u00bf\u00e0\u00a4\u00a8 \u00e0\u00a4\u0097\u00e0\u00a4\u00a8\u00e0\u00a5\u008d\u00e0\u00a4\u00a4\u00e0\u00a5\u0080 {min_days} \u00e0\u00a4\u00b0 {max_days} \u00e0\u00a4\u00ac\u00e0\u00a5\u0080\u00e0\u00a4\u009a\u00e0\u00a4\u00ae\u00e0\u00a4\u00be \u00e0\u00a4\u00b9\u00e0\u00a5\u0081\u00e0\u00a4\u00a8\u00e0\u00a5\u0081 \u00e0\u00a4\u00aa\u00e0\u00a4\u00b0\u00e0\u00a5\u008d\u00e0\u00a4\u009b \u00e0\u00a5\u00a4 \"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -1194,6 +1203,6 @@ msgstr \"\u00e0\u00a4\u009c\u00e0\u00a5\u008d\u00e0\u00a4\u00af\u00e0\u00a4\u00be\u00e0\u00a4\u0099\u00e0\u00a5\u008d\u00e0\u00a4\u0097\u00e0\u00a5\u008b \u00e0\u00a4\u00a6\u00e0\u00a4\u00b8\u00e0\u00a5\u008d\u00e0\u00a4\u00a4\u00e0\u00a4\u00be\u00e0\u00a4\u00b5\u00e0\u00a5\u0087\u00e0\u00a4\u009c \u00e0\u00a5\u00a4\"",
                " msgid \"Topics, references, &amp; how-to's\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00a4\u00b6\u00e0\u00a5\u0080\u00e0\u00a4\u00b0\u00e0\u00a5\u008d\u00e0\u00a4\u00b7\u00e0\u00a4\u0095,  \u00e0\u00a4\u00b8\u00e0\u00a4\u00a8\u00e0\u00a5\u008d\u00e0\u00a4\u00a6\u00e0\u00a4\u00b0\u00e0\u00a5\u008d\u00e0\u00a4\u00ad \u00e0\u00a4\u00a4\u00e0\u00a4\u00a5\u00e0\u00a4\u00be \u00e0\u00a4\u00a4\u00e0\u00a4\u00b0\u00e0\u00a4\u00bf\u00e0\u00a4\u0095\u00e0\u00a4\u00be\u00e0\u00a4\u00b9\u00e0\u00a4\u00b0\u00e0\u00a5\u0082\"",
                " msgid \"Tutorial: A Polling App\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00a4\u00ae\u00e0\u00a4\u00a4\u00e0\u00a4\u00a6\u00e0\u00a4\u00be\u00e0\u00a4\u00a8 \u00e0\u00a4\u008f\u00e0\u00a4\u00aa \u00e0\u00a4\u0089\u00e0\u00a4\u00a6\u00e0\u00a4\u00be\u00e0\u00a4\u00b9\u00e0\u00a4\u00b0\u00e0\u00a4\u00a3 \"",
                "@@ -1206,2 +1215,2 @@ msgstr \"\u00e0\u00a4\u009c\u00e0\u00a5\u008d\u00e0\u00a4\u00af\u00e0\u00a4\u00be\u00e0\u00a4\u0099\u00e0\u00a5\u008d\u00e0\u00a4\u0097\u00e0\u00a5\u008b \u00e0\u00a4\u00b8\u00e0\u00a4\u00ae\u00e0\u00a5\u0081\u00e0\u00a4\u00a6\u00e0\u00a4\u00be\u00e0\u00a4\u00af\"",
                " msgid \"Connect, get help, or contribute\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00a4\u00b8\u00e0\u00a4\u00b9\u00e0\u00a4\u00af\u00e0\u00a5\u008b\u00e0\u00a4\u0097 \u00e0\u00a4\u0085\u00e0\u00a4\u00a5\u00e0\u00a4\u00b5\u00e0\u00a4\u00be \u00e0\u00a4\u00af\u00e0\u00a5\u008b\u00e0\u00a4\u0097\u00e0\u00a4\u00a6\u00e0\u00a4\u00be\u00e0\u00a4\u00a8 \u00e0\u00a4\u0097\u00e0\u00a4\u00b0\u00e0\u00a5\u0080 \u00e0\u00a4\u009c\u00e0\u00a5\u008b\u00e0\u00a4\u00a1\u00e0\u00a4\u00bf\u00e0\u00a4\u00a8\u00e0\u00a5\u0081 \u00e0\u00a4\u00b9\u00e0\u00a5\u008b\u00e0\u00a4\u00b8\"",
                "diff --git a/django/conf/locale/pl/LC_MESSAGES/django.mo b/django/conf/locale/pl/LC_MESSAGES/django.mo",
                "index cfcc4a3c85..29b40b59f6 100644",
                "Binary files a/django/conf/locale/pl/LC_MESSAGES/django.mo and b/django/conf/locale/pl/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/pl/LC_MESSAGES/django.po b/django/conf/locale/pl/LC_MESSAGES/django.po",
                "index bc674e4554..e78cca6fcc 100644",
                "--- a/django/conf/locale/pl/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/pl/LC_MESSAGES/django.po",
                "@@ -16,3 +16,3 @@",
                " # \u00c5\u0081ukasz Rekucki (lqc) <lrekucki@gmail.com>, 2011",
                "-# m_aciek <maciej.olko@gmail.com>, 2016-2017",
                "+# m_aciek <maciej.olko@gmail.com>, 2016-2018",
                " # m_aciek <maciej.olko@gmail.com>, 2015",
                "@@ -32,4 +32,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-02 15:59+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 23:43+0000\\n\"",
                " \"Last-Translator: m_aciek <maciej.olko@gmail.com>\\n\"",
                "@@ -422,2 +422,5 @@ msgstr[3] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Wpisz liczb\u00c4\u0099.\"",
                "+",
                " #, python-format",
                "@@ -513,2 +516,6 @@ msgstr \"warto\u00c5\u009b\u00c4\u0087 '%(value)s' musi by\u00c4\u0087 True lub False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"Warto\u00c5\u009b\u00c4\u0087 \u00e2\u0080\u009e%(value)s\u00e2\u0080\u009d musi wynosi\u00c4\u0087 True, False lub None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -689,5 +696,2 @@ msgstr \"Wpisz liczb\u00c4\u0099 ca\u00c5\u0082kowit\u00c4\u0085.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Wpisz liczb\u00c4\u0099.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -704,2 +708,6 @@ msgstr \"Wpisz poprawny czas trwania.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Liczba dni musi wynosi\u00c4\u0087 mi\u00c4\u0099dzy {min_days} a {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/pt_BR/LC_MESSAGES/django.mo b/django/conf/locale/pt_BR/LC_MESSAGES/django.mo",
                "index 4a4a42f4ad..851c672927 100644",
                "Binary files a/django/conf/locale/pt_BR/LC_MESSAGES/django.mo and b/django/conf/locale/pt_BR/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/pt_BR/LC_MESSAGES/django.po b/django/conf/locale/pt_BR/LC_MESSAGES/django.po",
                "index 34b546a6ee..01569ec5d5 100644",
                "--- a/django/conf/locale/pt_BR/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/pt_BR/LC_MESSAGES/django.po",
                "@@ -20,2 +20,3 @@",
                " # Luiz Boaretto <lboaretto@gmail.com>, 2017",
                "+# Marcelo Moro Brondani <mbrondani@inf.ufsm.br>, 2018",
                " # Sandro <sandrossv@hotmail.com>, 2011",
                "@@ -24,2 +25,3 @@",
                " # Wiliam Souza <wiliamsouza83@gmail.com>, 2015",
                "+# Xico Petry <xico.petry@gmail.com>, 2018",
                " msgid \"\"",
                "@@ -28,5 +30,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-22 16:27+0000\\n\"",
                "-\"Last-Translator: Camilo B. Moreira <camilo.moreira@fatec.sp.gov.br>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-19 17:55+0000\\n\"",
                "+\"Last-Translator: Xico Petry <xico.petry@gmail.com>\\n\"",
                " \"Language-Team: Portuguese (Brazil) (http://www.transifex.com/django/django/\"",
                "@@ -180,2 +182,5 @@ msgstr \"Georgiano\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Cabila\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -402,2 +407,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Informe um n\u00c3\u00bamero.\"",
                "+",
                " #, python-format",
                "@@ -483,2 +491,6 @@ msgstr \"'%(value)s' valor deve ser True ou False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"O valor '%(value)s' deve ser True, False ou Nenhum.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -659,5 +671,2 @@ msgstr \"Informe um n\u00c3\u00bamero inteiro.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Informe um n\u00c3\u00bamero.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -674,2 +683,6 @@ msgstr \"Insira uma dura\u00c3\u00a7\u00c3\u00a3o v\u00c3\u00a1lida.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"O n\u00c3\u00bamero de dias deve ser entre {min_days} e {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -1146,2 +1159,7 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Se voc\u00c3\u00aa estiver usando a tag <meta name=\\\"referrer\\\" content=\\\"no-referrer\"",
                "+\"\\\"> ou incluindo o cabe\u00c3\u00a7alho \\\"Referrer-Policy: no-referrer\\\", remova-os. A \"",
                "+\"prote\u00c3\u00a7\u00c3\u00a3o contra CSRF requer que o cabe\u00c3\u00a7alho 'Referer' fa\u00c3\u00a7a uma verifica\u00c3\u00a7\u00c3\u00a3o \"",
                "+\"rigorosa do referenciador. Se voc\u00c3\u00aa estiver preocupado com a privacidade, use \"",
                "+\"alternativas  <a rel=\\\"noreferrer\\\" ...> para links para sites de terceiros.\"",
                "diff --git a/django/conf/locale/ro/LC_MESSAGES/django.mo b/django/conf/locale/ro/LC_MESSAGES/django.mo",
                "index 9c06471ab5..0b0242abb5 100644",
                "Binary files a/django/conf/locale/ro/LC_MESSAGES/django.mo and b/django/conf/locale/ro/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/ro/LC_MESSAGES/django.po b/django/conf/locale/ro/LC_MESSAGES/django.po",
                "index f43332c099..dbc03a696c 100644",
                "--- a/django/conf/locale/ro/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/ro/LC_MESSAGES/django.po",
                "@@ -16,4 +16,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-17 09:13+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 05:42+0000\\n\"",
                " \"Last-Translator: Bogdan Mateescu\\n\"",
                "@@ -170,3 +170,3 @@ msgstr \"Georgian\u00c4\u0083\"",
                " msgid \"Kabyle\"",
                "-msgstr \"\"",
                "+msgstr \"Kabyle\"",
                "@@ -383,4 +383,4 @@ msgstr[1] \"\"",
                " msgstr[2] \"\"",
                "-\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 aceast\u00c4\u0083 valoare are cel pu\u00c8\u009bin %(limit_value)d caractere (are \"",
                "-\"%(show_value)d).\"",
                "+\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 aceast\u00c4\u0083 valoare are cel pu\u00c8\u009bin %(limit_value)d de caractere \"",
                "+\"(are %(show_value)d).\"",
                "@@ -400,4 +400,7 @@ msgstr[1] \"\"",
                " msgstr[2] \"\"",
                "-\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 aceast\u00c4\u0083 valoare are cel mult %(limit_value)d caractere (are \"",
                "-\"%(show_value)d).\"",
                "+\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 aceast\u00c4\u0083 valoare are cel mult %(limit_value)d de caractere \"",
                "+\"(are %(show_value)d).\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Introduce\u00c5\u00a3i un num\u00c4\u0083r.\"",
                "@@ -408,3 +411,3 @@ msgstr[0] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu este mai mult de %(max)s cifr\u00c4\u0083 \u00c3\u00aen total.\"",
                " msgstr[1] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s cifre \u00c3\u00aen total.\"",
                "-msgstr[2] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s cifre \u00c3\u00aen total.\"",
                "+msgstr[2] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s de cifre \u00c3\u00aen total.\"",
                "@@ -415,3 +418,3 @@ msgstr[0] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu este mai mult de %(max)s zecimal\u00c4\u0083 \u00c3\u00aen total.\"",
                " msgstr[1] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s zecimale \u00c3\u00aen total.\"",
                "-msgstr[2] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s zecimale \u00c3\u00aen total.\"",
                "+msgstr[2] \"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s de zecimale \u00c3\u00aen total.\"",
                "@@ -427,3 +430,4 @@ msgstr[1] \"\"",
                " msgstr[2] \"\"",
                "-\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s cifre \u00c3\u00aenainte de punctul zecimal.\"",
                "+\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 nu sunt mai mult de %(max)s de cifre \u00c3\u00aenainte de punctul \"",
                "+\"zecimal.\"",
                "@@ -438,3 +442,3 @@ msgstr \"\"",
                " msgid \"Null characters are not allowed.\"",
                "-msgstr \"\"",
                "+msgstr \"Caracterele Null nu sunt permise.\"",
                "@@ -488,2 +492,6 @@ msgstr \"'%(value)s' trebuie s\u00c4\u0083 fie True sau False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' valoarea trebuie s\u00c4\u0083 fie True, False, sau None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -662,5 +670,2 @@ msgstr \"Introduce\u00c5\u00a3i un num\u00c4\u0083r \u00c3\u00aentreg.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Introduce\u00c5\u00a3i un num\u00c4\u0083r.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -677,2 +682,6 @@ msgstr \"Introduce\u00c8\u009bi o durat\u00c4\u0083 valid\u00c4\u0083.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Num\u00c4\u0083rul de zile trebuie s\u00c4\u0083 fie cuprins \u00c3\u00aentre {min_days} \u00c8\u0099i {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -691,9 +700,9 @@ msgid_plural \"\"",
                " msgstr[0] \"\"",
                "-\"Verifica\u00c8\u009bi c\u00c4\u0083 numele fi\u00c8\u0099ierului are cel mult %(max)d caractere (are \"",
                "+\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 numele fi\u00c8\u0099ierului are cel mult %(max)d caracter (are \"",
                " \"%(length)d).\"",
                " msgstr[1] \"\"",
                "-\"Verifica\u00c8\u009bi c\u00c4\u0083 numele fi\u00c8\u0099ierului are cel mult %(max)d caractere (are \"",
                "+\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 numele fi\u00c8\u0099ierului are cel mult %(max)d caractere (are \"",
                " \"%(length)d).\"",
                " msgstr[2] \"\"",
                "-\"Verifica\u00c8\u009bi c\u00c4\u0083 numele fi\u00c8\u0099ierului are cel mult %(max)d caractere (are \"",
                "+\"Asigura\u00c8\u009bi-v\u00c4\u0083 c\u00c4\u0083 numele fi\u00c8\u0099ierului are cel mult %(max)d de caractere (are \"",
                " \"%(length)d).\"",
                "@@ -741,3 +750,3 @@ msgstr[0] \"Trimite\u00c8\u009bi maxim %d formular.\"",
                " msgstr[1] \"Trimite\u00c8\u009bi maxim %d formulare.\"",
                "-msgstr[2] \"Trimite\u00c8\u009bi maxim %d formulare.\"",
                "+msgstr[2] \"Trimite\u00c8\u009bi maxim %d de formulare.\"",
                "@@ -748,3 +757,3 @@ msgstr[0] \"Trimite\u00c8\u009bi minim %d formular.\"",
                " msgstr[1] \"Trimite\u00c8\u009bi minim %d formulare.\"",
                "-msgstr[2] \"Trimite\u00c8\u009bi minim %d formulare.\"",
                "+msgstr[2] \"Trimite\u00c8\u009bi minim %d de formulare.\"",
                "@@ -776,3 +785,3 @@ msgstr \"Corecta\u00c5\u00a3i valorile duplicate de mai jos.\"",
                " msgid \"The inline value did not match the parent instance.\"",
                "-msgstr \"\"",
                "+msgstr \"Valoarea \u00c3\u00aen linie nu s-a potrivit cu instan\u00c8\u009ba p\u00c4\u0083rinte.\"",
                "@@ -819,5 +828,5 @@ msgid \"%(size)d byte\"",
                " msgid_plural \"%(size)d bytes\"",
                "-msgstr[0] \"%(size)d byte\"",
                "-msgstr[1] \"%(size)d bytes\"",
                "-msgstr[2] \"%(size)d bytes\"",
                "+msgstr[0] \"%(size)d octet\"",
                "+msgstr[1] \"%(size)d octe\u00c5\u00a3i\"",
                "+msgstr[2] \"%(size)d de octe\u00c5\u00a3i\"",
                "@@ -1091,3 +1100,3 @@ msgstr[0] \"%d an\"",
                " msgstr[1] \"%d ani\"",
                "-msgstr[2] \"%d ani\"",
                "+msgstr[2] \"%d de ani\"",
                "@@ -1098,3 +1107,3 @@ msgstr[0] \"%d lun\u00c4\u0083\"",
                " msgstr[1] \"%d luni\"",
                "-msgstr[2] \"%d luni\"",
                "+msgstr[2] \"%d de luni\"",
                "@@ -1105,3 +1114,3 @@ msgstr[0] \"%d s\u00c4\u0083pt\u00c4\u0083m\u00c3\u00a2n\u00c4\u0083\"",
                " msgstr[1] \"%d s\u00c4\u0083pt\u00c4\u0083m\u00c3\u00a2ni\"",
                "-msgstr[2] \"%d s\u00c4\u0083pt\u00c4\u0083m\u00c3\u00a2ni\"",
                "+msgstr[2] \"%d de s\u00c4\u0083pt\u00c4\u0083m\u00c3\u00a2ni\"",
                "@@ -1112,3 +1121,3 @@ msgstr[0] \"%d zi\"",
                " msgstr[1] \"%d zile\"",
                "-msgstr[2] \"%d zile\"",
                "+msgstr[2] \"%d de zile\"",
                "@@ -1119,3 +1128,3 @@ msgstr[0] \"%d or\u00c4\u0083\"",
                " msgstr[1] \"%d ore\"",
                "-msgstr[2] \"%d ore\"",
                "+msgstr[2] \"%d de ore\"",
                "@@ -1124,5 +1133,5 @@ msgid \"%d minute\"",
                " msgid_plural \"%d minutes\"",
                "-msgstr[0] \"%d minut\u00c4\u0083\"",
                "+msgstr[0] \"%d minut\"",
                " msgstr[1] \"%d minute\"",
                "-msgstr[2] \"%d minute\"",
                "+msgstr[2] \"%d de minute\"",
                "@@ -1164,2 +1173,8 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Dac\u00c4\u0083 utiliza\u00c8\u009bi eticheta <meta name=\\\"referrer\\\" content=\\\"no-referrer\\\"> sau \"",
                "+\"include\u00c8\u009bi antetul 'Referrer-Policy: no-referrer', te rug\u00c4\u0083m sa \u00c3\u00ael elimini. \"",
                "+\"Protec\u00c8\u009bia CSRF necesit\u00c4\u0083 antetul 'Referer' pentru a face verificarea strict\u00c4\u0083 \"",
                "+\"a 'referer'. Dac\u00c4\u0083 sunte\u00c8\u009bi \u00c3\u00aengrijorat de confiden\u00c8\u009bialitate, utiliza\u00c8\u009bi \"",
                "+\"alternative ca <a rel=\\\"noreferrer\\\" ...> pentru linkuri c\u00c4\u0083tre site-uri \"",
                "+\"ter\u00c8\u009be.\"",
                "@@ -1189,3 +1204,3 @@ msgstr \"Niciun an specificat\"",
                " msgid \"Date out of range\"",
                "-msgstr \"\"",
                "+msgstr \"Dat\u00c4\u0083 \u00c3\u00aen afara intervalului\"",
                "@@ -1244,3 +1259,3 @@ msgstr \"Index pentru %(directory)s\"",
                " msgid \"Django: the Web framework for perfectionists with deadlines.\"",
                "-msgstr \"\"",
                "+msgstr \"Django: Framework-ul web pentru perfec\u00c8\u009bioni\u00c8\u0099ti cu termene limit\u00c4\u0083.\"",
                "@@ -1265,2 +1280,5 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"Vede\u00c8\u009bi aceast\u00c4\u0083 pagin\u00c4\u0083 deoarece <a href=\\\"https://docs.djangoproject.com/en/\"",
                "+\"%(version)s/ref/settings/#debug\\\" target=\\\"_blank\\\" rel=\\\"noopener\"",
                "+\"\\\">DEBUG=True</a> este \u00c3\u00aen fi\u00c8\u0099ierul de set\u00c4\u0083ri \u00c8\u0099i nu a\u00c8\u009bi configurat niciun URL.\"",
                "@@ -1270,3 +1288,3 @@ msgstr \"Documenta\u00c8\u009bia Django\"",
                " msgid \"Topics, references, &amp; how-to's\"",
                "-msgstr \"\"",
                "+msgstr \"Subiecte, referin\u00c5\u00a3e, &amp; cum s\u00c4\u0083\"",
                "@@ -1276,3 +1294,3 @@ msgstr \"Tutorial: O aplica\u00c8\u009bie de votare\"",
                " msgid \"Get started with Django\"",
                "-msgstr \"\"",
                "+msgstr \"\u00c3\u008encepe\u00c8\u009bi cu Django\"",
                "diff --git a/django/conf/locale/ru/LC_MESSAGES/django.mo b/django/conf/locale/ru/LC_MESSAGES/django.mo",
                "index 604202d90c..a681d9e843 100644",
                "Binary files a/django/conf/locale/ru/LC_MESSAGES/django.mo and b/django/conf/locale/ru/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/ru/LC_MESSAGES/django.po b/django/conf/locale/ru/LC_MESSAGES/django.po",
                "index 7a2563a925..ba5c81ba93 100644",
                "--- a/django/conf/locale/ru/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/ru/LC_MESSAGES/django.po",
                "@@ -8,3 +8,3 @@",
                " # eigrad <andrew@ei-grad.ru>, 2012",
                "-# Eugene MechanisM <eugene@mechanism.pro>, 2013",
                "+# Eugene <eugene.mechanism@gmail.com>, 2013",
                " # eXtractor <evg.kirov@gmail.com>, 2015",
                "@@ -16,5 +16,5 @@",
                " # Nikolay Korotkiy <sikmir@gmail.com>, 2018",
                "-# Vasiliy Anikin <anikin.vasya@gmail.com>, 2017",
                "+# \u00d0\u0092\u00d0\u00b0\u00d1\u0081\u00d1\u008f \u00d0\u0090\u00d0\u00bd\u00d0\u00b8\u00d0\u00ba\u00d0\u00b8\u00d0\u00bd <anikin.vasya@gmail.com>, 2017",
                " # \u00d0\u0090\u00d0\u00bb\u00d0\u00b5\u00d0\u00ba\u00d1\u0081\u00d0\u00b5\u00d0\u00b9 \u00d0\u0091\u00d0\u00be\u00d1\u0080\u00d0\u00b8\u00d1\u0081\u00d0\u00ba\u00d0\u00b8\u00d0\u00bd <sun.void@gmail.com>, 2013-2017",
                "-# \u00d0\u0094\u00d0\u00bc\u00d0\u00b8\u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00b9 \u00d0\u00a8\u00d0\u00b0\u00d1\u0082\u00d0\u00b5\u00d1\u0080\u00d0\u00b0 <mr.bobsans@gmail.com>, 2016",
                "+# \u00d0\u0094\u00d0\u00bc\u00d0\u00b8\u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00b9 \u00d0\u00a8\u00d0\u00b0\u00d1\u0082\u00d0\u00b5\u00d1\u0080\u00d0\u00b0 <mr.bobsans@gmail.com>, 2016,2018",
                " msgid \"\"",
                "@@ -23,5 +23,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-13 10:40+0000\\n\"",
                "-\"Last-Translator: Nikolay Korotkiy <sikmir@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-07-23 14:39+0000\\n\"",
                "+\"Last-Translator: SeryiMysh <vital@dorokhin.kz>\\n\"",
                " \"Language-Team: Russian (http://www.transifex.com/django/django/language/\"",
                "@@ -415,2 +415,5 @@ msgstr[3] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d1\u0087\u00d0\u00b8\u00d1\u0081\u00d0\u00bb\u00d0\u00be.\"",
                "+",
                " #, python-format",
                "@@ -501,2 +504,6 @@ msgstr \"\u00d0\u0097\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00b8\u00d0\u00b5 '%(value)s' \u00d0\u00b4\u00d0\u00be\u00d0\u00bb\u00d0\u00b6\u00d0\u00bd\u00d0\u00be \u00d0\u00b1\u00d1\u008b\u00d1\u0082\u00d1\u008c True \u00d0\u00b8\u00d0\u00bb\u00d0\u00b8 False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\u00d0\u0097\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00b8\u00d0\u00b5 '%(value)s' \u00d0\u00b4\u00d0\u00be\u00d0\u00bb\u00d0\u00b6\u00d0\u00bd\u00d0\u00be \u00d0\u00b1\u00d1\u008b\u00d1\u0082\u00d1\u008c True, False \u00d0\u00b8\u00d0\u00bb\u00d0\u00b8 None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -679,5 +686,2 @@ msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d1\u0086\u00d0\u00b5\u00d0\u00bb\u00d0\u00be\u00d0\u00b5 \u00d1\u0087\u00d0\u00b8\u00d1\u0081\u00d0\u00bb\u00d0\u00be.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d1\u0087\u00d0\u00b8\u00d1\u0081\u00d0\u00bb\u00d0\u00be.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -694,2 +698,6 @@ msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00bd\u00d1\u0083\u00d1\u008e \u00d0\u00bf\u00d1\u0080\u00d0\u00be\u00d0\u00b4\u00d0\u00be\u00d0\u00bb\u00d0\u00b6\u00d0\u00b8\u00d1\u0082\u00d0\u00b5\u00d0\u00bb\u00d1\u008c\u00d0\u00bd\u00d0\u00be\u00d1\u0081\u00d1\u0082\u00d1\u008c.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\u00d0\u009a\u00d0\u00be\u00d0\u00bb\u00d0\u00b8\u00d1\u0087\u00d0\u00b5\u00d1\u0081\u00d1\u0082\u00d0\u00b2\u00d0\u00be \u00d0\u00b4\u00d0\u00bd\u00d0\u00b5\u00d0\u00b9 \u00d0\u00b4\u00d0\u00be\u00d0\u00bb\u00d0\u00b6\u00d0\u00bd\u00d0\u00be \u00d0\u00b1\u00d1\u008b\u00d1\u0082\u00d1\u008c \u00d0\u00b2 \u00d0\u00b4\u00d0\u00b8\u00d0\u00b0\u00d0\u00bf\u00d0\u00b0\u00d0\u00b7\u00d0\u00be\u00d0\u00bd\u00d0\u00b5 \u00d0\u00be\u00d1\u0082 {min_days} \u00d0\u00b4\u00d0\u00be {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/sq/LC_MESSAGES/django.mo b/django/conf/locale/sq/LC_MESSAGES/django.mo",
                "index ec510342b3..75cf0547bd 100644",
                "Binary files a/django/conf/locale/sq/LC_MESSAGES/django.mo and b/django/conf/locale/sq/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/sq/LC_MESSAGES/django.po b/django/conf/locale/sq/LC_MESSAGES/django.po",
                "index a93ad3d85d..c73db58315 100644",
                "--- a/django/conf/locale/sq/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/sq/LC_MESSAGES/django.po",
                "@@ -4,3 +4,3 @@",
                " # Besnik <besnik@programeshqip.org>, 2011-2014",
                "-# Besnik <besnik@programeshqip.org>, 2015-2017",
                "+# Besnik <besnik@programeshqip.org>, 2015-2018",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "@@ -10,4 +10,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-29 22:51+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 09:14+0000\\n\"",
                " \"Last-Translator: Besnik <besnik@programeshqip.org>\\n\"",
                "@@ -162,2 +162,5 @@ msgstr \"Gjeorgjiane\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabilase\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -384,2 +387,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Jepni nj\u00c3\u00ab num\u00c3\u00abr.\"",
                "+",
                " #, python-format",
                "@@ -464,2 +470,6 @@ msgstr \"Vlera '%(value)s' duhet t\u00c3\u00ab jet\u00c3\u00ab True ose False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"Vlera p\u00c3\u00abr '%(value)s' duhet t\u00c3\u00ab jet\u00c3\u00ab ose True, ose False, ose None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -640,5 +650,2 @@ msgstr \"Jepni nj\u00c3\u00ab num\u00c3\u00abr t\u00c3\u00ab t\u00c3\u00abr\u00c3\u00ab.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Jepni nj\u00c3\u00ab num\u00c3\u00abr.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -655,2 +662,6 @@ msgstr \"Jepni nj\u00c3\u00ab koh\u00c3\u00abzgjatje t\u00c3\u00ab vlefshme.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Numri i dit\u00c3\u00abve duhet t\u00c3\u00ab jet\u00c3\u00ab mes {min_days} dhe {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -1219,3 +1230,3 @@ msgstr \"Tregues i %(directory)s\"",
                " msgid \"Django: the Web framework for perfectionists with deadlines.\"",
                "-msgstr \"\"",
                "+msgstr \"Django: platforma Web p\u00c3\u00abr perfeksionist\u00c3\u00ab me afate.\"",
                "diff --git a/django/conf/locale/sr/LC_MESSAGES/django.mo b/django/conf/locale/sr/LC_MESSAGES/django.mo",
                "index 1b736db75f..467823bb88 100644",
                "Binary files a/django/conf/locale/sr/LC_MESSAGES/django.mo and b/django/conf/locale/sr/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/sr/LC_MESSAGES/django.po b/django/conf/locale/sr/LC_MESSAGES/django.po",
                "index d596075dcb..5f426af950 100644",
                "--- a/django/conf/locale/sr/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/sr/LC_MESSAGES/django.po",
                "@@ -10,4 +10,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-30 10:00+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 20:03+0000\\n\"",
                " \"Last-Translator: Branko Kokanovic <branko@kokanovic.org>\\n\"",
                "@@ -394,2 +394,5 @@ msgstr[2] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00d0\u00a3\u00d0\u00bd\u00d0\u00b5\u00d1\u0081\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d0\u00b1\u00d1\u0080\u00d0\u00be\u00d1\u0098.\"",
                "+",
                " #, python-format",
                "@@ -476,2 +479,6 @@ msgstr \"\u00d0\u0092\u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00bd\u00d0\u00be\u00d1\u0081\u00d1\u0082 '%(value)s' \u00d0\u00bc\u00d0\u00be\u00d1\u0080\u00d0\u00b0 \u00d0\u00b1\u00d0\u00b8\u00d1\u0082\u00d0\u00b8 \u00d0\u00b8\u00d0\u00bb\u00d0\u00b8 True \u00d0\u00b8\u00d0\u00bb\u00d0\u00b8 False.",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' \u00d0\u00b2\u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00bd\u00d0\u00be\u00d1\u0081\u00d1\u0082 \u00d0\u00bc\u00d0\u00be\u00d1\u0080\u00d0\u00b0 \u00d0\u00b1\u00d0\u00b8\u00d1\u0082\u00d0\u00b8 \u00d0\u00b8\u00d0\u00bb\u00d0\u00b8 True, False, \u00d0\u00b8\u00d0\u00bb\u00d0\u00b8 None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -652,5 +659,2 @@ msgstr \"\u00d0\u00a3\u00d0\u00bd\u00d0\u00b5\u00d1\u0081\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d1\u0086\u00d0\u00b5\u00d0\u00be \u00d0\u00b1\u00d1\u0080\u00d0\u00be\u00d1\u0098.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00d0\u00a3\u00d0\u00bd\u00d0\u00b5\u00d1\u0081\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d0\u00b1\u00d1\u0080\u00d0\u00be\u00d1\u0098.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -667,2 +671,6 @@ msgstr \"\u00d0\u00a3\u00d0\u00bd\u00d0\u00b5\u00d1\u0081\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d0\u00b8\u00d1\u0081\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d0\u00b0\u00d0\u00bd \u00d0\u00b2\u00d1\u0080\u00d0\u00b5\u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0081\u00d0\u00ba\u00d0\u00b8 \u00d0\u00b8\u00d0\u00bd\u00d1\u0082\u00d0\u00b5\u00d1\u0080\u00d0\u00b2\u00d0\u00b0\u00d0\u00bb.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\u00d0\u0091\u00d1\u0080\u00d0\u00be\u00d1\u0098 \u00d0\u00b4\u00d0\u00b0\u00d0\u00bd\u00d0\u00b0 \u00d0\u00bc\u00d0\u00be\u00d1\u0080\u00d0\u00b0 \u00d0\u00b1\u00d0\u00b8\u00d1\u0082\u00d0\u00b8 \u00d0\u00b8\u00d0\u00b7\u00d0\u00bc\u00d0\u00b5\u00d1\u0092\u00d1\u0083 {min_days} \u00d0\u00b8 {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/th/LC_MESSAGES/django.mo b/django/conf/locale/th/LC_MESSAGES/django.mo",
                "index 9de95da23f..49dc53ad55 100644",
                "Binary files a/django/conf/locale/th/LC_MESSAGES/django.mo and b/django/conf/locale/th/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/th/LC_MESSAGES/django.po b/django/conf/locale/th/LC_MESSAGES/django.po",
                "index 8d9ab3d7e3..174759549c 100644",
                "--- a/django/conf/locale/th/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/th/LC_MESSAGES/django.po",
                "@@ -5,3 +5,3 @@",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "-# Kowit Charoenratchatabhan <kowit.s.c@gmail.com>, 2014",
                "+# Kowit Charoenratchatabhan <kowit.s.c@gmail.com>, 2014,2018",
                " # Naowal Siripatana <naowalzaza@gmail.com>, 2017",
                "@@ -15,4 +15,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 01:13+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 00:21+0000\\n\"",
                " \"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "@@ -166,2 +166,5 @@ msgstr \"\u00e0\u00b8\u0088\u00e0\u00b8\u00ad\u00e0\u00b8\u00a3\u00e0\u00b9\u008c\u00e0\u00b9\u0080\u00e0\u00b8\u0088\u00e0\u00b8\u00b5\u00e0\u00b8\u00a2\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -290,3 +293,3 @@ msgstr \"\u00e0\u00b8\u0088\u00e0\u00b8\u00b5\u00e0\u00b8\u0099\u00e0\u00b8\u0095\u00e0\u00b8\u00b1\u00e0\u00b8\u00a7\u00e0\u00b9\u0080\u00e0\u00b8\u0095\u00e0\u00b9\u0087\u00e0\u00b8\u00a1\"",
                " msgid \"Messages\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b8\u0082\u00e0\u00b9\u0089\u00e0\u00b8\u00ad\u00e0\u00b8\u0084\u00e0\u00b8\u00a7\u00e0\u00b8\u00b2\u00e0\u00b8\u00a1\"",
                "@@ -302,6 +305,6 @@ msgstr \"\"",
                " msgid \"That page number is not an integer\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b8\u00ab\u00e0\u00b8\u00a1\u00e0\u00b8\u00b2\u00e0\u00b8\u00a2\u00e0\u00b9\u0080\u00e0\u00b8\u00a5\u00e0\u00b8\u0082\u00e0\u00b8\u00ab\u00e0\u00b8\u0099\u00e0\u00b9\u0089\u00e0\u00b8\u00b2\u00e0\u00b8\u0094\u00e0\u00b8\u00b1\u00e0\u00b8\u0087\u00e0\u00b8\u0081\u00e0\u00b8\u00a5\u00e0\u00b9\u0088\u00e0\u00b8\u00b2\u00e0\u00b8\u00a7\u00e0\u00b9\u0084\u00e0\u00b8\u00a1\u00e0\u00b9\u0088\u00e0\u00b9\u0083\u00e0\u00b8\u008a\u00e0\u00b9\u0088\u00e0\u00b8\u0088\u00e0\u00b8\u00b3\u00e0\u00b8\u0099\u00e0\u00b8\u00a7\u00e0\u00b8\u0099\u00e0\u00b9\u0080\u00e0\u00b8\u0095\u00e0\u00b9\u0087\u00e0\u00b8\u00a1\"",
                " msgid \"That page number is less than 1\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b8\u00ab\u00e0\u00b8\u00a1\u00e0\u00b8\u00b2\u00e0\u00b8\u00a2\u00e0\u00b9\u0080\u00e0\u00b8\u00a5\u00e0\u00b8\u0082\u00e0\u00b8\u00ab\u00e0\u00b8\u0099\u00e0\u00b9\u0089\u00e0\u00b8\u00b2\u00e0\u00b8\u0094\u00e0\u00b8\u00b1\u00e0\u00b8\u0087\u00e0\u00b8\u0081\u00e0\u00b8\u00a5\u00e0\u00b9\u0088\u00e0\u00b8\u00b2\u00e0\u00b8\u00a7\u00e0\u00b8\u00a1\u00e0\u00b8\u00b5\u00e0\u00b8\u0084\u00e0\u00b9\u0088\u00e0\u00b8\u00b2\u00e0\u00b8\u0099\u00e0\u00b9\u0089\u00e0\u00b8\u00ad\u00e0\u00b8\u00a2\u00e0\u00b8\u0081\u00e0\u00b8\u00a7\u00e0\u00b9\u0088\u00e0\u00b8\u00b2 1\"",
                "@@ -374,2 +377,5 @@ msgstr[0] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00e0\u00b8\u0081\u00e0\u00b8\u00a3\u00e0\u00b8\u00ad\u00e0\u00b8\u0081\u00e0\u00b8\u00ab\u00e0\u00b8\u00a1\u00e0\u00b8\u00b2\u00e0\u00b8\u00a2\u00e0\u00b9\u0080\u00e0\u00b8\u00a5\u00e0\u00b8\u0082\"",
                "+",
                " #, python-format",
                "@@ -437,3 +443,3 @@ msgstr \"\u00e0\u00b8\u0088\u00e0\u00b8\u00b3\u00e0\u00b8\u0099\u00e0\u00b8\u00a7\u00e0\u00b8\u0099\u00e0\u00b9\u0080\u00e0\u00b8\u0095\u00e0\u00b9\u0087\u00e0\u00b8\u00a1\"",
                " msgid \"'%(value)s' value must be an integer.\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b8\u0084\u00e0\u00b9\u0088\u00e0\u00b8\u00b2\u00e0\u00b8\u0082\u00e0\u00b8\u00ad\u00e0\u00b8\u0087 %(value)s \u00e0\u00b8\u0095\u00e0\u00b9\u0089\u00e0\u00b8\u00ad\u00e0\u00b8\u0087\u00e0\u00b9\u0080\u00e0\u00b8\u009b\u00e0\u00b9\u0087\u00e0\u00b8\u0099 integer\"",
                "@@ -444,2 +450,6 @@ msgstr \"\u00e0\u00b8\u0088\u00e0\u00b8\u00b3\u00e0\u00b8\u0099\u00e0\u00b8\u00a7\u00e0\u00b8\u0099\u00e0\u00b9\u0080\u00e0\u00b8\u0095\u00e0\u00b9\u0087\u00e0\u00b8\u00a1 (8 byte)\"",
                " msgid \"'%(value)s' value must be either True or False.\"",
                "+msgstr \"\u00e0\u00b8\u0084\u00e0\u00b9\u0088\u00e0\u00b8\u00b2\u00e0\u00b8\u0082\u00e0\u00b8\u00ad\u00e0\u00b8\u0087 %(value)s \u00e0\u00b8\u0095\u00e0\u00b9\u0089\u00e0\u00b8\u00ad\u00e0\u00b8\u0087\u00e0\u00b9\u0080\u00e0\u00b8\u009b\u00e0\u00b9\u0087\u00e0\u00b8\u0099 True \u00e0\u00b8\u00ab\u00e0\u00b8\u00a3\u00e0\u00b8\u00b7\u00e0\u00b8\u00ad False \u00e0\u00b8\u00ad\u00e0\u00b8\u00a2\u00e0\u00b9\u0088\u00e0\u00b8\u00b2\u00e0\u00b8\u0087\u00e0\u00b9\u0083\u00e0\u00b8\u0094\u00e0\u00b8\u00ad\u00e0\u00b8\u00a2\u00e0\u00b9\u0088\u00e0\u00b8\u00b2\u00e0\u00b8\u0087\u00e0\u00b8\u00ab\u00e0\u00b8\u0099\u00e0\u00b8\u00b6\u00e0\u00b9\u0088\u00e0\u00b8\u0087\"",
                "+",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                " msgstr \"\"",
                "@@ -500,3 +510,3 @@ msgstr \"\"",
                " msgid \"Duration\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b8\u008a\u00e0\u00b9\u0088\u00e0\u00b8\u00a7\u00e0\u00b8\u0087\u00e0\u00b9\u0080\u00e0\u00b8\u00a7\u00e0\u00b8\u00a5\u00e0\u00b8\u00b2\"",
                "@@ -609,5 +619,2 @@ msgstr \"\u00e0\u00b8\u0081\u00e0\u00b8\u00a3\u00e0\u00b8\u00ad\u00e0\u00b8\u0081\u00e0\u00b8\u00ab\u00e0\u00b8\u00a1\u00e0\u00b8\u00b2\u00e0\u00b8\u00a2\u00e0\u00b9\u0080\u00e0\u00b8\u00a5\u00e0\u00b8\u0082\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00e0\u00b8\u0081\u00e0\u00b8\u00a3\u00e0\u00b8\u00ad\u00e0\u00b8\u0081\u00e0\u00b8\u00ab\u00e0\u00b8\u00a1\u00e0\u00b8\u00b2\u00e0\u00b8\u00a2\u00e0\u00b9\u0080\u00e0\u00b8\u00a5\u00e0\u00b8\u0082\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -622,2 +629,6 @@ msgstr \"\u00e0\u00b8\u0081\u00e0\u00b8\u00a3\u00e0\u00b8\u00b8\u00e0\u00b8\u0093\u00e0\u00b8\u00b2\u00e0\u00b9\u0083\u00e0\u00b8\u00aa\u00e0\u00b9\u0088\u00e0\u00b8\u00a7\u00e0\u00b8\u00b1\u00e0\u00b8\u0099\u00e0\u00b9\u0080\u00e0\u00b8\u00a7\u00e0\u00b8\u00a5\u00e0\u00b8\u00b2\"",
                " msgid \"Enter a valid duration.\"",
                "+msgstr \"\u00e0\u00b9\u0083\u00e0\u00b8\u00aa\u00e0\u00b9\u0088\u00e0\u00b8\u00a3\u00e0\u00b8\u00b0\u00e0\u00b8\u00a2\u00e0\u00b8\u00b0\u00e0\u00b9\u0080\u00e0\u00b8\u00a7\u00e0\u00b8\u00a5\u00e0\u00b8\u00b2\u00e0\u00b8\u0097\u00e0\u00b8\u00b5\u00e0\u00b9\u0088\u00e0\u00b8\u0096\u00e0\u00b8\u00b9\u00e0\u00b8\u0081\u00e0\u00b8\u0095\u00e0\u00b9\u0089\u00e0\u00b8\u00ad\u00e0\u00b8\u0087\"",
                "+",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                " msgstr \"\"",
                "@@ -658,3 +669,3 @@ msgstr \"\"",
                " msgid \"Enter a valid UUID.\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b9\u0083\u00e0\u00b8\u00aa\u00e0\u00b9\u0088 UUID \u00e0\u00b8\u0097\u00e0\u00b8\u00b5\u00e0\u00b9\u0088\u00e0\u00b8\u0096\u00e0\u00b8\u00b9\u00e0\u00b8\u0081\u00e0\u00b8\u0095\u00e0\u00b9\u0089\u00e0\u00b8\u00ad\u00e0\u00b8\u0087\"",
                "@@ -1047,3 +1058,3 @@ msgstr \"0 \u00e0\u00b8\u0099\u00e0\u00b8\u00b2\u00e0\u00b8\u0097\u00e0\u00b8\u00b5\"",
                " msgid \"Forbidden\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b8\u00ab\u00e0\u00b8\u00a7\u00e0\u00b8\u0087\u00e0\u00b8\u00ab\u00e0\u00b9\u0089\u00e0\u00b8\u00b2\u00e0\u00b8\u00a1\"",
                "@@ -1174,6 +1185,6 @@ msgstr \"\"",
                " msgid \"Get started with Django\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b9\u0080\u00e0\u00b8\u00a3\u00e0\u00b8\u00b4\u00e0\u00b9\u0088\u00e0\u00b8\u00a1\u00e0\u00b8\u0095\u00e0\u00b9\u0089\u00e0\u00b8\u0099\u00e0\u00b8\u0081\u00e0\u00b8\u00b1\u00e0\u00b8\u009a Django\"",
                " msgid \"Django Community\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e0\u00b8\u008a\u00e0\u00b8\u00b8\u00e0\u00b8\u00a1\u00e0\u00b8\u008a\u00e0\u00b8\u0099 Django\"",
                "diff --git a/django/conf/locale/tr/LC_MESSAGES/django.mo b/django/conf/locale/tr/LC_MESSAGES/django.mo",
                "index 83f6d1c32a..b45e506e11 100644",
                "Binary files a/django/conf/locale/tr/LC_MESSAGES/django.mo and b/django/conf/locale/tr/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/tr/LC_MESSAGES/django.po b/django/conf/locale/tr/LC_MESSAGES/django.po",
                "index 266d21c77f..f11c6bb766 100644",
                "--- a/django/conf/locale/tr/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/tr/LC_MESSAGES/django.po",
                "@@ -4,3 +4,3 @@",
                " # Ahmet Emre Alada\u00c4\u009f <emre.aladag@isik.edu.tr>, 2013",
                "-# BouRock, 2015-2017",
                "+# BouRock, 2015-2018",
                " # BouRock, 2014-2015",
                "@@ -18,4 +18,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-04 11:48+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 09:51+0000\\n\"",
                " \"Last-Translator: BouRock\\n\"",
                "@@ -396,2 +396,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Bir say\u00c4\u00b1 girin.\"",
                "+",
                " #, python-format",
                "@@ -477,2 +480,6 @@ msgstr \"'%(value)s' de\u00c4\u009feri ya True ya da False olmak zorundad\u00c4\u00b1r.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' de\u00c4\u009feri ya True, False ya da None olmak zorundad\u00c4\u00b1r.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -653,5 +660,2 @@ msgstr \"Tam bir say\u00c4\u00b1 girin.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Bir say\u00c4\u00b1 girin.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -668,2 +672,6 @@ msgstr \"Ge\u00c3\u00a7erli bir s\u00c3\u00bcre girin.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"G\u00c3\u00bcn say\u00c4\u00b1lar\u00c4\u00b1 {min_days} ve {max_days} aras\u00c4\u00b1nda olmak zorundad\u00c4\u00b1r.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo b/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo",
                "index b3a83792af..66141980d2 100644",
                "Binary files a/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo and b/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/zh_Hans/LC_MESSAGES/django.po b/django/conf/locale/zh_Hans/LC_MESSAGES/django.po",
                "index 3c376ce03b..f239ee548c 100644",
                "--- a/django/conf/locale/zh_Hans/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/zh_Hans/LC_MESSAGES/django.po",
                "@@ -3,3 +3,3 @@",
                " # Translators:",
                "-# Bestony <xiqingongzi@gmail.com>, 2017-2018",
                "+# Bai HuanCheng (Bestony) <xiqingongzi@gmail.com>, 2017-2018",
                " # Daniel Duan <DaNmarner@gmail.com>, 2013",
                "@@ -8,2 +8,3 @@",
                " # Lele Long <schemacs@gmail.com>, 2011,2015,2017",
                "+# Le Yang <youngleocn@qq.com>, 2018",
                " # Liping Wang <lynn.config@gmail.com>, 2016-2017",
                "@@ -26,5 +27,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-17 01:14+0000\\n\"",
                "-\"Last-Translator: Ziya Tang <tcztzy@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-06-25 13:50+0000\\n\"",
                "+\"Last-Translator: Le Yang <youngleocn@qq.com>\\n\"",
                " \"Language-Team: Chinese (China) (http://www.transifex.com/django/django/\"",
                "@@ -391,2 +392,5 @@ msgstr[0] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00e8\u00be\u0093\u00e5\u0085\u00a5\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00e3\u0080\u0082\"",
                "+",
                " #, python-format",
                "@@ -467,2 +471,6 @@ msgstr \"\u00e2\u0080\u0099%(value)s\u00e2\u0080\u0098 \u00e5\u00bf\u0085\u00e9\u00a1\u00bb\u00e4\u00b8\u00ba True \u00e6\u0088\u0096\u00e8\u0080\u0085 False\u00e3\u0080\u0082\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' \u00e5\u0080\u00bc\u00e5\u00bf\u0085\u00e9\u00a1\u00bb\u00e6\u0098\u00af None, True \u00e6\u0088\u0096 False \u00e4\u00b9\u008b\u00e4\u00b8\u0080\u00e3\u0080\u0082\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -633,5 +641,2 @@ msgstr \"\u00e8\u00be\u0093\u00e5\u0085\u00a5\u00e6\u0095\u00b4\u00e6\u0095\u00b0\u00e3\u0080\u0082\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00e8\u00be\u0093\u00e5\u0085\u00a5\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00e3\u0080\u0082\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -648,2 +653,6 @@ msgstr \"\u00e8\u00af\u00b7\u00e8\u00be\u0093\u00e5\u0085\u00a5\u00e6\u009c\u0089\u00e6\u0095\u0088\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0095\u00bf\u00e3\u0080\u0082\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\""
            ],
            "changed_files": [
                "django/conf/locale/az/LC_MESSAGES/django.mo",
                "django/conf/locale/az/LC_MESSAGES/django.po",
                "django/conf/locale/cs/LC_MESSAGES/django.mo",
                "django/conf/locale/cs/LC_MESSAGES/django.po",
                "django/conf/locale/da/LC_MESSAGES/django.mo",
                "django/conf/locale/da/LC_MESSAGES/django.po",
                "django/conf/locale/de/LC_MESSAGES/django.mo",
                "django/conf/locale/de/LC_MESSAGES/django.po",
                "django/conf/locale/dsb/LC_MESSAGES/django.mo",
                "django/conf/locale/dsb/LC_MESSAGES/django.po",
                "django/conf/locale/eo/LC_MESSAGES/django.mo",
                "django/conf/locale/eo/LC_MESSAGES/django.po",
                "django/conf/locale/es_AR/LC_MESSAGES/django.mo",
                "django/conf/locale/es_AR/LC_MESSAGES/django.po",
                "django/conf/locale/fa/LC_MESSAGES/django.mo",
                "django/conf/locale/fa/LC_MESSAGES/django.po",
                "django/conf/locale/fi/LC_MESSAGES/django.mo",
                "django/conf/locale/fi/LC_MESSAGES/django.po",
                "django/conf/locale/fr/LC_MESSAGES/django.mo",
                "django/conf/locale/fr/LC_MESSAGES/django.po",
                "django/conf/locale/gd/LC_MESSAGES/django.mo",
                "django/conf/locale/gd/LC_MESSAGES/django.po",
                "django/conf/locale/hsb/LC_MESSAGES/django.mo",
                "django/conf/locale/hsb/LC_MESSAGES/django.po",
                "django/conf/locale/hu/LC_MESSAGES/django.mo",
                "django/conf/locale/hu/LC_MESSAGES/django.po",
                "django/conf/locale/id/LC_MESSAGES/django.mo",
                "django/conf/locale/id/LC_MESSAGES/django.po",
                "django/conf/locale/is/LC_MESSAGES/django.mo",
                "django/conf/locale/is/LC_MESSAGES/django.po",
                "django/conf/locale/it/LC_MESSAGES/django.mo",
                "django/conf/locale/it/LC_MESSAGES/django.po",
                "django/conf/locale/ja/LC_MESSAGES/django.mo",
                "django/conf/locale/ja/LC_MESSAGES/django.po",
                "django/conf/locale/ko/LC_MESSAGES/django.mo",
                "django/conf/locale/ko/LC_MESSAGES/django.po",
                "django/conf/locale/lt/LC_MESSAGES/django.mo",
                "django/conf/locale/lt/LC_MESSAGES/django.po",
                "django/conf/locale/lv/LC_MESSAGES/django.mo",
                "django/conf/locale/lv/LC_MESSAGES/django.po",
                "django/conf/locale/mn/LC_MESSAGES/django.mo",
                "django/conf/locale/mn/LC_MESSAGES/django.po",
                "django/conf/locale/nb/LC_MESSAGES/django.mo",
                "django/conf/locale/nb/LC_MESSAGES/django.po",
                "django/conf/locale/ne/LC_MESSAGES/django.mo",
                "django/conf/locale/ne/LC_MESSAGES/django.po",
                "django/conf/locale/pl/LC_MESSAGES/django.mo",
                "django/conf/locale/pl/LC_MESSAGES/django.po",
                "django/conf/locale/pt_BR/LC_MESSAGES/django.mo",
                "django/conf/locale/pt_BR/LC_MESSAGES/django.po",
                "django/conf/locale/ro/LC_MESSAGES/django.mo",
                "django/conf/locale/ro/LC_MESSAGES/django.po",
                "django/conf/locale/ru/LC_MESSAGES/django.mo",
                "django/conf/locale/ru/LC_MESSAGES/django.po",
                "django/conf/locale/sq/LC_MESSAGES/django.mo",
                "django/conf/locale/sq/LC_MESSAGES/django.po",
                "django/conf/locale/sr/LC_MESSAGES/django.mo",
                "django/conf/locale/sr/LC_MESSAGES/django.po",
                "django/conf/locale/th/LC_MESSAGES/django.mo",
                "django/conf/locale/th/LC_MESSAGES/django.po",
                "django/conf/locale/tr/LC_MESSAGES/django.mo",
                "django/conf/locale/tr/LC_MESSAGES/django.po",
                "django/conf/locale/zh_Hans/LC_MESSAGES/django.mo",
                "django/conf/locale/zh_Hans/LC_MESSAGES/django.po"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1",
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "16fdcf67c8a26ba1d14dc3c8d608edb4a7febc0d",
            "repository": "https://github.com/django/django",
            "timestamp": 1531929255,
            "hunks": 5,
            "message": "[2.1.x] Removed duplicate words in various comments. Backport of a73cf8110e6cccbf46bf77fd4ddce2df99df53ca from master",
            "diff": [
                "diff --git a/django/contrib/gis/db/backends/base/features.py b/django/contrib/gis/db/backends/base/features.py",
                "index 91d0020ce8..66c024e606 100644",
                "--- a/django/contrib/gis/db/backends/base/features.py",
                "+++ b/django/contrib/gis/db/backends/base/features.py",
                "@@ -29,3 +29,3 @@ class BaseSpatialFeatures:",
                "     supports_empty_geometries = False",
                "-    # Can the the function be applied on geodetic coordinate systems?",
                "+    # Can the function be applied on geodetic coordinate systems?",
                "     supports_distance_geodetic = True",
                "diff --git a/django/contrib/messages/storage/fallback.py b/django/contrib/messages/storage/fallback.py",
                "index 97f82d7654..39df6f3c9d 100644",
                "--- a/django/contrib/messages/storage/fallback.py",
                "+++ b/django/contrib/messages/storage/fallback.py",
                "@@ -8,3 +8,3 @@ class FallbackStorage(BaseStorage):",
                "     Try to store all messages in the first backend. Store any unstored",
                "-    messages in each subsequent backend backend.",
                "+    messages in each subsequent backend.",
                "     \"\"\"",
                "diff --git a/django/core/management/__init__.py b/django/core/management/__init__.py",
                "index bffa3d666a..b4c28b3e62 100644",
                "--- a/django/core/management/__init__.py",
                "+++ b/django/core/management/__init__.py",
                "@@ -120,4 +120,4 @@ def call_command(command_name, *args, **options):",
                "     parse_args = [str(a) for a in args]",
                "-    # Any required arguments which are passed in via **options must must be",
                "-    # passed to parse_args().",
                "+    # Any required arguments which are passed in via **options must be passed",
                "+    # to parse_args().",
                "     parse_args += [",
                "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py",
                "index 995e89564d..f11db05b9f 100644",
                "--- a/django/db/models/sql/query.py",
                "+++ b/django/db/models/sql/query.py",
                "@@ -1460,4 +1460,4 @@ class Query:",
                "         # To avoid making every caller of this method look up transforms",
                "-        # directly, compute transforms here and and create a partial that",
                "-        # converts fields to the appropriate wrapped version.",
                "+        # directly, compute transforms here and create a partial that converts",
                "+        # fields to the appropriate wrapped version.",
                "diff --git a/django/utils/tree.py b/django/utils/tree.py",
                "index b7f7b9798b..2a188acda7 100644",
                "--- a/django/utils/tree.py",
                "+++ b/django/utils/tree.py",
                "@@ -54,3 +54,3 @@ class Node:",
                "     def __len__(self):",
                "-        \"\"\"Return the the number of children this node has.\"\"\"",
                "+        \"\"\"Return the number of children this node has.\"\"\"",
                "         return len(self.children)"
            ],
            "changed_files": [
                "django/contrib/gis/db/backends/base/features.py",
                "django/contrib/messages/storage/fallback.py",
                "django/core/management/__init__.py",
                "django/db/models/sql/query.py",
                "django/utils/tree.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1",
                "2.1.1",
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "15641950107872521862d549310d156806bc6665",
            "repository": "https://github.com/django/django",
            "timestamp": 1532131096,
            "hunks": 7,
            "message": "Improved inspectdb readability with namedtuple attributes.",
            "diff": [
                "diff --git a/django/core/management/commands/inspectdb.py b/django/core/management/commands/inspectdb.py",
                "index cc1a6adc54..cbebd6f60c 100644",
                "--- a/django/core/management/commands/inspectdb.py",
                "+++ b/django/core/management/commands/inspectdb.py",
                "@@ -95,3 +95,3 @@ class Command(BaseCommand):",
                "                     extra_params = OrderedDict()  # Holds Field parameters such as 'db_column'.",
                "-                    column_name = row[0]",
                "+                    column_name = row.name",
                "                     is_relation = column_name in relations",
                "@@ -140,3 +140,3 @@ class Command(BaseCommand):",
                "                     # table description.",
                "-                    if row[6]:  # If it's NULL...",
                "+                    if row.null_ok:  # If it's NULL...",
                "                         extra_params['blank'] = True",
                "@@ -231,3 +231,3 @@ class Command(BaseCommand):",
                "         try:",
                "-            field_type = connection.introspection.get_field_type(row[1], row)",
                "+            field_type = connection.introspection.get_field_type(row.type_code, row)",
                "         except KeyError:",
                "@@ -243,7 +243,7 @@ class Command(BaseCommand):",
                "         # Add max_length for all CharFields.",
                "-        if field_type == 'CharField' and row[3]:",
                "-            field_params['max_length'] = int(row[3])",
                "+        if field_type == 'CharField' and row.internal_size:",
                "+            field_params['max_length'] = int(row.internal_size)",
                "         if field_type == 'DecimalField':",
                "-            if row[4] is None or row[5] is None:",
                "+            if row.precision is None or row.scale is None:",
                "                 field_notes.append(",
                "@@ -251,7 +251,7 @@ class Command(BaseCommand):",
                "                     'database handles decimal fields as float')",
                "-                field_params['max_digits'] = row[4] if row[4] is not None else 10",
                "-                field_params['decimal_places'] = row[5] if row[5] is not None else 5",
                "+                field_params['max_digits'] = row.precision if row.precision is not None else 10",
                "+                field_params['decimal_places'] = row.scale if row.scale is not None else 5",
                "             else:",
                "-                field_params['max_digits'] = row[4]",
                "-                field_params['decimal_places'] = row[5]",
                "+                field_params['max_digits'] = row.precision",
                "+                field_params['decimal_places'] = row.scale"
            ],
            "changed_files": [
                "django/core/management/commands/inspectdb.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        }
    ]
}
