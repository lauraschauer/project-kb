{
    "advisory_record": {
        "cve_id": "CVE-2018-17297",
        "description": "The unzip function in ZipUtil.java in Hutool before 4.1.12 allows remote attackers to overwrite arbitrary files via directory traversal sequences in a filename within a ZIP archive.",
        "reserved_timestamp": 1537488000,
        "published_timestamp": 1537509600,
        "updated_timestamp": 1537513021,
        "repository_url": null,
        "references": {
            "": 65,
            "https://github.com/looly/hutool/issues/162": 2,
            "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax": 2,
            "https://github.com/features/actions": 1,
            "https://github.com/features/packages": 1,
            "https://github.com/features/security": 1,
            "https://github.com/features/codespaces": 1,
            "https://github.com/features/copilot": 1,
            "https://github.com/features/code-review": 1,
            "https://github.com/features/issues": 1,
            "https://github.com/features/discussions": 1,
            "https://github.com/features": 1,
            "https://docs.github.com": 1,
            "https://skills.github.com": 1,
            "https://github.blog": 1,
            "https://github.com/enterprise": 1,
            "https://github.com/team": 1,
            "https://github.com/enterprise/startups": 1,
            "https://github.com/solutions/industries/healthcare": 1,
            "https://github.com/solutions/industries/financial-services": 1,
            "https://github.com/solutions/industries/manufacturing": 1,
            "https://github.com/solutions/ci-cd": 1,
            "https://github.com/solutions/devops": 1,
            "https://github.com/solutions/devsecops": 1,
            "https://resources.github.com/learn/pathways": 1,
            "https://resources.github.com": 1,
            "https://github.com/customer-stories": 1,
            "https://partner.github.com": 1,
            "https://github.com/readme": 1,
            "https://github.com/topics": 1,
            "https://github.com/trending": 1,
            "https://github.com/collections": 1,
            "https://github.com/enterprise/advanced-security": 1,
            "https://github.com/pricing": 1,
            "https://docs.github.com/terms": 1,
            "https://docs.github.com/privacy": 1,
            "https://user-images.githubusercontent.com/39950310/45464038-50bb2780-b741-11e8-83e9-123e59e08081.png": 1,
            "https://user-images.githubusercontent.com/39950310/45464227-346bba80-b742-11e8-887c-e115396c6827.png": 1,
            "https://github.com": 1,
            "https://docs.github.com/site-policy/github-terms/github-terms-of-service": 1,
            "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement": 1,
            "https://github.com/security": 1,
            "https://www.githubstatus.com/": 1,
            "https://docs.github.com/": 1,
            "https://support.github.com?tags=dotcom-footer": 1
        },
        "affected_products": [
            "Hutool",
            "n/a"
        ],
        "versions": {
            "status": "affected",
            "version": "n/a"
        },
        "files": [
            "ZipUtil",
            "ZIP"
        ],
        "keywords": [
            "function",
            "directory",
            "attacker",
            "overwrite",
            "file",
            "filename",
            "hutool",
            "allow",
            "traversal",
            "archive",
            "sequence"
        ],
        "files_extension": [
            "java"
        ],
        "has_fixing_commit": false
    },
    "commits": [
        {
            "commit_id": "0aede2746ec3ea0e9e3d44c30ac98d94dc5b7b65",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1540262128,
            "hunks": 23,
            "message": "fix ZipUtil",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java b/hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java",
                "index 95445f1b9..761238575 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java",
                "@@ -54,3 +54,3 @@ public class FastByteArrayOutputStream extends OutputStream {",
                " \t@Override",
                "-\tpublic void close() {",
                "+\tpublic void close() throws IOException{",
                " \t\t// nop",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "index 0bf7da9af..071ce4e18 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "@@ -24,2 +24,3 @@ import cn.hutool.core.io.FastByteArrayOutputStream;",
                " import cn.hutool.core.io.FileUtil;",
                "+import cn.hutool.core.io.IORuntimeException;",
                " import cn.hutool.core.io.IoUtil;",
                "@@ -33,2 +34,4 @@ import cn.hutool.core.io.IoUtil;",
                " public class ZipUtil {",
                "+\t",
                "+\tprivate static final int DEFAULT_BYTE_ARRAY_LENGTH = 32;",
                "@@ -122,4 +125,4 @@ public class ZipUtil {",
                " \tpublic static File zip(String srcPath, String zipPath, Charset charset, boolean withSrcDir) throws UtilException {",
                "-\t\tFile srcFile = FileUtil.file(srcPath);",
                "-\t\tFile zipFile = FileUtil.file(zipPath);",
                "+\t\tfinal File srcFile = FileUtil.file(srcPath);",
                "+\t\tfinal File zipFile = FileUtil.file(zipPath);",
                " \t\tzip(zipFile, charset, withSrcDir, srcFile);",
                "@@ -528,3 +531,3 @@ public class ZipUtil {",
                " \tpublic static byte[] gzip(InputStream in) throws UtilException {",
                "-\t\treturn gzip(in, 32);",
                "+\t\treturn gzip(in, DEFAULT_BYTE_ARRAY_LENGTH);",
                " \t}",
                "@@ -541,3 +544,3 @@ public class ZipUtil {",
                " \tpublic static byte[] gzip(InputStream in, int length) throws UtilException {",
                "-\t\tfinal FastByteArrayOutputStream bos = new FastByteArrayOutputStream(length);",
                "+\t\tfinal ByteArrayOutputStream bos = new ByteArrayOutputStream(length);",
                " \t\tGZIPOutputStream gos = null;",
                "@@ -546,3 +549,2 @@ public class ZipUtil {",
                " \t\t\tIoUtil.copy(in, gos);",
                "-\t\t\treturn bos.toByteArray();",
                " \t\t} catch (IOException e) {",
                "@@ -551,4 +553,5 @@ public class ZipUtil {",
                " \t\t\tIoUtil.close(gos);",
                "-\t\t\tIoUtil.close(bos);",
                " \t\t}",
                "+\t\t//\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u00bf\u0085\u00e9\u00a1\u00bb\u00e5\u009c\u00a8\u00e5\u0085\u00b3\u00e9\u0097\u00adgos\u00e5\u0090\u008e\u00e8\u00bf\u009b\u00e8\u00a1\u008c\u00ef\u00bc\u008c\u00e5\u009b\u00a0\u00e4\u00b8\u00ba\u00e5\u0085\u00b3\u00e9\u0097\u00ad\u00e6\u0097\u00b6\u00e4\u00bc\u009a\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e6\u0089\u00a7\u00e8\u00a1\u008cfinish()\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00ef\u00bc\u008c\u00e4\u00bf\u009d\u00e8\u00af\u0081\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u0085\u00a8\u00e9\u0083\u00a8\u00e5\u0086\u0099\u00e5\u0087\u00ba",
                "+\t\treturn bos.toByteArray();",
                " \t}",
                "@@ -586,3 +589,3 @@ public class ZipUtil {",
                " \tpublic static byte[] unGzip(InputStream in) throws UtilException {",
                "-\t\treturn unGzip(in, 32);",
                "+\t\treturn unGzip(in, DEFAULT_BYTE_ARRAY_LENGTH);",
                " \t}",
                "@@ -593,3 +596,3 @@ public class ZipUtil {",
                " \t * @param in Gzip\u00e6\u0095\u00b0\u00e6\u008d\u00ae",
                "-\t * @param length \u00e4\u00bc\u00b0\u00e7\u00ae\u0097\u00e9\u0095\u00bf\u00e5\u00ba\u00a6\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u0097\u00a0\u00e6\u00b3\u0095\u00e7\u00a1\u00ae\u00e5\u00ae\u009a\u00e8\u00af\u00b7\u00e4\u00bc\u00a0\u00e5\u0085\u00a532",
                "+\t * @param length \u00e4\u00bc\u00b0\u00e7\u00ae\u0097\u00e9\u0095\u00bf\u00e5\u00ba\u00a6\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u0097\u00a0\u00e6\u00b3\u0095\u00e7\u00a1\u00ae\u00e5\u00ae\u009a\u00e8\u00af\u00b7\u00e4\u00bc\u00a0\u00e5\u0085\u00a5{@link #DEFAULT_BYTE_ARRAY_LENGTH}",
                " \t * @return \u00e8\u00a7\u00a3\u00e5\u008e\u008b\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e6\u0095\u00b0\u00e6\u008d\u00ae",
                "@@ -610,2 +613,3 @@ public class ZipUtil {",
                " \t\t}",
                "+\t\t//\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u00bf\u0085\u00e9\u00a1\u00bb\u00e5\u009c\u00a8\u00e5\u0085\u00b3\u00e9\u0097\u00adgos\u00e5\u0090\u008e\u00e8\u00bf\u009b\u00e8\u00a1\u008c\u00ef\u00bc\u008c\u00e5\u009b\u00a0\u00e4\u00b8\u00ba\u00e5\u0085\u00b3\u00e9\u0097\u00ad\u00e6\u0097\u00b6\u00e4\u00bc\u009a\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e6\u0089\u00a7\u00e8\u00a1\u008cfinish()\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00ef\u00bc\u008c\u00e4\u00bf\u009d\u00e8\u00af\u0081\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u0085\u00a8\u00e9\u0083\u00a8\u00e5\u0086\u0099\u00e5\u0087\u00ba",
                " \t\treturn bos.toByteArray();",
                "@@ -637,3 +641,2 @@ public class ZipUtil {",
                " \tpublic static byte[] zlib(File file, int level) {",
                "-\t\tfinal ByteArrayOutputStream out = new ByteArrayOutputStream();",
                " \t\tBufferedInputStream in = null;",
                "@@ -641,3 +644,3 @@ public class ZipUtil {",
                " \t\t\tin = FileUtil.getInputStream(file);",
                "-\t\t\tdeflater(in, out, level);",
                "+\t\t\treturn zlib(in, level, (int)file.length());",
                " \t\t} finally {",
                "@@ -645,3 +648,2 @@ public class ZipUtil {",
                " \t\t}",
                "-\t\treturn out.toByteArray();",
                " \t}",
                "@@ -657,4 +659,28 @@ public class ZipUtil {",
                " \tpublic static byte[] zlib(byte[] buf, int level) {",
                "-\t\tfinal ByteArrayInputStream in = new ByteArrayInputStream(buf);",
                "-\t\tfinal ByteArrayOutputStream out = new ByteArrayOutputStream(buf.length);",
                "+\t\treturn zlib(new ByteArrayInputStream(buf), level, buf.length);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u0089\u0093\u00e6\u0088\u0090Zlib\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u008c\u0085",
                "+\t * ",
                "+\t * @param in \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00b5\u0081",
                "+\t * @param level \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u00ba\u00a7\u00e5\u0088\u00ab\u00ef\u00bc\u008c0~9",
                "+\t * @return \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u0090\u008e\u00e7\u009a\u0084bytes",
                "+\t * @since 4.1.19",
                "+\t */",
                "+\tpublic static byte[] zlib(InputStream in, int level) {",
                "+\t\treturn zlib(in, level, DEFAULT_BYTE_ARRAY_LENGTH);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u0089\u0093\u00e6\u0088\u0090Zlib\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u008c\u0085",
                "+\t * ",
                "+\t * @param in \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00b5\u0081",
                "+\t * @param level \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u00ba\u00a7\u00e5\u0088\u00ab\u00ef\u00bc\u008c0~9",
                "+\t * @param length \u00e9\u00a2\u0084\u00e4\u00bc\u00b0\u00e5\u00a4\u00a7\u00e5\u00b0\u008f",
                "+\t * @return \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u0090\u008e\u00e7\u009a\u0084bytes",
                "+\t * @since 4.1.19",
                "+\t */",
                "+\tpublic static byte[] zlib(InputStream in, int level, int length) {",
                "+\t\tfinal ByteArrayOutputStream out = new ByteArrayOutputStream(length);",
                " \t\tdeflater(in, out, level);",
                "@@ -683,4 +709,26 @@ public class ZipUtil {",
                " \tpublic static byte[] unZlib(byte[] buf) {",
                "-\t\tfinal ByteArrayInputStream in = new ByteArrayInputStream(buf);",
                "-\t\tfinal ByteArrayOutputStream out = new ByteArrayOutputStream(buf.length);",
                "+\t\treturn unZlib(new ByteArrayInputStream(buf), buf.length);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u00a7\u00a3\u00e5\u008e\u008b\u00e7\u00bc\u00a9zlib",
                "+\t * ",
                "+\t * @param in \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00b5\u0081",
                "+\t * @return \u00e8\u00a7\u00a3\u00e5\u008e\u008b\u00e5\u0090\u008e\u00e7\u009a\u0084bytes",
                "+\t * @since 4.1.19",
                "+\t */",
                "+\tpublic static byte[] unZlib(InputStream in) {",
                "+\t\treturn unZlib(in, DEFAULT_BYTE_ARRAY_LENGTH);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u00a7\u00a3\u00e5\u008e\u008b\u00e7\u00bc\u00a9zlib",
                "+\t * ",
                "+\t * @param in \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00b5\u0081",
                "+\t * @param length \u00e9\u00a2\u0084\u00e4\u00bc\u00b0\u00e9\u0095\u00bf\u00e5\u00ba\u00a6",
                "+\t * @return \u00e8\u00a7\u00a3\u00e5\u008e\u008b\u00e5\u0090\u008e\u00e7\u009a\u0084bytes",
                "+\t * @since 4.1.19",
                "+\t */",
                "+\tpublic static byte[] unZlib(InputStream in, int length) {",
                "+\t\tfinal ByteArrayOutputStream out = new ByteArrayOutputStream(length);",
                " \t\tinflater(in, out);",
                "@@ -810,2 +858,6 @@ public class ZipUtil {",
                " \tprivate static void validateFiles(File zipFile, File... srcFiles) throws UtilException {",
                "+\t\tif(zipFile.isDirectory()) {",
                "+\t\t\tthrow new UtilException(\"Zip file [{}] must not be a directory !\", zipFile.getAbsoluteFile());",
                "+\t\t}",
                "+\t\t",
                " \t\tfor (File srcFile : srcFiles) {",
                "@@ -819,4 +871,5 @@ public class ZipUtil {",
                " \t\t\ttry {",
                "+\t\t\t\tfinal File parentFile = zipFile.getCanonicalFile().getParentFile();",
                " \t\t\t\t// \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u008d\u00e8\u0083\u00bd\u00e4\u00bd\u008d\u00e4\u00ba\u008e\u00e8\u00a2\u00ab\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009a\u0084\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0086\u0085",
                "-\t\t\t\tif (srcFile.isDirectory() && zipFile.getCanonicalPath().contains(srcFile.getCanonicalPath())) {",
                "+\t\t\t\tif (srcFile.isDirectory() && parentFile.getCanonicalPath().contains(srcFile.getCanonicalPath())) {",
                " \t\t\t\t\tthrow new UtilException(\"[zipPath] must not be the child directory of [srcPath]!\");",
                "@@ -824,5 +877,2 @@ public class ZipUtil {",
                "-\t\t\t\tif (false == zipFile.exists()) {",
                "-\t\t\t\t\tFileUtil.touch(zipFile);",
                "-\t\t\t\t}",
                " \t\t\t} catch (IOException e) {",
                "@@ -876,2 +926,7 @@ public class ZipUtil {",
                " \t\tIoUtil.copy(in, ios);",
                "+\t\ttry {",
                "+\t\t\tios.finish();",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new IORuntimeException(e);",
                "+\t\t}",
                " \t}",
                "@@ -888,2 +943,7 @@ public class ZipUtil {",
                " \t\tIoUtil.copy(in, ios);",
                "+\t\ttry {",
                "+\t\t\tios.finish();",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new IORuntimeException(e);",
                "+\t\t}",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java",
                "hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "RELEVANT_WORDS_IN_MESSAGE",
                    "message": "The commit message contains some relevant words: ZipUtil",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: ZipUtil, ZIP",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "8d7d0b7fb5ea4f7447b40131bffc1ec506a6528e",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1536812558,
            "hunks": 19,
            "message": "fix slip bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "index bd43dabc6..a7583be50 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "@@ -315,3 +315,4 @@ public class FileUtil {",
                " \t/**",
                "-\t * \u00e5\u0088\u009b\u00e5\u00bb\u00baFile\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00baFile\u00e5\u00af\u00b9\u00e8\u00b1\u00a1<br>",
                "+\t * \u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e4\u00bc\u009a\u00e6\u00a3\u0080\u00e6\u009f\u00a5slip\u00e6\u00bc\u008f\u00e6\u00b4\u009e\u00ef\u00bc\u008c\u00e6\u00bc\u008f\u00e6\u00b4\u009e\u00e8\u00af\u00b4\u00e6\u0098\u008e\u00e8\u00a7\u0081http://blog.nsfocus.net/zip-slip-2/",
                " \t * ",
                "@@ -322,6 +323,3 @@ public class FileUtil {",
                " \tpublic static File file(String parent, String path) {",
                "-\t\tif (StrUtil.isBlank(path)) {",
                "-\t\t\tthrow new NullPointerException(\"File path is blank!\");",
                "-\t\t}",
                "-\t\treturn new File(parent, path);",
                "+\t\treturn file(new File(parent), path);",
                " \t}",
                "@@ -329,3 +327,4 @@ public class FileUtil {",
                " \t/**",
                "-\t * \u00e5\u0088\u009b\u00e5\u00bb\u00baFile\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00baFile\u00e5\u00af\u00b9\u00e8\u00b1\u00a1<br>",
                "+\t * \u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e4\u00bc\u009a\u00e6\u00a3\u0080\u00e6\u009f\u00a5slip\u00e6\u00bc\u008f\u00e6\u00b4\u009e\u00ef\u00bc\u008c\u00e6\u00bc\u008f\u00e6\u00b4\u009e\u00e8\u00af\u00b4\u00e6\u0098\u008e\u00e8\u00a7\u0081http://blog.nsfocus.net/zip-slip-2/",
                " \t * ",
                "@@ -339,3 +338,5 @@ public class FileUtil {",
                " \t\t}",
                "-\t\treturn new File(parent, path);",
                "+\t\tfinal File file = new File(parent, path);",
                "+\t\tcheckSlip(parent, file);",
                "+\t\treturn file;",
                " \t}",
                "@@ -343,3 +344,4 @@ public class FileUtil {",
                " \t/**",
                "-\t * \u00e9\u0080\u009a\u00e8\u00bf\u0087\u00e5\u00a4\u009a\u00e5\u00b1\u0082\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * \u00e9\u0080\u009a\u00e8\u00bf\u0087\u00e5\u00a4\u009a\u00e5\u00b1\u0082\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0096\u0087\u00e4\u00bb\u00b6<br>",
                "+\t * \u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e4\u00bc\u009a\u00e6\u00a3\u0080\u00e6\u009f\u00a5slip\u00e6\u00bc\u008f\u00e6\u00b4\u009e\u00ef\u00bc\u008c\u00e6\u00bc\u008f\u00e6\u00b4\u009e\u00e8\u00af\u00b4\u00e6\u0098\u008e\u00e8\u00a7\u0081http://blog.nsfocus.net/zip-slip-2/",
                " \t * ",
                "@@ -359,3 +361,3 @@ public class FileUtil {",
                " \t\t\tif (null != name) {",
                "-\t\t\t\tfile = new File(file, name);",
                "+\t\t\t\tfile = file(file, name);",
                " \t\t\t}",
                "@@ -381,5 +383,5 @@ public class FileUtil {",
                " \t\t\tif (file == null) {",
                "-\t\t\t\tfile = new File(name);",
                "+\t\t\t\tfile = file(name);",
                " \t\t\t} else {",
                "-\t\t\t\tfile = new File(file, name);",
                "+\t\t\t\tfile = file(file, name);",
                " \t\t\t}",
                "@@ -3196,2 +3198,25 @@ public class FileUtil {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u00a3\u0080\u00e6\u009f\u00a5",
                "+\t * <p>",
                "+\t * \u00e8\u00a7\u0081http://blog.nsfocus.net/zip-slip-2/",
                "+\t * ",
                "+\t * @param parentFile \u00e7\u0088\u00b6\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * @param file \u00e5\u00ad\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * @throws IllegalArgumentException \u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e7\u009a\u0084\u00e5\u00ad\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u008d\u00e5\u009c\u00a8\u00e7\u0088\u00b6\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u00ad\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e6\u00ad\u00a4\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t */",
                "+\tpublic static void checkSlip(File parentFile, File file) throws IllegalArgumentException {",
                "+\t\tString parentCanonicalPath;",
                "+\t\tString canonicalPath;",
                "+\t\ttry {",
                "+\t\t\tparentCanonicalPath = parentFile.getCanonicalPath();",
                "+\t\t\tcanonicalPath = file.getCanonicalPath();",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new IORuntimeException(e);",
                "+\t\t}",
                "+\t\tif (false == canonicalPath.startsWith(parentCanonicalPath)) {",
                "+\t\t\tthrow new IllegalArgumentException(\"New file is outside of the parent dir: \" + file.getName());",
                "+\t\t}",
                "+\t}",
                " }",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "index ec6a6a4c3..a7a47a97b 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "@@ -388,3 +388,4 @@ public class ZipUtil {",
                " \t\t\t\tzipEntry = em.nextElement();",
                "-\t\t\t\toutItemFile = new File(outFile, zipEntry.getName());",
                "+\t\t\t\t//FileUtil.file\u00e4\u00bc\u009a\u00e6\u00a3\u0080\u00e6\u009f\u00a5slip\u00e6\u00bc\u008f\u00e6\u00b4\u009e\u00ef\u00bc\u008c\u00e6\u00bc\u008f\u00e6\u00b4\u009e\u00e8\u00af\u00b4\u00e6\u0098\u008e\u00e8\u00a7\u0081http://blog.nsfocus.net/zip-slip-2/",
                "+\t\t\t\toutItemFile = FileUtil.file(outFile, zipEntry.getName());",
                " \t\t\t\tif (zipEntry.isDirectory()) {",
                "@@ -403,3 +404,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -415,3 +416,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -428,3 +429,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -440,3 +441,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -461,3 +462,3 @@ public class ZipUtil {",
                " \t\t\t\t\tcontinue;",
                "-\t\t\t\t} else if(name.equals(zipEntry.getName())){",
                "+\t\t\t\t} else if (name.equals(zipEntry.getName())) {",
                " \t\t\t\t\treturn IoUtil.readBytes(zipFileObj.getInputStream(zipEntry));",
                "@@ -569,3 +570,3 @@ public class ZipUtil {",
                " \t// ----------------------------------------------------------------------------- Zlib",
                "-\t",
                "+",
                " \t/**",
                "@@ -582,3 +583,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -594,3 +595,3 @@ public class ZipUtil {",
                " \t\tBufferedInputStream in = null;",
                "-\t\ttry{",
                "+\t\ttry {",
                " \t\t\tin = FileUtil.getInputStream(file);",
                "@@ -617,3 +618,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "557eeb37f83094748da52c3b29124509d436af2d"
                ],
                [
                    "no-tag",
                    "76dbea63260a43bf76d1e4997d9952931b3fa6c8"
                ],
                [
                    "no-tag",
                    "33b332fac10ad356faa171ff62b833c1a8f3b5e8"
                ],
                [
                    "no-tag",
                    "ac5535c76c547312d4065c0f06df65c83233915b"
                ],
                [
                    "no-tag",
                    "485e36e2fa3993b3e3c810e8c960cbbbdc626cc8"
                ],
                [
                    "no-tag",
                    "103abf7e789054133f855fc8d33310ef664aa46c"
                ]
            ],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: ZipUtil",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fed1a1f747a9308e2f65f8dbbff05ce62478ecc0",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1536849207,
            "hunks": 10,
            "message": "fix zip bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "index a7583be50..87cb5c222 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "@@ -338,5 +338,3 @@ public class FileUtil {",
                " \t\t}",
                "-\t\tfinal File file = new File(parent, path);",
                "-\t\tcheckSlip(parent, file);",
                "-\t\treturn file;",
                "+\t\treturn checkSlip(parent, new File(parent, path));",
                " \t}",
                "@@ -3169,3 +3167,7 @@ public class FileUtil {",
                " \t\tfinal File parent = getParent(file(filePath), level);",
                "-\t\treturn null == parent ? null : parent.getAbsolutePath();",
                "+\t\ttry {",
                "+\t\t\treturn null == parent ? null : parent.getCanonicalPath();",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new IORuntimeException(e);",
                "+\t\t}",
                " \t}",
                "@@ -3206,5 +3208,6 @@ public class FileUtil {",
                " \t * @param file \u00e5\u00ad\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * @return \u00e5\u00ad\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                " \t * @throws IllegalArgumentException \u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e7\u009a\u0084\u00e5\u00ad\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u008d\u00e5\u009c\u00a8\u00e7\u0088\u00b6\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u00ad\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e6\u00ad\u00a4\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                " \t */",
                "-\tpublic static void checkSlip(File parentFile, File file) throws IllegalArgumentException {",
                "+\tpublic static File checkSlip(File parentFile, File file) throws IllegalArgumentException {",
                " \t\tString parentCanonicalPath;",
                "@@ -3220,2 +3223,3 @@ public class FileUtil {",
                " \t\t}",
                "+\t\treturn file;",
                " \t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "index a7a47a97b..985a9fbbc 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "@@ -133,4 +133,4 @@ public class ZipUtil {",
                " \t * @param zipFile \u00e7\u0094\u009f\u00e6\u0088\u0090\u00e7\u009a\u0084Zip\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00e3\u0080\u0082\u00e6\u00b3\u00a8\u00e6\u0084\u008f\u00ef\u00bc\u009azipPath\u00e4\u00b8\u008d\u00e8\u0083\u00bd\u00e6\u0098\u00afsrcPath\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e4\u00b8\u008b\u00e7\u009a\u0084\u00e5\u00ad\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9",
                "-\t * @param withSrcDir \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e8\u00a2\u00ab\u00e6\u0089\u0093\u00e5\u008c\u0085\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "-\t * @param srcFiles \u00e8\u00a6\u0081\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009a\u0084\u00e6\u00ba\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e3\u0080\u0082\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e4\u00b8\u00ba\u00e8\u00af\u00a5\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e7\u009a\u0084\u00e5\u0085\u00a8\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u009b\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e4\u00b8\u00ba\u00e8\u00af\u00a5\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e7\u009a\u0084\u00e9\u00a1\u00b6\u00e5\u00b1\u0082\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t * @param withSrcDir \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e8\u00a2\u00ab\u00e6\u0089\u0093\u00e5\u008c\u0085\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e5\u008f\u00aa\u00e9\u0092\u0088\u00e5\u00af\u00b9\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u009c\u0089\u00e6\u0095\u0088\u00e3\u0080\u0082\u00e8\u008b\u00a5\u00e4\u00b8\u00bafalse\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u008f\u00aa\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u008b\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e4\u00b8\u00batrue\u00e5\u0088\u0099\u00e5\u00b0\u0086\u00e6\u009c\u00ac\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b9\u009f\u00e5\u008e\u008b\u00e7\u00bc\u00a9",
                "+\t * @param srcFiles \u00e8\u00a6\u0081\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009a\u0084\u00e6\u00ba\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e3\u0080\u0082",
                " \t * @return \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "@@ -147,3 +147,3 @@ public class ZipUtil {",
                " \t * @param charset \u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                "-\t * @param withSrcDir \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e8\u00a2\u00ab\u00e6\u0089\u0093\u00e5\u008c\u0085\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * @param withSrcDir \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e8\u00a2\u00ab\u00e6\u0089\u0093\u00e5\u008c\u0085\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e5\u008f\u00aa\u00e9\u0092\u0088\u00e5\u00af\u00b9\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u009c\u0089\u00e6\u0095\u0088\u00e3\u0080\u0082\u00e8\u008b\u00a5\u00e4\u00b8\u00bafalse\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u008f\u00aa\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u008b\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e4\u00b8\u00batrue\u00e5\u0088\u0099\u00e5\u00b0\u0086\u00e6\u009c\u00ac\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b9\u009f\u00e5\u008e\u008b\u00e7\u00bc\u00a9",
                " \t * @param srcFiles \u00e8\u00a6\u0081\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009a\u0084\u00e6\u00ba\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e3\u0080\u0082\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e4\u00b8\u00ba\u00e8\u00af\u00a5\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e7\u009a\u0084\u00e5\u0085\u00a8\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u009b\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e4\u00b8\u00ba\u00e8\u00af\u00a5\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e7\u009a\u0084\u00e9\u00a1\u00b6\u00e5\u00b1\u0082\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "@@ -161,3 +161,4 @@ public class ZipUtil {",
                " \t\t\t\tif (srcFile.isFile() || withSrcDir) {",
                "-\t\t\t\t\tsrcRootDir = srcFile.getParent();",
                "+\t\t\t\t\t//\u00e8\u008b\u00a5\u00e6\u0098\u00af\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u00b0\u0086\u00e7\u0088\u00b6\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u00ae\u008c\u00e6\u0095\u00b4\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e9\u0083\u00bd\u00e6\u0088\u00aa\u00e5\u008f\u0096\u00e6\u008e\u0089\u00ef\u00bc\u009b\u00e8\u008b\u00a5\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u00b0\u0086\u00e4\u00b8\u008a\u00e7\u00ba\u00a7\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0085\u00a8\u00e9\u0083\u00a8\u00e6\u0088\u00aa\u00e5\u008f\u0096\u00e6\u008e\u0089\u00ef\u00bc\u008c\u00e4\u00bf\u009d\u00e7\u0095\u0099\u00e6\u009c\u00ac\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0090\u008d",
                "+\t\t\t\t\tsrcRootDir = srcFile.getParentFile().getCanonicalPath();",
                " \t\t\t\t}",
                "@@ -670,6 +671,8 @@ public class ZipUtil {",
                " \t/**",
                "-\t * \u00e9\u0080\u0092\u00e5\u00bd\u0092\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9",
                "+\t * \u00e9\u0080\u0092\u00e5\u00bd\u0092\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9<br>",
                "+\t * srcRootDir\u00e5\u0086\u00b3\u00e5\u00ae\u009a\u00e4\u00ba\u0086\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e6\u0088\u00aa\u00e5\u008f\u0096\u00e7\u009a\u0084\u00e4\u00bd\u008d\u00e7\u00bd\u00ae\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082\u00ef\u00bc\u009a<br>",
                "+\t * file\u00e7\u009a\u0084\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e4\u00b8\u00bad:/a/b/c/d.txt\u00ef\u00bc\u008csrcRootDir\u00e4\u00b8\u00bad:/a/b\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u008e\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u00ba\u00e7\u00bb\u0093\u00e6\u009e\u0084\u00e4\u00b8\u00bac/d.txt",
                " \t * ",
                " \t * @param out \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00ad\u0098\u00e5\u0082\u00a8\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "-\t * @param srcRootDir \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9\u00e6\u00a0\u00b9\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e7\u009a\u0084\u00e5\u00ad\u0090\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t * @param srcRootDir \u00e8\u00a2\u00ab\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9\u00e6\u00a0\u00b9\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                " \t * @param file \u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e9\u0080\u0092\u00e5\u00bd\u0092\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u00af\u00b9\u00e8\u00b1\u00a1"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: ZipUtil",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "9f8a801c7b98b75ee681c0988e1a58bcfdc21756",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1536851903,
            "hunks": 12,
            "message": "fix path problem",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java b/hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java",
                "index 4a2862ca8..5235d5161 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java",
                "@@ -10,2 +10,3 @@ import java.util.Map.Entry;",
                "+import cn.hutool.core.map.MapUtil;",
                " import cn.hutool.core.util.ArrayUtil;",
                "@@ -356,3 +357,3 @@ public class IterUtil {",
                " \t}",
                "-",
                "+\t",
                " \t/**",
                "@@ -370,5 +371,22 @@ public class IterUtil {",
                " \tpublic static <K, V> Map<K, V> toMap(Iterable<K> keys, Iterable<V> values) {",
                "-\t\treturn toMap(null == keys ? null : keys.iterator(), null == values ? null : values.iterator());",
                "+\t\treturn toMap(keys, values, false);",
                " \t}",
                "+\t/**",
                "+\t * \u00e5\u00b0\u0086\u00e9\u0094\u00ae\u00e5\u0088\u0097\u00e8\u00a1\u00a8\u00e5\u0092\u008c\u00e5\u0080\u00bc\u00e5\u0088\u0097\u00e8\u00a1\u00a8\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00baMap<br>",
                "+\t * \u00e4\u00bb\u00a5\u00e9\u0094\u00ae\u00e4\u00b8\u00ba\u00e5\u0087\u0086\u00ef\u00bc\u008c\u00e5\u0080\u00bc\u00e4\u00b8\u008e\u00e9\u0094\u00ae\u00e4\u00bd\u008d\u00e7\u00bd\u00ae\u00e9\u009c\u0080\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e3\u0080\u0082\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e9\u0094\u00ae\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e6\u0095\u00b0\u00e5\u00a4\u009a\u00e4\u00ba\u008e\u00e5\u0080\u00bc\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00ef\u00bc\u008c\u00e5\u00a4\u009a\u00e4\u00bd\u0099\u00e9\u0083\u00a8\u00e5\u0088\u0086\u00e5\u0080\u00bc\u00e7\u0094\u00a8null\u00e4\u00bb\u00a3\u00e6\u009b\u00bf\u00e3\u0080\u0082<br>",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u0080\u00bc\u00e5\u00a4\u009a\u00e4\u00ba\u008e\u00e9\u0094\u00ae\u00ef\u00bc\u008c\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e5\u00a4\u009a\u00e4\u00bd\u0099\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00e3\u0080\u0082",
                "+\t * ",
                "+\t * @param <K> \u00e9\u0094\u00ae\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @param <V> \u00e5\u0080\u00bc\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @param keys \u00e9\u0094\u00ae\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * @param values \u00e5\u0080\u00bc\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * @param isOrder \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u009c\u0089\u00e5\u00ba\u008f",
                "+\t * @return \u00e6\u00a0\u0087\u00e9\u00a2\u0098\u00e5\u0086\u0085\u00e5\u00ae\u00b9Map",
                "+\t * @since 4.1.12",
                "+\t */",
                "+\tpublic static <K, V> Map<K, V> toMap(Iterable<K> keys, Iterable<V> values, boolean isOrder) {",
                "+\t\treturn toMap(null == keys ? null : keys.iterator(), null == values ? null : values.iterator(), isOrder);",
                "+\t}",
                "+\t",
                " \t/**",
                "@@ -386,3 +404,20 @@ public class IterUtil {",
                " \tpublic static <K, V> Map<K, V> toMap(Iterator<K> keys, Iterator<V> values) {",
                "-\t\tfinal Map<K, V> resultMap = new HashMap<>();",
                "+\t\treturn toMap(keys, values, false);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00b0\u0086\u00e9\u0094\u00ae\u00e5\u0088\u0097\u00e8\u00a1\u00a8\u00e5\u0092\u008c\u00e5\u0080\u00bc\u00e5\u0088\u0097\u00e8\u00a1\u00a8\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00baMap<br>",
                "+\t * \u00e4\u00bb\u00a5\u00e9\u0094\u00ae\u00e4\u00b8\u00ba\u00e5\u0087\u0086\u00ef\u00bc\u008c\u00e5\u0080\u00bc\u00e4\u00b8\u008e\u00e9\u0094\u00ae\u00e4\u00bd\u008d\u00e7\u00bd\u00ae\u00e9\u009c\u0080\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e3\u0080\u0082\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e9\u0094\u00ae\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e6\u0095\u00b0\u00e5\u00a4\u009a\u00e4\u00ba\u008e\u00e5\u0080\u00bc\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00ef\u00bc\u008c\u00e5\u00a4\u009a\u00e4\u00bd\u0099\u00e9\u0083\u00a8\u00e5\u0088\u0086\u00e5\u0080\u00bc\u00e7\u0094\u00a8null\u00e4\u00bb\u00a3\u00e6\u009b\u00bf\u00e3\u0080\u0082<br>",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u0080\u00bc\u00e5\u00a4\u009a\u00e4\u00ba\u008e\u00e9\u0094\u00ae\u00ef\u00bc\u008c\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e5\u00a4\u009a\u00e4\u00bd\u0099\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00e3\u0080\u0082",
                "+\t * ",
                "+\t * @param <K> \u00e9\u0094\u00ae\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @param <V> \u00e5\u0080\u00bc\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @param keys \u00e9\u0094\u00ae\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * @param values \u00e5\u0080\u00bc\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * @param isOrder \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u009c\u0089\u00e5\u00ba\u008f",
                "+\t * @return \u00e6\u00a0\u0087\u00e9\u00a2\u0098\u00e5\u0086\u0085\u00e5\u00ae\u00b9Map",
                "+\t * @since 4.1.12",
                "+\t */",
                "+\tpublic static <K, V> Map<K, V> toMap(Iterator<K> keys, Iterator<V> values, boolean isOrder) {",
                "+\t\tfinal Map<K, V> resultMap = MapUtil.newHashMap(isOrder);",
                " \t\tif (isNotEmpty(keys)) {",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "index 87cb5c222..c5f2c4cae 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "@@ -3194,3 +3194,8 @@ public class FileUtil {",
                "-\t\tfinal File parentFile = file.getParentFile();",
                "+\t\tFile parentFile;",
                "+\t\ttry {",
                "+\t\t\tparentFile = file.getCanonicalFile().getParentFile();",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new IORuntimeException(e);",
                "+\t\t}",
                " \t\tif (1 == level) {",
                "@@ -3212,12 +3217,14 @@ public class FileUtil {",
                " \tpublic static File checkSlip(File parentFile, File file) throws IllegalArgumentException {",
                "-\t\tString parentCanonicalPath;",
                "-\t\tString canonicalPath;",
                "-\t\ttry {",
                "-\t\t\tparentCanonicalPath = parentFile.getCanonicalPath();",
                "-\t\t\tcanonicalPath = file.getCanonicalPath();",
                "-\t\t} catch (IOException e) {",
                "-\t\t\tthrow new IORuntimeException(e);",
                "-\t\t}",
                "-\t\tif (false == canonicalPath.startsWith(parentCanonicalPath)) {",
                "-\t\t\tthrow new IllegalArgumentException(\"New file is outside of the parent dir: \" + file.getName());",
                "+\t\tif(null != parentFile && null != file) {",
                "+\t\t\tString parentCanonicalPath;",
                "+\t\t\tString canonicalPath;",
                "+\t\t\ttry {",
                "+\t\t\t\tparentCanonicalPath = parentFile.getCanonicalPath();",
                "+\t\t\t\tcanonicalPath = file.getCanonicalPath();",
                "+\t\t\t} catch (IOException e) {",
                "+\t\t\t\tthrow new IORuntimeException(e);",
                "+\t\t\t}",
                "+\t\t\tif (false == canonicalPath.startsWith(parentCanonicalPath)) {",
                "+\t\t\t\tthrow new IllegalArgumentException(\"New file is outside of the parent dir: \" + file.getName());",
                "+\t\t\t}",
                " \t\t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "index 985a9fbbc..7c621b2d6 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "@@ -158,2 +158,5 @@ public class ZipUtil {",
                " \t\t\tfor (File srcFile : srcFiles) {",
                "+\t\t\t\tif(null == srcFile) {",
                "+\t\t\t\t\tcontinue;",
                "+\t\t\t\t}",
                " \t\t\t\t// \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u008f\u00aa\u00e6\u0098\u00af\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e6\u0088\u00aa\u00e5\u008f\u0096\u00e8\u00af\u00a5\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e7\u009a\u0084\u00e7\u0088\u00b6\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "@@ -162,3 +165,3 @@ public class ZipUtil {",
                " \t\t\t\t\t//\u00e8\u008b\u00a5\u00e6\u0098\u00af\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u00b0\u0086\u00e7\u0088\u00b6\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u00ae\u008c\u00e6\u0095\u00b4\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e9\u0083\u00bd\u00e6\u0088\u00aa\u00e5\u008f\u0096\u00e6\u008e\u0089\u00ef\u00bc\u009b\u00e8\u008b\u00a5\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u00b0\u0086\u00e4\u00b8\u008a\u00e7\u00ba\u00a7\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0085\u00a8\u00e9\u0083\u00a8\u00e6\u0088\u00aa\u00e5\u008f\u0096\u00e6\u008e\u0089\u00ef\u00bc\u008c\u00e4\u00bf\u009d\u00e7\u0095\u0099\u00e6\u009c\u00ac\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0090\u008d",
                "-\t\t\t\t\tsrcRootDir = srcFile.getParentFile().getCanonicalPath();",
                "+\t\t\t\t\tsrcRootDir = srcFile.getCanonicalFile().getParentFile().getCanonicalPath();",
                " \t\t\t\t}",
                "@@ -768,2 +771,5 @@ public class ZipUtil {",
                " \t\tfor (File srcFile : srcFiles) {",
                "+\t\t\tif(null == srcFile) {",
                "+\t\t\t\tcontinue;",
                "+\t\t\t}",
                " \t\t\tif (false == srcFile.exists()) {",
                "@@ -774,3 +780,3 @@ public class ZipUtil {",
                " \t\t\t\t// \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u008d\u00e8\u0083\u00bd\u00e4\u00bd\u008d\u00e4\u00ba\u008e\u00e8\u00a2\u00ab\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009a\u0084\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0086\u0085",
                "-\t\t\t\tif (srcFile.isDirectory() && zipFile.getParent().contains(srcFile.getCanonicalPath())) {",
                "+\t\t\t\tif (srcFile.isDirectory() && zipFile.getCanonicalPath().contains(srcFile.getCanonicalPath())) {",
                " \t\t\t\t\tthrow new UtilException(\"[zipPath] must not be the child directory of [srcPath]!\");",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java",
                "index 277ee29f8..b6324ac4d 100644",
                "--- a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java",
                "@@ -305,3 +305,3 @@ public class ExcelReader extends ExcelBase<ExcelReader> {",
                " \t\t\t\t\t}",
                "-\t\t\t\t\tresult.add(IterUtil.toMap(aliasHeader(headerList), rowList));",
                "+\t\t\t\t\tresult.add(IterUtil.toMap(aliasHeader(headerList), rowList, true));",
                " \t\t\t\t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: ZipUtil",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "3850b2a8571265df349fba0571d5d71d6549e849",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1539575663,
            "hunks": 12,
            "message": "add method",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java b/hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java",
                "index 6096a4b66..95445f1b9 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java",
                "@@ -27,2 +27,7 @@ public class FastByteArrayOutputStream extends OutputStream {",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param size \u00e9\u00a2\u0084\u00e4\u00bc\u00b0\u00e5\u00a4\u00a7\u00e5\u00b0\u008f",
                "+\t */",
                " \tpublic FastByteArrayOutputStream(int size) {",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "index 7c621b2d6..fb766630b 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "@@ -494,3 +494,3 @@ public class ZipUtil {",
                " \t * ",
                "-\t * @param val \u00e8\u00a2\u00ab\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e8\u008a\u0082\u00e6\u00b5\u0081",
                "+\t * @param buf \u00e8\u00a2\u00ab\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e8\u008a\u0082\u00e6\u00b5\u0081",
                " \t * @return \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e8\u008a\u0082\u00e6\u00b5\u0081",
                "@@ -498,17 +498,4 @@ public class ZipUtil {",
                " \t */",
                "-\tpublic static byte[] gzip(byte[] val) throws UtilException {",
                "-\t\tFastByteArrayOutputStream bos = new FastByteArrayOutputStream(val.length);",
                "-\t\tGZIPOutputStream gos = null;",
                "-\t\ttry {",
                "-\t\t\tgos = new GZIPOutputStream(bos);",
                "-\t\t\tgos.write(val, 0, val.length);",
                "-\t\t\tgos.finish();",
                "-\t\t\tgos.flush();",
                "-\t\t\tval = bos.toByteArray();",
                "-\t\t} catch (IOException e) {",
                "-\t\t\tthrow new UtilException(e);",
                "-\t\t} finally {",
                "-\t\t\tIoUtil.close(gos);",
                "-\t\t}",
                "-\t\treturn val;",
                "+\tpublic static byte[] gzip(byte[] buf) throws UtilException {",
                "+\t\treturn gzip(new ByteArrayInputStream(buf), buf.length);",
                " \t}",
                "@@ -523,8 +510,37 @@ public class ZipUtil {",
                " \tpublic static byte[] gzip(File file) throws UtilException {",
                "-\t\tByteArrayOutputStream bos = new ByteArrayOutputStream((int) file.length());",
                "+\t\tBufferedInputStream in = null;",
                "+\t\ttry {",
                "+\t\t\tin = FileUtil.getInputStream(file);",
                "+\t\t\treturn gzip(in, (int)file.length());",
                "+\t\t} finally {",
                "+\t\t\tIoUtil.close(in);",
                "+\t\t}",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * Gzip\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param in \u00e8\u00a2\u00ab\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009a\u0084\u00e6\u00b5\u0081",
                "+\t * @return \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e8\u008a\u0082\u00e6\u00b5\u0081",
                "+\t * @throws UtilException IO\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * @sin 4.1.18",
                "+\t */",
                "+\tpublic static byte[] gzip(InputStream in) throws UtilException {",
                "+\t\treturn gzip(in, 32);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * Gzip\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param in \u00e8\u00a2\u00ab\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009a\u0084\u00e6\u00b5\u0081",
                "+\t * @param length \u00e9\u00a2\u0084\u00e4\u00bc\u00b0\u00e9\u0095\u00bf\u00e5\u00ba\u00a6",
                "+\t * @return \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e8\u008a\u0082\u00e6\u00b5\u0081",
                "+\t * @throws UtilException IO\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * @sin 4.1.18",
                "+\t */",
                "+\tpublic static byte[] gzip(InputStream in, int length) throws UtilException {",
                "+\t\tfinal FastByteArrayOutputStream bos = new FastByteArrayOutputStream(length);",
                " \t\tGZIPOutputStream gos = null;",
                "-\t\tBufferedInputStream in;",
                " \t\ttry {",
                " \t\t\tgos = new GZIPOutputStream(bos);",
                "-\t\t\tin = FileUtil.getInputStream(file);",
                " \t\t\tIoUtil.copy(in, gos);",
                "@@ -535,2 +551,3 @@ public class ZipUtil {",
                " \t\t\tIoUtil.close(gos);",
                "+\t\t\tIoUtil.close(bos);",
                " \t\t}",
                "@@ -558,9 +575,32 @@ public class ZipUtil {",
                " \tpublic static byte[] unGzip(byte[] buf) throws UtilException {",
                "+\t\treturn unGzip(new ByteArrayInputStream(buf), buf.length);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * Gzip\u00e8\u00a7\u00a3\u00e5\u008e\u008b\u00e5\u00a4\u0084\u00e7\u0090\u0086",
                "+\t * ",
                "+\t * @param in Gzip\u00e6\u0095\u00b0\u00e6\u008d\u00ae",
                "+\t * @return \u00e8\u00a7\u00a3\u00e5\u008e\u008b\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e6\u0095\u00b0\u00e6\u008d\u00ae",
                "+\t * @throws UtilException IO\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t */",
                "+\tpublic static byte[] unGzip(InputStream in) throws UtilException {",
                "+\t\treturn unGzip(in, 32);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * Gzip\u00e8\u00a7\u00a3\u00e5\u008e\u008b\u00e5\u00a4\u0084\u00e7\u0090\u0086",
                "+\t * ",
                "+\t * @param in Gzip\u00e6\u0095\u00b0\u00e6\u008d\u00ae",
                "+\t * @param length \u00e4\u00bc\u00b0\u00e7\u00ae\u0097\u00e9\u0095\u00bf\u00e5\u00ba\u00a6\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u0097\u00a0\u00e6\u00b3\u0095\u00e7\u00a1\u00ae\u00e5\u00ae\u009a\u00e8\u00af\u00b7\u00e4\u00bc\u00a0\u00e5\u0085\u00a532",
                "+\t * @return \u00e8\u00a7\u00a3\u00e5\u008e\u008b\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e6\u0095\u00b0\u00e6\u008d\u00ae",
                "+\t * @throws UtilException IO\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * @since 4.1.18",
                "+\t */",
                "+\tpublic static byte[] unGzip(InputStream in, int length) throws UtilException {",
                " \t\tGZIPInputStream gzi = null;",
                "-\t\tByteArrayOutputStream bos = null;",
                "+\t\tFastByteArrayOutputStream bos = null;",
                " \t\ttry {",
                "-\t\t\tgzi = new GZIPInputStream(new ByteArrayInputStream(buf));",
                "-\t\t\tbos = new ByteArrayOutputStream(buf.length);",
                "+\t\t\tgzi = (in instanceof GZIPInputStream) ? (GZIPInputStream)in : new GZIPInputStream(in);",
                "+\t\t\tbos = new FastByteArrayOutputStream(length);",
                " \t\t\tIoUtil.copy(gzi, bos);",
                "-\t\t\tbuf = bos.toByteArray();",
                " \t\t} catch (IOException e) {",
                "@@ -570,3 +610,3 @@ public class ZipUtil {",
                " \t\t}",
                "-\t\treturn buf;",
                "+\t\treturn bos.toByteArray();",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java",
                "hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "59386b05ac605f383f59d1bba2756f4c1d7f725d"
                ],
                [
                    "no-tag",
                    "a3b302c210c1e36bc7b36892d154d611f82cd233"
                ],
                [
                    "no-tag",
                    "1bb3356a39152744a27e378d899fbd81d7e143f8"
                ],
                [
                    "no-tag",
                    "5c1a4f2b0e4cc5e6ad565bf5964ad974ae2be8d2"
                ],
                [
                    "no-tag",
                    "5942985bad74af681dbaaf5b75150f77b5876d0c"
                ],
                [
                    "no-tag",
                    "6c5b02640b46b200131d9a8d8c627cada263dc8d"
                ],
                [
                    "no-tag",
                    "e39e06ce91699e56cb7e01e5ecca784e3452e8eb"
                ],
                [
                    "no-tag",
                    "dc6525f6d34049e12f472160b60492c06dff5e7a"
                ],
                [
                    "no-tag",
                    "7cd10e36ac27e4f6ce57a688fde1ca8b58d69580"
                ]
            ],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: ZipUtil, ZIP",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                    "relevance": 8
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0f1c5f8f97684c5b5fcf25d75ba1c6f8a1e0e170",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1534478440,
            "hunks": 16,
            "message": "fix bugs and add methods",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/IoUtil.java b/hutool-core/src/main/java/cn/hutool/core/io/IoUtil.java",
                "index a09234d42..f7750a661 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/IoUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/IoUtil.java",
                "@@ -698,3 +698,17 @@ public class IoUtil {",
                " \t\t}",
                "-\t\treturn new ByteArrayInputStream(StrUtil.bytes(content, charset));",
                "+\t\treturn toStream(StrUtil.bytes(content, charset));",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * String \u00e8\u00bd\u00ac\u00e4\u00b8\u00ba\u00e6\u00b5\u0081",
                "+\t * ",
                "+\t * @param content \u00e5\u0086\u0085\u00e5\u00ae\u00b9bytes",
                "+\t * @return \u00e5\u00ad\u0097\u00e8\u008a\u0082\u00e6\u00b5\u0081",
                "+\t * @since 4.1.8",
                "+\t */",
                "+\tpublic static ByteArrayInputStream toStream(byte[] content) {",
                "+\t\tif (content == null) {",
                "+\t\t\treturn null;",
                "+\t\t}",
                "+\t\treturn new ByteArrayInputStream(content);",
                " \t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/ClassScaner.java b/hutool-core/src/main/java/cn/hutool/core/lang/ClassScaner.java",
                "index 3ecd8790a..bd9f06222 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/lang/ClassScaner.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/ClassScaner.java",
                "@@ -35,2 +35,4 @@ public class ClassScaner {",
                " \tprivate String packageName;",
                "+\t/** \u00e5\u008c\u0085\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e6\u009c\u0080\u00e5\u0090\u008e\u00e8\u00b7\u009f\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e7\u0082\u00b9\u00ef\u00bc\u008c\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e5\u008c\u0085\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e9\u0081\u00bf\u00e5\u0085\u008d\u00e5\u009c\u00a8\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e5\u0089\u008d\u00e7\u00bc\u0080\u00e6\u0097\u00b6\u00e7\u009a\u0084\u00e6\u00ad\u00a7\u00e4\u00b9\u0089 */",
                "+\tprivate String packageNameWithDot;",
                " \t/** \u00e5\u008c\u0085\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u00ad\u00e5\u00af\u00b9\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e6\u0093\u008d\u00e4\u00bd\u009c */",
                "@@ -146,5 +148,7 @@ public class ClassScaner {",
                " \tpublic ClassScaner(String packageName, Filter<Class<?>> classFilter, Charset charset) {",
                "-\t\tthis.packageName = StrUtil.nullToEmpty(packageName);",
                "-\t\tthis.packageDirName = this.packageName.replace(CharUtil.DOT, File.separatorChar);",
                "-\t\tthis.packagePath = this.packageName.replace(CharUtil.DOT, CharUtil.SLASH);",
                "+\t\tpackageName = StrUtil.nullToEmpty(packageName);",
                "+\t\tthis.packageName = packageName;",
                "+\t\tthis.packageNameWithDot = StrUtil.addSuffixIfNot(packageName, StrUtil.DOT);",
                "+\t\tthis.packageDirName = packageName.replace(CharUtil.DOT, File.separatorChar);",
                "+\t\tthis.packagePath = packageName.replace(CharUtil.DOT, CharUtil.SLASH);",
                " \t\tthis.classFilter = classFilter;",
                "@@ -216,3 +220,4 @@ public class ClassScaner {",
                " \t\t\t\t\t\t.replace(File.separatorChar, CharUtil.DOT);//",
                "-\t\t\t\taddIfAccept(loadClass(className));",
                "+\t\t\t\t//\u00e5\u008a\u00a0\u00e5\u0085\u00a5\u00e6\u00bb\u00a1\u00e8\u00b6\u00b3\u00e6\u009d\u00a1\u00e4\u00bb\u00b6\u00e7\u009a\u0084\u00e7\u00b1\u00bb",
                "+\t\t\t\taddIfAccept(className);",
                " \t\t\t} else if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {",
                "@@ -242,3 +247,2 @@ public class ClassScaner {",
                " \t\t\t\tif (name.endsWith(FileUtil.CLASS_EXT) && false == entry.isDirectory()) {",
                "-\t\t\t\t\tConsole.log(name);",
                " \t\t\t\t\tfinal String className = name//",
                "@@ -272,2 +276,27 @@ public class ClassScaner {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e9\u0080\u009a\u00e8\u00bf\u0087\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u00bb\u00a1\u00e8\u00b6\u00b3\u00e6\u008e\u00a5\u00e5\u008f\u0097\u00e6\u00ad\u00a4\u00e7\u00b1\u00bb\u00e7\u009a\u0084\u00e6\u009d\u00a1\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param clazz \u00e7\u00b1\u00bb",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u008e\u00a5\u00e5\u008f\u0097",
                "+\t */",
                "+\tprivate void addIfAccept(String className) {",
                "+\t\tif(StrUtil.isBlank(className)) {",
                "+\t\t\treturn;",
                "+\t\t}",
                "+\t\tint classLen = className.length();",
                "+\t\tint packageLen = this.packageName.length();",
                "+\t\tif(classLen == packageLen) {",
                "+\t\t\t//\u00e7\u00b1\u00bb\u00e5\u0090\u008d\u00e5\u0092\u008c\u00e5\u008c\u0085\u00e5\u0090\u008d\u00e9\u0095\u00bf\u00e5\u00ba\u00a6\u00e4\u00b8\u0080\u00e8\u0087\u00b4\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u008f\u00af\u00e8\u0083\u00bd\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\u00e7\u009a\u0084\u00e5\u008c\u0085\u00e5\u0090\u008d\u00e6\u0098\u00af\u00e7\u00b1\u00bb\u00e5\u0090\u008d",
                "+\t\t\tif(className.equals(this.packageName)) {",
                "+\t\t\t\taddIfAccept(loadClass(className));",
                "+\t\t\t}",
                "+\t\t} else if(classLen > packageLen){",
                "+\t\t\t//\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e7\u00b1\u00bb\u00e5\u0090\u008d\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00bb\u00a5\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u008c\u0085\u00e5\u0090\u008d\u00e4\u00b8\u00ba\u00e5\u0089\u008d\u00e7\u00bc\u0080\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e5\u0090\u008d\u00e5\u0090\u008e\u00e5\u008a\u00a0.\u00ef\u00bc\u0088\u00e9\u0081\u00bf\u00e5\u0085\u008d\u00e7\u00b1\u00bb\u00e4\u00bc\u00bc\u00e4\u00ba\u008ecn.hutool.A\u00e5\u0092\u008ccn.hutool.ATest\u00e8\u00bf\u0099\u00e7\u00b1\u00bb\u00e7\u00b1\u00bb\u00e5\u0090\u008d\u00e5\u00bc\u0095\u00e8\u00b5\u00b7\u00e7\u009a\u0084\u00e6\u00ad\u00a7\u00e4\u00b9\u0089\u00ef\u00bc\u0089",
                "+\t\t\tif(className.startsWith(this.packageNameWithDot)) {",
                "+\t\t\t\taddIfAccept(loadClass(className));",
                "+\t\t\t}",
                "+\t\t}",
                "+\t}",
                "@@ -295,7 +324,7 @@ public class ClassScaner {",
                " \tprivate String subPathBeforePackage(File file) {",
                "-\t\tfinal String filePath = file.getAbsolutePath();",
                "-\t\tif (StrUtil.isEmpty(this.packageDirName)) {",
                "-\t\t\treturn StrUtil.addSuffixIfNot(filePath, StrUtil.SLASH);",
                "+\t\tString filePath = file.getAbsolutePath();",
                "+\t\tif (StrUtil.isNotEmpty(this.packageDirName)) {",
                "+\t\t\tfilePath = StrUtil.subBefore(filePath, this.packageDirName, true);",
                " \t\t}",
                "-\t\treturn StrUtil.subBefore(filePath, this.packageDirName, true);",
                "+\t\treturn StrUtil.addSuffixIfNot(filePath, File.separator);",
                " \t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java",
                "index ab12e9274..a5fcb3d8a 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java",
                "@@ -486,3 +486,3 @@ public class ReflectUtil {",
                " \t\tfinal Class<?>[] paramTypes = ClassUtil.getClasses(params);",
                "-\t\tfinal Constructor<?> constructor = getConstructor(clazz, paramTypes);",
                "+\t\tfinal Constructor<T> constructor = getConstructor(clazz, paramTypes);",
                " \t\tif (null == constructor) {",
                "@@ -491,3 +491,3 @@ public class ReflectUtil {",
                " \t\ttry {",
                "-\t\t\treturn getConstructor(clazz, paramTypes).newInstance(params);",
                "+\t\t\treturn constructor.newInstance(params);",
                " \t\t} catch (Exception e) {",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java",
                "index 9fb86f9cd..f2752a7b7 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java",
                "@@ -415,2 +415,29 @@ public class URLUtil {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u00a0\u0087\u00e5\u0087\u0086\u00e5\u008c\u0096URL\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00ef\u00bc\u009a",
                "+\t * <pre>",
                "+\t * 1. \u00e5\u00a4\u009a\u00e4\u00b8\u00aa/\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e4\u00b8\u00ba\u00e4\u00b8\u0080\u00e4\u00b8\u00aa",
                "+\t * </pre>",
                "+\t * ",
                "+\t * @param url URL\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @return",
                "+\t */",
                "+\tpublic static String normalize (String url) {",
                "+\t\tif(StrUtil.isBlank(url)) {",
                "+\t\t\treturn url;",
                "+\t\t}",
                "+\t\tint sepIndex = url.indexOf(\"://\");",
                "+\t\tString pre;",
                "+\t\tString body;",
                "+\t\tif(sepIndex > 0) {",
                "+\t\t\tpre = StrUtil.subPre(url, sepIndex + 3);",
                "+\t\t\tbody = StrUtil.subSuf(url, sepIndex + 3);",
                "+\t\t}else {",
                "+\t\t\tpre = \"http://\";",
                "+\t\t\tbody = url;",
                "+\t\t}",
                "+\t\tbody = body.replaceAll(\"//+\", \"/\");",
                "+\t\treturn pre + body;",
                "+\t}",
                " }",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "index 60adaf200..ec6a6a4c3 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "@@ -400,3 +400,2 @@ public class ZipUtil {",
                " \t\t\tIoUtil.close(zipFileObj);",
                "-",
                " \t\t}",
                "@@ -404,2 +403,71 @@ public class ZipUtil {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e4\u00bb\u008eZip\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u00ad\u00e6\u008f\u0090\u00e5\u008f\u0096\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u00babytes",
                "+\t * ",
                "+\t * @param zipFilePath Zip\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @param name \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e4\u00ba\u008e\u00e5\u00ad\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e6\u00ad\u00a4\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00e5\u00bf\u0085\u00e9\u00a1\u00bb\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082images/aaa.txt",
                "+\t * @return \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0086\u0085\u00e5\u00ae\u00b9bytes",
                "+\t * @since 4.1.8",
                "+\t */",
                "+\tpublic static byte[] unzipFileBytes(String zipFilePath, String name) {",
                "+\t\treturn unzipFileBytes(zipFilePath, DEFAULT_CHARSET, name);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e4\u00bb\u008eZip\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u00ad\u00e6\u008f\u0090\u00e5\u008f\u0096\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u00babytes",
                "+\t * ",
                "+\t * @param zipFilePath Zip\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @param charset \u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                "+\t * @param name \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e4\u00ba\u008e\u00e5\u00ad\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e6\u00ad\u00a4\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00e5\u00bf\u0085\u00e9\u00a1\u00bb\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082images/aaa.txt",
                "+\t * @return \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0086\u0085\u00e5\u00ae\u00b9bytes",
                "+\t * @since 4.1.8",
                "+\t */",
                "+\tpublic static byte[] unzipFileBytes(String zipFilePath, Charset charset, String name) {",
                "+\t\treturn unzipFileBytes(FileUtil.file(zipFilePath), charset, name);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e4\u00bb\u008eZip\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u00ad\u00e6\u008f\u0090\u00e5\u008f\u0096\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u00babytes",
                "+\t * ",
                "+\t * @param zipFile Zip\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @param name \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e4\u00ba\u008e\u00e5\u00ad\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e6\u00ad\u00a4\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00e5\u00bf\u0085\u00e9\u00a1\u00bb\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082images/aaa.txt",
                "+\t * @return \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0086\u0085\u00e5\u00ae\u00b9bytes",
                "+\t * @since 4.1.8",
                "+\t */",
                "+\tpublic static byte[] unzipFileBytes(File zipFile, String name) {",
                "+\t\treturn unzipFileBytes(zipFile, DEFAULT_CHARSET, name);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e4\u00bb\u008eZip\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u00ad\u00e6\u008f\u0090\u00e5\u008f\u0096\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u00babytes",
                "+\t * ",
                "+\t * @param zipFile Zip\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @param charset \u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                "+\t * @param name \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e4\u00ba\u008e\u00e5\u00ad\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e6\u00ad\u00a4\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00e5\u00bf\u0085\u00e9\u00a1\u00bb\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082images/aaa.txt",
                "+\t * @return \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0086\u0085\u00e5\u00ae\u00b9bytes",
                "+\t * @since 4.1.8",
                "+\t */",
                "+\t@SuppressWarnings(\"unchecked\")",
                "+\tpublic static byte[] unzipFileBytes(File zipFile, Charset charset, String name) {",
                "+\t\tZipFile zipFileObj = null;",
                "+\t\ttry {",
                "+\t\t\tzipFileObj = new ZipFile(zipFile, charset);",
                "+\t\t\tfinal Enumeration<ZipEntry> em = (Enumeration<ZipEntry>) zipFileObj.entries();",
                "+\t\t\tZipEntry zipEntry = null;",
                "+\t\t\twhile (em.hasMoreElements()) {",
                "+\t\t\t\tzipEntry = em.nextElement();",
                "+\t\t\t\tif (zipEntry.isDirectory()) {",
                "+\t\t\t\t\tcontinue;",
                "+\t\t\t\t} else if(name.equals(zipEntry.getName())){",
                "+\t\t\t\t\treturn IoUtil.readBytes(zipFileObj.getInputStream(zipEntry));",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new UtilException(e);",
                "+\t\t} finally {",
                "+\t\t\tIoUtil.close(zipFileObj);",
                "+\t\t}",
                "+\t\treturn null;",
                "+\t}",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/TaskExecutorManager.java b/hutool-cron/src/main/java/cn/hutool/cron/TaskExecutorManager.java",
                "index 7fce8a4b6..4b90d51a5 100644",
                "--- a/hutool-cron/src/main/java/cn/hutool/cron/TaskExecutorManager.java",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/TaskExecutorManager.java",
                "@@ -8,4 +8,4 @@ import cn.hutool.cron.task.Task;",
                " /**",
                "- * \u00e4\u00bb\u00bb\u00e5\u008a\u00a1\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e7\u00ae\u00a1\u00e7\u0090\u0086\u00e5\u0099\u00a8<br>",
                "- * \u00e8\u00b4\u009f\u00e8\u00b4\u00a3\u00e7\u00ae\u00a1\u00e7\u0090\u0086\u00e4\u00bb\u00bb\u00e5\u008a\u00a1\u00e7\u009a\u0084\u00e5\u0090\u00af\u00e5\u008a\u00a8\u00e3\u0080\u0081\u00e5\u0081\u009c\u00e6\u00ad\u00a2\u00e7\u00ad\u0089",
                "+ * \u00e4\u00bd\u009c\u00e4\u00b8\u009a\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e7\u00ae\u00a1\u00e7\u0090\u0086\u00e5\u0099\u00a8<br>",
                "+ * \u00e8\u00b4\u009f\u00e8\u00b4\u00a3\u00e7\u00ae\u00a1\u00e7\u0090\u0086\u00e4\u00bd\u009c\u00e4\u00b8\u009a\u00e7\u009a\u0084\u00e5\u0090\u00af\u00e5\u008a\u00a8\u00e3\u0080\u0081\u00e5\u0081\u009c\u00e6\u00ad\u00a2\u00e7\u00ad\u0089",
                "  * ",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/TaskLauncherManager.java b/hutool-cron/src/main/java/cn/hutool/cron/TaskLauncherManager.java",
                "index 7b4707f3f..575cf7f6b 100644",
                "--- a/hutool-cron/src/main/java/cn/hutool/cron/TaskLauncherManager.java",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/TaskLauncherManager.java",
                "@@ -5,2 +5,8 @@ import java.util.List;",
                "+/**",
                "+ * \u00e4\u00bd\u009c\u00e4\u00b8\u009a\u00e5\u0090\u00af\u00e5\u008a\u00a8\u00e7\u00ae\u00a1\u00e7\u0090\u0086\u00e5\u0099\u00a8",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                " public class TaskLauncherManager {",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "index d0bed49fb..fa625d6df 100644",
                "--- a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "@@ -174,2 +174,26 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                "+\t/**",
                "+\t * \u00e9\u0087\u008d\u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e5\u00bd\u0093\u00e5\u0089\u008dsheet",
                "+\t * ",
                "+\t * @param sheetName \u00e6\u0096\u00b0\u00e7\u009a\u0084sheet\u00e5\u0090\u008d",
                "+\t * @return this",
                "+\t * @since 4.1.8",
                "+\t */",
                "+\tpublic ExcelWriter renameSheet(String sheetName) {",
                "+\t\treturn renameSheet(this.workbook.getSheetIndex(this.sheet), sheetName);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e9\u0087\u008d\u00e5\u0091\u00bd\u00e5\u0090\u008dsheet",
                "+\t * ",
                "+\t * @param sheet sheet\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00ef\u00bc\u008c0\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aasheet",
                "+\t * @param sheetName \u00e6\u0096\u00b0\u00e7\u009a\u0084sheet\u00e5\u0090\u008d",
                "+\t * @return this",
                "+\t * @since 4.1.8",
                "+\t */",
                "+\tpublic ExcelWriter renameSheet(int sheet, String sheetName) {",
                "+\t\tthis.workbook.setSheetName(sheet, sheetName);",
                "+\t\treturn this;",
                "+\t}",
                "+",
                " \t/**"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/io/IoUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/lang/ClassScaner.java",
                "hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "hutool-cron/src/main/java/cn/hutool/cron/TaskExecutorManager.java",
                "hutool-cron/src/main/java/cn/hutool/cron/TaskLauncherManager.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "00eb67a5c63ff2c576001cc4d2515496e1cbac0d"
                ]
            ],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: ZipUtil",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                    "relevance": 8
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7be51c10b5c5d101a546e5d96c2d3e39d0f374e1",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1540634164,
            "hunks": 10,
            "message": "fix soap and zip exception msg",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "index 071ce4e18..592ef603d 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "@@ -874,3 +874,3 @@ public class ZipUtil {",
                " \t\t\t\tif (srcFile.isDirectory() && parentFile.getCanonicalPath().contains(srcFile.getCanonicalPath())) {",
                "-\t\t\t\t\tthrow new UtilException(\"[zipPath] must not be the child directory of [srcPath]!\");",
                "+\t\t\t\t\tthrow new UtilException(\"Zip file path [{}] must not be the child directory of [{}] !\", zipFile.getCanonicalPath(), srcFile.getCanonicalPath());",
                " \t\t\t\t}",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/webservice/SoapRequest.java b/hutool-http/src/main/java/cn/hutool/http/webservice/SoapRequest.java",
                "index 69dfae6ff..1042085af 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/webservice/SoapRequest.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/webservice/SoapRequest.java",
                "@@ -25,4 +25,6 @@ public class SoapRequest {",
                " \tprivate String url;",
                "-\t/** \u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e7\u00a9\u00ba\u00e9\u0097\u00b4 */",
                "-\tprivate String namespace;",
                "+\t/** \u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u009a\u0084\u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e7\u00a9\u00ba\u00e9\u0097\u00b4 */",
                "+\tprivate String methodNamespace;",
                "+\t/** \u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e7\u00a9\u00ba\u00e9\u0097\u00b4envelope(ns) */",
                "+\tprivate String xmlns = \"soapenv\";",
                " \t/** \u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e6\u0096\u00b9\u00e6\u00b3\u0095 */",
                "@@ -36,7 +38,7 @@ public class SoapRequest {",
                " \t * @param url Webservice\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e5\u009c\u00b0\u00e5\u009d\u0080",
                "-\t * @param namespace \u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e7\u00a9\u00ba\u00e9\u0097\u00b4",
                "+\t * @param methodNamespace \u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e7\u00a9\u00ba\u00e9\u0097\u00b4",
                " \t */",
                "-\tpublic SoapRequest(String url, String namespace) {",
                "+\tpublic SoapRequest(String url, String methodNamespace) {",
                " \t\tthis.url = url;",
                "-\t\tthis.namespace = namespace;",
                "+\t\tthis.methodNamespace = methodNamespace;",
                " \t}",
                "@@ -64,3 +66,13 @@ public class SoapRequest {",
                " \t/**",
                "-\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e7\u00a9\u00ba\u00e9\u0097\u00b4",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u009a\u0084\u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e7\u00a9\u00ba\u00e9\u0097\u00b4",
                "+\t * @param namespace \u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e7\u00a9\u00ba\u00e9\u0097\u00b4",
                "+\t * @return this",
                "+\t */",
                "+\tpublic SoapRequest setMethodNamespace(String namespace) {",
                "+\t\tthis.methodNamespace = namespace;",
                "+\t\treturn this;",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e7\u00a9\u00ba\u00e9\u0097\u00b4envelope(ns)",
                " \t * @param namespace \u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e7\u00a9\u00ba\u00e9\u0097\u00b4",
                "@@ -68,4 +80,4 @@ public class SoapRequest {",
                " \t */",
                "-\tpublic SoapRequest setNamespace(String namespace) {",
                "-\t\tthis.namespace = namespace;",
                "+\tpublic SoapRequest setXmlns(String xmlns) {",
                "+\t\tthis.xmlns = xmlns;",
                " \t\treturn this;",
                "@@ -124,7 +136,7 @@ public class SoapRequest {",
                " \t\tStringBuilder sb = StrUtil.builder();",
                "-\t\tsb.append(\"<soap:Envelope xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\\n\");",
                "-\t\tsb.append(\"  <soap:Body>\\n\");",
                "+\t\tsb.append(StrUtil.format(\"<{}:Envelope xmlns:{}=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\\n\", this.xmlns, this.xmlns));",
                "+\t\tsb.append(StrUtil.format(\"  <{}:Body>\\n\", this.xmlns));",
                " \t\t// \u00e4\u00bc\u00a0\u00e5\u0085\u00a5method\u00e5\u0092\u008cnamespace",
                " \t\tAssert.notBlank(this.method, \"Method must be not blank !\");",
                "-\t\tsb.append(\"    <\").append(this.method).append(\" xmlns=\\\"\").append(this.namespace).append(\"\\\">\\n\");",
                "+\t\tsb.append(\"    <\").append(this.method).append(\" xmlns=\\\"\").append(this.methodNamespace).append(\"\\\">\\n\");",
                " \t\t// \u00e5\u008a\u00a8\u00e6\u0080\u0081\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e5\u0092\u008c\u00e5\u0080\u00bc",
                "@@ -136,4 +148,5 @@ public class SoapRequest {",
                " \t\tsb.append(\"    </\").append(this.method).append(\">\\n\");",
                "-\t\tsb.append(\"  </soap:Body>\\n\");",
                "-\t\tsb.append(\"</soap:Envelope>\");",
                "+\t\tsb.append(StrUtil.format(\"  </{}:Body>\\n\", this.xmlns));",
                "+\t\tsb.append(StrUtil.format(\"</{}:Envelope>\", this.xmlns));",
                "+\t\t",
                " \t\treturn sb.toString();"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "hutool-http/src/main/java/cn/hutool/http/webservice/SoapRequest.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: ZipUtil",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "63ab1b58a87d857306a8b95072ed830e97cfae53",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1540709253,
            "hunks": 1,
            "message": "fix Zip",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "index 592ef603d..fddab3def 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "@@ -83,3 +83,3 @@ public class ZipUtil {",
                " \tpublic static File zip(File srcFile, Charset charset) throws UtilException {",
                "-\t\tFile zipFile = FileUtil.file(srcFile.getParentFile(), FileUtil.mainName(srcFile) + \".zip\");",
                "+\t\tfinal File zipFile = FileUtil.file(srcFile.getParentFile(), FileUtil.mainName(srcFile) + \".zip\");",
                " \t\tzip(zipFile, charset, false, srcFile);"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: ZipUtil",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "014d09fd631bb8c27c8db7167f24b767ab6b2181",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1539687801,
            "hunks": 3,
            "message": "fix BeanUtil",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java b/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "index 50e8ea7c2..d3b983414 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "@@ -561,3 +561,6 @@ public class BeanUtil {",
                " \tpublic static void copyProperties(Object source, Object target, CopyOptions copyOptions) {",
                "-\t\tcopyProperties(source, target, copyOptions);",
                "+\t\tif (null == copyOptions) {",
                "+\t\t\tcopyOptions = new CopyOptions();",
                "+\t\t}",
                "+\t\tBeanCopier.create(source, target, copyOptions).copy();",
                " \t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "index fb766630b..0bf7da9af 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "@@ -525,3 +525,3 @@ public class ZipUtil {",
                " \t * @throws UtilException IO\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "-\t * @sin 4.1.18",
                "+\t * @since 4.1.18",
                " \t */",
                "@@ -538,3 +538,3 @@ public class ZipUtil {",
                " \t * @throws UtilException IO\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "-\t * @sin 4.1.18",
                "+\t * @since 4.1.18",
                " \t */"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: ZipUtil",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "d5c679ab01322ff26dbeb745c8ffc48582b2834b",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1532508549,
            "hunks": 34,
            "message": "add zlib",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "index b7f801c7c..60adaf200 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                "@@ -11,4 +11,8 @@ import java.nio.charset.Charset;",
                " import java.util.Enumeration;",
                "+import java.util.zip.Deflater;",
                "+import java.util.zip.DeflaterOutputStream;",
                " import java.util.zip.GZIPInputStream;",
                " import java.util.zip.GZIPOutputStream;",
                "+import java.util.zip.Inflater;",
                "+import java.util.zip.InflaterOutputStream;",
                " import java.util.zip.ZipEntry;",
                "@@ -29,6 +33,6 @@ import cn.hutool.core.io.IoUtil;",
                " public class ZipUtil {",
                "-\t",
                "+",
                " \t/** \u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e7\u00bc\u0096\u00e7\u00a0\u0081\u00ef\u00bc\u008c\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u00b9\u00b3\u00e5\u008f\u00b0\u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e7\u00bc\u0096\u00e7\u00a0\u0081 */",
                " \tprivate static final Charset DEFAULT_CHARSET = CharsetUtil.defaultCharset();",
                "-\t",
                "+",
                " \t/**",
                "@@ -55,3 +59,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -93,3 +97,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -123,3 +127,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -151,3 +155,3 @@ public class ZipUtil {",
                "-\t\ttry (ZipOutputStream out = getZipOutputStream(zipFile, charset)){",
                "+\t\ttry (ZipOutputStream out = getZipOutputStream(zipFile, charset)) {",
                " \t\t\tString srcRootDir;",
                "@@ -168,3 +172,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -197,3 +201,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -212,3 +216,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -225,5 +229,5 @@ public class ZipUtil {",
                " \tpublic static File zip(File zipFile, String path, InputStream in, Charset charset) throws UtilException {",
                "-\t\treturn zip(zipFile, new String[] {path}, new InputStream[] {in}, charset);",
                "+\t\treturn zip(zipFile, new String[] { path }, new InputStream[] { in }, charset);",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -256,9 +260,9 @@ public class ZipUtil {",
                " \tpublic static File zip(File zipFile, String[] paths, InputStream[] ins, Charset charset) throws UtilException {",
                "-\t\tif(ArrayUtil.isEmpty(paths) || ArrayUtil.isEmpty(ins)) {",
                "+\t\tif (ArrayUtil.isEmpty(paths) || ArrayUtil.isEmpty(ins)) {",
                " \t\t\tthrow new IllegalArgumentException(\"Paths or ins is empty !\");",
                " \t\t}",
                "-\t\tif(paths.length != ins.length) {",
                "+\t\tif (paths.length != ins.length) {",
                " \t\t\tthrow new IllegalArgumentException(\"Paths length is not equals to ins length !\");",
                " \t\t}",
                "-\t\t",
                "+",
                " \t\tZipOutputStream out = null;",
                "@@ -266,3 +270,3 @@ public class ZipUtil {",
                " \t\t\tout = getZipOutputStream(zipFile, charset);",
                "-\t\t\tfor(int i = 0; i < paths.length; i++) {",
                "+\t\t\tfor (int i = 0; i < paths.length; i++) {",
                " \t\t\t\taddFile(ins[i], paths[i], out);",
                "@@ -274,4 +278,4 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "-\t//---------------------------------------------------------------------------------------------- Unzip",
                "+",
                "+\t// ---------------------------------------------------------------------------------------------- Unzip",
                " \t/**",
                "@@ -286,3 +290,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -299,3 +303,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -336,3 +340,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -349,3 +353,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -375,3 +379,3 @@ public class ZipUtil {",
                " \t\tcharset = (null == charset) ? DEFAULT_CHARSET : charset;",
                "-\t\t",
                "+",
                " \t\tZipFile zipFileObj = null;",
                "@@ -496,2 +500,78 @@ public class ZipUtil {",
                "+\t// ----------------------------------------------------------------------------- Zlib",
                "+\t",
                "+\t/**",
                "+\t * Zlib\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u00a4\u0084\u00e7\u0090\u0086",
                "+\t * ",
                "+\t * @param content \u00e8\u00a2\u00ab\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @param charset \u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                "+\t * @param level \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u00ba\u00a7\u00e5\u0088\u00ab\u00ef\u00bc\u008c1~9",
                "+\t * @return \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e8\u008a\u0082\u00e6\u00b5\u0081",
                "+\t * @since 4.1.4",
                "+\t */",
                "+\tpublic static byte[] zlib(String content, String charset, int level) {",
                "+\t\treturn zlib(StrUtil.bytes(content, charset), level);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * Zlib\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param file \u00e8\u00a2\u00ab\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @param level \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u00ba\u00a7\u00e5\u0088\u00ab",
                "+\t * @return \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e8\u008a\u0082\u00e6\u00b5\u0081",
                "+\t * @since 4.1.4",
                "+\t */",
                "+\tpublic static byte[] zlib(File file, int level) {",
                "+\t\tfinal ByteArrayOutputStream out = new ByteArrayOutputStream();",
                "+\t\tBufferedInputStream in = null;",
                "+\t\ttry{",
                "+\t\t\tin = FileUtil.getInputStream(file);",
                "+\t\t\tdeflater(in, out, level);",
                "+\t\t} finally {",
                "+\t\t\tIoUtil.close(in);",
                "+\t\t}",
                "+\t\treturn out.toByteArray();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u0089\u0093\u00e6\u0088\u0090Zlib\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u008c\u0085",
                "+\t * ",
                "+\t * @param buf \u00e6\u0095\u00b0\u00e6\u008d\u00ae",
                "+\t * @param level \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u00ba\u00a7\u00e5\u0088\u00ab\u00ef\u00bc\u008c0~9",
                "+\t * @return \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u0090\u008e\u00e7\u009a\u0084bytes",
                "+\t * @since 4.1.4",
                "+\t */",
                "+\tpublic static byte[] zlib(byte[] buf, int level) {",
                "+\t\tfinal ByteArrayInputStream in = new ByteArrayInputStream(buf);",
                "+\t\tfinal ByteArrayOutputStream out = new ByteArrayOutputStream(buf.length);",
                "+\t\tdeflater(in, out, level);",
                "+\t\treturn out.toByteArray();",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * Zlib\u00e8\u00a7\u00a3\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u00a4\u0084\u00e7\u0090\u0086",
                "+\t * ",
                "+\t * @param buf \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e8\u00bf\u0087\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e8\u008a\u0082\u00e6\u00b5\u0081",
                "+\t * @param charset \u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                "+\t * @return \u00e8\u00a7\u00a3\u00e5\u008e\u008b\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @since 4.1.4",
                "+\t */",
                "+\tpublic static String unZlib(byte[] buf, String charset) {",
                "+\t\treturn StrUtil.str(unZlib(buf), charset);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00a7\u00a3\u00e5\u008e\u008b\u00e7\u00bc\u00a9zlib",
                "+\t * ",
                "+\t * @param buf \u00e6\u0095\u00b0\u00e6\u008d\u00ae",
                "+\t * @return \u00e8\u00a7\u00a3\u00e5\u008e\u008b\u00e5\u0090\u008e\u00e7\u009a\u0084bytes",
                "+\t * @since 4.1.4",
                "+\t */",
                "+\tpublic static byte[] unZlib(byte[] buf) {",
                "+\t\tfinal ByteArrayInputStream in = new ByteArrayInputStream(buf);",
                "+\t\tfinal ByteArrayOutputStream out = new ByteArrayOutputStream(buf.length);",
                "+\t\tinflater(in, out);",
                "+\t\treturn out.toByteArray();",
                "+\t}",
                "+",
                " \t// ---------------------------------------------------------------------------------------------- Private method start",
                "@@ -507,3 +587,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -532,11 +612,11 @@ public class ZipUtil {",
                " \t\t}",
                "-\t\t",
                "+",
                " \t\tfinal String subPath = FileUtil.subPath(srcRootDir, file); // \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e7\u009b\u00b8\u00e5\u00af\u00b9\u00e4\u00ba\u008e\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9\u00e6\u00a0\u00b9\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e7\u009a\u0084\u00e5\u00ad\u0090\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "-\t\tif(file.isDirectory()){// \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u0098\u00af\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e5\u00ad\u0090\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t\tif (file.isDirectory()) {// \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u0098\u00af\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e5\u00ad\u0090\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                " \t\t\tfinal File[] files = file.listFiles();",
                "-\t\t\tif(ArrayUtil.isEmpty(files) && StrUtil.isNotEmpty(subPath)) {",
                "-\t\t\t\t//\u00e5\u008a\u00a0\u00e5\u0085\u00a5\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e5\u008f\u00aa\u00e6\u009c\u0089\u00e7\u00a9\u00ba\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u0097\u00b6\u00e6\u0089\u008d\u00e5\u008a\u00a0\u00e5\u0085\u00a5\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e9\u009d\u009e\u00e7\u00a9\u00ba\u00e6\u0097\u00b6\u00e4\u00bc\u009a\u00e5\u009c\u00a8\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0097\u00b6\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e6\u00b7\u00bb\u00e5\u008a\u00a0\u00e7\u0088\u00b6\u00e7\u00ba\u00a7\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t\t\tif (ArrayUtil.isEmpty(files) && StrUtil.isNotEmpty(subPath)) {",
                "+\t\t\t\t// \u00e5\u008a\u00a0\u00e5\u0085\u00a5\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e5\u008f\u00aa\u00e6\u009c\u0089\u00e7\u00a9\u00ba\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u0097\u00b6\u00e6\u0089\u008d\u00e5\u008a\u00a0\u00e5\u0085\u00a5\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e9\u009d\u009e\u00e7\u00a9\u00ba\u00e6\u0097\u00b6\u00e4\u00bc\u009a\u00e5\u009c\u00a8\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0097\u00b6\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e6\u00b7\u00bb\u00e5\u008a\u00a0\u00e7\u0088\u00b6\u00e7\u00ba\u00a7\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                " \t\t\t\taddDir(subPath, out);",
                " \t\t\t}",
                "-\t\t\t//\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u008b\u00e7\u009a\u0084\u00e5\u00ad\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t\t\t// \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u008b\u00e7\u009a\u0084\u00e5\u00ad\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                " \t\t\tfor (File childFile : files) {",
                "@@ -548,3 +628,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -577,3 +657,3 @@ public class ZipUtil {",
                " \tprivate static void addFile(InputStream in, String path, ZipOutputStream out) throws UtilException {",
                "-\t\tif(null == in) {",
                "+\t\tif (null == in) {",
                " \t\t\treturn;",
                "@@ -589,3 +669,3 @@ public class ZipUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -644,3 +724,3 @@ public class ZipUtil {",
                " \t\t} catch (IOException e) {",
                "-\t\t\t//ignore",
                "+\t\t\t// ignore",
                " \t\t}",
                "@@ -668,2 +748,25 @@ public class ZipUtil {",
                " \t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00b0\u0086Zlib\u00e6\u00b5\u0081\u00e8\u00a7\u00a3\u00e5\u008e\u008b\u00e5\u0088\u00b0out\u00e4\u00b8\u00ad",
                "+\t * ",
                "+\t * @param in zlib\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00b5\u0081",
                "+\t * @param out \u00e8\u00be\u0093\u00e5\u0087\u00ba",
                "+\t */",
                "+\tprivate static void inflater(InputStream in, OutputStream out) {",
                "+\t\tfinal InflaterOutputStream ios = (out instanceof InflaterOutputStream) ? (InflaterOutputStream) out : new InflaterOutputStream(out, new Inflater(true));",
                "+\t\tIoUtil.copy(in, ios);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00b0\u0086\u00e6\u0099\u00ae\u00e9\u0080\u009a\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00b5\u0081\u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e6\u0088\u0090zlib\u00e5\u0088\u00b0out\u00e4\u00b8\u00ad",
                "+\t * ",
                "+\t * @param in zlib\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00b5\u0081",
                "+\t * @param out \u00e8\u00be\u0093\u00e5\u0087\u00ba",
                "+\t * @param level \u00e5\u008e\u008b\u00e7\u00bc\u00a9\u00e7\u00ba\u00a7\u00e5\u0088\u00ab\u00ef\u00bc\u008c0~9",
                "+\t */",
                "+\tprivate static void deflater(InputStream in, OutputStream out, int level) {",
                "+\t\tfinal DeflaterOutputStream ios = (out instanceof DeflaterOutputStream) ? (DeflaterOutputStream) out : new DeflaterOutputStream(out, new Deflater(level, true));",
                "+\t\tIoUtil.copy(in, ios);",
                "+\t}",
                " \t// ---------------------------------------------------------------------------------------------- Private method end"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: ZipUtil, ZIP",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "b9ee97135a550c6a6ff2a4b50f24f30ffd6dbbf2",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537113129,
            "hunks": 6,
            "message": "add methods",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/PatternPool.java b/hutool-core/src/main/java/cn/hutool/core/lang/PatternPool.java",
                "index 3d9ab0e89..3d90b55f9 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/lang/PatternPool.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/PatternPool.java",
                "@@ -38,3 +38,3 @@ public class PatternPool {",
                " \t/** \u00e9\u0082\u00ae\u00e7\u00bc\u0096 */",
                "-\tpublic final static Pattern ZIP_CODE = Pattern.compile(\"\\\\d{6}\");",
                "+\tpublic final static Pattern ZIP_CODE = Pattern.compile(\"[1-9]\\\\d{5}(?!\\\\d)\");",
                " \t/** \u00e7\u0094\u009f\u00e6\u0097\u00a5 */",
                "@@ -42,3 +42,5 @@ public class PatternPool {",
                " \t/** URL */",
                "-\tpublic final static Pattern URL = Pattern.compile(\"(https://|http://)?([\\\\w-]+\\\\.)+[\\\\w-]+(/[\\\\w- ./?%&=]*)?\");",
                "+\tpublic final static Pattern URL = Pattern.compile(\"[a-zA-z]+://[^\\\\s]*\");",
                "+\t/** Http URL */",
                "+\tpublic final static Pattern URL_HTTP = Pattern.compile(\"(https://|http://)?([\\\\w-]+\\\\.)+[\\\\w-]+(/[\\\\w- ./?%&=]*)?\");",
                " \t/** \u00e4\u00b8\u00ad\u00e6\u0096\u0087\u00e5\u00ad\u0097\u00e3\u0080\u0081\u00e8\u008b\u00b1\u00e6\u0096\u0087\u00e5\u00ad\u0097\u00e6\u00af\u008d\u00e3\u0080\u0081\u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00e5\u0092\u008c\u00e4\u00b8\u008b\u00e5\u0088\u0092\u00e7\u00ba\u00bf */",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/Validator.java b/hutool-core/src/main/java/cn/hutool/core/lang/Validator.java",
                "index 2415aee79..682f472c5 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/lang/Validator.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/Validator.java",
                "@@ -47,2 +47,4 @@ public class Validator {",
                " \tpublic final static Pattern URL = PatternPool.URL;",
                "+\t/** Http URL */",
                "+\tpublic final static Pattern URL_HTTP = PatternPool.URL_HTTP;",
                " \t/** \u00e4\u00b8\u00ad\u00e6\u0096\u0087\u00e5\u00ad\u0097\u00e3\u0080\u0081\u00e8\u008b\u00b1\u00e6\u0096\u0087\u00e5\u00ad\u0097\u00e6\u00af\u008d\u00e3\u0080\u0081\u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00e5\u0092\u008c\u00e4\u00b8\u008b\u00e5\u0088\u0092\u00e7\u00ba\u00bf */",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java",
                "index 45e68b97c..0e3ced26c 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java",
                "@@ -513,5 +513,6 @@ public class IdcardUtil {",
                " \t * @since 3.2.2",
                "+\t * @see StrUtil#hide(CharSequence, int, int)",
                " \t */",
                " \tpublic static String hide(String idCard, int startInclude, int endExclude) {",
                "-\t\treturn StrUtil.replace(idCard, startInclude, endExclude, '*');",
                "+\t\treturn StrUtil.hide(idCard, startInclude, endExclude);",
                " \t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java",
                "index c65839c90..bf5e7cb54 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java",
                "@@ -3474,2 +3474,15 @@ public class StrUtil {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e7\u009a\u0084\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u008c\u00ba\u00e9\u0097\u00b4\u00e5\u0086\u0085\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00ba\"*\"",
                "+\t * ",
                "+\t * @param str \u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @param startInclude \u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e4\u00bd\u008d\u00e7\u00bd\u00ae\u00ef\u00bc\u0088\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00ef\u00bc\u0089",
                "+\t * @param endExclude \u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e4\u00bd\u008d\u00e7\u00bd\u00ae\u00ef\u00bc\u0088\u00e4\u00b8\u008d\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00ef\u00bc\u0089",
                "+\t * @return \u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @since 4.1.14",
                "+\t */",
                "+\tpublic static String hide(CharSequence str, int startInclude, int endExclude) {",
                "+\t\treturn replace(str, startInclude, endExclude, '*');",
                "+\t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/lang/PatternPool.java",
                "hutool-core/src/main/java/cn/hutool/core/lang/Validator.java",
                "hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "55c81595346e8a7fff5a46c4c779707006a7dd6b"
                ],
                [
                    "no-tag",
                    "7ea424d1a212557c470bfb6a7e0f93deabc2bd62"
                ],
                [
                    "no-tag",
                    "91c35cce86a4bb21faeb72413f2bec6e606eccfb"
                ],
                [
                    "no-tag",
                    "b48b84cd2c32f6b23b2e64f20dd9eea9aff2c508"
                ],
                [
                    "no-tag",
                    "c9b0b2cc5cbd3390637729bcd109a31fa6659ac6"
                ],
                [
                    "no-tag",
                    "af781dff0d51571cc35e4c21801a96f77acb7154"
                ],
                [
                    "no-tag",
                    "99a41de9b60e2141ed593a62703bdca4f71219b4"
                ],
                [
                    "no-tag",
                    "a8aa24d8eb8f01ab06d4808c91375e864c03d64f"
                ],
                [
                    "no-tag",
                    "be5a9a6809a65330f16ecba511d56a896db37d03"
                ],
                [
                    "no-tag",
                    "3fd69304dc159303ec440ffc3e082ad1b3ec3834"
                ],
                [
                    "no-tag",
                    "956d5017c691a3ce5903b97c01c7cf7626c87bc7"
                ],
                [
                    "no-tag",
                    "3e31498a764bb10fe0368518b83ac2b668a17d77"
                ],
                [
                    "no-tag",
                    "a5a07ae83ccd0999810fd059630816c6f6891f9a"
                ]
            ],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: ZIP",
                    "relevance": 8
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "42914e0ad9ecbfa7601dc90c389b5e7de39ed50a",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537154332,
            "hunks": 1,
            "message": "fix bug for FileUtil",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "index 0ba3052d0..6a094e589 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "@@ -560,3 +560,3 @@ public class FileUtil {",
                " \tpublic static boolean newerThan(File file, File reference) {",
                "-\t\tif (null == file || false == reference.exists()) {",
                "+\t\tif (null == reference || false == reference.exists()) {",
                " \t\t\treturn true;// \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u0080\u00e5\u00ae\u009a\u00e6\u00af\u0094\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0096\u00b0"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "2fc99a40899f19875fe1becfb2f45fda16af1667",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1538626200,
            "hunks": 33,
            "message": "fix bugs",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/date/DateTime.java b/hutool-core/src/main/java/cn/hutool/core/date/DateTime.java",
                "index ef172ed07..7a8899c6c 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/date/DateTime.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/date/DateTime.java",
                "@@ -632,3 +632,3 @@ public class DateTime extends Date {",
                " \t * @param date \u00e6\u0097\u00a5\u00e6\u009c\u009f",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u009c\u00a8\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e4\u00b9\u008b\u00e5\u0089\u008d\u00e6\u0088\u0096\u00e4\u00b8\u008e\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e7\u009b\u00b8\u00e7\u00ad\u0089",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u009c\u00a8\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e4\u00b9\u008b\u00e5\u0089\u008d",
                " \t * @since 4.1.3",
                "@@ -657,6 +657,6 @@ public class DateTime extends Date {",
                " \t/**",
                "-\t * \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u009c\u00a8\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e4\u00b9\u008b\u00e5\u0090\u008e\u00e6\u0088\u0096\u00e4\u00b8\u008e\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e7\u009b\u00b8\u00e7\u00ad\u0089",
                "+\t * \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u009c\u00a8\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e4\u00b9\u008b\u00e5\u0090\u008e",
                " \t * ",
                " \t * @param date \u00e6\u0097\u00a5\u00e6\u009c\u009f",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u009c\u00a8\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e4\u00b9\u008b\u00e5\u0090\u008e\u00e6\u0088\u0096\u00e4\u00b8\u008e\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e7\u009b\u00b8\u00e7\u00ad\u0089",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u009c\u00a8\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e4\u00b9\u008b\u00e5\u0090\u008e",
                " \t * @since 4.1.3",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "index 6a094e589..5e6715640 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "@@ -18,2 +18,3 @@ import java.net.URI;",
                " import java.net.URL;",
                "+import java.net.URLConnection;",
                " import java.nio.charset.Charset;",
                "@@ -3279,2 +3280,13 @@ public class FileUtil {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0089\u00a9\u00e5\u00b1\u0095\u00e5\u0090\u008d\u00e8\u008e\u00b7\u00e5\u00be\u0097MimeType",
                "+\t * ",
                "+\t * @param filePath \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e6\u0088\u0096\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d",
                "+\t * @return MimeType",
                "+\t * @since 4.1.15",
                "+\t */",
                "+\tpublic static String getMimeType(String filePath) {",
                "+\t\treturn URLConnection.getFileNameMap().getContentTypeFor(filePath);",
                "+\t}",
                " }",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
                "index 23cf48046..bc96b0c33 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
                "@@ -2138,3 +2138,3 @@ public class NumberUtil {",
                " \t\t\treturn Integer.parseInt(number.substring(2), 16);",
                "-\t\t} else if (number.startsWith(\"0\")) {",
                "+\t\t} else if (number.startsWith(\"0\") && number.length() > 1) {",
                " \t\t\t// 04\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba8\u00e8\u00bf\u009b\u00e5\u0088\u00b6\u00e6\u0095\u00b0",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/servlet/ServletUtil.java b/hutool-extra/src/main/java/cn/hutool/extra/servlet/ServletUtil.java",
                "index 3404c83fa..7a2d5fe55 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/servlet/ServletUtil.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/servlet/ServletUtil.java",
                "@@ -2,2 +2,4 @@ package cn.hutool.extra.servlet;",
                "+import java.io.BufferedInputStream;",
                "+import java.io.File;",
                " import java.io.IOException;",
                "@@ -24,2 +26,3 @@ import cn.hutool.core.bean.copier.ValueProvider;",
                " import cn.hutool.core.exceptions.UtilException;",
                "+import cn.hutool.core.io.FileUtil;",
                " import cn.hutool.core.io.IORuntimeException;",
                "@@ -28,4 +31,6 @@ import cn.hutool.core.util.ArrayUtil;",
                " import cn.hutool.core.util.CharsetUtil;",
                "+import cn.hutool.core.util.ObjectUtil;",
                " import cn.hutool.core.util.ReflectUtil;",
                " import cn.hutool.core.util.StrUtil;",
                "+import cn.hutool.core.util.URLUtil;",
                " import cn.hutool.extra.servlet.multipart.MultipartFormData;",
                "@@ -48,3 +53,3 @@ public class ServletUtil {",
                " \tpublic static final String METHOD_TRACE = \"TRACE\";",
                "-\t",
                "+",
                " \t// --------------------------------------------------------- getParam start",
                "@@ -60,3 +65,3 @@ public class ServletUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -68,5 +73,5 @@ public class ServletUtil {",
                " \tpublic static Map<String, String> getParamMap(ServletRequest request) {",
                "-\t\tMap<String,String> params = new HashMap<String,String>();",
                "-\t\tfor (Map.Entry<String,String[]> entry : getParams(request).entrySet()) {",
                "-\t\t\tparams.put( entry.getKey(), ArrayUtil.join(entry.getValue(), StrUtil.COMMA) );",
                "+\t\tMap<String, String> params = new HashMap<String, String>();",
                "+\t\tfor (Map.Entry<String, String[]> entry : getParams(request).entrySet()) {",
                "+\t\t\tparams.put(entry.getKey(), ArrayUtil.join(entry.getValue(), StrUtil.COMMA));",
                " \t\t}",
                "@@ -74,3 +79,3 @@ public class ServletUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -83,3 +88,3 @@ public class ServletUtil {",
                " \t */",
                "-\tpublic static String getBody(ServletRequest request){",
                "+\tpublic static String getBody(ServletRequest request) {",
                " \t\ttry {",
                "@@ -90,3 +95,3 @@ public class ServletUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -99,3 +104,3 @@ public class ServletUtil {",
                " \t */",
                "-\tpublic static byte[] getBodyBytes(ServletRequest request){",
                "+\tpublic static byte[] getBodyBytes(ServletRequest request) {",
                " \t\ttry {",
                "@@ -201,3 +206,3 @@ public class ServletUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -225,3 +230,3 @@ public class ServletUtil {",
                " \t */",
                "-\tpublic static MultipartFormData getMultipart(ServletRequest request, UploadSetting uploadSetting) throws IORuntimeException{",
                "+\tpublic static MultipartFormData getMultipart(ServletRequest request, UploadSetting uploadSetting) throws IORuntimeException {",
                " \t\tfinal MultipartFormData formData = new MultipartFormData(uploadSetting);",
                "@@ -461,2 +466,38 @@ public class ServletUtil {",
                "+\t/**",
                "+\t * \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e7\u00bb\u0099\u00e5\u00ae\u00a2\u00e6\u0088\u00b7\u00e7\u00ab\u00af",
                "+\t * ",
                "+\t * @param response \u00e5\u0093\u008d\u00e5\u00ba\u0094\u00e5\u00af\u00b9\u00e8\u00b1\u00a1{@link HttpServletResponse}",
                "+\t * @param in \u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u00ae\u00a2\u00e6\u0088\u00b7\u00e7\u00ab\u00af\u00e7\u009a\u0084\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "+\t * @param contentType \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @since 4.1.15",
                "+\t */",
                "+\tpublic static void write(HttpServletResponse response, File file) {",
                "+\t\tfinal String fileName = file.getName();",
                "+\t\tfinal String contentType = ObjectUtil.defaultIfNull(FileUtil.getMimeType(fileName), \"application/octet-stream\");",
                "+\t\tBufferedInputStream in = null;",
                "+\t\ttry {",
                "+\t\t\tin = FileUtil.getInputStream(file);",
                "+\t\t\twrite(response, in, contentType, fileName);",
                "+\t\t} finally {",
                "+\t\t\tIoUtil.close(in);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e7\u00bb\u0099\u00e5\u00ae\u00a2\u00e6\u0088\u00b7\u00e7\u00ab\u00af",
                "+\t * ",
                "+\t * @param response \u00e5\u0093\u008d\u00e5\u00ba\u0094\u00e5\u00af\u00b9\u00e8\u00b1\u00a1{@link HttpServletResponse}",
                "+\t * @param in \u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u00ae\u00a2\u00e6\u0088\u00b7\u00e7\u00ab\u00af\u00e7\u009a\u0084\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "+\t * @param contentType \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @param fileName \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d",
                "+\t * @since 4.1.15",
                "+\t */",
                "+\tpublic static void write(HttpServletResponse response, InputStream in, String contentType, String fileName) {",
                "+\t\tfinal String charset = ObjectUtil.defaultIfNull(response.getCharacterEncoding(), CharsetUtil.UTF_8);",
                "+\t\tresponse.setHeader(\"Content-Disposition\", StrUtil.format(\"attachment;filename={}\", URLUtil.encode(fileName, charset)));",
                "+\t\tresponse.setContentType(contentType);",
                "+\t\twrite(response, in);",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/ssh/JschSessionPool.java b/hutool-extra/src/main/java/cn/hutool/extra/ssh/JschSessionPool.java",
                "index 7ad35c55b..50930d2a8 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/ssh/JschSessionPool.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/ssh/JschSessionPool.java",
                "@@ -3,3 +3,5 @@ package cn.hutool.extra.ssh;",
                " import java.util.Collection;",
                "+import java.util.Iterator;",
                " import java.util.Map;",
                "+import java.util.Map.Entry;",
                " import java.util.concurrent.ConcurrentHashMap;",
                "@@ -8,2 +10,10 @@ import com.jcraft.jsch.Session;",
                "+import cn.hutool.core.util.StrUtil;",
                "+",
                "+/**",
                "+ * Jsch\u00e4\u00bc\u009a\u00e8\u00af\u009d\u00e6\u00b1\u00a0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                " public enum JschSessionPool {",
                "@@ -13,2 +23,4 @@ public enum JschSessionPool {",
                " \tprivate Map<String, Session> sessionPool = new ConcurrentHashMap<String, Session>();",
                "+\t/** \u00e9\u0094\u0081 */",
                "+\tprivate static final Object lock = new Object();",
                "@@ -23,2 +35,26 @@ public enum JschSessionPool {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e4\u00b8\u0080\u00e4\u00b8\u00aaSSH\u00e8\u00b7\u00b3\u00e6\u009d\u00bf\u00e6\u009c\u00ba\u00e4\u00bc\u009a\u00e8\u00af\u009d\u00ef\u00bc\u008c\u00e9\u0087\u008d\u00e7\u0094\u00a8\u00e5\u00b7\u00b2\u00e7\u00bb\u008f\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e7\u009a\u0084\u00e4\u00bc\u009a\u00e8\u00af\u009d",
                "+\t * ",
                "+\t * @param sshHost \u00e8\u00b7\u00b3\u00e6\u009d\u00bf\u00e6\u009c\u00ba\u00e4\u00b8\u00bb\u00e6\u009c\u00ba",
                "+\t * @param sshPort \u00e8\u00b7\u00b3\u00e6\u009d\u00bf\u00e6\u009c\u00ba\u00e7\u00ab\u00af\u00e5\u008f\u00a3",
                "+\t * @param sshUser \u00e8\u00b7\u00b3\u00e6\u009d\u00bf\u00e6\u009c\u00ba\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u0090\u008d",
                "+\t * @param sshPass \u00e8\u00b7\u00b3\u00e6\u009d\u00bf\u00e6\u009c\u00ba\u00e5\u00af\u0086\u00e7\u00a0\u0081",
                "+\t * @return SSH\u00e4\u00bc\u009a\u00e8\u00af\u009d",
                "+\t */",
                "+\tpublic Session getSession(String sshHost, int sshPort, String sshUser, String sshPass) {",
                "+\t\tfinal String key = StrUtil.format(\"{}@{}:{}\", sshUser, sshHost, sshPort);",
                "+\t\tSession session = get(key);",
                "+\t\tif (null == session || false == session.isConnected()) {",
                "+\t\t\tsynchronized (lock) {",
                "+\t\t\t\tsession = get(key);",
                "+\t\t\t\tif (null == session || false == session.isConnected()) {",
                "+\t\t\t\t\tsession = JschUtil.openSession(sshHost, sshPort, sshUser, sshPass);",
                "+\t\t\t\t\tput(key, session);",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn session;",
                "+\t}",
                "@@ -46,2 +82,22 @@ public enum JschSessionPool {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e7\u00a7\u00bb\u00e9\u0099\u00a4\u00e6\u008c\u0087\u00e5\u00ae\u009aSession",
                "+\t * ",
                "+\t * @param session Session\u00e4\u00bc\u009a\u00e8\u00af\u009d",
                "+\t * @since 4.1.15",
                "+\t */",
                "+\tpublic void remove(Session session) {",
                "+\t\tif(null != session) {",
                "+\t\t\tfinal Iterator<Entry<String, Session>> iterator = this.sessionPool.entrySet().iterator();",
                "+\t\t\tEntry<String, Session> entry;",
                "+\t\t\twhile(iterator.hasNext()) {",
                "+\t\t\t\tentry = iterator.next();",
                "+\t\t\t\tif(session.equals(entry.getValue())) {",
                "+\t\t\t\t\titerator.remove();",
                "+\t\t\t\t\tbreak;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t}",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/ssh/JschUtil.java b/hutool-extra/src/main/java/cn/hutool/extra/ssh/JschUtil.java",
                "index 46a4deb4e..0550dd495 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/ssh/JschUtil.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/ssh/JschUtil.java",
                "@@ -33,4 +33,2 @@ public class JschUtil {",
                " \tprivate static final LocalPortGenerater portGenerater = new LocalPortGenerater(10000);",
                "-\t/** \u00e9\u0094\u0081 */",
                "-\tprivate static final Object lock = new Object();",
                "@@ -55,14 +53,3 @@ public class JschUtil {",
                " \tpublic static Session getSession(String sshHost, int sshPort, String sshUser, String sshPass) {",
                "-\t\tfinal String key = StrUtil.format(\"{}@{}:{}\", sshUser, sshHost, sshPort);",
                "-\t\tSession session = JschSessionPool.INSTANCE.get(key);",
                "-\t\tif (null == session) {",
                "-\t\t\tsynchronized (lock) {",
                "-\t\t\t\tsession = JschSessionPool.INSTANCE.get(key);",
                "-\t\t\t\tif (null == session || false == session.isConnected()) {",
                "-\t\t\t\t\tsession = openSession(sshHost, sshPort, sshUser, sshPass);",
                "-\t\t\t\t\tJschSessionPool.INSTANCE.put(key, session);",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "-\t\t}",
                "-\t\treturn session;",
                "+\t\treturn JschSessionPool.INSTANCE.getSession(sshHost, sshPort, sshUser, sshPass);",
                " \t}",
                "@@ -110,3 +97,3 @@ public class JschUtil {",
                " \t\t\t} catch (JSchException e) {",
                "-\t\t\t\tthrow new JschRuntimeException(\"From [\" + remoteHost + \"] Mapping to [\" + localPort + \"] error\u00ef\u00bc\u0081\", e);",
                "+\t\t\t\tthrow new JschRuntimeException(e, \"From [{}] mapping to [{}] error\u00ef\u00bc\u0081\", remoteHost, localPort);",
                " \t\t\t}",
                "@@ -261,2 +248,3 @@ public class JschUtil {",
                " \t\t}",
                "+\t\tJschSessionPool.INSTANCE.remove(session);",
                " \t}",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HttpUtil.java b/hutool-http/src/main/java/cn/hutool/http/HttpUtil.java",
                "index 63d0048b3..e0c1f726a 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HttpUtil.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HttpUtil.java",
                "@@ -8,3 +8,2 @@ import java.io.UnsupportedEncodingException;",
                " import java.net.HttpURLConnection;",
                "-import java.net.URLConnection;",
                " import java.net.URLDecoder;",
                "@@ -858,5 +857,6 @@ public class HttpUtil {",
                " \t * @return MimeType",
                "+\t * @see FileUtil#getMimeType(String)",
                " \t */",
                " \tpublic static String getMimeType(String filePath) {",
                "-\t\treturn URLConnection.getFileNameMap().getContentTypeFor(filePath);",
                "+\t\treturn FileUtil.getMimeType(filePath);",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/date/DateTime.java",
                "hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
                "hutool-extra/src/main/java/cn/hutool/extra/servlet/ServletUtil.java",
                "hutool-extra/src/main/java/cn/hutool/extra/ssh/JschSessionPool.java",
                "hutool-extra/src/main/java/cn/hutool/extra/ssh/JschUtil.java",
                "hutool-http/src/main/java/cn/hutool/http/HttpUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "5d935aa4beae1d6ce86685bf418378a5cd5087f7"
                ],
                [
                    "no-tag",
                    "8a44a002da764c0772fe3890f1c96fb01128a7fd"
                ],
                [
                    "no-tag",
                    "f8832654746b9d1caaadb4c30621a207cd86e3d6"
                ],
                [
                    "no-tag",
                    "678351455275c06b480d6d1af617b48d47befe6f"
                ],
                [
                    "no-tag",
                    "c70b324f2e5185192546106a6a936bd349a7e3b2"
                ],
                [
                    "no-tag",
                    "60c40cbc72cb3f391d8a4363058700674e2c1afa"
                ],
                [
                    "no-tag",
                    "ef4f4912e493041193f3d03e9a677e6f7b224c0f"
                ],
                [
                    "no-tag",
                    "7b8a7419ea9083b07082c4b23392a65e62b00258"
                ]
            ],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "03f7e38a9215c8531790499814aabea219e096d8",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1536683323,
            "hunks": 24,
            "message": "add Thymeleaf support",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "index 0be8eb996..bd43dabc6 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "@@ -3136,3 +3136,4 @@ public class FileUtil {",
                " \t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096Web\u00e9\u00a1\u00b9\u00e7\u009b\u00ae\u00e4\u00b8\u008b\u00e7\u009a\u0084web root\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096Web\u00e9\u00a1\u00b9\u00e7\u009b\u00ae\u00e4\u00b8\u008b\u00e7\u009a\u0084web root\u00e8\u00b7\u00af\u00e5\u00be\u0084<br>",
                "+\t * \u00e5\u008e\u009f\u00e7\u0090\u0086\u00e6\u0098\u00af\u00e9\u00a6\u0096\u00e5\u0085\u0088\u00e8\u008e\u00b7\u00e5\u008f\u0096ClassPath\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e7\u0094\u00b1\u00e4\u00ba\u008e\u00e5\u009c\u00a8web\u00e9\u00a1\u00b9\u00e7\u009b\u00ae\u00e4\u00b8\u00adClassPath\u00e4\u00bd\u008d\u00e4\u00ba\u008e WEB-INF/classes/\u00e4\u00b8\u008b\u00ef\u00bc\u008c\u00e6\u0095\u0085\u00e5\u0090\u0091\u00e4\u00b8\u008a\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e4\u00b8\u00a4\u00e7\u00ba\u00a7\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u008d\u00b3\u00e5\u008f\u00af\u00e3\u0080\u0082",
                " \t * ",
                "@@ -3142,5 +3143,5 @@ public class FileUtil {",
                " \tpublic static File getWebRoot() {",
                "-\t\tString classPath = ClassUtil.getClassPath();",
                "+\t\tfinal String classPath = ClassUtil.getClassPath();",
                " \t\tif (StrUtil.isNotBlank(classPath)) {",
                "-\t\t\treturn file(classPath).getParentFile().getParentFile();",
                "+\t\t\treturn getParent(file(classPath), 2);",
                " \t\t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/resource/MultiFileResource.java b/hutool-core/src/main/java/cn/hutool/core/io/resource/MultiFileResource.java",
                "index 9b9c626fd..7efc15a03 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/resource/MultiFileResource.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/resource/MultiFileResource.java",
                "@@ -5,2 +5,9 @@ import java.util.Collection;",
                "+/**",
                "+ * \u00e5\u00a4\u009a\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e7\u00bb\u0084\u00e5\u0090\u0088\u00e8\u00b5\u0084\u00e6\u00ba\u0090<br>",
                "+ * \u00e6\u00ad\u00a4\u00e8\u00b5\u0084\u00e6\u00ba\u0090\u00e4\u00b8\u00ba\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e5\u0088\u00a9\u00e7\u0094\u00a8\u00e6\u00b8\u00b8\u00e6\u00a0\u0087\u00e8\u0087\u00aa\u00e5\u00be\u00aa\u00e7\u008e\u00af\u00e8\u00b5\u0084\u00e6\u00ba\u0090\u00ef\u00bc\u008c\u00e5\u008f\u00aa\u00e6\u009c\u0089\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link #next()} \u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e6\u0089\u008d\u00e4\u00bc\u009a\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e4\u00b8\u008b\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e8\u00b5\u0084\u00e6\u00ba\u0090\u00ef\u00bc\u008c\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u00ae\u008c\u00e6\u00af\u0095\u00e5\u0090\u008e\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link #reset()}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e9\u0087\u008d\u00e7\u00bd\u00ae\u00e6\u00b8\u00b8\u00e6\u00a0\u0087",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                " public class MultiFileResource extends MultiResource{",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/resource/WebAppResource.java b/hutool-core/src/main/java/cn/hutool/core/io/resource/WebAppResource.java",
                "new file mode 100644",
                "index 000000000..5ecc23369",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/resource/WebAppResource.java",
                "@@ -0,0 +1,24 @@",
                "+package cn.hutool.core.io.resource;",
                "+",
                "+import java.io.File;",
                "+",
                "+import cn.hutool.core.io.FileUtil;",
                "+",
                "+/**",
                "+ * Web root\u00e8\u00b5\u0084\u00e6\u00ba\u0090\u00e8\u00ae\u00bf\u00e9\u0097\u00ae\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.11",
                "+ */",
                "+public class WebAppResource extends FileResource {",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param path \u00e7\u009b\u00b8\u00e5\u00af\u00b9\u00e4\u00ba\u008eWeb root\u00e7\u009a\u0084\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t */",
                "+\tpublic WebAppResource(String path) {",
                "+\t\tsuper(new File(FileUtil.getWebRoot(), path));",
                "+\t}",
                "+",
                "+}",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/Engine.java b/hutool-extra/src/main/java/cn/hutool/extra/template/Engine.java",
                "index 892deb8b3..c472c7244 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/template/Engine.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/Engine.java",
                "@@ -9,9 +9,2 @@ public interface Engine {",
                "-\t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00bc\u0095\u00e6\u0093\u008e\u00e5\u0090\u008d",
                "-\t * @return \u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00bc\u0095\u00e6\u0093\u008e\u00e5\u0090\u008d",
                "-\t * @since 4.1.3",
                "-\t */",
                "-\tString getName();",
                "-",
                " \t/**",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/TemplateConfig.java b/hutool-extra/src/main/java/cn/hutool/extra/template/TemplateConfig.java",
                "index ddda460f7..c0e43792c 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/template/TemplateConfig.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/TemplateConfig.java",
                "@@ -70,2 +70,12 @@ public class TemplateConfig implements Serializable {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                "+\t * ",
                "+\t * @return \u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                "+\t * @since 4.1.11",
                "+\t */",
                "+\tpublic String getCharsetStr() {",
                "+\t\treturn charset.toString();",
                "+\t}",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/EngineFactory.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/EngineFactory.java",
                "index 7ba03cd53..7c50f5f01 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/EngineFactory.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/EngineFactory.java",
                "@@ -2,2 +2,3 @@ package cn.hutool.extra.template.engine;",
                "+import cn.hutool.core.util.StrUtil;",
                " import cn.hutool.extra.template.Engine;",
                "@@ -9,2 +10,3 @@ import cn.hutool.extra.template.engine.freemarker.FreemarkerEngine;",
                " import cn.hutool.extra.template.engine.rythm.RythmEngine;",
                "+import cn.hutool.extra.template.engine.thymeleaf.ThymeleafEngine;",
                " import cn.hutool.extra.template.engine.velocity.VelocityEngine;",
                "@@ -27,3 +29,3 @@ public class EngineFactory {",
                " \t\tfinal Engine engine = doCreate(config);",
                "-\t\tStaticLog.debug(\"Use [{}] Engine As Default.\", engine.getName());",
                "+\t\tStaticLog.debug(\"Use [{}] Engine As Default.\", StrUtil.removeSuffix(engine.getClass().getSimpleName(), \"Engine\"));",
                " \t\treturn engine;",
                "@@ -63,2 +65,7 @@ public class EngineFactory {",
                " \t\t}",
                "+\t\ttry {",
                "+\t\t\treturn new ThymeleafEngine(config);",
                "+\t\t} catch (NoClassDefFoundError e) {",
                "+\t\t\t// ignore",
                "+\t\t}",
                " \t\tthrow new TemplateException(\"No template found ! Please add one of [Beetl,Freemarker,Velocity,Rythm] jar to your project !\");",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/beetl/BeetlEngine.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/beetl/BeetlEngine.java",
                "index 8a209439f..e5015e21f 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/beetl/BeetlEngine.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/beetl/BeetlEngine.java",
                "@@ -54,7 +54,2 @@ public class BeetlEngine implements Engine {",
                "-\t@Override",
                "-\tpublic String getName() {",
                "-\t\treturn \"Beetl\";",
                "-\t}",
                "-",
                " \t@Override",
                "@@ -77,7 +72,7 @@ public class BeetlEngine implements Engine {",
                " \t\tcase CLASSPATH:",
                "-\t\t\treturn createGroupTemplate(new ClasspathResourceLoader(config.getPath(), config.getCharset().toString()));",
                "+\t\t\treturn createGroupTemplate(new ClasspathResourceLoader(config.getPath(), config.getCharsetStr()));",
                " \t\tcase FILE:",
                "-\t\t\treturn createGroupTemplate(new FileResourceLoader(config.getPath(), config.getCharset().toString()));",
                "+\t\t\treturn createGroupTemplate(new FileResourceLoader(config.getPath(), config.getCharsetStr()));",
                " \t\tcase WEB_ROOT:",
                "-\t\t\treturn createGroupTemplate(new WebAppResourceLoader(config.getPath(), config.getCharset().toString()));",
                "+\t\t\treturn createGroupTemplate(new WebAppResourceLoader(config.getPath(), config.getCharsetStr()));",
                " \t\tcase STRING:",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/EnjoyEngine.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/EnjoyEngine.java",
                "index d1d363f6a..d3fe52f7e 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/EnjoyEngine.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/EnjoyEngine.java",
                "@@ -52,7 +52,2 @@ public class EnjoyEngine implements Engine {",
                "-\t@Override",
                "-\tpublic String getName() {",
                "-\t\treturn \"Enjoy\";",
                "-\t}",
                "-",
                " \t@Override",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/freemarker/FreemarkerEngine.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/freemarker/FreemarkerEngine.java",
                "index 14b5f24c3..23ed8b12f 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/freemarker/FreemarkerEngine.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/freemarker/FreemarkerEngine.java",
                "@@ -52,7 +52,2 @@ public class FreemarkerEngine implements Engine {",
                "-\t@Override",
                "-\tpublic String getName() {",
                "-\t\treturn \"Freemarker\";",
                "-\t}",
                "-",
                " \t@Override",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/rythm/RythmEngine.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/rythm/RythmEngine.java",
                "index 48f5b66bc..3d6d415b7 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/rythm/RythmEngine.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/rythm/RythmEngine.java",
                "@@ -9,3 +9,4 @@ import cn.hutool.extra.template.TemplateConfig;",
                " /**",
                "- * Rythm\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00bc\u0095\u00e6\u0093\u008e",
                "+ * Rythm\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00bc\u0095\u00e6\u0093\u008e<br>",
                "+ * \u00e6\u0096\u0087\u00e6\u00a1\u00a3\u00ef\u00bc\u009ahttp://rythmengine.org/doc/index",
                "  * ",
                "@@ -45,7 +46,2 @@ public class RythmEngine implements Engine {",
                "-\t@Override",
                "-\tpublic String getName() {",
                "-\t\treturn \"Rythm\";",
                "-\t}",
                "-",
                " \t@Override",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/rythm/RythmUtil.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/rythm/RythmUtil.java",
                "deleted file mode 100644",
                "index 8ca332b1d..000000000",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/rythm/RythmUtil.java",
                "+++ /dev/null",
                "@@ -1,98 +0,0 @@",
                "-package cn.hutool.extra.template.engine.rythm;",
                "-",
                "-import java.io.Writer;",
                "-import java.util.Map;",
                "-import java.util.Properties;",
                "-",
                "-import org.rythmengine.Rythm;",
                "-import org.rythmengine.RythmEngine;",
                "-",
                "-/**",
                "- * Rythm\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00bc\u0095\u00e6\u0093\u008e\u00e5\u00b7\u00a5\u00e5\u0085\u00b7\u00e7\u00b1\u00bb<br>",
                "- * \u00e6\u0096\u0087\u00e6\u00a1\u00a3\u00ef\u00bc\u009ahttp://rythmengine.org/doc/index",
                "- * ",
                "- * @author Looly",
                "- *",
                "- */",
                "-public class RythmUtil {",
                "-",
                "-\t/**",
                "-\t * \u00e6\u0096\u00b0\u00e5\u00bb\u00ba\u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e7\u009a\u0084Rythm\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00bc\u0095\u00e6\u0093\u008e",
                "-\t * ",
                "-\t * @param userConfiguration \u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e4\u00bd\u00bf\u00e7\u0094\u00a8Props\u00e7\u00b1\u00bb",
                "-\t * @return {@link RythmEngine}",
                "-\t */",
                "-\tpublic static RythmEngine newEngine(Properties userConfiguration) {",
                "-\t\treturn new RythmEngine(userConfiguration);",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link RythmEngine}\u00e6\u00b8\u00b2\u00e6\u009f\u0093\u00e6\u00a8\u00a1\u00e6\u009d\u00bf",
                "-\t * ",
                "-\t * @param engine {@link RythmEngine}",
                "-\t * @param template \u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "-\t * @param args \u00e5\u008f\u0098\u00e9\u0087\u008f\u00e5\u0080\u00bc",
                "-\t * @return \u00e6\u00b8\u00b2\u00e6\u009f\u0093\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "-\t */",
                "-\tpublic static String render(RythmEngine engine, String template, Object... args) {",
                "-\t\treturn engine.render(template, args);",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link RythmEngine}\u00e6\u00b8\u00b2\u00e6\u009f\u0093\u00e6\u00a8\u00a1\u00e6\u009d\u00bf",
                "-\t * ",
                "-\t * @param engine {@link RythmEngine}",
                "-\t * @param writer \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e7\u009a\u0084{@link Writer}",
                "-\t * @param template \u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "-\t * @param args \u00e5\u008f\u0098\u00e9\u0087\u008f\u00e5\u0080\u00bc",
                "-\t */",
                "-\tpublic static void render(RythmEngine engine, Writer writer, String template, Object... args) {",
                "-\t\tengine.render(writer, template, args);",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link RythmEngine}\u00e6\u00b8\u00b2\u00e6\u009f\u0093\u00e6\u00a8\u00a1\u00e6\u009d\u00bf",
                "-\t * ",
                "-\t * @param engine {@link RythmEngine}",
                "-\t * @param writer \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e7\u009a\u0084{@link Writer}",
                "-\t * @param template \u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "-\t * @param args \u00e5\u008f\u0098\u00e9\u0087\u008f\u00e5\u0080\u00bc",
                "-\t */",
                "-\tpublic static void render(RythmEngine engine, Writer writer, String template, Map<String, Object> args) {",
                "-\t\tengine.render(writer, template, args);",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u0085\u00a8\u00e5\u00b1\u0080\u00e5\u008d\u0095\u00e4\u00be\u008b{@link RythmEngine}\u00e6\u00b8\u00b2\u00e6\u009f\u0093\u00e6\u00a8\u00a1\u00e6\u009d\u00bf",
                "-\t * ",
                "-\t * @param template \u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "-\t * @param args \u00e5\u008f\u0098\u00e9\u0087\u008f\u00e5\u0080\u00bc",
                "-\t * @return \u00e6\u00b8\u00b2\u00e6\u009f\u0093\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "-\t */",
                "-\tpublic static String render(String template, Object... args) {",
                "-\t\treturn Rythm.render(template, args);",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link RythmEngine}\u00e6\u00b8\u00b2\u00e6\u009f\u0093\u00e6\u00a8\u00a1\u00e6\u009d\u00bf",
                "-\t * ",
                "-\t * @param engine {@link RythmEngine}",
                "-\t * @param template \u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "-\t * @param args \u00e5\u008f\u0098\u00e9\u0087\u008f\u00e5\u0080\u00bc",
                "-\t * @return \u00e6\u00b8\u00b2\u00e6\u009f\u0093\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "-\t */",
                "-\tpublic static String render(RythmEngine engine, String template, Map<String, Object> args) {",
                "-\t\treturn engine.render(template, args);",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u0085\u00a8\u00e5\u00b1\u0080\u00e5\u008d\u0095\u00e4\u00be\u008b{@link RythmEngine}\u00e6\u00b8\u00b2\u00e6\u009f\u0093\u00e6\u00a8\u00a1\u00e6\u009d\u00bf",
                "-\t * ",
                "-\t * @param template \u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "-\t * @param args \u00e5\u008f\u0098\u00e9\u0087\u008f\u00e5\u0080\u00bc",
                "-\t * @return \u00e6\u00b8\u00b2\u00e6\u009f\u0093\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "-\t */",
                "-\tpublic static String render(String template, Map<String, Object> args) {",
                "-\t\treturn Rythm.render(template, args);",
                "-\t}",
                "-}",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/thymeleaf/ThymeleafEngine.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/thymeleaf/ThymeleafEngine.java",
                "new file mode 100644",
                "index 000000000..2d9594009",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/thymeleaf/ThymeleafEngine.java",
                "@@ -0,0 +1,107 @@",
                "+package cn.hutool.extra.template.engine.thymeleaf;",
                "+",
                "+import org.thymeleaf.TemplateEngine;",
                "+import org.thymeleaf.templatemode.TemplateMode;",
                "+import org.thymeleaf.templateresolver.ClassLoaderTemplateResolver;",
                "+import org.thymeleaf.templateresolver.DefaultTemplateResolver;",
                "+import org.thymeleaf.templateresolver.FileTemplateResolver;",
                "+import org.thymeleaf.templateresolver.ITemplateResolver;",
                "+import org.thymeleaf.templateresolver.StringTemplateResolver;",
                "+",
                "+import cn.hutool.core.io.FileUtil;",
                "+import cn.hutool.extra.template.Engine;",
                "+import cn.hutool.extra.template.Template;",
                "+import cn.hutool.extra.template.TemplateConfig;",
                "+",
                "+/**",
                "+ * Thymeleaf\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00bc\u0095\u00e6\u0093\u008e\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.11",
                "+ */",
                "+public class ThymeleafEngine implements Engine {",
                "+",
                "+\tTemplateEngine engine;",
                "+\tTemplateConfig config;",
                "+",
                "+\t// --------------------------------------------------------------------------------- Constructor start",
                "+\t/**",
                "+\t * \u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t */",
                "+\tpublic ThymeleafEngine() {",
                "+\t\tthis(new TemplateConfig());",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param config \u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e9\u0085\u008d\u00e7\u00bd\u00ae",
                "+\t */",
                "+\tpublic ThymeleafEngine(TemplateConfig config) {",
                "+\t\tthis(createEngine(config));",
                "+\t\tthis.config = config;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param engine {@link TemplateEngine}",
                "+\t */",
                "+\tpublic ThymeleafEngine(TemplateEngine engine) {",
                "+\t\tthis.engine = engine;",
                "+\t}",
                "+\t// --------------------------------------------------------------------------------- Constructor end",
                "+",
                "+\t@Override",
                "+\tpublic Template getTemplate(String resource) {",
                "+\t\treturn ThymeleafTemplate.wrap(this.engine, resource, (null == this.config) ? null : this.config.getCharset());",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e5\u00bc\u0095\u00e6\u0093\u008e",
                "+\t * ",
                "+\t * @param config \u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e9\u0085\u008d\u00e7\u00bd\u00ae",
                "+\t * @return {@link TemplateEngine}",
                "+\t */",
                "+\tprivate static TemplateEngine createEngine(TemplateConfig config) {",
                "+\t\tif (null == config) {",
                "+\t\t\tconfig = new TemplateConfig();",
                "+\t\t}",
                "+\t\t",
                "+\t\tITemplateResolver resolver = null;",
                "+\t\tswitch (config.getResourceMode()) {",
                "+\t\tcase CLASSPATH:",
                "+\t\t\tfinal ClassLoaderTemplateResolver classLoaderResolver = new ClassLoaderTemplateResolver();",
                "+\t\t\tclassLoaderResolver.setCharacterEncoding(config.getCharsetStr());",
                "+\t\t\tclassLoaderResolver.setTemplateMode(TemplateMode.HTML);",
                "+\t\t\tresolver = classLoaderResolver;",
                "+\t\t\tbreak;",
                "+\t\tcase FILE:",
                "+\t\t\tfinal FileTemplateResolver fileResolver = new FileTemplateResolver();",
                "+\t\t\tfileResolver.setCharacterEncoding(config.getCharsetStr());",
                "+\t\t\tfileResolver.setTemplateMode(TemplateMode.HTML);",
                "+\t\t\tresolver = fileResolver;",
                "+\t\t\tbreak;",
                "+\t\tcase WEB_ROOT:",
                "+\t\t\tfinal FileTemplateResolver webRootResolver = new FileTemplateResolver();",
                "+\t\t\twebRootResolver.setCharacterEncoding(config.getCharsetStr());",
                "+\t\t\twebRootResolver.setTemplateMode(TemplateMode.HTML);",
                "+\t\t\twebRootResolver.setPrefix(FileUtil.getWebRoot().getAbsolutePath());",
                "+\t\t\tresolver = webRootResolver;",
                "+\t\t\tbreak;",
                "+\t\tcase STRING:",
                "+\t\t\tresolver = new StringTemplateResolver();",
                "+\t\t\tbreak;",
                "+\t\tcase COMPOSITE:",
                "+\t\t\tresolver = new DefaultTemplateResolver();",
                "+\t\t\tbreak;",
                "+\t\tdefault:",
                "+\t\t\tresolver = new DefaultTemplateResolver();",
                "+\t\t\tbreak;",
                "+\t\t}",
                "+\t\t",
                "+\t\tfinal TemplateEngine engine = new TemplateEngine();",
                "+\t\tengine.setTemplateResolver(resolver);",
                "+\t\treturn engine;",
                "+\t}",
                "+}",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/thymeleaf/ThymeleafTemplate.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/thymeleaf/ThymeleafTemplate.java",
                "new file mode 100644",
                "index 000000000..c3518131a",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/thymeleaf/ThymeleafTemplate.java",
                "@@ -0,0 +1,67 @@",
                "+package cn.hutool.extra.template.engine.thymeleaf;",
                "+",
                "+import java.io.OutputStream;",
                "+import java.io.Serializable;",
                "+import java.io.Writer;",
                "+import java.nio.charset.Charset;",
                "+import java.util.Locale;",
                "+import java.util.Map;",
                "+",
                "+import org.thymeleaf.TemplateEngine;",
                "+import org.thymeleaf.context.Context;",
                "+",
                "+import cn.hutool.core.io.IoUtil;",
                "+import cn.hutool.core.util.CharsetUtil;",
                "+import cn.hutool.core.util.ObjectUtil;",
                "+import cn.hutool.extra.template.AbstractTemplate;",
                "+",
                "+/**",
                "+ * Thymeleaf\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.11",
                "+ */",
                "+public class ThymeleafTemplate extends AbstractTemplate implements Serializable {",
                "+\tprivate static final long serialVersionUID = 781284916568562509L;",
                "+",
                "+\tprivate TemplateEngine engine;",
                "+\tprivate String template;",
                "+\tprivate Charset charset;",
                "+",
                "+\t/**",
                "+\t * \u00e5\u008c\u0085\u00e8\u00a3\u0085Thymeleaf\u00e6\u00a8\u00a1\u00e6\u009d\u00bf",
                "+\t * ",
                "+\t * @param engine Thymeleaf\u00e7\u009a\u0084\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00bc\u0095\u00e6\u0093\u008e\u00e5\u00af\u00b9\u00e8\u00b1\u00a1 {@link TemplateEngine}",
                "+\t * @param template \u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e6\u0088\u0096\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "+\t * @param charset \u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                "+\t * @return {@link ThymeleafTemplate}",
                "+\t */",
                "+\tpublic static ThymeleafTemplate wrap(TemplateEngine engine, String template, Charset charset) {",
                "+\t\treturn (null == engine) ? null : new ThymeleafTemplate(engine, template, charset);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param engine Thymeleaf\u00e7\u009a\u0084\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00af\u00b9\u00e8\u00b1\u00a1 {@link TemplateEngine}",
                "+\t * @param template \u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e6\u0088\u0096\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "+\t * @param charset \u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                "+\t */",
                "+\tpublic ThymeleafTemplate(TemplateEngine engine, String template, Charset charset) {",
                "+\t\tthis.engine = engine;",
                "+\t\tthis.template = template;",
                "+\t\tthis.charset = ObjectUtil.defaultIfNull(charset, CharsetUtil.CHARSET_UTF_8);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic void render(Map<String, Object> bindingMap, Writer writer) {",
                "+\t\tfinal Context context = new Context(Locale.getDefault(), bindingMap);",
                "+\t\tthis.engine.process(this.template, context, writer);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic void render(Map<String, Object> bindingMap, OutputStream out) {",
                "+\t\trender(bindingMap, IoUtil.getWriter(out, this.charset));",
                "+\t}",
                "+",
                "+}",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/thymeleaf/package-info.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/thymeleaf/package-info.java",
                "new file mode 100644",
                "index 000000000..61fe7168b",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/thymeleaf/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Thymeleaf\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.extra.template.engine.thymeleaf;",
                "\\ No newline at end of file",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/VelocityEngine.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/VelocityEngine.java",
                "index b710a4b79..513334790 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/VelocityEngine.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/VelocityEngine.java",
                "@@ -46,7 +46,2 @@ public class VelocityEngine implements Engine {",
                "-\t@Override",
                "-\tpublic String getName() {",
                "-\t\treturn \"Velocity\";",
                "-\t}",
                "-",
                " \t@Override"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/io/resource/MultiFileResource.java",
                "hutool-core/src/main/java/cn/hutool/core/io/resource/WebAppResource.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/Engine.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/TemplateConfig.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/EngineFactory.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/beetl/BeetlEngine.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/EnjoyEngine.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/freemarker/FreemarkerEngine.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/rythm/RythmEngine.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/rythm/RythmUtil.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/thymeleaf/ThymeleafEngine.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/thymeleaf/ThymeleafTemplate.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/thymeleaf/package-info.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/VelocityEngine.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "e87a852761494c66cf19a54e5dda5898fc17b8b9",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1536918503,
            "hunks": 9,
            "message": "fix ClassPathResource bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "index 6c3d8a1f0..0ba3052d0 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "@@ -1091,3 +1091,5 @@ public class FileUtil {",
                " \t\tif (null == classPath) {",
                "-\t\t\tthrow new NullPointerException(\"ClassPath is null !\");",
                "+//\t\t\tthrow new NullPointerException(\"ClassPath is null !\");",
                "+\t\t\t//\u00e5\u009c\u00a8jar\u00e8\u00bf\u0090\u00e8\u00a1\u008c\u00e6\u00a8\u00a1\u00e5\u00bc\u008f\u00e4\u00b8\u00ad\u00ef\u00bc\u008cClassPath\u00e6\u009c\u0089\u00e5\u008f\u00af\u00e8\u0083\u00bd\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e4\u00b8\u008d\u00e5\u0088\u00b0\u00ef\u00bc\u008c\u00e6\u00ad\u00a4\u00e6\u0097\u00b6\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u008e\u009f\u00e5\u00a7\u008b\u00e7\u009b\u00b8\u00e5\u00af\u00b9\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u0088\u00e6\u00ad\u00a4\u00e6\u0097\u00b6\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u00ba\u00e7\u009b\u00b8\u00e5\u00af\u00b9\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u0089",
                "+\t\t\treturn path;",
                " \t\t}",
                "@@ -1621,2 +1623,47 @@ public class FileUtil {",
                " \t// -------------------------------------------------------------------------------------------- name start",
                "+\t/**",
                "+\t * \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d",
                "+\t * ",
                "+\t * @param file \u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @return \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d",
                "+\t * @since 4.1.13",
                "+\t */",
                "+\tpublic static String getName(File file) {",
                "+\t\treturn (null != file) ? file.getName() : null;",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d",
                "+\t * ",
                "+\t * @param filePath \u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @return \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d",
                "+\t * @since 4.1.13",
                "+\t */",
                "+\tpublic static String getName(String filePath) {",
                "+\t\tif (null == filePath) {",
                "+\t\t\treturn filePath;",
                "+\t\t}",
                "+\t\tint len = filePath.length();",
                "+\t\tif(0 == len) {",
                "+\t\t\treturn filePath;",
                "+\t\t}",
                "+\t\tif(CharUtil.isFileSeparator(filePath.charAt(len -1))) {",
                "+\t\t\t//\u00e4\u00bb\u00a5\u00e5\u0088\u0086\u00e9\u009a\u0094\u00e7\u00ac\u00a6\u00e7\u00bb\u0093\u00e5\u00b0\u00be\u00e7\u009a\u0084\u00e5\u008e\u00bb\u00e6\u008e\u0089\u00e7\u00bb\u0093\u00e5\u00b0\u00be\u00e5\u0088\u0086\u00e9\u009a\u0094\u00e7\u00ac\u00a6",
                "+\t\t\tlen --;",
                "+\t\t}",
                "+\t\t",
                "+\t\tint begin = 0;",
                "+\t\tchar c;",
                "+\t\tfor(int i =len-1; i > -1; i --) {",
                "+\t\t\tc = filePath.charAt(i);",
                "+\t\t\tif(CharUtil.isFileSeparator(c)) {",
                "+\t\t\t\t//\u00e6\u009f\u00a5\u00e6\u0089\u00be\u00e6\u009c\u0080\u00e5\u0090\u008e\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e5\u0088\u0086\u00e9\u009a\u0094\u00e7\u00ac\u00a6\u00ef\u00bc\u0088/\u00e6\u0088\u0096\u00e8\u0080\u0085\\\u00ef\u00bc\u0089",
                "+\t\t\t\tbegin = i +1;",
                "+\t\t\t\tbreak;",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\t",
                "+\t\treturn filePath.substring(begin, len);",
                "+\t}",
                "+\t",
                " \t/**",
                "@@ -1662,3 +1709,3 @@ public class FileUtil {",
                " \t\t\tif(0 == begin || begin > end) {",
                "-\t\t\t\tif(CharUtil.SLASH == c || CharUtil.BACKSLASH == c) {",
                "+\t\t\t\tif(CharUtil.isFileSeparator(c)) {",
                " \t\t\t\t\t//\u00e6\u009f\u00a5\u00e6\u0089\u00be\u00e6\u009c\u0080\u00e5\u0090\u008e\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e5\u0088\u0086\u00e9\u009a\u0094\u00e7\u00ac\u00a6\u00ef\u00bc\u0088/\u00e6\u0088\u0096\u00e8\u0080\u0085\\\u00ef\u00bc\u0089\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e8\u00bf\u0099\u00e4\u00b8\u00aa\u00e5\u0088\u0086\u00e9\u009a\u0094\u00e7\u00ac\u00a6\u00e5\u009c\u00a8.\u00e4\u00b9\u008b\u00e5\u0090\u008e\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e7\u00bb\u00a7\u00e7\u00bb\u00ad\u00e6\u009f\u00a5\u00e6\u0089\u00be\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e7\u00bb\u0093\u00e6\u009d\u009f",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/resource/ClassPathResource.java b/hutool-core/src/main/java/cn/hutool/core/io/resource/ClassPathResource.java",
                "index d5ef41e99..db433ce94 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/resource/ClassPathResource.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/resource/ClassPathResource.java",
                "@@ -7,2 +7,3 @@ import cn.hutool.core.lang.Assert;",
                " import cn.hutool.core.util.ClassUtil;",
                "+import cn.hutool.core.util.ObjectUtil;",
                " import cn.hutool.core.util.StrUtil;",
                "@@ -64,6 +65,9 @@ public class ClassPathResource extends UrlResource {",
                " \t\tAssert.notNull(pathBaseClassLoader, \"Path must not be null\");",
                "-\t\tthis.path = normalizePath(pathBaseClassLoader);",
                "-\t\tthis.classLoader = (classLoader != null) ? classLoader : ClassUtil.getClassLoader();",
                "+\t\t",
                "+\t\tfinal String path = normalizePath(pathBaseClassLoader);",
                "+\t\tthis.path = path;",
                "+\t\tthis.name = StrUtil.isBlank(path) ? null : FileUtil.getName(path);",
                "+\t\t",
                "+\t\tthis.classLoader = ObjectUtil.defaultIfNull(classLoader, ClassUtil.getClassLoader());",
                " \t\tthis.clazz = clazz;",
                "-\t\tthis.name = StrUtil.isBlank(this.path) ? null : FileUtil.file(this.path).getName();",
                " \t\tinitUrl();",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/resource/UrlResource.java b/hutool-core/src/main/java/cn/hutool/core/io/resource/UrlResource.java",
                "index db6d2b18f..58ab0d68b 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/resource/UrlResource.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/resource/UrlResource.java",
                "@@ -12,2 +12,3 @@ import cn.hutool.core.io.IoUtil;",
                " import cn.hutool.core.util.CharsetUtil;",
                "+import cn.hutool.core.util.ObjectUtil;",
                " import cn.hutool.core.util.URLUtil;",
                "@@ -35,3 +36,3 @@ public class UrlResource implements Resource{",
                " \t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "-\t * @param url URL",
                "+\t * @param url URL\u00ef\u00bc\u008c\u00e5\u0085\u0081\u00e8\u00ae\u00b8\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba",
                " \t * @param name \u00e8\u00b5\u0084\u00e6\u00ba\u0090\u00e5\u0090\u008d\u00e7\u00a7\u00b0",
                "@@ -40,3 +41,3 @@ public class UrlResource implements Resource{",
                " \t\tthis.url = url;",
                "-\t\tthis.name = name;",
                "+\t\tthis.name = ObjectUtil.defaultIfNull(name, (null != url) ? FileUtil.getName(url.getPath()) : null);",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/io/resource/ClassPathResource.java",
                "hutool-core/src/main/java/cn/hutool/core/io/resource/UrlResource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "b435a08ae923e2ca1111f83075f7c5f5dcfaf451",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1532400217,
            "hunks": 93,
            "message": "add package-info",
            "diff": [
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/aspects/package-info.java b/hutool-aop/src/main/java/cn/hutool/aop/aspects/package-info.java",
                "new file mode 100644",
                "index 000000000..e70d1f506",
                "--- /dev/null",
                "+++ b/hutool-aop/src/main/java/cn/hutool/aop/aspects/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u0088\u0087\u00e9\u009d\u00a2\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00ef\u00bc\u008c\u00e6\u008f\u0090\u00e4\u00be\u009b\u00e4\u00b8\u0080\u00e4\u00ba\u009b\u00e5\u009f\u00ba\u00e6\u009c\u00ac\u00e7\u009a\u0084\u00e5\u0088\u0087\u00e9\u009d\u00a2\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.aop.aspects;",
                "\\ No newline at end of file",
                "diff --git a/hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/bitMap/package-info.java b/hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/bitMap/package-info.java",
                "new file mode 100644",
                "index 000000000..47ec310dc",
                "--- /dev/null",
                "+++ b/hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/bitMap/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * BitMap\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.bloomfilter.bitMap;",
                "\\ No newline at end of file",
                "diff --git a/hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/filter/package-info.java b/hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/filter/package-info.java",
                "new file mode 100644",
                "index 000000000..7fa569d0a",
                "--- /dev/null",
                "+++ b/hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/filter/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u0090\u0084\u00e7\u00a7\u008dHash\u00e7\u00ae\u0097\u00e6\u00b3\u0095\u00e7\u009a\u0084\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.bloomfilter.filter;",
                "\\ No newline at end of file",
                "diff --git a/hutool-cache/src/main/java/cn/hutool/cache/file/package-info.java b/hutool-cache/src/main/java/cn/hutool/cache/file/package-info.java",
                "new file mode 100644",
                "index 000000000..9a037f8fa",
                "--- /dev/null",
                "+++ b/hutool-cache/src/main/java/cn/hutool/cache/file/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e9\u0092\u0088\u00e5\u00af\u00b9\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e7\u009a\u0084\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.cache.file;",
                "\\ No newline at end of file",
                "diff --git a/hutool-cache/src/main/java/cn/hutool/cache/impl/package-info.java b/hutool-cache/src/main/java/cn/hutool/cache/impl/package-info.java",
                "new file mode 100644",
                "index 000000000..b85c8fb40",
                "--- /dev/null",
                "+++ b/hutool-cache/src/main/java/cn/hutool/cache/impl/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e5\u0090\u0084\u00e7\u00a7\u008d\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.cache.impl;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/bean/copier/package-info.java b/hutool-core/src/main/java/cn/hutool/core/bean/copier/package-info.java",
                "new file mode 100644",
                "index 000000000..54f1c25b0",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/bean/copier/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Bean\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e9\u0080\u0089\u00e9\u00a1\u00b9\u00e7\u00ad\u0089",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.bean.copier;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/package-info.java b/hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/package-info.java",
                "new file mode 100644",
                "index 000000000..1014fe7cc",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Bean\u00e5\u0080\u00bc\u00e6\u008f\u0090\u00e4\u00be\u009b\u00e8\u0080\u0085\u00e6\u0096\u00b9\u00e5\u00bc\u008f\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.bean.copier.provider;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/bean/package-info.java b/hutool-core/src/main/java/cn/hutool/core/bean/package-info.java",
                "new file mode 100644",
                "index 000000000..01479a9fe",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/bean/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Bean\u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e6\u0093\u008d\u00e4\u00bd\u009c\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00acBean\u00e4\u00bf\u00a1\u00e6\u0081\u00af\u00e6\u008f\u008f\u00e8\u00bf\u00b0\u00ef\u00bc\u008cBean\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00e3\u0080\u0081\u00e5\u008a\u00a8\u00e6\u0080\u0081Bean\u00e3\u0080\u0081Bean\u00e5\u00b7\u00a5\u00e5\u0085\u00b7\u00e7\u00ad\u0089",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.bean;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/clone/package-info.java b/hutool-core/src/main/java/cn/hutool/core/clone/package-info.java",
                "new file mode 100644",
                "index 000000000..f607b1de1",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/clone/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u0085\u008b\u00e9\u009a\u0086\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.clone;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/codec/package-info.java b/hutool-core/src/main/java/cn/hutool/core/codec/package-info.java",
                "new file mode 100644",
                "index 000000000..1d1a23584",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/codec/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * BaseN\u00e4\u00bb\u00a5\u00e5\u008f\u008aBCD\u00e7\u00bc\u0096\u00e7\u00a0\u0081\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.codec;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/collection/package-info.java b/hutool-core/src/main/java/cn/hutool/core/collection/package-info.java",
                "new file mode 100644",
                "index 000000000..593a7e352",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/collection/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e9\u009b\u0086\u00e5\u0090\u0088\u00e4\u00bb\u00a5\u00e5\u008f\u008aIterator\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e9\u009b\u0086\u00e5\u0090\u0088\u00e5\u00b7\u00a5\u00e5\u0085\u00b7CollUtil\u00ef\u00bc\u008cIterator\u00e5\u0092\u008cIterable\u00e5\u00b7\u00a5\u00e5\u0085\u00b7IterUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.collection;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/comparator/package-info.java b/hutool-core/src/main/java/cn/hutool/core/comparator/package-info.java",
                "new file mode 100644",
                "index 000000000..bda472fa2",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/comparator/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u0090\u0084\u00e7\u00a7\u008d\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e5\u0099\u00a8\u00ef\u00bc\u0088Comparator\u00ef\u00bc\u0089\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e5\u0092\u008c\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.comparator;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java b/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java",
                "index 21a248d08..fea2b84fa 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java",
                "@@ -26,3 +26,3 @@ import cn.hutool.core.util.StrUtil;",
                "  */",
                "-public final class Convert {",
                "+public class Convert {",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/impl/package-info.java b/hutool-core/src/main/java/cn/hutool/core/convert/impl/package-info.java",
                "new file mode 100644",
                "index 000000000..18f567b06",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/impl/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u0090\u0084\u00e7\u00a7\u008d\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e7\u009a\u0084\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e7\u00b1\u00bb\u00ef\u00bc\u008c\u00e5\u0085\u00b6\u00e9\u0083\u00bd\u00e4\u00b8\u00baConverter\u00e6\u008e\u00a5\u00e5\u008f\u00a3\u00e7\u009a\u0084\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u00b0\u0086\u00e6\u009c\u00aa\u00e7\u009f\u00a5\u00e7\u009a\u0084Object\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00ba\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.convert.impl;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/package-info.java b/hutool-core/src/main/java/cn/hutool/core/convert/package-info.java",
                "new file mode 100644",
                "index 000000000..28f8ee2c5",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e4\u00b8\u0087\u00e8\u0083\u00bd\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u0099\u00a8\u00e4\u00bb\u00a5\u00e5\u008f\u008a\u00e5\u0090\u0084\u00e7\u00a7\u008d\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e7\u009a\u0084\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e7\u00b1\u00bb\u00ef\u00bc\u008c\u00e5\u0085\u00b6\u00e4\u00b8\u00adConvert\u00e4\u00b8\u00ba\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u0099\u00a8\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00ef\u00bc\u008c\u00e6\u008f\u0090\u00e4\u00be\u009b\u00e5\u0090\u0084\u00e7\u00a7\u008dtoXXX\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0092\u008cconvert\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.convert;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/date/format/package-info.java b/hutool-core/src/main/java/cn/hutool/core/date/format/package-info.java",
                "new file mode 100644",
                "index 000000000..cf4868b23",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/date/format/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00ae\u0089\u00e5\u0085\u00a8\u00e7\u009a\u0084\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e7\u009a\u0084\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e5\u008c\u0096\u00e5\u0092\u008c\u00e8\u00a7\u00a3\u00e6\u009e\u0090\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.date.format;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/date/package-info.java b/hutool-core/src/main/java/cn/hutool/core/date/package-info.java",
                "new file mode 100644",
                "index 000000000..7eb924ef6",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/date/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e7\u009a\u0084\u00e6\u00a0\u00b8\u00e5\u00bf\u0083\u00e4\u00b8\u00baDateTime\u00e7\u00b1\u00bb\u00ef\u00bc\u008cDateUtil\u00e6\u008f\u0090\u00e4\u00be\u009b\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e6\u0093\u008d\u00e4\u00bd\u009c\u00e7\u009a\u0084\u00e5\u0085\u00a5\u00e5\u008f\u00a3",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.date;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/exceptions/package-info.java b/hutool-core/src/main/java/cn/hutool/core/exceptions/package-info.java",
                "new file mode 100644",
                "index 000000000..a2bfa53f3",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/exceptions/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e7\u0089\u00b9\u00e6\u00ae\u008a\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u0090\u008c\u00e6\u0097\u00b6\u00e6\u008f\u0090\u00e4\u00be\u009b\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e5\u00b7\u00a5\u00e5\u0085\u00b7ExceptionUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.exceptions;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/getter/package-info.java b/hutool-core/src/main/java/cn/hutool/core/getter/package-info.java",
                "new file mode 100644",
                "index 000000000..754b27b47",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/getter/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * getXXX\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u009a\u0084\u00e6\u008e\u00a5\u00e5\u008f\u00a3\u00e5\u0092\u008c\u00e6\u008a\u00bd\u00e8\u00b1\u00a1\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.getter;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/file/package-info.java b/hutool-core/src/main/java/cn/hutool/core/io/file/package-info.java",
                "new file mode 100644",
                "index 000000000..41e854d49",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/file/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u00af\u00b9\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00af\u00bb\u00e5\u0086\u0099\u00e7\u009a\u0084\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e3\u0080\u0081\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e3\u0080\u0081\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e3\u0080\u0081\u00e8\u00a1\u008c\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e7\u00ad\u0089",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.io.file;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/package-info.java b/hutool-core/src/main/java/cn/hutool/core/io/package-info.java",
                "new file mode 100644",
                "index 000000000..4e046be11",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * IO\u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00e5\u0092\u008c\u00e5\u00b7\u00a5\u00e5\u0085\u00b7\u00e7\u00b1\u00bb\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00acInputstream\u00e5\u0092\u008cOutputStream\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e7\u00b1\u00bb\u00ef\u00bc\u008c\u00e5\u00b7\u00a5\u00e5\u0085\u00b7\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e6\u00b5\u0081\u00e5\u00b7\u00a5\u00e5\u0085\u00b7IoUtil\u00e3\u0080\u0081\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00b7\u00a5\u00e5\u0085\u00b7FileUtil\u00e5\u0092\u008cBuffer\u00e5\u00b7\u00a5\u00e5\u0085\u00b7BufferUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.io;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/resource/package-info.java b/hutool-core/src/main/java/cn/hutool/core/io/resource/package-info.java",
                "new file mode 100644",
                "index 000000000..e5281a662",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/resource/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e9\u0092\u0088\u00e5\u00af\u00b9ClassPath\u00e5\u0092\u008c\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u00ad\u00e8\u00b5\u0084\u00e6\u00ba\u0090\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e7\u009a\u0084\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e4\u00b8\u00bb\u00e8\u00a6\u0081\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00e4\u00b8\u00ba\u00e5\u00b7\u00a5\u00e5\u0085\u00b7\u00e7\u00b1\u00bbResourceUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.io.resource;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/watch/package-info.java b/hutool-core/src/main/java/cn/hutool/core/io/watch/package-info.java",
                "new file mode 100644",
                "index 000000000..be2839ca9",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/watch/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u009f\u00ba\u00e4\u00ba\u008eJDK7+ WatchService\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0092\u008c\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e7\u009b\u0091\u00e5\u0090\u00ac\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e5\u00a4\u009a\u00e7\u00ba\u00a7\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.io.watch;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/watch/watchers/package-info.java b/hutool-core/src/main/java/cn/hutool/core/io/watch/watchers/package-info.java",
                "new file mode 100644",
                "index 000000000..066908057",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/watch/watchers/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e7\u009b\u0091\u00e5\u0090\u00ac\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e8\u00a7\u0082\u00e5\u00af\u009f\u00e8\u0080\u0085\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e7\u00b1\u00bb\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e5\u00bb\u00b6\u00e8\u00bf\u009f\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e3\u0080\u0081\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e9\u0093\u00be\u00e7\u00ad\u0089",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.io.watch.watchers;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/copier/package-info.java b/hutool-core/src/main/java/cn/hutool/core/lang/copier/package-info.java",
                "new file mode 100644",
                "index 000000000..1e37fc7e5",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/copier/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e6\u008a\u00bd\u00e8\u00b1\u00a1\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00ef\u00bc\u008c\u00e9\u0080\u009a\u00e8\u00bf\u0087\u00e6\u008a\u00bd\u00e8\u00b1\u00a1\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e3\u0080\u0081\u00e6\u00b5\u0081\u00e3\u0080\u0081Buffer\u00e4\u00b9\u008b\u00e9\u0097\u00b4\u00e7\u009a\u0084\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.lang.copier;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/loader/package-info.java b/hutool-core/src/main/java/cn/hutool/core/lang/loader/package-info.java",
                "new file mode 100644",
                "index 000000000..4a44ecca3",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/loader/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u008a\u00a0\u00e8\u00bd\u00bd\u00e5\u0099\u00a8\u00e7\u009a\u0084\u00e6\u008a\u00bd\u00e8\u00b1\u00a1\u00e6\u008e\u00a5\u00e5\u008f\u00a3\u00e5\u0092\u008c\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e6\u0087\u0092\u00e5\u008a\u00a0\u00e8\u00bd\u00bd\u00e7\u009a\u0084\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e7\u00ad\u0089",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.lang.loader;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/mutable/package-info.java b/hutool-core/src/main/java/cn/hutool/core/lang/mutable/package-info.java",
                "new file mode 100644",
                "index 000000000..cf41c7dab",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/mutable/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e5\u008f\u00af\u00e5\u008f\u0098\u00e5\u0080\u00bc\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u009a\u0084\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u00b0\u0081\u00e8\u00a3\u0085int\u00e3\u0080\u0081long\u00e7\u00ad\u0089\u00e4\u00b8\u008d\u00e5\u008f\u00af\u00e5\u008f\u0098\u00e5\u0080\u00bc\u00ef\u00bc\u008c\u00e4\u00bd\u00bf\u00e5\u0085\u00b6\u00e5\u008f\u00af\u00e5\u008f\u0098",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.lang.mutable;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/package-info.java b/hutool-core/src/main/java/cn/hutool/core/lang/package-info.java",
                "new file mode 100644",
                "index 000000000..498689211",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e8\u00af\u00ad\u00e8\u00a8\u0080\u00e7\u0089\u00b9\u00e6\u0080\u00a7\u00e5\u008c\u0085\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e5\u00a4\u00a7\u00e9\u0087\u008f\u00e4\u00be\u00bf\u00e6\u008d\u00b7\u00e7\u009a\u0084\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e7\u00bb\u0093\u00e6\u009e\u0084\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082\u00e9\u00aa\u008c\u00e8\u00af\u0081\u00e5\u0099\u00a8Validator\u00ef\u00bc\u008c\u00e5\u0088\u0086\u00e5\u00b8\u0083\u00e5\u00bc\u008fID\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e5\u0099\u00a8Snowflake\u00e7\u00ad\u0089",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.lang;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/map/package-info.java b/hutool-core/src/main/java/cn/hutool/core/map/package-info.java",
                "new file mode 100644",
                "index 000000000..d74c8b484",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/map/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Map\u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e6\u008f\u0090\u00e4\u00be\u009b\u00e7\u0089\u00b9\u00e6\u00ae\u008aMap\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e4\u00bb\u00a5\u00e5\u008f\u008aMap\u00e5\u00b7\u00a5\u00e5\u0085\u00b7MapUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.map;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/math/package-info.java b/hutool-core/src/main/java/cn/hutool/core/math/package-info.java",
                "new file mode 100644",
                "index 000000000..4d5784f49",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/math/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e6\u0095\u00b0\u00e5\u00ad\u00a6\u00e8\u00ae\u00a1\u00e7\u00ae\u0097\u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e6\u008e\u0092\u00e5\u0088\u0097\u00e7\u00bb\u0084\u00e5\u0090\u0088\u00e7\u00ad\u0089\u00ef\u00bc\u008c\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00e4\u00b8\u00baMathUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.math;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/text/csv/package-info.java b/hutool-core/src/main/java/cn/hutool/core/text/csv/package-info.java",
                "new file mode 100644",
                "index 000000000..c787e5773",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/text/csv/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u008f\u0090\u00e4\u00be\u009bCSV\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00af\u00bb\u00e5\u0086\u0099\u00e7\u009a\u0084\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00e4\u00b8\u00baCsvUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.text.csv;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/text/package-info.java b/hutool-core/src/main/java/cn/hutool/core/text/package-info.java",
                "new file mode 100644",
                "index 000000000..bde5edb79",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/text/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e6\u0096\u0087\u00e6\u009c\u00ac\u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e6\u0093\u008d\u00e4\u00bd\u009c\u00e7\u009a\u0084\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e8\u00bf\u0098\u00e5\u008c\u0085\u00e6\u008b\u00acUnicode\u00e5\u00b7\u00a5\u00e5\u0085\u00b7UnicodeUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.text;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/thread/package-info.java b/hutool-core/src/main/java/cn/hutool/core/thread/package-info.java",
                "new file mode 100644",
                "index 000000000..aefac6bd0",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/thread/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u008f\u008a\u00e9\u00ab\u0098\u00e5\u00b9\u00b6\u00e5\u008f\u0091\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00e4\u00b8\u00baThreadUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.thread;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/package-info.java b/hutool-core/src/main/java/cn/hutool/core/util/package-info.java",
                "new file mode 100644",
                "index 000000000..965eb9b83",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e5\u0090\u0084\u00e7\u00a7\u008d\u00e5\u00b7\u00a5\u00e5\u0085\u00b7\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00ef\u00bc\u008c\u00e6\u008c\u0089\u00e7\u0085\u00a7\u00e5\u00bd\u0092\u00e7\u00b1\u00bb\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00e4\u00b8\u00baXXXUtil\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e5\u00b7\u00a5\u00e5\u0085\u00b7StrUtil\u00e7\u00ad\u0089",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.util;",
                "\\ No newline at end of file",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/listener/package-info.java b/hutool-cron/src/main/java/cn/hutool/cron/listener/package-info.java",
                "new file mode 100644",
                "index 000000000..b07128c39",
                "--- /dev/null",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/listener/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u00ae\u009a\u00e6\u0097\u00b6\u00e4\u00bb\u00bb\u00e5\u008a\u00a1\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e7\u009b\u0091\u00e5\u0090\u00ac\u00e6\u008e\u00a5\u00e5\u008f\u00a3\u00e5\u008f\u008a\u00e9\u0083\u00a8\u00e5\u0088\u0086\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.cron.listener;",
                "\\ No newline at end of file",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/package-info.java b/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/package-info.java",
                "new file mode 100644",
                "index 000000000..4288a1029",
                "--- /dev/null",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u00ae\u009a\u00e6\u0097\u00b6\u00e4\u00bb\u00bb\u00e5\u008a\u00a1\u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e5\u0086\u0085\u00e9\u0083\u00a8\u00e4\u00bd\u00bf\u00e7\u0094\u00a8",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.cron.pattern.matcher;",
                "\\ No newline at end of file",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/pattern/package-info.java b/hutool-cron/src/main/java/cn/hutool/cron/pattern/package-info.java",
                "new file mode 100644",
                "index 000000000..e83b6e745",
                "--- /dev/null",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/pattern/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u00ae\u009a\u00e6\u0097\u00b6\u00e4\u00bb\u00bb\u00e5\u008a\u00a1\u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00e8\u00a7\u00a3\u00e6\u009e\u0090\u00ef\u00bc\u008c\u00e6\u00a0\u00b8\u00e5\u00bf\u0083\u00e4\u00b8\u00baCronPattern",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.cron.pattern;",
                "\\ No newline at end of file",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/pattern/parser/package-info.java b/hutool-cron/src/main/java/cn/hutool/cron/pattern/parser/package-info.java",
                "new file mode 100644",
                "index 000000000..fff0b12f7",
                "--- /dev/null",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/pattern/parser/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u00ae\u009a\u00e6\u0097\u00b6\u00e4\u00bb\u00bb\u00e5\u008a\u00a1\u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00e8\u00a7\u00a3\u00e6\u009e\u0090\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e5\u0086\u0085\u00e9\u0083\u00a8\u00e4\u00bd\u00bf\u00e7\u0094\u00a8",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.cron.pattern.parser;",
                "\\ No newline at end of file",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/task/package-info.java b/hutool-cron/src/main/java/cn/hutool/cron/task/package-info.java",
                "new file mode 100644",
                "index 000000000..9b3ec08d0",
                "--- /dev/null",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/task/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u00ae\u009a\u00e6\u0097\u00b6\u00e4\u00bb\u00bb\u00e5\u008a\u00a1\u00e4\u00b8\u00ad\u00e4\u00bd\u009c\u00e4\u00b8\u009a\u00e7\u009a\u0084\u00e6\u008a\u00bd\u00e8\u00b1\u00a1\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00e5\u0092\u008c\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00acRunnable\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e5\u0092\u008c\u00e5\u008f\u008d\u00e5\u00b0\u0084\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.cron.task;",
                "\\ No newline at end of file",
                "diff --git a/hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/package-info.java b/hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/package-info.java",
                "new file mode 100644",
                "index 000000000..cf3e90511",
                "--- /dev/null",
                "+++ b/hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e9\u009d\u009e\u00e5\u00af\u00b9\u00e7\u00a7\u00b0\u00e5\u008a\u00a0\u00e5\u00af\u0086\u00e7\u009a\u0084\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00acRSA\u00e7\u00ad\u0089",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.crypto.asymmetric;",
                "\\ No newline at end of file",
                "diff --git a/hutool-crypto/src/main/java/cn/hutool/crypto/digest/package-info.java b/hutool-crypto/src/main/java/cn/hutool/crypto/digest/package-info.java",
                "new file mode 100644",
                "index 000000000..09bd2b442",
                "--- /dev/null",
                "+++ b/hutool-crypto/src/main/java/cn/hutool/crypto/digest/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u0091\u0098\u00e8\u00a6\u0081\u00e5\u008a\u00a0\u00e5\u00af\u0086\u00e7\u00ae\u0097\u00e6\u00b3\u0095\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00ef\u00bc\u008c\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00e4\u00b8\u00baDigestUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.crypto.digest;",
                "\\ No newline at end of file",
                "diff --git a/hutool-crypto/src/main/java/cn/hutool/crypto/package-info.java b/hutool-crypto/src/main/java/cn/hutool/crypto/package-info.java",
                "index 5b4d819a1..746bb5b2f 100644",
                "--- a/hutool-crypto/src/main/java/cn/hutool/crypto/package-info.java",
                "+++ b/hutool-crypto/src/main/java/cn/hutool/crypto/package-info.java",
                "@@ -1,3 +1,3 @@",
                " /**",
                "- * \u00e5\u008a\u00a0\u00e5\u00af\u0086\u00e8\u00a7\u00a3\u00e5\u00af\u0086\u00e6\u00a8\u00a1\u00e5\u009d\u0097\u00ef\u00bc\u008c\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e4\u00ba\u0086\u00e5\u00af\u00b9JDK\u00e4\u00b8\u00ad\u00e5\u008a\u00a0\u00e5\u00af\u0086\u00e8\u00a7\u00a3\u00e5\u00af\u0086\u00e7\u00ae\u0097\u00e6\u00b3\u0095\u00e7\u009a\u0084\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e4\u00ba\u0086\u00ef\u00bc\u009a<br>",
                "+ * \u00e5\u008a\u00a0\u00e5\u00af\u0086\u00e8\u00a7\u00a3\u00e5\u00af\u0086\u00e6\u00a8\u00a1\u00e5\u009d\u0097\u00ef\u00bc\u008c\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e4\u00ba\u0086\u00e5\u00af\u00b9JDK\u00e4\u00b8\u00ad\u00e5\u008a\u00a0\u00e5\u00af\u0086\u00e8\u00a7\u00a3\u00e5\u00af\u0086\u00e7\u00ae\u0097\u00e6\u00b3\u0095\u00e7\u009a\u0084\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00e4\u00b8\u00baSecureUtil\u00ef\u00bc\u008c\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e4\u00ba\u0086\u00ef\u00bc\u009a",
                "  * ",
                "diff --git a/hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/package-info.java b/hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/package-info.java",
                "new file mode 100644",
                "index 000000000..cdead5628",
                "--- /dev/null",
                "+++ b/hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u00af\u00b9\u00e7\u00a7\u00b0\u00e5\u008a\u00a0\u00e5\u00af\u0086\u00e7\u00ae\u0097\u00e6\u00b3\u0095\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00acAES\u00e3\u0080\u0081DES\u00e3\u0080\u0081DESede\u00e7\u00ad\u0089",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.crypto.symmetric;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/dialect/impl/package-info.java b/hutool-db/src/main/java/cn/hutool/db/dialect/impl/package-info.java",
                "new file mode 100644",
                "index 000000000..2e852a7cb",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/dialect/impl/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e6\u0096\u00b9\u00e8\u00a8\u0080\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00acMySQL\u00e3\u0080\u0081Oracle\u00e3\u0080\u0081PostgreSQL\u00e3\u0080\u0081Sqlite3\u00e3\u0080\u0081H2\u00e3\u0080\u0081SqlServer2012\u00e7\u00ad\u0089",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.dialect.impl;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/dialect/package-info.java b/hutool-db/src/main/java/cn/hutool/db/dialect/package-info.java",
                "new file mode 100644",
                "index 000000000..bdd9b3f48",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/dialect/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e6\u0096\u00b9\u00e8\u00a8\u0080\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e6\u0096\u00b9\u00e8\u00a8\u0080\u00e4\u00bb\u00a5\u00e5\u008f\u008a\u00e6\u0096\u00b9\u00e8\u00a8\u0080\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e8\u00af\u0086\u00e5\u0088\u00ab\u00e7\u00ad\u0089",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.dialect;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/c3p0/package-info.java b/hutool-db/src/main/java/cn/hutool/db/ds/c3p0/package-info.java",
                "new file mode 100644",
                "index 000000000..a6ca46ba5",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/c3p0/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * C3P0\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.ds.c3p0;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/dbcp/package-info.java b/hutool-db/src/main/java/cn/hutool/db/ds/dbcp/package-info.java",
                "new file mode 100644",
                "index 000000000..d7e81a9c4",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/dbcp/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * DBCP\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.ds.dbcp;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/druid/package-info.java b/hutool-db/src/main/java/cn/hutool/db/ds/druid/package-info.java",
                "new file mode 100644",
                "index 000000000..10d61ae2f",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/druid/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Druid\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.ds.druid;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/hikari/package-info.java b/hutool-db/src/main/java/cn/hutool/db/ds/hikari/package-info.java",
                "new file mode 100644",
                "index 000000000..ac5325c92",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/hikari/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Hikari\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.ds.hikari;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/jndi/package-info.java b/hutool-db/src/main/java/cn/hutool/db/ds/jndi/package-info.java",
                "new file mode 100644",
                "index 000000000..b6340d498",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/jndi/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * JNDI\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.ds.jndi;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/package-info.java b/hutool-db/src/main/java/cn/hutool/db/ds/package-info.java",
                "new file mode 100644",
                "index 000000000..edf4d4ab5",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u00af\u00b9\u00e5\u0090\u0084\u00e7\u00b1\u00bb\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e6\u00b1\u00a0\u00e7\u009a\u0084\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.ds;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/pooled/package-info.java b/hutool-db/src/main/java/cn/hutool/db/ds/pooled/package-info.java",
                "new file mode 100644",
                "index 000000000..a0b1efee5",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/pooled/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Hutool\u00e5\u00af\u00b9\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e6\u00b1\u00a0\u00e7\u009a\u0084\u00e7\u00ae\u0080\u00e5\u008d\u0095\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.ds.pooled;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/simple/package-info.java b/hutool-db/src/main/java/cn/hutool/db/ds/simple/package-info.java",
                "new file mode 100644",
                "index 000000000..959301ed3",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/simple/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * JDBC\u00e4\u00b8\u00adDriverManager\u00e7\u00ae\u0080\u00e6\u0098\u0093\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.ds.simple;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/tomcat/package-info.java b/hutool-db/src/main/java/cn/hutool/db/ds/tomcat/package-info.java",
                "new file mode 100644",
                "index 000000000..892133991",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/tomcat/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Tomcat-Pool\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.ds.tomcat;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/handler/package-info.java b/hutool-db/src/main/java/cn/hutool/db/handler/package-info.java",
                "new file mode 100644",
                "index 000000000..00ef17a50",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/handler/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * JDBC\u00e7\u00bb\u0093\u00e6\u009e\u009c\u00e9\u009b\u0086\u00ef\u00bc\u0088ResultSet\u00ef\u00bc\u0089\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e9\u0080\u009a\u00e8\u00bf\u0087\u00e5\u00ae\u009e\u00e7\u008e\u00b0RsHandler\u00e6\u008e\u00a5\u00e5\u008f\u00a3\u00ef\u00bc\u008c\u00e5\u00b0\u0086ResultSet\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00ba\u00e6\u0088\u0091\u00e4\u00bb\u00ac\u00e6\u0083\u00b3\u00e8\u00a6\u0081\u00e7\u009a\u0084\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.handler;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/meta/MetaUtil.java b/hutool-db/src/main/java/cn/hutool/db/meta/MetaUtil.java",
                "index cda70dc06..1cde63e9a 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/meta/MetaUtil.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/meta/MetaUtil.java",
                "@@ -18,2 +18,8 @@ import cn.hutool.db.Entity;",
                "+/**",
                "+ * \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e5\u0085\u0083\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e4\u00bf\u00a1\u00e6\u0081\u00af\u00e5\u00b7\u00a5\u00e5\u0085\u00b7\u00e7\u00b1\u00bb",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                " public class MetaUtil {",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/meta/TableType.java b/hutool-db/src/main/java/cn/hutool/db/meta/TableType.java",
                "index c7380d324..84d231325 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/meta/TableType.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/meta/TableType.java",
                "@@ -17,2 +17,3 @@ public enum TableType {",
                " \tprivate String value;",
                "+\t",
                " \t/**",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/meta/package-info.java b/hutool-db/src/main/java/cn/hutool/db/meta/package-info.java",
                "new file mode 100644",
                "index 000000000..e4e1ff0d5",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/meta/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * JDBC\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e8\u00a1\u00a8\u00e5\u0085\u0083\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e4\u00bf\u00a1\u00e6\u0081\u00af\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e8\u00a1\u00a8\u00e7\u00bb\u0093\u00e6\u009e\u0084\u00e3\u0080\u0081\u00e5\u0088\u0097\u00e4\u00bf\u00a1\u00e6\u0081\u00af\u00e7\u009a\u0084\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00e4\u00b8\u00baMetaUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.meta;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/nosql/mongo/package-info.java b/hutool-db/src/main/java/cn/hutool/db/nosql/mongo/package-info.java",
                "new file mode 100644",
                "index 000000000..8240bfdaa",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/nosql/mongo/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * MongoDB\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e6\u0093\u008d\u00e4\u00bd\u009c\u00e7\u009a\u0084\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.nosql.mongo;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/nosql/package-info.java b/hutool-db/src/main/java/cn/hutool/db/nosql/package-info.java",
                "new file mode 100644",
                "index 000000000..6298aad69",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/nosql/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * NoSQL\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00acRedis\u00e5\u0092\u008cMongoDB\u00e7\u00ad\u0089\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e6\u0093\u008d\u00e4\u00bd\u009c\u00e7\u009a\u0084\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.nosql;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/nosql/redis/package-info.java b/hutool-db/src/main/java/cn/hutool/db/nosql/redis/package-info.java",
                "new file mode 100644",
                "index 000000000..7da112edc",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/nosql/redis/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Redis\u00ef\u00bc\u0088Jedis\u00ef\u00bc\u0089\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e6\u0093\u008d\u00e4\u00bd\u009c\u00e7\u009a\u0084\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.nosql.redis;",
                "\\ No newline at end of file",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/sql/package-info.java b/hutool-db/src/main/java/cn/hutool/db/sql/package-info.java",
                "new file mode 100644",
                "index 000000000..e5c158eba",
                "--- /dev/null",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/sql/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * SQL\u00e8\u00af\u00ad\u00e5\u008f\u00a5\u00e5\u0092\u008cStatement\u00e6\u009e\u0084\u00e5\u00bb\u00ba\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.db.sql;",
                "\\ No newline at end of file",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/mail/package-info.java b/hutool-extra/src/main/java/cn/hutool/extra/mail/package-info.java",
                "new file mode 100644",
                "index 000000000..638a6cd68",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/mail/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e9\u0082\u00ae\u00e4\u00bb\u00b6\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u009f\u00ba\u00e4\u00ba\u008ejavax-mail\u00e5\u00ba\u0093\u00ef\u00bc\u008c\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00e4\u00b8\u00baMailUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.extra.mail;",
                "\\ No newline at end of file",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/qrcode/package-info.java b/hutool-extra/src/main/java/cn/hutool/extra/qrcode/package-info.java",
                "new file mode 100644",
                "index 000000000..75c2592e0",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/qrcode/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e4\u00ba\u008c\u00e7\u00bb\u00b4\u00e7\u00a0\u0081\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u009f\u00ba\u00e4\u00ba\u008ezxing\u00e5\u00ba\u0093\u00ef\u00bc\u008c\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00e4\u00b8\u00baQrCodeUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.extra.qrcode;",
                "\\ No newline at end of file",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/servlet/multipart/package-info.java b/hutool-extra/src/main/java/cn/hutool/extra/servlet/multipart/package-info.java",
                "new file mode 100644",
                "index 000000000..0328d88f6",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/servlet/multipart/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u009f\u00ba\u00e4\u00ba\u008eServlet\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u008a\u00e4\u00bc\u00a0\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.extra.servlet.multipart;",
                "\\ No newline at end of file",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/servlet/package-info.java b/hutool-extra/src/main/java/cn/hutool/extra/servlet/package-info.java",
                "new file mode 100644",
                "index 000000000..389f51b36",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/servlet/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Servlet\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00acServlet\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e3\u0080\u0081\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u008a\u00e4\u00bc\u00a0\u00e3\u0080\u0081Response\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u00ad\u0089\u00ef\u00bc\u008c\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00e4\u00b8\u00baServletUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.extra.servlet;",
                "\\ No newline at end of file",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/ssh/package-info.java b/hutool-extra/src/main/java/cn/hutool/extra/ssh/package-info.java",
                "new file mode 100644",
                "index 000000000..340cdc231",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/ssh/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Jsch\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e7\u00ab\u00af\u00e5\u008f\u00a3\u00e6\u0098\u00a0\u00e5\u00b0\u0084\u00e3\u0080\u0081SFTP\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00e7\u00ad\u0089\u00ef\u00bc\u008c\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00e4\u00b8\u00baJschUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.extra.ssh;",
                "\\ No newline at end of file",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/beetl/package-info.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/beetl/package-info.java",
                "new file mode 100644",
                "index 000000000..44f755a41",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/beetl/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Beetl\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.extra.template.engine.beetl;",
                "\\ No newline at end of file",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/freemarker/package-info.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/freemarker/package-info.java",
                "new file mode 100644",
                "index 000000000..f4ac9bb43",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/freemarker/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Freemarker\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.extra.template.engine.freemarker;",
                "\\ No newline at end of file",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/package-info.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/package-info.java",
                "new file mode 100644",
                "index 000000000..3b82dc5ec",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e7\u00ac\u00ac\u00e4\u00b8\u0089\u00e6\u0096\u00b9\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00bc\u0095\u00e6\u0093\u008e\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.extra.template.engine;",
                "\\ No newline at end of file",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/rythm/package-info.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/rythm/package-info.java",
                "new file mode 100644",
                "index 000000000..b0125d756",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/rythm/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Rythm\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.extra.template.engine.rythm;",
                "\\ No newline at end of file",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/package-info.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/package-info.java",
                "new file mode 100644",
                "index 000000000..933ed31da",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Velocity\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.extra.template.engine.velocity;",
                "\\ No newline at end of file",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/package-info.java b/hutool-extra/src/main/java/cn/hutool/extra/template/package-info.java",
                "index b0e1c687a..1be84ba26 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/template/package-info.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/package-info.java",
                "@@ -1,3 +1,3 @@",
                " /**",
                "- * \u00e7\u00ac\u00ac\u00e4\u00b8\u0089\u00e6\u0096\u00b9\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00bc\u0095\u00e6\u0093\u008e\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * \u00e7\u00ac\u00ac\u00e4\u00b8\u0089\u00e6\u0096\u00b9\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00bc\u0095\u00e6\u0093\u008e\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e6\u008f\u0090\u00e4\u00be\u009b\u00e7\u00bb\u009f\u00e4\u00b8\u0080\u00e7\u009a\u0084\u00e6\u008e\u00a5\u00e5\u008f\u00a3\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e9\u0080\u0082\u00e9\u0085\u008d\u00e7\u00ac\u00ac\u00e4\u00b8\u0089\u00e6\u0096\u00b9\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00bc\u0095\u00e6\u0093\u008e",
                "  * ",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/ssl/package-info.java b/hutool-http/src/main/java/cn/hutool/http/ssl/package-info.java",
                "new file mode 100644",
                "index 000000000..218275077",
                "--- /dev/null",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/ssl/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * SSL\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.http.ssl;",
                "\\ No newline at end of file",
                "diff --git a/hutool-log/src/main/java/cn/hutool/log/dialect/commons/package-info.java b/hutool-log/src/main/java/cn/hutool/log/dialect/commons/package-info.java",
                "new file mode 100644",
                "index 000000000..f0eecb5b8",
                "--- /dev/null",
                "+++ b/hutool-log/src/main/java/cn/hutool/log/dialect/commons/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Apache-Commons-Logging\u00e6\u0097\u00a5\u00e5\u00bf\u0097\u00e5\u00ba\u0093\u00e7\u009a\u0084\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.log.dialect.commons;",
                "\\ No newline at end of file",
                "diff --git a/hutool-log/src/main/java/cn/hutool/log/dialect/console/package-info.java b/hutool-log/src/main/java/cn/hutool/log/dialect/console/package-info.java",
                "new file mode 100644",
                "index 000000000..90529d0b3",
                "--- /dev/null",
                "+++ b/hutool-log/src/main/java/cn/hutool/log/dialect/console/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u008e\u00a7\u00e5\u0088\u00b6\u00e5\u008f\u00b0\u00e8\u00be\u0093\u00e5\u0087\u00ba\u00e7\u009a\u0084\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.log.dialect.console;",
                "\\ No newline at end of file",
                "diff --git a/hutool-log/src/main/java/cn/hutool/log/dialect/jdk/package-info.java b/hutool-log/src/main/java/cn/hutool/log/dialect/jdk/package-info.java",
                "new file mode 100644",
                "index 000000000..7baef091b",
                "--- /dev/null",
                "+++ b/hutool-log/src/main/java/cn/hutool/log/dialect/jdk/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * JDK-Logging\u00e7\u009a\u0084\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.log.dialect.jdk;",
                "\\ No newline at end of file",
                "diff --git a/hutool-log/src/main/java/cn/hutool/log/dialect/log4j/package-info.java b/hutool-log/src/main/java/cn/hutool/log/dialect/log4j/package-info.java",
                "new file mode 100644",
                "index 000000000..bc0525807",
                "--- /dev/null",
                "+++ b/hutool-log/src/main/java/cn/hutool/log/dialect/log4j/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Log4j\u00e7\u009a\u0084\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.log.dialect.log4j;",
                "\\ No newline at end of file",
                "diff --git a/hutool-log/src/main/java/cn/hutool/log/dialect/log4j2/package-info.java b/hutool-log/src/main/java/cn/hutool/log/dialect/log4j2/package-info.java",
                "new file mode 100644",
                "index 000000000..bc42813eb",
                "--- /dev/null",
                "+++ b/hutool-log/src/main/java/cn/hutool/log/dialect/log4j2/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Log4j2\u00e7\u009a\u0084\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.log.dialect.log4j2;",
                "\\ No newline at end of file",
                "diff --git a/hutool-log/src/main/java/cn/hutool/log/dialect/package-info.java b/hutool-log/src/main/java/cn/hutool/log/dialect/package-info.java",
                "new file mode 100644",
                "index 000000000..354a127b9",
                "--- /dev/null",
                "+++ b/hutool-log/src/main/java/cn/hutool/log/dialect/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e7\u00ac\u00ac\u00e4\u00b8\u0089\u00e6\u0096\u00b9\u00e6\u0097\u00a5\u00e5\u00bf\u0097\u00e5\u00ba\u0093\u00e7\u009a\u0084\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.log.dialect;",
                "\\ No newline at end of file",
                "diff --git a/hutool-log/src/main/java/cn/hutool/log/dialect/slf4j/package-info.java b/hutool-log/src/main/java/cn/hutool/log/dialect/slf4j/package-info.java",
                "new file mode 100644",
                "index 000000000..74cf95d17",
                "--- /dev/null",
                "+++ b/hutool-log/src/main/java/cn/hutool/log/dialect/slf4j/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Slf4j\u00e7\u009a\u0084\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.log.dialect.slf4j;",
                "\\ No newline at end of file",
                "diff --git a/hutool-log/src/main/java/cn/hutool/log/dialect/tinylog/package-info.java b/hutool-log/src/main/java/cn/hutool/log/dialect/tinylog/package-info.java",
                "new file mode 100644",
                "index 000000000..e9ed843c9",
                "--- /dev/null",
                "+++ b/hutool-log/src/main/java/cn/hutool/log/dialect/tinylog/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * TinyLog\u00e7\u009a\u0084\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.log.dialect.tinylog;",
                "\\ No newline at end of file",
                "diff --git a/hutool-log/src/main/java/cn/hutool/log/level/package-info.java b/hutool-log/src/main/java/cn/hutool/log/level/package-info.java",
                "new file mode 100644",
                "index 000000000..cc15b0891",
                "--- /dev/null",
                "+++ b/hutool-log/src/main/java/cn/hutool/log/level/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u008c\u0089\u00e7\u0085\u00a7\u00e6\u0097\u00a5\u00e5\u00bf\u0097\u00e7\u00ba\u00a7\u00e5\u0088\u00ab\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e7\u009a\u0084\u00e6\u0097\u00a5\u00e5\u00bf\u0097\u00e6\u0089\u0093\u00e5\u008d\u00b0\u00e6\u008e\u00a5\u00e5\u008f\u00a3\u00e5\u00ae\u009a\u00e4\u00b9\u0089",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.log.level;",
                "\\ No newline at end of file",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/cell/package-info.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/cell/package-info.java",
                "index 39b86f2fe..ca4ab939d 100644",
                "--- a/hutool-poi/src/main/java/cn/hutool/poi/excel/cell/package-info.java",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/cell/package-info.java",
                "@@ -1,6 +1,3 @@",
                " /**",
                "- * Excel\u00e4\u00b8\u00ad\u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc\u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e7\u00b1\u00bb\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00ef\u00bc\u009a",
                "- * <pre>",
                "- * 1. \u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc\u00e5\u0080\u00bc\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "- * </pre>",
                "+ * Excel\u00e4\u00b8\u00ad\u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc\u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e7\u00b1\u00bb\u00ef\u00bc\u008c\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00e4\u00b8\u00baCellUtil",
                "  * @author looly",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/editors/package-info.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/editors/package-info.java",
                "new file mode 100644",
                "index 000000000..3b8de82f9",
                "--- /dev/null",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/editors/package-info.java",
                "@@ -0,0 +1,6 @@",
                "+/**",
                "+ * \u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc\u00e5\u0080\u00bc\u00e7\u00bc\u0096\u00e8\u00be\u0091\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e5\u0086\u0085\u00e9\u0083\u00a8\u00e4\u00bd\u00bf\u00e7\u0094\u00a8",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.poi.excel.editors;",
                "\\ No newline at end of file",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/package-info.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/package-info.java",
                "new file mode 100644",
                "index 000000000..0cd590946",
                "--- /dev/null",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * POI\u00e4\u00b8\u00ad\u00e5\u00af\u00b9Excel\u00e8\u00af\u00bb\u00e5\u0086\u0099\u00e7\u009a\u0084\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00e4\u00b8\u00baExcelUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.poi.excel;",
                "\\ No newline at end of file",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/sax/handler/package-info.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/sax/handler/package-info.java",
                "new file mode 100644",
                "index 000000000..e5ddbe7b3",
                "--- /dev/null",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/sax/handler/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Sax\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e4\u00b8\u00ad\u00e8\u00a1\u008c\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e5\u0099\u00a8\u00e7\u009a\u0084\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e5\u0092\u008c\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.poi.excel.sax.handler;",
                "\\ No newline at end of file",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/sax/package-info.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/sax/package-info.java",
                "new file mode 100644",
                "index 000000000..bdb3cb73c",
                "--- /dev/null",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/sax/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Sax\u00e6\u0096\u00b9\u00e5\u00bc\u008f\u00e6\u0093\u008d\u00e4\u00bd\u009cExcel\u00e6\u0096\u00b9\u00e5\u00bc\u008f\u00e7\u009a\u0084\u00e5\u00b0\u0081\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.poi.excel.sax;",
                "\\ No newline at end of file",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/style/package-info.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/style/package-info.java",
                "new file mode 100644",
                "index 000000000..5e6649094",
                "--- /dev/null",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/style/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Excel\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e5\u0085\u00a5\u00e5\u008f\u00a3\u00e4\u00b8\u00ba\u00ef\u00bc\u009aStyleUtil",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.poi.excel.style;",
                "\\ No newline at end of file",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/exceptions/package-info.java b/hutool-poi/src/main/java/cn/hutool/poi/exceptions/package-info.java",
                "new file mode 100644",
                "index 000000000..41b6465a4",
                "--- /dev/null",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/exceptions/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * POI\u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.poi.exceptions;",
                "\\ No newline at end of file",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/package-info.java b/hutool-poi/src/main/java/cn/hutool/poi/package-info.java",
                "index dec2d7cd1..2faf574e8 100644",
                "--- a/hutool-poi/src/main/java/cn/hutool/poi/package-info.java",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/package-info.java",
                "@@ -1,2 +1,3 @@",
                " /**",
                "+ * POI\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00e5\u00ae\u009e\u00e7\u008e\u00b0<br>",
                "  * Java\u00e9\u0092\u0088\u00e5\u00af\u00b9MS Office\u00e7\u009a\u0084\u00e6\u0093\u008d\u00e4\u00bd\u009c\u00e7\u009a\u0084\u00e5\u00ba\u0093\u00e5\u00b1\u0088\u00e6\u008c\u0087\u00e5\u008f\u00af\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e6\u009c\u0089\u00e5\u0090\u008d\u00e7\u009a\u0084\u00e5\u00b0\u00b1\u00e6\u0098\u00afApache\u00e7\u009a\u0084POI\u00e5\u00ba\u0093\u00e3\u0080\u0082<br>",
                "diff --git a/hutool-setting/src/main/java/cn/hutool/setting/dialect/package-info.java b/hutool-setting/src/main/java/cn/hutool/setting/dialect/package-info.java",
                "new file mode 100644",
                "index 000000000..ea6c645e3",
                "--- /dev/null",
                "+++ b/hutool-setting/src/main/java/cn/hutool/setting/dialect/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e5\u0088\u0086\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082Properties\u00e5\u00b0\u0081\u00e8\u00a3\u0085Props",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.setting.dialect;",
                "\\ No newline at end of file",
                "diff --git a/hutool-setting/src/main/java/cn/hutool/setting/profile/package-info.java b/hutool-setting/src/main/java/cn/hutool/setting/profile/package-info.java",
                "new file mode 100644",
                "index 000000000..79f1ebba5",
                "--- /dev/null",
                "+++ b/hutool-setting/src/main/java/cn/hutool/setting/profile/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e5\u0088\u0086\u00e8\u00a3\u0085\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082Properties\u00e5\u00b0\u0081\u00e8\u00a3\u0085Props",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.setting.profile;",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "hutool-aop/src/main/java/cn/hutool/aop/aspects/package-info.java",
                "hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/bitMap/package-info.java",
                "hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/filter/package-info.java",
                "hutool-cache/src/main/java/cn/hutool/cache/file/package-info.java",
                "hutool-cache/src/main/java/cn/hutool/cache/impl/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/bean/copier/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/bean/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/clone/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/codec/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/collection/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/comparator/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/convert/Convert.java",
                "hutool-core/src/main/java/cn/hutool/core/convert/impl/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/convert/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/date/format/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/date/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/exceptions/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/getter/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/io/file/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/io/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/io/resource/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/io/watch/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/io/watch/watchers/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/lang/copier/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/lang/loader/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/lang/mutable/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/lang/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/map/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/math/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/text/csv/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/text/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/thread/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/util/package-info.java",
                "hutool-cron/src/main/java/cn/hutool/cron/listener/package-info.java",
                "hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/package-info.java",
                "hutool-cron/src/main/java/cn/hutool/cron/pattern/package-info.java",
                "hutool-cron/src/main/java/cn/hutool/cron/pattern/parser/package-info.java",
                "hutool-cron/src/main/java/cn/hutool/cron/task/package-info.java",
                "hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/package-info.java",
                "hutool-crypto/src/main/java/cn/hutool/crypto/digest/package-info.java",
                "hutool-crypto/src/main/java/cn/hutool/crypto/package-info.java",
                "hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/dialect/impl/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/dialect/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/c3p0/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/dbcp/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/druid/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/hikari/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/jndi/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/pooled/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/simple/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/tomcat/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/handler/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/meta/MetaUtil.java",
                "hutool-db/src/main/java/cn/hutool/db/meta/TableType.java",
                "hutool-db/src/main/java/cn/hutool/db/meta/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/nosql/mongo/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/nosql/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/nosql/redis/package-info.java",
                "hutool-db/src/main/java/cn/hutool/db/sql/package-info.java",
                "hutool-extra/src/main/java/cn/hutool/extra/mail/package-info.java",
                "hutool-extra/src/main/java/cn/hutool/extra/qrcode/package-info.java",
                "hutool-extra/src/main/java/cn/hutool/extra/servlet/multipart/package-info.java",
                "hutool-extra/src/main/java/cn/hutool/extra/servlet/package-info.java",
                "hutool-extra/src/main/java/cn/hutool/extra/ssh/package-info.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/beetl/package-info.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/freemarker/package-info.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/package-info.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/rythm/package-info.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/package-info.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/package-info.java",
                "hutool-http/src/main/java/cn/hutool/http/ssl/package-info.java",
                "hutool-log/src/main/java/cn/hutool/log/dialect/commons/package-info.java",
                "hutool-log/src/main/java/cn/hutool/log/dialect/console/package-info.java",
                "hutool-log/src/main/java/cn/hutool/log/dialect/jdk/package-info.java",
                "hutool-log/src/main/java/cn/hutool/log/dialect/log4j/package-info.java",
                "hutool-log/src/main/java/cn/hutool/log/dialect/log4j2/package-info.java",
                "hutool-log/src/main/java/cn/hutool/log/dialect/package-info.java",
                "hutool-log/src/main/java/cn/hutool/log/dialect/slf4j/package-info.java",
                "hutool-log/src/main/java/cn/hutool/log/dialect/tinylog/package-info.java",
                "hutool-log/src/main/java/cn/hutool/log/level/package-info.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/cell/package-info.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/editors/package-info.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/package-info.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/sax/handler/package-info.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/sax/package-info.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/style/package-info.java",
                "hutool-poi/src/main/java/cn/hutool/poi/exceptions/package-info.java",
                "hutool-poi/src/main/java/cn/hutool/poi/package-info.java",
                "hutool-setting/src/main/java/cn/hutool/setting/dialect/package-info.java",
                "hutool-setting/src/main/java/cn/hutool/setting/profile/package-info.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "ce3dfaffd8d88e6fa1b85c95c004bfc313c427c2",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1533310410,
            "hunks": 45,
            "message": "add escape and replacer",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "index 54efd2396..dabe8075d 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "@@ -471,3 +471,3 @@ public class FileUtil {",
                " \t}",
                "-",
                "+\t",
                " \t/**",
                "@@ -943,5 +943,26 @@ public class FileUtil {",
                " \t */",
                "-\tpublic static File copyContent(File src, File dest, boolean isOverride) {",
                "+\tpublic static File copyContent(File src, File dest, boolean isOverride) throws IORuntimeException{",
                " \t\treturn FileCopier.create(src, dest).setCopyContentIfDir(true).setOverride(isOverride).copy();",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u00a4\u008d\u00e5\u0088\u00b6\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095<br>",
                "+\t * \u00e6\u0083\u0085\u00e5\u0086\u00b5\u00e5\u00a6\u0082\u00e4\u00b8\u008b\u00ef\u00bc\u009a",
                "+\t * ",
                "+\t * <pre>",
                "+\t * 1\u00e3\u0080\u0081src\u00e5\u0092\u008cdest\u00e9\u0083\u00bd\u00e4\u00b8\u00ba\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e8\u00ae\u00b2src\u00e4\u00b8\u008b\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u0088\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e5\u00ad\u0090\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u0089\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e5\u0088\u00b0dest\u00e4\u00b8\u008b",
                "+\t * 2\u00e3\u0080\u0081src\u00e5\u0092\u008cdest\u00e9\u0083\u00bd\u00e4\u00b8\u00ba\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e7\u009b\u00b4\u00e6\u008e\u00a5\u00e5\u00a4\u008d\u00e5\u0088\u00b6\u00ef\u00bc\u008c\u00e5\u0090\u008d\u00e5\u00ad\u0097\u00e4\u00b8\u00badest",
                "+\t * 3\u00e3\u0080\u0081src\u00e4\u00b8\u00ba\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008cdest\u00e4\u00b8\u00ba\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e5\u00b0\u0086src\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e5\u0088\u00b0dest\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u008b",
                "+\t * </pre>",
                "+\t * ",
                "+\t * @param src \u00e6\u00ba\u0090\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @param dest \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e4\u00bc\u009a\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00ef\u00bc\u0088\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e3\u0080\u0081\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e9\u0083\u00bd\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00ef\u00bc\u0089",
                "+\t * @param isOverride \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e8\u00a6\u0086\u00e7\u009b\u0096\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @return \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u0088\u0096\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @throws IORuntimeException IO\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * @since 4.1.5",
                "+\t */",
                "+\tpublic static File copyFilesFromDir(File src, File dest, boolean isOverride) throws IORuntimeException{",
                "+\t\treturn FileCopier.create(src, dest).setCopyContentIfDir(true).setOnlyCopyFile(true).setOverride(isOverride).copy();",
                "+\t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/file/FileCopier.java b/hutool-core/src/main/java/cn/hutool/core/io/file/FileCopier.java",
                "index a2c3a4524..aca384925 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/file/FileCopier.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/file/FileCopier.java",
                "@@ -36,2 +36,4 @@ public class FileCopier extends SrcToDestCopier<File, FileCopier>{",
                " \tprivate boolean isCopyContentIfDir;",
                "+\t/** \u00e5\u00bd\u0093\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e6\u009d\u00a5\u00e6\u00ba\u0090\u00e6\u0098\u00af\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u0097\u00b6\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008f\u00aa\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u0080\u008c\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e5\u00ad\u0090\u00e7\u009b\u00ae\u00e5\u00bd\u0095 */",
                "+\tprivate boolean isOnlyCopyFile;",
                "@@ -123,2 +125,23 @@ public class FileCopier extends SrcToDestCopier<File, FileCopier>{",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u00bd\u0093\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e6\u009d\u00a5\u00e6\u00ba\u0090\u00e6\u0098\u00af\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u0097\u00b6\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008f\u00aa\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u0080\u008c\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e5\u00ad\u0090\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * ",
                "+\t * @return \u00e5\u00bd\u0093\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e6\u009d\u00a5\u00e6\u00ba\u0090\u00e6\u0098\u00af\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u0097\u00b6\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008f\u00aa\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u0080\u008c\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e5\u00ad\u0090\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * @since 4.1.5",
                "+\t */",
                "+\tpublic boolean isOnlyCopyFile() {",
                "+\t\treturn isOnlyCopyFile;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e5\u00bd\u0093\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e6\u009d\u00a5\u00e6\u00ba\u0090\u00e6\u0098\u00af\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u0097\u00b6\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008f\u00aa\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u0080\u008c\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e5\u00ad\u0090\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * ",
                "+\t * @param isOnlyCopyFile \u00e5\u00bd\u0093\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e6\u009d\u00a5\u00e6\u00ba\u0090\u00e6\u0098\u00af\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u0097\u00b6\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008f\u00aa\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u0080\u008c\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e5\u00ad\u0090\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * @since 4.1.5",
                "+\t */",
                "+\tpublic FileCopier setOnlyCopyFile(boolean isOnlyCopyFile) {",
                "+\t\tthis.isOnlyCopyFile = isOnlyCopyFile;",
                "+\t\treturn this;",
                "+\t}",
                " \t//-------------------------------------------------------------------------------------------------------- Getters and Setters end",
                "@@ -143,2 +166,4 @@ public class FileCopier extends SrcToDestCopier<File, FileCopier>{",
                " \tpublic File copy() throws IORuntimeException{",
                "+\t\tfinal File src = this.src;",
                "+\t\tfinal File dest = this.dest;",
                " \t\t// check",
                "@@ -154,3 +179,3 @@ public class FileCopier extends SrcToDestCopier<File, FileCopier>{",
                " \t\tif (src.isDirectory()) {// \u00e5\u00a4\u008d\u00e5\u0088\u00b6\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "-\t\t\tif(false == dest.isDirectory()) {",
                "+\t\t\tif(dest.exists() && false == dest.isDirectory()) {",
                " \t\t\t\t//\u00e6\u00ba\u0090\u00e4\u00b8\u00ba\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e4\u00b8\u00ba\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e6\u008a\u009b\u00e5\u0087\u00baIO\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "@@ -193,3 +218,3 @@ public class FileCopier extends SrcToDestCopier<File, FileCopier>{",
                " \t\t\tsrcFile = new File(src, file);",
                "-\t\t\tdestFile = new File(dest, file);",
                "+\t\t\tdestFile = this.isOnlyCopyFile ? dest : new File(dest, file);",
                " \t\t\t// \u00e9\u0080\u0092\u00e5\u00bd\u0092\u00e5\u00a4\u008d\u00e5\u0088\u00b6",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/Pair.java b/hutool-core/src/main/java/cn/hutool/core/lang/Pair.java",
                "new file mode 100644",
                "index 000000000..c3239dc8f",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/Pair.java",
                "@@ -0,0 +1,50 @@",
                "+package cn.hutool.core.lang;",
                "+",
                "+import cn.hutool.core.clone.CloneSupport;",
                "+",
                "+/**",
                "+ * \u00e9\u0094\u00ae\u00e5\u0080\u00bc\u00e5\u00af\u00b9\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u008f\u00aa\u00e8\u0083\u00bd\u00e5\u009c\u00a8\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e6\u0097\u00b6\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\u00e9\u0094\u00ae\u00e5\u0080\u00bc",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ * @param <K> \u00e9\u0094\u00ae\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+ * @param <V> \u00e5\u0080\u00bc\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+ * @since 4.1.5",
                "+ */",
                "+public class Pair<K, V> extends CloneSupport<Pair<K, V>> {",
                "+\t",
                "+\tprivate K key;",
                "+\tprivate V value;",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param key \u00e9\u0094\u00ae",
                "+\t * @param value \u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic Pair(K key, V value) {",
                "+\t\tthis.key = key;",
                "+\t\tthis.value = value;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e9\u0094\u00ae",
                "+\t * @return \u00e9\u0094\u00ae",
                "+\t */",
                "+\tpublic K getKey() {",
                "+\t\treturn this.key;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u0080\u00bc",
                "+\t * @return \u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic V getValue() {",
                "+\t\treturn this.value;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic String toString() {",
                "+\t\treturn \"Pair [key=\" + key + \", value=\" + value + \"]\";",
                "+\t}",
                "+}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/Replacer.java b/hutool-core/src/main/java/cn/hutool/core/lang/Replacer.java",
                "new file mode 100644",
                "index 000000000..2c9e5f4bf",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/Replacer.java",
                "@@ -0,0 +1,21 @@",
                "+package cn.hutool.core.lang;",
                "+",
                "+/**",
                "+ * \u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e5\u0099\u00a8<br>",
                "+ * \u00e9\u0080\u009a\u00e8\u00bf\u0087\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e6\u00ad\u00a4\u00e6\u008e\u00a5\u00e5\u008f\u00a3\u00e5\u00ae\u008c\u00e6\u0088\u0090\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u009a\u0084\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e6\u0093\u008d\u00e4\u00bd\u009c\u00ef\u00bc\u008c\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e4\u00be\u009d\u00e6\u0097\u00a7\u00e4\u00b8\u00ba\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ * @param <T> \u00e8\u00a2\u00ab\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e6\u0093\u008d\u00e4\u00bd\u009c\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+ * @since 4.1.5",
                "+ */",
                "+public interface Replacer<T> {",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e4\u00b8\u00ba\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * ",
                "+\t * @param t \u00e8\u00a2\u00ab\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @return \u00e6\u009b\u00bf\u00e4\u00bb\u00a3\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t */",
                "+\tpublic T replace(T t);",
                "+}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/text/escape/Html4Escape.java b/hutool-core/src/main/java/cn/hutool/core/text/escape/Html4Escape.java",
                "new file mode 100644",
                "index 000000000..cc8968b70",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/text/escape/Html4Escape.java",
                "@@ -0,0 +1,321 @@",
                "+package cn.hutool.core.text.escape;",
                "+",
                "+import cn.hutool.core.text.replacer.LookupReplacer;",
                "+import cn.hutool.core.text.replacer.ReplacerChain;",
                "+",
                "+/**",
                "+ * HTML4\u00e7\u009a\u0084ESCAPE",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+public class Html4Escape extends ReplacerChain {",
                "+",
                "+\tprotected static final String[][] BASIC_ESCAPE = { //",
                "+\t\t\t{ \"\\\"\", \"&quot;\" }, // \" - double-quote",
                "+\t\t\t{ \"&\", \"&amp;\" }, // & - ampersand",
                "+\t\t\t{ \"<\", \"&lt;\" }, // < - less-than",
                "+\t\t\t{ \">\", \"&gt;\" }, // > - greater-than",
                "+\t};",
                "+",
                "+\tprotected static final String[][] ISO8859_1_ESCAPE = { //",
                "+\t\t\t{ \"\\u00A0\", \"&nbsp;\" }, // non-breaking space",
                "+\t\t\t{ \"\\u00A1\", \"&iexcl;\" }, // inverted exclamation mark",
                "+\t\t\t{ \"\\u00A2\", \"&cent;\" }, // cent sign",
                "+\t\t\t{ \"\\u00A3\", \"&pound;\" }, // pound sign",
                "+\t\t\t{ \"\\u00A4\", \"&curren;\" }, // currency sign",
                "+\t\t\t{ \"\\u00A5\", \"&yen;\" }, // yen sign = yuan sign",
                "+\t\t\t{ \"\\u00A6\", \"&brvbar;\" }, // broken bar = broken vertical bar",
                "+\t\t\t{ \"\\u00A7\", \"&sect;\" }, // section sign",
                "+\t\t\t{ \"\\u00A8\", \"&uml;\" }, // diaeresis = spacing diaeresis",
                "+\t\t\t{ \"\\u00A9\", \"&copy;\" }, // \u00ef\u00bf\u00bd - copyright sign",
                "+\t\t\t{ \"\\u00AA\", \"&ordf;\" }, // feminine ordinal indicator",
                "+\t\t\t{ \"\\u00AB\", \"&laquo;\" }, // left-pointing double angle quotation mark = left pointing guillemet",
                "+\t\t\t{ \"\\u00AC\", \"&not;\" }, // not sign",
                "+\t\t\t{ \"\\u00AD\", \"&shy;\" }, // soft hyphen = discretionary hyphen",
                "+\t\t\t{ \"\\u00AE\", \"&reg;\" }, // \u00ef\u00bf\u00bd - registered trademark sign",
                "+\t\t\t{ \"\\u00AF\", \"&macr;\" }, // macron = spacing macron = overline = APL overbar",
                "+\t\t\t{ \"\\u00B0\", \"&deg;\" }, // degree sign",
                "+\t\t\t{ \"\\u00B1\", \"&plusmn;\" }, // plus-minus sign = plus-or-minus sign",
                "+\t\t\t{ \"\\u00B2\", \"&sup2;\" }, // superscript two = superscript digit two = squared",
                "+\t\t\t{ \"\\u00B3\", \"&sup3;\" }, // superscript three = superscript digit three = cubed",
                "+\t\t\t{ \"\\u00B4\", \"&acute;\" }, // acute accent = spacing acute",
                "+\t\t\t{ \"\\u00B5\", \"&micro;\" }, // micro sign",
                "+\t\t\t{ \"\\u00B6\", \"&para;\" }, // pilcrow sign = paragraph sign",
                "+\t\t\t{ \"\\u00B7\", \"&middot;\" }, // middle dot = Georgian comma = Greek middle dot",
                "+\t\t\t{ \"\\u00B8\", \"&cedil;\" }, // cedilla = spacing cedilla",
                "+\t\t\t{ \"\\u00B9\", \"&sup1;\" }, // superscript one = superscript digit one",
                "+\t\t\t{ \"\\u00BA\", \"&ordm;\" }, // masculine ordinal indicator",
                "+\t\t\t{ \"\\u00BB\", \"&raquo;\" }, // right-pointing double angle quotation mark = right pointing guillemet",
                "+\t\t\t{ \"\\u00BC\", \"&frac14;\" }, // vulgar fraction one quarter = fraction one quarter",
                "+\t\t\t{ \"\\u00BD\", \"&frac12;\" }, // vulgar fraction one half = fraction one half",
                "+\t\t\t{ \"\\u00BE\", \"&frac34;\" }, // vulgar fraction three quarters = fraction three quarters",
                "+\t\t\t{ \"\\u00BF\", \"&iquest;\" }, // inverted question mark = turned question mark",
                "+\t\t\t{ \"\\u00C0\", \"&Agrave;\" }, // \u00ef\u00bf\u00bd - uppercase A, grave accent",
                "+\t\t\t{ \"\\u00C1\", \"&Aacute;\" }, // \u00ef\u00bf\u00bd - uppercase A, acute accent",
                "+\t\t\t{ \"\\u00C2\", \"&Acirc;\" }, // \u00ef\u00bf\u00bd - uppercase A, circumflex accent",
                "+\t\t\t{ \"\\u00C3\", \"&Atilde;\" }, // \u00ef\u00bf\u00bd - uppercase A, tilde",
                "+\t\t\t{ \"\\u00C4\", \"&Auml;\" }, // \u00ef\u00bf\u00bd - uppercase A, umlaut",
                "+\t\t\t{ \"\\u00C5\", \"&Aring;\" }, // \u00ef\u00bf\u00bd - uppercase A, ring",
                "+\t\t\t{ \"\\u00C6\", \"&AElig;\" }, // \u00ef\u00bf\u00bd - uppercase AE",
                "+\t\t\t{ \"\\u00C7\", \"&Ccedil;\" }, // \u00ef\u00bf\u00bd - uppercase C, cedilla",
                "+\t\t\t{ \"\\u00C8\", \"&Egrave;\" }, // \u00ef\u00bf\u00bd - uppercase E, grave accent",
                "+\t\t\t{ \"\\u00C9\", \"&Eacute;\" }, // \u00ef\u00bf\u00bd - uppercase E, acute accent",
                "+\t\t\t{ \"\\u00CA\", \"&Ecirc;\" }, // \u00ef\u00bf\u00bd - uppercase E, circumflex accent",
                "+\t\t\t{ \"\\u00CB\", \"&Euml;\" }, // \u00ef\u00bf\u00bd - uppercase E, umlaut",
                "+\t\t\t{ \"\\u00CC\", \"&Igrave;\" }, // \u00ef\u00bf\u00bd - uppercase I, grave accent",
                "+\t\t\t{ \"\\u00CD\", \"&Iacute;\" }, // \u00ef\u00bf\u00bd - uppercase I, acute accent",
                "+\t\t\t{ \"\\u00CE\", \"&Icirc;\" }, // \u00ef\u00bf\u00bd - uppercase I, circumflex accent",
                "+\t\t\t{ \"\\u00CF\", \"&Iuml;\" }, // \u00ef\u00bf\u00bd - uppercase I, umlaut",
                "+\t\t\t{ \"\\u00D0\", \"&ETH;\" }, // \u00ef\u00bf\u00bd - uppercase Eth, Icelandic",
                "+\t\t\t{ \"\\u00D1\", \"&Ntilde;\" }, // \u00ef\u00bf\u00bd - uppercase N, tilde",
                "+\t\t\t{ \"\\u00D2\", \"&Ograve;\" }, // \u00ef\u00bf\u00bd - uppercase O, grave accent",
                "+\t\t\t{ \"\\u00D3\", \"&Oacute;\" }, // \u00ef\u00bf\u00bd - uppercase O, acute accent",
                "+\t\t\t{ \"\\u00D4\", \"&Ocirc;\" }, // \u00ef\u00bf\u00bd - uppercase O, circumflex accent",
                "+\t\t\t{ \"\\u00D5\", \"&Otilde;\" }, // \u00ef\u00bf\u00bd - uppercase O, tilde",
                "+\t\t\t{ \"\\u00D6\", \"&Ouml;\" }, // \u00ef\u00bf\u00bd - uppercase O, umlaut",
                "+\t\t\t{ \"\\u00D7\", \"&times;\" }, // multiplication sign",
                "+\t\t\t{ \"\\u00D8\", \"&Oslash;\" }, // \u00ef\u00bf\u00bd - uppercase O, slash",
                "+\t\t\t{ \"\\u00D9\", \"&Ugrave;\" }, // \u00ef\u00bf\u00bd - uppercase U, grave accent",
                "+\t\t\t{ \"\\u00DA\", \"&Uacute;\" }, // \u00ef\u00bf\u00bd - uppercase U, acute accent",
                "+\t\t\t{ \"\\u00DB\", \"&Ucirc;\" }, // \u00ef\u00bf\u00bd - uppercase U, circumflex accent",
                "+\t\t\t{ \"\\u00DC\", \"&Uuml;\" }, // \u00ef\u00bf\u00bd - uppercase U, umlaut",
                "+\t\t\t{ \"\\u00DD\", \"&Yacute;\" }, // \u00ef\u00bf\u00bd - uppercase Y, acute accent",
                "+\t\t\t{ \"\\u00DE\", \"&THORN;\" }, // \u00ef\u00bf\u00bd - uppercase THORN, Icelandic",
                "+\t\t\t{ \"\\u00DF\", \"&szlig;\" }, // \u00ef\u00bf\u00bd - lowercase sharps, German",
                "+\t\t\t{ \"\\u00E0\", \"&agrave;\" }, // \u00ef\u00bf\u00bd - lowercase a, grave accent",
                "+\t\t\t{ \"\\u00E1\", \"&aacute;\" }, // \u00ef\u00bf\u00bd - lowercase a, acute accent",
                "+\t\t\t{ \"\\u00E2\", \"&acirc;\" }, // \u00ef\u00bf\u00bd - lowercase a, circumflex accent",
                "+\t\t\t{ \"\\u00E3\", \"&atilde;\" }, // \u00ef\u00bf\u00bd - lowercase a, tilde",
                "+\t\t\t{ \"\\u00E4\", \"&auml;\" }, // \u00ef\u00bf\u00bd - lowercase a, umlaut",
                "+\t\t\t{ \"\\u00E5\", \"&aring;\" }, // \u00ef\u00bf\u00bd - lowercase a, ring",
                "+\t\t\t{ \"\\u00E6\", \"&aelig;\" }, // \u00ef\u00bf\u00bd - lowercase ae",
                "+\t\t\t{ \"\\u00E7\", \"&ccedil;\" }, // \u00ef\u00bf\u00bd - lowercase c, cedilla",
                "+\t\t\t{ \"\\u00E8\", \"&egrave;\" }, // \u00ef\u00bf\u00bd - lowercase e, grave accent",
                "+\t\t\t{ \"\\u00E9\", \"&eacute;\" }, // \u00ef\u00bf\u00bd - lowercase e, acute accent",
                "+\t\t\t{ \"\\u00EA\", \"&ecirc;\" }, // \u00ef\u00bf\u00bd - lowercase e, circumflex accent",
                "+\t\t\t{ \"\\u00EB\", \"&euml;\" }, // \u00ef\u00bf\u00bd - lowercase e, umlaut",
                "+\t\t\t{ \"\\u00EC\", \"&igrave;\" }, // \u00ef\u00bf\u00bd - lowercase i, grave accent",
                "+\t\t\t{ \"\\u00ED\", \"&iacute;\" }, // \u00ef\u00bf\u00bd - lowercase i, acute accent",
                "+\t\t\t{ \"\\u00EE\", \"&icirc;\" }, // \u00ef\u00bf\u00bd - lowercase i, circumflex accent",
                "+\t\t\t{ \"\\u00EF\", \"&iuml;\" }, // \u00ef\u00bf\u00bd - lowercase i, umlaut",
                "+\t\t\t{ \"\\u00F0\", \"&eth;\" }, // \u00ef\u00bf\u00bd - lowercase eth, Icelandic",
                "+\t\t\t{ \"\\u00F1\", \"&ntilde;\" }, // \u00ef\u00bf\u00bd - lowercase n, tilde",
                "+\t\t\t{ \"\\u00F2\", \"&ograve;\" }, // \u00ef\u00bf\u00bd - lowercase o, grave accent",
                "+\t\t\t{ \"\\u00F3\", \"&oacute;\" }, // \u00ef\u00bf\u00bd - lowercase o, acute accent",
                "+\t\t\t{ \"\\u00F4\", \"&ocirc;\" }, // \u00ef\u00bf\u00bd - lowercase o, circumflex accent",
                "+\t\t\t{ \"\\u00F5\", \"&otilde;\" }, // \u00ef\u00bf\u00bd - lowercase o, tilde",
                "+\t\t\t{ \"\\u00F6\", \"&ouml;\" }, // \u00ef\u00bf\u00bd - lowercase o, umlaut",
                "+\t\t\t{ \"\\u00F7\", \"&divide;\" }, // division sign",
                "+\t\t\t{ \"\\u00F8\", \"&oslash;\" }, // \u00ef\u00bf\u00bd - lowercase o, slash",
                "+\t\t\t{ \"\\u00F9\", \"&ugrave;\" }, // \u00ef\u00bf\u00bd - lowercase u, grave accent",
                "+\t\t\t{ \"\\u00FA\", \"&uacute;\" }, // \u00ef\u00bf\u00bd - lowercase u, acute accent",
                "+\t\t\t{ \"\\u00FB\", \"&ucirc;\" }, // \u00ef\u00bf\u00bd - lowercase u, circumflex accent",
                "+\t\t\t{ \"\\u00FC\", \"&uuml;\" }, // \u00ef\u00bf\u00bd - lowercase u, umlaut",
                "+\t\t\t{ \"\\u00FD\", \"&yacute;\" }, // \u00ef\u00bf\u00bd - lowercase y, acute accent",
                "+\t\t\t{ \"\\u00FE\", \"&thorn;\" }, // \u00ef\u00bf\u00bd - lowercase thorn, Icelandic",
                "+\t\t\t{ \"\\u00FF\", \"&yuml;\" }, // \u00ef\u00bf\u00bd - lowercase y, umlaut",
                "+\t};",
                "+",
                "+\tprotected static final String[][] HTML40_EXTENDED_ESCAPE = {",
                "+\t\t\t// <!-- Latin Extended-B -->",
                "+\t\t\t{ \"\\u0192\", \"&fnof;\" }, // latin small f with hook = function= florin, U+0192 ISOtech -->",
                "+\t\t\t// <!-- Greek -->",
                "+\t\t\t{ \"\\u0391\", \"&Alpha;\" }, // greek capital letter alpha, U+0391 -->",
                "+\t\t\t{ \"\\u0392\", \"&Beta;\" }, // greek capital letter beta, U+0392 -->",
                "+\t\t\t{ \"\\u0393\", \"&Gamma;\" }, // greek capital letter gamma,U+0393 ISOgrk3 -->",
                "+\t\t\t{ \"\\u0394\", \"&Delta;\" }, // greek capital letter delta,U+0394 ISOgrk3 -->",
                "+\t\t\t{ \"\\u0395\", \"&Epsilon;\" }, // greek capital letter epsilon, U+0395 -->",
                "+\t\t\t{ \"\\u0396\", \"&Zeta;\" }, // greek capital letter zeta, U+0396 -->",
                "+\t\t\t{ \"\\u0397\", \"&Eta;\" }, // greek capital letter eta, U+0397 -->",
                "+\t\t\t{ \"\\u0398\", \"&Theta;\" }, // greek capital letter theta,U+0398 ISOgrk3 -->",
                "+\t\t\t{ \"\\u0399\", \"&Iota;\" }, // greek capital letter iota, U+0399 -->",
                "+\t\t\t{ \"\\u039A\", \"&Kappa;\" }, // greek capital letter kappa, U+039A -->",
                "+\t\t\t{ \"\\u039B\", \"&Lambda;\" }, // greek capital letter lambda,U+039B ISOgrk3 -->",
                "+\t\t\t{ \"\\u039C\", \"&Mu;\" }, // greek capital letter mu, U+039C -->",
                "+\t\t\t{ \"\\u039D\", \"&Nu;\" }, // greek capital letter nu, U+039D -->",
                "+\t\t\t{ \"\\u039E\", \"&Xi;\" }, // greek capital letter xi, U+039E ISOgrk3 -->",
                "+\t\t\t{ \"\\u039F\", \"&Omicron;\" }, // greek capital letter omicron, U+039F -->",
                "+\t\t\t{ \"\\u03A0\", \"&Pi;\" }, // greek capital letter pi, U+03A0 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03A1\", \"&Rho;\" }, // greek capital letter rho, U+03A1 -->",
                "+\t\t\t// <!-- there is no Sigmaf, and no U+03A2 character either -->",
                "+\t\t\t{ \"\\u03A3\", \"&Sigma;\" }, // greek capital letter sigma,U+03A3 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03A4\", \"&Tau;\" }, // greek capital letter tau, U+03A4 -->",
                "+\t\t\t{ \"\\u03A5\", \"&Upsilon;\" }, // greek capital letter upsilon,U+03A5 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03A6\", \"&Phi;\" }, // greek capital letter phi,U+03A6 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03A7\", \"&Chi;\" }, // greek capital letter chi, U+03A7 -->",
                "+\t\t\t{ \"\\u03A8\", \"&Psi;\" }, // greek capital letter psi,U+03A8 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03A9\", \"&Omega;\" }, // greek capital letter omega,U+03A9 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03B1\", \"&alpha;\" }, // greek small letter alpha,U+03B1 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03B2\", \"&beta;\" }, // greek small letter beta, U+03B2 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03B3\", \"&gamma;\" }, // greek small letter gamma,U+03B3 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03B4\", \"&delta;\" }, // greek small letter delta,U+03B4 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03B5\", \"&epsilon;\" }, // greek small letter epsilon,U+03B5 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03B6\", \"&zeta;\" }, // greek small letter zeta, U+03B6 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03B7\", \"&eta;\" }, // greek small letter eta, U+03B7 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03B8\", \"&theta;\" }, // greek small letter theta,U+03B8 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03B9\", \"&iota;\" }, // greek small letter iota, U+03B9 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03BA\", \"&kappa;\" }, // greek small letter kappa,U+03BA ISOgrk3 -->",
                "+\t\t\t{ \"\\u03BB\", \"&lambda;\" }, // greek small letter lambda,U+03BB ISOgrk3 -->",
                "+\t\t\t{ \"\\u03BC\", \"&mu;\" }, // greek small letter mu, U+03BC ISOgrk3 -->",
                "+\t\t\t{ \"\\u03BD\", \"&nu;\" }, // greek small letter nu, U+03BD ISOgrk3 -->",
                "+\t\t\t{ \"\\u03BE\", \"&xi;\" }, // greek small letter xi, U+03BE ISOgrk3 -->",
                "+\t\t\t{ \"\\u03BF\", \"&omicron;\" }, // greek small letter omicron, U+03BF NEW -->",
                "+\t\t\t{ \"\\u03C0\", \"&pi;\" }, // greek small letter pi, U+03C0 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03C1\", \"&rho;\" }, // greek small letter rho, U+03C1 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03C2\", \"&sigmaf;\" }, // greek small letter final sigma,U+03C2 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03C3\", \"&sigma;\" }, // greek small letter sigma,U+03C3 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03C4\", \"&tau;\" }, // greek small letter tau, U+03C4 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03C5\", \"&upsilon;\" }, // greek small letter upsilon,U+03C5 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03C6\", \"&phi;\" }, // greek small letter phi, U+03C6 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03C7\", \"&chi;\" }, // greek small letter chi, U+03C7 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03C8\", \"&psi;\" }, // greek small letter psi, U+03C8 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03C9\", \"&omega;\" }, // greek small letter omega,U+03C9 ISOgrk3 -->",
                "+\t\t\t{ \"\\u03D1\", \"&thetasym;\" }, // greek small letter theta symbol,U+03D1 NEW -->",
                "+\t\t\t{ \"\\u03D2\", \"&upsih;\" }, // greek upsilon with hook symbol,U+03D2 NEW -->",
                "+\t\t\t{ \"\\u03D6\", \"&piv;\" }, // greek pi symbol, U+03D6 ISOgrk3 -->",
                "+\t\t\t// <!-- General Punctuation -->",
                "+\t\t\t{ \"\\u2022\", \"&bull;\" }, // bullet = black small circle,U+2022 ISOpub -->",
                "+\t\t\t// <!-- bullet is NOT the same as bullet operator, U+2219 -->",
                "+\t\t\t{ \"\\u2026\", \"&hellip;\" }, // horizontal ellipsis = three dot leader,U+2026 ISOpub -->",
                "+\t\t\t{ \"\\u2032\", \"&prime;\" }, // prime = minutes = feet, U+2032 ISOtech -->",
                "+\t\t\t{ \"\\u2033\", \"&Prime;\" }, // double prime = seconds = inches,U+2033 ISOtech -->",
                "+\t\t\t{ \"\\u203E\", \"&oline;\" }, // overline = spacing overscore,U+203E NEW -->",
                "+\t\t\t{ \"\\u2044\", \"&frasl;\" }, // fraction slash, U+2044 NEW -->",
                "+\t\t\t// <!-- Letterlike Symbols -->",
                "+\t\t\t{ \"\\u2118\", \"&weierp;\" }, // script capital P = power set= Weierstrass p, U+2118 ISOamso -->",
                "+\t\t\t{ \"\\u2111\", \"&image;\" }, // blackletter capital I = imaginary part,U+2111 ISOamso -->",
                "+\t\t\t{ \"\\u211C\", \"&real;\" }, // blackletter capital R = real part symbol,U+211C ISOamso -->",
                "+\t\t\t{ \"\\u2122\", \"&trade;\" }, // trade mark sign, U+2122 ISOnum -->",
                "+\t\t\t{ \"\\u2135\", \"&alefsym;\" }, // alef symbol = first transfinite cardinal,U+2135 NEW -->",
                "+\t\t\t// <!-- alef symbol is NOT the same as hebrew letter alef,U+05D0 although the",
                "+\t\t\t// same glyph could be used to depict both characters -->",
                "+\t\t\t// <!-- Arrows -->",
                "+\t\t\t{ \"\\u2190\", \"&larr;\" }, // leftwards arrow, U+2190 ISOnum -->",
                "+\t\t\t{ \"\\u2191\", \"&uarr;\" }, // upwards arrow, U+2191 ISOnum-->",
                "+\t\t\t{ \"\\u2192\", \"&rarr;\" }, // rightwards arrow, U+2192 ISOnum -->",
                "+\t\t\t{ \"\\u2193\", \"&darr;\" }, // downwards arrow, U+2193 ISOnum -->",
                "+\t\t\t{ \"\\u2194\", \"&harr;\" }, // left right arrow, U+2194 ISOamsa -->",
                "+\t\t\t{ \"\\u21B5\", \"&crarr;\" }, // downwards arrow with corner leftwards= carriage return, U+21B5 NEW -->",
                "+\t\t\t{ \"\\u21D0\", \"&lArr;\" }, // leftwards double arrow, U+21D0 ISOtech -->",
                "+\t\t\t// <!-- ISO 10646 does not say that lArr is the same as the 'is implied by'",
                "+\t\t\t// arrow but also does not have any other character for that function.",
                "+\t\t\t// So ? lArr canbe used for 'is implied by' as ISOtech suggests -->",
                "+\t\t\t{ \"\\u21D1\", \"&uArr;\" }, // upwards double arrow, U+21D1 ISOamsa -->",
                "+\t\t\t{ \"\\u21D2\", \"&rArr;\" }, // rightwards double arrow,U+21D2 ISOtech -->",
                "+\t\t\t// <!-- ISO 10646 does not say this is the 'implies' character but does not",
                "+\t\t\t// have another character with this function so ?rArr can be used for",
                "+\t\t\t// 'implies' as ISOtech suggests -->",
                "+\t\t\t{ \"\\u21D3\", \"&dArr;\" }, // downwards double arrow, U+21D3 ISOamsa -->",
                "+\t\t\t{ \"\\u21D4\", \"&hArr;\" }, // left right double arrow,U+21D4 ISOamsa -->",
                "+\t\t\t// <!-- Mathematical Operators -->",
                "+\t\t\t{ \"\\u2200\", \"&forall;\" }, // for all, U+2200 ISOtech -->",
                "+\t\t\t{ \"\\u2202\", \"&part;\" }, // partial differential, U+2202 ISOtech -->",
                "+\t\t\t{ \"\\u2203\", \"&exist;\" }, // there exists, U+2203 ISOtech -->",
                "+\t\t\t{ \"\\u2205\", \"&empty;\" }, // empty set = null set = diameter,U+2205 ISOamso -->",
                "+\t\t\t{ \"\\u2207\", \"&nabla;\" }, // nabla = backward difference,U+2207 ISOtech -->",
                "+\t\t\t{ \"\\u2208\", \"&isin;\" }, // element of, U+2208 ISOtech -->",
                "+\t\t\t{ \"\\u2209\", \"&notin;\" }, // not an element of, U+2209 ISOtech -->",
                "+\t\t\t{ \"\\u220B\", \"&ni;\" }, // contains as member, U+220B ISOtech -->",
                "+\t\t\t// <!-- should there be a more memorable name than 'ni'? -->",
                "+\t\t\t{ \"\\u220F\", \"&prod;\" }, // n-ary product = product sign,U+220F ISOamsb -->",
                "+\t\t\t// <!-- prod is NOT the same character as U+03A0 'greek capital letter pi'",
                "+\t\t\t// though the same glyph might be used for both -->",
                "+\t\t\t{ \"\\u2211\", \"&sum;\" }, // n-ary summation, U+2211 ISOamsb -->",
                "+\t\t\t// <!-- sum is NOT the same character as U+03A3 'greek capital letter sigma'",
                "+\t\t\t// though the same glyph might be used for both -->",
                "+\t\t\t{ \"\\u2212\", \"&minus;\" }, // minus sign, U+2212 ISOtech -->",
                "+\t\t\t{ \"\\u2217\", \"&lowast;\" }, // asterisk operator, U+2217 ISOtech -->",
                "+\t\t\t{ \"\\u221A\", \"&radic;\" }, // square root = radical sign,U+221A ISOtech -->",
                "+\t\t\t{ \"\\u221D\", \"&prop;\" }, // proportional to, U+221D ISOtech -->",
                "+\t\t\t{ \"\\u221E\", \"&infin;\" }, // infinity, U+221E ISOtech -->",
                "+\t\t\t{ \"\\u2220\", \"&ang;\" }, // angle, U+2220 ISOamso -->",
                "+\t\t\t{ \"\\u2227\", \"&and;\" }, // logical and = wedge, U+2227 ISOtech -->",
                "+\t\t\t{ \"\\u2228\", \"&or;\" }, // logical or = vee, U+2228 ISOtech -->",
                "+\t\t\t{ \"\\u2229\", \"&cap;\" }, // intersection = cap, U+2229 ISOtech -->",
                "+\t\t\t{ \"\\u222A\", \"&cup;\" }, // union = cup, U+222A ISOtech -->",
                "+\t\t\t{ \"\\u222B\", \"&int;\" }, // integral, U+222B ISOtech -->",
                "+\t\t\t{ \"\\u2234\", \"&there4;\" }, // therefore, U+2234 ISOtech -->",
                "+\t\t\t{ \"\\u223C\", \"&sim;\" }, // tilde operator = varies with = similar to,U+223C ISOtech -->",
                "+\t\t\t// <!-- tilde operator is NOT the same character as the tilde, U+007E,although",
                "+\t\t\t// the same glyph might be used to represent both -->",
                "+\t\t\t{ \"\\u2245\", \"&cong;\" }, // approximately equal to, U+2245 ISOtech -->",
                "+\t\t\t{ \"\\u2248\", \"&asymp;\" }, // almost equal to = asymptotic to,U+2248 ISOamsr -->",
                "+\t\t\t{ \"\\u2260\", \"&ne;\" }, // not equal to, U+2260 ISOtech -->",
                "+\t\t\t{ \"\\u2261\", \"&equiv;\" }, // identical to, U+2261 ISOtech -->",
                "+\t\t\t{ \"\\u2264\", \"&le;\" }, // less-than or equal to, U+2264 ISOtech -->",
                "+\t\t\t{ \"\\u2265\", \"&ge;\" }, // greater-than or equal to,U+2265 ISOtech -->",
                "+\t\t\t{ \"\\u2282\", \"&sub;\" }, // subset of, U+2282 ISOtech -->",
                "+\t\t\t{ \"\\u2283\", \"&sup;\" }, // superset of, U+2283 ISOtech -->",
                "+\t\t\t// <!-- note that nsup, 'not a superset of, U+2283' is not covered by the",
                "+\t\t\t// Symbol font encoding and is not included. Should it be, for symmetry?",
                "+\t\t\t// It is in ISOamsn --> <!ENTITY nsub\", \"8836\"},",
                "+\t\t\t// not a subset of, U+2284 ISOamsn -->",
                "+\t\t\t{ \"\\u2286\", \"&sube;\" }, // subset of or equal to, U+2286 ISOtech -->",
                "+\t\t\t{ \"\\u2287\", \"&supe;\" }, // superset of or equal to,U+2287 ISOtech -->",
                "+\t\t\t{ \"\\u2295\", \"&oplus;\" }, // circled plus = direct sum,U+2295 ISOamsb -->",
                "+\t\t\t{ \"\\u2297\", \"&otimes;\" }, // circled times = vector product,U+2297 ISOamsb -->",
                "+\t\t\t{ \"\\u22A5\", \"&perp;\" }, // up tack = orthogonal to = perpendicular,U+22A5 ISOtech -->",
                "+\t\t\t{ \"\\u22C5\", \"&sdot;\" }, // dot operator, U+22C5 ISOamsb -->",
                "+\t\t\t// <!-- dot operator is NOT the same character as U+00B7 middle dot -->",
                "+\t\t\t// <!-- Miscellaneous Technical -->",
                "+\t\t\t{ \"\\u2308\", \"&lceil;\" }, // left ceiling = apl upstile,U+2308 ISOamsc -->",
                "+\t\t\t{ \"\\u2309\", \"&rceil;\" }, // right ceiling, U+2309 ISOamsc -->",
                "+\t\t\t{ \"\\u230A\", \"&lfloor;\" }, // left floor = apl downstile,U+230A ISOamsc -->",
                "+\t\t\t{ \"\\u230B\", \"&rfloor;\" }, // right floor, U+230B ISOamsc -->",
                "+\t\t\t{ \"\\u2329\", \"&lang;\" }, // left-pointing angle bracket = bra,U+2329 ISOtech -->",
                "+\t\t\t// <!-- lang is NOT the same character as U+003C 'less than' or U+2039 'single left-pointing angle quotation",
                "+\t\t\t// mark' -->",
                "+\t\t\t{ \"\\u232A\", \"&rang;\" }, // right-pointing angle bracket = ket,U+232A ISOtech -->",
                "+\t\t\t// <!-- rang is NOT the same character as U+003E 'greater than' or U+203A",
                "+\t\t\t// 'single right-pointing angle quotation mark' -->",
                "+\t\t\t// <!-- Geometric Shapes -->",
                "+\t\t\t{ \"\\u25CA\", \"&loz;\" }, // lozenge, U+25CA ISOpub -->",
                "+\t\t\t// <!-- Miscellaneous Symbols -->",
                "+\t\t\t{ \"\\u2660\", \"&spades;\" }, // black spade suit, U+2660 ISOpub -->",
                "+\t\t\t// <!-- black here seems to mean filled as opposed to hollow -->",
                "+\t\t\t{ \"\\u2663\", \"&clubs;\" }, // black club suit = shamrock,U+2663 ISOpub -->",
                "+\t\t\t{ \"\\u2665\", \"&hearts;\" }, // black heart suit = valentine,U+2665 ISOpub -->",
                "+\t\t\t{ \"\\u2666\", \"&diams;\" }, // black diamond suit, U+2666 ISOpub -->",
                "+",
                "+\t\t\t// <!-- Latin Extended-A -->",
                "+\t\t\t{ \"\\u0152\", \"&OElig;\" }, // -- latin capital ligature OE,U+0152 ISOlat2 -->",
                "+\t\t\t{ \"\\u0153\", \"&oelig;\" }, // -- latin small ligature oe, U+0153 ISOlat2 -->",
                "+\t\t\t// <!-- ligature is a misnomer, this is a separate character in some languages -->",
                "+\t\t\t{ \"\\u0160\", \"&Scaron;\" }, // -- latin capital letter S with caron,U+0160 ISOlat2 -->",
                "+\t\t\t{ \"\\u0161\", \"&scaron;\" }, // -- latin small letter s with caron,U+0161 ISOlat2 -->",
                "+\t\t\t{ \"\\u0178\", \"&Yuml;\" }, // -- latin capital letter Y with diaeresis,U+0178 ISOlat2 -->",
                "+\t\t\t// <!-- Spacing Modifier Letters -->",
                "+\t\t\t{ \"\\u02C6\", \"&circ;\" }, // -- modifier letter circumflex accent,U+02C6 ISOpub -->",
                "+\t\t\t{ \"\\u02DC\", \"&tilde;\" }, // small tilde, U+02DC ISOdia -->",
                "+\t\t\t// <!-- General Punctuation -->",
                "+\t\t\t{ \"\\u2002\", \"&ensp;\" }, // en space, U+2002 ISOpub -->",
                "+\t\t\t{ \"\\u2003\", \"&emsp;\" }, // em space, U+2003 ISOpub -->",
                "+\t\t\t{ \"\\u2009\", \"&thinsp;\" }, // thin space, U+2009 ISOpub -->",
                "+\t\t\t{ \"\\u200C\", \"&zwnj;\" }, // zero width non-joiner,U+200C NEW RFC 2070 -->",
                "+\t\t\t{ \"\\u200D\", \"&zwj;\" }, // zero width joiner, U+200D NEW RFC 2070 -->",
                "+\t\t\t{ \"\\u200E\", \"&lrm;\" }, // left-to-right mark, U+200E NEW RFC 2070 -->",
                "+\t\t\t{ \"\\u200F\", \"&rlm;\" }, // right-to-left mark, U+200F NEW RFC 2070 -->",
                "+\t\t\t{ \"\\u2013\", \"&ndash;\" }, // en dash, U+2013 ISOpub -->",
                "+\t\t\t{ \"\\u2014\", \"&mdash;\" }, // em dash, U+2014 ISOpub -->",
                "+\t\t\t{ \"\\u2018\", \"&lsquo;\" }, // left single quotation mark,U+2018 ISOnum -->",
                "+\t\t\t{ \"\\u2019\", \"&rsquo;\" }, // right single quotation mark,U+2019 ISOnum -->",
                "+\t\t\t{ \"\\u201A\", \"&sbquo;\" }, // single low-9 quotation mark, U+201A NEW -->",
                "+\t\t\t{ \"\\u201C\", \"&ldquo;\" }, // left double quotation mark,U+201C ISOnum -->",
                "+\t\t\t{ \"\\u201D\", \"&rdquo;\" }, // right double quotation mark,U+201D ISOnum -->",
                "+\t\t\t{ \"\\u201E\", \"&bdquo;\" }, // double low-9 quotation mark, U+201E NEW -->",
                "+\t\t\t{ \"\\u2020\", \"&dagger;\" }, // dagger, U+2020 ISOpub -->",
                "+\t\t\t{ \"\\u2021\", \"&Dagger;\" }, // double dagger, U+2021 ISOpub -->",
                "+\t\t\t{ \"\\u2030\", \"&permil;\" }, // per mille sign, U+2030 ISOtech -->",
                "+\t\t\t{ \"\\u2039\", \"&lsaquo;\" }, // single left-pointing angle quotation mark,U+2039 ISO proposed -->",
                "+\t\t\t// <!-- lsaquo is proposed but not yet ISO standardized -->",
                "+\t\t\t{ \"\\u203A\", \"&rsaquo;\" }, // single right-pointing angle quotation mark,U+203A ISO proposed -->",
                "+\t\t\t// <!-- rsaquo is proposed but not yet ISO standardized -->",
                "+\t\t\t{ \"\\u20AC\", \"&euro;\" }, // -- euro sign, U+20AC NEW -->",
                "+\t};",
                "+",
                "+\tpublic Html4Escape() {",
                "+\t\taddChain(new LookupReplacer(BASIC_ESCAPE));",
                "+\t\taddChain(new LookupReplacer(ISO8859_1_ESCAPE));",
                "+\t\taddChain(new LookupReplacer(HTML40_EXTENDED_ESCAPE));",
                "+\t}",
                "+}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/text/escape/Html4Unescape.java b/hutool-core/src/main/java/cn/hutool/core/text/escape/Html4Unescape.java",
                "new file mode 100644",
                "index 000000000..dad29c7d8",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/text/escape/Html4Unescape.java",
                "@@ -0,0 +1,24 @@",
                "+package cn.hutool.core.text.escape;",
                "+",
                "+import cn.hutool.core.text.replacer.LookupReplacer;",
                "+import cn.hutool.core.text.replacer.ReplacerChain;",
                "+",
                "+/**",
                "+ * HTML4\u00e7\u009a\u0084UNESCAPE",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+public class Html4Unescape extends ReplacerChain {",
                "+\t",
                "+\tprotected static final String[][] BASIC_UNESCAPE  = InternalEscapeUtil.invert(Html4Escape.BASIC_ESCAPE);",
                "+\tprotected static final String[][] ISO8859_1_UNESCAPE  = InternalEscapeUtil.invert(Html4Escape.ISO8859_1_ESCAPE);",
                "+\tprotected static final String[][] HTML40_EXTENDED_UNESCAPE  = InternalEscapeUtil.invert(Html4Escape.HTML40_EXTENDED_ESCAPE);",
                "+",
                "+\tpublic Html4Unescape() {",
                "+\t\taddChain(new LookupReplacer(BASIC_UNESCAPE));",
                "+\t\taddChain(new LookupReplacer(ISO8859_1_UNESCAPE));",
                "+\t\taddChain(new LookupReplacer(HTML40_EXTENDED_UNESCAPE));",
                "+\t\taddChain(new NumericEntityUnescaper());",
                "+\t}",
                "+}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/text/escape/InternalEscapeUtil.java b/hutool-core/src/main/java/cn/hutool/core/text/escape/InternalEscapeUtil.java",
                "new file mode 100644",
                "index 000000000..4de32aa3c",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/text/escape/InternalEscapeUtil.java",
                "@@ -0,0 +1,24 @@",
                "+package cn.hutool.core.text.escape;",
                "+",
                "+/**",
                "+ * \u00e5\u0086\u0085\u00e9\u0083\u00a8Escape\u00e5\u00b7\u00a5\u00e5\u0085\u00b7\u00e7\u00b1\u00bb",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+class InternalEscapeUtil {",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00b0\u0086\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e4\u00b8\u00ad\u00e7\u009a\u00840\u00e5\u0092\u008c1\u00e4\u00bd\u008d\u00e7\u00bd\u00ae\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00e4\u00ba\u0092\u00e6\u008d\u00a2\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e9\u0094\u00ae\u00e5\u0080\u00bc\u00e8\u00bd\u00ac\u00e6\u008d\u00a2",
                "+\t * ",
                "+\t * @param array String[][] \u00e8\u00a2\u00ab\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e7\u009a\u0084\u00e6\u0095\u00b0\u00e7\u00bb\u0084",
                "+\t * @return String[][] \u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e6\u0095\u00b0\u00e7\u00bb\u0084",
                "+\t */",
                "+\tpublic static String[][] invert(final String[][] array) {",
                "+\t\tfinal String[][] newarray = new String[array.length][2];",
                "+\t\tfor (int i = 0; i < array.length; i++) {",
                "+\t\t\tnewarray[i][0] = array[i][1];",
                "+\t\t\tnewarray[i][1] = array[i][0];",
                "+\t\t}",
                "+\t\treturn newarray;",
                "+\t}",
                "+}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/text/escape/NumericEntityUnescaper.java b/hutool-core/src/main/java/cn/hutool/core/text/escape/NumericEntityUnescaper.java",
                "new file mode 100644",
                "index 000000000..2928ba3a9",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/text/escape/NumericEntityUnescaper.java",
                "@@ -0,0 +1,55 @@",
                "+package cn.hutool.core.text.escape;",
                "+",
                "+import cn.hutool.core.text.StrBuilder;",
                "+import cn.hutool.core.text.replacer.StrReplacer;",
                "+import cn.hutool.core.util.CharUtil;",
                "+",
                "+/**",
                "+ * \u00e5\u00bd\u00a2\u00e5\u00a6\u0082&#39;\u00e7\u009a\u0084\u00e5\u008f\u008d\u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00e5\u0099\u00a8",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+public class NumericEntityUnescaper extends StrReplacer {",
                "+",
                "+\t@Override",
                "+\tprotected int replace(CharSequence str, int pos, StrBuilder out) {",
                "+\t\tfinal int len = str.length();",
                "+\t\t// \u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e4\u00bb\u00a5\u00e7\u00a1\u00ae\u00e4\u00bf\u009d\u00e4\u00bb\u00a5&#\u00e5\u00bc\u0080\u00e5\u00a4\u00b4",
                "+\t\tif (str.charAt(pos) == '&' && pos < len - 2 && str.charAt(pos + 1) == '#') {",
                "+\t\t\tint start = pos + 2;",
                "+\t\t\tboolean isHex = false;",
                "+\t\t\tfinal char firstChar = str.charAt(start);",
                "+\t\t\tif (firstChar == 'x' || firstChar == 'X') {",
                "+\t\t\t\tstart++;",
                "+\t\t\t\tisHex = true;",
                "+\t\t\t}",
                "+",
                "+\t\t\t// \u00e7\u00a1\u00ae\u00e4\u00bf\u009d&#\u00e5\u0090\u008e\u00e8\u00bf\u0098\u00e6\u009c\u0089\u00e6\u0095\u00b0\u00e5\u00ad\u0097",
                "+\t\t\tif (start == len) {",
                "+\t\t\t\treturn 0;",
                "+\t\t\t}",
                "+",
                "+\t\t\tint end = start;",
                "+\t\t\twhile (end < len && CharUtil.isHexChar(str.charAt(end))) {",
                "+\t\t\t\tend++;",
                "+\t\t\t}",
                "+\t\t\tfinal boolean isSemiNext = (end != len) && (str.charAt(end) == ';');",
                "+\t\t\tif (isSemiNext) {",
                "+\t\t\t\tint entityValue;",
                "+\t\t\t\ttry {",
                "+\t\t\t\t\tif (isHex) {",
                "+\t\t\t\t\t\tentityValue = Integer.parseInt(str.subSequence(start, end).toString(), 16);",
                "+\t\t\t\t\t} else {",
                "+\t\t\t\t\t\tentityValue = Integer.parseInt(str.subSequence(start, end).toString(), 10);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t} catch (final NumberFormatException nfe) {",
                "+\t\t\t\t\treturn 0;",
                "+\t\t\t\t}",
                "+\t\t\t\tout.append((char)entityValue);",
                "+\t\t\t\treturn 2 + end - start + (isHex ? 1 : 0) + (isSemiNext ? 1 : 0);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn 0;",
                "+\t}",
                "+}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/text/escape/package-info.java b/hutool-core/src/main/java/cn/hutool/core/text/escape/package-info.java",
                "new file mode 100644",
                "index 000000000..522cb94f6",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/text/escape/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e5\u0090\u0084\u00e7\u00a7\u008d\u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00e5\u0092\u008c\u00e5\u008f\u008d\u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.text.escape;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/text/replacer/LookupReplacer.java b/hutool-core/src/main/java/cn/hutool/core/text/replacer/LookupReplacer.java",
                "new file mode 100644",
                "index 000000000..b918e4ab0",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/text/replacer/LookupReplacer.java",
                "@@ -0,0 +1,73 @@",
                "+package cn.hutool.core.text.replacer;",
                "+",
                "+import java.util.HashMap;",
                "+import java.util.HashSet;",
                "+import java.util.Map;",
                "+import java.util.Set;",
                "+",
                "+import cn.hutool.core.text.StrBuilder;",
                "+",
                "+/**",
                "+ * \u00e6\u009f\u00a5\u00e6\u0089\u00be\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e9\u0080\u009a\u00e8\u00bf\u0087\u00e6\u009f\u00a5\u00e6\u0089\u00be\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u0085\u00b3\u00e9\u0094\u00ae\u00e5\u00ad\u0097\u00ef\u00bc\u008c\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084\u00e5\u0080\u00bc",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.5",
                "+ */",
                "+public class LookupReplacer extends StrReplacer {",
                "+",
                "+\tprivate final Map<String, String> lookupMap;",
                "+\tprivate final Set<Character> prefixSet;",
                "+\tprivate final int minLength;",
                "+\tprivate final int maxLength;",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param lookup \u00e8\u00a2\u00ab\u00e6\u009f\u00a5\u00e6\u0089\u00be\u00e7\u009a\u0084\u00e9\u0094\u00ae\u00e5\u0080\u00bc\u00e5\u00af\u00b9",
                "+\t */",
                "+\tpublic LookupReplacer(String[]... lookup) {",
                "+\t\tthis.lookupMap = new HashMap<String, String>();",
                "+\t\tthis.prefixSet = new HashSet<Character>();",
                "+",
                "+\t\tint minLength = Integer.MAX_VALUE;",
                "+\t\tint maxLength = 0;",
                "+\t\tString key;",
                "+\t\tint keySize;",
                "+\t\tfor (String[] pair : lookup) {",
                "+\t\t\tkey = pair[0];",
                "+\t\t\tlookupMap.put(key, pair[1]);",
                "+\t\t\tthis.prefixSet.add(key.charAt(0));",
                "+\t\t\tkeySize = key.length();",
                "+\t\t\tif (keySize > maxLength) {",
                "+\t\t\t\tmaxLength = keySize;",
                "+\t\t\t}",
                "+\t\t\tif (keySize < minLength) {",
                "+\t\t\t\tminLength = keySize;",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\tthis.maxLength = maxLength;",
                "+\t\tthis.minLength = minLength;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected int replace(CharSequence str, int pos, StrBuilder out) {",
                "+\t\tif (prefixSet.contains(str.charAt(pos))) {",
                "+\t\t\tint max = this.maxLength;",
                "+\t\t\tif (pos + this.maxLength > str.length()) {",
                "+\t\t\t\tmax = str.length() - pos;",
                "+\t\t\t}",
                "+\t\t\tCharSequence subSeq;",
                "+\t\t\tString result;",
                "+\t\t\tfor (int i = max; i >= this.minLength; i--) {",
                "+\t\t\t\tsubSeq = str.subSequence(pos, pos + i);",
                "+\t\t\t\tresult = lookupMap.get(subSeq.toString());",
                "+\t\t\t\tif(null != result) {",
                "+\t\t\t\t\tout.append(result);",
                "+\t\t\t\t\treturn i;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn 0;",
                "+\t}",
                "+",
                "+}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/text/replacer/ReplacerChain.java b/hutool-core/src/main/java/cn/hutool/core/text/replacer/ReplacerChain.java",
                "new file mode 100644",
                "index 000000000..06399694b",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/text/replacer/ReplacerChain.java",
                "@@ -0,0 +1,54 @@",
                "+package cn.hutool.core.text.replacer;",
                "+",
                "+import java.util.Iterator;",
                "+import java.util.LinkedList;",
                "+import java.util.List;",
                "+",
                "+import cn.hutool.core.lang.Chain;",
                "+import cn.hutool.core.text.StrBuilder;",
                "+",
                "+/**",
                "+ * \u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e9\u0093\u00be\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e7\u00bb\u0084\u00e5\u0090\u0088\u00e5\u00a4\u009a\u00e4\u00b8\u00aa\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e9\u0080\u00bb\u00e8\u00be\u0091",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.5",
                "+ */",
                "+public class ReplacerChain extends StrReplacer implements Chain<StrReplacer, ReplacerChain> {",
                "+",
                "+\tprivate List<StrReplacer> replacers = new LinkedList<>();",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param strReplacers \u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e5\u0099\u00a8",
                "+\t */",
                "+\tpublic ReplacerChain(StrReplacer... strReplacers) {",
                "+\t\tfor (StrReplacer strReplacer : strReplacers) {",
                "+\t\t\taddChain(strReplacer);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Iterator<StrReplacer> iterator() {",
                "+\t\treturn replacers.iterator();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic ReplacerChain addChain(StrReplacer element) {",
                "+\t\treplacers.add(element);",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected int replace(CharSequence str, int pos, StrBuilder out) {",
                "+\t\tint consumed = 0;",
                "+\t\tfor (StrReplacer strReplacer : replacers) {",
                "+\t\t\tconsumed = strReplacer.replace(str, pos, out);",
                "+\t\t\tif (0 != consumed) {",
                "+\t\t\t\treturn consumed;",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn consumed;",
                "+\t}",
                "+",
                "+}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/text/replacer/StrReplacer.java b/hutool-core/src/main/java/cn/hutool/core/text/replacer/StrReplacer.java",
                "new file mode 100644",
                "index 000000000..e58d78ffb",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/text/replacer/StrReplacer.java",
                "@@ -0,0 +1,41 @@",
                "+package cn.hutool.core.text.replacer;",
                "+",
                "+import cn.hutool.core.lang.Replacer;",
                "+import cn.hutool.core.text.StrBuilder;",
                "+",
                "+/**",
                "+ * \u00e6\u008a\u00bd\u00e8\u00b1\u00a1\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e7\u00b1\u00bb<br>",
                "+ * \u00e9\u0080\u009a\u00e8\u00bf\u0087\u00e5\u00ae\u009e\u00e7\u008e\u00b0replace\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e5\u00b1\u0080\u00e9\u0083\u00a8\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e9\u0080\u00bb\u00e8\u00be\u0091",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.5",
                "+ */",
                "+public abstract class StrReplacer implements Replacer<CharSequence>{",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u008a\u00bd\u00e8\u00b1\u00a1\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00ef\u00bc\u008c\u00e9\u0080\u009a\u00e8\u00bf\u0087\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\u00e5\u008e\u009f\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e5\u0092\u008c\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e4\u00bd\u008d\u00e7\u00bd\u00ae\u00ef\u00bc\u008c\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e9\u0080\u00bb\u00e8\u00be\u0091\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e6\u0088\u0096\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e9\u0095\u00bf\u00e5\u00ba\u00a6\u00e9\u0083\u00a8\u00e5\u0088\u0086\u00e3\u0080\u0082",
                "+\t * @param str \u00e8\u00a2\u00ab\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @param pos \u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e4\u00bd\u008d\u00e7\u00bd\u00ae",
                "+\t * @param out \u00e8\u00be\u0093\u00e5\u0087\u00ba",
                "+\t * @return \u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e7\u009a\u0084\u00e5\u008e\u009f\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e9\u0095\u00bf\u00e5\u00ba\u00a6\u00ef\u00bc\u008c0\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e8\u00b7\u00b3\u00e8\u00bf\u0087\u00e6\u00ad\u00a4\u00e5\u00ad\u0097\u00e7\u00ac\u00a6",
                "+\t */",
                "+\tprotected abstract int replace(CharSequence str, int pos, StrBuilder out);",
                "+\t",
                "+\t@Override",
                "+\tpublic CharSequence replace(CharSequence t) {",
                "+\t\tfinal int len = t.length();",
                "+\t\tfinal StrBuilder strBuillder = StrBuilder.create(len);",
                "+\t\tint pos = 0;//\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e4\u00bd\u008d\u00e7\u00bd\u00ae",
                "+\t\tint consumed;//\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e8\u00bf\u0087\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e6\u0095\u00b0",
                "+\t\twhile(pos < len) {",
                "+\t\t\tconsumed = replace(t, pos, strBuillder);",
                "+\t\t\tif(0 == consumed) {",
                "+\t\t\t\t//0\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e6\u009c\u00aa\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e6\u0088\u0096\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e4\u00bb\u00bb\u00e4\u00bd\u0095\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00ef\u00bc\u008c\u00e5\u008e\u009f\u00e6\u00a0\u00b7\u00e8\u00be\u0093\u00e5\u0087\u00ba\u00e6\u009c\u00ac\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e5\u00b9\u00b6\u00e4\u00bb\u008e\u00e4\u00b8\u008b\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e7\u00bb\u00a7\u00e7\u00bb\u00ad",
                "+\t\t\t\tstrBuillder.append(t.charAt(pos));",
                "+\t\t\t\tpos++;",
                "+\t\t\t}",
                "+\t\t\tpos += consumed;",
                "+\t\t}",
                "+\t\treturn strBuillder;",
                "+\t}",
                "+}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/text/replacer/package-info.java b/hutool-core/src/main/java/cn/hutool/core/text/replacer/package-info.java",
                "new file mode 100644",
                "index 000000000..af302856b",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/text/replacer/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e6\u0096\u0087\u00e6\u009c\u00ac\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e7\u00b1\u00bb\u00e6\u008a\u00bd\u00e8\u00b1\u00a1\u00e5\u008f\u008a\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.core.text.replacer;",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java",
                "index 053d75aa6..1c1b9c3af 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java",
                "@@ -168,5 +168,21 @@ public class CharUtil {",
                " \t */",
                "-\tpublic static boolean isNumber(final char ch) {",
                "+\tpublic static boolean isNumber(char ch) {",
                " \t\treturn ch >= '0' && ch <= '9';",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba16\u00e8\u00bf\u009b\u00e5\u0088\u00b6\u00e8\u00a7\u0084\u00e8\u008c\u0083\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00ef\u00bc\u008c\u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba\u00e5\u00a6\u0082\u00e4\u00b8\u008b\u00e5\u00ad\u0097\u00e7\u00ac\u00a6",
                "+\t * <pre>",
                "+\t * 1. 0~9",
                "+\t * 2. a~f",
                "+\t * 4. A~F",
                "+\t * </pre>",
                "+\t * ",
                "+\t * @param c \u00e5\u00ad\u0097\u00e7\u00ac\u00a6",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba16\u00e8\u00bf\u009b\u00e5\u0088\u00b6\u00e8\u00a7\u0084\u00e8\u008c\u0083\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6",
                "+\t * @since 4.1.5",
                "+\t */",
                "+\tpublic static boolean isHexChar(char c) {",
                "+\t\treturn isNumber(c) || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F');",
                "+\t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/EscapeUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/EscapeUtil.java",
                "index 198a663ec..5bb0e46b7 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/EscapeUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/EscapeUtil.java",
                "@@ -2,2 +2,5 @@ package cn.hutool.core.util;",
                "+import cn.hutool.core.text.escape.Html4Escape;",
                "+import cn.hutool.core.text.escape.Html4Unescape;",
                "+",
                " /**",
                "@@ -10,3 +13,27 @@ package cn.hutool.core.util;",
                " public class EscapeUtil {",
                "-\t",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00bd\u00ac\u00e4\u00b9\u0089HTML4\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e7\u0089\u00b9\u00e6\u00ae\u008a\u00e5\u00ad\u0097\u00e7\u00ac\u00a6",
                "+\t * ",
                "+\t * @param html HTML\u00e6\u0096\u0087\u00e6\u009c\u00ac",
                "+\t * @return \u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e6\u009c\u00ac",
                "+\t * @since 4.1.5",
                "+\t */",
                "+\tpublic static String escapeHtml4(String html) {",
                "+\t\tHtml4Escape escape = new Html4Escape();",
                "+\t\treturn escape.replace(html).toString();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u008f\u008d\u00e8\u00bd\u00ac\u00e4\u00b9\u0089HTML4\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e7\u0089\u00b9\u00e6\u00ae\u008a\u00e5\u00ad\u0097\u00e7\u00ac\u00a6",
                "+\t * ",
                "+\t * @param html HTML\u00e6\u0096\u0087\u00e6\u009c\u00ac",
                "+\t * @return \u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e6\u009c\u00ac",
                "+\t * @since 4.1.5",
                "+\t */",
                "+\tpublic static String unescapeHtml4(String html) {",
                "+\t\tHtml4Unescape unescape = new Html4Unescape();",
                "+\t\treturn unescape.replace(html).toString();",
                "+\t}",
                "+",
                " \t/**",
                "@@ -14,3 +41,3 @@ public class EscapeUtil {",
                " \t * \u00e8\u00af\u00a5\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e4\u00b8\u008d\u00e4\u00bc\u009a\u00e5\u00af\u00b9 ASCII \u00e5\u00ad\u0097\u00e6\u00af\u008d\u00e5\u0092\u008c\u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00e8\u00bf\u009b\u00e8\u00a1\u008c\u00e7\u00bc\u0096\u00e7\u00a0\u0081\u00ef\u00bc\u008c\u00e4\u00b9\u009f\u00e4\u00b8\u008d\u00e4\u00bc\u009a\u00e5\u00af\u00b9\u00e4\u00b8\u008b\u00e9\u009d\u00a2\u00e8\u00bf\u0099\u00e4\u00ba\u009b ASCII \u00e6\u00a0\u0087\u00e7\u0082\u00b9\u00e7\u00ac\u00a6\u00e5\u008f\u00b7\u00e8\u00bf\u009b\u00e8\u00a1\u008c\u00e7\u00bc\u0096\u00e7\u00a0\u0081\u00ef\u00bc\u009a * @ - _ + . / \u00e3\u0080\u0082\u00e5\u0085\u00b6\u00e4\u00bb\u0096\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e9\u0083\u00bd\u00e4\u00bc\u009a\u00e8\u00a2\u00ab\u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00e5\u00ba\u008f\u00e5\u0088\u0097\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e3\u0080\u0082",
                "-",
                "+\t * ",
                " \t * @param content \u00e8\u00a2\u00ab\u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00e7\u009a\u0084\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "@@ -19,6 +46,6 @@ public class EscapeUtil {",
                " \tpublic static String escape(String content) {",
                "-\t\tif(StrUtil.isBlank(content)) {",
                "+\t\tif (StrUtil.isBlank(content)) {",
                " \t\t\treturn content;",
                " \t\t}",
                "-\t\t",
                "+",
                " \t\tint i;",
                "@@ -34,3 +61,3 @@ public class EscapeUtil {",
                " \t\t\t\ttmp.append(j);",
                "-\t\t\t}else if (j < 256) {",
                "+\t\t\t} else if (j < 256) {",
                " \t\t\t\ttmp.append(\"%\");",
                "@@ -50,2 +77,3 @@ public class EscapeUtil {",
                " \t * Escape\u00e8\u00a7\u00a3\u00e7\u00a0\u0081",
                "+\t * ",
                " \t * @param content \u00e8\u00a2\u00ab\u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00e7\u009a\u0084\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "@@ -54,6 +82,6 @@ public class EscapeUtil {",
                " \tpublic static String unescape(String content) {",
                "-\t\tif(StrUtil.isBlank(content)) {",
                "+\t\tif (StrUtil.isBlank(content)) {",
                " \t\t\treturn content;",
                " \t\t}",
                "-\t\t",
                "+",
                " \t\tStringBuilder tmp = new StringBuilder(content.length());",
                "@@ -85,5 +113,6 @@ public class EscapeUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e5\u00ae\u0089\u00e5\u0085\u00a8\u00e7\u009a\u0084unescape\u00e6\u0096\u0087\u00e6\u009c\u00ac\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e6\u0096\u0087\u00e6\u009c\u00ac\u00e4\u00b8\u008d\u00e6\u0098\u00af\u00e8\u00a2\u00abescape\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e5\u0080\u0099\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u008e\u009f\u00e6\u0096\u0087\u00e3\u0080\u0082",
                "+\t * ",
                " \t * @param content \u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "@@ -95,3 +124,3 @@ public class EscapeUtil {",
                " \t\t} catch (Exception e) {",
                "-\t\t\t//Ignore Exception",
                "+\t\t\t// Ignore Exception",
                " \t\t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
                "index e23c96c2c..226903a81 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
                "@@ -2120,3 +2120,3 @@ public class NumberUtil {",
                " \t\t}",
                "-\t\tif(number.startsWith(\"0x\")) {",
                "+\t\tif(StrUtil.startWithIgnoreCase(number, \"0x\")) {",
                " \t\t\t//0x04\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba16\u00e8\u00bf\u009b\u00e5\u0088\u00b6\u00e6\u0095\u00b0",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java b/hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java",
                "index 5da12b095..fceaf58f7 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java",
                "@@ -12,2 +12,9 @@ import cn.hutool.core.util.StrUtil;",
                " public class HtmlUtil {",
                "+\t",
                "+\tpublic static final String NBSP = StrUtil.HTML_NBSP;",
                "+\tpublic static final String AMP = StrUtil.HTML_AMP;",
                "+\tpublic static final String QUOTE = StrUtil.HTML_QUOTE;",
                "+\tpublic static final String APOS = StrUtil.HTML_APOS;",
                "+\tpublic static final String LT = StrUtil.HTML_LT;",
                "+\tpublic static final String GT = StrUtil.HTML_GT;",
                "@@ -25,3 +32,3 @@ public class HtmlUtil {",
                " \t\tTEXT['\\''] = \"&#039;\".toCharArray(); // \u00e5\u008d\u0095\u00e5\u00bc\u0095\u00e5\u008f\u00b7 ('&apos;' doesn't work - it is not by the w3 specs)",
                "-\t\tTEXT['\"'] = StrUtil.HTML_QUOTE.toCharArray(); // \u00e5\u008f\u008c\u00e5\u00bc\u0095\u00e5\u008f\u00b7",
                "+\t\tTEXT['\"'] = QUOTE.toCharArray(); // \u00e5\u008f\u008c\u00e5\u00bc\u0095\u00e5\u008f\u00b7",
                " \t\tTEXT['&'] = StrUtil.HTML_AMP.toCharArray(); // &\u00e7\u00ac\u00a6",
                "@@ -30,36 +37,18 @@ public class HtmlUtil {",
                " \t}",
                "-",
                "+\t",
                " \t/**",
                "-\t * \u00e5\u009f\u00ba\u00e6\u009c\u00ac\u00e5\u008a\u009f\u00e8\u0083\u00bd\u00ef\u00bc\u009a\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e6\u00a0\u0087\u00e8\u00ae\u00b0\u00e4\u00bb\u00a5\u00e6\u00ad\u00a3\u00e5\u00b8\u00b8\u00e6\u0098\u00be\u00e7\u00a4\u00ba",
                "+\t * \u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00e6\u0096\u0087\u00e6\u009c\u00ac\u00e4\u00b8\u00ad\u00e7\u009a\u0084HTML\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00ba\u00e5\u00ae\u0089\u00e5\u0085\u00a8\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00ef\u00bc\u008c\u00e4\u00bb\u00a5\u00e4\u00b8\u008b\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e8\u00a2\u00ab\u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00ef\u00bc\u009a",
                "+\t * <ul>",
                "+\t * <li>'  \u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e4\u00b8\u00ba &amp;#039; (&amp;apos; doesn't work in HTML4)</li>",
                "+\t * <li>\"  \u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e4\u00b8\u00ba &amp;quot;</li>",
                "+\t * <li>&amp; \u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e4\u00b8\u00ba &amp;amp;</li>",
                "+\t * <li>&lt; \u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e4\u00b8\u00ba &amp;lt;</li>",
                "+\t * <li>&gt; \u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e4\u00b8\u00ba &amp;gt;</li>",
                "+\t * </ul>",
                " \t * ",
                "-\t * @param input \u00e8\u00be\u0093\u00e5\u0085\u00a5\u00e7\u009a\u0084HTML\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "-\t * @return String",
                "-\t * @since 3.2.3",
                "+\t * @param text \u00e8\u00a2\u00ab\u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e6\u009c\u00ac",
                "+\t * @return \u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e6\u009c\u00ac",
                " \t */",
                "-\tpublic static String escape(String input) {",
                "-\t\tif (StrUtil.isBlank(input)) {",
                "-\t\t\treturn input;",
                "-\t\t}",
                "-\t\tfinal StringBuilder filtered = StrUtil.builder(input.length());",
                "-\t\tchar c;",
                "-\t\tfor (int i = 0; i < input.length(); i++) {",
                "-\t\t\tc = input.charAt(i);",
                "-\t\t\tswitch (c) {",
                "-\t\t\tcase '<':",
                "-\t\t\t\tfiltered.append(\"&lt;\");",
                "-\t\t\t\tbreak;",
                "-\t\t\tcase '>':",
                "-\t\t\t\tfiltered.append(\"&gt;\");",
                "-\t\t\t\tbreak;",
                "-\t\t\tcase '\"':",
                "-\t\t\t\tfiltered.append(\"&quot;\");",
                "-\t\t\t\tbreak;",
                "-\t\t\tcase '&':",
                "-\t\t\t\tfiltered.append(\"&amp;\");",
                "-\t\t\t\tbreak;",
                "-\t\t\tdefault:",
                "-\t\t\t\tfiltered.append(c);",
                "-\t\t\t}",
                "-\t\t}",
                "-\t\treturn filtered.toString();",
                "+\tpublic static String escape(String text) {",
                "+\t\treturn encode(text, TEXT);",
                " \t}",
                "@@ -72,3 +61,3 @@ public class HtmlUtil {",
                " \t */",
                "-\tpublic static String restoreEscaped(String htmlStr) {",
                "+\tpublic static String unescape(String htmlStr) {",
                " \t\tif (StrUtil.isBlank(htmlStr)) {",
                "@@ -77,2 +66,3 @@ public class HtmlUtil {",
                " \t\treturn htmlStr.replace(StrUtil.HTML_APOS, \"'\")//",
                "+\t\t\t\t.replace(\"&#039;\", \"'\")//",
                " \t\t\t\t.replace(StrUtil.HTML_LT, \"<\")//",
                "@@ -87,19 +77,2 @@ public class HtmlUtil {",
                "-\t/**",
                "-\t * \u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00e6\u0096\u0087\u00e6\u009c\u00ac\u00e4\u00b8\u00ad\u00e7\u009a\u0084HTML\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00ba\u00e5\u00ae\u0089\u00e5\u0085\u00a8\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00ef\u00bc\u008c\u00e4\u00bb\u00a5\u00e4\u00b8\u008b\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e8\u00a2\u00ab\u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00ef\u00bc\u009a",
                "-\t * <ul>",
                "-\t * <li>' with &amp;#039; (&amp;apos; doesn't work in HTML4)</li>",
                "-\t * <li>\" with &amp;quot;</li>",
                "-\t * <li>&amp; with &amp;amp;</li>",
                "-\t * <li>&lt; with &amp;lt;</li>",
                "-\t * <li>&gt; with &amp;gt;</li>",
                "-\t * </ul>",
                "-\t * ",
                "-\t * @param text \u00e8\u00a2\u00ab\u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e6\u009c\u00ac",
                "-\t * @return \u00e8\u00bd\u00ac\u00e4\u00b9\u0089\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e6\u009c\u00ac",
                "-\t */",
                "-\tpublic static String encode(String text) {",
                "-\t\treturn encode(text, TEXT);",
                "-\t}",
                "-",
                " \t/**",
                "diff --git a/hutool-setting/src/main/java/cn/hutool/setting/Setting.java b/hutool-setting/src/main/java/cn/hutool/setting/Setting.java",
                "index 2e2a2211a..377f5b040 100644",
                "--- a/hutool-setting/src/main/java/cn/hutool/setting/Setting.java",
                "+++ b/hutool-setting/src/main/java/cn/hutool/setting/Setting.java",
                "@@ -50,2 +50,4 @@ public class Setting extends AbsSetting implements Map<String, String> {",
                " \tpublic final static Charset DEFAULT_CHARSET = CharsetUtil.CHARSET_UTF_8;",
                "+\t/** \u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0089\u00a9\u00e5\u00b1\u0095\u00e5\u0090\u008d */",
                "+\tpublic final static String EXT_NAME = \".setting\";",
                "diff --git a/hutool-setting/src/main/java/cn/hutool/setting/SettingUtil.java b/hutool-setting/src/main/java/cn/hutool/setting/SettingUtil.java",
                "new file mode 100644",
                "index 000000000..2403a5661",
                "--- /dev/null",
                "+++ b/hutool-setting/src/main/java/cn/hutool/setting/SettingUtil.java",
                "@@ -0,0 +1,27 @@",
                "+package cn.hutool.setting;",
                "+",
                "+import java.util.Map;",
                "+import java.util.concurrent.ConcurrentHashMap;",
                "+",
                "+public class SettingUtil {",
                "+\t/** \u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e7\u00bc\u0093\u00e5\u00ad\u0098 */",
                "+\tprivate static Map<String, Setting> settingMap = new ConcurrentHashMap<>();",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e7\u008e\u00af\u00e5\u00a2\u0083\u00e4\u00b8\u008b\u00e7\u009a\u0084\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @param name \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u00b2\u00a1\u00e6\u009c\u0089\u00e6\u0089\u00a9\u00e5\u00b1\u0095\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e4\u00b8\u00ba.setting",
                "+\t * @return \u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e7\u008e\u00af\u00e5\u00a2\u0083\u00e4\u00b8\u008b\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t */",
                "+\tpublic static Setting getSetting(String name){",
                "+\t\tSetting setting = settingMap.get(name);",
                "+\t\tif(null == setting){",
                "+\t\t\tString filePath = name;",
                "+\t\t\tif(false == filePath.endsWith(Setting.EXT_NAME)) {",
                "+\t\t\t\tfilePath += Setting.EXT_NAME;",
                "+\t\t\t}",
                "+\t\t\tsetting = new Setting(name, true);",
                "+\t\t\tsettingMap.put(name, setting);",
                "+\t\t}",
                "+\t\treturn setting;",
                "+\t}",
                "+}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/io/file/FileCopier.java",
                "hutool-core/src/main/java/cn/hutool/core/lang/Pair.java",
                "hutool-core/src/main/java/cn/hutool/core/lang/Replacer.java",
                "hutool-core/src/main/java/cn/hutool/core/text/escape/Html4Escape.java",
                "hutool-core/src/main/java/cn/hutool/core/text/escape/Html4Unescape.java",
                "hutool-core/src/main/java/cn/hutool/core/text/escape/InternalEscapeUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/text/escape/NumericEntityUnescaper.java",
                "hutool-core/src/main/java/cn/hutool/core/text/escape/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/text/replacer/LookupReplacer.java",
                "hutool-core/src/main/java/cn/hutool/core/text/replacer/ReplacerChain.java",
                "hutool-core/src/main/java/cn/hutool/core/text/replacer/StrReplacer.java",
                "hutool-core/src/main/java/cn/hutool/core/text/replacer/package-info.java",
                "hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/EscapeUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
                "hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java",
                "hutool-setting/src/main/java/cn/hutool/setting/Setting.java",
                "hutool-setting/src/main/java/cn/hutool/setting/SettingUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "5172ff4e5bf7b368bbee432b66516dc981e1589f",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1535095851,
            "hunks": 0,
            "message": "Merge pull request #153 from MikaGuraNTK/v4-dev \u00e5\u00a2\u009e\u00e5\u008a\u00a0win7 8 8.1 10\u00e5\u0088\u00a4\u00e6\u0096\u00ad",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "153": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 153",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0f2479d16967b3dd47a049efc71263dc1763ca12",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537278799,
            "hunks": 14,
            "message": "add test",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/Singleton.java b/hutool-core/src/main/java/cn/hutool/core/lang/Singleton.java",
                "index f8cc46a17..819949add 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/lang/Singleton.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/Singleton.java",
                "@@ -10,3 +10,5 @@ import cn.hutool.core.util.ReflectUtil;",
                "  * \u00e5\u008d\u0095\u00e4\u00be\u008b\u00e7\u00b1\u00bb<br>",
                "- * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e5\u008d\u0095\u00e4\u00be\u008b\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u009a\u0084\u00e7\u00bb\u009f\u00e4\u00b8\u0080\u00e7\u00ae\u00a1\u00e7\u0090\u0086\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e8\u00b0\u0083\u00e7\u0094\u00a8get\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u00b1\u00a0\u00e4\u00b8\u00ad\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e6\u00ad\u00a4\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u00ad\u00a4\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0096\u00b0\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e8\u00bf\u0094\u00e5\u009b\u009e",
                "+ * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e5\u008d\u0095\u00e4\u00be\u008b\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u009a\u0084\u00e7\u00bb\u009f\u00e4\u00b8\u0080\u00e7\u00ae\u00a1\u00e7\u0090\u0086\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e8\u00b0\u0083\u00e7\u0094\u00a8get\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u00b1\u00a0\u00e4\u00b8\u00ad\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e6\u00ad\u00a4\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u00ad\u00a4\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0096\u00b0\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e8\u00bf\u0094\u00e5\u009b\u009e<br>",
                "+ * \u00e6\u00b3\u00a8\u00e6\u0084\u008f\u00ef\u00bc\u009a\u00e5\u008d\u0095\u00e4\u00be\u008b\u00e9\u0092\u0088\u00e5\u00af\u00b9\u00e7\u009a\u0084\u00e6\u0098\u00af\u00e7\u00b1\u00bb\u00e5\u0092\u008c\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u009b\u00a0\u00e6\u00ad\u00a4get\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e6\u00ac\u00a1\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e6\u0097\u00b6\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e5\u00a7\u008b\u00e7\u00bb\u0088\u00e5\u0094\u00af\u00e4\u00b8\u0080\u00ef\u00bc\u008c\u00e4\u00b9\u009f\u00e5\u00b0\u00b1\u00e6\u0098\u00af\u00e8\u00af\u00b4\u00e5\u00b0\u00b1\u00e7\u00ae\u0097\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e5\u008f\u0098\u00e6\u009b\u00b4\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e7\u009a\u0084\u00e4\u00be\u009d\u00e6\u0097\u00a7\u00e6\u0098\u00af\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e6\u00ac\u00a1\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+ * ",
                "  * @author loolly",
                "@@ -16,5 +18,6 @@ public final class Singleton {",
                " \tprivate static Map<Class<?>, Object> pool = new ConcurrentHashMap<>();",
                "-\t",
                "-\tprivate Singleton() {}",
                "-\t",
                "+",
                "+\tprivate Singleton() {",
                "+\t}",
                "+",
                " \t/**",
                "@@ -22,2 +25,3 @@ public final class Singleton {",
                " \t * \u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e4\u00ba\u008e\u00e6\u00b1\u00a0\u00e4\u00b8\u00ad\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00ef\u00bc\u008c\u00e6\u00af\u008f\u00e6\u00ac\u00a1\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e4\u00b8\u00ba\u00e5\u0090\u008c\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e5\u00af\u00b9\u00e8\u00b1\u00a1<br>",
                "+\t * \u00e6\u00b3\u00a8\u00e6\u0084\u008f\u00ef\u00bc\u009a\u00e5\u008d\u0095\u00e4\u00be\u008b\u00e9\u0092\u0088\u00e5\u00af\u00b9\u00e7\u009a\u0084\u00e6\u0098\u00af\u00e7\u00b1\u00bb\u00e5\u0092\u008c\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u009b\u00a0\u00e6\u00ad\u00a4get\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e6\u00ac\u00a1\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e6\u0097\u00b6\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e5\u00a7\u008b\u00e7\u00bb\u0088\u00e5\u0094\u00af\u00e4\u00b8\u0080\u00ef\u00bc\u008c\u00e4\u00b9\u009f\u00e5\u00b0\u00b1\u00e6\u0098\u00af\u00e8\u00af\u00b4\u00e5\u00b0\u00b1\u00e7\u00ae\u0097\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e5\u008f\u0098\u00e6\u009b\u00b4\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e7\u009a\u0084\u00e4\u00be\u009d\u00e6\u0097\u00a7\u00e6\u0098\u00af\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e6\u00ac\u00a1\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                " \t * ",
                "@@ -31,7 +35,7 @@ public final class Singleton {",
                " \t\tT obj = (T) pool.get(clazz);",
                "-\t\t",
                "-\t\tif(null == obj) {",
                "-\t\t\tsynchronized(Singleton.class) {",
                "+",
                "+\t\tif (null == obj) {",
                "+\t\t\tsynchronized (Singleton.class) {",
                " \t\t\t\tobj = (T) pool.get(clazz);",
                "-\t\t\t\tif(null == obj) {",
                "+\t\t\t\tif (null == obj) {",
                " \t\t\t\t\tobj = ReflectUtil.newInstance(clazz, params);",
                "@@ -41,6 +45,6 @@ public final class Singleton {",
                " \t\t}",
                "-\t\t",
                "+",
                " \t\treturn obj;",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -48,2 +52,3 @@ public final class Singleton {",
                " \t * \u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e4\u00ba\u008e\u00e6\u00b1\u00a0\u00e4\u00b8\u00ad\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00ef\u00bc\u008c\u00e6\u00af\u008f\u00e6\u00ac\u00a1\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e4\u00b8\u00ba\u00e5\u0090\u008c\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e5\u00af\u00b9\u00e8\u00b1\u00a1<br>",
                "+\t * \u00e6\u00b3\u00a8\u00e6\u0084\u008f\u00ef\u00bc\u009a\u00e5\u008d\u0095\u00e4\u00be\u008b\u00e9\u0092\u0088\u00e5\u00af\u00b9\u00e7\u009a\u0084\u00e6\u0098\u00af\u00e7\u00b1\u00bb\u00e5\u0092\u008c\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u009b\u00a0\u00e6\u00ad\u00a4get\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e6\u00ac\u00a1\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e6\u0097\u00b6\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e5\u00a7\u008b\u00e7\u00bb\u0088\u00e5\u0094\u00af\u00e4\u00b8\u0080\u00ef\u00bc\u008c\u00e4\u00b9\u009f\u00e5\u00b0\u00b1\u00e6\u0098\u00af\u00e8\u00af\u00b4\u00e5\u00b0\u00b1\u00e7\u00ae\u0097\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e5\u008f\u0098\u00e6\u009b\u00b4\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e7\u009a\u0084\u00e4\u00be\u009d\u00e6\u0097\u00a7\u00e6\u0098\u00af\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e6\u00ac\u00a1\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                " \t * ",
                "@@ -58,3 +63,3 @@ public final class Singleton {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -68,5 +73,6 @@ public final class Singleton {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e7\u00a7\u00bb\u00e9\u0099\u00a4\u00e6\u008c\u0087\u00e5\u00ae\u009aSingleton\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * ",
                " \t * @param clazz \u00e7\u00b1\u00bb",
                "@@ -76,3 +82,3 @@ public final class Singleton {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/swing/ScreenUtil.java b/hutool-core/src/main/java/cn/hutool/core/swing/ScreenUtil.java",
                "index 8ebc03ea2..136f24eea 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/swing/ScreenUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/swing/ScreenUtil.java",
                "@@ -5,2 +5,4 @@ import java.awt.Rectangle;",
                " import java.awt.Toolkit;",
                "+import java.awt.image.BufferedImage;",
                "+import java.io.File;",
                "@@ -40,2 +42,49 @@ public class ScreenUtil {",
                " \t}",
                "+\t",
                "+\t//-------------------------------------------------------------------------------------------- \u00e6\u0088\u00aa\u00e5\u00b1\u008f",
                "+\t/**",
                "+\t * \u00e6\u0088\u00aa\u00e5\u008f\u0096\u00e5\u0085\u00a8\u00e5\u00b1\u008f",
                "+\t * ",
                "+\t * @param screenRect \u00e6\u0088\u00aa\u00e5\u00b1\u008f\u00e7\u009a\u0084\u00e7\u009f\u00a9\u00e5\u00bd\u00a2\u00e5\u008c\u00ba\u00e5\u009f\u009f",
                "+\t * @return \u00e6\u0088\u00aa\u00e5\u00b1\u008f\u00e7\u009a\u0084\u00e5\u009b\u00be\u00e7\u0089\u0087",
                "+\t * @see RobotUtil#captureScreen()",
                "+\t */",
                "+\tpublic static BufferedImage captureScreen() {",
                "+\t\treturn RobotUtil.captureScreen();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u0088\u00aa\u00e5\u008f\u0096\u00e5\u0085\u00a8\u00e5\u00b1\u008f\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param screenRect \u00e6\u0088\u00aa\u00e5\u00b1\u008f\u00e7\u009a\u0084\u00e7\u009f\u00a9\u00e5\u00bd\u00a2\u00e5\u008c\u00ba\u00e5\u009f\u009f",
                "+\t * @param outFile \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @return \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @see RobotUtil#captureScreen(File)",
                "+\t */",
                "+\tpublic static File captureScreen(File outFile) {",
                "+\t\treturn RobotUtil.captureScreen(outFile);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u0088\u00aa\u00e5\u00b1\u008f",
                "+\t * ",
                "+\t * @param screenRect \u00e6\u0088\u00aa\u00e5\u00b1\u008f\u00e7\u009a\u0084\u00e7\u009f\u00a9\u00e5\u00bd\u00a2\u00e5\u008c\u00ba\u00e5\u009f\u009f",
                "+\t * @return \u00e6\u0088\u00aa\u00e5\u00b1\u008f\u00e7\u009a\u0084\u00e5\u009b\u00be\u00e7\u0089\u0087",
                "+\t * @see RobotUtil#captureScreen(Rectangle)",
                "+\t */",
                "+\tpublic static BufferedImage captureScreen(Rectangle screenRect) {",
                "+\t\treturn RobotUtil.captureScreen(screenRect);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u0088\u00aa\u00e5\u00b1\u008f",
                "+\t * ",
                "+\t * @param screenRect \u00e6\u0088\u00aa\u00e5\u00b1\u008f\u00e7\u009a\u0084\u00e7\u009f\u00a9\u00e5\u00bd\u00a2\u00e5\u008c\u00ba\u00e5\u009f\u009f",
                "+\t * @param outFile \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @return \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @see RobotUtil#captureScreen(Rectangle, File)",
                "+\t */",
                "+\tpublic static File captureScreen(Rectangle screenRect, File outFile) {",
                "+\t\treturn RobotUtil.captureScreen(screenRect, outFile);",
                "+\t}",
                " }"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/lang/Singleton.java",
                "hutool-core/src/main/java/cn/hutool/core/swing/ScreenUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "ec2c9c615d50637ebe8907133a7a7a19afb2fdcc"
                ],
                [
                    "no-tag",
                    "5fa577004f536427ba2c32f3c8d8070a208ecd4c"
                ]
            ],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "90ad527ecec1b79134096f4638e43321034cc9cd",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1533556120,
            "hunks": 8,
            "message": "fix Image bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/img/Img.java b/hutool-core/src/main/java/cn/hutool/core/img/Img.java",
                "index 5100a64a8..31f924c7e 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/img/Img.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/img/Img.java",
                "@@ -55,3 +55,3 @@ public class Img {",
                " \t * \u00e4\u00bb\u008e\u00e6\u00b5\u0081\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e5\u00b9\u00b6\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e5\u00a4\u0084\u00e7\u0090\u0086",
                "-\t * @param imageFile \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @param in \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u00b5\u0081",
                " \t * @return {@link Img}",
                "@@ -64,3 +64,3 @@ public class Img {",
                " \t * \u00e4\u00bb\u008eImageInputStream\u00e5\u008f\u0096\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e5\u00b9\u00b6\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e5\u00a4\u0084\u00e7\u0090\u0086",
                "-\t * @param imageFile \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @param imageStream \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u00b5\u0081",
                " \t * @return {@link Img}",
                "@@ -73,3 +73,3 @@ public class Img {",
                " \t * \u00e4\u00bb\u008eURL\u00e5\u008f\u0096\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e5\u00b9\u00b6\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e5\u00a4\u0084\u00e7\u0090\u0086",
                "-\t * @param imageFile \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @param imageUrl \u00e5\u009b\u00be\u00e7\u0089\u0087URL",
                " \t * @return {@link Img}",
                "@@ -82,3 +82,3 @@ public class Img {",
                " \t * \u00e4\u00bb\u008eImage\u00e5\u008f\u0096\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e5\u00b9\u00b6\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e5\u00a4\u0084\u00e7\u0090\u0086",
                "-\t * @param imageFile \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @param image \u00e5\u009b\u00be\u00e7\u0089\u0087",
                " \t * @return {@link Img}",
                "@@ -96,2 +96,14 @@ public class Img {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u0086\u0099\u00e5\u0087\u00ba",
                "+\t * @param imgType \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u00a0\u00bc\u00e5\u00bc\u008f",
                "+\t * @return this",
                "+\t * @see ImageUtil#IMAGE_TYPE_JPG",
                "+\t * @see ImageUtil#IMAGE_TYPE_PNG",
                "+\t */",
                "+\tpublic Img setDestImageType(String imgType) {",
                "+\t\tthis.destImageType = imgType;",
                "+\t\treturn this;",
                "+\t}",
                "@@ -294,5 +306,3 @@ public class Img {",
                " \t\tint height = image.getHeight(null);",
                "-\t\tint type = ImageUtil.toBufferedImage(image).getTransparency();",
                "-",
                "-\t\tfinal BufferedImage destImg = new BufferedImage(width, height, type);",
                "+\t\tfinal BufferedImage destImg = new BufferedImage(width, height, getTypeInt());",
                " \t\tGraphics2D graphics2d = destImg.createGraphics();",
                "@@ -317,5 +327,3 @@ public class Img {",
                " \t\tint height = image.getHeight();",
                "-\t\tint type = ImageUtil.toBufferedImage(image).getTransparency();",
                "-",
                "-\t\tfinal BufferedImage destImg = new BufferedImage(width, height, type);",
                "+\t\tfinal BufferedImage destImg = new BufferedImage(width, height, getTypeInt());",
                " \t\tGraphics2D graphics2d = destImg.createGraphics();",
                "@@ -415,2 +423,18 @@ public class Img {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096int\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e7\u009a\u0084\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * ",
                "+\t * @return \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @see BufferedImage#TYPE_INT_ARGB",
                "+\t * @see BufferedImage#TYPE_INT_RGB",
                "+\t */",
                "+\tprivate int getTypeInt() {",
                "+\t\tswitch (this.destImageType) {",
                "+\t\tcase ImageUtil.IMAGE_TYPE_PNG:",
                "+\t\t\treturn BufferedImage.TYPE_INT_ARGB;",
                "+\t\tdefault:",
                "+\t\t\treturn BufferedImage.TYPE_INT_RGB;",
                "+\t\t}",
                "+\t}",
                " \t// ---------------------------------------------------------------------------------------------------------------- Private method end"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/img/Img.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "761590071188c0e00cc9222edebb82706783d873"
                ],
                [
                    "no-tag",
                    "b6533d506d0d87eed44f03e4ad21182019ec2396"
                ]
            ],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "71a670d408255e156db2400037571b870d03d48a",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1536664328,
            "hunks": 1,
            "message": "fix comment",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java",
                "index 83251ab51..376c820a4 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java",
                "@@ -736,3 +736,3 @@ public class StrUtil {",
                " \t * @param str \u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "-\t * @param testStrs \u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e6\u0095\u00b0\u00e7\u00bb\u0084",
                "+\t * @param testChars \u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e6\u0095\u00b0\u00e7\u00bb\u0084",
                " \t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e4\u00bb\u00bb\u00e6\u0084\u008f\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e5\u00ad\u0097\u00e7\u00ac\u00a6"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "6a182cd00a0bece788225729ae6f3a1aa371bdca"
                ],
                [
                    "no-tag",
                    "013635e1b1fab711c781ce34742c50fd1f14e4cd"
                ],
                [
                    "no-tag",
                    "6095721c7d87f68a9075f9cb537263ee74a78392"
                ],
                [
                    "no-tag",
                    "1582c8ec5b733295d53429b8d8d05350a7cb161a"
                ],
                [
                    "no-tag",
                    "a5aa399124a64b50fa6236eb0951b56bbed8fd1b"
                ],
                [
                    "no-tag",
                    "3b8a611882679aac227f95ed291e00a540e848d6"
                ],
                [
                    "no-tag",
                    "e36d091cbfa8f6cea1fb3cd31c12705630bf7232"
                ],
                [
                    "no-tag",
                    "b7b0f19fb848903d10306d33701c465b48a9f9ac"
                ],
                [
                    "no-tag",
                    "c9f6655518223589ed6b7ad75c515f30bd663e3f"
                ],
                [
                    "no-tag",
                    "0a23c6ce9babdf73c38aee52a7d30ba15daa65f0"
                ],
                [
                    "no-tag",
                    "2a46c16219c98e38f5ddac08e29656cd59a45ef7"
                ],
                [
                    "no-tag",
                    "29a260a010a940c69c486c7d00173b117becaddd"
                ]
            ],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "111cb7c2ddca80d17644fd7e6d72cd3c7ba1f4bb",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1534606611,
            "hunks": 3,
            "message": "add FTP",
            "diff": [
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java b/hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java",
                "index 0dd2c08b0..b4dfbc6e5 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java",
                "@@ -38,3 +38,2 @@ public class Ftp implements Closeable {",
                " \t * @param host \u00e5\u009f\u009f\u00e5\u0090\u008d\u00e6\u0088\u0096IP",
                "-\t * @param port \u00e7\u00ab\u00af\u00e5\u008f\u00a3",
                " \t */",
                "@@ -202,5 +201,4 @@ public class Ftp implements Closeable {",
                " \t * ",
                "+\t * @param path \u00e6\u009c\u008d\u00e5\u008a\u00a1\u00e7\u00ab\u00af\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u0088\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u0089",
                " \t * @param file \u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "-\t * @param path \u00e6\u009c\u008d\u00e5\u008a\u00a1\u00e7\u00ab\u00af\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "-\t * @param fileName \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d",
                " \t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u008a\u00e4\u00bc\u00a0\u00e6\u0088\u0090\u00e5\u008a\u009f"
            ],
            "changed_files": [
                "hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "d3c6f8cbc401d5fd911f20152c732d45f9e996e0"
                ]
            ],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1bbbc67211eaa4f8fd9e8a7e9129030610871e95",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1539695353,
            "hunks": 5,
            "message": "add ThreadLocalCookieStore",
            "diff": [
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java b/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "index 16d59c240..67694f3e5 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "@@ -37,2 +37,3 @@ import cn.hutool.core.util.StrUtil;",
                " import cn.hutool.core.util.URLUtil;",
                "+import cn.hutool.http.cookie.ThreadLocalCookieStore;",
                " import cn.hutool.http.ssl.SSLSocketFactoryBuilder;",
                "@@ -64,4 +65,3 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \tstatic {",
                "-\t\tcookieManager = new CookieManager();",
                "-\t\tcookieManager.setCookiePolicy(CookiePolicy.ACCEPT_ALL);",
                "+\t\tcookieManager = new CookieManager(new ThreadLocalCookieStore(), CookiePolicy.ACCEPT_ALL);",
                " \t\tCookieHandler.setDefault(cookieManager);",
                "@@ -96,3 +96,3 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \tprivate Map<String, Resource> fileForm;",
                "-\t/** \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00a1\u00a8\u00e5\u008d\u0095\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u008a\u00e4\u00bc\u00a0 */",
                "+\t/** Cookie */",
                " \tprivate String cookie;",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/cookie/ThreadLocalCookieStore.java b/hutool-http/src/main/java/cn/hutool/http/cookie/ThreadLocalCookieStore.java",
                "new file mode 100644",
                "index 000000000..3521bcfd8",
                "--- /dev/null",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/cookie/ThreadLocalCookieStore.java",
                "@@ -0,0 +1,65 @@",
                "+package cn.hutool.http.cookie;",
                "+",
                "+import java.net.CookieManager;",
                "+import java.net.CookieStore;",
                "+import java.net.HttpCookie;",
                "+import java.net.URI;",
                "+import java.util.List;",
                "+",
                "+/**",
                "+ * \u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e9\u009a\u0094\u00e7\u00a6\u00bb\u00e7\u009a\u0084Cookie\u00e5\u00ad\u0098\u00e5\u0082\u00a8\u00e3\u0080\u0082\u00e5\u00a4\u009a\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e7\u008e\u00af\u00e5\u00a2\u0083\u00e4\u00b8\u008bCookie\u00e9\u009a\u0094\u00e7\u00a6\u00bb\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00ef\u00bc\u008c\u00e9\u0098\u00b2\u00e6\u00ad\u00a2Cookie\u00e8\u00a6\u0086\u00e7\u009b\u0096<br>",
                "+ * ",
                "+ * \u00e8\u00a7\u0081\u00ef\u00bc\u009ahttps://stackoverflow.com/questions/16305486/cookiemanager-for-multiple-threads",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.18",
                "+ */",
                "+public class ThreadLocalCookieStore implements CookieStore {",
                "+",
                "+\tprivate final static ThreadLocal<CookieStore> COOKIE_JARS = new ThreadLocal<CookieStore>() {",
                "+\t\t@Override",
                "+\t\tprotected synchronized CookieStore initialValue() {",
                "+\t\t\t/* InMemoryCookieStore */",
                "+\t\t\treturn (new CookieManager()).getCookieStore();",
                "+\t\t}",
                "+\t};",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u009c\u00ac\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e4\u00b8\u008b\u00e7\u009a\u0084CookieStore",
                "+\t * ",
                "+\t * @return CookieStore",
                "+\t */",
                "+\tpublic CookieStore getCookieStore() {",
                "+\t\treturn COOKIE_JARS.get();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic void add(URI uri, HttpCookie cookie) {",
                "+\t\tgetCookieStore().add(uri, cookie);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic List<HttpCookie> get(URI uri) {",
                "+\t\treturn getCookieStore().get(uri);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic List<HttpCookie> getCookies() {",
                "+\t\treturn getCookieStore().getCookies();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic List<URI> getURIs() {",
                "+\t\treturn getCookieStore().getURIs();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic boolean remove(URI uri, HttpCookie cookie) {",
                "+\t\treturn getCookieStore().remove(uri, cookie);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic boolean removeAll() {",
                "+\t\treturn getCookieStore().removeAll();",
                "+\t}",
                "+}",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/cookie/package-info.java b/hutool-http/src/main/java/cn/hutool/http/cookie/package-info.java",
                "new file mode 100644",
                "index 000000000..c3980e9bc",
                "--- /dev/null",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/cookie/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089Cookie",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.http.cookie;",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "hutool-http/src/main/java/cn/hutool/http/cookie/ThreadLocalCookieStore.java",
                "hutool-http/src/main/java/cn/hutool/http/cookie/package-info.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "d466551deb69cfbbd38e46e12687f62e1930ff08"
                ]
            ],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1220a00774e15e89c4dce6d6df7f8a074b9c296e",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1534992544,
            "hunks": 7,
            "message": "fix URLUtil",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java",
                "index 5036aff9b..45e68b97c 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java",
                "@@ -158,3 +158,3 @@ public class IdcardUtil {",
                " \t\t\tString[] cardval = isValidCard10(idCard);",
                "-\t\t\tif (cardval != null && cardval[2].equals(\"true\")) {",
                "+\t\t\tif (null != cardval && cardval[2].equals(\"true\")) {",
                " \t\t\t\treturn true;",
                "@@ -258,2 +258,5 @@ public class IdcardUtil {",
                " \tpublic static String[] isValidCard10(String idCard) {",
                "+\t\tif(StrUtil.isBlank(idCard)) {",
                "+\t\t\treturn null;",
                "+\t\t}",
                " \t\tString[] info = new String[3];",
                "@@ -296,2 +299,5 @@ public class IdcardUtil {",
                " \tpublic static boolean isValidTWCard(String idCard) {",
                "+\t\tif(StrUtil.isEmpty(idCard)) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                " \t\tString start = idCard.substring(0, 1);",
                "@@ -300,4 +306,7 @@ public class IdcardUtil {",
                " \t\tInteger iStart = twFirstCode.get(start);",
                "-\t\tInteger sum = iStart / 10 + (iStart % 10) * 9;",
                "-\t\tchar[] chars = mid.toCharArray();",
                "+\t\tif(null == iStart) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                "+\t\tint sum = iStart / 10 + (iStart % 10) * 9;",
                "+\t\tfinal char[] chars = mid.toCharArray();",
                " \t\tInteger iflag = 8;",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java",
                "index 1108b081a..2c017b8c1 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java",
                "@@ -163,11 +163,6 @@ public class URLUtil {",
                " \t * @return \u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e5\u008c\u0096\u00e5\u0090\u008e\u00e7\u009a\u0084URL\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u008f\u0090\u00e4\u00be\u009b\u00e4\u00ba\u0086null\u00e6\u0088\u0096\u00e8\u0080\u0085\u00e7\u00a9\u00ba\u00e4\u00b8\u00b2\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009enull",
                "+\t * @see #normalize(String)",
                " \t */",
                " \tpublic static String formatUrl(String url) {",
                "-\t\tif (StrUtil.isBlank(url)) {",
                "-\t\t\treturn null;",
                "-\t\t}",
                "-\t\tif (url.startsWith(\"http://\") || url.startsWith(\"https://\")) {",
                "-\t\t\treturn url;",
                "-\t\t}",
                "-\t\treturn \"http://\" + url;",
                "+\t\treturn normalize(url);",
                " \t}",
                "@@ -447,2 +442,5 @@ public class URLUtil {",
                "+\t\t//\u00e5\u008e\u00bb\u00e9\u0099\u00a4\u00e5\u00bc\u0080\u00e5\u00a4\u00b4\u00e7\u009a\u0084\\\u00e6\u0088\u0096\u00e8\u0080\u0085/",
                "+\t\tbody = body.replaceAll(\"^[\\\\/]+\", StrUtil.EMPTY);",
                "+\t\t//\u00e6\u009b\u00bf\u00e6\u008d\u00a2\u00e5\u00a4\u009a\u00e4\u00b8\u00aa\\\u00e6\u0088\u0096/\u00e4\u00b8\u00ba\u00e5\u008d\u0095\u00e4\u00b8\u00aa/",
                " \t\tbody = body.replace(\"\\\\\", \"/\").replaceAll(\"//+\", \"/\");"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "5481e2f9f4c2e29735e17c69433fb3478b74402e"
                ]
            ],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "70efa162608d1aacf5367431cb607e087985ff57",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1539832892,
            "hunks": 1,
            "message": "fix ImageUtil bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java",
                "index b2da75813..9c61b29d9 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java",
                "@@ -1386,3 +1386,9 @@ public class ImageUtil {",
                " \tpublic static void write(Image image, File targetFile) throws IORuntimeException {",
                "-\t\twrite(image, FileUtil.extName(targetFile), getImageOutputStream(targetFile));",
                "+\t\tImageOutputStream out = null;",
                "+\t\ttry {",
                "+\t\t\tout = getImageOutputStream(targetFile);",
                "+\t\t\twrite(image, FileUtil.extName(targetFile), out);",
                "+\t\t}finally {",
                "+\t\t\tIoUtil.close(out);",
                "+\t\t}",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "d5812f3ac5a502c2a9750a48c8b3ef156a64df46"
                ]
            ],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "35e8d34bcabea519939873ff8b6a763b8e823231",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537196222,
            "hunks": 6,
            "message": "qrcode support logo",
            "diff": [
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/qrcode/QrConfig.java b/hutool-extra/src/main/java/cn/hutool/extra/qrcode/QrConfig.java",
                "index 13cf894eb..f39967c3e 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/qrcode/QrConfig.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/qrcode/QrConfig.java",
                "@@ -3,2 +3,3 @@ package cn.hutool.extra.qrcode;",
                " import java.awt.Image;",
                "+import java.io.File;",
                " import java.nio.charset.Charset;",
                "@@ -6,2 +7,4 @@ import java.util.HashMap;",
                "+import org.apache.velocity.texen.util.FileUtil;",
                "+",
                " import com.google.zxing.EncodeHintType;",
                "@@ -10,2 +13,3 @@ import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;",
                " import cn.hutool.core.util.CharsetUtil;",
                "+import cn.hutool.core.util.ImageUtil;",
                "@@ -207,2 +211,22 @@ public class QrConfig {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e4\u00ba\u008c\u00e7\u00bb\u00b4\u00e7\u00a0\u0081\u00e4\u00b8\u00ad\u00e7\u009a\u0084Logo\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param imgFile \u00e4\u00ba\u008c\u00e7\u00bb\u00b4\u00e7\u00a0\u0081\u00e4\u00b8\u00ad\u00e7\u009a\u0084Logo",
                "+\t * @return this;",
                "+\t */",
                "+\tpublic QrConfig setImg(String imgPath) {",
                "+\t\treturn setImg(FileUtil.file(imgPath));",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e4\u00ba\u008c\u00e7\u00bb\u00b4\u00e7\u00a0\u0081\u00e4\u00b8\u00ad\u00e7\u009a\u0084Logo\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param imgFile \u00e4\u00ba\u008c\u00e7\u00bb\u00b4\u00e7\u00a0\u0081\u00e4\u00b8\u00ad\u00e7\u009a\u0084Logo",
                "+\t * @return this;",
                "+\t */",
                "+\tpublic QrConfig setImg(File imgFile) {",
                "+\t\treturn setImg(ImageUtil.read(imgFile));",
                "+\t}",
                "@@ -211,7 +235,7 @@ public class QrConfig {",
                " \t * ",
                "-\t * @param logoImg \u00e4\u00ba\u008c\u00e7\u00bb\u00b4\u00e7\u00a0\u0081\u00e4\u00b8\u00ad\u00e7\u009a\u0084Logo",
                "+\t * @param img \u00e4\u00ba\u008c\u00e7\u00bb\u00b4\u00e7\u00a0\u0081\u00e4\u00b8\u00ad\u00e7\u009a\u0084Logo",
                " \t * @return this;",
                " \t */",
                "-\tpublic QrConfig setImg(Image logoImg) {",
                "-\t\tthis.img = logoImg;",
                "+\tpublic QrConfig setImg(Image img) {",
                "+\t\tthis.img = img;",
                " \t\treturn this;"
            ],
            "changed_files": [
                "hutool-extra/src/main/java/cn/hutool/extra/qrcode/QrConfig.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "25863e9649a33386328aa175122cbeeaf6badb61"
                ],
                [
                    "no-tag",
                    "2c5f75d7b1060e0fa4f7a19a92843f14f2a74002"
                ]
            ],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b128b1c844c3f867448b7205e27b410a1c0603f3",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1535100538,
            "hunks": 2,
            "message": "\u00e6\u00b7\u00bb\u00e5\u008a\u00a0\u00e5\u00af\u00b9 &#39; \u00e5\u00ae\u009e\u00e4\u00bd\u0093\u00e7\u009a\u0084 ' \u00e6\u0094\u00af\u00e6\u008c\u0081..",
            "diff": [
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java b/hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java",
                "index fceaf58f7..6b1d48ba3 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java",
                "@@ -32,2 +32,3 @@ public class HtmlUtil {",
                " \t\tTEXT['\\''] = \"&#039;\".toCharArray(); // \u00e5\u008d\u0095\u00e5\u00bc\u0095\u00e5\u008f\u00b7 ('&apos;' doesn't work - it is not by the w3 specs)",
                "+\t\tTEXT['\\''] = \"&#39;\".toCharArray(); // \u00e5\u008d\u0095\u00e5\u00bc\u0095\u00e5\u008f\u00b7",
                " \t\tTEXT['\"'] = QUOTE.toCharArray(); // \u00e5\u008f\u008c\u00e5\u00bc\u0095\u00e5\u008f\u00b7",
                "@@ -67,2 +68,3 @@ public class HtmlUtil {",
                " \t\t\t\t.replace(\"&#039;\", \"'\")//",
                "+\t\t\t\t.replace(\"&#39;\", \"'\")//",
                " \t\t\t\t.replace(StrUtil.HTML_LT, \"<\")//"
            ],
            "changed_files": [
                "hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "39": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 39",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9091200b462e72b8bdfed55bcadbe4fdfe6ce436",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1533820395,
            "hunks": 115,
            "message": "fix db",
            "diff": [
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/AbstractDb.java b/hutool-db/src/main/java/cn/hutool/db/AbstractDb.java",
                "index 39cd5f85f..54991dc6b 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/AbstractDb.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/AbstractDb.java",
                "@@ -8,3 +8,6 @@ import java.util.List;",
                "+import javax.sql.DataSource;",
                "+",
                " import cn.hutool.core.collection.CollectionUtil;",
                "+import cn.hutool.db.dialect.Dialect;",
                " import cn.hutool.db.handler.BeanListHandler;",
                "@@ -31,2 +34,6 @@ import cn.hutool.db.sql.Wrapper;",
                " public abstract class AbstractDb{",
                "+\t",
                "+\tprotected DataSource ds;",
                "+\t/** \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e4\u00ba\u008b\u00e5\u008a\u00a1 */",
                "+\tprotected Boolean isSupportTransaction = null;",
                " \tprotected SqlConnRunner runner;",
                "@@ -34,2 +41,12 @@ public abstract class AbstractDb{",
                " \t//------------------------------------------------------- Constructor start",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param ds \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                "+\t * @param dialect \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                "+\t */",
                "+\tpublic AbstractDb(DataSource ds, Dialect dialect) {",
                "+\t\tthis.ds = ds;",
                "+\t\tthis.runner = new SqlConnRunner(dialect);",
                "+\t}",
                " \t//------------------------------------------------------- Constructor end",
                "@@ -784,4 +801,19 @@ public abstract class AbstractDb{",
                "-\t//---------------------------------------------------------------------------- Private method start",
                "-\t//---------------------------------------------------------------------------- Private method end",
                "+\t//---------------------------------------------------------------------------- protected method start",
                "+\t/**",
                "+\t * \u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e4\u00ba\u008b\u00e5\u008a\u00a1\u00ef\u00bc\u008c\u00e6\u00ad\u00a4\u00e9\u00a1\u00b9\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e5\u0090\u008c\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090\u00e5\u008f\u00aa\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e4\u00b8\u0080\u00e6\u00ac\u00a1\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u008d\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e6\u008a\u009b\u00e5\u0087\u00baDbRuntimeException\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * ",
                "+\t * @param conn Connection",
                "+\t * @throws SQLException \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u0085\u0083\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e4\u00bf\u00a1\u00e6\u0081\u00af\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5",
                "+\t * @throws DbRuntimeException \u00e4\u00b8\u008d\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e4\u00ba\u008b\u00e5\u008a\u00a1",
                "+\t */",
                "+\tprotected void checkTransactionSupported(Connection conn) throws SQLException, DbRuntimeException {",
                "+\t\tif (null == isSupportTransaction) {",
                "+\t\t\tisSupportTransaction = conn.getMetaData().supportsTransactions();",
                "+\t\t}",
                "+\t\tif (false == isSupportTransaction) {",
                "+\t\t\tthrow new DbRuntimeException(\"Transaction not supported for current database!\");",
                "+\t\t}",
                "+\t}",
                "+\t//---------------------------------------------------------------------------- protected method end",
                " }",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ActiveEntity.java b/hutool-db/src/main/java/cn/hutool/db/ActiveEntity.java",
                "index d8c4011dd..33d338d63 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ActiveEntity.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ActiveEntity.java",
                "@@ -17,3 +17,3 @@ public class ActiveEntity extends Entity {",
                "-\tprivate SqlRunner runner;",
                "+\tprivate Db db;",
                "@@ -80,3 +80,3 @@ public class ActiveEntity extends Entity {",
                " \tpublic ActiveEntity() {",
                "-\t\tthis(SqlRunner.create(), (String) null);",
                "+\t\tthis(Db.use(), (String) null);",
                " \t}",
                "@@ -89,3 +89,3 @@ public class ActiveEntity extends Entity {",
                " \tpublic ActiveEntity(String tableName) {",
                "-\t\tthis(SqlRunner.create(), tableName);",
                "+\t\tthis(Db.use(), tableName);",
                " \t}",
                "@@ -98,3 +98,3 @@ public class ActiveEntity extends Entity {",
                " \tpublic ActiveEntity(Entity entity) {",
                "-\t\tthis(SqlRunner.create(), entity);",
                "+\t\tthis(Db.use(), entity);",
                " \t}",
                "@@ -104,8 +104,8 @@ public class ActiveEntity extends Entity {",
                " \t * ",
                "-\t * @param runner {@link SqlRunner}",
                "+\t * @param db {@link SqlRunner}",
                " \t * @param tableName \u00e8\u00a1\u00a8\u00e5\u0090\u008d",
                " \t */",
                "-\tpublic ActiveEntity(SqlRunner runner, String tableName) {",
                "+\tpublic ActiveEntity(Db db, String tableName) {",
                " \t\tsuper(tableName);",
                "-\t\tthis.runner = runner;",
                "+\t\tthis.db = db;",
                " \t}",
                "@@ -115,9 +115,9 @@ public class ActiveEntity extends Entity {",
                " \t * ",
                "-\t * @param runner {@link SqlRunner}",
                "+\t * @param db {@link SqlRunner}",
                " \t * @param entity \u00e9\u009d\u009e\u00e5\u008a\u00a8\u00e6\u0080\u0081\u00e5\u00ae\u009e\u00e4\u00bd\u0093",
                " \t */",
                "-\tpublic ActiveEntity(SqlRunner runner, Entity entity) {",
                "+\tpublic ActiveEntity(Db db, Entity entity) {",
                " \t\tsuper(entity.getTableName());",
                " \t\tthis.putAll(entity);",
                "-\t\tthis.runner = runner;",
                "+\t\tthis.db = db;",
                " \t}",
                "@@ -178,3 +178,3 @@ public class ActiveEntity extends Entity {",
                " \t\ttry {",
                "-\t\t\trunner.insert(this);",
                "+\t\t\tdb.insert(this);",
                " \t\t} catch (SQLException e) {",
                "@@ -192,3 +192,3 @@ public class ActiveEntity extends Entity {",
                " \t\ttry {",
                "-\t\t\tfinal Entity result = runner.get(this);",
                "+\t\t\tfinal Entity result = db.get(this);",
                " \t\t\tif(MapUtil.isNotEmpty(result)) {",
                "@@ -209,3 +209,3 @@ public class ActiveEntity extends Entity {",
                " \t\ttry {",
                "-\t\t\trunner.del(this);",
                "+\t\t\tdb.del(this);",
                " \t\t} catch (SQLException e) {",
                "@@ -224,3 +224,3 @@ public class ActiveEntity extends Entity {",
                " \t\ttry {",
                "-\t\t\trunner.update(this, Entity.create().set(primaryKey, this.get(primaryKey)));",
                "+\t\t\tdb.update(this, Entity.create().set(primaryKey, this.get(primaryKey)));",
                " \t\t} catch (SQLException e) {",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/DaoTemplate.java b/hutool-db/src/main/java/cn/hutool/db/DaoTemplate.java",
                "index 15ac3434a..ea8865dad 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/DaoTemplate.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/DaoTemplate.java",
                "@@ -29,3 +29,3 @@ public class DaoTemplate {",
                " \t/** SQL\u00e8\u00bf\u0090\u00e8\u00a1\u008c\u00e5\u0099\u00a8 */",
                "-\tprotected SqlRunner runner;",
                "+\tprotected Db db;",
                "@@ -60,3 +60,3 @@ public class DaoTemplate {",
                " \tpublic DaoTemplate(String tableName, String primaryKeyField, DataSource ds) {",
                "-\t\tthis(tableName, primaryKeyField, DbUtil.newSqlRunner(ds));",
                "+\t\tthis(tableName, primaryKeyField, Db.use(ds));",
                " \t}",
                "@@ -67,5 +67,5 @@ public class DaoTemplate {",
                " \t * @param primaryKeyField \u00e4\u00b8\u00bb\u00e9\u0094\u00ae\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e5\u0090\u008d",
                "-\t * @param runner SqlRunner\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param db Db\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                " \t */",
                "-\tpublic DaoTemplate(String tableName, String primaryKeyField, SqlRunner runner) {",
                "+\tpublic DaoTemplate(String tableName, String primaryKeyField, Db db) {",
                " \t\tthis.tableName = tableName;",
                "@@ -74,3 +74,3 @@ public class DaoTemplate {",
                " \t\t}",
                "-\t\tthis.runner = runner;",
                "+\t\tthis.db = db;",
                " \t}",
                "@@ -86,3 +86,3 @@ public class DaoTemplate {",
                " \tpublic int add(Entity entity) throws SQLException {",
                "-\t\treturn runner.insert(fixEntity(entity));",
                "+\t\treturn db.insert(fixEntity(entity));",
                " \t}",
                "@@ -96,3 +96,3 @@ public class DaoTemplate {",
                " \tpublic List<Object> addForGeneratedKeys(Entity entity) throws SQLException {",
                "-\t\treturn runner.insertForGeneratedKeys(fixEntity(entity));",
                "+\t\treturn db.insertForGeneratedKeys(fixEntity(entity));",
                " \t}",
                "@@ -106,3 +106,3 @@ public class DaoTemplate {",
                " \tpublic Long addForGeneratedKey(Entity entity) throws SQLException {",
                "-\t\treturn runner.insertForGeneratedKey(fixEntity(entity));",
                "+\t\treturn db.insertForGeneratedKey(fixEntity(entity));",
                " \t}",
                "@@ -155,3 +155,3 @@ public class DaoTemplate {",
                " \t\t}",
                "-\t\treturn runner.del(fixEntity(where));",
                "+\t\treturn db.del(fixEntity(where));",
                " \t}",
                "@@ -171,3 +171,3 @@ public class DaoTemplate {",
                " \t\t}",
                "-\t\treturn runner.update(fixEntity(record), where);",
                "+\t\treturn db.update(fixEntity(record), where);",
                " \t}",
                "@@ -194,3 +194,3 @@ public class DaoTemplate {",
                "-\t\treturn runner.update(record, where);",
                "+\t\treturn db.update(record, where);",
                " \t}",
                "@@ -243,3 +243,3 @@ public class DaoTemplate {",
                " \tpublic Entity get(Entity where) throws SQLException {",
                "-\t\treturn runner.find(null, fixEntity(where), new EntityHandler());",
                "+\t\treturn db.find(null, fixEntity(where), new EntityHandler());",
                " \t}",
                "@@ -278,3 +278,3 @@ public class DaoTemplate {",
                " \tpublic List<Entity> find(Entity where) throws SQLException {",
                "-\t\treturn runner.find(null, fixEntity(where), new EntityListHandler());",
                "+\t\treturn db.find(null, fixEntity(where), new EntityListHandler());",
                " \t}",
                "@@ -296,3 +296,3 @@ public class DaoTemplate {",
                " \t\t}",
                "-\t\treturn runner.query(sql, new EntityListHandler(), params);",
                "+\t\treturn db.query(sql, new EntityListHandler(), params);",
                " \t}",
                "@@ -309,3 +309,3 @@ public class DaoTemplate {",
                " \tpublic PageResult<Entity> page(Entity where, Page page, String... selectFields) throws SQLException{",
                "-\t\treturn runner.page(Arrays.asList(selectFields), fixEntity(where), page);",
                "+\t\treturn db.page(Arrays.asList(selectFields), fixEntity(where), page);",
                " \t}",
                "@@ -321,3 +321,3 @@ public class DaoTemplate {",
                " \tpublic PageResult<Entity> page(Entity where, Page page) throws SQLException{",
                "-\t\treturn runner.page(fixEntity(where), page);",
                "+\t\treturn db.page(fixEntity(where), page);",
                " \t}",
                "@@ -332,3 +332,3 @@ public class DaoTemplate {",
                " \tpublic int count(Entity where) throws SQLException{",
                "-\t\treturn runner.count(fixEntity(where));",
                "+\t\treturn db.count(fixEntity(where));",
                " \t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/Db.java b/hutool-db/src/main/java/cn/hutool/db/Db.java",
                "index f2c13c372..73c7f3d9a 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/Db.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/Db.java",
                "@@ -24,6 +24,2 @@ public class Db extends AbstractDb {",
                "-\tprivate DataSource ds;",
                "-\t/** \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e4\u00ba\u008b\u00e5\u008a\u00a1 */",
                "-\tprivate Boolean isSupportTransaction = null;",
                "-",
                " \t/**",
                "@@ -91,3 +87,3 @@ public class Db extends AbstractDb {",
                " \t}",
                "-",
                "+\t",
                " \t/**",
                "@@ -96,7 +92,6 @@ public class Db extends AbstractDb {",
                " \t * @param ds \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                "-\t * @param dialect \u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                "+\t * @param driverClassName \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e9\u00a9\u00b1\u00e5\u008a\u00a8\u00e7\u00b1\u00bb\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e8\u00af\u0086\u00e5\u0088\u00ab\u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                " \t */",
                "-\tpublic Db(DataSource ds, Dialect dialect) {",
                "-\t\tthis.runner = new SqlConnRunner(dialect);",
                "-\t\tthis.ds = ds;",
                "+\tpublic Db(DataSource ds, String driverClassName) {",
                "+\t\tthis(ds, DialectFactory.newDialect(driverClassName));",
                " \t}",
                "@@ -107,7 +102,6 @@ public class Db extends AbstractDb {",
                " \t * @param ds \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                "-\t * @param driverClassName \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e9\u00a9\u00b1\u00e5\u008a\u00a8\u00e7\u00b1\u00bb\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e8\u00af\u0086\u00e5\u0088\u00ab\u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                "+\t * @param dialect \u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                " \t */",
                "-\tpublic Db(DataSource ds, String driverClassName) {",
                "-\t\tthis.runner = new SqlConnRunner(driverClassName);",
                "-\t\tthis.ds = ds;",
                "+\tpublic Db(DataSource ds, Dialect dialect) {",
                "+\t\tsuper(ds, dialect);",
                " \t}",
                "@@ -134,3 +128,3 @@ public class Db extends AbstractDb {",
                " \tpublic void closeConnection(Connection conn) {",
                "-\t\tThreadLocalConnection.INSTANCE.close(this.ds, conn);",
                "+\t\tThreadLocalConnection.INSTANCE.close(this.ds);",
                " \t}",
                "@@ -199,18 +193,2 @@ public class Db extends AbstractDb {",
                " \t// ---------------------------------------------------------------------------- Private method start",
                "-\t/**",
                "-\t * \u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e4\u00ba\u008b\u00e5\u008a\u00a1\u00ef\u00bc\u008c\u00e6\u00ad\u00a4\u00e9\u00a1\u00b9\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e5\u0090\u008c\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090\u00e5\u008f\u00aa\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e4\u00b8\u0080\u00e6\u00ac\u00a1\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u008d\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e6\u008a\u009b\u00e5\u0087\u00baDbRuntimeException\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "-\t * ",
                "-\t * @param conn Connection",
                "-\t * @throws SQLException \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u0085\u0083\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e4\u00bf\u00a1\u00e6\u0081\u00af\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5",
                "-\t * @throws DbRuntimeException \u00e4\u00b8\u008d\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e4\u00ba\u008b\u00e5\u008a\u00a1",
                "-\t */",
                "-\tprivate void checkTransactionSupported(Connection conn) throws SQLException, DbRuntimeException {",
                "-\t\tif (null == isSupportTransaction) {",
                "-\t\t\tisSupportTransaction = conn.getMetaData().supportsTransactions();",
                "-\t\t}",
                "-\t\tif (false == isSupportTransaction) {",
                "-\t\t\tthrow new DbRuntimeException(\"Transaction not supported for current database!\");",
                "-\t\t}",
                "-\t}",
                "-",
                " \t/**",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/DbUtil.java b/hutool-db/src/main/java/cn/hutool/db/DbUtil.java",
                "index 34a1d7df1..1dae5216c 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/DbUtil.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/DbUtil.java",
                "@@ -65,3 +65,5 @@ public final class DbUtil {",
                " \t * @return SQL\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e7\u00b1\u00bb",
                "+\t * @deprecated \u00e8\u00af\u00b7\u00e4\u00bd\u00bf\u00e7\u0094\u00a8 {@link #use()}",
                " \t */",
                "+\t@Deprecated",
                " \tpublic static SqlRunner newSqlRunner() {",
                "@@ -75,3 +77,5 @@ public final class DbUtil {",
                " \t * @return SQL\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e7\u00b1\u00bb",
                "+\t * @deprecated \u00e8\u00af\u00b7\u00e4\u00bd\u00bf\u00e7\u0094\u00a8 {@link #use(DataSource)}",
                " \t */",
                "+\t@Deprecated",
                " \tpublic static SqlRunner newSqlRunner(DataSource ds) {",
                "@@ -86,3 +90,5 @@ public final class DbUtil {",
                " \t * @return SQL\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e7\u00b1\u00bb",
                "+\t * @deprecated \u00e8\u00af\u00b7\u00e4\u00bd\u00bf\u00e7\u0094\u00a8 {@link #use(DataSource, Dialect)}",
                " \t */",
                "+\t@Deprecated",
                " \tpublic static SqlRunner newSqlRunner(DataSource ds, Dialect dialect) {",
                "@@ -90,10 +96,20 @@ public final class DbUtil {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u00ae\u009e\u00e4\u00be\u008b\u00e5\u008c\u0096\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0096\u00b0\u00e7\u009a\u0084Db\u00ef\u00bc\u008c\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                "+\t * ",
                "+\t * @return SQL\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e7\u00b1\u00bb",
                "+\t */",
                "+\tpublic static Db use() {",
                "+\t\treturn Db.use();",
                "+\t}",
                " \t/**",
                "-\t * \u00e6\u0096\u00b0\u00e5\u00bb\u00ba\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e4\u00bc\u009a\u00e8\u00af\u009d\u00ef\u00bc\u008c\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                "+\t * \u00e5\u00ae\u009e\u00e4\u00be\u008b\u00e5\u008c\u0096\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0096\u00b0\u00e7\u009a\u0084Db\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                " \t * ",
                "-\t * @return \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e4\u00bc\u009a\u00e8\u00af\u009d",
                "+\t * @param ds \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                "+\t * @return SQL\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e7\u00b1\u00bb",
                " \t */",
                "-\tpublic static Session newSession() {",
                "-\t\treturn Session.create(getDs());",
                "+\tpublic static Db use(DataSource ds) {",
                "+\t\treturn Db.use(ds);",
                " \t}",
                "@@ -101,9 +117,19 @@ public final class DbUtil {",
                " \t/**",
                "-\t * \u00e6\u0096\u00b0\u00e5\u00bb\u00ba\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e4\u00bc\u009a\u00e8\u00af\u009d",
                "+\t * \u00e5\u00ae\u009e\u00e4\u00be\u008b\u00e5\u008c\u0096\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0096\u00b0\u00e7\u009a\u0084SQL\u00e8\u00bf\u0090\u00e8\u00a1\u008c\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                " \t * ",
                " \t * @param ds \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                "+\t * @param dialect SQL\u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                "+\t * @return SQL\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e7\u00b1\u00bb",
                "+\t */",
                "+\tpublic static Db use(DataSource ds, Dialect dialect) {",
                "+\t\treturn Db.use(ds, dialect);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u0096\u00b0\u00e5\u00bb\u00ba\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e4\u00bc\u009a\u00e8\u00af\u009d\u00ef\u00bc\u008c\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                "+\t * ",
                " \t * @return \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e4\u00bc\u009a\u00e8\u00af\u009d",
                " \t */",
                "-\tpublic static Session newSession(DataSource ds) {",
                "-\t\treturn Session.create(ds);",
                "+\tpublic static Session newSession() {",
                "+\t\treturn Session.create(getDs());",
                " \t}",
                "@@ -113,7 +139,7 @@ public final class DbUtil {",
                " \t * ",
                "-\t * @param conn \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param ds \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                " \t * @return \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e4\u00bc\u009a\u00e8\u00af\u009d",
                " \t */",
                "-\tpublic static Session newSession(Connection conn) {",
                "-\t\treturn Session.create(conn);",
                "+\tpublic static Session newSession(DataSource ds) {",
                "+\t\treturn Session.create(ds);",
                " \t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/Session.java b/hutool-db/src/main/java/cn/hutool/db/Session.java",
                "index 73ebd01fa..1ead2467c 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/Session.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/Session.java",
                "@@ -11,2 +11,3 @@ import cn.hutool.core.lang.VoidFunc;",
                " import cn.hutool.core.util.StrUtil;",
                "+import cn.hutool.db.dialect.Dialect;",
                " import cn.hutool.db.dialect.DialectFactory;",
                "@@ -29,4 +30,3 @@ public class Session extends AbstractDb implements Closeable {",
                "-\tprivate Connection conn = null;",
                "-\tprivate Boolean isSupportTransaction = null;",
                "+\tprivate DataSource ds;",
                "@@ -63,13 +63,12 @@ public class Session extends AbstractDb implements Closeable {",
                "+\t// ---------------------------------------------------------------------------- Constructor start",
                " \t/**",
                "-\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e4\u00bc\u009a\u00e8\u00af\u009d",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0\u00ef\u00bc\u008c\u00e4\u00bb\u008eDataSource\u00e4\u00b8\u00ad\u00e8\u00af\u0086\u00e5\u0088\u00ab\u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                " \t * ",
                "-\t * @param conn \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "-\t * @return {@link Session}",
                "+\t * @param ds \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                " \t */",
                "-\tpublic static Session create(Connection conn) {",
                "-\t\treturn new Session(conn);",
                "+\tpublic Session(DataSource ds) {",
                "+\t\tthis(ds, DialectFactory.newDialect(ds));",
                " \t}",
                "-",
                "-\t// ---------------------------------------------------------------------------- Constructor start",
                "+\t",
                " \t/**",
                "@@ -78,10 +77,6 @@ public class Session extends AbstractDb implements Closeable {",
                " \t * @param ds \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                "+\t * @param driverClassName \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e9\u00a9\u00b1\u00e5\u008a\u00a8\u00e7\u00b1\u00bb\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e8\u00af\u0086\u00e5\u0088\u00ab\u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                " \t */",
                "-\tpublic Session(DataSource ds) {",
                "-\t\ttry {",
                "-\t\t\tthis.conn = ds.getConnection();",
                "-\t\t} catch (SQLException e) {",
                "-\t\t\tthrow new DbRuntimeException(\"Get connection error!\", e);",
                "-\t\t}",
                "-\t\tthis.runner = new SqlConnRunner(DialectFactory.newDialect(conn));",
                "+\tpublic Session(DataSource ds, String driverClassName) {",
                "+\t\tthis(ds, DialectFactory.newDialect(driverClassName));",
                " \t}",
                "@@ -91,9 +86,8 @@ public class Session extends AbstractDb implements Closeable {",
                " \t * ",
                "-\t * @param conn \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param ds \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                "+\t * @param dialect \u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                " \t */",
                "-\tpublic Session(Connection conn) {",
                "-\t\tthis.conn = conn;",
                "-\t\tthis.runner = new SqlConnRunner(DialectFactory.newDialect(conn));",
                "+\tpublic Session(DataSource ds, Dialect dialect) {",
                "+\t\tsuper(ds, dialect);",
                " \t}",
                "-",
                " \t// ---------------------------------------------------------------------------- Constructor end",
                "@@ -101,21 +95,2 @@ public class Session extends AbstractDb implements Closeable {",
                " \t// ---------------------------------------------------------------------------- Getters and Setters end",
                "-\t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097{@link Connection}",
                "-\t * ",
                "-\t * @return {@link Connection}",
                "-\t * @see #getConnection()",
                "-\t */",
                "-\tpublic Connection getConn() {",
                "-\t\treturn conn;",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae{@link Connection}",
                "-\t * ",
                "-\t * @param conn {@link Connection}",
                "-\t */",
                "-\tpublic void setConn(Connection conn) {",
                "-\t\tthis.conn = conn;",
                "-\t}",
                "-",
                " \t/**",
                "@@ -128,11 +103,2 @@ public class Session extends AbstractDb implements Closeable {",
                " \t}",
                "-",
                "-\t/**",
                "-\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae{@link SqlConnRunner}",
                "-\t * ",
                "-\t * @param runner {@link SqlConnRunner}",
                "-\t */",
                "-\tpublic void setRunner(SqlConnRunner runner) {",
                "-\t\tthis.runner = runner;",
                "-\t}",
                " \t// ---------------------------------------------------------------------------- Getters and Setters end",
                "@@ -140,20 +106,2 @@ public class Session extends AbstractDb implements Closeable {",
                " \t// ---------------------------------------------------------------------------- Transaction method start",
                "-\t/**",
                "-\t * \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e4\u00ba\u008b\u00e5\u008a\u00a1",
                "-\t * ",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e4\u00ba\u008b\u00e5\u008a\u00a1",
                "-\t * @throws DbRuntimeException SQLException\u00e5\u008c\u0085\u00e8\u00a3\u0085",
                "-\t * @since 3.2.3",
                "-\t */",
                "-\tpublic boolean isSupportTransaction() throws DbRuntimeException {",
                "-\t\tif (null == isSupportTransaction) {",
                "-\t\t\ttry {",
                "-\t\t\t\tisSupportTransaction = conn.getMetaData().supportsTransactions();",
                "-\t\t\t} catch (SQLException e) {",
                "-\t\t\t\tthrow new DbRuntimeException(e, \"Because of SQLException [{}], We can not know transation support or not.\", e.getMessage());",
                "-\t\t\t}",
                "-\t\t}",
                "-\t\treturn this.isSupportTransaction;",
                "-\t}",
                "-",
                " \t/**",
                "@@ -164,8 +112,4 @@ public class Session extends AbstractDb implements Closeable {",
                " \tpublic void beginTransaction() throws SQLException {",
                "-\t\tif (null == isSupportTransaction) {",
                "-\t\t\tisSupportTransaction = conn.getMetaData().supportsTransactions();",
                "-\t\t}",
                "-\t\tif (false == isSupportTransaction) {",
                "-\t\t\tthrow new SQLException(\"Transaction not supported for current database!\");",
                "-\t\t}",
                "+\t\tfinal Connection conn = getConnection();",
                "+\t\tcheckTransactionSupported(conn);",
                " \t\tconn.setAutoCommit(false);",
                "@@ -180,3 +124,3 @@ public class Session extends AbstractDb implements Closeable {",
                " \t\ttry {",
                "-\t\t\tconn.commit();",
                "+\t\t\tgetConnection().commit();",
                " \t\t} catch (SQLException e) {",
                "@@ -185,3 +129,3 @@ public class Session extends AbstractDb implements Closeable {",
                " \t\t\ttry {",
                "-\t\t\t\tconn.setAutoCommit(true); // \u00e4\u00ba\u008b\u00e5\u008a\u00a1\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00ef\u00bc\u008c\u00e6\u0081\u00a2\u00e5\u00a4\u008d\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e6\u008f\u0090\u00e4\u00ba\u00a4",
                "+\t\t\t\tgetConnection().setAutoCommit(true); // \u00e4\u00ba\u008b\u00e5\u008a\u00a1\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00ef\u00bc\u008c\u00e6\u0081\u00a2\u00e5\u00a4\u008d\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e6\u008f\u0090\u00e4\u00ba\u00a4",
                " \t\t\t} catch (SQLException e) {",
                "@@ -199,3 +143,3 @@ public class Session extends AbstractDb implements Closeable {",
                " \t\ttry {",
                "-\t\t\tconn.rollback();",
                "+\t\t\tgetConnection().rollback();",
                " \t\t} catch (SQLException e) {",
                "@@ -204,3 +148,3 @@ public class Session extends AbstractDb implements Closeable {",
                " \t\t\ttry {",
                "-\t\t\t\tconn.setAutoCommit(true); // \u00e4\u00ba\u008b\u00e5\u008a\u00a1\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00ef\u00bc\u008c\u00e6\u0081\u00a2\u00e5\u00a4\u008d\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e6\u008f\u0090\u00e4\u00ba\u00a4",
                "+\t\t\t\tgetConnection().setAutoCommit(true); // \u00e4\u00ba\u008b\u00e5\u008a\u00a1\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00ef\u00bc\u008c\u00e6\u0081\u00a2\u00e5\u00a4\u008d\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e6\u008f\u0090\u00e4\u00ba\u00a4",
                " \t\t\t} catch (SQLException e) {",
                "@@ -217,3 +161,3 @@ public class Session extends AbstractDb implements Closeable {",
                " \t\ttry {",
                "-\t\t\tconn.rollback();",
                "+\t\t\tgetConnection().rollback();",
                " \t\t} catch (Exception e) {",
                "@@ -222,3 +166,3 @@ public class Session extends AbstractDb implements Closeable {",
                " \t\t\ttry {",
                "-\t\t\t\tconn.setAutoCommit(true); // \u00e4\u00ba\u008b\u00e5\u008a\u00a1\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00ef\u00bc\u008c\u00e6\u0081\u00a2\u00e5\u00a4\u008d\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e6\u008f\u0090\u00e4\u00ba\u00a4",
                "+\t\t\t\tgetConnection().setAutoCommit(true); // \u00e4\u00ba\u008b\u00e5\u008a\u00a1\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00ef\u00bc\u008c\u00e6\u0081\u00a2\u00e5\u00a4\u008d\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e6\u008f\u0090\u00e4\u00ba\u00a4",
                " \t\t\t} catch (SQLException e) {",
                "@@ -237,3 +181,3 @@ public class Session extends AbstractDb implements Closeable {",
                " \t\ttry {",
                "-\t\t\tconn.rollback(savepoint);",
                "+\t\t\tgetConnection().rollback(savepoint);",
                " \t\t} catch (SQLException e) {",
                "@@ -242,3 +186,3 @@ public class Session extends AbstractDb implements Closeable {",
                " \t\t\ttry {",
                "-\t\t\t\tconn.setAutoCommit(true); // \u00e4\u00ba\u008b\u00e5\u008a\u00a1\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00ef\u00bc\u008c\u00e6\u0081\u00a2\u00e5\u00a4\u008d\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e6\u008f\u0090\u00e4\u00ba\u00a4",
                "+\t\t\t\tgetConnection().setAutoCommit(true); // \u00e4\u00ba\u008b\u00e5\u008a\u00a1\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00ef\u00bc\u008c\u00e6\u0081\u00a2\u00e5\u00a4\u008d\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e6\u008f\u0090\u00e4\u00ba\u00a4",
                " \t\t\t} catch (SQLException e) {",
                "@@ -257,3 +201,3 @@ public class Session extends AbstractDb implements Closeable {",
                " \t\ttry {",
                "-\t\t\tconn.rollback(savepoint);",
                "+\t\t\tgetConnection().rollback(savepoint);",
                " \t\t} catch (Exception e) {",
                "@@ -262,3 +206,3 @@ public class Session extends AbstractDb implements Closeable {",
                " \t\t\ttry {",
                "-\t\t\t\tconn.setAutoCommit(true); // \u00e4\u00ba\u008b\u00e5\u008a\u00a1\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00ef\u00bc\u008c\u00e6\u0081\u00a2\u00e5\u00a4\u008d\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e6\u008f\u0090\u00e4\u00ba\u00a4",
                "+\t\t\t\tgetConnection().setAutoCommit(true); // \u00e4\u00ba\u008b\u00e5\u008a\u00a1\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00ef\u00bc\u008c\u00e6\u0081\u00a2\u00e5\u00a4\u008d\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e6\u008f\u0090\u00e4\u00ba\u00a4",
                " \t\t\t} catch (SQLException e) {",
                "@@ -276,3 +220,3 @@ public class Session extends AbstractDb implements Closeable {",
                " \tpublic Savepoint setSavepoint() throws SQLException {",
                "-\t\treturn conn.setSavepoint();",
                "+\t\treturn getConnection().setSavepoint();",
                " \t}",
                "@@ -287,3 +231,3 @@ public class Session extends AbstractDb implements Closeable {",
                " \tpublic Savepoint setSavepoint(String name) throws SQLException {",
                "-\t\treturn conn.setSavepoint(name);",
                "+\t\treturn getConnection().setSavepoint(name);",
                " \t}",
                "@@ -303,6 +247,6 @@ public class Session extends AbstractDb implements Closeable {",
                " \tpublic void setTransactionIsolation(int level) throws SQLException {",
                "-\t\tif (conn.getMetaData().supportsTransactionIsolationLevel(level) == false) {",
                "+\t\tif (getConnection().getMetaData().supportsTransactionIsolationLevel(level) == false) {",
                " \t\t\tthrow new SQLException(StrUtil.format(\"Transaction isolation [{}] not support!\", level));",
                " \t\t}",
                "-\t\tconn.setTransactionIsolation(level);",
                "+\t\tgetConnection().setTransactionIsolation(level);",
                " \t}",
                "@@ -339,22 +283,10 @@ public class Session extends AbstractDb implements Closeable {",
                "-\t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00ef\u00bc\u008cSession\u00e4\u00b8\u00ad\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u0090\u008c\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e8\u00bf\u009e\u00e6\u008e\u00a5",
                "-\t * ",
                "-\t * @return {@link Connection}",
                "-\t * @throws SQLException SQL\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "-\t */",
                " \t@Override",
                " \tpublic Connection getConnection() throws SQLException {",
                "-\t\t// Session\u00e4\u00b8\u00ad\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u0090\u008c\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e6\u0093\u008d\u00e4\u00bd\u009c",
                "-\t\treturn this.conn;",
                "+\t\treturn ThreadLocalConnection.INSTANCE.get(this.ds);",
                " \t}",
                "-\t/**",
                "-\t * Session\u00e4\u00b8\u00ad\u00e4\u00b8\u008d\u00e5\u0085\u00b3\u00e9\u0097\u00ad\u00e8\u00bf\u009e\u00e6\u008e\u00a5",
                "-\t * ",
                "-\t * @param conn {@link Connection}",
                "-\t */",
                " \t@Override",
                " \tpublic void closeConnection(Connection conn) {",
                "-\t\t// Session\u00e4\u00b8\u00ad\u00e4\u00b8\u008d\u00e5\u0085\u00b3\u00e9\u0097\u00ad\u00e8\u00bf\u009e\u00e6\u008e\u00a5",
                "+\t\tThreadLocalConnection.INSTANCE.close(this.ds);",
                " \t}",
                "@@ -363,3 +295,3 @@ public class Session extends AbstractDb implements Closeable {",
                " \tpublic void close() {",
                "-\t\tDbUtil.close(conn);",
                "+\t\tcloseConnection(null);",
                " \t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/SqlRunner.java b/hutool-db/src/main/java/cn/hutool/db/SqlRunner.java",
                "index 56dd60693..f4e90e9a1 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/SqlRunner.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/SqlRunner.java",
                "@@ -19,6 +19,6 @@ import cn.hutool.db.sql.Wrapper;",
                "  * @author Luxiaolei",
                "- * ",
                "+ * @deprecated \u00e8\u00af\u00b7\u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link Db}",
                "  */",
                "+@Deprecated",
                " public class SqlRunner extends AbstractDb{",
                "-\tprivate DataSource ds;",
                "@@ -88,7 +88,6 @@ public class SqlRunner extends AbstractDb{",
                " \t * @param ds \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                "-\t * @param dialect \u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                "+\t * @param driverClassName \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e9\u00a9\u00b1\u00e5\u008a\u00a8\u00e7\u00b1\u00bb\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e8\u00af\u0086\u00e5\u0088\u00ab\u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                " \t */",
                "-\tpublic SqlRunner(DataSource ds, Dialect dialect) {",
                "-\t\tthis.runner = new SqlConnRunner(dialect);",
                "-\t\tthis.ds = ds;",
                "+\tpublic SqlRunner(DataSource ds, String driverClassName) {",
                "+\t\tthis(ds, DialectFactory.newDialect(driverClassName));",
                " \t}",
                "@@ -98,7 +97,6 @@ public class SqlRunner extends AbstractDb{",
                " \t * @param ds \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                "-\t * @param driverClassName \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e9\u00a9\u00b1\u00e5\u008a\u00a8\u00e7\u00b1\u00bb\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e8\u00af\u0086\u00e5\u0088\u00ab\u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                "+\t * @param dialect \u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                " \t */",
                "-\tpublic SqlRunner(DataSource ds, String driverClassName) {",
                "-\t\tthis.runner = new SqlConnRunner(driverClassName);",
                "-\t\tthis.ds = ds;",
                "+\tpublic SqlRunner(DataSource ds, Dialect dialect) {",
                "+\t\tsuper(ds, dialect);",
                " \t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ThreadLocalConnection.java b/hutool-db/src/main/java/cn/hutool/db/ThreadLocalConnection.java",
                "index a70bf6736..54a90fb74 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ThreadLocalConnection.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ThreadLocalConnection.java",
                "@@ -37,3 +37,3 @@ public enum ThreadLocalConnection {",
                " \t}",
                "-",
                "+\t",
                " \t/**",
                "@@ -42,8 +42,8 @@ public enum ThreadLocalConnection {",
                " \t * @param ds \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                "-\t * @param connToClose \u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e5\u0085\u00b3\u00e9\u0097\u00ad\u00e7\u009a\u0084\u00e8\u00bf\u009e\u00e6\u008e\u00a5",
                "+\t * @since 4.1.7",
                " \t */",
                "-\tpublic void close(DataSource ds, Connection connToClose) {",
                "+\tpublic void close(DataSource ds) {",
                " \t\tGroupedConnection groupedConnection = threadLocal.get();",
                " \t\tif (null != groupedConnection) {",
                "-\t\t\tgroupedConnection.close(ds, connToClose);",
                "+\t\t\tgroupedConnection.close(ds);",
                " \t\t}",
                "@@ -74,5 +74,6 @@ public enum ThreadLocalConnection {",
                " \t\t}",
                "-",
                "+\t\t",
                " \t\t/**",
                "-\t\t * \u00e5\u0085\u00b3\u00e9\u0097\u00ad\u00e5\u00b9\u00b6\u00e7\u00a7\u00bb\u00e9\u0099\u00a4Connection",
                "+\t\t * \u00e5\u0085\u00b3\u00e9\u0097\u00ad\u00e5\u00b9\u00b6\u00e7\u00a7\u00bb\u00e9\u0099\u00a4Connection<br>",
                "+\t\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00a4\u0084\u00e4\u00ba\u008e\u00e4\u00ba\u008b\u00e5\u008a\u00a1\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e4\u00b8\u008d\u00e8\u00bf\u009b\u00e8\u00a1\u008c\u00e4\u00bb\u00bb\u00e4\u00bd\u0095\u00e6\u0093\u008d\u00e4\u00bd\u009c",
                " \t\t * ",
                "@@ -81,6 +82,7 @@ public enum ThreadLocalConnection {",
                " \t\t */",
                "-\t\tpublic GroupedConnection close(DataSource ds, Connection connToClose) {",
                "-\t\t\tif(null != connToClose) {",
                "+\t\tpublic GroupedConnection close(DataSource ds) {",
                "+\t\t\tfinal Connection conn = connMap.get(ds);",
                "+\t\t\tif(null != conn) {",
                " \t\t\t\ttry {",
                "-\t\t\t\t\tif(false == connToClose.getAutoCommit()) {",
                "+\t\t\t\t\tif(false == conn.getAutoCommit()) {",
                " \t\t\t\t\t\t//\u00e9\u009d\u009e\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e6\u008f\u0090\u00e4\u00ba\u00a4\u00e4\u00ba\u008b\u00e5\u008a\u00a1\u00e7\u009a\u0084\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e5\u0081\u009a\u00e5\u0085\u00b3\u00e9\u0097\u00ad\u00ef\u00bc\u0088\u00e5\u008f\u00af\u00e8\u0083\u00bd\u00e5\u00a4\u0084\u00e4\u00ba\u008e\u00e4\u00ba\u008b\u00e5\u008a\u00a1\u00e4\u00b8\u00ad\u00ef\u00bc\u0089",
                "@@ -91,11 +93,5 @@ public enum ThreadLocalConnection {",
                " \t\t\t\t}",
                "-\t\t\t\t",
                "-\t\t\t\tConnection conn = connMap.get(ds);",
                "-\t\t\t\tif (null != conn && conn.equals(connToClose)) {",
                "-\t\t\t\t\t//\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e4\u00b8\u00ba\u00e5\u0090\u008c\u00e4\u00b8\u0080\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u0097\u00b6\u00e7\u00a7\u00bb\u00e9\u0099\u00a4",
                "-\t\t\t\t\tconnMap.remove(ds);",
                "-\t\t\t\t}",
                "+\t\t\t\tconnMap.remove(ds);",
                "+\t\t\t\tDbUtil.close(conn);",
                " \t\t\t}",
                "-\t\t\t",
                "-\t\t\tDbUtil.close(connToClose);",
                " \t\t\treturn this;",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/dialect/impl/OracleDialect.java b/hutool-db/src/main/java/cn/hutool/db/dialect/impl/OracleDialect.java",
                "index 62152f25b..6709d62c4 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/dialect/impl/OracleDialect.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/dialect/impl/OracleDialect.java",
                "@@ -22,5 +22,5 @@ public class OracleDialect extends AnsiSqlDialect{",
                " \t\t\t.insertPreFragment(\"SELECT * FROM ( SELECT row_.*, rownum rownum_ from ( \")",
                "-\t\t\t.append(\" ) row_ where rownum < \").append(startEnd[1])//",
                "+\t\t\t.append(\" ) row_ where rownum <= \").append(startEnd[1])//",
                " \t\t\t.append(\") table_alias\")//",
                "-\t\t\t.append(\" where table_alias.rownum_ >= \").append(startEnd[0]);//",
                "+\t\t\t.append(\" where table_alias.rownum_ > \").append(startEnd[0]);//",
                " \t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/sql/SqlLog.java b/hutool-db/src/main/java/cn/hutool/db/sql/SqlLog.java",
                "index f57db84d6..3159d0853 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/sql/SqlLog.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/sql/SqlLog.java",
                "@@ -13,3 +13,3 @@ import cn.hutool.log.level.Level;",
                " public enum SqlLog {",
                "-\tINSTASNCE(false, false, false);",
                "+\tINSTASNCE;",
                "@@ -24,14 +24,3 @@ public enum SqlLog {",
                " \t/** \u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e6\u0097\u00a5\u00e5\u00bf\u0097\u00e7\u00ba\u00a7\u00e5\u0088\u00ab */",
                "-\tprivate Level level;",
                "-\t",
                "-\t/**",
                "-\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0\u00ef\u00bc\u008c\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e5\u0085\u00a8\u00e5\u00b1\u0080\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00ef\u00bc\u009a\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e9\u0080\u009a\u00e8\u00bf\u0087debug\u00e6\u0097\u00a5\u00e5\u00bf\u0097\u00e6\u0098\u00be\u00e7\u00a4\u00baSQL",
                "-\t * ",
                "-\t * @param isShowSql \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0098\u00be\u00e7\u00a4\u00baSQL",
                "-\t * @param isFormatSql \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e5\u008c\u0096\u00e6\u0098\u00be\u00e7\u00a4\u00ba\u00e7\u009a\u0084SQL",
                "-\t * @param isShowParams \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0089\u0093\u00e5\u008d\u00b0\u00e5\u008f\u0082\u00e6\u0095\u00b0",
                "-\t */",
                "-\tprivate SqlLog(boolean isShowSql, boolean isFormatSql, boolean isShowParams) {",
                "-\t\tinit(isShowSql, isFormatSql, isShowParams, Level.DEBUG);",
                "-\t}",
                "+\tprivate Level level = Level.DEBUG;"
            ],
            "changed_files": [
                "hutool-db/src/main/java/cn/hutool/db/AbstractDb.java",
                "hutool-db/src/main/java/cn/hutool/db/ActiveEntity.java",
                "hutool-db/src/main/java/cn/hutool/db/DaoTemplate.java",
                "hutool-db/src/main/java/cn/hutool/db/Db.java",
                "hutool-db/src/main/java/cn/hutool/db/DbUtil.java",
                "hutool-db/src/main/java/cn/hutool/db/Session.java",
                "hutool-db/src/main/java/cn/hutool/db/SqlRunner.java",
                "hutool-db/src/main/java/cn/hutool/db/ThreadLocalConnection.java",
                "hutool-db/src/main/java/cn/hutool/db/dialect/impl/OracleDialect.java",
                "hutool-db/src/main/java/cn/hutool/db/sql/SqlLog.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e2999f861bf3619129e9be77a08c47b024c2d984"
                ]
            ],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6049364e8b6826c23851d2c0978728b01d732f6b",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1539185303,
            "hunks": 7,
            "message": "fix caller",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/caller/SecurityManagerCaller.java b/hutool-core/src/main/java/cn/hutool/core/lang/caller/SecurityManagerCaller.java",
                "index ef9989187..b7b4a9411 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/lang/caller/SecurityManagerCaller.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/caller/SecurityManagerCaller.java",
                "@@ -13,3 +13,7 @@ public class SecurityManagerCaller extends SecurityManager implements Caller {",
                " \tpublic Class<?> getCaller() {",
                "-\t\treturn getClassContext()[OFFSET + 1];",
                "+\t\tfinal Class<?>[] context = getClassContext();",
                "+\t\tif ((OFFSET + 1) < context.length) {",
                "+\t\t\treturn context[OFFSET + 1];",
                "+\t\t}",
                "+\t\treturn null;",
                " \t}",
                "@@ -18,3 +22,7 @@ public class SecurityManagerCaller extends SecurityManager implements Caller {",
                " \tpublic Class<?> getCallerCaller() {",
                "-\t\treturn getClassContext()[OFFSET + 2];",
                "+\t\tfinal Class<?>[] context = getClassContext();",
                "+\t\tif ((OFFSET + 2) < context.length) {",
                "+\t\t\treturn context[OFFSET + 2];",
                "+\t\t}",
                "+\t\treturn null;",
                " \t}",
                "@@ -33,5 +41,7 @@ public class SecurityManagerCaller extends SecurityManager implements Caller {",
                " \t\tfinal Class<?>[] classes = getClassContext();",
                "-\t\tfor (Class<?> contextClass : classes) {",
                "-\t\t\tif (contextClass.equals(clazz)) {",
                "-\t\t\t\treturn true;",
                "+\t\tif(null != classes) {",
                "+\t\t\tfor (Class<?> contextClass : classes) {",
                "+\t\t\t\tif (contextClass.equals(clazz)) {",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                " \t\t\t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/caller/StackTraceCaller.java b/hutool-core/src/main/java/cn/hutool/core/lang/caller/StackTraceCaller.java",
                "index 1c80c006d..30a1f28f7 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/lang/caller/StackTraceCaller.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/caller/StackTraceCaller.java",
                "@@ -14,3 +14,7 @@ public class StackTraceCaller implements Caller {",
                " \tpublic Class<?> getCaller() {",
                "-\t\tfinal String className = Thread.currentThread().getStackTrace()[OFFSET + 1].getClassName();",
                "+\t\tfinal StackTraceElement[] stackTrace = Thread.currentThread().getStackTrace();",
                "+\t\tif (null == stackTrace || (OFFSET + 1) >= stackTrace.length) {",
                "+\t\t\treturn null;",
                "+\t\t}",
                "+\t\tfinal String className = stackTrace[OFFSET + 1].getClassName();",
                " \t\ttry {",
                "@@ -24,3 +28,7 @@ public class StackTraceCaller implements Caller {",
                " \tpublic Class<?> getCallerCaller() {",
                "-\t\tfinal String className = Thread.currentThread().getStackTrace()[OFFSET + 2].getClassName();",
                "+\t\tfinal StackTraceElement[] stackTrace = Thread.currentThread().getStackTrace();",
                "+\t\tif (null == stackTrace || (OFFSET + 2) >= stackTrace.length) {",
                "+\t\t\treturn null;",
                "+\t\t}",
                "+\t\tfinal String className = stackTrace[OFFSET + 2].getClassName();",
                " \t\ttry {",
                "@@ -34,3 +42,7 @@ public class StackTraceCaller implements Caller {",
                " \tpublic Class<?> getCaller(int depth) {",
                "-\t\tfinal String className = Thread.currentThread().getStackTrace()[OFFSET + depth].getClassName();",
                "+\t\tfinal StackTraceElement[] stackTrace = Thread.currentThread().getStackTrace();",
                "+\t\tif (null == stackTrace || (OFFSET + depth) >= stackTrace.length) {",
                "+\t\t\treturn null;",
                "+\t\t}",
                "+\t\tfinal String className = stackTrace[OFFSET + depth].getClassName();",
                " \t\ttry {",
                "@@ -44,5 +56,8 @@ public class StackTraceCaller implements Caller {",
                " \tpublic boolean isCalledBy(Class<?> clazz) {",
                "-\t\tfor (final StackTraceElement element : Thread.currentThread().getStackTrace()) {",
                "-\t\t\tif (element.getClassName().equals(clazz.getName())) {",
                "-\t\t\t\treturn true;",
                "+\t\tfinal StackTraceElement[] stackTrace = Thread.currentThread().getStackTrace();",
                "+\t\tif(null != stackTrace) {",
                "+\t\t\tfor (final StackTraceElement element : stackTrace) {",
                "+\t\t\t\tif (element.getClassName().equals(clazz.getName())) {",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                " \t\t\t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/lang/caller/SecurityManagerCaller.java",
                "hutool-core/src/main/java/cn/hutool/core/lang/caller/StackTraceCaller.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "2c9c877759127789f3904a40910ba78fb218690a"
                ]
            ],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8b6a8e7559a8b33520919ac5db6f17021ff92dea",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1533458325,
            "hunks": 0,
            "message": "Merge pull request #142 from MikaGuraNTK/v4-dev \u00e5\u0085\u00bc\u00e5\u00ae\u00b9android\u00e4\u00bd\u008e\u00e7\u0089\u0088\u00e6\u009c\u00ac\u00e6\u009c\u0089\u00e4\u00ba\u009bssl\u00e5\u008d\u008f\u00e8\u00ae\u00ae\u00e6\u009c\u00aa\u00e5\u00bc\u0080\u00e5\u0090\u00af",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "142": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 142",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "65bba4098a34f0ea2016f1db0c974d186f5bfe72",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537034028,
            "hunks": 14,
            "message": "add IdUtil",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/Snowflake.java b/hutool-core/src/main/java/cn/hutool/core/lang/Snowflake.java",
                "index 49e2e5731..fcd75cddb 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/lang/Snowflake.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/Snowflake.java",
                "@@ -6,3 +6,5 @@ import cn.hutool.core.date.SystemClock;",
                "  * Twitter\u00e7\u009a\u0084Snowflake \u00e7\u00ae\u0097\u00e6\u00b3\u0095<br>",
                "- * \u00e5\u0088\u0086\u00e5\u00b8\u0083\u00e5\u00bc\u008f\u00e7\u00b3\u00bb\u00e7\u00bb\u009f\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e6\u009c\u0089\u00e4\u00b8\u0080\u00e4\u00ba\u009b\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u0085\u00a8\u00e5\u00b1\u0080\u00e5\u0094\u00af\u00e4\u00b8\u0080ID\u00e7\u009a\u0084\u00e5\u009c\u00ba\u00e6\u0099\u00af\u00ef\u00bc\u008c\u00e6\u009c\u0089\u00e4\u00ba\u009b\u00e6\u0097\u00b6\u00e5\u0080\u0099\u00e6\u0088\u0091\u00e4\u00bb\u00ac\u00e5\u00b8\u008c\u00e6\u009c\u009b\u00e8\u0083\u00bd\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e4\u00b8\u0080\u00e7\u00a7\u008d\u00e7\u00ae\u0080\u00e5\u008d\u0095\u00e4\u00b8\u0080\u00e4\u00ba\u009b\u00e7\u009a\u0084ID\u00ef\u00bc\u008c\u00e5\u00b9\u00b6\u00e4\u00b8\u0094\u00e5\u00b8\u008c\u00e6\u009c\u009bID\u00e8\u0083\u00bd\u00e5\u00a4\u009f\u00e6\u008c\u0089\u00e7\u0085\u00a7\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u009c\u0089\u00e5\u00ba\u008f\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e3\u0080\u0082<br>",
                "+ * \u00e5\u0088\u0086\u00e5\u00b8\u0083\u00e5\u00bc\u008f\u00e7\u00b3\u00bb\u00e7\u00bb\u009f\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e6\u009c\u0089\u00e4\u00b8\u0080\u00e4\u00ba\u009b\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u0085\u00a8\u00e5\u00b1\u0080\u00e5\u0094\u00af\u00e4\u00b8\u0080ID\u00e7\u009a\u0084\u00e5\u009c\u00ba\u00e6\u0099\u00af\u00ef\u00bc\u008c\u00e6\u009c\u0089\u00e4\u00ba\u009b\u00e6\u0097\u00b6\u00e5\u0080\u0099\u00e6\u0088\u0091\u00e4\u00bb\u00ac\u00e5\u00b8\u008c\u00e6\u009c\u009b\u00e8\u0083\u00bd\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e4\u00b8\u0080\u00e7\u00a7\u008d\u00e7\u00ae\u0080\u00e5\u008d\u0095\u00e4\u00b8\u0080\u00e4\u00ba\u009b\u00e7\u009a\u0084ID\u00ef\u00bc\u008c\u00e5\u00b9\u00b6\u00e4\u00b8\u0094\u00e5\u00b8\u008c\u00e6\u009c\u009bID\u00e8\u0083\u00bd\u00e5\u00a4\u009f\u00e6\u008c\u0089\u00e7\u0085\u00a7\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u009c\u0089\u00e5\u00ba\u008f\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e3\u0080\u0082",
                "+ * ",
                "+ * <p>",
                "  * snowflake\u00e7\u009a\u0084\u00e7\u00bb\u0093\u00e6\u009e\u0084\u00e5\u00a6\u0082\u00e4\u00b8\u008b(\u00e6\u00af\u008f\u00e9\u0083\u00a8\u00e5\u0088\u0086\u00e7\u0094\u00a8-\u00e5\u0088\u0086\u00e5\u00bc\u0080):<br>",
                "@@ -15,4 +17,5 @@ import cn.hutool.core.date.SystemClock;",
                "  * \u00e7\u0084\u00b6\u00e5\u0090\u008e\u00e6\u0098\u00af5\u00e4\u00bd\u008ddatacenterId\u00e5\u0092\u008c5\u00e4\u00bd\u008dworkerId(10\u00e4\u00bd\u008d\u00e7\u009a\u0084\u00e9\u0095\u00bf\u00e5\u00ba\u00a6\u00e6\u009c\u0080\u00e5\u00a4\u009a\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e9\u0083\u00a8\u00e7\u00bd\u00b21024\u00e4\u00b8\u00aa\u00e8\u008a\u0082\u00e7\u0082\u00b9\u00ef\u00bc\u0089<br>",
                "- * \u00e6\u009c\u0080\u00e5\u0090\u008e12\u00e4\u00bd\u008d\u00e6\u0098\u00af\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00e5\u0086\u0085\u00e7\u009a\u0084\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008812\u00e4\u00bd\u008d\u00e7\u009a\u0084\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e5\u008f\u00b7\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e6\u00af\u008f\u00e4\u00b8\u00aa\u00e8\u008a\u0082\u00e7\u0082\u00b9\u00e6\u00af\u008f\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00e4\u00ba\u00a7\u00e7\u0094\u009f4096\u00e4\u00b8\u00aaID\u00e5\u00ba\u008f\u00e5\u008f\u00b7\u00ef\u00bc\u0089<br>",
                "+ * \u00e6\u009c\u0080\u00e5\u0090\u008e12\u00e4\u00bd\u008d\u00e6\u0098\u00af\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00e5\u0086\u0085\u00e7\u009a\u0084\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008812\u00e4\u00bd\u008d\u00e7\u009a\u0084\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e5\u008f\u00b7\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e6\u00af\u008f\u00e4\u00b8\u00aa\u00e8\u008a\u0082\u00e7\u0082\u00b9\u00e6\u00af\u008f\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00e4\u00ba\u00a7\u00e7\u0094\u009f4096\u00e4\u00b8\u00aaID\u00e5\u00ba\u008f\u00e5\u008f\u00b7\u00ef\u00bc\u0089",
                "  * ",
                "+ * <p>",
                "  * \u00e5\u008f\u0082\u00e8\u0080\u0083\u00ef\u00bc\u009ahttp://www.cnblogs.com/relucent/p/4955340.html",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/IdUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/IdUtil.java",
                "new file mode 100644",
                "index 000000000..ec592e3d6",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/IdUtil.java",
                "@@ -0,0 +1,85 @@",
                "+package cn.hutool.core.util;",
                "+",
                "+import cn.hutool.core.lang.ObjectId;",
                "+import cn.hutool.core.lang.Snowflake;",
                "+import cn.hutool.core.lang.UUID;",
                "+",
                "+/**",
                "+ * ID\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e5\u0099\u00a8\u00e5\u00b7\u00a5\u00e5\u0085\u00b7\u00e7\u00b1\u00bb\u00ef\u00bc\u008c\u00e6\u00ad\u00a4\u00e5\u00b7\u00a5\u00e5\u0085\u00b7\u00e7\u00b1\u00bb\u00e4\u00b8\u00ad\u00e4\u00b8\u00bb\u00e8\u00a6\u0081\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00ef\u00bc\u009a",
                "+ * ",
                "+ * <pre>",
                "+ * 1. \u00e5\u0094\u00af\u00e4\u00b8\u0080\u00e6\u0080\u00a7ID\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e5\u0099\u00a8\u00ef\u00bc\u009aUUID\u00e3\u0080\u0081ObjectId\u00ef\u00bc\u0088MongoDB\u00ef\u00bc\u0089\u00e3\u0080\u0081Snowflake",
                "+ * </pre>",
                "+ * ",
                "+ * <p>",
                "+ * ID\u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e6\u0096\u0087\u00e7\u00ab\u00a0\u00e8\u00a7\u0081\u00ef\u00bc\u009ahttp://calvin1978.blogcn.com/articles/uuid.html",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.13",
                "+ */",
                "+public class IdUtil {",
                "+",
                "+\t// ------------------------------------------------------------------- UUID",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e9\u009a\u008f\u00e6\u009c\u00baUUID",
                "+\t * ",
                "+\t * @return \u00e9\u009a\u008f\u00e6\u009c\u00baUUID",
                "+\t */",
                "+\tpublic static String randomUUID() {",
                "+\t\treturn UUID.randomUUID().toString();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e7\u00ae\u0080\u00e5\u008c\u0096\u00e7\u009a\u0084UUID\u00ef\u00bc\u008c\u00e5\u008e\u00bb\u00e6\u008e\u0089\u00e4\u00ba\u0086\u00e6\u00a8\u00aa\u00e7\u00ba\u00bf",
                "+\t * ",
                "+\t * @return \u00e7\u00ae\u0080\u00e5\u008c\u0096\u00e7\u009a\u0084UUID\u00ef\u00bc\u008c\u00e5\u008e\u00bb\u00e6\u008e\u0089\u00e4\u00ba\u0086\u00e6\u00a8\u00aa\u00e7\u00ba\u00bf",
                "+\t */",
                "+\tpublic static String simpleUUID() {",
                "+\t\treturn UUID.randomUUID().toString(true);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00baMongoDB ID\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e7\u00ad\u0096\u00e7\u0095\u00a5\u00e5\u00ae\u009e\u00e7\u008e\u00b0<br>",
                "+\t * ObjectId\u00e7\u0094\u00b1\u00e4\u00bb\u00a5\u00e4\u00b8\u008b\u00e5\u0087\u00a0\u00e9\u0083\u00a8\u00e5\u0088\u0086\u00e7\u00bb\u0084\u00e6\u0088\u0090\u00ef\u00bc\u009a",
                "+\t * ",
                "+\t * <pre>",
                "+\t * 1. Time \u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3\u00e3\u0080\u0082",
                "+\t * 2. Machine \u00e6\u0089\u0080\u00e5\u009c\u00a8\u00e4\u00b8\u00bb\u00e6\u009c\u00ba\u00e7\u009a\u0084\u00e5\u0094\u00af\u00e4\u00b8\u0080\u00e6\u00a0\u0087\u00e8\u00af\u0086\u00e7\u00ac\u00a6\u00ef\u00bc\u008c\u00e4\u00b8\u0080\u00e8\u0088\u00ac\u00e6\u0098\u00af\u00e6\u009c\u00ba\u00e5\u0099\u00a8\u00e4\u00b8\u00bb\u00e6\u009c\u00ba\u00e5\u0090\u008d\u00e7\u009a\u0084\u00e6\u0095\u00a3\u00e5\u0088\u0097\u00e5\u0080\u00bc\u00e3\u0080\u0082",
                "+\t * 3. PID \u00e8\u00bf\u009b\u00e7\u00a8\u008bID\u00e3\u0080\u0082\u00e7\u00a1\u00ae\u00e4\u00bf\u009d\u00e5\u0090\u008c\u00e4\u00b8\u0080\u00e6\u009c\u00ba\u00e5\u0099\u00a8\u00e4\u00b8\u00ad\u00e4\u00b8\u008d\u00e5\u0086\u00b2\u00e7\u00aa\u0081",
                "+\t * 4. INC \u00e8\u0087\u00aa\u00e5\u00a2\u009e\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00e5\u0099\u00a8\u00e3\u0080\u0082\u00e7\u00a1\u00ae\u00e4\u00bf\u009d\u00e5\u0090\u008c\u00e4\u00b8\u0080\u00e7\u00a7\u0092\u00e5\u0086\u0085\u00e4\u00ba\u00a7\u00e7\u0094\u009fobjectId\u00e7\u009a\u0084\u00e5\u0094\u00af\u00e4\u00b8\u0080\u00e6\u0080\u00a7\u00e3\u0080\u0082",
                "+\t * </pre>",
                "+\t * ",
                "+\t * \u00e5\u008f\u0082\u00e8\u0080\u0083\u00ef\u00bc\u009ahttp://blog.csdn.net/qxc1281/article/details/54021882",
                "+\t * ",
                "+\t * @return {@link ObjectId}",
                "+\t */",
                "+\tpublic static ObjectId createObjectId() {",
                "+\t\treturn new ObjectId();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00baTwitter\u00e7\u009a\u0084Snowflake \u00e7\u00ae\u0097\u00e6\u00b3\u0095<br>",
                "+\t * \u00e5\u0088\u0086\u00e5\u00b8\u0083\u00e5\u00bc\u008f\u00e7\u00b3\u00bb\u00e7\u00bb\u009f\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e6\u009c\u0089\u00e4\u00b8\u0080\u00e4\u00ba\u009b\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u0085\u00a8\u00e5\u00b1\u0080\u00e5\u0094\u00af\u00e4\u00b8\u0080ID\u00e7\u009a\u0084\u00e5\u009c\u00ba\u00e6\u0099\u00af\u00ef\u00bc\u008c\u00e6\u009c\u0089\u00e4\u00ba\u009b\u00e6\u0097\u00b6\u00e5\u0080\u0099\u00e6\u0088\u0091\u00e4\u00bb\u00ac\u00e5\u00b8\u008c\u00e6\u009c\u009b\u00e8\u0083\u00bd\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e4\u00b8\u0080\u00e7\u00a7\u008d\u00e7\u00ae\u0080\u00e5\u008d\u0095\u00e4\u00b8\u0080\u00e4\u00ba\u009b\u00e7\u009a\u0084ID\u00ef\u00bc\u008c\u00e5\u00b9\u00b6\u00e4\u00b8\u0094\u00e5\u00b8\u008c\u00e6\u009c\u009bID\u00e8\u0083\u00bd\u00e5\u00a4\u009f\u00e6\u008c\u0089\u00e7\u0085\u00a7\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u009c\u0089\u00e5\u00ba\u008f\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e3\u0080\u0082",
                "+\t * ",
                "+\t * <p>",
                "+\t * snowflake\u00e7\u009a\u0084\u00e7\u00bb\u0093\u00e6\u009e\u0084\u00e5\u00a6\u0082\u00e4\u00b8\u008b(\u00e6\u00af\u008f\u00e9\u0083\u00a8\u00e5\u0088\u0086\u00e7\u0094\u00a8-\u00e5\u0088\u0086\u00e5\u00bc\u0080):<br>",
                "+\t * ",
                "+\t * <pre>",
                "+\t * 0 - 0000000000 0000000000 0000000000 0000000000 0 - 00000 - 00000 - 000000000000",
                "+\t * </pre>",
                "+\t * ",
                "+\t * \u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00bd\u008d\u00e4\u00b8\u00ba\u00e6\u009c\u00aa\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00ef\u00bc\u008c\u00e6\u008e\u00a5\u00e4\u00b8\u008b\u00e6\u009d\u00a5\u00e7\u009a\u008441\u00e4\u00bd\u008d\u00e4\u00b8\u00ba\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00e7\u00ba\u00a7\u00e6\u0097\u00b6\u00e9\u0097\u00b4(41\u00e4\u00bd\u008d\u00e7\u009a\u0084\u00e9\u0095\u00bf\u00e5\u00ba\u00a6\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e4\u00bd\u00bf\u00e7\u0094\u00a869\u00e5\u00b9\u00b4)<br>",
                "+\t * \u00e7\u0084\u00b6\u00e5\u0090\u008e\u00e6\u0098\u00af5\u00e4\u00bd\u008ddatacenterId\u00e5\u0092\u008c5\u00e4\u00bd\u008dworkerId(10\u00e4\u00bd\u008d\u00e7\u009a\u0084\u00e9\u0095\u00bf\u00e5\u00ba\u00a6\u00e6\u009c\u0080\u00e5\u00a4\u009a\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e9\u0083\u00a8\u00e7\u00bd\u00b21024\u00e4\u00b8\u00aa\u00e8\u008a\u0082\u00e7\u0082\u00b9\u00ef\u00bc\u0089<br>",
                "+\t * \u00e6\u009c\u0080\u00e5\u0090\u008e12\u00e4\u00bd\u008d\u00e6\u0098\u00af\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00e5\u0086\u0085\u00e7\u009a\u0084\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008812\u00e4\u00bd\u008d\u00e7\u009a\u0084\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e5\u008f\u00b7\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e6\u00af\u008f\u00e4\u00b8\u00aa\u00e8\u008a\u0082\u00e7\u0082\u00b9\u00e6\u00af\u008f\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00e4\u00ba\u00a7\u00e7\u0094\u009f4096\u00e4\u00b8\u00aaID\u00e5\u00ba\u008f\u00e5\u008f\u00b7\u00ef\u00bc\u0089",
                "+\t * ",
                "+\t * <p>",
                "+\t * \u00e5\u008f\u0082\u00e8\u0080\u0083\u00ef\u00bc\u009ahttp://www.cnblogs.com/relucent/p/4955340.html",
                "+\t * ",
                "+\t * @param workerId \u00e7\u00bb\u0088\u00e7\u00ab\u00afID",
                "+\t * @param datacenterId \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e4\u00b8\u00ad\u00e5\u00bf\u0083ID",
                "+\t * @return {@link Snowflake}",
                "+\t */",
                "+\tpublic static Snowflake createSnowflake(long workerId, long datacenterId) {",
                "+\t\treturn new Snowflake(workerId, datacenterId);",
                "+\t}",
                "+}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java",
                "index f0877aca3..d4443bb0d 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java",
                "@@ -450,3 +450,5 @@ public class RandomUtil {",
                " \t * @return \u00e9\u009a\u008f\u00e6\u009c\u00baUUID",
                "+\t * @deprecated \u00e8\u00af\u00b7\u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link IdUtil#randomUUID()}",
                " \t */",
                "+\t@Deprecated",
                " \tpublic static String randomUUID() {",
                "@@ -460,3 +462,5 @@ public class RandomUtil {",
                " \t * @since 3.2.2",
                "+\t * @deprecated \u00e8\u00af\u00b7\u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link IdUtil#simpleUUID()}",
                " \t */",
                "+\t@Deprecated",
                " \tpublic static String simpleUUID() {",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java",
                "index 376c820a4..c65839c90 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java",
                "@@ -3625,6 +3625,6 @@ public class StrUtil {",
                " \t * @since 4.0.10",
                "-\t * @see RandomUtil#randomUUID()",
                "+\t * @see IdUtil#randomUUID()",
                " \t */",
                " \tpublic static String uuid() {",
                "-\t\treturn RandomUtil.randomUUID();",
                "+\t\treturn IdUtil.randomUUID();",
                " \t}",
                "diff --git a/hutool-crypto/src/main/java/cn/hutool/crypto/SecureUtil.java b/hutool-crypto/src/main/java/cn/hutool/crypto/SecureUtil.java",
                "index dcdf30153..a98e72946 100644",
                "--- a/hutool-crypto/src/main/java/cn/hutool/crypto/SecureUtil.java",
                "+++ b/hutool-crypto/src/main/java/cn/hutool/crypto/SecureUtil.java",
                "@@ -33,2 +33,3 @@ import cn.hutool.core.map.MapUtil;",
                " import cn.hutool.core.util.CharsetUtil;",
                "+import cn.hutool.core.util.IdUtil;",
                " import cn.hutool.core.util.RandomUtil;",
                "@@ -922,5 +923,7 @@ public final class SecureUtil {",
                " \t * @return \u00e7\u00ae\u0080\u00e5\u008c\u0096\u00e7\u009a\u0084UUID\u00ef\u00bc\u008c\u00e5\u008e\u00bb\u00e6\u008e\u0089\u00e4\u00ba\u0086\u00e6\u00a8\u00aa\u00e7\u00ba\u00bf",
                "+\t * @deprecated \u00e8\u00af\u00b7\u00e4\u00bd\u00bf\u00e7\u0094\u00a8 {@link IdUtil#simpleUUID()}",
                " \t */",
                "+\t@Deprecated",
                " \tpublic static String simpleUUID() {",
                "-\t\treturn RandomUtil.simpleUUID();",
                "+\t\treturn IdUtil.simpleUUID();",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/lang/Snowflake.java",
                "hutool-core/src/main/java/cn/hutool/core/util/IdUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java",
                "hutool-crypto/src/main/java/cn/hutool/crypto/SecureUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ea01b4b8e9bf04e9eb86d36a81e6c8239ce1ccf1",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1532748819,
            "hunks": 14,
            "message": "fix cookie and add issue template",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ReUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ReUtil.java",
                "index 40fb3cc7f..bef5c7ac5 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ReUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ReUtil.java",
                "@@ -101,3 +101,3 @@ public class ReUtil {",
                " \t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00ef\u00bc\u008c\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e5\u0088\u0086\u00e7\u00bb\u00840\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e6\u0095\u00b4\u00e4\u00b8\u00aa\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e5\u0086\u0085\u00e5\u00ae\u00b9\u00ef\u00bc\u008c1\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u008b\u00ac\u00e5\u008f\u00b7\u00e5\u0088\u0086\u00e7\u00bb\u0084\u00e5\u0086\u0085\u00e5\u00ae\u00b9\u00ef\u00bc\u008c\u00e4\u00be\u009d\u00e6\u00ac\u00a1\u00e7\u00b1\u00bb\u00e6\u008e\u00a8",
                " \t * ",
                "@@ -105,3 +105,3 @@ public class ReUtil {",
                " \t * @param content \u00e8\u00a2\u00ab\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e7\u009a\u0084\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "-\t * @param groupIndex \u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e6\u00ad\u00a3\u00e5\u0088\u0099\u00e7\u009a\u0084\u00e5\u0088\u0086\u00e7\u00bb\u0084\u00e5\u00ba\u008f\u00e5\u008f\u00b7",
                "+\t * @param groupIndex \u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e6\u00ad\u00a3\u00e5\u0088\u0099\u00e7\u009a\u0084\u00e5\u0088\u0086\u00e7\u00bb\u0084\u00e5\u00ba\u008f\u00e5\u008f\u00b7\u00ef\u00bc\u008c0\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e6\u0095\u00b4\u00e4\u00b8\u00aa\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e5\u0086\u0085\u00e5\u00ae\u00b9\u00ef\u00bc\u008c1\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u008b\u00ac\u00e5\u008f\u00b7\u00e5\u0088\u0086\u00e7\u00bb\u0084\u00e5\u0086\u0085\u00e5\u00ae\u00b9\u00ef\u00bc\u008c\u00e4\u00be\u009d\u00e6\u00ac\u00a1\u00e7\u00b1\u00bb\u00e6\u008e\u00a8",
                " \t * @return \u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e5\u0090\u008e\u00e5\u00be\u0097\u00e5\u0088\u00b0\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00ef\u00bc\u008c\u00e6\u009c\u00aa\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e8\u00bf\u0094\u00e5\u009b\u009enull",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/CookiePool.java b/hutool-http/src/main/java/cn/hutool/http/CookiePool.java",
                "deleted file mode 100644",
                "index 32d4cfc23..000000000",
                "--- a/hutool-http/src/main/java/cn/hutool/http/CookiePool.java",
                "+++ /dev/null",
                "@@ -1,43 +0,0 @@",
                "-",
                "-package cn.hutool.http;",
                "-",
                "-import java.util.Map;",
                "-import java.util.concurrent.ConcurrentHashMap;",
                "-",
                "-/**",
                "- *Cookie\u00e6\u00b1\u00a0\u00e3\u0080\u0082\u00e6\u00ad\u00a4\u00e6\u00b1\u00a0\u00e9\u0092\u0088\u00e5\u00af\u00b9\u00e6\u0089\u0080\u00e6\u009c\u0089HTTP\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e5\u008f\u00af\u00e7\u0094\u00a8\u00e3\u0080\u0082<br>",
                "- *\u00e6\u00ad\u00a4Cookie\u00e6\u00b1\u00a0\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e6\u00a8\u00a1\u00e6\u008b\u009f\u00e6\u00b5\u008f\u00e8\u00a7\u0088\u00e5\u0099\u00a8\u00e7\u009a\u0084Cookie\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e8\u00ae\u00bf\u00e9\u0097\u00ae\u00e5\u0090\u008e\u00e7\u00ab\u0099\u00e7\u0082\u00b9\u00ef\u00bc\u008c\u00e8\u00ae\u00b0\u00e5\u00bd\u0095Cookie\u00ef\u00bc\u008c\u00e4\u00b8\u008b\u00e6\u00ac\u00a1\u00e5\u0086\u008d\u00e8\u00ae\u00bf\u00e9\u0097\u00ae\u00e8\u00bf\u0099\u00e4\u00b8\u00aa\u00e7\u00ab\u0099\u00e7\u0082\u00b9\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e4\u00b8\u0080\u00e5\u00b9\u00b6\u00e6\u008f\u0090\u00e4\u00ba\u00a4Cookie\u00e5\u0088\u00b0\u00e7\u00ab\u0099\u00e7\u0082\u00b9\u00e3\u0080\u0082",
                "- * @author Looly",
                "- *",
                "- */",
                "-public class CookiePool {",
                "-\t",
                "-\t//key: host, value: cookies\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "-\tprivate static Map<String, String> cookies = new ConcurrentHashMap<String, String>();",
                "-\t",
                "-\t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e6\u009f\u0090\u00e4\u00b8\u00aa\u00e7\u00bd\u0091\u00e7\u00ab\u0099\u00e7\u009a\u0084Cookie\u00e4\u00bf\u00a1\u00e6\u0081\u00af",
                "-\t * @param host \u00e7\u00bd\u0091\u00e7\u00ab\u0099Host",
                "-\t * @return Cookie\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "-\t */",
                "-\tpublic static String get(String host) {",
                "-\t\treturn cookies.get(host);",
                "-\t}",
                "-\t",
                "-\t/**",
                "-\t * \u00e5\u00b0\u0086\u00e6\u009f\u0090\u00e4\u00b8\u00aa\u00e7\u00bd\u0091\u00e7\u00ab\u0099\u00e7\u009a\u0084Cookie\u00e6\u0094\u00be\u00e5\u0085\u00a5Cookie\u00e6\u00b1\u00a0",
                "-\t * @param host \u00e7\u00bd\u0091\u00e7\u00ab\u0099Host",
                "-\t * @param cookie Cookie\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "-\t */",
                "-\tpublic static void put(String host, String cookie) {",
                "-\t\tcookies.put(host, cookie);",
                "-\t}",
                "-\t",
                "-\t/**",
                "-\t * \u00e6\u00b8\u0085\u00e7\u00a9\u00baCookie",
                "-\t * @since 3.0.7",
                "-\t */",
                "-\tpublic static void clear(){",
                "-\t\tcookies.clear();",
                "-\t}",
                "-}",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java b/hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java",
                "index e83ae4342..8bb553c04 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java",
                "@@ -43,7 +43,7 @@ public enum GlobalHeaders{",
                "-\t\theader(Header.ACCEPT, \"text/html,application/xhtml+xml,application/xml,application/json;q=0.9,*/*;q=0.8\", true);",
                "-\t\theader(Header.ACCEPT_ENCODING, \"gzip\", true);",
                "-\t\theader(Header.ACCEPT_LANGUAGE, \"zh-CN,zh;q=0.8\", true);",
                "-\t\theader(Header.CONTENT_TYPE, \"application/x-www-form-urlencoded\", true);",
                "-\t\theader(Header.USER_AGENT, \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36 Hutool\", true);",
                "+//\t\theader(Header.ACCEPT, \"text/html,application/xhtml+xml,application/xml,application/json;q=0.9,*/*;q=0.8\", true);",
                "+//\t\theader(Header.ACCEPT_ENCODING, \"gzip\", true);",
                "+//\t\theader(Header.ACCEPT_LANGUAGE, \"zh-CN,zh;q=0.8\", true);",
                "+//\t\theader(Header.CONTENT_TYPE, \"application/x-www-form-urlencoded\", true);",
                "+//\t\theader(Header.USER_AGENT, \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36 Hutool\", true);",
                " \t\treturn this;",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HttpConnection.java b/hutool-http/src/main/java/cn/hutool/http/HttpConnection.java",
                "index ad90ee76a..10f0781b2 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HttpConnection.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HttpConnection.java",
                "@@ -187,3 +187,3 @@ public class HttpConnection {",
                " \t\t// Cookie",
                "-\t\tsetCookie(CookiePool.get(this.url.getHost()));",
                "+//\t\tsetCookie(CookiePool.get(this.url.getHost()));",
                "@@ -388,3 +388,3 @@ public class HttpConnection {",
                " \t\tif (cookie != null) {",
                "-\t\t\tlog.debug(\"Cookie: {}\", cookie);",
                "+\t\t\tlog.debug(\"With Cookie: {}\", cookie);",
                " \t\t\theader(Header.COOKIE, cookie, true);",
                "@@ -450,4 +450,2 @@ public class HttpConnection {",
                " \tpublic InputStream getInputStream() throws IOException {",
                "-\t\tstoreCookie();",
                "-",
                " \t\tif (null != this.conn) {",
                "@@ -465,4 +463,2 @@ public class HttpConnection {",
                " \tpublic InputStream getErrorStream() throws IOException {",
                "-\t\tstoreCookie();",
                "-",
                " \t\tif (null != this.conn) {",
                "@@ -530,3 +526,3 @@ public class HttpConnection {",
                " \t}",
                "-",
                "+\t",
                " \t@Override",
                "@@ -576,13 +572,2 @@ public class HttpConnection {",
                " \t}",
                "-",
                "-\t/**",
                "-\t * \u00e5\u00ad\u0098\u00e5\u0082\u00a8\u00e6\u009c\u008d\u00e5\u008a\u00a1\u00e5\u0099\u00a8\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e7\u009a\u0084Cookie\u00e5\u0088\u00b0\u00e6\u009c\u00ac\u00e5\u009c\u00b0",
                "-\t */",
                "-\tprivate void storeCookie() {",
                "-\t\tfinal String setCookie = header(Header.SET_COOKIE);",
                "-\t\tif (StrUtil.isBlank(setCookie) == false) {",
                "-\t\t\tlog.debug(\"Set cookie: [{}]\", setCookie);",
                "-\t\t\tCookiePool.put(url.getHost(), setCookie);",
                "-\t\t}",
                "-\t}",
                " \t// --------------------------------------------------------------- Private Method end",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java b/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "index 14b3a620b..c91b32427 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "@@ -5,2 +5,5 @@ import java.io.IOException;",
                " import java.io.OutputStream;",
                "+import java.net.CookieHandler;",
                "+import java.net.CookieManager;",
                "+import java.net.CookiePolicy;",
                " import java.net.HttpCookie;",
                "@@ -54,2 +57,9 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \tprivate static final String CONTENT_TYPE_FILE_TEMPLATE = \"Content-Type: {}\\r\\n\\r\\n\";",
                "+\t",
                "+\t/** Cookie\u00e7\u00ae\u00a1\u00e7\u0090\u0086 */",
                "+\tprotected static CookieManager cookieManager = new CookieManager();",
                "+\tstatic {",
                "+\t\tcookieManager.setCookiePolicy(CookiePolicy.ACCEPT_ALL);",
                "+\t\tCookieHandler.setDefault(cookieManager);",
                "+\t}",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HttpResponse.java b/hutool-http/src/main/java/cn/hutool/http/HttpResponse.java",
                "index f576e6e1e..a72343357 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HttpResponse.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HttpResponse.java",
                "@@ -115,8 +115,4 @@ public class HttpResponse extends HttpBase<HttpResponse> implements Closeable{",
                " \t */",
                "-\tpublic List<HttpCookie> getCookie(){",
                "-\t\tfinal String cookieStr = getCookieStr();",
                "-\t\tif(StrUtil.isNotBlank(cookieStr)) {",
                "-\t\t\treturn HttpCookie.parse(cookieStr);",
                "-\t\t}",
                "-\t\treturn null;",
                "+\tpublic List<HttpCookie> getCookies(){",
                "+\t\treturn HttpRequest.cookieManager.getCookieStore().getCookies();",
                " \t}",
                "@@ -131,3 +127,3 @@ public class HttpResponse extends HttpBase<HttpResponse> implements Closeable{",
                " \tpublic HttpCookie getCookie(String name) {",
                "-\t\tList<HttpCookie> cookie = getCookie();",
                "+\t\tList<HttpCookie> cookie = getCookies();",
                " \t\tif(null != cookie) {"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/ReUtil.java",
                "hutool-http/src/main/java/cn/hutool/http/CookiePool.java",
                "hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java",
                "hutool-http/src/main/java/cn/hutool/http/HttpConnection.java",
                "hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "hutool-http/src/main/java/cn/hutool/http/HttpResponse.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "bdd631261d70e482d8bbd977c252d2215561d018",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537940825,
            "hunks": 10,
            "message": "fix ImageUtil write",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java",
                "index c2133aaa4..b2da75813 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java",
                "@@ -493,6 +493,4 @@ public class ImageUtil {",
                " \t\ttry {",
                "-\t\t\timageOutputStream = ImageIO.createImageOutputStream(destImageFile);",
                "-\t\t\tconvert(ImageIO.read(srcImageFile), destExtName, imageOutputStream, StrUtil.equalsIgnoreCase(IMAGE_TYPE_PNG, srcExtName));",
                "-\t\t} catch (IOException e) {",
                "-\t\t\tthrow new IORuntimeException(e);",
                "+\t\t\timageOutputStream = getImageOutputStream(destImageFile);",
                "+\t\t\tconvert(read(srcImageFile), destExtName, imageOutputStream, StrUtil.equalsIgnoreCase(IMAGE_TYPE_PNG, srcExtName));",
                " \t\t} finally {",
                "@@ -512,7 +510,3 @@ public class ImageUtil {",
                " \tpublic static void convert(InputStream srcStream, String formatName, OutputStream destStream) {",
                "-\t\ttry {",
                "-\t\t\tconvert(ImageIO.read(srcStream), formatName, ImageIO.createImageOutputStream(destStream));",
                "-\t\t} catch (IOException e) {",
                "-\t\t\tthrow new IORuntimeException(e);",
                "-\t\t}",
                "+\t\twrite(read(srcStream), formatName, getImageOutputStream(destStream));",
                " \t}",
                "@@ -527,9 +521,7 @@ public class ImageUtil {",
                " \t * @since 3.0.9",
                "+\t * @deprecated \u00e8\u00af\u00b7\u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link #write(Image, String, ImageOutputStream)}",
                " \t */",
                "+\t@Deprecated",
                " \tpublic static void convert(ImageInputStream srcStream, String formatName, ImageOutputStream destStream) {",
                "-\t\ttry {",
                "-\t\t\tconvert(ImageIO.read(srcStream), formatName, destStream);",
                "-\t\t} catch (IOException e) {",
                "-\t\t\tthrow new IORuntimeException(e);",
                "-\t\t}",
                "+\t\twrite(read(srcStream), formatName, destStream);",
                " \t}",
                "@@ -544,3 +536,5 @@ public class ImageUtil {",
                " \t * @since 3.0.9",
                "+\t * @deprecated \u00e8\u00af\u00b7\u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link #write(Image, String, ImageOutputStream)}",
                " \t */",
                "+\t@Deprecated",
                " \tpublic static void convert(Image srcImage, String formatName, ImageOutputStream destImageStream) {",
                "@@ -1358,4 +1352,22 @@ public class ImageUtil {",
                " \tpublic static void write(Image image, String imageType, ImageOutputStream destImageStream) throws IORuntimeException {",
                "+\t\tif (StrUtil.isBlank(imageType)) {",
                "+\t\t\timageType = IMAGE_TYPE_JPG;",
                "+\t\t}",
                "+\t\t",
                "+\t\tBufferedImage bufferedImage;",
                "+\t\tif(false == imageType.equalsIgnoreCase(IMAGE_TYPE_PNG)) {",
                "+\t\t\t//\u00e5\u00bd\u0093\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e4\u00b8\u00ba\u00e9\u009d\u009ePNG\u00e7\u00b1\u00bb\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e6\u00ba\u0090\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e7\u00bb\u009f\u00e4\u00b8\u0080\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00baRGB\u00e6\u00a0\u00bc\u00e5\u00bc\u008f",
                "+\t\t\tif(image instanceof BufferedImage) {",
                "+\t\t\t\tbufferedImage = (BufferedImage)image;",
                "+\t\t\t\tif(BufferedImage.TYPE_INT_RGB != bufferedImage.getType()) {",
                "+\t\t\t\t\tbufferedImage = copyImage(image, BufferedImage.TYPE_INT_RGB);",
                "+\t\t\t\t}",
                "+\t\t\t}else {",
                "+\t\t\t\tbufferedImage = copyImage(image, BufferedImage.TYPE_INT_RGB);",
                "+\t\t\t}",
                "+\t\t}else {",
                "+\t\t\tbufferedImage = toBufferedImage(image);",
                "+\t\t}",
                " \t\ttry {",
                "-\t\t\tImageIO.write(toBufferedImage(image), imageType, destImageStream);// \u00e8\u00be\u0093\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u00b5\u0081",
                "+\t\t\tImageIO.write(bufferedImage, imageType, destImageStream);// \u00e8\u00be\u0093\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u00b5\u0081",
                " \t\t} catch (IOException e) {",
                "@@ -1374,11 +1386,3 @@ public class ImageUtil {",
                " \tpublic static void write(Image image, File targetFile) throws IORuntimeException {",
                "-\t\tString formatName = FileUtil.extName(targetFile);",
                "-\t\tif (StrUtil.isBlank(formatName)) {",
                "-\t\t\tformatName = IMAGE_TYPE_JPG;",
                "-\t\t}",
                "-\t\ttry {",
                "-\t\t\tImageIO.write(toBufferedImage(image), formatName, targetFile);// \u00e8\u00be\u0093\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "-\t\t} catch (IOException e) {",
                "-\t\t\tthrow new IORuntimeException(e);",
                "-\t\t}",
                "+\t\twrite(image, FileUtil.extName(targetFile), getImageOutputStream(targetFile));",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "759057829f28a80d99103a73df1addf46e08e42d",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1539687550,
            "hunks": 10,
            "message": "add tests",
            "diff": [
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/CronTimer.java b/hutool-cron/src/main/java/cn/hutool/cron/CronTimer.java",
                "index 746bf45e6..2fb350ceb 100644",
                "--- a/hutool-cron/src/main/java/cn/hutool/cron/CronTimer.java",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/CronTimer.java",
                "@@ -53,3 +53,3 @@ public class CronTimer extends Thread{",
                " \t\t}",
                "-\t\tlog.debug(\"Hutool Cron Timer stoped.\");",
                "+\t\tlog.debug(\"Hutool-cron timer stoped.\");",
                " \t}",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPatternUtil.java b/hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPatternUtil.java",
                "new file mode 100644",
                "index 000000000..d3130bd39",
                "--- /dev/null",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPatternUtil.java",
                "@@ -0,0 +1,85 @@",
                "+package cn.hutool.cron.pattern;",
                "+",
                "+import java.util.ArrayList;",
                "+import java.util.Date;",
                "+import java.util.List;",
                "+",
                "+import cn.hutool.core.date.DateUnit;",
                "+import cn.hutool.core.date.DateUtil;",
                "+import cn.hutool.core.lang.Assert;",
                "+",
                "+/**",
                "+ * \u00e5\u00ae\u009a\u00e6\u0097\u00b6\u00e4\u00bb\u00bb\u00e5\u008a\u00a1\u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00e5\u00b7\u00a5\u00e5\u0085\u00b7\u00e7\u00b1\u00bb",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+public class CronPatternUtil {",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u0097\u00e4\u00b8\u00be\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e4\u00b9\u008b\u00e5\u0090\u008e\u00ef\u00bc\u0088\u00e5\u0088\u00b0\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e5\u00b9\u00b4\u00e5\u00b9\u00b4\u00e5\u00ba\u0095\u00ef\u00bc\u0089\u00e5\u0086\u0085\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00e7\u009a\u0084\u00e6\u0097\u00a5\u00e6\u009c\u009f",
                "+\t * ",
                "+\t * @param patternStr \u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @param start \u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e6\u0097\u00b6\u00e9\u0097\u00b4",
                "+\t * @param count \u00e5\u0088\u0097\u00e4\u00b8\u00be\u00e6\u0095\u00b0\u00e9\u0087\u008f",
                "+\t * @param isMatchSecond \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e7\u00a7\u0092",
                "+\t * @return \u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t */",
                "+\tpublic static List<Date> matchedDates(String patternStr, Date start, int count, boolean isMatchSecond) {",
                "+\t\treturn matchedDates(patternStr, start, DateUtil.endOfYear(start), count, isMatchSecond);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u0097\u00e4\u00b8\u00be\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e8\u008c\u0083\u00e5\u009b\u00b4\u00e5\u0086\u0085\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00e7\u009a\u0084\u00e6\u0097\u00a5\u00e6\u009c\u009f",
                "+\t * ",
                "+\t * @param patternStr \u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @param start \u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e6\u0097\u00b6\u00e9\u0097\u00b4",
                "+\t * @param end \u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e6\u0097\u00b6\u00e9\u0097\u00b4",
                "+\t * @param count \u00e5\u0088\u0097\u00e4\u00b8\u00be\u00e6\u0095\u00b0\u00e9\u0087\u008f",
                "+\t * @param isMatchSecond \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e7\u00a7\u0092",
                "+\t * @return \u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t */",
                "+\tpublic static List<Date> matchedDates(String patternStr, Date start, Date end, int count, boolean isMatchSecond) {",
                "+\t\treturn matchedDates(patternStr, start.getTime(), end.getTime(), count, isMatchSecond);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u0097\u00e4\u00b8\u00be\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e8\u008c\u0083\u00e5\u009b\u00b4\u00e5\u0086\u0085\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00e7\u009a\u0084\u00e6\u0097\u00a5\u00e6\u009c\u009f",
                "+\t * ",
                "+\t * @param patternStr \u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @param start \u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e6\u0097\u00b6\u00e9\u0097\u00b4",
                "+\t * @param end \u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e6\u0097\u00b6\u00e9\u0097\u00b4",
                "+\t * @param count \u00e5\u0088\u0097\u00e4\u00b8\u00be\u00e6\u0095\u00b0\u00e9\u0087\u008f",
                "+\t * @param isMatchSecond \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e7\u00a7\u0092",
                "+\t * @return \u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t */",
                "+\tpublic static List<Date> matchedDates(String patternStr, long start, long end, int count, boolean isMatchSecond) {",
                "+\t\treturn matchedDates(new CronPattern(patternStr), start, end, count, isMatchSecond);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u0097\u00e4\u00b8\u00be\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e8\u008c\u0083\u00e5\u009b\u00b4\u00e5\u0086\u0085\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00e7\u009a\u0084\u00e6\u0097\u00a5\u00e6\u009c\u009f",
                "+\t * ",
                "+\t * @param pattern \u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f",
                "+\t * @param start \u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e6\u0097\u00b6\u00e9\u0097\u00b4",
                "+\t * @param end \u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e6\u0097\u00b6\u00e9\u0097\u00b4",
                "+\t * @param count \u00e5\u0088\u0097\u00e4\u00b8\u00be\u00e6\u0095\u00b0\u00e9\u0087\u008f",
                "+\t * @param isMatchSecond \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e7\u00a7\u0092",
                "+\t * @return \u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t */",
                "+\tpublic static List<Date> matchedDates(CronPattern pattern, long start, long end, int count, boolean isMatchSecond) {",
                "+\t\tAssert.isTrue(start < end, \"Start date is later than end !\");",
                "+",
                "+\t\tfinal List<Date> result = new ArrayList<>(count);",
                "+\t\tlong step = isMatchSecond ? DateUnit.SECOND.getMillis() : DateUnit.MINUTE.getMillis();",
                "+\t\tfor (long i = start; i < end; i += step) {",
                "+\t\t\tif (pattern.match(i, isMatchSecond)) {",
                "+\t\t\t\tresult.add(DateUtil.date(i));",
                "+\t\t\t\tif (result.size() >= count) {",
                "+\t\t\t\t\tbreak;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn result;",
                "+\t}",
                "+}",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java b/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java",
                "index 64c136002..e31c33638 100644",
                "--- a/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java",
                "@@ -14,3 +14,3 @@ import cn.hutool.cron.pattern.parser.YearValueParser;",
                " /**",
                "- * {@link ValueMatcher} \u00e6\u009e\u0084\u00e5\u00bb\u00ba\u00e5\u0099\u00a8",
                "+ * {@link ValueMatcher} \u00e6\u009e\u0084\u00e5\u00bb\u00ba\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e6\u009e\u0084\u00e5\u00bb\u00ba\u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00e4\u00b8\u00ad\u00e6\u00af\u008f\u00e4\u00b8\u0080\u00e9\u00a1\u00b9\u00e7\u009a\u0084\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e5\u0099\u00a8",
                "  * @author Looly",
                "@@ -19,2 +19,3 @@ import cn.hutool.cron.pattern.parser.YearValueParser;",
                " public class ValueMatcherBuilder {",
                "+\t",
                " \t/**",
                "@@ -28,3 +29,3 @@ public class ValueMatcherBuilder {",
                " \tpublic static ValueMatcher build(String value, ValueParser parser) {",
                "-\t\tif (1 == value.length() && (\"*\".equals(value) || \"?\".equals(value))) {",
                "+\t\tif (isMatchAllStr(value)) {",
                " \t\t\t//\u00e5\u0085\u00bc\u00e5\u00ae\u00b9Quartz\u00e7\u009a\u0084\"?\"\u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e4\u00bc\u009a\u00e5\u0087\u00ba\u00e7\u008e\u00b0\u00e4\u00ba\u0092\u00e6\u0096\u00a5\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00ef\u00bc\u008c\u00e4\u00b8\u008e\"*\"\u00e4\u00bd\u009c\u00e7\u0094\u00a8\u00e7\u009b\u00b8\u00e5\u0090\u008c",
                "@@ -39,3 +40,3 @@ public class ValueMatcherBuilder {",
                " \t\tif (parser instanceof DayOfMonthValueParser) {",
                "-\t\t\t//\u00e8\u0080\u0083\u00e8\u0099\u0091\u00e6\u00af\u008f\u00e6\u009c\u0088\u00e7\u009a\u0084\u00e5\u00a4\u00a9\u00e6\u0095\u00b0\u00e4\u00b8\u008d\u00e5\u0090\u008c\u00ef\u00bc\u008c\u00e5\u0088\u0087\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e9\u0097\u00b0\u00e5\u00b9\u00b4\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00ef\u00bc\u008c\u00e6\u0097\u00a5\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e5\u008d\u0095\u00e7\u008b\u00ac\u00e4\u00bd\u00bf\u00e7\u0094\u00a8",
                "+\t\t\t//\u00e8\u0080\u0083\u00e8\u0099\u0091\u00e6\u00af\u008f\u00e6\u009c\u0088\u00e7\u009a\u0084\u00e5\u00a4\u00a9\u00e6\u0095\u00b0\u00e4\u00b8\u008d\u00e5\u0090\u008c\u00ef\u00bc\u008c\u00e4\u00b8\u0094\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e9\u0097\u00b0\u00e5\u00b9\u00b4\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00ef\u00bc\u008c\u00e6\u0097\u00a5\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e5\u008d\u0095\u00e7\u008b\u00ac\u00e4\u00bd\u00bf\u00e7\u0094\u00a8",
                " \t\t\treturn new DayOfMonthValueMatcher(values);",
                "@@ -124,3 +125,3 @@ public class ValueMatcherBuilder {",
                " \t\t\tint minValue = parser.getMin();",
                "-\t\t\tif(false == \"*\".equals(value) && false == \"?\".equals(value)) {",
                "+\t\t\tif(false == isMatchAllStr(value)) {",
                " \t\t\t\ttry {",
                "@@ -136,7 +137,7 @@ public class ValueMatcherBuilder {",
                " \t\t\t}",
                "-\t\t\tfinal int maxValue = parser.getMax();",
                "-\t\t\tif(minValue > maxValue) {",
                "-\t\t\t\tthrow new CronException(\"Invalid value {} > {}\", minValue, maxValue);",
                "-\t\t\t}",
                " \t\t\tif(step > 0) {",
                "+\t\t\t\tfinal int maxValue = parser.getMax();",
                "+\t\t\t\tif(minValue > maxValue) {",
                "+\t\t\t\t\tthrow new CronException(\"Invalid value {} > {}\", minValue, maxValue);",
                "+\t\t\t\t}",
                " \t\t\t\t//\u00e6\u009c\u0089\u00e6\u00ad\u00a5\u00e8\u00bf\u009b",
                "@@ -186,2 +187,14 @@ public class ValueMatcherBuilder {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba\u00e5\u0085\u00a8\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e7\u00ac\u00a6<br>",
                "+\t * \u00e5\u0085\u00a8\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e7\u00ac\u00a6\u00e6\u008c\u0087 * \u00e6\u0088\u0096\u00e8\u0080\u0085 ?",
                "+\t * ",
                "+\t * @param value \u00e8\u00a2\u00ab\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e7\u009a\u0084\u00e5\u0080\u00bc",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba\u00e5\u0085\u00a8\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e7\u00ac\u00a6",
                "+\t * @since 4.1.18",
                "+\t */",
                "+\tprivate static boolean isMatchAllStr(String value) {",
                "+\t\treturn (1 == value.length()) && (\"*\".equals(value) || \"?\".equals(value));",
                "+\t}",
                " }"
            ],
            "changed_files": [
                "hutool-cron/src/main/java/cn/hutool/cron/CronTimer.java",
                "hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPatternUtil.java",
                "hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "6388070a84aed0dc50ce37a71666874fb9a417f4",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1536674785,
            "hunks": 12,
            "message": "add method and change write for ExcelWriter",
            "diff": [
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "index fa625d6df..30941b397 100644",
                "--- a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "@@ -23,2 +23,3 @@ import org.apache.poi.ss.usermodel.Workbook;",
                " import cn.hutool.core.bean.BeanUtil;",
                "+import cn.hutool.core.collection.CollUtil;",
                " import cn.hutool.core.comparator.IndexedComparator;",
                "@@ -225,2 +226,14 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00e9\u009b\u0086\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u008d\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e4\u00bc\u00a0\u00e5\u0085\u00a5{@code null}",
                "+\t * ",
                "+\t * @param styleSet \u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00e9\u009b\u0086\u00ef\u00bc\u008c{@code null}\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e6\u0097\u00a0\u00e6\u00a0\u00b7\u00e5\u00bc\u008f",
                "+\t * @return this",
                "+\t * @since 4.1.11",
                "+\t */",
                "+\tpublic ExcelWriter setStyleSet(StyleSet styleSet) {",
                "+\t\tthis.styleSet = styleSet;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -475,3 +488,3 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                "-\t\tfinal CellStyle style = (isSetHeaderStyle && null != this.styleSet.headCellStyle) ? this.styleSet.headCellStyle : this.styleSet.cellStyle;",
                "+\t\tfinal CellStyle style = (isSetHeaderStyle && null != this.styleSet && null != this.styleSet.headCellStyle) ? this.styleSet.headCellStyle : this.styleSet.cellStyle;",
                " \t\tCellUtil.mergingCells(this.sheet, firstRow, lastRow, firstColumn, lastColumn, style);",
                "@@ -489,6 +502,7 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \t * \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084\u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e8\u00a1\u008c\u00e4\u00b8\u00ba\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e8\u00a1\u008c\u00e5\u008f\u00b7\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link #getCurrentRow()}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00ef\u00bc\u008c\u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084\u00e7\u009a\u0084\u00e8\u00a1\u008c\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e8\u00a1\u008c\u00e5\u008f\u00b7\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e5\u00a2\u009e\u00e5\u008a\u00a0<br>",
                "-\t * \u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00e4\u00b8\u00ba\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link #getCellStyle()}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e5\u0090\u008e\u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e6\u00a0\u00b7\u00e5\u00bc\u008f<br>",
                "-\t * data\u00e4\u00b8\u00ad\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u009c\u0089\u00ef\u00bc\u009a",
                "+\t * \u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00e4\u00b8\u00ba\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link #getCellStyle()}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e5\u0090\u008e\u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e6\u00a0\u00b7\u00e5\u00bc\u008f",
                " \t * ",
                " \t * <p>",
                "+\t * data\u00e4\u00b8\u00ad\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u009c\u0089\u00ef\u00bc\u009a",
                "+\t *  <pre>",
                " \t * 1. Iterable\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e4\u00b8\u00ba\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e9\u009b\u0086\u00e5\u0090\u0088\u00ef\u00bc\u008c\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e8\u00a2\u00ab\u00e5\u00bd\u0093\u00e4\u00bd\u009c\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00ef\u00bc\u008cdata\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e5\u00a4\u009a\u00e8\u00a1\u008c<br>",
                "@@ -496,4 +510,4 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \t * 3. Bean\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e4\u00b8\u00ba\u00e4\u00b8\u0080\u00e4\u00b8\u00aaBean\u00ef\u00bc\u008c\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aaBean\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e5\u0090\u008d\u00e5\u0088\u0097\u00e8\u00a1\u00a8\u00e4\u00bc\u009a\u00e4\u00bd\u009c\u00e4\u00b8\u00ba\u00e9\u00a6\u0096\u00e8\u00a1\u008c\u00ef\u00bc\u008c\u00e5\u0089\u00a9\u00e4\u00b8\u008b\u00e7\u009a\u0084\u00e8\u00a1\u008c\u00e4\u00b8\u00baBean\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e5\u0080\u00bc\u00e5\u0088\u0097\u00e8\u00a1\u00a8\u00ef\u00bc\u008cdata\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e5\u00a4\u009a\u00e8\u00a1\u008c <br>",
                "-\t * 4. \u00e6\u0097\u00a0\u00e6\u00b3\u0095\u00e8\u00af\u0086\u00e5\u0088\u00ab\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e8\u00be\u0093\u00e5\u0087\u00ba",
                "-\t * </p>",
                "+\t * 4. \u00e5\u0085\u00b6\u00e5\u00ae\u0083\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e6\u008c\u0089\u00e7\u0085\u00a7\u00e5\u009f\u00ba\u00e6\u009c\u00ac\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e8\u00be\u0093\u00e5\u0087\u00ba\u00ef\u00bc\u0088\u00e4\u00be\u008b\u00e5\u00a6\u0082\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00ef\u00bc\u0089",
                "+\t * </pre>",
                " \t * ",
                "@@ -580,3 +594,2 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \tpublic ExcelWriter writeRow(Object rowBean, boolean isWriteKeyAsHead) {",
                "-\t\tMap<?, ?> rowMap = null;",
                " \t\tif (rowBean instanceof Iterable) {",
                "@@ -584,5 +597,6 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \t\t}",
                "+\t\tMap<?, ?> rowMap = null;",
                " \t\tif (rowBean instanceof Map) {",
                " \t\t\trowMap = (Map<?, ?>) rowBean;",
                "-\t\t} else {",
                "+\t\t} else if(BeanUtil.isBean(rowBean.getClass())){",
                " \t\t\tif (MapUtil.isEmpty(this.headerAlias)) {",
                "@@ -593,2 +607,5 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \t\t\t}",
                "+\t\t}else {",
                "+\t\t\t//\u00e5\u0085\u00b6\u00e5\u00ae\u0083\u00e8\u00bd\u00ac\u00e4\u00b8\u00ba\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e8\u00be\u0093\u00e5\u0087\u00ba",
                "+\t\t\treturn writeRow(CollUtil.newArrayList(rowBean), isWriteKeyAsHead);",
                " \t\t}",
                "@@ -645,3 +662,3 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \t\tfinal Cell cell = getOrCreateCell(x, y);",
                "-\t\tCellUtil.setCellValue(cell, value, styleSet, false);",
                "+\t\tCellUtil.setCellValue(cell, value, this.styleSet, false);",
                " \t\treturn this;",
                "@@ -675,3 +692,3 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \t}",
                "-",
                "+\t",
                " \t/**"
            ],
            "changed_files": [
                "hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7687720c5125b29386d3bb9c7c2931da79664b73",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1536769603,
            "hunks": 3,
            "message": "fix config",
            "diff": [
                "diff --git a/hutool-setting/src/main/java/cn/hutool/setting/AbsSetting.java b/hutool-setting/src/main/java/cn/hutool/setting/AbsSetting.java",
                "index bcf07114c..9b12531c0 100644",
                "--- a/hutool-setting/src/main/java/cn/hutool/setting/AbsSetting.java",
                "+++ b/hutool-setting/src/main/java/cn/hutool/setting/AbsSetting.java",
                "@@ -12,3 +12,3 @@ import cn.hutool.core.util.StrUtil;",
                " import cn.hutool.log.Log;",
                "-import cn.hutool.log.StaticLog;",
                "+import cn.hutool.log.LogFactory;",
                "@@ -22,3 +22,3 @@ public abstract class AbsSetting extends OptNullBasicTypeFromStringGetter<String",
                " \tprivate static final long serialVersionUID = 6200156302595905863L;",
                "-\tprivate final static Log log = StaticLog.get();",
                "+\tprivate final static Log log = LogFactory.get();",
                "@@ -269,5 +269,5 @@ public abstract class AbsSetting extends OptNullBasicTypeFromStringGetter<String",
                " \t\t\t\tfinal String value = getByGroup(key, group);",
                "-\t\t\t\tif (null != value) {",
                "-\t\t\t\t\tlog.debug(\"Parse setting to object field [{}={}]\", key, value);",
                "-\t\t\t\t}",
                "+//\t\t\t\tif (null != value) {",
                "+//\t\t\t\t\tlog.debug(\"Parse setting to object field [{}={}]\", key, value);",
                "+//\t\t\t\t}",
                " \t\t\t\treturn value;"
            ],
            "changed_files": [
                "hutool-setting/src/main/java/cn/hutool/setting/AbsSetting.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d21c584cacdd16b4fa9ff259f5377ff3624f480a",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1535105969,
            "hunks": 1,
            "message": "remove \"",
            "diff": [
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java b/hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java",
                "index 6b1d48ba3..97089f97e 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java",
                "@@ -33,3 +33,2 @@ public class HtmlUtil {",
                " \t\tTEXT['\\''] = \"&#39;\".toCharArray(); // \u00e5\u008d\u0095\u00e5\u00bc\u0095\u00e5\u008f\u00b7",
                "-\t\tTEXT['\"'] = QUOTE.toCharArray(); // \u00e5\u008f\u008c\u00e5\u00bc\u0095\u00e5\u008f\u00b7",
                " \t\tTEXT['&'] = StrUtil.HTML_AMP.toCharArray(); // &\u00e7\u00ac\u00a6"
            ],
            "changed_files": [
                "hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "309307dcf6f24e6606d2f5fc1748d952275a0100",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1533688461,
            "hunks": 5,
            "message": "fix Date and page",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java b/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "index 0823ada27..1a52b0ac8 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "@@ -682,2 +682,4 @@ public class DateUtil {",
                " \t * <li>yyyyMMdd</li>",
                "+\t * <li>EEE, dd MMM yyyy HH:mm:ss z</li>",
                "+\t * <li>EEE MMM dd HH:mm:ss zzz yyyy</li>",
                " \t * </ol>",
                "@@ -715,5 +717,5 @@ public class DateUtil {",
                " \t\t} else if (length == DatePattern.NORM_DATETIME_MINUTE_PATTERN.length() || length == DatePattern.NORM_DATETIME_MINUTE_PATTERN.length() + 1) {",
                "-\t\t\treturn parse(normalize(dateStr), DatePattern.NORM_DATETIME_MINUTE_PATTERN);",
                "+\t\t\treturn parse(normalize(dateStr), DatePattern.NORM_DATETIME_MINUTE_FORMAT);",
                " \t\t} else if (length >= DatePattern.NORM_DATETIME_MS_PATTERN.length() - 2) {",
                "-\t\t\treturn parse(normalize(dateStr), DatePattern.NORM_DATETIME_MS_PATTERN);",
                "+\t\t\treturn parse(normalize(dateStr), DatePattern.NORM_DATETIME_MS_FORMAT);",
                " \t\t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/dialect/impl/OracleDialect.java b/hutool-db/src/main/java/cn/hutool/db/dialect/impl/OracleDialect.java",
                "index 3448b0627..62152f25b 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/dialect/impl/OracleDialect.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/dialect/impl/OracleDialect.java",
                "@@ -22,3 +22,3 @@ public class OracleDialect extends AnsiSqlDialect{",
                " \t\t\t.insertPreFragment(\"SELECT * FROM ( SELECT row_.*, rownum rownum_ from ( \")",
                "-\t\t\t.append(\" ) row_ where rownum <= \").append(startEnd[1])//",
                "+\t\t\t.append(\" ) row_ where rownum < \").append(startEnd[1])//",
                " \t\t\t.append(\") table_alias\")//",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java b/hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java",
                "index e83ae4342..54042d87d 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java",
                "@@ -47,3 +47,3 @@ public enum GlobalHeaders{",
                " \t\theader(Header.CONTENT_TYPE, \"application/x-www-form-urlencoded\", true);",
                "-\t\theader(Header.USER_AGENT, \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36 Hutool\", true);",
                "+\t\theader(Header.USER_AGENT, \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36 Hutool\", true);",
                " \t\treturn this;"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "hutool-db/src/main/java/cn/hutool/db/dialect/impl/OracleDialect.java",
                "hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "855f4c5b544e648a40cce2be6c72c70057b3e450",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1533466640,
            "hunks": 9,
            "message": "add BloomFilterUtil",
            "diff": [
                "diff --git a/hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BitMapBloomFilter.java b/hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BitMapBloomFilter.java",
                "index 6502373a7..7b6a0f7d5 100644",
                "--- a/hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BitMapBloomFilter.java",
                "+++ b/hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BitMapBloomFilter.java",
                "@@ -22,3 +22,3 @@ public class BitMapBloomFilter implements BloomFilter{",
                " \t/**",
                "-\t * \u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e7\u009a\u00845\u00e4\u00b8\u00aa\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0\u00ef\u00bc\u008c\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e7\u009a\u00845\u00e4\u00b8\u00aa\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8",
                " \t * @param m M\u00e5\u0080\u00bc\u00e5\u0086\u00b3\u00e5\u00ae\u009aBitMap\u00e7\u009a\u0084\u00e5\u00a4\u00a7\u00e5\u00b0\u008f",
                "diff --git a/hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BloomFilterUtil.java b/hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BloomFilterUtil.java",
                "new file mode 100644",
                "index 000000000..990438330",
                "--- /dev/null",
                "+++ b/hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BloomFilterUtil.java",
                "@@ -0,0 +1,32 @@",
                "+package cn.hutool.bloomfilter;",
                "+",
                "+/**",
                "+ * \u00e5\u00b8\u0083\u00e9\u009a\u0086\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8\u00e5\u00b7\u00a5\u00e5\u0085\u00b7",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.5",
                "+ */",
                "+public class BloomFilterUtil {",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e4\u00b8\u0080\u00e4\u00b8\u00aaBitSet\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e7\u009a\u0084\u00e5\u00b8\u0083\u00e9\u009a\u0086\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8\u00e7\u009a\u0084\u00e5\u00ae\u00b9\u00e9\u0087\u008f\u00e4\u00b8\u00bac * n \u00e4\u00b8\u00aabit.",
                "+\t * ",
                "+\t * @param c \u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8\u00e9\u00a2\u0084\u00e5\u0085\u0088\u00e5\u00bc\u0080\u00e8\u00be\u009f\u00e7\u009a\u0084\u00e6\u009c\u0080\u00e5\u00a4\u00a7\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e8\u00ae\u00b0\u00e5\u00bd\u0095,\u00e9\u0080\u009a\u00e5\u00b8\u00b8\u00e8\u00a6\u0081\u00e6\u00af\u0094\u00e9\u00a2\u0084\u00e8\u00ae\u00a1\u00e5\u00ad\u0098\u00e5\u0085\u00a5\u00e7\u009a\u0084\u00e8\u00ae\u00b0\u00e5\u00bd\u0095\u00e5\u00a4\u009a\u00e4\u00b8\u0080\u00e5\u0080\u008d.",
                "+\t * @param n \u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8\u00e9\u00a2\u0084\u00e8\u00ae\u00a1\u00e6\u0089\u0080\u00e8\u00a6\u0081\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e7\u009a\u0084\u00e8\u00ae\u00b0\u00e5\u00bd\u0095.",
                "+\t * @param k \u00e5\u0093\u0088\u00e5\u00b8\u008c\u00e5\u0087\u00bd\u00e6\u0095\u00b0\u00e7\u009a\u0084\u00e4\u00b8\u00aa\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e7\u00ad\u0089\u00e5\u0090\u008c\u00e6\u00af\u008f\u00e6\u009d\u00a1\u00e8\u00ae\u00b0\u00e5\u00bd\u0095\u00e8\u00a6\u0081\u00e5\u008d\u00a0\u00e7\u0094\u00a8\u00e7\u009a\u0084bit\u00e6\u0095\u00b0.",
                "+\t * @return BitSetBloomFilter",
                "+\t */",
                "+\tpublic static BitSetBloomFilter createBitSet(int c, int n, int k) {",
                "+\t\treturn new BitSetBloomFilter(c, n, k);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00baBitMap\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e7\u009a\u0084\u00e5\u00b8\u0083\u00e9\u009a\u0086\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8",
                "+\t * ",
                "+\t * @param m BitMap\u00e7\u009a\u0084\u00e5\u00a4\u00a7\u00e5\u00b0\u008f",
                "+\t * @return BitMapBloomFilter",
                "+\t */",
                "+\tpublic static BitMapBloomFilter createBitMap(int m) {",
                "+\t\treturn new BitMapBloomFilter(m);",
                "+\t}",
                "+}",
                "diff --git a/hutool-setting/src/main/java/cn/hutool/setting/Setting.java b/hutool-setting/src/main/java/cn/hutool/setting/Setting.java",
                "index 377f5b040..94775b4a4 100644",
                "--- a/hutool-setting/src/main/java/cn/hutool/setting/Setting.java",
                "+++ b/hutool-setting/src/main/java/cn/hutool/setting/Setting.java",
                "@@ -51,3 +51,3 @@ public class Setting extends AbsSetting implements Map<String, String> {",
                " \t/** \u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0089\u00a9\u00e5\u00b1\u0095\u00e5\u0090\u008d */",
                "-\tpublic final static String EXT_NAME = \".setting\";",
                "+\tpublic final static String EXT_NAME = \"setting\";",
                "diff --git a/hutool-setting/src/main/java/cn/hutool/setting/SettingUtil.java b/hutool-setting/src/main/java/cn/hutool/setting/SettingUtil.java",
                "index 2403a5661..3a5ff1a94 100644",
                "--- a/hutool-setting/src/main/java/cn/hutool/setting/SettingUtil.java",
                "+++ b/hutool-setting/src/main/java/cn/hutool/setting/SettingUtil.java",
                "@@ -5,2 +5,12 @@ import java.util.concurrent.ConcurrentHashMap;",
                "+import cn.hutool.core.io.FileUtil;",
                "+import cn.hutool.core.util.StrUtil;",
                "+",
                "+/**",
                "+ * Setting\u00e5\u00b7\u00a5\u00e5\u0085\u00b7\u00e7\u00b1\u00bb<br>",
                "+ * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e9\u009d\u0099\u00e6\u0080\u0081\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                " public class SettingUtil {",
                "@@ -8,5 +18,8 @@ public class SettingUtil {",
                " \tprivate static Map<String, Setting> settingMap = new ConcurrentHashMap<>();",
                "-\t",
                "+\tprivate static Object lock = new Object();",
                "+",
                " \t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e7\u008e\u00af\u00e5\u00a2\u0083\u00e4\u00b8\u008b\u00e7\u009a\u0084\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e7\u008e\u00af\u00e5\u00a2\u0083\u00e4\u00b8\u008b\u00e7\u009a\u0084\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6<br>",
                "+\t * name\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e4\u00b8\u00ba\u00e4\u00b8\u008d\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e6\u0089\u00a9\u00e5\u00b1\u0095\u00e5\u0090\u008d\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00ef\u00bc\u0088\u00e9\u00bb\u0098\u00e8\u00ae\u00a4.setting\u00e4\u00b8\u00ba\u00e7\u00bb\u0093\u00e5\u00b0\u00be\u00ef\u00bc\u0089\u00ef\u00bc\u008c\u00e4\u00b9\u009f\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e6\u0098\u00af\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00e5\u0085\u00a8\u00e7\u00a7\u00b0",
                "+\t * ",
                " \t * @param name \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u00b2\u00a1\u00e6\u009c\u0089\u00e6\u0089\u00a9\u00e5\u00b1\u0095\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e4\u00b8\u00ba.setting",
                "@@ -14,11 +27,17 @@ public class SettingUtil {",
                " \t */",
                "-\tpublic static Setting getSetting(String name){",
                "+\tpublic static Setting get(String name) {",
                " \t\tSetting setting = settingMap.get(name);",
                "-\t\tif(null == setting){",
                "-\t\t\tString filePath = name;",
                "-\t\t\tif(false == filePath.endsWith(Setting.EXT_NAME)) {",
                "-\t\t\t\tfilePath += Setting.EXT_NAME;",
                "+\t\tif (null == setting) {",
                "+\t\t\tsynchronized (lock) {",
                "+\t\t\t\tsetting = settingMap.get(name);",
                "+\t\t\t\tif (null == setting) {",
                "+\t\t\t\t\tString filePath = name;",
                "+\t\t\t\t\tString extName = FileUtil.extName(filePath);",
                "+\t\t\t\t\tif(StrUtil.isEmpty(extName)) {",
                "+\t\t\t\t\t\tfilePath  = filePath + \".\" + Setting.EXT_NAME;",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\tsetting = new Setting(filePath, true);",
                "+\t\t\t\t\tsettingMap.put(name, setting);",
                "+\t\t\t\t}",
                " \t\t\t}",
                "-\t\t\tsetting = new Setting(name, true);",
                "-\t\t\tsettingMap.put(name, setting);",
                " \t\t}"
            ],
            "changed_files": [
                "hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BitMapBloomFilter.java",
                "hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BloomFilterUtil.java",
                "hutool-setting/src/main/java/cn/hutool/setting/Setting.java",
                "hutool-setting/src/main/java/cn/hutool/setting/SettingUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1ade28ce59da73a1031bc50c6c8d020c89e8dc4b",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1540478952,
            "hunks": 100,
            "message": "add JSONConfig",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java",
                "index 81eb48dee..7eed4b53a 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java",
                "@@ -10,3 +10,2 @@ import java.net.URI;",
                " import java.net.URL;",
                "-import java.util.ArrayList;",
                " import java.util.Date;",
                "@@ -18,3 +17,2 @@ import java.util.Set;",
                "-import cn.hutool.core.collection.CollectionUtil;",
                " import cn.hutool.core.convert.BasicType;",
                "@@ -32,3 +30,3 @@ import cn.hutool.core.lang.Singleton;",
                "  * ",
                "- * @author  xiaoleilu",
                "+ * @author xiaoleilu",
                "  *",
                "@@ -86,3 +84,3 @@ public class ClassUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -97,6 +95,6 @@ public class ClassUtil {",
                " \t\tfinal List<String> packages = StrUtil.split(className, CharUtil.DOT);",
                "-\t\tif(null == packages || packages.size() < 2) {",
                "+\t\tif (null == packages || packages.size() < 2) {",
                " \t\t\treturn className;",
                " \t\t}",
                "-\t\t",
                "+",
                " \t\tfinal int size = packages.size();",
                "@@ -104,3 +102,3 @@ public class ClassUtil {",
                " \t\tresult.append(packages.get(0).charAt(0));",
                "-\t\tfor(int i = 1; i < size - 1; i++) {",
                "+\t\tfor (int i = 1; i < size - 1; i++) {",
                " \t\t\tresult.append(CharUtil.DOT).append(packages.get(i).charAt(0));",
                "@@ -215,9 +213,3 @@ public class ClassUtil {",
                " \tpublic static Set<String> getPublicMethodNames(Class<?> clazz) {",
                "-\t\tHashSet<String> methodSet = new HashSet<String>();",
                "-\t\tMethod[] methodArray = getPublicMethods(clazz);",
                "-\t\tfor (Method method : methodArray) {",
                "-\t\t\tString methodName = method.getName();",
                "-\t\t\tmethodSet.add(methodName);",
                "-\t\t}",
                "-\t\treturn methodSet;",
                "+\t\treturn ReflectUtil.getPublicMethodNames(clazz);",
                " \t}",
                "@@ -231,3 +223,3 @@ public class ClassUtil {",
                " \tpublic static Method[] getPublicMethods(Class<?> clazz) {",
                "-\t\treturn clazz.getMethods();",
                "+\t\treturn ReflectUtil.getPublicMethods(clazz);",
                " \t}",
                "@@ -242,19 +234,3 @@ public class ClassUtil {",
                " \tpublic static List<Method> getPublicMethods(Class<?> clazz, Filter<Method> filter) {",
                "-\t\tif (null == clazz) {",
                "-\t\t\treturn null;",
                "-\t\t}",
                "-",
                "-\t\tMethod[] methods = getPublicMethods(clazz);",
                "-\t\tList<Method> methodList;",
                "-\t\tif (null != filter) {",
                "-\t\t\tmethodList = new ArrayList<>();",
                "-\t\t\tfor (Method method : methods) {",
                "-\t\t\t\tif (filter.accept(method)) {",
                "-\t\t\t\t\tmethodList.add(method);",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "-\t\t} else {",
                "-\t\t\tmethodList = CollectionUtil.newArrayList(methods);",
                "-\t\t}",
                "-\t\treturn methodList;",
                "+\t\treturn ReflectUtil.getPublicMethods(clazz, filter);",
                " \t}",
                "@@ -269,9 +245,3 @@ public class ClassUtil {",
                " \tpublic static List<Method> getPublicMethods(Class<?> clazz, Method... excludeMethods) {",
                "-\t\tfinal HashSet<Method> excludeMethodSet = CollectionUtil.newHashSet(excludeMethods);",
                "-\t\treturn getPublicMethods(clazz, new Filter<Method>(){",
                "-\t\t\t@Override",
                "-\t\t\tpublic boolean accept(Method method) {",
                "-\t\t\t\treturn false == excludeMethodSet.contains(method);",
                "-\t\t\t}",
                "-\t\t});",
                "+\t\treturn ReflectUtil.getPublicMethods(clazz, excludeMethods);",
                " \t}",
                "@@ -286,9 +256,3 @@ public class ClassUtil {",
                " \tpublic static List<Method> getPublicMethods(Class<?> clazz, String... excludeMethodNames) {",
                "-\t\tfinal HashSet<String> excludeMethodNameSet = CollectionUtil.newHashSet(excludeMethodNames);",
                "-\t\treturn getPublicMethods(clazz, new Filter<Method>(){",
                "-\t\t\t@Override",
                "-\t\t\tpublic boolean accept(Method method) {",
                "-\t\t\t\treturn false == excludeMethodNameSet.contains(method.getName());",
                "-\t\t\t}",
                "-\t\t});",
                "+\t\treturn getPublicMethods(clazz, excludeMethodNames);",
                " \t}",
                "@@ -305,7 +269,3 @@ public class ClassUtil {",
                " \tpublic static Method getPublicMethod(Class<?> clazz, String methodName, Class<?>... paramTypes) throws SecurityException {",
                "-\t\ttry {",
                "-\t\t\treturn clazz.getMethod(methodName, paramTypes);",
                "-\t\t} catch (NoSuchMethodException ex) {",
                "-\t\t\treturn null;",
                "-\t\t}",
                "+\t\treturn ReflectUtil.getPublicMethod(clazz, methodName, paramTypes);",
                " \t}",
                "@@ -403,3 +363,3 @@ public class ClassUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -414,3 +374,3 @@ public class ClassUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -449,3 +409,3 @@ public class ClassUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -572,4 +532,4 @@ public class ClassUtil {",
                " \t\t}",
                "-\t\tif(null == types1 || null == types2) {",
                "-\t\t\t//\u00e4\u00bb\u00bb\u00e4\u00bd\u0095\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e4\u00b8\u00banull\u00e4\u00b8\u008d\u00e7\u009b\u00b8\u00e7\u00ad\u0089\u00ef\u00bc\u0088\u00e4\u00b9\u008b\u00e5\u0089\u008d\u00e5\u00b7\u00b2\u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e4\u00b8\u00a4\u00e4\u00b8\u00aa\u00e9\u0083\u00bd\u00e4\u00b8\u00banull\u00e7\u009a\u0084\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00ef\u00bc\u0089",
                "+\t\tif (null == types1 || null == types2) {",
                "+\t\t\t// \u00e4\u00bb\u00bb\u00e4\u00bd\u0095\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e4\u00b8\u00banull\u00e4\u00b8\u008d\u00e7\u009b\u00b8\u00e7\u00ad\u0089\u00ef\u00bc\u0088\u00e4\u00b9\u008b\u00e5\u0089\u008d\u00e5\u00b7\u00b2\u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e4\u00b8\u00a4\u00e4\u00b8\u00aa\u00e9\u0083\u00bd\u00e4\u00b8\u00banull\u00e7\u009a\u0084\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00ef\u00bc\u0089",
                " \t\t\treturn false;",
                "@@ -579,3 +539,3 @@ public class ClassUtil {",
                " \t\t}",
                "-\t\t",
                "+",
                " \t\tClass<?> type1;",
                "@@ -585,8 +545,8 @@ public class ClassUtil {",
                " \t\t\ttype2 = types2[i];",
                "-\t\t\tif(isBasicType(type1) && isBasicType(type2)) {",
                "-\t\t\t\t//\u00e5\u008e\u009f\u00e5\u00a7\u008b\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u0092\u008c\u00e5\u008c\u0085\u00e8\u00a3\u0085\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e4\u00b8\u008d\u00e4\u00b8\u0080\u00e8\u0087\u00b4\u00e6\u0083\u0085\u00e5\u0086\u00b5",
                "-\t\t\t\tif(BasicType.unWrap(type1) != BasicType.unWrap(type2)) {",
                "+\t\t\tif (isBasicType(type1) && isBasicType(type2)) {",
                "+\t\t\t\t// \u00e5\u008e\u009f\u00e5\u00a7\u008b\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u0092\u008c\u00e5\u008c\u0085\u00e8\u00a3\u0085\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e4\u00b8\u008d\u00e4\u00b8\u0080\u00e8\u0087\u00b4\u00e6\u0083\u0085\u00e5\u0086\u00b5",
                "+\t\t\t\tif (BasicType.unWrap(type1) != BasicType.unWrap(type2)) {",
                " \t\t\t\t\treturn false;",
                " \t\t\t\t}",
                "-\t\t\t}else if (false == type1.isAssignableFrom(type2)) {",
                "+\t\t\t} else if (false == type1.isAssignableFrom(type2)) {",
                " \t\t\t\treturn false;",
                "@@ -629,4 +589,3 @@ public class ClassUtil {",
                " \t * @param <T> \u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "-\t * @param classNameDotMethodName \u00e7\u00b1\u00bb\u00e5\u0090\u008d\u00e5\u0092\u008c\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0090\u008d\u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e7\u00b1\u00bb\u00e5\u0090\u008d\u00e4\u00b8\u008e\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0090\u008d\u00e7\u0094\u00a8<code>.</code>\u00e6\u0088\u0096<code>#</code>\u00e8\u00bf\u009e\u00e6\u008e\u00a5",
                "-\t * \u00e4\u00be\u008b\u00e5\u00a6\u0082\u00ef\u00bc\u009acom.xiaoleilu.hutool.StrUtil.isEmpty \u00e6\u0088\u0096 com.xiaoleilu.hutool.StrUtil#isEmpty",
                "+\t * @param classNameDotMethodName \u00e7\u00b1\u00bb\u00e5\u0090\u008d\u00e5\u0092\u008c\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0090\u008d\u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e7\u00b1\u00bb\u00e5\u0090\u008d\u00e4\u00b8\u008e\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0090\u008d\u00e7\u0094\u00a8<code>.</code>\u00e6\u0088\u0096<code>#</code>\u00e8\u00bf\u009e\u00e6\u008e\u00a5 \u00e4\u00be\u008b\u00e5\u00a6\u0082\u00ef\u00bc\u009acom.xiaoleilu.hutool.StrUtil.isEmpty \u00e6\u0088\u0096 com.xiaoleilu.hutool.StrUtil#isEmpty",
                " \t * @param args \u00e5\u008f\u0082\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e5\u00bf\u0085\u00e9\u00a1\u00bb\u00e4\u00b8\u00a5\u00e6\u00a0\u00bc\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u009a\u0084\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u0092\u008c\u00e6\u0095\u00b0\u00e9\u0087\u008f",
                "@@ -763,4 +722,11 @@ public class ClassUtil {",
                " \tpublic static boolean isSimpleValueType(Class<?> clazz) {",
                "-\t\treturn isBasicType(clazz) || clazz.isEnum() || CharSequence.class.isAssignableFrom(clazz) || Number.class.isAssignableFrom(clazz) || Date.class.isAssignableFrom(clazz) || clazz",
                "-\t\t\t\t.equals(URI.class) || clazz.equals(URL.class) || clazz.equals(Locale.class) || clazz.equals(Class.class);",
                "+\t\treturn isBasicType(clazz) //",
                "+\t\t\t\t|| clazz.isEnum() //",
                "+\t\t\t\t|| CharSequence.class.isAssignableFrom(clazz) //",
                "+\t\t\t\t|| Number.class.isAssignableFrom(clazz) //",
                "+\t\t\t\t|| Date.class.isAssignableFrom(clazz) //",
                "+\t\t\t\t|| clazz.equals(URI.class) //",
                "+\t\t\t\t|| clazz.equals(URL.class) //",
                "+\t\t\t\t|| clazz.equals(Locale.class) //",
                "+\t\t\t\t|| clazz.equals(Class.class);//",
                " \t}",
                "@@ -886,2 +852,3 @@ public class ClassUtil {",
                " \t * \u00e8\u00bf\u0099\u00e4\u00b8\u00aa\u00e7\u00b1\u00bb\u00e5\u00bf\u0085\u00e9\u00a1\u00bb\u00ef\u00bc\u009a",
                "+\t * ",
                " \t * <pre>",
                "@@ -908,5 +875,6 @@ public class ClassUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e7\u00b1\u00bb\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba\u00e6\u009e\u009a\u00e4\u00b8\u00be\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * ",
                " \t * @param clazz \u00e7\u00b1\u00bb",
                "@@ -975,3 +943,3 @@ public class ClassUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -979,2 +947,3 @@ public class ClassUtil {",
                " \t * \u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0080\u00bc\u00e8\u00a7\u0084\u00e5\u0088\u0099\u00e4\u00b8\u00ba\u00ef\u00bc\u009a",
                "+\t * ",
                " \t * <pre>",
                "@@ -989,18 +958,18 @@ public class ClassUtil {",
                " \tpublic static Object getDefaultValue(Class<?> clazz) {",
                "-\t\tif(clazz.isPrimitive()) {",
                "-\t\t\tif(long.class == clazz) {",
                "+\t\tif (clazz.isPrimitive()) {",
                "+\t\t\tif (long.class == clazz) {",
                " \t\t\t\treturn 0L;",
                "-\t\t\t}else if(int.class == clazz) {",
                "+\t\t\t} else if (int.class == clazz) {",
                " \t\t\t\treturn 0;",
                "-\t\t\t}else if(short.class == clazz) {",
                "-\t\t\t\treturn (short)0;",
                "-\t\t\t}else if(char.class == clazz) {",
                "-\t\t\t\treturn (char)0;",
                "-\t\t\t}else if(byte.class == clazz) {",
                "-\t\t\t\treturn (byte)0;",
                "-\t\t\t}else if(double.class == clazz) {",
                "+\t\t\t} else if (short.class == clazz) {",
                "+\t\t\t\treturn (short) 0;",
                "+\t\t\t} else if (char.class == clazz) {",
                "+\t\t\t\treturn (char) 0;",
                "+\t\t\t} else if (byte.class == clazz) {",
                "+\t\t\t\treturn (byte) 0;",
                "+\t\t\t} else if (double.class == clazz) {",
                " \t\t\t\treturn 0D;",
                "-\t\t\t}else if(float.class == clazz) {",
                "+\t\t\t} else if (float.class == clazz) {",
                " \t\t\t\treturn 0f;",
                "-\t\t\t}else if(boolean.class == clazz) {",
                "+\t\t\t} else if (boolean.class == clazz) {",
                " \t\t\t\treturn false;",
                "@@ -1008,8 +977,9 @@ public class ClassUtil {",
                " \t\t}",
                "-\t\t",
                "+",
                " \t\treturn null;",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0080\u00bc\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * ",
                " \t * @param classes \u00e5\u0080\u00bc\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "@@ -1020,3 +990,3 @@ public class ClassUtil {",
                " \t\tfinal Object[] values = new Object[classes.length];",
                "-\t\tfor(int i = 0; i < classes.length; i++) {",
                "+\t\tfor (int i = 0; i < classes.length; i++) {",
                " \t\t\tvalues[i] = getDefaultValue(classes[i]);",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java",
                "index 00092ef62..2679847a9 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java",
                "@@ -15,2 +15,3 @@ import java.util.Set;",
                " import cn.hutool.core.collection.CollUtil;",
                "+import cn.hutool.core.collection.CollectionUtil;",
                " import cn.hutool.core.exceptions.UtilException;",
                "@@ -253,2 +254,108 @@ public class ReflectUtil {",
                " \t// --------------------------------------------------------------------------------------------------------- method",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u00b1\u00bb\u00e6\u009c\u00ac\u00e7\u00b1\u00bb\u00e5\u008f\u008a\u00e5\u0085\u00b6\u00e7\u0088\u00b6\u00e7\u00b1\u00bb\u00e4\u00b8\u00ad\u00e7\u009a\u0084Public\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0090\u008d<br>",
                "+\t * \u00e5\u008e\u00bb\u00e9\u0087\u008d\u00e9\u0087\u008d\u00e8\u00bd\u00bd\u00e7\u009a\u0084\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t * ",
                "+\t * @param clazz \u00e7\u00b1\u00bb",
                "+\t * @return \u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0090\u008dSet",
                "+\t */",
                "+\tpublic static Set<String> getPublicMethodNames(Class<?> clazz) {",
                "+\t\tfinal HashSet<String> methodSet = new HashSet<String>();",
                "+\t\tfinal Method[] methodArray = getPublicMethods(clazz);",
                "+\t\tif(ArrayUtil.isNotEmpty(methodArray)) {",
                "+\t\t\tfor (Method method : methodArray) {",
                "+\t\t\t\tmethodSet.add(method.getName());",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn methodSet;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e6\u009c\u00ac\u00e7\u00b1\u00bb\u00e5\u008f\u008a\u00e5\u0085\u00b6\u00e7\u0088\u00b6\u00e7\u00b1\u00bb\u00e6\u0089\u0080\u00e6\u009c\u0089Public\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t * ",
                "+\t * @param clazz \u00e6\u009f\u00a5\u00e6\u0089\u00be\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u009a\u0084\u00e7\u00b1\u00bb",
                "+\t * @return \u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t */",
                "+\tpublic static Method[] getPublicMethods(Class<?> clazz) {",
                "+\t\treturn null == clazz ? null : clazz.getMethods();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u00b1\u00bb\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0090\u008e\u00e7\u009a\u0084Public\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * ",
                "+\t * @param clazz \u00e6\u009f\u00a5\u00e6\u0089\u00be\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u009a\u0084\u00e7\u00b1\u00bb",
                "+\t * @param filter \u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8",
                "+\t * @return \u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t */",
                "+\tpublic static List<Method> getPublicMethods(Class<?> clazz, Filter<Method> filter) {",
                "+\t\tif (null == clazz) {",
                "+\t\t\treturn null;",
                "+\t\t}",
                "+",
                "+\t\tfinal Method[] methods = getPublicMethods(clazz);",
                "+\t\tList<Method> methodList;",
                "+\t\tif (null != filter) {",
                "+\t\t\tmethodList = new ArrayList<>();",
                "+\t\t\tfor (Method method : methods) {",
                "+\t\t\t\tif (filter.accept(method)) {",
                "+\t\t\t\t\tmethodList.add(method);",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t} else {",
                "+\t\t\tmethodList = CollectionUtil.newArrayList(methods);",
                "+\t\t}",
                "+\t\treturn methodList;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u00b1\u00bb\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0090\u008e\u00e7\u009a\u0084Public\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * ",
                "+\t * @param clazz \u00e6\u009f\u00a5\u00e6\u0089\u00be\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u009a\u0084\u00e7\u00b1\u00bb",
                "+\t * @param excludeMethods \u00e4\u00b8\u008d\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e7\u009a\u0084\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t * @return \u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t */",
                "+\tpublic static List<Method> getPublicMethods(Class<?> clazz, Method... excludeMethods) {",
                "+\t\tfinal HashSet<Method> excludeMethodSet = CollectionUtil.newHashSet(excludeMethods);",
                "+\t\treturn getPublicMethods(clazz, new Filter<Method>() {",
                "+\t\t\t@Override",
                "+\t\t\tpublic boolean accept(Method method) {",
                "+\t\t\t\treturn false == excludeMethodSet.contains(method);",
                "+\t\t\t}",
                "+\t\t});",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u00b1\u00bb\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0090\u008e\u00e7\u009a\u0084Public\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * ",
                "+\t * @param clazz \u00e6\u009f\u00a5\u00e6\u0089\u00be\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u009a\u0084\u00e7\u00b1\u00bb",
                "+\t * @param excludeMethodNames \u00e4\u00b8\u008d\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e7\u009a\u0084\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0090\u008d\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * @return \u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t */",
                "+\tpublic static List<Method> getPublicMethods(Class<?> clazz, String... excludeMethodNames) {",
                "+\t\tfinal HashSet<String> excludeMethodNameSet = CollectionUtil.newHashSet(excludeMethodNames);",
                "+\t\treturn getPublicMethods(clazz, new Filter<Method>() {",
                "+\t\t\t@Override",
                "+\t\t\tpublic boolean accept(Method method) {",
                "+\t\t\t\treturn false == excludeMethodNameSet.contains(method.getName());",
                "+\t\t\t}",
                "+\t\t});",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009f\u00a5\u00e6\u0089\u00be\u00e6\u008c\u0087\u00e5\u00ae\u009aPublic\u00e6\u0096\u00b9\u00e6\u00b3\u0095 \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u0089\u00be\u00e4\u00b8\u008d\u00e5\u0088\u00b0\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e6\u0088\u0096\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e4\u00b8\u008d\u00e4\u00b8\u00bapublic\u00e7\u009a\u0084\u00e5\u0088\u0099\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>null</code>",
                "+\t * ",
                "+\t * @param clazz \u00e7\u00b1\u00bb",
                "+\t * @param methodName \u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0090\u008d",
                "+\t * @param paramTypes \u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @return \u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t * @throws SecurityException \u00e6\u0097\u00a0\u00e6\u009d\u0083\u00e8\u00ae\u00bf\u00e9\u0097\u00ae\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t */",
                "+\tpublic static Method getPublicMethod(Class<?> clazz, String methodName, Class<?>... paramTypes) throws SecurityException {",
                "+\t\ttry {",
                "+\t\t\treturn clazz.getMethod(methodName, paramTypes);",
                "+\t\t} catch (NoSuchMethodException ex) {",
                "+\t\t\treturn null;",
                "+\t\t}",
                "+\t}",
                "+\t",
                " \t/**",
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java b/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "index 93b514d84..b8c23b8c9 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "@@ -21,2 +21,3 @@ import cn.hutool.core.convert.ConverterRegistry;",
                " import cn.hutool.core.convert.impl.CollectionConverter;",
                "+import cn.hutool.core.date.DateUtil;",
                " import cn.hutool.core.util.NumberUtil;",
                "@@ -42,4 +43,5 @@ final class InternalJSONUtil {",
                " \t * @param value \u00e5\u0080\u00bc",
                "-\t * @param indentFactor",
                "+\t * @param indentFactor \u00e6\u00af\u008f\u00e4\u00b8\u0080\u00e7\u00ba\u00a7\u00e5\u0088\u00ab\u00e7\u009a\u0084\u00e7\u00bc\u00a9\u00e8\u00bf\u009b\u00e9\u0087\u008f",
                " \t * @param indent \u00e7\u00bc\u00a9\u00e8\u00bf\u009b\u00e7\u00a9\u00ba\u00e6\u00a0\u00bc\u00e6\u0095\u00b0",
                "+\t * @param config \u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e9\u00a1\u00b9",
                " \t * @return Writer",
                "@@ -48,5 +50,4 @@ final class InternalJSONUtil {",
                " \t */",
                "-\tprotected static final Writer writeValue(Writer writer, Object value, int indentFactor, int indent) throws JSONException, IOException {",
                "+\tprotected static final Writer writeValue(Writer writer, Object value, int indentFactor, int indent, JSONConfig config) throws JSONException, IOException {",
                " \t\tif (value == null || value instanceof JSONNull) {",
                "-\t\t\twriter.write(\"null\");",
                " \t\t} else if (value instanceof JSON) {",
                "@@ -59,6 +60,5 @@ final class InternalJSONUtil {",
                " \t\t\twriter.write(NumberUtil.toStr((Number) value));",
                "-\t\t}else if (value instanceof Date) {",
                "-\t\t\twriter.write(String.valueOf(((Date) value).getTime()));",
                "-\t\t}else if (value instanceof Calendar) {",
                "-\t\t\twriter.write(String.valueOf(((Calendar) value).getTimeInMillis()));",
                "+\t\t} else if (value instanceof Date || value instanceof Calendar) {",
                "+\t\t\tfinal String format = (null == config) ? null : config.getDateFormat();",
                "+\t\t\twriter.write(formatDate(value, format));",
                " \t\t} else if (value instanceof Boolean) {",
                "@@ -78,3 +78,3 @@ final class InternalJSONUtil {",
                " \t}",
                "-",
                "+\t",
                " \t/**",
                "@@ -232,3 +232,3 @@ final class InternalJSONUtil {",
                " \t\t\t\tObject value = jsonObject.get(key);",
                "-\t\t\t\tif(null == value) {",
                "+\t\t\t\tif (null == value) {",
                " \t\t\t\t\tvalue = jsonObject.get(StrUtil.toUnderlineCase(key));",
                "@@ -240,5 +240,5 @@ final class InternalJSONUtil {",
                " \t\t\tpublic boolean containsKey(String key) {",
                "-\t\t\t\tif(jsonObject.containsKey(key)) {",
                "+\t\t\t\tif (jsonObject.containsKey(key)) {",
                " \t\t\t\t\treturn true;",
                "-\t\t\t\t}else if(jsonObject.containsKey(StrUtil.toUnderlineCase(key))) {",
                "+\t\t\t\t} else if (jsonObject.containsKey(StrUtil.toUnderlineCase(key))) {",
                " \t\t\t\t\treturn true;",
                "@@ -269,3 +269,3 @@ final class InternalJSONUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -315,3 +315,3 @@ final class InternalJSONUtil {",
                " \t\t}",
                "-\t\t",
                "+",
                " \t\tObject targetValue = null;",
                "@@ -319,4 +319,4 @@ final class InternalJSONUtil {",
                " \t\tif (value instanceof JSONObject) {",
                "-\t\t\tif(BeanUtil.isBean(rowType)) {",
                "-\t\t\t\t//\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e4\u00b8\u00baBean",
                "+\t\t\tif (BeanUtil.isBean(rowType)) {",
                "+\t\t\t\t// \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e4\u00b8\u00baBean",
                " \t\t\t\ttargetValue = ((JSONObject) value).toBean(type, ignoreError);",
                "@@ -331,3 +331,3 @@ final class InternalJSONUtil {",
                " \t\t}",
                "-\t\t",
                "+",
                " \t\t// \u00e6\u00a0\u0087\u00e5\u0087\u0086\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e8\u00bd\u00ac\u00e6\u008d\u00a2",
                "@@ -343,3 +343,3 @@ final class InternalJSONUtil {",
                " \t\t}",
                "-\t\t",
                "+",
                " \t\tif (null == targetValue && false == ignoreError) {",
                "@@ -352,5 +352,23 @@ final class InternalJSONUtil {",
                " \t\t}",
                "-\t\t",
                "+",
                " \t\treturn targetValue;",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u008c\u0089\u00e7\u0085\u00a7\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e5\u008c\u0096\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00ef\u00bc\u008c\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba\u00e6\u0097\u00b6\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * ",
                "+\t * @param dateObj Date\u00e6\u0088\u0096\u00e8\u0080\u0085Calendar\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param format \u00e6\u00a0\u00bc\u00e5\u00bc\u008f",
                "+\t * @return \u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t */",
                "+\tprivate static String formatDate(Object dateObj, String format) {",
                "+\t\tif (StrUtil.isNotBlank(format)) {",
                "+\t\t\tfinal Date date = (dateObj instanceof Date) ? (Date)dateObj : ((Calendar)dateObj).getTime();",
                "+\t\t\t//\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e4\u00ba\u0086\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e6\u00a0\u00bc\u00e5\u00bc\u008f",
                "+\t\t\treturn DateUtil.format(date, format);",
                "+\t\t}",
                "+\t\t",
                "+\t\t//\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3",
                "+\t\treturn String.valueOf((dateObj instanceof Date) ? ((Date)dateObj).getTime() : ((Calendar)dateObj).getTimeInMillis());",
                "+\t}",
                " }",
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/JSONArray.java b/hutool-json/src/main/java/cn/hutool/json/JSONArray.java",
                "index 54b941c69..caf25abec 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/JSONArray.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/JSONArray.java",
                "@@ -34,4 +34,4 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \tprivate final List<Object> rawList;",
                "-\t/** \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e7\u00a9\u00ba\u00e5\u0080\u00bc */",
                "-\tprivate boolean ignoreNullValue;",
                "+\t/** \u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e9\u00a1\u00b9 */",
                "+\tprivate JSONConfig config;",
                "@@ -54,4 +54,16 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \tpublic JSONArray(int initialCapacity) {",
                "+\t\tthis(initialCapacity, JSONConfig.create());",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0<br>",
                "+\t * \u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link ArrayList} \u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+\t * ",
                "+\t * @param initialCapacity \u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u00a4\u00a7\u00e5\u00b0\u008f",
                "+\t * @param config JSON\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e9\u00a1\u00b9",
                "+\t * @since 4.1.19",
                "+\t */",
                "+\tpublic JSONArray(int initialCapacity, JSONConfig config) {",
                " \t\tthis.rawList = new ArrayList<Object>(initialCapacity);",
                "-\t\tthis.ignoreNullValue = true;",
                "+\t\tthis.config = config;",
                " \t}",
                "@@ -105,3 +117,3 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -138,34 +150,17 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \tpublic JSONArray(Object object, boolean ignoreNullValue) throws JSONException {",
                "-\t\tthis();",
                "-\t\tthis.ignoreNullValue = ignoreNullValue;",
                "-",
                "-\t\tif (object instanceof CharSequence) {",
                "-\t\t\t//JSON\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "-\t\t\tinit((CharSequence) object);",
                "-\t\t}else {",
                "-\t\t\tIterator<?> iter;",
                "-\t\t\tif (object.getClass().isArray()) {// \u00e6\u0095\u00b0\u00e7\u00bb\u0084",
                "-\t\t\t\titer = new ArrayIter<>(object);",
                "-\t\t\t}else if (object instanceof Iterator<?>) {// Iterator",
                "-\t\t\t\titer = ((Iterator<?>) object);",
                "-\t\t\t} else if (object instanceof Iterable<?>) {// Iterable",
                "-\t\t\t\titer = ((Iterable<?>) object).iterator();",
                "-\t\t\t} else {",
                "-\t\t\t\tthrow new JSONException(\"JSONArray initial value should be a string or collection or array.\");",
                "-\t\t\t}",
                "-\t\t\twhile(iter.hasNext()) {",
                "-\t\t\t\tthis.add(iter.next());",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tthis(DEFAULT_CAPACITY, JSONConfig.create().setIgnoreNullValue(ignoreNullValue));",
                "+\t\tinit(object);",
                " \t}",
                " \t// -------------------------------------------------------------------------------------------------------------------- Constructor start",
                "-",
                "+\t",
                " \t/**",
                "-\t * \u00e5\u0080\u00bc\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba<code>null</code>",
                "-\t *",
                "-\t * @param index \u00e5\u0080\u00bc\u00e6\u0089\u0080\u00e5\u009c\u00a8\u00e5\u00ba\u008f\u00e5\u0088\u0097",
                "-\t * @return true if the value at the index is null, or if there is no value.",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e8\u00bd\u00ac\u00e4\u00b8\u00ba\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e6\u0097\u00b6\u00e7\u009a\u0084\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e4\u00b8\u00ba\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3\u00ef\u00bc\u0088null\u00e5\u0080\u00bc\u00ef\u00bc\u0089",
                "+\t * ",
                "+\t * @param format \u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00ef\u00bc\u008cnull\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3",
                "+\t * @return this",
                "+\t * @since 4.1.19",
                " \t */",
                "-\tpublic boolean isNull(int index) {",
                "-\t\treturn JSONNull.NULL.equals(this.getObj(index));",
                "+\tpublic JSONArray setDateFormat(String format) {",
                "+\t\tthis.config.setDateFormat(format);",
                "+\t\treturn this;",
                " \t}",
                "@@ -259,3 +254,3 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \t}",
                "-\t",
                "+",
                " \t@Override",
                "@@ -270,3 +265,3 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \t}",
                "-\t",
                "+",
                " \t@Override",
                "@@ -403,3 +398,3 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \t\t\tif (length == 1) {",
                "-\t\t\t\tInternalJSONUtil.writeValue(writer, this.rawList.get(0), indentFactor, indent);",
                "+\t\t\t\tInternalJSONUtil.writeValue(writer, this.rawList.get(0), indentFactor, indent, this.config);",
                " \t\t\t} else if (length != 0) {",
                "@@ -415,3 +410,3 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \t\t\t\t\tInternalJSONUtil.indent(writer, newindent);",
                "-\t\t\t\t\tInternalJSONUtil.writeValue(writer, this.rawList.get(i), indentFactor, newindent);",
                "+\t\t\t\t\tInternalJSONUtil.writeValue(writer, this.rawList.get(i), indentFactor, newindent, this.config);",
                " \t\t\t\t\tcommanate = true;",
                "@@ -434,3 +429,3 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -441,3 +436,3 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \t */",
                "-\tpublic Iterable<JSONObject> jsonIter(){",
                "+\tpublic Iterable<JSONObject> jsonIter() {",
                " \t\treturn new JSONObjectIter(iterator());",
                "@@ -472,3 +467,3 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \tpublic boolean add(Object e) {",
                "-\t\treturn this.rawList.add(JSONUtil.wrap(e, ignoreNullValue));",
                "+\t\treturn this.rawList.add(JSONUtil.wrap(e, this.config.isIgnoreNullValue()));",
                " \t}",
                "@@ -492,3 +487,3 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \tpublic boolean addAll(Collection<? extends Object> c) {",
                "-\t\tif(CollUtil.isEmpty(c)) {",
                "+\t\tif (CollUtil.isEmpty(c)) {",
                " \t\t\treturn false;",
                "@@ -503,3 +498,3 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \tpublic boolean addAll(int index, Collection<? extends Object> c) {",
                "-\t\tif(CollUtil.isEmpty(c)) {",
                "+\t\tif (CollUtil.isEmpty(c)) {",
                " \t\t\treturn false;",
                "@@ -508,3 +503,3 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \t\tfor (Object object : c) {",
                "-\t\t\tlist.add(JSONUtil.wrap(object, ignoreNullValue));",
                "+\t\t\tlist.add(JSONUtil.wrap(object, this.config.isIgnoreNullValue()));",
                " \t\t}",
                "@@ -531,3 +526,3 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \tpublic Object set(int index, Object element) {",
                "-\t\treturn this.rawList.set(index, JSONUtil.wrap(element, this.ignoreNullValue));",
                "+\t\treturn this.rawList.set(index, JSONUtil.wrap(element, this.config.isIgnoreNullValue()));",
                " \t}",
                "@@ -541,3 +536,3 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \t\t\tInternalJSONUtil.testValidity(element);",
                "-\t\t\tthis.rawList.set(index, JSONUtil.wrap(element, this.ignoreNullValue));",
                "+\t\t\tthis.rawList.set(index, JSONUtil.wrap(element, this.config.isIgnoreNullValue()));",
                " \t\t} else {",
                "@@ -610,2 +605,29 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \t// ------------------------------------------------------------------------------------------------- Private method start",
                "+\t/**",
                "+\t * \u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u008c\u0096",
                "+\t * ",
                "+\t * @param object \u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e6\u0088\u0096\u00e9\u009b\u0086\u00e5\u0090\u0088\u00e6\u0088\u0096JSON\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @throws JSONException \u00e9\u009d\u009e\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e6\u0088\u0096\u00e9\u009b\u0086\u00e5\u0090\u0088",
                "+\t */",
                "+\tprivate void init(Object object) throws JSONException{",
                "+\t\tif (object instanceof CharSequence) {",
                "+\t\t\t// JSON\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t\t\tinit((CharSequence) object);",
                "+\t\t} else {",
                "+\t\t\tIterator<?> iter;",
                "+\t\t\tif (object.getClass().isArray()) {// \u00e6\u0095\u00b0\u00e7\u00bb\u0084",
                "+\t\t\t\titer = new ArrayIter<>(object);",
                "+\t\t\t} else if (object instanceof Iterator<?>) {// Iterator",
                "+\t\t\t\titer = ((Iterator<?>) object);",
                "+\t\t\t} else if (object instanceof Iterable<?>) {// Iterable",
                "+\t\t\t\titer = ((Iterable<?>) object).iterator();",
                "+\t\t\t} else {",
                "+\t\t\t\tthrow new JSONException(\"JSONArray initial value should be a string or collection or array.\");",
                "+\t\t\t}",
                "+\t\t\twhile (iter.hasNext()) {",
                "+\t\t\t\tthis.add(iter.next());",
                "+\t\t\t}",
                "+\t\t}",
                "+\t}",
                "+\t",
                " \t/**",
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/JSONConfig.java b/hutool-json/src/main/java/cn/hutool/json/JSONConfig.java",
                "new file mode 100644",
                "index 000000000..9b6ba3a31",
                "--- /dev/null",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/JSONConfig.java",
                "@@ -0,0 +1,132 @@",
                "+package cn.hutool.json;",
                "+",
                "+import java.io.Serializable;",
                "+",
                "+/**",
                "+ * JSON\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e9\u00a1\u00b9",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.19",
                "+ */",
                "+public class JSONConfig implements Serializable {",
                "+\tprivate static final long serialVersionUID = 119730355204738278L;",
                "+",
                "+\t/** \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u009c\u0089\u00e5\u00ba\u008f\u00ef\u00bc\u008c\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e6\u008c\u0089\u00e7\u0085\u00a7\u00e5\u008a\u00a0\u00e5\u0085\u00a5\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e6\u008e\u0092\u00e5\u00ba\u008f */",
                "+\tprivate boolean order;",
                "+\t/** \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e8\u00bf\u0087\u00e7\u00a8\u008b\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e5\u00bc\u0082\u00e5\u00b8\u00b8 */",
                "+\tprivate boolean ignoreError;",
                "+\t/** \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e9\u0094\u00ae\u00e7\u009a\u0084\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00e5\u0086\u0099 */",
                "+\tprivate boolean ignoreCase;",
                "+\t/** \u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00ef\u00bc\u008cnull\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3 */",
                "+\tprivate String dateFormat;",
                "+\t/** \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5null\u00e5\u0080\u00bc */",
                "+\tprivate boolean ignoreNullValue = true;",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e7\u009a\u0084\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e9\u00a1\u00b9",
                "+\t * @return JSONConfig",
                "+\t */",
                "+\tpublic static JSONConfig create() {",
                "+\t\treturn new JSONConfig();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u009c\u0089\u00e5\u00ba\u008f\u00ef\u00bc\u008c\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e6\u008c\u0089\u00e7\u0085\u00a7\u00e5\u008a\u00a0\u00e5\u0085\u00a5\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e6\u008e\u0092\u00e5\u00ba\u008f",
                "+\t * ",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u009c\u0089\u00e5\u00ba\u008f",
                "+\t */",
                "+\tpublic boolean isOrder() {",
                "+\t\treturn order;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u009c\u0089\u00e5\u00ba\u008f\u00ef\u00bc\u008c\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e6\u008c\u0089\u00e7\u0085\u00a7\u00e5\u008a\u00a0\u00e5\u0085\u00a5\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e6\u008e\u0092\u00e5\u00ba\u008f",
                "+\t * ",
                "+\t * @param order \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u009c\u0089\u00e5\u00ba\u008f",
                "+\t * @return this",
                "+\t */",
                "+\tpublic JSONConfig setOrder(boolean order) {",
                "+\t\tthis.order = order;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e8\u00bf\u0087\u00e7\u00a8\u008b\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * ",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e8\u00bf\u0087\u00e7\u00a8\u008b\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t */",
                "+\tpublic boolean isIgnoreError() {",
                "+\t\treturn ignoreError;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e8\u00bf\u0087\u00e7\u00a8\u008b\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * ",
                "+\t * @param ignoreError \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e8\u00bf\u0087\u00e7\u00a8\u008b\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * @return this",
                "+\t */",
                "+\tpublic JSONConfig setIgnoreError(boolean ignoreError) {",
                "+\t\tthis.ignoreError = ignoreError;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e9\u0094\u00ae\u00e7\u009a\u0084\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00e5\u0086\u0099",
                "+\t * ",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e9\u0094\u00ae\u00e7\u009a\u0084\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00e5\u0086\u0099",
                "+\t */",
                "+\tpublic boolean isIgnoreCase() {",
                "+\t\treturn ignoreCase;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e9\u0094\u00ae\u00e7\u009a\u0084\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00e5\u0086\u0099",
                "+\t * ",
                "+\t * @param ignoreCase \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e9\u0094\u00ae\u00e7\u009a\u0084\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00e5\u0086\u0099",
                "+\t * @return this",
                "+\t */",
                "+\tpublic JSONConfig setIgnoreCase(boolean ignoreCase) {",
                "+\t\tthis.ignoreCase = ignoreCase;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00ef\u00bc\u008cnull\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3",
                "+\t * ",
                "+\t * @return \u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00ef\u00bc\u008cnull\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3",
                "+\t */",
                "+\tpublic String getDateFormat() {",
                "+\t\treturn dateFormat;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00ef\u00bc\u008cnull\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3",
                "+\t * ",
                "+\t * @param dateFormat \u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00ef\u00bc\u008cnull\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3",
                "+\t * @return this",
                "+\t */",
                "+\tpublic JSONConfig setDateFormat(String dateFormat) {",
                "+\t\tthis.dateFormat = dateFormat;",
                "+\t\treturn this;",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5null\u00e5\u0080\u00bc",
                "+\t * ",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5null\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic boolean isIgnoreNullValue() {",
                "+\t\treturn this.ignoreNullValue;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5null\u00e5\u0080\u00bc",
                "+\t * ",
                "+\t * @param ignoreNullValue \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5null\u00e5\u0080\u00bc",
                "+\t * @return this",
                "+\t */",
                "+\tpublic JSONConfig setIgnoreNullValue(boolean ignoreNullValue) {",
                "+\t\tthis.ignoreNullValue = ignoreNullValue;",
                "+\t\treturn this;",
                "+\t}",
                "+}",
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/JSONGetter.java b/hutool-json/src/main/java/cn/hutool/json/JSONGetter.java",
                "index 6c1456dce..2177364d6 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/JSONGetter.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/JSONGetter.java",
                "@@ -13,2 +13,12 @@ public abstract class JSONGetter<K> extends OptNullBasicTypeFromObjectGetter<K>{",
                "+\t/**",
                "+\t * key\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e5\u0080\u00bc\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba<code>null</code>\u00e6\u0088\u0096\u00e6\u0097\u00a0\u00e6\u00ad\u00a4key",
                "+\t *",
                "+\t * @param key \u00e9\u0094\u00ae",
                "+\t * @return true \u00e6\u0097\u00a0\u00e6\u00ad\u00a4key\u00e6\u0088\u0096\u00e5\u0080\u00bc\u00e4\u00b8\u00ba<code>null</code>\u00e6\u0088\u0096{@link JSONNull#NULL}\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>false</code>\u00ef\u00bc\u008c\u00e5\u0085\u00b6\u00e5\u00ae\u0083\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>true</code>",
                "+\t */",
                "+\tpublic boolean isNull(K key) {",
                "+\t\treturn JSONNull.NULL.equals(this.getObj(key));",
                "+\t}",
                "+\t",
                " \t@Override",
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/JSONObject.java b/hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "index b3c973002..c42e5d8b7 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "@@ -47,4 +47,4 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \tprivate final Map<String, Object> rawHashMap;",
                "-\t/** \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e7\u00a9\u00ba\u00e5\u0080\u00bc */",
                "-\tprivate boolean ignoreNullValue = true;",
                "+\t/** \u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e9\u00a1\u00b9 */",
                "+\tprivate JSONConfig config;",
                "@@ -88,7 +88,19 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \tpublic JSONObject(int capacity, boolean isIgnoreCase, boolean isOrder) {",
                "-\t\tif (isIgnoreCase) {",
                "-\t\t\tthis.rawHashMap = isOrder ? new CaseInsensitiveLinkedMap<String, Object>(capacity) : new CaseInsensitiveMap<String, Object>(capacity);",
                "+\t\tthis(capacity, JSONConfig.create().setIgnoreCase(isIgnoreCase).setOrder(isOrder));",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param capacity \u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u00a4\u00a7\u00e5\u00b0\u008f",
                "+\t * @param config JSON\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e9\u00a1\u00b9",
                "+\t * @since 4.1.19",
                "+\t */",
                "+\tpublic JSONObject(int capacity, JSONConfig config) {",
                "+\t\tif (config.isIgnoreCase()) {",
                "+\t\t\tthis.rawHashMap = config.isOrder() ? new CaseInsensitiveLinkedMap<String, Object>(capacity) : new CaseInsensitiveMap<String, Object>(capacity);",
                " \t\t} else {",
                "-\t\t\tthis.rawHashMap = isOrder ? new LinkedHashMap<String, Object>(capacity) : new HashMap<String, Object>(capacity);",
                "+\t\t\tthis.rawHashMap = config.isOrder() ? new LinkedHashMap<String, Object>(capacity) : new HashMap<String, Object>(capacity);",
                " \t\t}",
                "+\t\tthis.config = config;",
                " \t}",
                "@@ -161,22 +173,5 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \tpublic JSONObject(Object source, boolean ignoreNullValue) {",
                "-\t\tthis(DEFAULT_CAPACITY, (source instanceof LinkedHashMap));",
                "-\t\tthis.ignoreNullValue = ignoreNullValue;",
                "-\t\tif (null != source) {",
                "-\t\t\tif (source instanceof Map) {",
                "-\t\t\t\tfor (final Entry<?, ?> e : ((Map<?, ?>) source).entrySet()) {",
                "-\t\t\t\t\tfinal Object value = e.getValue();",
                "-\t\t\t\t\tif (false == ignoreNullValue || value != null) {",
                "-\t\t\t\t\t\tthis.rawHashMap.put(Convert.toStr(e.getKey()), JSONUtil.wrap(value, ignoreNullValue));",
                "-\t\t\t\t\t}",
                "-\t\t\t\t}",
                "-\t\t\t} else if (source instanceof CharSequence) {",
                "-\t\t\t\t// \u00e5\u008f\u00af\u00e8\u0083\u00bd\u00e4\u00b8\u00baJSON\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "-\t\t\t\tinit((CharSequence) source);",
                "-\t\t\t} else if (source instanceof Number) {",
                "-\t\t\t\t// ignore Number",
                "-\t\t\t} else {",
                "-\t\t\t\t// \u00e6\u0099\u00ae\u00e9\u0080\u009aBean",
                "-\t\t\t\tthis.populateMap(source);",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tthis(DEFAULT_CAPACITY, JSONConfig.create().setOrder((source instanceof LinkedHashMap)).setIgnoreCase((source instanceof CaseInsensitiveMap) || (source instanceof CaseInsensitiveLinkedMap))",
                "+\t\t\t\t.setIgnoreNullValue(ignoreNullValue));",
                "+\t\tinit(source);",
                " \t}",
                "@@ -218,11 +213,13 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \t/**",
                "-\t * key\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e5\u0080\u00bc\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba<code>null</code>\u00e6\u0088\u0096\u00e6\u0097\u00a0\u00e6\u00ad\u00a4key",
                "-\t *",
                "-\t * @param key \u00e9\u0094\u00ae",
                "-\t * @return true \u00e6\u0097\u00a0\u00e6\u00ad\u00a4key\u00e6\u0088\u0096\u00e5\u0080\u00bc\u00e4\u00b8\u00ba<code>null</code>\u00e6\u0088\u0096{@link JSONNull#NULL}\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>false</code>\u00ef\u00bc\u008c\u00e5\u0085\u00b6\u00e5\u00ae\u0083\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>true</code>",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e8\u00bd\u00ac\u00e4\u00b8\u00ba\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e6\u0097\u00b6\u00e7\u009a\u0084\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e4\u00b8\u00ba\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3\u00ef\u00bc\u0088null\u00e5\u0080\u00bc\u00ef\u00bc\u0089",
                "+\t * ",
                "+\t * @param format \u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00ef\u00bc\u008cnull\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3",
                "+\t * @return this",
                "+\t * @since 4.1.19",
                " \t */",
                "-\tpublic boolean isNull(String key) {",
                "-\t\treturn JSONNull.NULL.equals(this.getObj(key));",
                "+\tpublic JSONObject setDateFormat(String format) {",
                "+\t\tthis.config.setDateFormat(format);",
                "+\t\treturn this;",
                " \t}",
                "-",
                "+\t",
                " \t/**",
                "@@ -449,10 +446,13 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \tpublic JSONObject put(String key, Object value) throws JSONException {",
                "-\t\tif (key == null) {",
                "-\t\t\tthrow new NullPointerException(\"Null key.\");",
                "+\t\tif (null == key) {",
                "+\t\t\treturn this;",
                " \t\t}",
                "-\t\tif (value != null) {",
                "-\t\t\tInternalJSONUtil.testValidity(value);",
                "-\t\t\tthis.rawHashMap.put(key, JSONUtil.wrap(value, this.ignoreNullValue));",
                "-\t\t} else {",
                "+",
                "+\t\tfinal boolean ignoreNullValue = this.config.isIgnoreNullValue();",
                "+\t\tif (null == value && ignoreNullValue) {",
                "+\t\t\t// \u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e5\u0080\u00bc\u00e6\u00a8\u00a1\u00e5\u00bc\u008f\u00e4\u00b8\u008b\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u0080\u00bc\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba\u00e6\u00b8\u0085\u00e9\u0099\u00a4key",
                " \t\t\tthis.remove(key);",
                "+\t\t} else {",
                "+\t\t\tInternalJSONUtil.testValidity(value);",
                "+\t\t\tthis.rawHashMap.put(key, JSONUtil.wrap(value, ignoreNullValue));",
                " \t\t}",
                "@@ -462,4 +462,3 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \t/**",
                "-\t * Put a key/value pair in the JSONObject, but only if the key and the value are both non-null, <br>",
                "-\t * and only if there is not already a member with that name. \u00e4\u00b8\u0080\u00e6\u00ac\u00a1\u00e6\u0080\u00a7Put \u00e9\u0094\u00ae\u00e5\u0080\u00bc\u00e5\u00af\u00b9\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009ckey\u00e5\u00b7\u00b2\u00e7\u00bb\u008f\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e9\u0094\u00ae\u00e5\u0080\u00bc\u00e4\u00b8\u00ad\u00e6\u009c\u0089null\u00e5\u0080\u00bc\u00ef\u00bc\u008c\u00e5\u00bf\u00bd\u00e7\u0095\u00a5",
                "+\t * \u00e4\u00b8\u0080\u00e6\u00ac\u00a1\u00e6\u0080\u00a7Put \u00e9\u0094\u00ae\u00e5\u0080\u00bc\u00e5\u00af\u00b9\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009ckey\u00e5\u00b7\u00b2\u00e7\u00bb\u008f\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e9\u0094\u00ae\u00e5\u0080\u00bc\u00e4\u00b8\u00ad\u00e6\u009c\u0089null\u00e5\u0080\u00bc\u00ef\u00bc\u008c\u00e5\u00bf\u00bd\u00e7\u0095\u00a5",
                " \t *",
                "@@ -473,3 +472,3 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \t\t\tif (rawHashMap.containsKey(key)) {",
                "-\t\t\t\tthrow new JSONException(StrUtil.format(\"Duplicate key \\\"{}\\\"\", key));",
                "+\t\t\t\tthrow new JSONException(\"Duplicate key \\\"{}\\\"\", key);",
                " \t\t\t}",
                "@@ -689,7 +688,8 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \t\t\t\t}",
                "-\t\t\t\tInternalJSONUtil.writeValue(writer, this.rawHashMap.get(key), indentFactor, indent);",
                "+\t\t\t\tInternalJSONUtil.writeValue(writer, this.rawHashMap.get(key), indentFactor, indent, this.config);",
                " \t\t\t} else if (length != 0) {",
                " \t\t\t\tfinal int newindent = indent + indentFactor;",
                "+\t\t\t\tObject key;",
                " \t\t\t\twhile (keys.hasNext()) {",
                "-\t\t\t\t\tObject key = keys.next();",
                "+\t\t\t\t\tkey = keys.next();",
                " \t\t\t\t\tif (commanate) {",
                "@@ -706,3 +706,3 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \t\t\t\t\t}",
                "-\t\t\t\t\tInternalJSONUtil.writeValue(writer, this.rawHashMap.get(key), indentFactor, newindent);",
                "+\t\t\t\t\tInternalJSONUtil.writeValue(writer, this.rawHashMap.get(key), indentFactor, newindent, this.config);",
                " \t\t\t\t\tcommanate = true;",
                "@@ -749,3 +749,3 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                "-\t\t\tif (null == value && this.ignoreNullValue) {",
                "+\t\t\tif (null == value && this.config.isIgnoreNullValue()) {",
                " \t\t\t\t// \u00e5\u0080\u00bc\u00e4\u00b8\u00banull\u00e4\u00b8\u0094\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e8\u00b7\u00b3\u00e8\u00bf\u0087\u00e5\u0088\u0099\u00e8\u00b7\u00b3\u00e8\u00bf\u0087",
                "@@ -756,3 +756,30 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \t\t\t\t// \u00e9\u0098\u00b2\u00e6\u00ad\u00a2\u00e5\u00be\u00aa\u00e7\u008e\u00af\u00e5\u00bc\u0095\u00e7\u0094\u00a8",
                "-\t\t\t\tthis.rawHashMap.put(prop.getFieldName(), JSONUtil.wrap(value, this.ignoreNullValue));",
                "+\t\t\t\tthis.rawHashMap.put(prop.getFieldName(), JSONUtil.wrap(value, this.config.isIgnoreNullValue()));",
                "+\t\t\t}",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u008c\u0096",
                "+\t * ",
                "+\t * @param source JavaBean\u00e6\u0088\u0096\u00e8\u0080\u0085Map\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u0088\u0096\u00e8\u0080\u0085String",
                "+\t */",
                "+\tprivate void init(Object source) {",
                "+\t\tif (null != source) {",
                "+\t\t\tif (source instanceof Map) {",
                "+\t\t\t\tboolean ignoreNullValue = this.config.isIgnoreNullValue();",
                "+\t\t\t\tfor (final Entry<?, ?> e : ((Map<?, ?>) source).entrySet()) {",
                "+\t\t\t\t\tfinal Object value = e.getValue();",
                "+\t\t\t\t\tif (false == ignoreNullValue || null != value) {",
                "+\t\t\t\t\t\tthis.rawHashMap.put(Convert.toStr(e.getKey()), JSONUtil.wrap(value, ignoreNullValue));",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+\t\t\t} else if (source instanceof CharSequence) {",
                "+\t\t\t\t// \u00e5\u008f\u00af\u00e8\u0083\u00bd\u00e4\u00b8\u00baJSON\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t\t\t\tinit((CharSequence) source);",
                "+\t\t\t} else if (source instanceof Number) {",
                "+\t\t\t\t// ignore Number",
                "+\t\t\t} else {",
                "+\t\t\t\t// \u00e6\u0099\u00ae\u00e9\u0080\u009aBean",
                "+\t\t\t\tthis.populateMap(source);",
                " \t\t\t}",
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/JSONUtil.java b/hutool-json/src/main/java/cn/hutool/json/JSONUtil.java",
                "index 6263a3f9c..3b2d5b236 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/JSONUtil.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/JSONUtil.java",
                "@@ -602,3 +602,3 @@ public final class JSONUtil {",
                " \t * @param ignoreNullValue \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5{@code null} \u00e5\u0080\u00bc",
                "-\t * @return \u00e5\u008c\u0085\u00e8\u00a3\u0085\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u0080\u00bc",
                "+\t * @return \u00e5\u008c\u0085\u00e8\u00a3\u0085\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00ef\u00bc\u008cnull\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e6\u00ad\u00a4\u00e5\u0080\u00bc\u00e9\u009c\u0080\u00e8\u00a2\u00ab\u00e5\u00bf\u00bd\u00e7\u0095\u00a5",
                " \t */",
                "@@ -606,3 +606,3 @@ public final class JSONUtil {",
                " \t\tif (object == null) {",
                "-\t\t\treturn JSONNull.NULL;",
                "+\t\t\treturn ignoreNullValue ? null : JSONNull.NULL;",
                " \t\t}",
                "@@ -628,5 +628,5 @@ public final class JSONUtil {",
                "-\t\t\t// \u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e7\u0089\u00b9\u00e6\u00ae\u008a\u00e5\u00a4\u0084\u00e7\u0090\u0086",
                "-\t\t\tif (object instanceof Date) {",
                "-\t\t\t\treturn ((Date) object).getTime();",
                "+\t\t\t// \u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u008e\u009f\u00e6\u00a0\u00b7\u00e4\u00bf\u009d\u00e5\u00ad\u0098\u00ef\u00bc\u008c\u00e4\u00be\u00bf\u00e4\u00ba\u008e\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e5\u008c\u0096",
                "+\t\t\tif (object instanceof Date || object instanceof Calendar) {",
                "+\t\t\t\treturn object;",
                " \t\t\t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java",
                "hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "hutool-json/src/main/java/cn/hutool/json/JSONArray.java",
                "hutool-json/src/main/java/cn/hutool/json/JSONConfig.java",
                "hutool-json/src/main/java/cn/hutool/json/JSONGetter.java",
                "hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "hutool-json/src/main/java/cn/hutool/json/JSONUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "f39669e06769f58753db5fc56584aac6190f44a3",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1536767540,
            "hunks": 1,
            "message": "fix build",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java b/hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java",
                "index 3abc948f5..a6f5d50f5 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java",
                "@@ -149,3 +149,9 @@ public class ExecutorBuilder implements Builder<ThreadPoolExecutor> {",
                " \t\tfinal long keepAliveTime = builder.keepAliveTime;",
                "-\t\tfinal BlockingQueue<Runnable> workQueue = (null != builder.workQueue) ? builder.workQueue : new LinkedBlockingQueue<Runnable>();",
                "+\t\tfinal BlockingQueue<Runnable> workQueue;",
                "+\t\tif(null != builder.workQueue) {",
                "+\t\t\tworkQueue = builder.workQueue;",
                "+\t\t} else {",
                "+\t\t\t//corePoolSize\u00e4\u00b8\u00ba0\u00e5\u0088\u0099\u00e8\u00a6\u0081\u00e4\u00bd\u00bf\u00e7\u0094\u00a8SynchronousQueue\u00e9\u0081\u00bf\u00e5\u0085\u008d\u00e6\u0097\u00a0\u00e9\u0099\u0090\u00e9\u0098\u00bb\u00e5\u00a1\u009e",
                "+\t\t\tworkQueue = (corePoolSize <= 0) ? new SynchronousQueue<Runnable>() : new LinkedBlockingQueue<Runnable>();",
                "+\t\t}",
                " \t\tfinal ThreadFactory threadFactory = (null != builder.threadFactory) ? builder.threadFactory : Executors.defaultThreadFactory();"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8c3ef9b7add40e9cc53bba15eba1a449bb7047a8",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537028892,
            "hunks": 18,
            "message": "add BigExcelWriter",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/impl/NumberConverter.java b/hutool-core/src/main/java/cn/hutool/core/convert/impl/NumberConverter.java",
                "index b3c1e64aa..723b07ea6 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/convert/impl/NumberConverter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/impl/NumberConverter.java",
                "@@ -200,4 +200,3 @@ public class NumberConverter extends AbstractConverter<Number> {",
                " \tprotected String convertToStr(Object value) {",
                "-\t\tfinal String valueStr = super.convertToStr(value);",
                "-\t\treturn (null == valueStr) ? null : valueStr.trim();",
                "+\t\treturn StrUtil.trim(super.convertToStr(value));",
                " \t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java b/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java",
                "index 75507b70a..c5831b8a1 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java",
                "@@ -157,2 +157,7 @@ public class PrimitiveConverter extends AbstractConverter<Object> {",
                "+\t@Override",
                "+\tprotected String convertToStr(Object value) {",
                "+\t\treturn StrUtil.trim(super.convertToStr(value));",
                "+\t}",
                "+\t",
                " \t@Override",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/mail/Mail.java b/hutool-extra/src/main/java/cn/hutool/extra/mail/Mail.java",
                "index 583494ed7..e34162c89 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/mail/Mail.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/mail/Mail.java",
                "@@ -318,2 +318,3 @@ public class Mail {",
                " \tprivate Session getSession(boolean isSingleton) {",
                "+\t\tfinal MailAccount mailAccount = this.mailAccount;",
                " \t\tAuthenticator authenticator = null;",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java b/hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java",
                "index 9347c195f..c9b973d8c 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java",
                "@@ -19,2 +19,3 @@ public class MailAccount implements Serializable {",
                "+\tprivate static final String MAIL_PROTOCOL = \"mail.transport.protocol\";",
                " \tprivate static final String SMTP_HOST = \"mail.smtp.host\";",
                "@@ -386,2 +387,3 @@ public class MailAccount implements Serializable {",
                " \t\tfinal Properties p = new Properties();",
                "+\t\tp.put(MAIL_PROTOCOL, \"smtp\");",
                " \t\tp.put(SMTP_HOST, this.host);",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/BigExcelWriter.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/BigExcelWriter.java",
                "new file mode 100644",
                "index 000000000..89ddd3f31",
                "--- /dev/null",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/BigExcelWriter.java",
                "@@ -0,0 +1,128 @@",
                "+package cn.hutool.poi.excel;",
                "+",
                "+import java.io.File;",
                "+import java.io.OutputStream;",
                "+",
                "+import org.apache.poi.ss.usermodel.Sheet;",
                "+import org.apache.poi.xssf.streaming.SXSSFWorkbook;",
                "+",
                "+import cn.hutool.core.io.FileUtil;",
                "+",
                "+/**",
                "+ * \u00e5\u00a4\u00a7\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e9\u0087\u008fExcel\u00e5\u0086\u0099\u00e5\u0087\u00ba",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.13",
                "+ */",
                "+public class BigExcelWriter extends ExcelWriter {",
                "+\t",
                "+\tpublic static final int DEFAULT_WINDOW_SIZE = SXSSFWorkbook.DEFAULT_WINDOW_SIZE;",
                "+\t",
                "+\t// -------------------------------------------------------------------------- Constructor start",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e7\u0094\u009f\u00e6\u0088\u0090xls\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e7\u009a\u0084Excel\u00e6\u0096\u0087\u00e4\u00bb\u00b6<br>",
                "+\t * \u00e6\u00ad\u00a4\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e4\u00b8\u008d\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084Excel\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e5\u008f\u00aa\u00e8\u0083\u00bd\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link #flush(OutputStream)}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u00b5\u0081<br>",
                "+\t * \u00e8\u008b\u00a5\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e8\u00bf\u0098\u00e9\u009c\u0080\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link #setDestFile(File)}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e7\u0084\u00b6\u00e5\u0090\u008e\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link #flush()}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t */",
                "+\tpublic BigExcelWriter() {",
                "+\t\tthis(DEFAULT_WINDOW_SIZE);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0<br>",
                "+\t * \u00e6\u00ad\u00a4\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e4\u00b8\u008d\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084Excel\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e5\u008f\u00aa\u00e8\u0083\u00bd\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link #flush(OutputStream)}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u00b5\u0081<br>",
                "+\t * \u00e8\u008b\u00a5\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link #flush(File)} \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param rowAccessWindowSize \u00e5\u009c\u00a8\u00e5\u0086\u0085\u00e5\u00ad\u0098\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e8\u00a1\u008c\u00e6\u0095\u00b0",
                "+\t */",
                "+\tpublic BigExcelWriter(int rowAccessWindowSize) {",
                "+\t\tthis(WorkbookUtil.createSXSSFBook(rowAccessWindowSize), null);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aasheet\u00ef\u00bc\u008c\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aasheet\u00e5\u0090\u008d\u00e4\u00b8\u00basheet1",
                "+\t * ",
                "+\t * @param destFilePath \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8",
                "+\t */",
                "+\tpublic BigExcelWriter(String destFilePath) {",
                "+\t\tthis(destFilePath, null);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0<br>",
                "+\t * \u00e6\u00ad\u00a4\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e4\u00b8\u008d\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084Excel\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e5\u008f\u00aa\u00e8\u0083\u00bd\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link #flush(OutputStream)}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u00b5\u0081<br>",
                "+\t * \u00e8\u008b\u00a5\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link #flush(File)} \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param rowAccessWindowSize \u00e5\u009c\u00a8\u00e5\u0086\u0085\u00e5\u00ad\u0098\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e8\u00a1\u008c\u00e6\u0095\u00b0",
                "+\t * @param sheetName sheet\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aasheet\u00e5\u0090\u008d\u00e5\u00b9\u00b6\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u00ad\u00a4sheet\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082sheet1",
                "+\t * @since 4.1.8",
                "+\t */",
                "+\tpublic BigExcelWriter(int rowAccessWindowSize, String sheetName) {",
                "+\t\tthis(WorkbookUtil.createSXSSFBook(rowAccessWindowSize), sheetName);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param destFilePath \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8",
                "+\t * @param sheetName sheet\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aasheet\u00e5\u0090\u008d\u00e5\u00b9\u00b6\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u00ad\u00a4sheet\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082sheet1",
                "+\t */",
                "+\tpublic BigExcelWriter(String destFilePath, String sheetName) {",
                "+\t\tthis(FileUtil.file(destFilePath), sheetName);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aasheet\u00ef\u00bc\u008c\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aasheet\u00e5\u0090\u008d\u00e4\u00b8\u00basheet1",
                "+\t * ",
                "+\t * @param destFile \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8",
                "+\t */",
                "+\tpublic BigExcelWriter(File destFile) {",
                "+\t\tthis(destFile, null);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param destFile \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8",
                "+\t * @param sheetName sheet\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aasheet\u00e5\u0090\u008d\u00e5\u00b9\u00b6\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u00ad\u00a4sheet\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082sheet1",
                "+\t */",
                "+\tpublic BigExcelWriter(File destFile, String sheetName) {",
                "+\t\tthis(destFile.exists() ? WorkbookUtil.createSXSSFBook(destFile) : WorkbookUtil.createSXSSFBook(), sheetName);",
                "+\t\tthis.destFile = destFile;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0<br>",
                "+\t * \u00e6\u00ad\u00a4\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e4\u00b8\u008d\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084Excel\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e5\u008f\u00aa\u00e8\u0083\u00bd\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link #flush(OutputStream)}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u00b5\u0081<br>",
                "+\t * \u00e8\u008b\u00a5\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e8\u00bf\u0098\u00e9\u009c\u0080\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link #setDestFile(File)}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e7\u0084\u00b6\u00e5\u0090\u008e\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link #flush()}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param workbook {@link SXSSFWorkbook}",
                "+\t * @param sheetName sheet\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aasheet\u00e5\u0090\u008d\u00e5\u00b9\u00b6\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u00ad\u00a4sheet\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082sheet1",
                "+\t */",
                "+\tpublic BigExcelWriter(SXSSFWorkbook workbook, String sheetName) {",
                "+\t\tthis(ExcelUtil.getOrCreateSheet(workbook, sheetName));",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0<br>",
                "+\t * \u00e6\u00ad\u00a4\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e4\u00b8\u008d\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084Excel\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e5\u008f\u00aa\u00e8\u0083\u00bd\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link #flush(OutputStream)}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u00b5\u0081<br>",
                "+\t * \u00e8\u008b\u00a5\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e8\u00bf\u0098\u00e9\u009c\u0080\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link #setDestFile(File)}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e7\u0084\u00b6\u00e5\u0090\u008e\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link #flush()}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param sheet {@link Sheet}",
                "+\t * @since 4.0.6",
                "+\t */",
                "+\tpublic BigExcelWriter(Sheet sheet) {",
                "+\t\tsuper(sheet);",
                "+\t}",
                "+",
                "+\t// -------------------------------------------------------------------------- Constructor end",
                "+\t",
                "+\t@Override",
                "+\tpublic void close() {",
                "+\t\tif (null != this.destFile) {",
                "+\t\t\tflush();",
                "+\t\t}",
                "+\t\t((SXSSFWorkbook)this.workbook).dispose();",
                "+\t\tsuper.closeWithoutFlush();",
                "+\t}",
                "+}",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelUtil.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelUtil.java",
                "index b6107d0d3..e100fed9f 100644",
                "--- a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelUtil.java",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelUtil.java",
                "@@ -29,3 +29,3 @@ import cn.hutool.poi.excel.sax.handler.RowHandler;",
                " public class ExcelUtil {",
                "-\t",
                "+",
                " \t// ------------------------------------------------------------------------------------ Read by Sax start",
                "@@ -175,2 +175,3 @@ public class ExcelUtil {",
                "+\t// ------------------------------------------------------------------------------------------------ getReader",
                " \t/**",
                "@@ -337,2 +338,3 @@ public class ExcelUtil {",
                "+\t// ------------------------------------------------------------------------------------------------ getWriter",
                " \t/**",
                "@@ -428,2 +430,95 @@ public class ExcelUtil {",
                "+\t// ------------------------------------------------------------------------------------------------ getBigWriter",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097{@link BigExcelWriter}\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aasheet<br>",
                "+\t * \u00e4\u00b8\u008d\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084Excel\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e5\u008f\u00aa\u00e8\u0083\u00bd\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link BigExcelWriter#flush(OutputStream)}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u00b5\u0081<br>",
                "+\t * \u00e8\u008b\u00a5\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e8\u00bf\u0098\u00e9\u009c\u0080\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link BigExcelWriter#setDestFile(File)}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e7\u0084\u00b6\u00e5\u0090\u008e\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link BigExcelWriter#flush()}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @return {@link BigExcelWriter}",
                "+\t * @since 4.1.13",
                "+\t */",
                "+\tpublic static ExcelWriter getBigWriter() {",
                "+\t\ttry {",
                "+\t\t\treturn new BigExcelWriter();",
                "+\t\t} catch (NoClassDefFoundError e) {",
                "+\t\t\tthrow PoiChecker.transError(e);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097{@link BigExcelWriter}\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aasheet<br>",
                "+\t * \u00e4\u00b8\u008d\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084Excel\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e5\u008f\u00aa\u00e8\u0083\u00bd\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link BigExcelWriter#flush(OutputStream)}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u00b5\u0081<br>",
                "+\t * \u00e8\u008b\u00a5\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e8\u00bf\u0098\u00e9\u009c\u0080\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link BigExcelWriter#setDestFile(File)}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e7\u0084\u00b6\u00e5\u0090\u008e\u00e8\u00b0\u0083\u00e7\u0094\u00a8{@link BigExcelWriter#flush()}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param rowAccessWindowSize \u00e5\u009c\u00a8\u00e5\u0086\u0085\u00e5\u00ad\u0098\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e8\u00a1\u008c\u00e6\u0095\u00b0",
                "+\t * @return {@link BigExcelWriter}",
                "+\t * @since 4.1.13",
                "+\t */",
                "+\tpublic static ExcelWriter getBigWriter(int rowAccessWindowSize) {",
                "+\t\ttry {",
                "+\t\t\treturn new BigExcelWriter(rowAccessWindowSize);",
                "+\t\t} catch (NoClassDefFoundError e) {",
                "+\t\t\tthrow PoiChecker.transError(e);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097{@link BigExcelWriter}\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aasheet",
                "+\t * ",
                "+\t * @param destFilePath \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t * @return {@link BigExcelWriter}",
                "+\t */",
                "+\tpublic static BigExcelWriter getBigWriter(String destFilePath) {",
                "+\t\ttry {",
                "+\t\t\treturn new BigExcelWriter(destFilePath);",
                "+\t\t} catch (NoClassDefFoundError e) {",
                "+\t\t\tthrow PoiChecker.transError(e);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097{@link BigExcelWriter}\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aasheet\u00ef\u00bc\u008c\u00e5\u0090\u008d\u00e5\u00ad\u0097\u00e4\u00b8\u00basheet1",
                "+\t * ",
                "+\t * @param destFile \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @return {@link BigExcelWriter}",
                "+\t */",
                "+\tpublic static BigExcelWriter getBigWriter(File destFile) {",
                "+\t\ttry {",
                "+\t\t\treturn new BigExcelWriter(destFile);",
                "+\t\t} catch (NoClassDefFoundError e) {",
                "+\t\t\tthrow PoiChecker.transError(e);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097{@link BigExcelWriter}",
                "+\t * ",
                "+\t * @param destFilePath \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t * @param sheetName sheet\u00e8\u00a1\u00a8\u00e5\u0090\u008d",
                "+\t * @return {@link BigExcelWriter}",
                "+\t */",
                "+\tpublic static BigExcelWriter getBigWriter(String destFilePath, String sheetName) {",
                "+\t\ttry {",
                "+\t\t\treturn new BigExcelWriter(destFilePath, sheetName);",
                "+\t\t} catch (NoClassDefFoundError e) {",
                "+\t\t\tthrow PoiChecker.transError(e);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097{@link BigExcelWriter}",
                "+\t * ",
                "+\t * @param destFile \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @param sheetName sheet\u00e8\u00a1\u00a8\u00e5\u0090\u008d",
                "+\t * @return {@link BigExcelWriter}",
                "+\t */",
                "+\tpublic static BigExcelWriter getBigWriter(File destFile, String sheetName) {",
                "+\t\ttry {",
                "+\t\t\treturn new BigExcelWriter(destFile, sheetName);",
                "+\t\t} catch (NoClassDefFoundError e) {",
                "+\t\t\tthrow PoiChecker.transError(e);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t// ------------------------------------------------------------------------------------------------ isXls",
                " \t/**",
                "@@ -459,3 +554,3 @@ public class ExcelUtil {",
                " \t\t\tthrow new IORuntimeException(e);",
                "-\t\t} catch(NoClassDefFoundError e) {",
                "+\t\t} catch (NoClassDefFoundError e) {",
                " \t\t\tthrow PoiChecker.transError(e);",
                "@@ -463,3 +558,3 @@ public class ExcelUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "index 30941b397..9ffe23ad3 100644",
                "--- a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "@@ -49,3 +49,3 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \t/** \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6 */",
                "-\tprivate File destFile;",
                "+\tprotected File destFile;",
                " \t/** \u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e8\u00a1\u008c */",
                "@@ -752,2 +752,9 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \t\t}",
                "+\t\tcloseWithoutFlush();",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u0085\u00b3\u00e9\u0097\u00ad\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf\u00e4\u00bd\u0086\u00e6\u0098\u00af\u00e4\u00b8\u008d\u00e5\u0086\u0099\u00e5\u0087\u00ba",
                "+\t */",
                "+\tprotected void closeWithoutFlush() {",
                " \t\tsuper.close();",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/WorkbookUtil.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/WorkbookUtil.java",
                "index b718596aa..e1960e69d 100644",
                "--- a/hutool-poi/src/main/java/cn/hutool/poi/excel/WorkbookUtil.java",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/WorkbookUtil.java",
                "@@ -10,2 +10,4 @@ import org.apache.poi.ss.usermodel.Workbook;",
                " import org.apache.poi.ss.usermodel.WorkbookFactory;",
                "+import org.apache.poi.xssf.streaming.SXSSFWorkbook;",
                "+import org.apache.poi.xssf.usermodel.XSSFWorkbook;",
                "@@ -94,3 +96,3 @@ public class WorkbookUtil {",
                " \t/**",
                "-\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0096\u00b0\u00e7\u009a\u0084\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf\u00ef\u00bc\u008c\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0096\u00b0\u00e7\u009a\u0084\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf\u00ef\u00bc\u008c\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                " \t * ",
                "@@ -109,2 +111,82 @@ public class WorkbookUtil {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0088\u0096\u00e5\u008a\u00a0\u00e8\u00bd\u00bdSXSSFWorkbook\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf",
                "+\t * ",
                "+\t * @param excelFilePath Excel\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e7\u00bb\u009d\u00e5\u00af\u00b9\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e6\u0088\u0096\u00e7\u009b\u00b8\u00e5\u00af\u00b9\u00e4\u00ba\u008eClassPath\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t * @return {@link SXSSFWorkbook}",
                "+\t * @since 4.1.13",
                "+\t */",
                "+\tpublic static SXSSFWorkbook createSXSSFBook(String excelFilePath) {",
                "+\t\treturn createSXSSFBook(FileUtil.file(excelFilePath), null);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0088\u0096\u00e5\u008a\u00a0\u00e8\u00bd\u00bdSXSSFWorkbook\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf",
                "+\t * ",
                "+\t * @param excelFile Excel\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @return {@link SXSSFWorkbook}",
                "+\t * @since 4.1.13",
                "+\t */",
                "+\tpublic static SXSSFWorkbook createSXSSFBook(File excelFile) {",
                "+\t\treturn createSXSSFBook(excelFile, null);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0088\u0096\u00e5\u008a\u00a0\u00e8\u00bd\u00bdSXSSFWorkbook\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf\u00ef\u00bc\u008c\u00e5\u008f\u00aa\u00e8\u00af\u00bb\u00e6\u00a8\u00a1\u00e5\u00bc\u008f",
                "+\t * ",
                "+\t * @param excelFile Excel\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @param password Excel\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf\u00e5\u00af\u0086\u00e7\u00a0\u0081\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u0097\u00a0\u00e5\u00af\u0086\u00e7\u00a0\u0081\u00e4\u00bc\u00a0{@code null}",
                "+\t * @return {@link SXSSFWorkbook}",
                "+\t * @since 4.1.13",
                "+\t */",
                "+\tpublic static SXSSFWorkbook createSXSSFBook(File excelFile, String password) {",
                "+\t\treturn toSXSSFBook(createBook(excelFile, password));",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0088\u0096\u00e5\u008a\u00a0\u00e8\u00bd\u00bdSXSSFWorkbook\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf",
                "+\t * ",
                "+\t * @param in Excel\u00e8\u00be\u0093\u00e5\u0085\u00a5\u00e6\u00b5\u0081",
                "+\t * @param closeAfterRead \u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0085\u00b3\u00e9\u0097\u00ad\u00e6\u00b5\u0081",
                "+\t * @return {@link SXSSFWorkbook}",
                "+\t * @since 4.1.13",
                "+\t */",
                "+\tpublic static SXSSFWorkbook createSXSSFBook(InputStream in, boolean closeAfterRead) {",
                "+\t\treturn createSXSSFBook(in, null, closeAfterRead);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0088\u0096\u00e5\u008a\u00a0\u00e8\u00bd\u00bdSXSSFWorkbook\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf",
                "+\t * ",
                "+\t * @param in Excel\u00e8\u00be\u0093\u00e5\u0085\u00a5\u00e6\u00b5\u0081",
                "+\t * @param password \u00e5\u00af\u0086\u00e7\u00a0\u0081",
                "+\t * @param closeAfterRead \u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0085\u00b3\u00e9\u0097\u00ad\u00e6\u00b5\u0081",
                "+\t * @return {@link SXSSFWorkbook}",
                "+\t * @since 4.1.13",
                "+\t */",
                "+\tpublic static SXSSFWorkbook createSXSSFBook(InputStream in, String password, boolean closeAfterRead) {",
                "+\t\treturn toSXSSFBook(createBook(in, password, closeAfterRead));",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00baSXSSFWorkbook\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u00a4\u00a7\u00e6\u0089\u00b9\u00e9\u0087\u008f\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u0086\u0099\u00e5\u0087\u00ba",
                "+\t * ",
                "+\t * @return {@link SXSSFWorkbook}",
                "+\t * @since 4.1.13",
                "+\t */",
                "+\tpublic static SXSSFWorkbook createSXSSFBook() {",
                "+\t\treturn new SXSSFWorkbook();",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00baSXSSFWorkbook\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u00a4\u00a7\u00e6\u0089\u00b9\u00e9\u0087\u008f\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u0086\u0099\u00e5\u0087\u00ba",
                "+\t * ",
                "+\t * @param rowAccessWindowSize \u00e5\u009c\u00a8\u00e5\u0086\u0085\u00e5\u00ad\u0098\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e8\u00a1\u008c\u00e6\u0095\u00b0",
                "+\t * @return {@link Workbook}",
                "+\t * @since 4.1.13",
                "+\t */",
                "+\tpublic static SXSSFWorkbook createSXSSFBook(int rowAccessWindowSize) {",
                "+\t\treturn new SXSSFWorkbook(rowAccessWindowSize);",
                "+\t}",
                "@@ -125,2 +207,20 @@ public class WorkbookUtil {",
                " \t}",
                "+\t",
                "+\t//-------------------------------------------------------------------------------------------------------- Private method start",
                "+\t/**",
                "+\t * \u00e5\u00b0\u0086\u00e6\u0099\u00ae\u00e9\u0080\u009a\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00baSXSSFWorkbook",
                "+\t * @param book \u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf",
                "+\t * @return SXSSFWorkbook",
                "+\t * @since 4.1.13",
                "+\t */",
                "+\tprivate static SXSSFWorkbook toSXSSFBook(Workbook book) {",
                "+\t\tif(book instanceof SXSSFWorkbook) {",
                "+\t\t\treturn (SXSSFWorkbook) book;",
                "+\t\t}",
                "+\t\tif(book instanceof XSSFWorkbook) {",
                "+\t\t\treturn new SXSSFWorkbook((XSSFWorkbook) book);",
                "+\t\t}",
                "+\t\tthrow new POIException(\"The input is not a [xlsx] format.\");",
                "+\t}",
                "+\t//-------------------------------------------------------------------------------------------------------- Private method end",
                " }"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/convert/impl/NumberConverter.java",
                "hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java",
                "hutool-extra/src/main/java/cn/hutool/extra/mail/Mail.java",
                "hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/BigExcelWriter.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelUtil.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/WorkbookUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4663a3a790b83dc87d4e7f053a9645b8d10c62c0",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1533461489,
            "hunks": 11,
            "message": "change SSLFactory",
            "diff": [
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HttpBase.java b/hutool-http/src/main/java/cn/hutool/http/HttpBase.java",
                "index 2a4b7ebc4..3893fbd36 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HttpBase.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HttpBase.java",
                "@@ -14,5 +14,2 @@ import cn.hutool.core.util.CharsetUtil;",
                " import cn.hutool.core.util.StrUtil;",
                "-import cn.hutool.http.ssl.AndroidSupportSSLFactory;",
                "-",
                "-import javax.net.ssl.HttpsURLConnection;",
                "@@ -40,17 +37,2 @@ public abstract class HttpBase<T> {",
                "-\tstatic {",
                "-",
                "-\t\tboolean isAndroid = false;",
                "-",
                "-\t\ttry {",
                "-\t\t\tisAndroid = \"Dalvik\".equals(System.getProperty(\"java.vm.name\"));",
                "-\t\t} catch(Exception ignored) {}",
                "-",
                "-\t\tif (isAndroid) {",
                "-\t\t\tHttpsURLConnection.setDefaultSSLSocketFactory(new AndroidSupportSSLFactory());",
                "-\t\t}",
                "-",
                "-\t}",
                "-",
                "-\t",
                " \t// ---------------------------------------------------------------- Headers start",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HttpConnection.java b/hutool-http/src/main/java/cn/hutool/http/HttpConnection.java",
                "index 10f0781b2..d89d3846e 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HttpConnection.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HttpConnection.java",
                "@@ -27,2 +27,3 @@ import cn.hutool.core.util.StrUtil;",
                " import cn.hutool.core.util.URLUtil;",
                "+import cn.hutool.http.ssl.AndroidSupportSSLFactory;",
                " import cn.hutool.http.ssl.SSLSocketFactoryBuilder;",
                "@@ -187,3 +188,3 @@ public class HttpConnection {",
                " \t\t// Cookie",
                "-//\t\tsetCookie(CookiePool.get(this.url.getHost()));",
                "+\t\t// setCookie(CookiePool.get(this.url.getHost()));",
                "@@ -526,3 +527,3 @@ public class HttpConnection {",
                " \t}",
                "-\t",
                "+",
                " \t@Override",
                "@@ -552,8 +553,16 @@ public class HttpConnection {",
                "-\t\tif(conn instanceof HttpsURLConnection) {",
                "-\t\t\t//Https\u00e8\u00af\u00b7\u00e6\u00b1\u0082",
                "-\t\t\tfinal HttpsURLConnection httpsConn = (HttpsURLConnection)conn;",
                "+\t\tif (conn instanceof HttpsURLConnection) {",
                "+\t\t\t// Https\u00e8\u00af\u00b7\u00e6\u00b1\u0082",
                "+\t\t\tfinal HttpsURLConnection httpsConn = (HttpsURLConnection) conn;",
                " \t\t\t// \u00e9\u00aa\u008c\u00e8\u00af\u0081\u00e5\u009f\u009f",
                " \t\t\thttpsConn.setHostnameVerifier(null != hostnameVerifier ? hostnameVerifier : new TrustAnyHostnameVerifier());",
                "-\t\t\thttpsConn.setSSLSocketFactory(null != ssf ? ssf : SSLSocketFactoryBuilder.create().build());",
                "+\t\t\tif (null == ssf) {",
                "+\t\t\t\tif (StrUtil.equalsIgnoreCase(\"dalvik\", System.getProperty(\"java.vm.name\"))) {",
                "+\t\t\t\t\t// \u00e5\u0085\u00bc\u00e5\u00ae\u00b9android\u00e4\u00bd\u008e\u00e7\u0089\u0088\u00e6\u009c\u00acSSL\u00e8\u00bf\u009e\u00e6\u008e\u00a5",
                "+\t\t\t\t\tssf = new AndroidSupportSSLFactory();",
                "+\t\t\t\t} else {",
                "+\t\t\t\t\tssf = SSLSocketFactoryBuilder.create().build();",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\thttpsConn.setSSLSocketFactory(ssf);",
                " \t\t}",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/ssl/AndroidSupportSSLFactory.java b/hutool-http/src/main/java/cn/hutool/http/ssl/AndroidSupportSSLFactory.java",
                "index 80c0ce589..774c2d4da 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/ssl/AndroidSupportSSLFactory.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/ssl/AndroidSupportSSLFactory.java",
                "@@ -2,13 +2,9 @@ package cn.hutool.http.ssl;",
                "-import javax.net.ssl.SSLContext;",
                "-import javax.net.ssl.SSLSocket;",
                "-import javax.net.ssl.SSLSocketFactory;",
                "-import javax.net.ssl.X509TrustManager;",
                "-import java.io.IOException;",
                "-import java.io.InputStream;",
                "-import java.net.InetAddress;",
                "-import java.net.Socket;",
                "-import java.security.SecureRandom;",
                "+import static cn.hutool.http.ssl.SSLSocketFactoryBuilder.SSLv3;",
                "+import static cn.hutool.http.ssl.SSLSocketFactoryBuilder.TLSv1;",
                "+import static cn.hutool.http.ssl.SSLSocketFactoryBuilder.TLSv11;",
                "+import static cn.hutool.http.ssl.SSLSocketFactoryBuilder.TLSv12;",
                "-import static cn.hutool.http.ssl.SSLSocketFactoryBuilder.*;",
                "+import java.security.KeyManagementException;",
                "+import java.security.NoSuchAlgorithmException;",
                "@@ -22,88 +18,9 @@ import static cn.hutool.http.ssl.SSLSocketFactoryBuilder.*;",
                "  */",
                "-public class AndroidSupportSSLFactory extends SSLSocketFactory {",
                "+public class AndroidSupportSSLFactory extends CustomProtocolsSSLFactory {",
                "-\tprivate static String[] protocols = {SSLv3, TLSv1, TLSv11, TLSv12};",
                " \t// Android\u00e4\u00bd\u008e\u00e7\u0089\u0088\u00e6\u009c\u00ac\u00e4\u00b8\u008d\u00e9\u0087\u008d\u00e7\u00bd\u00ae\u00e7\u009a\u0084\u00e8\u00af\u009d\u00e6\u009f\u0090\u00e4\u00ba\u009bSSL\u00e8\u00ae\u00bf\u00e9\u0097\u00ae\u00e5\u00b0\u00b1\u00e4\u00bc\u009a\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5",
                "-",
                "-\tprivate SSLSocketFactory base;",
                "-",
                "-\tpublic AndroidSupportSSLFactory() {",
                "-",
                "-\t\tsuper();",
                "-\t\ttry {",
                "-\t\t\tSSLContext context = SSLContext.getInstance(\"SSL\");",
                "-\t\t\tcontext.init(null, new X509TrustManager[]{new DefaultTrustManager()}, new SecureRandom());",
                "-\t\t\tbase = context.getSocketFactory();",
                "-\t\t} catch (Exception ignored) {",
                "-\t\t}",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic String[] getDefaultCipherSuites() {",
                "-\t\treturn base.getDefaultCipherSuites();",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic String[] getSupportedCipherSuites() {",
                "-\t\treturn base.getSupportedCipherSuites();",
                "-\t}",
                "-",
                "-",
                "-\t@Override",
                "-\tpublic Socket createSocket(Socket socket, InputStream inputStream, boolean b) throws IOException {",
                "-\t\tSSLSocket sslSocket = (SSLSocket) base.createSocket(socket,inputStream,b);",
                "-\t\tresetProtocols(sslSocket);",
                "-\t\treturn sslSocket;",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic Socket createSocket() throws IOException {",
                "-\t\tSSLSocket sslSocket = (SSLSocket) base.createSocket();",
                "-\t\tresetProtocols(sslSocket);",
                "-\t\treturn sslSocket;",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic SSLSocket createSocket(Socket s, String host, int port, boolean autoClose) throws IOException {",
                "-\t\tSSLSocket socket = (SSLSocket) base.createSocket(s, host, port, autoClose);",
                "-\t\tresetProtocols(socket);",
                "-\t\treturn socket;",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic Socket createSocket(String host, int port) throws IOException {",
                "-\t\tSSLSocket socket = (SSLSocket) base.createSocket(host, port);",
                "-\t\tresetProtocols(socket);",
                "-\t\treturn socket;",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic Socket createSocket(String host, int port, InetAddress localHost, int localPort) throws IOException {",
                "-",
                "-\t\tSSLSocket socket = (SSLSocket) base.createSocket(host, port, localHost, localPort);",
                "-\t\tresetProtocols(socket);",
                "-\t\treturn socket;",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic Socket createSocket(InetAddress host, int port) throws IOException {",
                "-",
                "-\t\tSSLSocket socket = (SSLSocket) base.createSocket(host, port);",
                "-\t\tresetProtocols(socket);",
                "-\t\treturn socket;",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic Socket createSocket(InetAddress address, int port, InetAddress localAddress, int localPort) throws IOException {",
                "-",
                "-\t\tSSLSocket socket = (SSLSocket) base.createSocket(address, port, localAddress, localPort);",
                "-\t\tresetProtocols(socket);",
                "-\t\treturn socket;",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e9\u0087\u008d\u00e7\u00bd\u00ae\u00e5\u008f\u00af\u00e7\u0094\u00a8\u00e7\u00ad\u0096\u00e7\u0095\u00a5",
                "-\t */",
                "-\tprivate void resetProtocols(SSLSocket socket) {",
                "-\t\tsocket.setEnabledProtocols(protocols);",
                "+\tprivate static String[] protocols = {SSLv3, TLSv1, TLSv11, TLSv12};",
                "+\t",
                "+\tpublic AndroidSupportSSLFactory() throws KeyManagementException, NoSuchAlgorithmException {",
                "+\t\tsuper(protocols);",
                " \t}",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/ssl/CustomProtocolsSSLFactory.java b/hutool-http/src/main/java/cn/hutool/http/ssl/CustomProtocolsSSLFactory.java",
                "new file mode 100644",
                "index 000000000..1c7c521f0",
                "--- /dev/null",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/ssl/CustomProtocolsSSLFactory.java",
                "@@ -0,0 +1,100 @@",
                "+package cn.hutool.http.ssl;",
                "+",
                "+import java.io.IOException;",
                "+import java.net.InetAddress;",
                "+import java.net.Socket;",
                "+import java.security.KeyManagementException;",
                "+import java.security.NoSuchAlgorithmException;",
                "+",
                "+import javax.net.ssl.SSLSocket;",
                "+import javax.net.ssl.SSLSocketFactory;",
                "+",
                "+/**",
                "+ * \u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e5\u008d\u008f\u00e8\u00ae\u00ae\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e7\u009a\u0084SSLSocketFactory",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+public class CustomProtocolsSSLFactory extends SSLSocketFactory {",
                "+",
                "+\tprivate String[] protocols;",
                "+\tprivate SSLSocketFactory base;",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param protocols \u00e6\u0094\u00af\u00e6\u008c\u0081\u00e5\u008d\u008f\u00e8\u00ae\u00ae\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * @throws KeyManagementException KeyManagementException",
                "+\t * @throws NoSuchAlgorithmException NoSuchAlgorithmException",
                "+\t */",
                "+\tpublic CustomProtocolsSSLFactory(String... protocols) throws KeyManagementException, NoSuchAlgorithmException {",
                "+\t\tsuper();",
                "+\t\tthis.protocols = protocols;",
                "+\t\tthis.base = SSLSocketFactoryBuilder.create().build();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic String[] getDefaultCipherSuites() {",
                "+\t\treturn base.getDefaultCipherSuites();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic String[] getSupportedCipherSuites() {",
                "+\t\treturn base.getSupportedCipherSuites();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Socket createSocket() throws IOException {",
                "+\t\tSSLSocket sslSocket = (SSLSocket) base.createSocket();",
                "+\t\tresetProtocols(sslSocket);",
                "+\t\treturn sslSocket;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic SSLSocket createSocket(Socket s, String host, int port, boolean autoClose) throws IOException {",
                "+\t\tSSLSocket socket = (SSLSocket) base.createSocket(s, host, port, autoClose);",
                "+\t\tresetProtocols(socket);",
                "+\t\treturn socket;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Socket createSocket(String host, int port) throws IOException {",
                "+\t\tSSLSocket socket = (SSLSocket) base.createSocket(host, port);",
                "+\t\tresetProtocols(socket);",
                "+\t\treturn socket;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Socket createSocket(String host, int port, InetAddress localHost, int localPort) throws IOException {",
                "+",
                "+\t\tSSLSocket socket = (SSLSocket) base.createSocket(host, port, localHost, localPort);",
                "+\t\tresetProtocols(socket);",
                "+\t\treturn socket;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Socket createSocket(InetAddress host, int port) throws IOException {",
                "+",
                "+\t\tSSLSocket socket = (SSLSocket) base.createSocket(host, port);",
                "+\t\tresetProtocols(socket);",
                "+\t\treturn socket;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Socket createSocket(InetAddress address, int port, InetAddress localAddress, int localPort) throws IOException {",
                "+",
                "+\t\tSSLSocket socket = (SSLSocket) base.createSocket(address, port, localAddress, localPort);",
                "+\t\tresetProtocols(socket);",
                "+\t\treturn socket;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e9\u0087\u008d\u00e7\u00bd\u00ae\u00e5\u008f\u00af\u00e7\u0094\u00a8\u00e7\u00ad\u0096\u00e7\u0095\u00a5",
                "+\t * ",
                "+\t * @param socket SSLSocket",
                "+\t */",
                "+\tprivate void resetProtocols(SSLSocket socket) {",
                "+\t\tsocket.setEnabledProtocols(protocols);",
                "+\t}",
                "+",
                "+}",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "hutool-http/src/main/java/cn/hutool/http/HttpBase.java",
                "hutool-http/src/main/java/cn/hutool/http/HttpConnection.java",
                "hutool-http/src/main/java/cn/hutool/http/ssl/AndroidSupportSSLFactory.java",
                "hutool-http/src/main/java/cn/hutool/http/ssl/CustomProtocolsSSLFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8e2586cc134f98cde53b13602248382ff8acb103",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1538887356,
            "hunks": 42,
            "message": "add BooleanUtil",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/impl/AtomicBooleanConverter.java b/hutool-core/src/main/java/cn/hutool/core/convert/impl/AtomicBooleanConverter.java",
                "index 246250360..3f6ca1d12 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/convert/impl/AtomicBooleanConverter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/impl/AtomicBooleanConverter.java",
                "@@ -5,2 +5,3 @@ import java.util.concurrent.atomic.AtomicBoolean;",
                " import cn.hutool.core.convert.AbstractConverter;",
                "+import cn.hutool.core.util.BooleanUtil;",
                "@@ -23,3 +24,3 @@ public class AtomicBooleanConverter extends AbstractConverter<AtomicBoolean> {",
                " \t\tfinal String valueStr = convertToStr(value);",
                "-\t\treturn new AtomicBoolean(PrimitiveConverter.parseBoolean(valueStr));",
                "+\t\treturn new AtomicBoolean(BooleanUtil.toBoolean(valueStr));",
                " \t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/impl/BooleanConverter.java b/hutool-core/src/main/java/cn/hutool/core/convert/impl/BooleanConverter.java",
                "index 305173ac1..12c1bd0e4 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/convert/impl/BooleanConverter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/impl/BooleanConverter.java",
                "@@ -3,2 +3,3 @@ package cn.hutool.core.convert.impl;",
                " import cn.hutool.core.convert.AbstractConverter;",
                "+import cn.hutool.core.util.BooleanUtil;",
                "@@ -17,3 +18,3 @@ public class BooleanConverter extends AbstractConverter<Boolean>{",
                " \t\tString valueStr = convertToStr(value);",
                "-\t\treturn Boolean.valueOf(PrimitiveConverter.parseBoolean(valueStr));",
                "+\t\treturn Boolean.valueOf(BooleanUtil.toBoolean(valueStr));",
                " \t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/impl/CharacterConverter.java b/hutool-core/src/main/java/cn/hutool/core/convert/impl/CharacterConverter.java",
                "index e80b20f9a..4045e1375 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/convert/impl/CharacterConverter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/impl/CharacterConverter.java",
                "@@ -3,2 +3,3 @@ package cn.hutool.core.convert.impl;",
                " import cn.hutool.core.convert.AbstractConverter;",
                "+import cn.hutool.core.util.BooleanUtil;",
                " import cn.hutool.core.util.StrUtil;",
                "@@ -7,2 +8,3 @@ import cn.hutool.core.util.StrUtil;",
                "  * \u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u0099\u00a8",
                "+ * ",
                "  * @author Looly",
                "@@ -10,3 +12,3 @@ import cn.hutool.core.util.StrUtil;",
                "  */",
                "-public class CharacterConverter extends AbstractConverter<Character>{",
                "+public class CharacterConverter extends AbstractConverter<Character> {",
                "@@ -14,5 +16,9 @@ public class CharacterConverter extends AbstractConverter<Character>{",
                " \tprotected Character convertInternal(Object value) {",
                "-\t\tif(char.class == value.getClass()){",
                "-\t\t\treturn Character.valueOf((char)value);",
                "-\t\t}else{",
                "+\t\tif (char.class == value.getClass()) {",
                "+\t\t\treturn Character.valueOf((char) value);",
                "+\t\t} else if (value instanceof Boolean) {",
                "+\t\t\treturn BooleanUtil.toCharacter((Boolean) value);",
                "+\t\t} else if (boolean.class == value.getClass()) {",
                "+\t\t\treturn BooleanUtil.toCharacter((boolean) value);",
                "+\t\t} else {",
                " \t\t\tfinal String valueStr = convertToStr(value);",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/impl/NumberConverter.java b/hutool-core/src/main/java/cn/hutool/core/convert/impl/NumberConverter.java",
                "index a7a5c9e97..fb13390f7 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/convert/impl/NumberConverter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/impl/NumberConverter.java",
                "@@ -8,2 +8,3 @@ import java.util.concurrent.atomic.AtomicLong;",
                " import cn.hutool.core.convert.AbstractConverter;",
                "+import cn.hutool.core.util.BooleanUtil;",
                " import cn.hutool.core.util.NumberUtil;",
                "@@ -47,5 +48,8 @@ public class NumberConverter extends AbstractConverter<Number> {",
                " \tprotected Number convertInternal(Object value) {",
                "-\t\tif (Byte.class == this.targetType) {",
                "+\t\tfinal Class<?> targetType = this.targetType;",
                "+\t\tif (Byte.class == targetType) {",
                " \t\t\tif (value instanceof Number) {",
                " \t\t\t\treturn Byte.valueOf(((Number) value).byteValue());",
                "+\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\treturn BooleanUtil.toByteObj((Boolean)value);",
                " \t\t\t}",
                "@@ -54,5 +58,7 @@ public class NumberConverter extends AbstractConverter<Number> {",
                "-\t\t} else if (Short.class == this.targetType) {",
                "+\t\t} else if (Short.class == targetType) {",
                " \t\t\tif (value instanceof Number) {",
                " \t\t\t\treturn Short.valueOf(((Number) value).shortValue());",
                "+\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\treturn BooleanUtil.toShortObj((Boolean)value);",
                " \t\t\t}",
                "@@ -61,5 +67,7 @@ public class NumberConverter extends AbstractConverter<Number> {",
                "-\t\t} else if (Integer.class == this.targetType) {",
                "+\t\t} else if (Integer.class == targetType) {",
                " \t\t\tif (value instanceof Number) {",
                " \t\t\t\treturn Integer.valueOf(((Number) value).intValue());",
                "+\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\treturn BooleanUtil.toInteger((Boolean)value);",
                " \t\t\t}",
                "@@ -68,3 +76,3 @@ public class NumberConverter extends AbstractConverter<Number> {",
                "-\t\t} else if (AtomicInteger.class == this.targetType) {",
                "+\t\t} else if (AtomicInteger.class == targetType) {",
                " \t\t\tint intValue;",
                "@@ -72,2 +80,4 @@ public class NumberConverter extends AbstractConverter<Number> {",
                " \t\t\t\tintValue = ((Number) value).intValue();",
                "+\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\tintValue = BooleanUtil.toInt((Boolean)value);",
                " \t\t\t}",
                "@@ -79,5 +89,7 @@ public class NumberConverter extends AbstractConverter<Number> {",
                " \t\t\treturn new AtomicInteger(intValue);",
                "-\t\t} else if (Long.class == this.targetType) {",
                "+\t\t} else if (Long.class == targetType) {",
                " \t\t\tif (value instanceof Number) {",
                " \t\t\t\treturn Long.valueOf(((Number) value).longValue());",
                "+\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\treturn BooleanUtil.toLongObj((Boolean)value);",
                " \t\t\t}",
                "@@ -86,3 +98,3 @@ public class NumberConverter extends AbstractConverter<Number> {",
                "-\t\t} else if (AtomicLong.class == this.targetType) {",
                "+\t\t} else if (AtomicLong.class == targetType) {",
                " \t\t\tlong longValue;",
                "@@ -90,2 +102,4 @@ public class NumberConverter extends AbstractConverter<Number> {",
                " \t\t\t\tlongValue = ((Number) value).longValue();",
                "+\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\tlongValue = BooleanUtil.toLong((Boolean)value);",
                " \t\t\t}",
                "@@ -98,5 +112,7 @@ public class NumberConverter extends AbstractConverter<Number> {",
                "-\t\t} else if (Float.class == this.targetType) {",
                "+\t\t} else if (Float.class == targetType) {",
                " \t\t\tif (value instanceof Number) {",
                " \t\t\t\treturn Float.valueOf(((Number) value).floatValue());",
                "+\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\treturn BooleanUtil.toFloatObj((Boolean)value);",
                " \t\t\t}",
                "@@ -105,5 +121,7 @@ public class NumberConverter extends AbstractConverter<Number> {",
                "-\t\t} else if (Double.class == this.targetType) {",
                "+\t\t} else if (Double.class == targetType) {",
                " \t\t\tif (value instanceof Number) {",
                " \t\t\t\treturn Double.valueOf(((Number) value).doubleValue());",
                "+\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\treturn BooleanUtil.toDoubleObj((Boolean)value);",
                " \t\t\t}",
                "@@ -112,11 +130,13 @@ public class NumberConverter extends AbstractConverter<Number> {",
                "-\t\t} else if (BigDecimal.class == this.targetType) {",
                "+\t\t} else if (BigDecimal.class == targetType) {",
                " \t\t\treturn toBigDecimal(value);",
                "-\t\t} else if (BigInteger.class == this.targetType) {",
                "+\t\t} else if (BigInteger.class == targetType) {",
                " \t\t\treturn toBigInteger(value);",
                "-\t\t}else if(Number.class == this.targetType){",
                "+\t\t}else if(Number.class == targetType){",
                " \t\t\tif (value instanceof Number) {",
                " \t\t\t\treturn (Number)value;",
                "+\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\treturn BooleanUtil.toInteger((Boolean)value);",
                " \t\t\t}",
                "@@ -144,2 +164,4 @@ public class NumberConverter extends AbstractConverter<Number> {",
                " \t\t\treturn new BigDecimal((BigInteger) value);",
                "+\t\t} else if(value instanceof Boolean) {",
                "+\t\t\treturn new BigDecimal((boolean)value ? 1 : 0);",
                " \t\t}",
                "@@ -165,2 +187,4 @@ public class NumberConverter extends AbstractConverter<Number> {",
                " \t\t\treturn BigInteger.valueOf((Long) value);",
                "+\t\t} else if(value instanceof Boolean) {",
                "+\t\t\treturn BigInteger.valueOf((boolean)value ? 1 : 0);",
                " \t\t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java b/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java",
                "index 1aaee4a4f..7fbda8b35 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java",
                "@@ -3,2 +3,3 @@ package cn.hutool.core.convert.impl;",
                " import cn.hutool.core.convert.AbstractConverter;",
                "+import cn.hutool.core.util.BooleanUtil;",
                " import cn.hutool.core.util.NumberUtil;",
                "@@ -47,2 +48,4 @@ public class PrimitiveConverter extends AbstractConverter<Object> {",
                " \t\t\t\t\treturn ((Number) value).byteValue();",
                "+\t\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\t\treturn BooleanUtil.toByte((Boolean)value);",
                " \t\t\t\t}",
                "@@ -57,2 +60,4 @@ public class PrimitiveConverter extends AbstractConverter<Object> {",
                " \t\t\t\t\treturn ((Number) value).shortValue();",
                "+\t\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\t\treturn BooleanUtil.toShort((Boolean)value);",
                " \t\t\t\t}",
                "@@ -67,2 +72,4 @@ public class PrimitiveConverter extends AbstractConverter<Object> {",
                " \t\t\t\t\treturn ((Number) value).intValue();",
                "+\t\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\t\treturn BooleanUtil.toInt((Boolean)value);",
                " \t\t\t\t}",
                "@@ -77,2 +84,4 @@ public class PrimitiveConverter extends AbstractConverter<Object> {",
                " \t\t\t\t\treturn ((Number) value).longValue();",
                "+\t\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\t\treturn BooleanUtil.toLong((Boolean)value);",
                " \t\t\t\t}",
                "@@ -87,2 +96,4 @@ public class PrimitiveConverter extends AbstractConverter<Object> {",
                " \t\t\t\t\treturn ((Number) value).floatValue();",
                "+\t\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\t\treturn BooleanUtil.toFloat((Boolean)value);",
                " \t\t\t\t}",
                "@@ -97,2 +108,4 @@ public class PrimitiveConverter extends AbstractConverter<Object> {",
                " \t\t\t\t\treturn ((Number) value).doubleValue();",
                "+\t\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\t\treturn BooleanUtil.toDouble((Boolean)value);",
                " \t\t\t\t}",
                "@@ -107,2 +120,4 @@ public class PrimitiveConverter extends AbstractConverter<Object> {",
                " \t\t\t\t\treturn ((Character)value).charValue();",
                "+\t\t\t\t} else if(value instanceof Boolean) {",
                "+\t\t\t\t\treturn BooleanUtil.toChar((Boolean)value);",
                " \t\t\t\t}",
                "@@ -118,3 +133,3 @@ public class PrimitiveConverter extends AbstractConverter<Object> {",
                " \t\t\t\tString valueStr = convertToStr(value);",
                "-\t\t\t\treturn parseBoolean(valueStr);",
                "+\t\t\t\treturn BooleanUtil.toBoolean(valueStr);",
                " \t\t\t}",
                "@@ -126,34 +141,2 @@ public class PrimitiveConverter extends AbstractConverter<Object> {",
                "-\t/**",
                "-\t * \u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e4\u00b8\u00baboolean\u00e5\u0080\u00bc",
                "-\t * @param valueStr \u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "-\t * @return boolean\u00e5\u0080\u00bc",
                "-\t */",
                "-\tstatic boolean parseBoolean(String valueStr){",
                "-\t\tif (StrUtil.isNotBlank(valueStr)) {",
                "-\t\t\tvalueStr = valueStr.trim().toLowerCase();",
                "-\t\t\tswitch (valueStr) {",
                "-\t\t\t\tcase \"true\":",
                "-\t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"yes\":",
                "-\t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"y\":",
                "-\t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"ok\":",
                "-\t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"1\":",
                "-\t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"on\":",
                "-\t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"\u00e6\u0098\u00af\":",
                "-\t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"\u00e5\u00af\u00b9\":",
                "-\t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"\u00e7\u009c\u009f\":",
                "-\t\t\t\t\treturn true;",
                "-\t\t\t}",
                "-\t\t}",
                "-\t\treturn false;",
                "-\t}",
                "-\t",
                " \t@Override",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/BooleanUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/BooleanUtil.java",
                "new file mode 100644",
                "index 000000000..a8740412e",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/BooleanUtil.java",
                "@@ -0,0 +1,436 @@",
                "+package cn.hutool.core.util;",
                "+",
                "+import cn.hutool.core.convert.Convert;",
                "+",
                "+/**",
                "+ * Boolean\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e5\u00b7\u00a5\u00e5\u0085\u00b7\u00e7\u00b1\u00bb",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.16",
                "+ */",
                "+public class BooleanUtil {",
                "+",
                "+\t/** \u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e4\u00b8\u00ba\u00e7\u009c\u009f\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2 */",
                "+\tprivate static final String[] TRUE_ARRAY = { \"true\", \"yes\", \"y\", \"t\", \"ok\", \"1\", \"on\", \"\u00e6\u0098\u00af\", \"\u00e5\u00af\u00b9\", \"\u00e7\u009c\u009f\", };",
                "+",
                "+\t/**",
                "+\t * \u00e5\u008f\u0096\u00e7\u009b\u00b8\u00e5\u008f\u008d\u00e5\u0080\u00bc",
                "+\t * ",
                "+\t * @param bool Boolean\u00e5\u0080\u00bc",
                "+\t * @return \u00e7\u009b\u00b8\u00e5\u008f\u008d\u00e7\u009a\u0084Boolean\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static Boolean negate(Boolean bool) {",
                "+\t\tif (bool == null) {",
                "+\t\t\treturn null;",
                "+\t\t}",
                "+\t\treturn bool.booleanValue() ? Boolean.FALSE : Boolean.TRUE;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u00a3\u0080\u00e6\u009f\u00a5 {@code Boolean} \u00e5\u0080\u00bc\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba {@code true}",
                "+\t *",
                "+\t * <pre>",
                "+\t *   BooleanUtil.isTrue(Boolean.TRUE)  = true",
                "+\t *   BooleanUtil.isTrue(Boolean.FALSE) = false",
                "+\t *   BooleanUtil.isTrue(null)          = false",
                "+\t * </pre>",
                "+\t *",
                "+\t * @param bool \u00e8\u00a2\u00ab\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e7\u009a\u0084Boolean\u00e5\u0080\u00bc",
                "+\t * @return \u00e5\u00bd\u0093\u00e5\u0080\u00bc\u00e4\u00b8\u00batrue\u00e4\u00b8\u0094\u00e9\u009d\u009enull\u00e6\u0097\u00b6\u00e8\u00bf\u0094\u00e5\u009b\u009e{@code true}",
                "+\t */",
                "+\tpublic static boolean isTrue(Boolean bool) {",
                "+\t\treturn Boolean.TRUE.equals(bool);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u00a3\u0080\u00e6\u009f\u00a5 {@code Boolean} \u00e5\u0080\u00bc\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba {@code false}",
                "+\t *",
                "+\t * <pre>",
                "+\t *   BooleanUtil.isFalse(Boolean.TRUE)  = false",
                "+\t *   BooleanUtil.isFalse(Boolean.FALSE) = true",
                "+\t *   BooleanUtil.isFalse(null)          = false",
                "+\t * </pre>",
                "+\t *",
                "+\t * @param bool \u00e8\u00a2\u00ab\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e7\u009a\u0084Boolean\u00e5\u0080\u00bc",
                "+\t * @return \u00e5\u00bd\u0093\u00e5\u0080\u00bc\u00e4\u00b8\u00batrue\u00e4\u00b8\u0094\u00e9\u009d\u009enull\u00e6\u0097\u00b6\u00e8\u00bf\u0094\u00e5\u009b\u009e{@code true}",
                "+\t */",
                "+\tpublic static boolean isFalse(Boolean bool) {",
                "+\t\treturn Boolean.FALSE.equals(bool);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u008f\u0096\u00e7\u009b\u00b8\u00e5\u008f\u008d\u00e5\u0080\u00bc",
                "+\t * ",
                "+\t * @param bool Boolean\u00e5\u0080\u00bc",
                "+\t * @return \u00e7\u009b\u00b8\u00e5\u008f\u008d\u00e7\u009a\u0084Boolean\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static boolean negate(boolean bool) {",
                "+\t\treturn bool ? false : true;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e4\u00b8\u00baboolean\u00e5\u0080\u00bc",
                "+\t * ",
                "+\t * @param valueStr \u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @return boolean\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static boolean toBoolean(String valueStr) {",
                "+\t\tif (StrUtil.isNotBlank(valueStr)) {",
                "+\t\t\tvalueStr = valueStr.trim().toLowerCase();",
                "+\t\t\tif (ArrayUtil.contains(TRUE_ARRAY, valueStr)) {",
                "+\t\t\t\treturn true;",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn false;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * boolean\u00e5\u0080\u00bc\u00e8\u00bd\u00ac\u00e4\u00b8\u00baint",
                "+\t * ",
                "+\t * @param value Boolean\u00e5\u0080\u00bc",
                "+\t * @return int\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static int toInt(boolean value) {",
                "+\t\treturn value ? 1 : 0;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * boolean\u00e5\u0080\u00bc\u00e8\u00bd\u00ac\u00e4\u00b8\u00baInteger",
                "+\t * ",
                "+\t * @param value Boolean\u00e5\u0080\u00bc",
                "+\t * @return Integer\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static Integer toInteger(boolean value) {",
                "+\t\treturn Integer.valueOf(toInt(value));",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * boolean\u00e5\u0080\u00bc\u00e8\u00bd\u00ac\u00e4\u00b8\u00bachar",
                "+\t * ",
                "+\t * @param value Boolean\u00e5\u0080\u00bc",
                "+\t * @return char\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static char toChar(boolean value) {",
                "+\t\treturn (char) toInt(value);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * boolean\u00e5\u0080\u00bc\u00e8\u00bd\u00ac\u00e4\u00b8\u00baCharacter",
                "+\t * ",
                "+\t * @param value Boolean\u00e5\u0080\u00bc",
                "+\t * @return Character\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static Character toCharacter(boolean value) {",
                "+\t\treturn Character.valueOf(toChar(value));",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * boolean\u00e5\u0080\u00bc\u00e8\u00bd\u00ac\u00e4\u00b8\u00babyte",
                "+\t * ",
                "+\t * @param value Boolean\u00e5\u0080\u00bc",
                "+\t * @return byte\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static byte toByte(boolean value) {",
                "+\t\treturn (byte) toInt(value);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * boolean\u00e5\u0080\u00bc\u00e8\u00bd\u00ac\u00e4\u00b8\u00baByte",
                "+\t * ",
                "+\t * @param value Boolean\u00e5\u0080\u00bc",
                "+\t * @return Byte\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static Byte toByteObj(boolean value) {",
                "+\t\treturn Byte.valueOf(toByte(value));",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * boolean\u00e5\u0080\u00bc\u00e8\u00bd\u00ac\u00e4\u00b8\u00balong",
                "+\t * ",
                "+\t * @param value Boolean\u00e5\u0080\u00bc",
                "+\t * @return long\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static long toLong(boolean value) {",
                "+\t\treturn (long) toInt(value);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * boolean\u00e5\u0080\u00bc\u00e8\u00bd\u00ac\u00e4\u00b8\u00baLong",
                "+\t * ",
                "+\t * @param value Boolean\u00e5\u0080\u00bc",
                "+\t * @return Long\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static Long toLongObj(boolean value) {",
                "+\t\treturn Long.valueOf(toLong(value));",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * boolean\u00e5\u0080\u00bc\u00e8\u00bd\u00ac\u00e4\u00b8\u00bashort",
                "+\t * ",
                "+\t * @param value Boolean\u00e5\u0080\u00bc",
                "+\t * @return short\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static short toShort(boolean value) {",
                "+\t\treturn (short) toInt(value);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * boolean\u00e5\u0080\u00bc\u00e8\u00bd\u00ac\u00e4\u00b8\u00baShort",
                "+\t * ",
                "+\t * @param value Boolean\u00e5\u0080\u00bc",
                "+\t * @return Short\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static Short toShortObj(boolean value) {",
                "+\t\treturn Short.valueOf(toShort(value));",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * boolean\u00e5\u0080\u00bc\u00e8\u00bd\u00ac\u00e4\u00b8\u00bafloat",
                "+\t * ",
                "+\t * @param value Boolean\u00e5\u0080\u00bc",
                "+\t * @return float\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static float toFloat(boolean value) {",
                "+\t\treturn (float) toInt(value);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * boolean\u00e5\u0080\u00bc\u00e8\u00bd\u00ac\u00e4\u00b8\u00baFloat",
                "+\t * ",
                "+\t * @param value Boolean\u00e5\u0080\u00bc",
                "+\t * @return float\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static Float toFloatObj(boolean value) {",
                "+\t\treturn Float.valueOf(toFloat(value));",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * boolean\u00e5\u0080\u00bc\u00e8\u00bd\u00ac\u00e4\u00b8\u00badouble",
                "+\t * ",
                "+\t * @param value Boolean\u00e5\u0080\u00bc",
                "+\t * @return double\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static double toDouble(boolean value) {",
                "+\t\treturn (double) toInt(value);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * boolean\u00e5\u0080\u00bc\u00e8\u00bd\u00ac\u00e4\u00b8\u00badouble",
                "+\t * ",
                "+\t * @param value Boolean\u00e5\u0080\u00bc",
                "+\t * @return double\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static Double toDoubleObj(boolean value) {",
                "+\t\treturn Double.valueOf(toDouble(value));",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00b0\u0086boolean\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00ba\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2 {@code 'true'} \u00e6\u0088\u0096\u00e8\u0080\u0085 {@code 'false'}.",
                "+\t *",
                "+\t * <pre>",
                "+\t *   BooleanUtil.toStringTrueFalse(true)   = \"true\"",
                "+\t *   BooleanUtil.toStringTrueFalse(false)  = \"false\"",
                "+\t * </pre>",
                "+\t *",
                "+\t * @param bool Boolean\u00e5\u0080\u00bc",
                "+\t * @return {@code 'true'}, {@code 'false'}",
                "+\t */",
                "+\tpublic static String toStringTrueFalse(boolean bool) {",
                "+\t\treturn toString(bool, \"true\", \"false\");",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00b0\u0086boolean\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00ba\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2 {@code 'on'} \u00e6\u0088\u0096\u00e8\u0080\u0085 {@code 'off'}.",
                "+\t *",
                "+\t * <pre>",
                "+\t *   BooleanUtil.toStringOnOff(true)   = \"on\"",
                "+\t *   BooleanUtil.toStringOnOff(false)  = \"off\"",
                "+\t * </pre>",
                "+\t *",
                "+\t * @param bool Boolean\u00e5\u0080\u00bc",
                "+\t * @return {@code 'on'}, {@code 'off'}",
                "+\t */",
                "+\tpublic static String toStringOnOff(boolean bool) {",
                "+\t\treturn toString(bool, \"on\", \"off\");",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00b0\u0086boolean\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00ba\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2 {@code 'yes'} \u00e6\u0088\u0096\u00e8\u0080\u0085 {@code 'no'}.",
                "+\t *",
                "+\t * <pre>",
                "+\t *   BooleanUtil.toStringYesNo(true)   = \"yes\"",
                "+\t *   BooleanUtil.toStringYesNo(false)  = \"no\"",
                "+\t * </pre>",
                "+\t *",
                "+\t * @param bool Boolean\u00e5\u0080\u00bc",
                "+\t * @return {@code 'yes'}, {@code 'no'}",
                "+\t */",
                "+\tpublic static String toStringYesNo(boolean bool) {",
                "+\t\treturn toString(bool, \"yes\", \"no\");",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00b0\u0086boolean\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00ba\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t *",
                "+\t * <pre>",
                "+\t *   BooleanUtil.toString(true, \"true\", \"false\")   = \"true\"",
                "+\t *   BooleanUtil.toString(false, \"true\", \"false\")  = \"false\"",
                "+\t * </pre>",
                "+\t *",
                "+\t * @param bool Boolean\u00e5\u0080\u00bc",
                "+\t * @param trueString \u00e5\u00bd\u0093\u00e5\u0080\u00bc\u00e4\u00b8\u00ba {@code true}\u00e6\u0097\u00b6\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u00ad\u00a4\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2, \u00e5\u008f\u00af\u00e8\u0083\u00bd\u00e4\u00b8\u00ba {@code null}",
                "+\t * @param falseString \u00e5\u00bd\u0093\u00e5\u0080\u00bc\u00e4\u00b8\u00ba {@code false}\u00e6\u0097\u00b6\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u00ad\u00a4\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2, \u00e5\u008f\u00af\u00e8\u0083\u00bd\u00e4\u00b8\u00ba {@code null}",
                "+\t * @return \u00e7\u00bb\u0093\u00e6\u009e\u009c\u00e5\u0080\u00bc",
                "+\t */",
                "+\tpublic static String toString(boolean bool, String trueString, String falseString) {",
                "+\t\treturn bool ? trueString : falseString;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00af\u00b9Boolean\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e5\u008f\u0096\u00e4\u00b8\u008e",
                "+\t *",
                "+\t * <pre>",
                "+\t *   BooleanUtil.and(true, true)         = true",
                "+\t *   BooleanUtil.and(false, false)       = false",
                "+\t *   BooleanUtil.and(true, false)        = false",
                "+\t *   BooleanUtil.and(true, true, false)  = false",
                "+\t *   BooleanUtil.and(true, true, true)   = true",
                "+\t * </pre>",
                "+\t *",
                "+\t * @param array {@code Boolean}\u00e6\u0095\u00b0\u00e7\u00bb\u0084",
                "+\t * @return \u00e5\u008f\u0096\u00e4\u00b8\u008e\u00e4\u00b8\u00ba\u00e7\u009c\u009f\u00e8\u00bf\u0094\u00e5\u009b\u009e{@code true}",
                "+\t */",
                "+\tpublic static boolean and(boolean... array) {",
                "+\t\tif (ArrayUtil.isEmpty(array)) {",
                "+\t\t\tthrow new IllegalArgumentException(\"The Array must not be empty !\");",
                "+\t\t}",
                "+\t\tfor (final boolean element : array) {",
                "+\t\t\tif (false == element) {",
                "+\t\t\t\treturn false;",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn true;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00af\u00b9Boolean\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e5\u008f\u0096\u00e4\u00b8\u008e",
                "+\t *",
                "+\t * <pre>",
                "+\t *   BooleanUtil.and(Boolean.TRUE, Boolean.TRUE)                 = Boolean.TRUE",
                "+\t *   BooleanUtil.and(Boolean.FALSE, Boolean.FALSE)               = Boolean.FALSE",
                "+\t *   BooleanUtil.and(Boolean.TRUE, Boolean.FALSE)                = Boolean.FALSE",
                "+\t *   BooleanUtil.and(Boolean.TRUE, Boolean.TRUE, Boolean.TRUE)   = Boolean.TRUE",
                "+\t *   BooleanUtil.and(Boolean.FALSE, Boolean.FALSE, Boolean.TRUE) = Boolean.FALSE",
                "+\t *   BooleanUtil.and(Boolean.TRUE, Boolean.FALSE, Boolean.TRUE)  = Boolean.FALSE",
                "+\t * </pre>",
                "+\t *",
                "+\t * @param array {@code Boolean}\u00e6\u0095\u00b0\u00e7\u00bb\u0084",
                "+\t * @return \u00e5\u008f\u0096\u00e4\u00b8\u008e\u00e4\u00b8\u00ba\u00e7\u009c\u009f\u00e8\u00bf\u0094\u00e5\u009b\u009e{@code true}",
                "+\t */",
                "+\tpublic static Boolean and(final Boolean... array) {",
                "+\t\tif (ArrayUtil.isEmpty(array)) {",
                "+\t\t\tthrow new IllegalArgumentException(\"The Array must not be empty !\");",
                "+\t\t}",
                "+\t\tfinal boolean[] primitive = Convert.convert(boolean[].class, array);",
                "+\t\treturn Boolean.valueOf(and(primitive));",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00af\u00b9Boolean\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e5\u008f\u0096\u00e6\u0088\u0096",
                "+\t *",
                "+\t * <pre>",
                "+\t *   BooleanUtil.or(true, true)          = true",
                "+\t *   BooleanUtil.or(false, false)        = false",
                "+\t *   BooleanUtil.or(true, false)         = true",
                "+\t *   BooleanUtil.or(true, true, false)   = true",
                "+\t *   BooleanUtil.or(true, true, true)    = true",
                "+\t *   BooleanUtil.or(false, false, false) = false",
                "+\t * </pre>",
                "+\t *",
                "+\t * @param array {@code Boolean}\u00e6\u0095\u00b0\u00e7\u00bb\u0084",
                "+\t * @return \u00e5\u008f\u0096\u00e6\u0088\u0096\u00e4\u00b8\u00ba\u00e7\u009c\u009f\u00e8\u00bf\u0094\u00e5\u009b\u009e{@code true}",
                "+\t */",
                "+\tpublic static boolean or(boolean... array) {",
                "+\t\tif (ArrayUtil.isEmpty(array)) {",
                "+\t\t\tthrow new IllegalArgumentException(\"The Array must not be empty !\");",
                "+\t\t}",
                "+\t\tfor (final boolean element : array) {",
                "+\t\t\tif (element) {",
                "+\t\t\t\treturn true;",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn false;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00af\u00b9Boolean\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e5\u008f\u0096\u00e6\u0088\u0096",
                "+\t *",
                "+\t * <pre>",
                "+\t *   BooleanUtil.or(Boolean.TRUE, Boolean.TRUE)                  = Boolean.TRUE",
                "+\t *   BooleanUtil.or(Boolean.FALSE, Boolean.FALSE)                = Boolean.FALSE",
                "+\t *   BooleanUtil.or(Boolean.TRUE, Boolean.FALSE)                 = Boolean.TRUE",
                "+\t *   BooleanUtil.or(Boolean.TRUE, Boolean.TRUE, Boolean.TRUE)    = Boolean.TRUE",
                "+\t *   BooleanUtil.or(Boolean.FALSE, Boolean.FALSE, Boolean.TRUE)  = Boolean.TRUE",
                "+\t *   BooleanUtil.or(Boolean.TRUE, Boolean.FALSE, Boolean.TRUE)   = Boolean.TRUE",
                "+\t *   BooleanUtil.or(Boolean.FALSE, Boolean.FALSE, Boolean.FALSE) = Boolean.FALSE",
                "+\t * </pre>",
                "+\t *",
                "+\t * @param array {@code Boolean}\u00e6\u0095\u00b0\u00e7\u00bb\u0084",
                "+\t * @return \u00e5\u008f\u0096\u00e6\u0088\u0096\u00e4\u00b8\u00ba\u00e7\u009c\u009f\u00e8\u00bf\u0094\u00e5\u009b\u009e{@code true}",
                "+\t */",
                "+\tpublic static Boolean or(Boolean... array) {",
                "+\t\tif (ArrayUtil.isEmpty(array)) {",
                "+\t\t\tthrow new IllegalArgumentException(\"The Array must not be empty !\");",
                "+\t\t}",
                "+\t\tfinal boolean[] primitive = Convert.convert(boolean[].class, array);",
                "+\t\treturn Boolean.valueOf(or(primitive));",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00af\u00b9Boolean\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e5\u008f\u0096\u00e5\u00bc\u0082\u00e6\u0088\u0096",
                "+\t *",
                "+\t * <pre>",
                "+\t *   BooleanUtil.xor(true, true)   = false",
                "+\t *   BooleanUtil.xor(false, false) = false",
                "+\t *   BooleanUtil.xor(true, false)  = true",
                "+\t *   BooleanUtil.xor(true, true)   = false",
                "+\t *   BooleanUtil.xor(false, false) = false",
                "+\t *   BooleanUtil.xor(true, false)  = true",
                "+\t * </pre>",
                "+\t *",
                "+\t * @param array {@code boolean}\u00e6\u0095\u00b0\u00e7\u00bb\u0084",
                "+\t * @return \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00bc\u0082\u00e6\u0088\u0096\u00e8\u00ae\u00a1\u00e7\u00ae\u0097\u00e4\u00b8\u00batrue\u00e8\u00bf\u0094\u00e5\u009b\u009e {@code true}",
                "+\t */",
                "+\tpublic static boolean xor(boolean... array) {",
                "+\t\tif (ArrayUtil.isEmpty(array)) {",
                "+\t\t\tthrow new IllegalArgumentException(\"The Array must not be empty\");",
                "+\t\t}",
                "+",
                "+\t\tboolean result = false;",
                "+\t\tfor (final boolean element : array) {",
                "+\t\t\tresult ^= element;",
                "+\t\t}",
                "+",
                "+\t\treturn result;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00af\u00b9Boolean\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e5\u008f\u0096\u00e5\u00bc\u0082\u00e6\u0088\u0096",
                "+\t *",
                "+\t * <pre>",
                "+\t *   BooleanUtil.xor(new Boolean[] { Boolean.TRUE, Boolean.TRUE })   = Boolean.FALSE",
                "+\t *   BooleanUtil.xor(new Boolean[] { Boolean.FALSE, Boolean.FALSE }) = Boolean.FALSE",
                "+\t *   BooleanUtil.xor(new Boolean[] { Boolean.TRUE, Boolean.FALSE })  = Boolean.TRUE",
                "+\t * </pre>",
                "+\t *",
                "+\t * @param array {@code Boolean} \u00e6\u0095\u00b0\u00e7\u00bb\u0084",
                "+\t * @return \u00e5\u00bc\u0082\u00e6\u0088\u0096\u00e4\u00b8\u00ba\u00e7\u009c\u009f\u00e5\u008f\u0096{@code true}",
                "+\t */",
                "+\tpublic static Boolean xor(Boolean... array) {",
                "+\t\tif (ArrayUtil.isEmpty(array)) {",
                "+\t\t\tthrow new IllegalArgumentException(\"The Array must not be empty !\");",
                "+\t\t}",
                "+\t\tfinal boolean[] primitive = Convert.convert(boolean[].class, array);",
                "+\t\treturn Boolean.valueOf(xor(primitive));",
                "+\t}",
                "+}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/convert/impl/AtomicBooleanConverter.java",
                "hutool-core/src/main/java/cn/hutool/core/convert/impl/BooleanConverter.java",
                "hutool-core/src/main/java/cn/hutool/core/convert/impl/CharacterConverter.java",
                "hutool-core/src/main/java/cn/hutool/core/convert/impl/NumberConverter.java",
                "hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java",
                "hutool-core/src/main/java/cn/hutool/core/util/BooleanUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7b753792186b3fb03c6d8680520c1a92a25f1ffd",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1542188778,
            "hunks": 25,
            "message": "fix json to bean",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java b/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "index 8396e8d39..24089b890 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "@@ -10,3 +10,5 @@ import java.lang.reflect.Field;",
                " import java.lang.reflect.Method;",
                "+import java.util.ArrayList;",
                " import java.util.Collection;",
                "+import java.util.Collections;",
                " import java.util.HashMap;",
                "@@ -84,3 +86,9 @@ public class BeanUtil {",
                "-\tpublic static boolean hasNull(Object bean, boolean ignoreError) {",
                "+\t/**",
                "+\t * \u00e5\u0088\u00a4\u00e6\u0096\u00adBean\u00e4\u00b8\u00ad\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u009c\u0089\u00e5\u0080\u00bc\u00e4\u00b8\u00banull\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e6\u00ae\u00b5",
                "+\t * ",
                "+\t * @param bean Bean",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u009c\u0089\u00e5\u0080\u00bc\u00e4\u00b8\u00banull\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e6\u00ae\u00b5",
                "+\t */",
                "+\tpublic static boolean hasNull(Object bean) {",
                " \t\tfinal Field[] fields = ClassUtil.getDeclaredFields(bean.getClass());",
                "@@ -126,3 +134,3 @@ public class BeanUtil {",
                " \t */",
                "-\tpublic static PropertyDescriptor[] getPropertyDescriptors(Class<?> clazz) throws BeanException{",
                "+\tpublic static PropertyDescriptor[] getPropertyDescriptors(Class<?> clazz) throws BeanException {",
                " \t\tBeanInfo beanInfo;",
                "@@ -136,3 +144,3 @@ public class BeanUtil {",
                " \t\t\tpublic boolean accept(PropertyDescriptor t) {",
                "-\t\t\t\t//\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e6\u008e\u0089getClass\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t\t\t\t// \u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e6\u008e\u0089getClass\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                " \t\t\t\treturn false == \"class\".equals(t.getName());",
                "@@ -249,3 +257,3 @@ public class BeanUtil {",
                " \t}",
                "-",
                "+\t",
                " \t/**",
                "@@ -392,2 +400,33 @@ public class BeanUtil {",
                " \t// --------------------------------------------------------------------------------------------- fillBean",
                "+\t/**",
                "+\t * ",
                "+\t * @param sourceList",
                "+\t * @param clz",
                "+\t * @return",
                "+\t */",
                "+\tpublic static <T> List<T> toBeanList(Collection<?> sourceList, Class<T> clz) {",
                "+\t\tif (CollUtil.isEmpty(sourceList)) {",
                "+\t\t\treturn Collections.emptyList();",
                "+\t\t}",
                "+\t\tfinal List<T> list = new ArrayList<>();",
                "+\t\tfor (Object source : sourceList) {",
                "+\t\t\tlist.add(toBean(source, clz));",
                "+\t\t}",
                "+\t\treturn list;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u0088\u0096Map\u00e8\u00bd\u00acBean",
                "+\t * ",
                "+\t * @param source Bean\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u0088\u0096Map",
                "+\t * @param clazz \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e7\u009a\u0084Bean\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @return Bean\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @since 4.1.20",
                "+\t */",
                "+\tpublic static <T> T toBean(Object source, Class<T> clazz) {",
                "+\t\tfinal T target = ReflectUtil.newInstance(clazz);",
                "+\t\tcopyProperties(source, target);",
                "+\t\treturn target;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -541,3 +580,3 @@ public class BeanUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -636,3 +675,3 @@ public class BeanUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/MapValueProvider.java b/hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/MapValueProvider.java",
                "index d44e28dd1..7150fc786 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/MapValueProvider.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/MapValueProvider.java",
                "@@ -6,2 +6,3 @@ import java.util.Map;",
                " import cn.hutool.core.bean.copier.ValueProvider;",
                "+import cn.hutool.core.convert.Convert;",
                " import cn.hutool.core.map.CaseInsensitiveMap;",
                "@@ -42,3 +43,3 @@ public class MapValueProvider implements ValueProvider<String> {",
                " \t\t}",
                "-\t\treturn value;",
                "+\t\treturn Convert.convert(valueType, value);",
                " \t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java",
                "index 2679847a9..b7175d032 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java",
                "@@ -16,2 +16,3 @@ import cn.hutool.core.collection.CollUtil;",
                " import cn.hutool.core.collection.CollectionUtil;",
                "+import cn.hutool.core.convert.Convert;",
                " import cn.hutool.core.exceptions.UtilException;",
                "@@ -98,2 +99,15 @@ public class ReflectUtil {",
                " \t// --------------------------------------------------------------------------------------------------------- Field",
                "+\t/**",
                "+\t * \u00e6\u009f\u00a5\u00e6\u0089\u00be\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u00b1\u00bb\u00e4\u00b8\u00ad\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u0090\u008d\u00e7\u00a7\u00b0\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00ef\u00bc\u0088\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e9\u009d\u009epublic\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00ef\u00bc\u0089\u00ef\u00bc\u008c\u00e4\u00b9\u009f\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e7\u0088\u00b6\u00e7\u00b1\u00bb\u00e5\u0092\u008cObject\u00e7\u00b1\u00bb\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e6\u00ae\u00b5",
                "+\t * ",
                "+\t * @param beanClass \u00e8\u00a2\u00ab\u00e6\u009f\u00a5\u00e6\u0089\u00be\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e7\u009a\u0084\u00e7\u00b1\u00bb,\u00e4\u00b8\u008d\u00e8\u0083\u00bd\u00e4\u00b8\u00banull",
                "+\t * @param name \u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e5\u0090\u008d",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e5\u00ad\u0097\u00e6\u00ae\u00b5",
                "+\t * @throws SecurityException \u00e5\u00ae\u0089\u00e5\u0085\u00a8\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * @since 4.1.21",
                "+\t */",
                "+\tpublic static boolean hasField(Class<?> beanClass, String name) throws SecurityException {",
                "+\t\treturn null != getField(beanClass, name);",
                "+\t}",
                "+\t",
                " \t/**",
                "@@ -245,3 +259,14 @@ public class ReflectUtil {",
                " \t\tfield.setAccessible(true);",
                "-",
                "+\t\t",
                "+\t\tif(null != value) {",
                "+\t\t\tClass<?> fieldType = field.getType();",
                "+\t\t\tif(false == fieldType.isAssignableFrom(value.getClass())) {",
                "+\t\t\t\t//\u00e5\u00af\u00b9\u00e4\u00ba\u008e\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e4\u00b8\u008d\u00e5\u0090\u008c\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00ef\u00bc\u008c\u00e5\u00b0\u009d\u00e8\u00af\u0095\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00ef\u00bc\u008c\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5\u00e5\u0088\u0099\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u008e\u009f\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t\t\t\tfinal Object targetValue = Convert.convert(fieldType, value);",
                "+\t\t\t\tif(null != targetValue) {",
                "+\t\t\t\t\tvalue = targetValue;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\t",
                " \t\ttry {",
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java b/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "index b8c23b8c9..7d9d5457b 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "@@ -293,3 +293,3 @@ final class InternalJSONUtil {",
                " \t * ",
                "-\t * @param type \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @param targetType \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                " \t * @param value \u00e5\u0080\u00bc",
                "@@ -299,3 +299,3 @@ final class InternalJSONUtil {",
                " \t */",
                "-\tprotected static Object jsonConvert(Type type, Object value, boolean ignoreError) throws ConvertException {",
                "+\tprotected static Object jsonConvert(Type targetType, Object value, boolean ignoreError) throws ConvertException {",
                " \t\tif (null == value) {",
                "@@ -306,8 +306,8 @@ final class InternalJSONUtil {",
                " \t\t}",
                "-\t\tfinal Class<?> rowType = TypeUtil.getClass(type);",
                "-\t\tif (null == rowType) {",
                "-\t\t\tthrow new IllegalArgumentException(StrUtil.format(\"Can not know Class of Type {} !\", type));",
                "+\t\tfinal Class<?> targetRowType = TypeUtil.getClass(targetType);",
                "+\t\tif (null == targetRowType) {",
                "+\t\t\tthrow new IllegalArgumentException(StrUtil.format(\"Can not know Class of Type {} !\", targetType));",
                " \t\t}",
                "-\t\tif (JSON.class.isAssignableFrom(rowType)) {",
                "+\t\tif (JSON.class.isAssignableFrom(targetRowType)) {",
                " \t\t\t// \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e4\u00b8\u00baJSON\u00e6\u00a0\u00bc\u00e5\u00bc\u008f",
                "@@ -319,12 +319,12 @@ final class InternalJSONUtil {",
                " \t\tif (value instanceof JSONObject) {",
                "-\t\t\tif (BeanUtil.isBean(rowType)) {",
                "+\t\t\tif (BeanUtil.isBean(targetRowType)) {",
                " \t\t\t\t// \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e4\u00b8\u00baBean",
                "-\t\t\t\ttargetValue = ((JSONObject) value).toBean(type, ignoreError);",
                "+\t\t\t\ttargetValue = ((JSONObject) value).toBean(targetType, ignoreError);",
                " \t\t\t}",
                " \t\t} else if (value instanceof JSONArray) {",
                "-\t\t\tif (rowType.isArray()) {",
                "+\t\t\tif (targetRowType.isArray()) {",
                " \t\t\t\t// \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e4\u00b8\u00ba\u00e6\u0095\u00b0\u00e7\u00bb\u0084",
                "-\t\t\t\ttargetValue = ((JSONArray) value).toArray(rowType, ignoreError);",
                "+\t\t\t\ttargetValue = ((JSONArray) value).toArray(targetRowType, ignoreError);",
                " \t\t\t} else {",
                "-\t\t\t\ttargetValue = (new CollectionConverter(type, TypeUtil.getTypeArgument(type))).convert(value, null);",
                "+\t\t\t\ttargetValue = (new CollectionConverter(targetType, TypeUtil.getTypeArgument(targetType))).convert(value, null);",
                " \t\t\t}",
                "@@ -335,3 +335,3 @@ final class InternalJSONUtil {",
                " \t\t\ttry {",
                "-\t\t\t\ttargetValue = ConverterRegistry.getInstance().convert(type, value);",
                "+\t\t\t\ttargetValue = ConverterRegistry.getInstance().convert(targetType, value);",
                " \t\t\t} catch (ConvertException e) {",
                "@@ -350,3 +350,3 @@ final class InternalJSONUtil {",
                " \t\t\t}",
                "-\t\t\tthrow new ConvertException(\"Can not convert {} to type {}\", value, rowType.getName());",
                "+\t\t\tthrow new ConvertException(\"Can not convert {} to type {}\", value, targetRowType.getName());",
                " \t\t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/MapValueProvider.java",
                "hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java",
                "hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d9351f21963ef4dbcc4485e7061df26882f3a5a6",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1542179424,
            "hunks": 3,
            "message": "fix enum",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/EnumUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/EnumUtil.java",
                "index 1439ff7f0..578e4de33 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/EnumUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/EnumUtil.java",
                "@@ -74,2 +74,6 @@ public class EnumUtil {",
                " \tpublic static <T extends Enum<T>> T likeValueOf(Class<T> enumClass, Object value) {",
                "+\t\tif(value instanceof CharSequence) {",
                "+\t\t\tvalue = value.toString().trim();",
                "+\t\t}",
                "+\t\t",
                " \t\tfinal Field[] fields = ReflectUtil.getFields(enumClass);",
                "@@ -150,3 +154,5 @@ public class EnumUtil {",
                " \t\t\t}",
                "-\t\t\tnames.add(name);",
                "+\t\t\tif(false == names.contains(name)) {",
                "+\t\t\t\tnames.add(name);",
                "+\t\t\t}",
                " \t\t}",
                "diff --git a/hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/BaseAsymmetric.java b/hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/BaseAsymmetric.java",
                "index 18fb9d083..8e555e122 100644",
                "--- a/hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/BaseAsymmetric.java",
                "+++ b/hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/BaseAsymmetric.java",
                "@@ -168,3 +168,4 @@ public class BaseAsymmetric<T extends BaseAsymmetric<T>> {",
                " \tpublic String getPublicKeyBase64() {",
                "-\t\treturn Base64.encode(getPublicKey().getEncoded());",
                "+\t\tfinal PublicKey publicKey = getPublicKey();",
                "+\t\treturn (null == publicKey) ? null : Base64.encode(publicKey.getEncoded());",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/EnumUtil.java",
                "hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/BaseAsymmetric.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "0a77191122579d5f4ce428eb92ce11020e867573",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1535538850,
            "hunks": 7,
            "message": "fix json bug",
            "diff": [
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java b/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "index 4624f947b..c53030ff6 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "@@ -298,3 +298,5 @@ final class InternalJSONUtil {",
                " \t\tif (value instanceof JSONObject) {",
                "-\t\t\ttargetValue = ((JSONObject) value).toBean(type, ignoreError);",
                "+\t\t\tif(BeanUtil.isBean(rowType)) {",
                "+\t\t\t\ttargetValue = ((JSONObject) value).toBean(type, ignoreError);",
                "+\t\t\t}",
                " \t\t} else if (value instanceof JSONArray) {",
                "@@ -328,3 +330,3 @@ final class InternalJSONUtil {",
                " \t\t}",
                "-",
                "+\t\t",
                " \t\treturn targetValue;",
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/JSONObject.java b/hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "index 77673742b..b3c973002 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "@@ -104,3 +104,3 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \t\tthis();",
                "-\t\tif(ArrayUtil.isNotEmpty(names)) {",
                "+\t\tif (ArrayUtil.isNotEmpty(names)) {",
                " \t\t\tfor (String name : names) {",
                "@@ -115,3 +115,3 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -302,5 +302,5 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \t\t\tthrow new IllegalArgumentException(StrUtil.format(\"Can not know Class of Type {} !\", type));",
                "-\t\t}else if(Object.class.equals(clazz)) {",
                "+\t\t} else if (Object.class.equals(clazz)) {",
                " \t\t\treturn (T) this;",
                "-\t\t}else if(Map.class.equals(clazz)) {",
                "+\t\t} else if (Map.class.isAssignableFrom(clazz) || CharSequence.class.isAssignableFrom(clazz)) {",
                " \t\t\treturn Convert.convert(type, this);",
                "@@ -433,3 +433,3 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \t}",
                "-\t",
                "+",
                " \t@Override"
            ],
            "changed_files": [
                "hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "hutool-json/src/main/java/cn/hutool/json/JSONObject.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "9bccaa3519c7808fb7c1d977832aed290ec35858",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1539776136,
            "hunks": 2,
            "message": "fix ReflectUtil bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java",
                "index 1aa461b38..81eb48dee 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java",
                "@@ -572,2 +572,6 @@ public class ClassUtil {",
                " \t\t}",
                "+\t\tif(null == types1 || null == types2) {",
                "+\t\t\t//\u00e4\u00bb\u00bb\u00e4\u00bd\u0095\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e4\u00b8\u00banull\u00e4\u00b8\u008d\u00e7\u009b\u00b8\u00e7\u00ad\u0089\u00ef\u00bc\u0088\u00e4\u00b9\u008b\u00e5\u0089\u008d\u00e5\u00b7\u00b2\u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e4\u00b8\u00a4\u00e4\u00b8\u00aa\u00e9\u0083\u00bd\u00e4\u00b8\u00banull\u00e7\u009a\u0084\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00ef\u00bc\u0089",
                "+\t\t\treturn false;",
                "+\t\t}",
                " \t\tif (types1.length != types2.length) {",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java",
                "index b6532c1dc..00092ef62 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java",
                "@@ -316,3 +316,3 @@ public class ReflectUtil {",
                " \t\t\t\tif (StrUtil.equals(methodName, method.getName(), ignoreCase)) {",
                "-\t\t\t\t\tif (ArrayUtil.isEmpty(paramTypes) || ClassUtil.isAllAssignableFrom(method.getParameterTypes(), paramTypes)) {",
                "+\t\t\t\t\tif (ClassUtil.isAllAssignableFrom(method.getParameterTypes(), paramTypes)) {",
                " \t\t\t\t\t\treturn method;"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8bd8d0abe43f2d514296df49df590f9bd4b896f0",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1542514433,
            "hunks": 21,
            "message": "fix snowflake",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/Snowflake.java b/hutool-core/src/main/java/cn/hutool/core/lang/Snowflake.java",
                "index fcd75cddb..1c5024d37 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/lang/Snowflake.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/Snowflake.java",
                "@@ -3,2 +3,3 @@ package cn.hutool.core.lang;",
                " import cn.hutool.core.date.SystemClock;",
                "+import cn.hutool.core.util.StrUtil;",
                "@@ -27,2 +28,3 @@ public class Snowflake {",
                "+\t//Thu, 04 Nov 2010 01:42:54 GMT",
                " \tprivate final long twepoch = 1288834974657L;",
                "@@ -30,9 +32,15 @@ public class Snowflake {",
                " \tprivate final long datacenterIdBits = 5L;",
                "+\t////\u00e6\u009c\u0080\u00e5\u00a4\u00a7\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e6\u009c\u00ba\u00e5\u0099\u00a8\u00e8\u008a\u0082\u00e7\u0082\u00b9\u00e6\u0095\u00b00~31\u00ef\u00bc\u008c\u00e4\u00b8\u0080\u00e5\u0085\u00b132\u00e4\u00b8\u00aa",
                " \tprivate final long maxWorkerId = -1L ^ (-1L << workerIdBits);",
                "+\t//\u00e6\u009c\u0080\u00e5\u00a4\u00a7\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e4\u00b8\u00ad\u00e5\u00bf\u0083\u00e8\u008a\u0082\u00e7\u0082\u00b9\u00e6\u0095\u00b00~31\u00ef\u00bc\u008c\u00e4\u00b8\u0080\u00e5\u0085\u00b132\u00e4\u00b8\u00aa",
                " \tprivate final long maxDatacenterId = -1L ^ (-1L << datacenterIdBits);",
                "+\t//\u00e5\u00ba\u008f\u00e5\u0088\u0097\u00e5\u008f\u00b712\u00e4\u00bd\u008d",
                " \tprivate final long sequenceBits = 12L;",
                "+\t//\u00e6\u009c\u00ba\u00e5\u0099\u00a8\u00e8\u008a\u0082\u00e7\u0082\u00b9\u00e5\u00b7\u00a6\u00e7\u00a7\u00bb12\u00e4\u00bd\u008d",
                " \tprivate final long workerIdShift = sequenceBits;",
                "+\t//\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e4\u00b8\u00ad\u00e5\u00bf\u0083\u00e8\u008a\u0082\u00e7\u0082\u00b9\u00e5\u00b7\u00a6\u00e7\u00a7\u00bb17\u00e4\u00bd\u008d",
                " \tprivate final long datacenterIdShift = sequenceBits + workerIdBits;",
                "+\t//\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00e6\u0095\u00b0\u00e5\u00b7\u00a6\u00e7\u00a7\u00bb22\u00e4\u00bd\u008d",
                " \tprivate final long timestampLeftShift = sequenceBits + workerIdBits + datacenterIdBits;",
                "-\tprivate final long sequenceMask = -1L ^ (-1L << sequenceBits);",
                "+\tprivate final long sequenceMask = -1L ^ (-1L << sequenceBits);//4095",
                "@@ -43,5 +51,6 @@ public class Snowflake {",
                " \tprivate boolean useSystemClock;",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                " \t * @param workerId \u00e7\u00bb\u0088\u00e7\u00ab\u00afID",
                "@@ -55,2 +64,3 @@ public class Snowflake {",
                " \t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                " \t * @param workerId \u00e7\u00bb\u0088\u00e7\u00ab\u00afID",
                "@@ -61,6 +71,6 @@ public class Snowflake {",
                " \t\tif (workerId > maxWorkerId || workerId < 0) {",
                "-\t\t\tthrow new IllegalArgumentException(String.format(\"worker Id can't be greater than %d or less than 0\", maxWorkerId));",
                "+\t\t\tthrow new IllegalArgumentException(StrUtil.format(\"worker Id can't be greater than {} or less than 0\", maxWorkerId));",
                " \t\t}",
                " \t\tif (datacenterId > maxDatacenterId || datacenterId < 0) {",
                "-\t\t\tthrow new IllegalArgumentException(String.format(\"datacenter Id can't be greater than %d or less than 0\", maxDatacenterId));",
                "+\t\t\tthrow new IllegalArgumentException(StrUtil.format(\"datacenter Id can't be greater than {} or less than 0\", maxDatacenterId));",
                " \t\t}",
                "@@ -73,2 +83,3 @@ public class Snowflake {",
                " \t * \u00e4\u00b8\u008b\u00e4\u00b8\u0080\u00e4\u00b8\u00aaID",
                "+\t * ",
                " \t * @return ID",
                "@@ -76,5 +87,6 @@ public class Snowflake {",
                " \tpublic synchronized long nextId() {",
                "-\t\tlong timestamp = useSystemClock ? SystemClock.now() : System.currentTimeMillis();",
                "+\t\tlong timestamp = genTime();",
                " \t\tif (timestamp < lastTimestamp) {",
                "-\t\t\tthrow new RuntimeException(String.format(\"Clock moved backwards.  Refusing to generate id for %d milliseconds\", lastTimestamp - timestamp));",
                "+\t\t\t //\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u009c\u008d\u00e5\u008a\u00a1\u00e5\u0099\u00a8\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u009c\u0089\u00e9\u0097\u00ae\u00e9\u00a2\u0098(\u00e6\u0097\u00b6\u00e9\u0092\u009f\u00e5\u0090\u008e\u00e9\u0080\u0080) \u00e6\u008a\u00a5\u00e9\u0094\u0099\u00e3\u0080\u0082",
                "+\t\t\tthrow new IllegalStateException(StrUtil.format(\"Clock moved backwards. Refusing to generate id for {}ms\", lastTimestamp - timestamp));",
                " \t\t}",
                "@@ -94,6 +106,13 @@ public class Snowflake {",
                "+\t//------------------------------------------------------------------------------------------------------------------------------------ Private method start",
                "+\t/**",
                "+\t * \u00e5\u00be\u00aa\u00e7\u008e\u00af\u00e7\u00ad\u0089\u00e5\u00be\u0085\u00e4\u00b8\u008b\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0097\u00b6\u00e9\u0097\u00b4",
                "+\t * ",
                "+\t * @param lastTimestamp \u00e4\u00b8\u008a\u00e6\u00ac\u00a1\u00e8\u00ae\u00b0\u00e5\u00bd\u0095\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0097\u00b4",
                "+\t * @return \u00e4\u00b8\u008b\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0097\u00b6\u00e9\u0097\u00b4",
                "+\t */",
                " \tprivate long tilNextMillis(long lastTimestamp) {",
                "-\t\tlong timestamp = useSystemClock ? SystemClock.now() : System.currentTimeMillis();",
                "+\t\tlong timestamp = genTime();",
                " \t\twhile (timestamp <= lastTimestamp) {",
                "-\t\t\ttimestamp = useSystemClock ? SystemClock.now() : System.currentTimeMillis();",
                "+\t\t\ttimestamp = genTime();",
                " \t\t}",
                "@@ -101,2 +120,11 @@ public class Snowflake {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e7\u0094\u009f\u00e6\u0088\u0090\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3",
                "+\t * @return \u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3",
                "+\t */",
                "+\tprivate long genTime() {",
                "+\t\treturn this.useSystemClock ? SystemClock.now() : System.currentTimeMillis();",
                "+\t}",
                "+\t//------------------------------------------------------------------------------------------------------------------------------------ Private method end",
                " }"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/lang/Snowflake.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3b2bf5b231c9b8cc14093a2194a38329c83e740c",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1541989730,
            "hunks": 4,
            "message": "fix comment and method support T",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/comparator/ComparatorChain.java b/hutool-core/src/main/java/cn/hutool/core/comparator/ComparatorChain.java",
                "index 2a975125b..9dfaed0bd 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/comparator/ComparatorChain.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/comparator/ComparatorChain.java",
                "@@ -49,3 +49,3 @@ public class ComparatorChain<E> implements Chain<Comparator<E>, ComparatorChain<",
                " \t * @param comparator \u00e5\u009c\u00a8\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e5\u0099\u00a8\u00e9\u0093\u00be\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e5\u0099\u00a8",
                "-\t * @param reverse \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008f\u008d\u00e5\u00ba\u008f\u00ef\u00bc\u008ctrue\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e6\u00ad\u00a3\u00e5\u00ba\u008f\u00ef\u00bc\u008cfalse\u00e5\u008f\u008d\u00e5\u00ba\u008f",
                "+\t * @param reverse \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008f\u008d\u00e5\u00ba\u008f\u00ef\u00bc\u008ctrue\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e5\u008f\u008d\u00e5\u00ba\u008f\u00ef\u00bc\u008cfalse\u00e6\u00ad\u00a3\u00e5\u00ba\u008f",
                " \t */",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java b/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java",
                "index dfb5e8e17..a3e24e76c 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java",
                "@@ -516,2 +516,3 @@ public class Convert {",
                " \t * ",
                "+\t * @param <T> \u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                " \t * @param elementType \u00e9\u009b\u0086\u00e5\u0090\u0088\u00e4\u00b8\u00ad\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "@@ -519,6 +520,7 @@ public class Convert {",
                " \t * @return {@link List}",
                "-\t * @since 4.0.11",
                "+\t * @since 4.1.20",
                " \t */",
                "-\tpublic static List<?> toList(Class<?> elementType, Object value) {",
                "-\t\treturn (List<?>) toCollection(ArrayList.class, elementType, value);",
                "+\t@SuppressWarnings(\"unchecked\")",
                "+\tpublic static <T> List<T> toList(Class<T> elementType, Object value) {",
                "+\t\treturn (List<T>) toCollection(ArrayList.class, elementType, value);",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/comparator/ComparatorChain.java",
                "hutool-core/src/main/java/cn/hutool/core/convert/Convert.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7057567c211bba1f327efebf778a9f76eea45c5c",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1542246157,
            "hunks": 3,
            "message": "fix ObjectUtil.toString bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java",
                "index b65666c4b..656468406 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java",
                "@@ -12,4 +12,4 @@ import java.util.Map;",
                "-import cn.hutool.core.bean.BeanUtil;",
                " import cn.hutool.core.comparator.CompareUtil;",
                "+import cn.hutool.core.convert.Convert;",
                " import cn.hutool.core.exceptions.UtilException;",
                "@@ -436,3 +436,3 @@ public class ObjectUtil {",
                "-\t\treturn BeanUtil.beanToMap(obj).toString();",
                "+\t\treturn Convert.toStr(obj);",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "9cd76b210dcfb762585829ddeae2e800bed356c1",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1534603658,
            "hunks": 3,
            "message": "remove log module",
            "diff": [
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/aspects/TimeIntervalAspect.java b/hutool-aop/src/main/java/cn/hutool/aop/aspects/TimeIntervalAspect.java",
                "index 516b60f6f..b5c78d1cd 100644",
                "--- a/hutool-aop/src/main/java/cn/hutool/aop/aspects/TimeIntervalAspect.java",
                "+++ b/hutool-aop/src/main/java/cn/hutool/aop/aspects/TimeIntervalAspect.java",
                "@@ -5,4 +5,3 @@ import java.lang.reflect.Method;",
                " import cn.hutool.core.date.TimeInterval;",
                "-import cn.hutool.log.Log;",
                "-import cn.hutool.log.LogFactory;",
                "+import cn.hutool.core.lang.Console;",
                "@@ -14,3 +13,2 @@ import cn.hutool.log.LogFactory;",
                " public class TimeIntervalAspect extends SimpleAspect{",
                "-\tprivate static final Log log = LogFactory.get();",
                "@@ -26,3 +24,3 @@ public class TimeIntervalAspect extends SimpleAspect{",
                " \tpublic boolean after(Object target, Method method, Object[] args) {",
                "-\t\tlog.info(\"Method [{}.{}] execute spend [{}]ms\", target.getClass().getName(), method.getName(), interval.intervalMs());",
                "+\t\tConsole.log(\"Method [{}.{}] execute spend [{}]ms\", target.getClass().getName(), method.getName(), interval.intervalMs());",
                " \t\treturn true;"
            ],
            "changed_files": [
                "hutool-aop/src/main/java/cn/hutool/aop/aspects/TimeIntervalAspect.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "2661303f7c49a37ec5c7d86575b47be1955340a1",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1533890706,
            "hunks": 17,
            "message": "add getters and setters",
            "diff": [
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java b/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "index 015f002c6..deced92e2 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "@@ -57,3 +57,3 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \tprivate static final String CONTENT_TYPE_FILE_TEMPLATE = \"Content-Type: {}\\r\\n\\r\\n\";",
                "-\t",
                "+",
                " \t/** Cookie\u00e7\u00ae\u00a1\u00e7\u0090\u0086 */",
                "@@ -108,19 +108,3 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                "-\t// ---------------------------------------------------------------- Http Method start",
                "-\t/**",
                "-\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "-\t * ",
                "-\t * @param method HTTP\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "-\t * @return HttpRequest",
                "-\t */",
                "-\tpublic HttpRequest method(Method method) {",
                "-\t\tif(Method.PATCH == method) {",
                "-\t\t\tthis.method = Method.POST;",
                "-\t\t\tthis.header(\"X-HTTP-Method-Override\", \"PATCH\");",
                "-\t\t}else {",
                "-\t\t\tthis.method = method;",
                "-\t\t}",
                "-\t\treturn this;",
                "-\t}",
                "-",
                "+\t// ---------------------------------------------------------------- static Http Method start",
                " \t/**",
                "@@ -205,3 +189,59 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \t}",
                "-\t// ---------------------------------------------------------------- Http Method end",
                "+\t// ---------------------------------------------------------------- static Http Method end",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e8\u00af\u00b7\u00e6\u00b1\u0082URL",
                "+\t * @return URL\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @since 4.1.8",
                "+\t */",
                "+\tpublic String getUrl() {",
                "+\t\treturn url;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00aeURL",
                "+\t * @param url url\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @since 4.1.8",
                "+\t */",
                "+\tpublic void setUrl(String url) {",
                "+\t\tthis.url = url;",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096Http\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t * ",
                "+\t * @return {@link Method}",
                "+\t * @since 4.1.8",
                "+\t */",
                "+\tpublic Method getMethod() {",
                "+\t\treturn this.method;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t * ",
                "+\t * @param method HTTP\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t * @return HttpRequest",
                "+\t * @see #method(Method)",
                "+\t * @since 4.1.8",
                "+\t */",
                "+\tpublic HttpRequest setMethod(Method method) {",
                "+\t\treturn method(method);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t * ",
                "+\t * @param method HTTP\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t * @return HttpRequest",
                "+\t */",
                "+\tpublic HttpRequest method(Method method) {",
                "+\t\tif (Method.PATCH == method) {",
                "+\t\t\tthis.method = Method.POST;",
                "+\t\t\tthis.header(\"X-HTTP-Method-Override\", \"PATCH\");",
                "+\t\t} else {",
                "+\t\t\tthis.method = method;",
                "+\t\t}",
                "+\t\treturn this;",
                "+\t}",
                "@@ -329,6 +369,6 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \t\tif (value instanceof File) {",
                "-\t\t\t//\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u008a\u00e4\u00bc\u00a0",
                "+\t\t\t// \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u008a\u00e4\u00bc\u00a0",
                " \t\t\treturn this.form(name, (File) value);",
                " \t\t} else if (value instanceof Resource) {",
                "-\t\t\t//\u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e6\u00b5\u0081\u00e4\u00b8\u008a\u00e4\u00bc\u00a0",
                "+\t\t\t// \u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e6\u00b5\u0081\u00e4\u00b8\u008a\u00e4\u00bc\u00a0",
                " \t\t\treturn this.form(name, (Resource) value);",
                "@@ -343,4 +383,4 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \t\t} else if (ArrayUtil.isArray(value)) {",
                "-\t\t\tif(File.class == ArrayUtil.getComponentType(value)) {",
                "-\t\t\t\t//\u00e5\u00a4\u009a\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t\t\tif (File.class == ArrayUtil.getComponentType(value)) {",
                "+\t\t\t\t// \u00e5\u00a4\u009a\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                " \t\t\t\treturn this.form(name, (File[]) value);",
                "@@ -402,3 +442,3 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \tpublic HttpRequest form(String name, File... files) {",
                "-\t\tif(1 == files.length) {",
                "+\t\tif (1 == files.length) {",
                " \t\t\tfinal File file = files[0];",
                "@@ -408,3 +448,3 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -420,3 +460,3 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -436,3 +476,3 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -535,3 +575,3 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \t\t\t\tif (null != this.charset) {",
                "-\t\t\t\t\t//\u00e9\u0099\u0084\u00e5\u008a\u00a0\u00e7\u00bc\u0096\u00e7\u00a0\u0081\u00e4\u00bf\u00a1\u00e6\u0081\u00af",
                "+\t\t\t\t\t// \u00e9\u0099\u0084\u00e5\u008a\u00a0\u00e7\u00bc\u0096\u00e7\u00a0\u0081\u00e4\u00bf\u00a1\u00e6\u0081\u00af",
                " \t\t\t\t\tcontentType = StrUtil.format(\"{};charset={}\", contentType, this.charset.name());",
                "@@ -541,5 +581,5 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \t\t}",
                "-\t\t",
                "-\t\t//\u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00barest\u00e8\u00af\u00b7\u00e6\u00b1\u0082",
                "-\t\tif(StrUtil.containsAnyIgnoreCase(contentType, \"json\", \"xml\")) {",
                "+",
                "+\t\t// \u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00barest\u00e8\u00af\u00b7\u00e6\u00b1\u0082",
                "+\t\tif (StrUtil.containsAnyIgnoreCase(contentType, \"json\", \"xml\")) {",
                " \t\t\tthis.isRest = true;",
                "@@ -910,5 +950,6 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e6\u00b7\u00bb\u00e5\u008a\u00a0Multipart\u00e8\u00a1\u00a8\u00e5\u008d\u0095\u00e7\u009a\u0084\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e9\u00a1\u00b9",
                "+\t * ",
                " \t * @param formFieldName \u00e8\u00a1\u00a8\u00e5\u008d\u0095\u00e5\u0090\u008d",
                "@@ -919,9 +960,9 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \tprivate void appendPart(String formFieldName, Resource resource, OutputStream out) {",
                "-\t\tif(resource instanceof MultiResource) {",
                "-\t\t\t//\u00e5\u00a4\u009a\u00e8\u00b5\u0084\u00e6\u00ba\u0090",
                "-\t\t\tfor (Resource subResource : (MultiResource)resource) {",
                "+\t\tif (resource instanceof MultiResource) {",
                "+\t\t\t// \u00e5\u00a4\u009a\u00e8\u00b5\u0084\u00e6\u00ba\u0090",
                "+\t\t\tfor (Resource subResource : (MultiResource) resource) {",
                " \t\t\t\tappendPart(formFieldName, subResource, out);",
                " \t\t\t}",
                "-\t\t}else {",
                "-\t\t\t//\u00e6\u0099\u00ae\u00e9\u0080\u009a\u00e8\u00b5\u0084\u00e6\u00ba\u0090",
                "+\t\t} else {",
                "+\t\t\t// \u00e6\u0099\u00ae\u00e9\u0080\u009a\u00e8\u00b5\u0084\u00e6\u00ba\u0090",
                " \t\t\tfinal StringBuilder builder = StrUtil.builder().append(\"--\").append(BOUNDARY).append(StrUtil.CRLF);",
                "@@ -933,3 +974,3 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \t\t}",
                "-\t\t",
                "+",
                " \t}"
            ],
            "changed_files": [
                "hutool-http/src/main/java/cn/hutool/http/HttpRequest.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3485a889b5dacd5538bdbaa5a5ca8aabb8aac64b",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1532346667,
            "hunks": 19,
            "message": "fix Oracle page bug",
            "diff": [
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/StatementUtil.java b/hutool-db/src/main/java/cn/hutool/db/StatementUtil.java",
                "index 721802d79..c16c012fe 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/StatementUtil.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/StatementUtil.java",
                "@@ -18,2 +18,3 @@ import cn.hutool.core.util.ArrayUtil;",
                " import cn.hutool.core.util.StrUtil;",
                "+import cn.hutool.db.sql.SqlBuilder;",
                " import cn.hutool.db.sql.SqlUtil;",
                "@@ -96,2 +97,15 @@ public class StatementUtil {",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba{@link PreparedStatement}",
                "+\t * ",
                "+\t * @param conn \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e8\u00bf\u009e\u00e6\u008e\u00a5",
                "+\t * @param sqlBuilder{@link {@link SqlBuilder}} \u00e5\u008c\u0085\u00e6\u008b\u00acSQL\u00e8\u00af\u00ad\u00e5\u008f\u00a5\u00e5\u0092\u008c\u00e5\u008f\u0082\u00e6\u0095\u00b0",
                "+\t * @return {@link PreparedStatement}",
                "+\t * @throws SQLException SQL\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * @since 4.1.3",
                "+\t */",
                "+\tpublic static PreparedStatement prepareStatement(Connection conn, SqlBuilder sqlBuilder) throws SQLException {",
                "+\t\treturn prepareStatement(conn, sqlBuilder.build(), sqlBuilder.getParamValueArray());",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/dialect/impl/AnsiSqlDialect.java b/hutool-db/src/main/java/cn/hutool/db/dialect/impl/AnsiSqlDialect.java",
                "index 5c8c7eda7..a0c5cd74a 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/dialect/impl/AnsiSqlDialect.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/dialect/impl/AnsiSqlDialect.java",
                "@@ -47,3 +47,3 @@ public class AnsiSqlDialect implements Dialect {",
                "-\t\treturn StatementUtil.prepareStatement(conn, insert.build(), insert.getParamValues());",
                "+\t\treturn StatementUtil.prepareStatement(conn, insert);",
                " \t}",
                "@@ -77,3 +77,3 @@ public class AnsiSqlDialect implements Dialect {",
                "-\t\treturn StatementUtil.prepareStatement(conn, delete.build(), delete.getParamValues());",
                "+\t\treturn StatementUtil.prepareStatement(conn, delete);",
                " \t}",
                "@@ -92,3 +92,3 @@ public class AnsiSqlDialect implements Dialect {",
                "-\t\treturn StatementUtil.prepareStatement(conn, update.build(), update.getParamValues());",
                "+\t\treturn StatementUtil.prepareStatement(conn, update);",
                " \t}",
                "@@ -101,3 +101,3 @@ public class AnsiSqlDialect implements Dialect {",
                "-\t\treturn StatementUtil.prepareStatement(conn, find.build(), find.getParamValues());",
                "+\t\treturn StatementUtil.prepareStatement(conn, find);",
                " \t}",
                "@@ -122,3 +122,3 @@ public class AnsiSqlDialect implements Dialect {",
                "-\t\treturn StatementUtil.prepareStatement(conn, find.build(), find.getParamValues());",
                "+\t\treturn StatementUtil.prepareStatement(conn, find);",
                " \t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/dialect/impl/OracleDialect.java b/hutool-db/src/main/java/cn/hutool/db/dialect/impl/OracleDialect.java",
                "index f28b546d0..3448b0627 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/dialect/impl/OracleDialect.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/dialect/impl/OracleDialect.java",
                "@@ -20,5 +20,4 @@ public class OracleDialect extends AnsiSqlDialect{",
                " \t\tfinal int[] startEnd = page.getStartEnd();",
                "-\t\treturn SqlBuilder.create(wrapper)",
                "-\t\t\t.append(\"SELECT * FROM ( SELECT row_.*, rownum rownum_ from ( \")//",
                "-\t\t\t.append(find)//",
                "+\t\treturn find",
                "+\t\t\t.insertPreFragment(\"SELECT * FROM ( SELECT row_.*, rownum rownum_ from ( \")",
                " \t\t\t.append(\" ) row_ where rownum <= \").append(startEnd[1])//",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/sql/SqlBuilder.java b/hutool-db/src/main/java/cn/hutool/db/sql/SqlBuilder.java",
                "index fe5aa2d74..5a02f714d 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/sql/SqlBuilder.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/sql/SqlBuilder.java",
                "@@ -477,14 +477,26 @@ public class SqlBuilder {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u009c\u00a8SQL\u00e7\u009a\u0084\u00e5\u00bc\u0080\u00e5\u00a4\u00b4\u00e8\u00a1\u00a5\u00e5\u0085\u0085SQL\u00e7\u0089\u0087\u00e6\u00ae\u00b5",
                "+\t * @param sqlFragment SQL\u00e7\u0089\u0087\u00e6\u00ae\u00b5",
                "+\t * @return this",
                "+\t * @since 4.1.3",
                "+\t */",
                "+\tpublic SqlBuilder insertPreFragment(Object sqlFragment) {",
                "+\t\tif(null != sqlFragment) {",
                "+\t\t\tthis.sql.insert(0, sqlFragment);",
                "+\t\t}",
                "+\t\treturn this;",
                "+\t}",
                " \t/**",
                "-\t * \u00e8\u00bf\u00bd\u00e5\u008a\u00a0SQL\u00e5\u0085\u00b6\u00e5\u00ae\u0083\u00e9\u0083\u00a8\u00e5\u0088\u0086",
                "+\t * \u00e8\u00bf\u00bd\u00e5\u008a\u00a0SQL\u00e5\u0085\u00b6\u00e5\u00ae\u0083\u00e9\u0083\u00a8\u00e5\u0088\u0086\u00e7\u0089\u0087\u00e6\u00ae\u00b5",
                " \t * ",
                "-\t * @param sqlPart SQL\u00e5\u0085\u00b6\u00e5\u00ae\u0083\u00e9\u0083\u00a8\u00e5\u0088\u0086",
                "-\t * @return \u00e8\u0087\u00aa\u00e5\u00b7\u00b1",
                "+\t * @param sqlFragment SQL\u00e5\u0085\u00b6\u00e5\u00ae\u0083\u00e9\u0083\u00a8\u00e5\u0088\u0086\u00e7\u0089\u0087\u00e6\u00ae\u00b5",
                "+\t * @return this",
                " \t */",
                "-\tpublic SqlBuilder append(Object sqlPart) {",
                "-\t\tif (null != sqlPart) {",
                "-\t\t\tthis.sql.append(sqlPart);",
                "+\tpublic SqlBuilder append(Object sqlFragment) {",
                "+\t\tif (null != sqlFragment) {",
                "+\t\t\tthis.sql.append(sqlFragment);",
                " \t\t}",
                "-",
                " \t\treturn this;",
                "@@ -538,2 +550,11 @@ public class SqlBuilder {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e5\u00bb\u00ba\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e6\u0089\u0093\u00e5\u008d\u00b0SQL\u00e6\u0097\u00a5\u00e5\u00bf\u0097",
                "+\t * ",
                "+\t * @return \u00e6\u009e\u0084\u00e5\u00bb\u00ba\u00e5\u00a5\u00bd\u00e7\u009a\u0084SQL\u00e8\u00af\u00ad\u00e5\u008f\u00a5",
                "+\t */",
                "+\tpublic String build() {",
                "+\t\treturn build(true);",
                "+\t}",
                "@@ -542,7 +563,11 @@ public class SqlBuilder {",
                " \t * ",
                "+\t * @param printLog \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0089\u0093\u00e5\u008d\u00b0\u00e6\u0097\u00a5\u00e5\u00bf\u0097",
                " \t * @return \u00e6\u009e\u0084\u00e5\u00bb\u00ba\u00e5\u00a5\u00bd\u00e7\u009a\u0084SQL\u00e8\u00af\u00ad\u00e5\u008f\u00a5",
                "+\t * @since 4.1.3",
                " \t */",
                "-\tpublic String build() {",
                "+\tpublic String build(boolean printLog) {",
                " \t\tfinal String sqlStr = this.sql.toString().trim();",
                "-\t\tSqlLog.INSTASNCE.log(sqlStr, this.paramValues);",
                "+\t\tif(printLog) {",
                "+\t\t\tSqlLog.INSTASNCE.log(sqlStr, this.paramValues);",
                "+\t\t}",
                " \t\treturn sqlStr;",
                "@@ -552,3 +577,3 @@ public class SqlBuilder {",
                " \tpublic String toString() {",
                "-\t\treturn this.build();",
                "+\t\treturn this.build(false);",
                " \t}"
            ],
            "changed_files": [
                "hutool-db/src/main/java/cn/hutool/db/StatementUtil.java",
                "hutool-db/src/main/java/cn/hutool/db/dialect/impl/AnsiSqlDialect.java",
                "hutool-db/src/main/java/cn/hutool/db/dialect/impl/OracleDialect.java",
                "hutool-db/src/main/java/cn/hutool/db/sql/SqlBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ff9f1547de6c7df14ac582c8b84a10e1409dcf78",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1539662577,
            "hunks": 3,
            "message": "fix cron",
            "diff": [
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java b/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java",
                "index 9dca1829b..64c136002 100644",
                "--- a/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java",
                "@@ -122,7 +122,2 @@ public class ValueMatcherBuilder {",
                " \t\tif (value.length() <= 2) {",
                "-\t\t\tif(step < 1) {",
                "-\t\t\t\t//\u00e5\u009c\u00a8\u00e5\u0085\u00a8\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e6\u00a8\u00a1\u00e5\u00bc\u008f\u00e4\u00b8\u008b\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u00ad\u00a5\u00e8\u00bf\u009b\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00ef\u00bc\u008c\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e6\u00ad\u00a5\u00e8\u00bf\u009b\u00e4\u00b8\u00ba1",
                "-\t\t\t\tstep = 1;",
                "-\t\t\t}",
                "-\t\t\t",
                " \t\t\t//\u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e6\u00ad\u00a5\u00e8\u00bf\u009b\u00e7\u009a\u0084\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00e7\u00a1\u00ae\u00e5\u00ae\u009a\u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u008c\u00e7\u00b1\u00bb\u00e4\u00bc\u00bc\u00e4\u00ba\u008e 12/3\u00e5\u0088\u0099\u00e4\u00bb\u008e12\u00ef\u00bc\u0088\u00e7\u00a7\u0092\u00e3\u0080\u0081\u00e5\u0088\u0086\u00e7\u00ad\u0089\u00ef\u00bc\u0089\u00e5\u00bc\u0080\u00e5\u00a7\u008b",
                "@@ -135,2 +130,7 @@ public class ValueMatcherBuilder {",
                " \t\t\t\t}",
                "+\t\t\t}else {",
                "+\t\t\t\t//\u00e5\u009c\u00a8\u00e5\u0085\u00a8\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e6\u00a8\u00a1\u00e5\u00bc\u008f\u00e4\u00b8\u008b\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u00ad\u00a5\u00e8\u00bf\u009b\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00ef\u00bc\u008c\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e6\u00ad\u00a5\u00e8\u00bf\u009b\u00e4\u00b8\u00ba1",
                "+\t\t\t\tif(step < 1) {",
                "+\t\t\t\t\tstep = 1;",
                "+\t\t\t\t}",
                " \t\t\t}",
                "@@ -140,4 +140,10 @@ public class ValueMatcherBuilder {",
                " \t\t\t}",
                "-\t\t\tfor (int i = minValue; i <= maxValue; i+=step) {",
                "-\t\t\t\tresults.add(i);",
                "+\t\t\tif(step > 0) {",
                "+\t\t\t\t//\u00e6\u009c\u0089\u00e6\u00ad\u00a5\u00e8\u00bf\u009b",
                "+\t\t\t\tfor (int i = minValue; i <= maxValue; i+=step) {",
                "+\t\t\t\t\tresults.add(i);",
                "+\t\t\t\t}",
                "+\t\t\t} else {",
                "+\t\t\t\t//\u00e5\u009b\u00ba\u00e5\u00ae\u009a\u00e6\u0097\u00b6\u00e9\u0097\u00b4",
                "+\t\t\t\tresults.add(minValue);",
                " \t\t\t}"
            ],
            "changed_files": [
                "hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5fc58bbc598338a2d1a7159550293597f9fdca4f",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1540479594,
            "hunks": 1,
            "message": "fix comment bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java b/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "index 058ace3b8..4c15a8992 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "@@ -568,3 +568,3 @@ public class DateUtil {",
                " \t * @param date \u00e8\u00a2\u00ab\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e5\u008c\u0096\u00e7\u009a\u0084\u00e6\u0097\u00a5\u00e6\u009c\u009f",
                "-\t * @param \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e9\u0087\u0087\u00e7\u0094\u00a8\u00e5\u00a4\u00a7\u00e5\u0086\u0099\u00e5\u00bd\u00a2\u00e5\u00bc\u008f",
                "+\t * @param isUppercase \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e9\u0087\u0087\u00e7\u0094\u00a8\u00e5\u00a4\u00a7\u00e5\u0086\u0099\u00e5\u00bd\u00a2\u00e5\u00bc\u008f",
                " \t * @return \u00e4\u00b8\u00ad\u00e6\u0096\u0087\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ce52b0d5ae6a38cadd23063f9c2947fb2a06901e",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1534302513,
            "hunks": 9,
            "message": "fix http charset bug",
            "diff": [
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HttpResponse.java b/hutool-http/src/main/java/cn/hutool/http/HttpResponse.java",
                "index a72343357..dc0a83127 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HttpResponse.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HttpResponse.java",
                "@@ -45,2 +45,4 @@ public class HttpResponse extends HttpBase<HttpResponse> implements Closeable{",
                " \tprivate boolean ignoreBody;",
                "+\t/** \u00e4\u00bb\u008e\u00e5\u0093\u008d\u00e5\u00ba\u0094\u00e4\u00b8\u00ad\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e7\u009a\u0084\u00e7\u00bc\u0096\u00e7\u00a0\u0081 */",
                "+\tprivate Charset charsetFromResponse;",
                "@@ -50,3 +52,3 @@ public class HttpResponse extends HttpBase<HttpResponse> implements Closeable{",
                " \t * @param httpConnection {@link HttpConnection}",
                "-\t * @param charset \u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                "+\t * @param charset \u00e7\u00bc\u0096\u00e7\u00a0\u0081\u00ef\u00bc\u008c\u00e4\u00bb\u008e\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e7\u00bc\u0096\u00e7\u00a0\u0081\u00e4\u00b8\u00ad\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                " \t * @param isAsync \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bc\u0082\u00e6\u00ad\u00a5",
                "@@ -185,3 +187,3 @@ public class HttpResponse extends HttpBase<HttpResponse> implements Closeable{",
                " \t\ttry {",
                "-\t\t\treturn HttpUtil.getString(bodyBytes(), this.charset, null == this.charset);",
                "+\t\t\treturn HttpUtil.getString(bodyBytes(), this.charset, null == this.charsetFromResponse);",
                " \t\t} catch (IOException e) {",
                "@@ -322,2 +324,3 @@ public class HttpResponse extends HttpBase<HttpResponse> implements Closeable{",
                " \t\t\tfinal Charset charset = httpConnection.getCharset();",
                "+\t\t\tthis.charsetFromResponse = charset;",
                " \t\t\tif(null != charset) {",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HttpUtil.java b/hutool-http/src/main/java/cn/hutool/http/HttpUtil.java",
                "index 739f14329..bfdda616b 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HttpUtil.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HttpUtil.java",
                "@@ -43,4 +43,6 @@ public class HttpUtil {",
                "+\t/** \u00e6\u00ad\u00a3\u00e5\u0088\u0099\u00ef\u00bc\u009aContent-Type\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e7\u00bc\u0096\u00e7\u00a0\u0081\u00e4\u00bf\u00a1\u00e6\u0081\u00af */",
                "+\tpublic static final Pattern CHARSET_PATTERN = Pattern.compile(\"charset=(.*)\");",
                " \t/** \u00e6\u00ad\u00a3\u00e5\u0088\u0099\u00ef\u00bc\u009a\u00e5\u008c\u00b9\u00e9\u0085\u008dmeta\u00e6\u00a0\u0087\u00e7\u00ad\u00be\u00e7\u009a\u0084\u00e7\u00bc\u0096\u00e7\u00a0\u0081\u00e4\u00bf\u00a1\u00e6\u0081\u00af */",
                "-\tpublic static final Pattern CHARSET_PATTERN = Pattern.compile(\"<meta.*?charset=(.*?)\\\"\");",
                "+\tpublic static final Pattern META_CHARSET_PATTERN = Pattern.compile(\"<meta.*?charset=(.*?)\\\"\");",
                "@@ -754,5 +756,3 @@ public class HttpUtil {",
                " \t\t}",
                "-",
                "-\t\tString charset = ReUtil.get(CHARSET_PATTERN, conn.getContentType(), 1);",
                "-\t\treturn charset;",
                "+\t\treturn ReUtil.get(CHARSET_PATTERN, conn.getContentType(), 1);",
                " \t}",
                "@@ -824,3 +824,3 @@ public class HttpUtil {",
                " \t\tif (isGetCharsetFromContent) {",
                "-\t\t\tfinal String charsetInContentStr = ReUtil.get(CHARSET_PATTERN, content, 1);",
                "+\t\t\tfinal String charsetInContentStr = ReUtil.get(META_CHARSET_PATTERN, content, 1);",
                " \t\t\tif (StrUtil.isNotBlank(charsetInContentStr)) {",
                "@@ -830,3 +830,3 @@ public class HttpUtil {",
                " \t\t\t\t} catch (Exception e) {",
                "-\t\t\t\t\tif (StrUtil.containsIgnoreCase(charsetInContentStr, \"utf-8\")) {",
                "+\t\t\t\t\tif (StrUtil.containsIgnoreCase(charsetInContentStr, \"utf-8\") || StrUtil.containsIgnoreCase(charsetInContentStr, \"utf8\")) {",
                " \t\t\t\t\t\tcharsetInContent = CharsetUtil.CHARSET_UTF_8;"
            ],
            "changed_files": [
                "hutool-http/src/main/java/cn/hutool/http/HttpResponse.java",
                "hutool-http/src/main/java/cn/hutool/http/HttpUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1afa22f209897d5582bb575605296edb1e9643a2",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1534907835,
            "hunks": 4,
            "message": "add boolean alias",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java b/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java",
                "index 542ac3b82..cba347044 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java",
                "@@ -140,10 +140,10 @@ public class PrimitiveConverter extends AbstractConverter<Object> {",
                " \t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"y\":",
                "-\t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"ok\":",
                "-\t\t\t\t\treturn true;",
                " \t\t\t\tcase \"no\":",
                " \t\t\t\t\treturn false;",
                "+\t\t\t\tcase \"y\":",
                "+\t\t\t\t\treturn true;",
                " \t\t\t\tcase \"n\":",
                " \t\t\t\t\treturn false;",
                "+\t\t\t\tcase \"ok\":",
                "+\t\t\t\t\treturn true;",
                " \t\t\t\tcase \"1\":",
                "@@ -152,2 +152,18 @@ public class PrimitiveConverter extends AbstractConverter<Object> {",
                " \t\t\t\t\treturn false;",
                "+\t\t\t\tcase \"on\":",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\tcase \"off\":",
                "+\t\t\t\t\treturn false;",
                "+\t\t\t\tcase \"\u00e6\u0098\u00af\":",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\tcase \"\u00e5\u0090\u00a6\":",
                "+\t\t\t\t\treturn false;",
                "+\t\t\t\tcase \"\u00e5\u00af\u00b9\":",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\tcase \"\u00e9\u0094\u0099\":",
                "+\t\t\t\t\treturn false;",
                "+\t\t\t\tcase \"\u00e7\u009c\u009f\":",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\tcase \"\u00e5\u0081\u0087\":",
                "+\t\t\t\t\treturn false;",
                " \t\t\t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "da9f79312291335142d6f3f492753818446a5eb3",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1534901877,
            "hunks": 19,
            "message": "add checkIndex method",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/Assert.java b/hutool-core/src/main/java/cn/hutool/core/lang/Assert.java",
                "index 8e19c1118..6e3c6defa 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/lang/Assert.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/Assert.java",
                "@@ -49,3 +49,3 @@ public class Assert {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -67,3 +67,3 @@ public class Assert {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -114,3 +114,3 @@ public class Assert {",
                "-\t//----------------------------------------------------------------------------------------------------------- Check not null",
                "+\t// ----------------------------------------------------------------------------------------------------------- Check not null",
                " \t/**",
                "@@ -152,3 +152,3 @@ public class Assert {",
                "-\t//----------------------------------------------------------------------------------------------------------- Check empty",
                "+\t// ----------------------------------------------------------------------------------------------------------- Check empty",
                " \t/**",
                "@@ -457,3 +457,3 @@ public class Assert {",
                " \t/**",
                "-\t * Assert that {@code superType.isAssignableFrom(subType)} is {@code true}.",
                "+\t * \u00e6\u0096\u00ad\u00e8\u00a8\u0080 {@code superType.isAssignableFrom(subType)} \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba {@code true}.",
                " \t * ",
                "@@ -463,7 +463,7 @@ public class Assert {",
                " \t * ",
                "-\t * @param superType the super type to check",
                "-\t * @param subType the sub type to check",
                "-\t * @throws IllegalArgumentException if the classes are not assignable",
                "+\t * @param superType \u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e7\u009a\u0084\u00e7\u0088\u00b6\u00e7\u00b1\u00bb\u00e6\u0088\u0096\u00e6\u008e\u00a5\u00e5\u008f\u00a3",
                "+\t * @param subType \u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e7\u009a\u0084\u00e5\u00ad\u0090\u00e7\u00b1\u00bb",
                "+\t * @throws IllegalArgumentException \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00ad\u0090\u00e7\u00b1\u00bb\u00e9\u009d\u009e\u00e7\u00bb\u00a7\u00e6\u0089\u00bf\u00e7\u0088\u00b6\u00e7\u00b1\u00bb\u00ef\u00bc\u008c\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e6\u00ad\u00a4\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                " \t */",
                "-\tpublic static void isAssignable(Class<?> superType, Class<?> subType) throws IllegalArgumentException{",
                "+\tpublic static void isAssignable(Class<?> superType, Class<?> subType) throws IllegalArgumentException {",
                " \t\tisAssignable(superType, subType, \"{} is not assignable to {})\", subType, superType);",
                "@@ -472,3 +472,3 @@ public class Assert {",
                " \t/**",
                "-\t * Assert that {@code superType.isAssignableFrom(subType)} is {@code true}.",
                "+\t * \u00e6\u0096\u00ad\u00e8\u00a8\u0080 {@code superType.isAssignableFrom(subType)} \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba {@code true}.",
                " \t * ",
                "@@ -478,9 +478,9 @@ public class Assert {",
                " \t * ",
                "-\t * @param superType the super type to check against",
                "-\t * @param subType the sub type to check",
                "+\t * @param superType \u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e7\u009a\u0084\u00e7\u0088\u00b6\u00e7\u00b1\u00bb\u00e6\u0088\u0096\u00e6\u008e\u00a5\u00e5\u008f\u00a3",
                "+\t * @param subType \u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e7\u009a\u0084\u00e5\u00ad\u0090\u00e7\u00b1\u00bb",
                " \t * @param errorMsgTemplate \u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e6\u0097\u00b6\u00e7\u009a\u0084\u00e6\u00b6\u0088\u00e6\u0081\u00af\u00e6\u00a8\u00a1\u00e6\u009d\u00bf",
                " \t * @param params \u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "-\t * @throws IllegalArgumentException if the classes are not assignable",
                "+\t * @throws IllegalArgumentException \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00ad\u0090\u00e7\u00b1\u00bb\u00e9\u009d\u009e\u00e7\u00bb\u00a7\u00e6\u0089\u00bf\u00e7\u0088\u00b6\u00e7\u00b1\u00bb\u00ef\u00bc\u008c\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e6\u00ad\u00a4\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                " \t */",
                "-\tpublic static void isAssignable(Class<?> superType, Class<?> subType, String errorMsgTemplate, Object... params) throws IllegalArgumentException{",
                "+\tpublic static void isAssignable(Class<?> superType, Class<?> subType, String errorMsgTemplate, Object... params) throws IllegalArgumentException {",
                " \t\tnotNull(superType, \"Type to check against must not be null\");",
                "@@ -492,3 +492,3 @@ public class Assert {",
                " \t/**",
                "-\t * Assert a boolean expression, throwing {@code IllegalStateException} if the test result is {@code false}. Call isTrue if you wish to throw IllegalArgumentException on an assertion failure.",
                "+\t * \u00e6\u00a3\u0080\u00e6\u009f\u00a5boolean\u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e7\u00bb\u0093\u00e6\u009e\u009c\u00e4\u00b8\u00bafalse\u00e6\u0097\u00b6\u00e6\u008a\u009b\u00e5\u0087\u00ba {@code IllegalStateException}\u00e3\u0080\u0082",
                " \t * ",
                "@@ -498,8 +498,8 @@ public class Assert {",
                " \t * ",
                "-\t * @param expression a boolean expression",
                "+\t * @param expression boolean \u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f",
                " \t * @param errorMsgTemplate \u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e6\u0097\u00b6\u00e7\u009a\u0084\u00e6\u00b6\u0088\u00e6\u0081\u00af\u00e6\u00a8\u00a1\u00e6\u009d\u00bf",
                " \t * @param params \u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "-\t * @throws IllegalStateException if expression is {@code false}",
                "+\t * @throws IllegalStateException \u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00e4\u00b8\u00ba {@code false} \u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e6\u00ad\u00a4\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                " \t */",
                "-\tpublic static void state(boolean expression, String errorMsgTemplate, Object... params) throws IllegalStateException{",
                "+\tpublic static void state(boolean expression, String errorMsgTemplate, Object... params) throws IllegalStateException {",
                " \t\tif (false == expression) {",
                "@@ -510,5 +510,3 @@ public class Assert {",
                " \t/**",
                "-\t * Assert a boolean expression, throwing {@link IllegalStateException} if the test result is {@code false}.",
                "-\t * <p>",
                "-\t * Call {@link #isTrue(boolean)} if you wish to throw {@link IllegalArgumentException} on an assertion failure.",
                "+\t * \u00e6\u00a3\u0080\u00e6\u009f\u00a5boolean\u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e7\u00bb\u0093\u00e6\u009e\u009c\u00e4\u00b8\u00bafalse\u00e6\u0097\u00b6\u00e6\u008a\u009b\u00e5\u0087\u00ba {@code IllegalStateException}\u00e3\u0080\u0082",
                " \t * ",
                "@@ -518,8 +516,68 @@ public class Assert {",
                " \t * ",
                "-\t * @param expression a boolean expression",
                "-\t * @throws IllegalStateException if the supplied expression is {@code false}",
                "+\t * @param expression boolean \u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f",
                "+\t * @throws IllegalStateException \u00e8\u00a1\u00a8\u00e8\u00be\u00be\u00e5\u00bc\u008f\u00e4\u00b8\u00ba {@code false} \u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e6\u00ad\u00a4\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                " \t */",
                "-\tpublic static void state(boolean expression) throws IllegalStateException{",
                "+\tpublic static void state(boolean expression) throws IllegalStateException {",
                " \t\tstate(expression, \"[Assertion failed] - this state invariant must be true\");",
                " \t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e4\u00b8\u008b\u00e6\u00a0\u0087\u00ef\u00bc\u0088\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e3\u0080\u0081\u00e9\u009b\u0086\u00e5\u0090\u0088\u00e3\u0080\u0081\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00ef\u00bc\u0089\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e7\u00ac\u00a6\u00e5\u0090\u0088\u00e8\u00a6\u0081\u00e6\u00b1\u0082\u00ef\u00bc\u008c\u00e4\u00b8\u008b\u00e6\u00a0\u0087\u00e5\u00bf\u0085\u00e9\u00a1\u00bb\u00e6\u00bb\u00a1\u00e8\u00b6\u00b3\u00ef\u00bc\u009a",
                "+\t * ",
                "+\t * <pre>",
                "+\t * 0 <= index < size",
                "+\t * </pre>",
                "+\t * ",
                "+\t * @param index \u00e4\u00b8\u008b\u00e6\u00a0\u0087",
                "+\t * @param size \u00e9\u0095\u00bf\u00e5\u00ba\u00a6",
                "+\t * @return \u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e4\u00b8\u008b\u00e6\u00a0\u0087",
                "+\t * @throws IllegalArgumentException \u00e5\u00a6\u0082\u00e6\u009e\u009csize < 0 \u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e6\u00ad\u00a4\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * @throws IndexOutOfBoundsException \u00e5\u00a6\u0082\u00e6\u009e\u009cindex < 0\u00e6\u0088\u0096\u00e8\u0080\u0085 index >= size \u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e6\u00ad\u00a4\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * @since 4.1.9",
                "+\t */",
                "+\tpublic static int checkIndex(int index, int size) throws IllegalArgumentException, IndexOutOfBoundsException {",
                "+\t\treturn checkIndex(index, size, \"[Assertion failed]\");",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e4\u00b8\u008b\u00e6\u00a0\u0087\u00ef\u00bc\u0088\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e3\u0080\u0081\u00e9\u009b\u0086\u00e5\u0090\u0088\u00e3\u0080\u0081\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00ef\u00bc\u0089\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e7\u00ac\u00a6\u00e5\u0090\u0088\u00e8\u00a6\u0081\u00e6\u00b1\u0082\u00ef\u00bc\u008c\u00e4\u00b8\u008b\u00e6\u00a0\u0087\u00e5\u00bf\u0085\u00e9\u00a1\u00bb\u00e6\u00bb\u00a1\u00e8\u00b6\u00b3\u00ef\u00bc\u009a",
                "+\t * ",
                "+\t * <pre>",
                "+\t * 0 <= index < size",
                "+\t * </pre>",
                "+\t * ",
                "+\t * @param index \u00e4\u00b8\u008b\u00e6\u00a0\u0087",
                "+\t * @param size \u00e9\u0095\u00bf\u00e5\u00ba\u00a6",
                "+\t * @param errorMsgTemplate \u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e6\u0097\u00b6\u00e7\u009a\u0084\u00e6\u00b6\u0088\u00e6\u0081\u00af\u00e6\u00a8\u00a1\u00e6\u009d\u00bf",
                "+\t * @param params \u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * @return \u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e4\u00b8\u008b\u00e6\u00a0\u0087",
                "+\t * @throws IllegalArgumentException \u00e5\u00a6\u0082\u00e6\u009e\u009csize < 0 \u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e6\u00ad\u00a4\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * @throws IndexOutOfBoundsException \u00e5\u00a6\u0082\u00e6\u009e\u009cindex < 0\u00e6\u0088\u0096\u00e8\u0080\u0085 index >= size \u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e6\u00ad\u00a4\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * @since 4.1.9",
                "+\t */",
                "+\tpublic static int checkIndex(int index, int size, String errorMsgTemplate, Object... params) throws IllegalArgumentException, IndexOutOfBoundsException {",
                "+\t\tif (index < 0 || index >= size) {",
                "+\t\t\tthrow new IndexOutOfBoundsException(badIndexMsg(index, size, errorMsgTemplate, params));",
                "+\t\t}",
                "+\t\treturn index;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e9\u0094\u0099\u00e8\u00af\u00af\u00e7\u009a\u0084\u00e4\u00b8\u008b\u00e6\u00a0\u0087\u00e6\u0097\u00b6\u00e6\u0098\u00be\u00e7\u00a4\u00ba\u00e7\u009a\u0084\u00e6\u00b6\u0088\u00e6\u0081\u00af",
                "+\t * ",
                "+\t * @param index \u00e4\u00b8\u008b\u00e6\u00a0\u0087",
                "+\t * @param size \u00e9\u0095\u00bf\u00e5\u00ba\u00a6",
                "+\t * @param desc \u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e6\u0097\u00b6\u00e7\u009a\u0084\u00e6\u00b6\u0088\u00e6\u0081\u00af\u00e6\u00a8\u00a1\u00e6\u009d\u00bf",
                "+\t * @param params \u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * @return \u00e6\u00b6\u0088\u00e6\u0081\u00af",
                "+\t */",
                "+\tprivate static String badIndexMsg(int index, int size, String desc, Object... params) {",
                "+\t\tif (index < 0) {",
                "+\t\t\treturn StrUtil.format(\"{} ({}) must not be negative\", StrUtil.format(desc, params), index);",
                "+\t\t} else if (size < 0) {",
                "+\t\t\tthrow new IllegalArgumentException(\"negative size: \" + size);",
                "+\t\t} else { // index >= size",
                "+\t\t\treturn StrUtil.format(\"{} ({}) must be less than size ({})\", StrUtil.format(desc, params), index, size);",
                "+\t\t}",
                "+\t}",
                " }"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/lang/Assert.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "e294eb9031da7ea237e56f1957f425f4da1e216d",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1536160000,
            "hunks": 15,
            "message": "fix captcha and add test for csv",
            "diff": [
                "diff --git a/hutool-captcha/src/main/java/cn/hutool/captcha/AbstractCaptcha.java b/hutool-captcha/src/main/java/cn/hutool/captcha/AbstractCaptcha.java",
                "index bbb1f0b0b..6b13a1e6b 100644",
                "--- a/hutool-captcha/src/main/java/cn/hutool/captcha/AbstractCaptcha.java",
                "+++ b/hutool-captcha/src/main/java/cn/hutool/captcha/AbstractCaptcha.java",
                "@@ -72,3 +72,3 @@ public abstract class AbstractCaptcha implements ICaptcha {",
                " \t\t// \u00e5\u00ad\u0097\u00e4\u00bd\u0093\u00e9\u00ab\u0098\u00e5\u00ba\u00a6\u00e8\u00ae\u00be\u00e4\u00b8\u00ba\u00e9\u00aa\u008c\u00e8\u00af\u0081\u00e7\u00a0\u0081\u00e9\u00ab\u0098\u00e5\u00ba\u00a6-2\u00ef\u00bc\u008c\u00e7\u0095\u0099\u00e8\u00be\u00b9\u00e8\u00b7\u009d",
                "-\t\tthis.font = new Font(\"Courier\", Font.PLAIN, this.height - 2);",
                "+\t\tthis.font = new Font(\"Courier\", Font.PLAIN, (int)(this.height * 0.75));",
                " \t\tcreateCode();",
                "diff --git a/hutool-captcha/src/main/java/cn/hutool/captcha/CircleCaptcha.java b/hutool-captcha/src/main/java/cn/hutool/captcha/CircleCaptcha.java",
                "index 642137f58..c43304205 100644",
                "--- a/hutool-captcha/src/main/java/cn/hutool/captcha/CircleCaptcha.java",
                "+++ b/hutool-captcha/src/main/java/cn/hutool/captcha/CircleCaptcha.java",
                "@@ -4,4 +4,6 @@ import java.awt.AlphaComposite;",
                " import java.awt.Color;",
                "+import java.awt.FontMetrics;",
                " import java.awt.Graphics2D;",
                " import java.awt.Image;",
                "+import java.awt.RenderingHints;",
                " import java.awt.image.BufferedImage;",
                "@@ -59,18 +61,21 @@ public class CircleCaptcha extends AbstractCaptcha {",
                " \t\tfinal Graphics2D g = ImageUtil.createGraphics(image, Color.WHITE);",
                "-",
                "+\t\t",
                "+\t\t// \u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e7\u0094\u00bb\u00e5\u00b9\u00b2\u00e6\u0089\u00b0\u00e5\u009c\u0088\u00e5\u009c\u0088",
                "+\t\tdrawInterfere(g);",
                "+\t\t",
                " \t\t// \u00e7\u0094\u00bb\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t\t// \u00e6\u008a\u0097\u00e9\u0094\u00af\u00e9\u00bd\u00bf",
                "+\t\tg.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);",
                " \t\tg.setFont(font);",
                "+\t\tfinal FontMetrics metrics = g.getFontMetrics();",
                "+\t\tfinal int minY = metrics.getAscent() - metrics.getLeading() - metrics.getDescent();",
                " \t\tint len = code.length();",
                "-\t\tint w = width / len;",
                "-\t\tAlphaComposite ac3;",
                "+\t\tint charWidth = width / len;",
                " \t\tfor (int i = 0; i < len; i++) {",
                "-\t\t\tac3 = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.9f);// \u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e9\u0080\u008f\u00e6\u0098\u008e\u00e5\u00ba\u00a6",
                "-\t\t\tg.setComposite(ac3);",
                "+\t\t\t// \u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e9\u0080\u008f\u00e6\u0098\u008e\u00e5\u00ba\u00a6",
                "+\t\t\tg.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.9f));",
                " \t\t\tg.setColor(ImageUtil.randomColor());",
                "-\t\t\tg.drawString(String.valueOf(code.charAt(i)), i * w, RandomUtil.randomInt(height >> 1) + (height >> 1));",
                "+\t\t\tg.drawString(String.valueOf(code.charAt(i)), i * charWidth, RandomUtil.randomInt(minY, this.height));",
                " \t\t}",
                "-\t\t// \u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e7\u0094\u00bb\u00e5\u00b9\u00b2\u00e6\u0089\u00b0\u00e5\u009c\u0088\u00e5\u009c\u0088",
                "-\t\tdrawInterfere(g);",
                "-\t\t",
                " \t\treturn image;",
                "diff --git a/hutool-captcha/src/main/java/cn/hutool/captcha/LineCaptcha.java b/hutool-captcha/src/main/java/cn/hutool/captcha/LineCaptcha.java",
                "index 01690260a..0d1d24adf 100644",
                "--- a/hutool-captcha/src/main/java/cn/hutool/captcha/LineCaptcha.java",
                "+++ b/hutool-captcha/src/main/java/cn/hutool/captcha/LineCaptcha.java",
                "@@ -2,2 +2,3 @@ package cn.hutool.captcha;",
                "+import java.awt.FontMetrics;",
                " import java.awt.Graphics2D;",
                "@@ -49,4 +50,2 @@ public class LineCaptcha extends AbstractCaptcha {",
                " \t\tfinal Graphics2D g = ImageUtil.createGraphics(image, ImageUtil.randomColor(random));",
                "-\t\t// \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e5\u00ad\u0097\u00e4\u00bd\u0093",
                "-\t\tg.setFont(this.font);",
                "@@ -55,5 +54,9 @@ public class LineCaptcha extends AbstractCaptcha {",
                "+\t\t// \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e5\u00ad\u0097\u00e4\u00bd\u0093",
                "+\t\tg.setFont(this.font);",
                "+\t\tfinal FontMetrics metrics = g.getFontMetrics();",
                "+\t\tint minY = metrics.getAscent() - metrics.getLeading() - metrics.getDescent();",
                " \t\t// \u00e6\u0096\u0087\u00e5\u00ad\u0097",
                " \t\tfinal int len = this.generator.getLength();",
                "-\t\tint charWidth = width / (len + 2);",
                "+\t\tint charWidth = width / len;",
                " \t\tfor (int i = 0; i < len; i++) {",
                "@@ -61,3 +64,3 @@ public class LineCaptcha extends AbstractCaptcha {",
                " \t\t\tg.setColor(ImageUtil.randomColor(random));",
                "-\t\t\tg.drawString(String.valueOf(code.charAt(i)), i * charWidth + (charWidth >> 1), RandomUtil.randomInt(height >> 1) + (height >> 1));",
                "+\t\t\tg.drawString(String.valueOf(code.charAt(i)), i * charWidth, RandomUtil.randomInt(minY, this.height));",
                " \t\t}"
            ],
            "changed_files": [
                "hutool-captcha/src/main/java/cn/hutool/captcha/AbstractCaptcha.java",
                "hutool-captcha/src/main/java/cn/hutool/captcha/CircleCaptcha.java",
                "hutool-captcha/src/main/java/cn/hutool/captcha/LineCaptcha.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ad1e0c97aadd19bb7527efe7349f14323d0d3f3f",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1541993834,
            "hunks": 2,
            "message": "BeanDesc change to LinkedHashMap",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/bean/BeanDesc.java b/hutool-core/src/main/java/cn/hutool/core/bean/BeanDesc.java",
                "index e7a6542ca..a4ee2690b 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/bean/BeanDesc.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/bean/BeanDesc.java",
                "@@ -6,3 +6,3 @@ import java.lang.reflect.Type;",
                " import java.util.Collection;",
                "-import java.util.HashMap;",
                "+import java.util.LinkedHashMap;",
                " import java.util.Map;",
                "@@ -36,3 +36,3 @@ public class BeanDesc {",
                " \t/** \u00e5\u00b1\u009e\u00e6\u0080\u00a7Map */",
                "-\tprivate Map<String, PropDesc> propMap = new HashMap<>();",
                "+\tprivate Map<String, PropDesc> propMap = new LinkedHashMap<>();"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/bean/BeanDesc.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "e3e20c10caee6c5fda4aac3efb4cdd1fecca281a",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1535261137,
            "hunks": 6,
            "message": "fix convert bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/AbstractConverter.java b/hutool-core/src/main/java/cn/hutool/core/convert/AbstractConverter.java",
                "index 05bb5663f..c22870cf5 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/convert/AbstractConverter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/AbstractConverter.java",
                "@@ -2,2 +2,4 @@ package cn.hutool.core.convert;",
                "+import java.util.Map;",
                "+",
                " import cn.hutool.core.util.ArrayUtil;",
                "@@ -31,4 +33,4 @@ public abstract class AbstractConverter<T> implements Converter<T> {",
                " \t\tif (null == defaultValue || targetType.isInstance(defaultValue)) {",
                "-\t\t\tif (targetType.isInstance(value)) {",
                "-\t\t\t\t// \u00e5\u00b7\u00b2\u00e7\u00bb\u008f\u00e6\u0098\u00af\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e8\u00bd\u00ac\u00e6\u008d\u00a2",
                "+\t\t\tif (targetType.isInstance(value) && false == Map.class.isAssignableFrom(targetType)) {",
                "+\t\t\t\t// \u00e9\u0099\u00a4Map\u00e5\u00a4\u0096\u00ef\u00bc\u008c\u00e5\u00b7\u00b2\u00e7\u00bb\u008f\u00e6\u0098\u00af\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00ef\u00bc\u0088Map\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u00b6\u0089\u00e5\u008f\u008a\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e5\u008d\u0095\u00e7\u008b\u00ac\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00ef\u00bc\u0089",
                " \t\t\t\treturn (T) targetType.cast(value);",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/impl/MapConverter.java b/hutool-core/src/main/java/cn/hutool/core/convert/impl/MapConverter.java",
                "index 9d3e20453..e9152aaaa 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/convert/impl/MapConverter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/impl/MapConverter.java",
                "@@ -48,3 +48,3 @@ public class MapConverter extends AbstractConverter<Map<?, ?>> {",
                " \t}",
                "-",
                "+\t",
                " \t@Override",
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/JSONObject.java b/hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "index de9662730..77673742b 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "@@ -299,5 +299,2 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \tpublic <T> T toBean(Type type, boolean ignoreError) {",
                "-\t\tif(null == type) {",
                "-\t\t\treturn null;",
                "-\t\t}",
                " \t\tfinal Class<?> clazz = TypeUtil.getClass(type);",
                "@@ -305,5 +302,6 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \t\t\tthrow new IllegalArgumentException(StrUtil.format(\"Can not know Class of Type {} !\", type));",
                "-\t\t}",
                "-\t\tif(Map.class.equals(clazz) || Object.class.equals(clazz)) {",
                "+\t\t}else if(Object.class.equals(clazz)) {",
                " \t\t\treturn (T) this;",
                "+\t\t}else if(Map.class.equals(clazz)) {",
                "+\t\t\treturn Convert.convert(type, this);",
                " \t\t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/convert/AbstractConverter.java",
                "hutool-core/src/main/java/cn/hutool/core/convert/impl/MapConverter.java",
                "hutool-json/src/main/java/cn/hutool/json/JSONObject.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "706c04fce41b185757b45ef3375e7c4ad210fa96",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537799936,
            "hunks": 9,
            "message": "fix date bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java b/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "index d08220214..9f11c889e 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "@@ -425,28 +425,5 @@ public class DateUtil {",
                " \tpublic static LinkedHashSet<String> yearAndSeasons(Date startDate, Date endDate) {",
                "-\t\tfinal LinkedHashSet<String> seasons = new LinkedHashSet<String>();",
                "-\t\tif (startDate == null || endDate == null) {",
                "-\t\t\treturn seasons;",
                "-\t\t}",
                "-",
                "-\t\tfinal Calendar cal = Calendar.getInstance();",
                "-\t\tcal.setTime(startDate);",
                "-\t\twhile (true) {",
                "-\t\t\t// \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e8\u00b6\u0085\u00e5\u0087\u00ba\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u008c\u00e8\u00ae\u00a9\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e4\u00b8\u00ba\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u008c\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e5\u00ae\u008c\u00e5\u0090\u008e\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e5\u00be\u00aa\u00e7\u008e\u00af",
                "-\t\t\tif (startDate.after(endDate)) {",
                "-\t\t\t\tstartDate = endDate;",
                "-\t\t\t}",
                "-",
                "-\t\t\tseasons.add(yearAndSeason(cal));",
                "-",
                "-\t\t\tif (startDate.equals(endDate)) {",
                "-\t\t\t\tbreak;",
                "-\t\t\t}",
                "-",
                "-\t\t\tcal.add(Calendar.MONTH, 3);",
                "-\t\t\tstartDate = cal.getTime();",
                "-\t\t}",
                "-",
                "-\t\treturn seasons;",
                "+\t\treturn yearAndQuarter(startDate, endDate);",
                " \t}",
                "-",
                "+\t",
                " \t/**",
                "@@ -456,29 +433,31 @@ public class DateUtil {",
                " \t * @param endDate \u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00ef\u00bc\u0088\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00ef\u00bc\u0089",
                "-\t * @return Season\u00e5\u0088\u0097\u00e8\u00a1\u00a8 \u00ef\u00bc\u008c\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e7\u00b1\u00bb\u00e4\u00bc\u00bc\u00e4\u00ba\u008e 20132",
                "+\t * @return \u00e5\u00ad\u00a3\u00e5\u00ba\u00a6\u00e5\u0088\u0097\u00e8\u00a1\u00a8 \u00ef\u00bc\u008c\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e7\u00b1\u00bb\u00e4\u00bc\u00bc\u00e4\u00ba\u008e 20132",
                " \t */",
                " \tpublic static LinkedHashSet<String> yearAndQuarter(Date startDate, Date endDate) {",
                "-\t\tfinal LinkedHashSet<String> quarter = new LinkedHashSet<String>();",
                " \t\tif (startDate == null || endDate == null) {",
                "-\t\t\treturn quarter;",
                "+\t\t\treturn new LinkedHashSet<String>(0);",
                " \t\t}",
                "+\t\treturn yearAndQuarter(startDate.getTime(), endDate.getTime());",
                "+\t}",
                "-\t\tfinal Calendar cal = Calendar.getInstance();",
                "-\t\tcal.setTime(startDate);",
                "-\t\twhile (true) {",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00e5\u008c\u00ba\u00e9\u0097\u00b4\u00e5\u0086\u0085\u00e7\u009a\u0084\u00e5\u00b9\u00b4\u00e4\u00bb\u00bd\u00e5\u0092\u008c\u00e5\u00ad\u00a3\u00e8\u008a\u0082<br>",
                "+\t * ",
                "+\t * @param startDate \u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00ef\u00bc\u0088\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00ef\u00bc\u0089",
                "+\t * @param endDate \u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e6\u0097\u00a5\u00e6\u009c\u009f\u00ef\u00bc\u0088\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00ef\u00bc\u0089",
                "+\t * @return \u00e5\u00ad\u00a3\u00e5\u00ba\u00a6\u00e5\u0088\u0097\u00e8\u00a1\u00a8 \u00ef\u00bc\u008c\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e7\u00b1\u00bb\u00e4\u00bc\u00bc\u00e4\u00ba\u008e 20132",
                "+\t * @since 4.1.15",
                "+\t */",
                "+\tpublic static LinkedHashSet<String> yearAndQuarter(long startDate, long endDate) {",
                "+\t\tLinkedHashSet<String> quarters = new LinkedHashSet<>();",
                "+\t\tfinal Calendar cal = calendar(startDate);",
                "+\t\twhile (startDate <= endDate) {",
                " \t\t\t// \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e8\u00b6\u0085\u00e5\u0087\u00ba\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u008c\u00e8\u00ae\u00a9\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e4\u00b8\u00ba\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u008c\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e5\u00ae\u008c\u00e5\u0090\u008e\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e5\u00be\u00aa\u00e7\u008e\u00af",
                "-\t\t\tif (startDate.after(endDate)) {",
                "-\t\t\t\tstartDate = endDate;",
                "-\t\t\t}",
                "-",
                "-\t\t\tquarter.add(yearAndSeason(cal));",
                "-",
                "-\t\t\tif (startDate.equals(endDate)) {",
                "-\t\t\t\tbreak;",
                "-\t\t\t}",
                "+\t\t\tquarters.add(yearAndQuarter(cal));",
                " \t\t\tcal.add(Calendar.MONTH, 3);",
                "-\t\t\tstartDate = cal.getTime();",
                "+\t\t\tstartDate = cal.getTimeInMillis();",
                " \t\t}",
                "-\t\treturn quarter;",
                "+\t\treturn quarters;",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "949c378ddb46ef0d792991855d43327b2a370bc2",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537933214,
            "hunks": 36,
            "message": "add method and test",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/img/Img.java b/hutool-core/src/main/java/cn/hutool/core/img/Img.java",
                "index 0f4f46c53..ac8a70bee 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/img/Img.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/img/Img.java",
                "@@ -45,6 +45,10 @@ public class Img {",
                " \tprivate BufferedImage destImage;",
                "+\t/** \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u0086\u0099\u00e5\u0087\u00ba */",
                " \tprivate String destImageType = ImageUtil.IMAGE_TYPE_JPG;",
                "-\t",
                "+\t/** \u00e8\u00ae\u00a1\u00e7\u00ae\u0097x,y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e5\u0080\u0099\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00bb\u008e\u00e4\u00b8\u00ad\u00e5\u00bf\u0083\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e5\u008e\u009f\u00e5\u00a7\u008b\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e8\u00ae\u00a1\u00e7\u00ae\u0097 */",
                "+\tprivate boolean positionBaseCentre = true;",
                "+",
                " \t/**",
                " \t * \u00e4\u00bb\u008e\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e5\u00b9\u00b6\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e5\u00a4\u0084\u00e7\u0090\u0086",
                "+\t * ",
                " \t * @param imageFile \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "@@ -55,5 +59,6 @@ public class Img {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e4\u00bb\u008e\u00e6\u00b5\u0081\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e5\u00b9\u00b6\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e5\u00a4\u0084\u00e7\u0090\u0086",
                "+\t * ",
                " \t * @param in \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u00b5\u0081",
                "@@ -64,5 +69,6 @@ public class Img {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e4\u00bb\u008eImageInputStream\u00e5\u008f\u0096\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e5\u00b9\u00b6\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e5\u00a4\u0084\u00e7\u0090\u0086",
                "+\t * ",
                " \t * @param imageStream \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u00b5\u0081",
                "@@ -73,5 +79,6 @@ public class Img {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e4\u00bb\u008eURL\u00e5\u008f\u0096\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e5\u00b9\u00b6\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e5\u00a4\u0084\u00e7\u0090\u0086",
                "+\t * ",
                " \t * @param imageUrl \u00e5\u009b\u00be\u00e7\u0089\u0087URL",
                "@@ -82,5 +89,6 @@ public class Img {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e4\u00bb\u008eImage\u00e5\u008f\u0096\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e5\u00b9\u00b6\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e5\u00a4\u0084\u00e7\u0090\u0086",
                "+\t * ",
                " \t * @param image \u00e5\u009b\u00be\u00e7\u0089\u0087",
                "@@ -94,2 +102,3 @@ public class Img {",
                " \t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                " \t * @param srcImage \u00e6\u009d\u00a5\u00e6\u00ba\u0090\u00e5\u009b\u00be\u00e7\u0089\u0087",
                "@@ -99,5 +108,6 @@ public class Img {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u0086\u0099\u00e5\u0087\u00ba",
                "+\t * ",
                " \t * @param imgType \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u00a0\u00bc\u00e5\u00bc\u008f",
                "@@ -112,2 +122,13 @@ public class Img {",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00a1\u00e7\u00ae\u0097x,y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e5\u0080\u0099\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00bb\u008e\u00e4\u00b8\u00ad\u00e5\u00bf\u0083\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e5\u008e\u009f\u00e5\u00a7\u008b\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e8\u00ae\u00a1\u00e7\u00ae\u0097",
                "+\t * ",
                "+\t * @param positionBaseCentre \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00bb\u008e\u00e4\u00b8\u00ad\u00e5\u00bf\u0083\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e5\u008e\u009f\u00e5\u00a7\u008b\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e8\u00ae\u00a1\u00e7\u00ae\u0097",
                "+\t * @since 4.1.15",
                "+\t */",
                "+\tpublic Img setPositionBaseCentre(boolean positionBaseCentre) {",
                "+\t\tthis.positionBaseCentre = positionBaseCentre;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -157,3 +178,3 @@ public class Img {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -213,2 +234,5 @@ public class Img {",
                " \tpublic Img cut(Rectangle rectangle) {",
                "+\t\tfinal BufferedImage srcImage = getValidSrcImg();",
                "+\t\trectangle = fixRectangle(rectangle, srcImage.getWidth(), srcImage.getHeight());",
                "+\t\t",
                " \t\tfinal ImageFilter cropFilter = new CropImageFilter(rectangle.x, rectangle.y, rectangle.width, rectangle.height);",
                "@@ -218,3 +242,3 @@ public class Img {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -230,3 +254,3 @@ public class Img {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -244,4 +268,3 @@ public class Img {",
                " \t\tfinal int height = srcImage.getHeight();",
                "-\t\t",
                "-\t\t",
                "+",
                " \t\tfinal int diameter = radius > 0 ? radius * 2 : Math.min(width, height);",
                "@@ -250,2 +273,7 @@ public class Img {",
                " \t\tg.setClip(new Ellipse2D.Double(0, 0, diameter, diameter));",
                "+\t\t",
                "+\t\tif(this.positionBaseCentre) {",
                "+\t\t\tx = x - width/2 + diameter/2;",
                "+\t\t\ty = y - height/2 + diameter/2;",
                "+\t\t}",
                " \t\tg.drawImage(srcImage, x, y, null);",
                "@@ -309,3 +337,3 @@ public class Img {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -323,6 +351,6 @@ public class Img {",
                " \t\tfinal int pressImgHeight = pressImg.getHeight(null);",
                "-\t\t",
                "+",
                " \t\treturn pressImage(pressImg, new Rectangle(x, y, pressImgWidth, pressImgHeight), alpha);",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -337,5 +365,6 @@ public class Img {",
                " \t */",
                "-\tpublic Img pressImage(Image pressImg,Rectangle rectangle, float alpha) {",
                "+\tpublic Img pressImage(Image pressImg, Rectangle rectangle, float alpha) {",
                " \t\tfinal BufferedImage destImg = getValidSrcImg();",
                "-\t\t",
                "+",
                "+\t\trectangle = fixRectangle(rectangle, destImg.getWidth(), destImg.getHeight());",
                " \t\tdraw(destImg, pressImg, rectangle, alpha);",
                "@@ -344,3 +373,3 @@ public class Img {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -368,3 +397,3 @@ public class Img {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -395,3 +424,3 @@ public class Img {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -450,11 +479,2 @@ public class Img {",
                " \t\tg.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_ATOP, alpha));",
                "-\t\t",
                "-\t\t//\u00e4\u00bf\u00ae\u00e6\u00ad\u00a3\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e4\u00bd\u008d\u00e7\u00bd\u00ae\u00e4\u00bb\u008e\u00e8\u0083\u008c\u00e6\u0099\u00af\u00e7\u009a\u0084\u00e4\u00b8\u00ad\u00e5\u00bf\u0083\u00e8\u00ae\u00a1\u00e7\u00ae\u0097",
                "-\t\tfinal int width = backgroundImg.getWidth();",
                "-\t\tfinal int height = backgroundImg.getHeight();",
                "-\t\trectangle.setLocation(//",
                "-\t\t\t\trectangle.x + (int)(Math.abs(width - rectangle.width) / 2), //",
                "-\t\t\t\trectangle.y + (int)(Math.abs(height - rectangle.height) / 2)//",
                "-\t\t);",
                "-\t\t",
                " \t\tg.drawImage(img, rectangle.x, rectangle.y, rectangle.width, rectangle.height, null); // \u00e7\u00bb\u0098\u00e5\u0088\u00b6\u00e5\u0088\u0087\u00e5\u0089\u00b2\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u009b\u00be",
                "@@ -479,3 +499,3 @@ public class Img {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -488,2 +508,22 @@ public class Img {",
                " \t}",
                "+",
                "+\t/**",
                "+\t * \u00e4\u00bf\u00ae\u00e6\u00ad\u00a3\u00e7\u009f\u00a9\u00e5\u00bd\u00a2\u00e6\u00a1\u0086\u00e4\u00bd\u008d\u00e7\u00bd\u00ae\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c{@link Img#setPositionFromCentre(boolean)} \u00e8\u00ae\u00be\u00e4\u00b8\u00ba{@code true}\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e4\u00bf\u00ae\u00e6\u00ad\u00a3\u00e4\u00b8\u00ba\u00e5\u009f\u00ba\u00e4\u00ba\u008e\u00e5\u009b\u00be\u00e5\u00bd\u00a2\u00e4\u00b8\u00ad\u00e5\u00bf\u0083\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e5\u009f\u00ba\u00e4\u00ba\u008e\u00e5\u00b7\u00a6\u00e4\u00b8\u008a\u00e8\u00a7\u0092",
                "+\t * ",
                "+\t * @param rectangle \u00e7\u009f\u00a9\u00e5\u00bd\u00a2",
                "+\t * @param baseWidth \u00e5\u008f\u0082\u00e8\u0080\u0083\u00e5\u00ae\u00bd",
                "+\t * @param baseHeight \u00e5\u008f\u0082\u00e8\u0080\u0083\u00e9\u00ab\u0098",
                "+\t * @return \u00e4\u00bf\u00ae\u00e6\u00ad\u00a3\u00e5\u0090\u008e\u00e7\u009a\u0084{@link Rectangle}",
                "+\t * @since 4.1.15",
                "+\t */",
                "+\tprivate Rectangle fixRectangle(Rectangle rectangle, int baseWidth, int baseHeight) {",
                "+\t\tif (this.positionBaseCentre) {",
                "+\t\t\t// \u00e4\u00bf\u00ae\u00e6\u00ad\u00a3\u00e5\u009b\u00be\u00e7\u0089\u0087\u00e4\u00bd\u008d\u00e7\u00bd\u00ae\u00e4\u00bb\u008e\u00e8\u0083\u008c\u00e6\u0099\u00af\u00e7\u009a\u0084\u00e4\u00b8\u00ad\u00e5\u00bf\u0083\u00e8\u00ae\u00a1\u00e7\u00ae\u0097",
                "+\t\t\trectangle.setLocation(//",
                "+\t\t\t\t\trectangle.x + (int) (Math.abs(baseWidth - rectangle.width) / 2), //",
                "+\t\t\t\t\trectangle.y + (int) (Math.abs(baseHeight - rectangle.height) / 2)//",
                "+\t\t\t);",
                "+\t\t}",
                "+\t\treturn rectangle;",
                "+\t}",
                " \t// ---------------------------------------------------------------------------------------------------------------- Private method end",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java",
                "index 10d1a51db..c2133aaa4 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java",
                "@@ -320,3 +320,3 @@ public class ImageUtil {",
                " \tpublic static BufferedImage cut(Image srcImage, Rectangle rectangle) {",
                "-\t\treturn Img.from(srcImage).cut(rectangle).getImg();",
                "+\t\treturn Img.from(srcImage).setPositionBaseCentre(false).cut(rectangle).getImg();",
                " \t}",
                "@@ -561,3 +561,3 @@ public class ImageUtil {",
                " \t\ttry {",
                "-\t\t\tImageIO.write(isSrcPng ? copyImage(srcImage, BufferedImage.TYPE_INT_BGR) : toBufferedImage(srcImage), formatName, destImageStream);",
                "+\t\t\tImageIO.write(isSrcPng ? copyImage(srcImage, BufferedImage.TYPE_INT_RGB) : toBufferedImage(srcImage), formatName, destImageStream);",
                " \t\t} catch (IOException e) {",
                "@@ -1349,3 +1349,3 @@ public class ImageUtil {",
                " \t/**",
                "-\t * \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u009b\u00be\u00e5\u0083\u008f\u00e4\u00b8\u00baPNG\u00e6\u00a0\u00bc\u00e5\u00bc\u008f",
                "+\t * \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u009b\u00be\u00e5\u0083\u008f\u00e4\u00b8\u00ba\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e6\u00a0\u00bc\u00e5\u00bc\u008f",
                " \t * ",
                "@@ -1398,2 +1398,13 @@ public class ImageUtil {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e4\u00bb\u008e\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u00ad\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e5\u009b\u00be\u00e7\u0089\u0087\u00ef\u00bc\u008c\u00e8\u00af\u00b7\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e7\u00bb\u009d\u00e5\u00af\u00b9\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e7\u009b\u00b8\u00e5\u00af\u00b9\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e4\u00bc\u009a\u00e7\u009b\u00b8\u00e5\u00af\u00b9\u00e4\u00ba\u008eClassPath",
                "+\t * ",
                "+\t * @param imageFilePath \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t * @return \u00e5\u009b\u00be\u00e7\u0089\u0087",
                "+\t * @since 4.1.15",
                "+\t */",
                "+\tpublic static BufferedImage read(String imageFilePath) {",
                "+\t\treturn read(FileUtil.file(imageFilePath));",
                "+\t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/img/Img.java",
                "hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "e8c226f3304be23fdf32d8fbf9db0610c9931c82",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1542189518,
            "hunks": 3,
            "message": "fix test",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java b/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "index 24089b890..08eb34d3d 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "@@ -10,5 +10,3 @@ import java.lang.reflect.Field;",
                " import java.lang.reflect.Method;",
                "-import java.util.ArrayList;",
                " import java.util.Collection;",
                "-import java.util.Collections;",
                " import java.util.HashMap;",
                "@@ -400,19 +398,2 @@ public class BeanUtil {",
                " \t// --------------------------------------------------------------------------------------------- fillBean",
                "-\t/**",
                "-\t * ",
                "-\t * @param sourceList",
                "-\t * @param clz",
                "-\t * @return",
                "-\t */",
                "-\tpublic static <T> List<T> toBeanList(Collection<?> sourceList, Class<T> clz) {",
                "-\t\tif (CollUtil.isEmpty(sourceList)) {",
                "-\t\t\treturn Collections.emptyList();",
                "-\t\t}",
                "-\t\tfinal List<T> list = new ArrayList<>();",
                "-\t\tfor (Object source : sourceList) {",
                "-\t\t\tlist.add(toBean(source, clz));",
                "-\t\t}",
                "-\t\treturn list;",
                "-\t}",
                "-",
                " \t/**"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "71ceade12a42805e93ecc144e9f28304e42aab54",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1534908945,
            "hunks": 8,
            "message": "fix parseBool",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java b/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java",
                "index cba347044..75507b70a 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java",
                "@@ -136,12 +136,6 @@ public class PrimitiveConverter extends AbstractConverter<Object> {",
                " \t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"false\":",
                "-\t\t\t\t\treturn false;",
                " \t\t\t\tcase \"yes\":",
                " \t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"no\":",
                "-\t\t\t\t\treturn false;",
                " \t\t\t\tcase \"y\":",
                " \t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"n\":",
                "-\t\t\t\t\treturn false;",
                " \t\t\t\tcase \"ok\":",
                "@@ -150,20 +144,10 @@ public class PrimitiveConverter extends AbstractConverter<Object> {",
                " \t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"0\":",
                "-\t\t\t\t\treturn false;",
                " \t\t\t\tcase \"on\":",
                " \t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"off\":",
                "-\t\t\t\t\treturn false;",
                " \t\t\t\tcase \"\u00e6\u0098\u00af\":",
                " \t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"\u00e5\u0090\u00a6\":",
                "-\t\t\t\t\treturn false;",
                " \t\t\t\tcase \"\u00e5\u00af\u00b9\":",
                " \t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"\u00e9\u0094\u0099\":",
                "-\t\t\t\t\treturn false;",
                " \t\t\t\tcase \"\u00e7\u009c\u009f\":",
                " \t\t\t\t\treturn true;",
                "-\t\t\t\tcase \"\u00e5\u0081\u0087\":",
                "-\t\t\t\t\treturn false;",
                " \t\t\t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "2f387414429abd558475285df6a3e9400c6b5ae9",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1539784590,
            "hunks": 8,
            "message": "fix JSON bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
                "index 709b2a421..105f9b76b 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
                "@@ -2173,3 +2173,3 @@ public class NumberUtil {",
                " \t\t\treturn Long.parseLong(number.substring(2), 16);",
                "-\t\t} else if (number.startsWith(\"0\")) {",
                "+\t\t} else if (number.startsWith(\"0\") && number.length() > 1) {",
                " \t\t\t// 04\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba8\u00e8\u00bf\u009b\u00e5\u0088\u00b6\u00e6\u0095\u00b0",
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java b/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "index 2b817044a..93b514d84 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "@@ -6,2 +6,3 @@ import java.lang.reflect.Array;",
                " import java.lang.reflect.Type;",
                "+import java.util.ArrayList;",
                " import java.util.Calendar;",
                "@@ -10,2 +11,3 @@ import java.util.Date;",
                " import java.util.Iterator;",
                "+import java.util.List;",
                " import java.util.Map;",
                "@@ -257,3 +259,3 @@ final class InternalJSONUtil {",
                " \t */",
                "-\tprotected static Object toArray(final JSONArray jsonArray, Class<?> arrayClass, boolean ignoreError) {",
                "+\tprotected static Object toArray(JSONArray jsonArray, Class<?> arrayClass, boolean ignoreError) {",
                " \t\tfinal Class<?> componentType = arrayClass.isArray() ? arrayClass.getComponentType() : arrayClass;",
                "@@ -267,2 +269,21 @@ final class InternalJSONUtil {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u00b0\u0086JSONArray\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00ba\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e9\u0087\u008f\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * ",
                "+\t * @param <T> \u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @param jsonArray JSONArray",
                "+\t * @param elementType \u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @param ignoreError \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e9\u0094\u0099\u00e8\u00af\u00af",
                "+\t * @return \u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t */",
                "+\t@SuppressWarnings(\"unchecked\")",
                "+\tprotected static <T> List<T> toList(JSONArray jsonArray, Class<T> elementType, boolean ignoreError) {",
                "+\t\tfinal int size = jsonArray.size();",
                "+\t\tfinal List<T> result = new ArrayList<>(size);",
                "+\t\tfor (Object obj : jsonArray) {",
                "+\t\t\tresult.add((T) jsonConvert(elementType, obj, ignoreError));",
                "+\t\t}",
                "+\t\treturn result;",
                "+\t}",
                "@@ -329,3 +350,3 @@ final class InternalJSONUtil {",
                " \t\t\t}",
                "-\t\t\tthrow new ConvertException(\"Can not convert [{}] to type [{}]\", value, rowType.getName());",
                "+\t\t\tthrow new ConvertException(\"Can not convert {} to type {}\", value, rowType.getName());",
                " \t\t}",
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/JSONArray.java b/hutool-json/src/main/java/cn/hutool/json/JSONArray.java",
                "index 97dabef1b..54b941c69 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/JSONArray.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/JSONArray.java",
                "@@ -14,3 +14,2 @@ import cn.hutool.core.collection.ArrayIter;",
                " import cn.hutool.core.collection.CollUtil;",
                "-import cn.hutool.core.convert.impl.CollectionConverter;",
                "@@ -606,6 +605,4 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \t */",
                "-\t@SuppressWarnings(\"unchecked\")",
                "-\tpublic <T> ArrayList<T> toList(Class<T> elementType) {",
                "-\t\tfinal CollectionConverter converter = new CollectionConverter(ArrayList.class, elementType);",
                "-\t\treturn (ArrayList<T>) converter.convert(this, null);",
                "+\tpublic <T> List<T> toList(Class<T> elementType) {",
                "+\t\treturn InternalJSONUtil.toList(this, elementType, false);",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
                "hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "hutool-json/src/main/java/cn/hutool/json/JSONArray.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "932444ff430539e951dff561f659a73392d5c7b2",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537410340,
            "hunks": 0,
            "message": "!23 \u00e7\u00a7\u00bb\u00e9\u0099\u00a4\u00e4\u00b8\u008d\u00e5\u00bf\u0085\u00e8\u00a6\u0081\u00e7\u009a\u0084\u00e4\u00bb\u00a3\u00e7\u00a0\u0081 Merge pull request !23 from 00fly/v4-dev",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "f222557fd1b51ac00cb246236f507e03971ad37c",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1539186128,
            "hunks": 4,
            "message": "add param for mail",
            "diff": [
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java b/hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java",
                "index c9b973d8c..c0fdc57df 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java",
                "@@ -23,2 +23,4 @@ public class MailAccount implements Serializable {",
                " \tprivate static final String SMTP_AUTH = \"mail.smtp.auth\";",
                "+\tprivate static final String SMTP_CONNECTION_TIMEOUT = \"mail.smtp.connectiontimeout\";",
                "+\tprivate static final String SMTP_TIMEOUT = \"mail.smtp.timeout\";",
                "@@ -65,2 +67,7 @@ public class MailAccount implements Serializable {",
                " \tprivate int socketFactoryPort = 465;",
                "+\t",
                "+\t/** SMTP\u00e8\u00b6\u0085\u00e6\u0097\u00b6\u00e6\u0097\u00b6\u00e9\u0095\u00bf\u00ef\u00bc\u008c\u00e5\u008d\u0095\u00e4\u00bd\u008d\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00ef\u00bc\u008c\u00e7\u00bc\u00ba\u00e7\u009c\u0081\u00e5\u0080\u00bc\u00e4\u00b8\u008d\u00e8\u00b6\u0085\u00e6\u0097\u00b6 */",
                "+\tprivate long timeout;",
                "+\t/** Socket\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e8\u00b6\u0085\u00e6\u0097\u00b6\u00e5\u0080\u00bc\u00ef\u00bc\u008c\u00e5\u008d\u0095\u00e4\u00bd\u008d\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00ef\u00bc\u008c\u00e7\u00bc\u00ba\u00e7\u009c\u0081\u00e5\u0080\u00bc\u00e4\u00b8\u008d\u00e8\u00b6\u0085\u00e6\u0097\u00b6 */",
                "+\tprivate long connectionTimeout;",
                "@@ -376,2 +383,24 @@ public class MailAccount implements Serializable {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00aeSMTP\u00e8\u00b6\u0085\u00e6\u0097\u00b6\u00e6\u0097\u00b6\u00e9\u0095\u00bf\u00ef\u00bc\u008c\u00e5\u008d\u0095\u00e4\u00bd\u008d\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00ef\u00bc\u008c\u00e7\u00bc\u00ba\u00e7\u009c\u0081\u00e5\u0080\u00bc\u00e4\u00b8\u008d\u00e8\u00b6\u0085\u00e6\u0097\u00b6",
                "+\t * @param timeout SMTP\u00e8\u00b6\u0085\u00e6\u0097\u00b6\u00e6\u0097\u00b6\u00e9\u0095\u00bf\u00ef\u00bc\u008c\u00e5\u008d\u0095\u00e4\u00bd\u008d\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00ef\u00bc\u008c\u00e7\u00bc\u00ba\u00e7\u009c\u0081\u00e5\u0080\u00bc\u00e4\u00b8\u008d\u00e8\u00b6\u0085\u00e6\u0097\u00b6",
                "+\t * @return this",
                "+\t * @since 4.1.17",
                "+\t */",
                "+\tpublic MailAccount setTimeout(long timeout) {",
                "+\t\tthis.timeout = timeout;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00aeSocket\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e8\u00b6\u0085\u00e6\u0097\u00b6\u00e5\u0080\u00bc\u00ef\u00bc\u008c\u00e5\u008d\u0095\u00e4\u00bd\u008d\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00ef\u00bc\u008c\u00e7\u00bc\u00ba\u00e7\u009c\u0081\u00e5\u0080\u00bc\u00e4\u00b8\u008d\u00e8\u00b6\u0085\u00e6\u0097\u00b6",
                "+\t * @param connectionTimeout Socket\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e8\u00b6\u0085\u00e6\u0097\u00b6\u00e5\u0080\u00bc\u00ef\u00bc\u008c\u00e5\u008d\u0095\u00e4\u00bd\u008d\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00ef\u00bc\u008c\u00e7\u00bc\u00ba\u00e7\u009c\u0081\u00e5\u0080\u00bc\u00e4\u00b8\u008d\u00e8\u00b6\u0085\u00e6\u0097\u00b6",
                "+\t * @return this",
                "+\t * @since 4.1.17",
                "+\t */",
                "+\tpublic MailAccount setConnectionTimeout(long connectionTimeout) {",
                "+\t\tthis.connectionTimeout = connectionTimeout;",
                "+\t\treturn this;",
                "+\t}",
                "@@ -391,2 +420,8 @@ public class MailAccount implements Serializable {",
                " \t\tp.put(SMTP_AUTH, String.valueOf(this.auth));",
                "+\t\tif(this.timeout > 0) {",
                "+\t\t\tp.put(SMTP_TIMEOUT, String.valueOf(this.timeout));",
                "+\t\t}",
                "+\t\tif(this.connectionTimeout > 0) {",
                "+\t\t\tp.put(SMTP_CONNECTION_TIMEOUT, String.valueOf(this.connectionTimeout));",
                "+\t\t}"
            ],
            "changed_files": [
                "hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a68a5f64ccc8350c36e1204e78b928cc475f59e0",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1535089668,
            "hunks": 2,
            "message": "\u00e5\u00a2\u009e\u00e5\u008a\u00a0win7 8 8.1 10\u00e5\u0088\u00a4\u00e6\u0096\u00ad",
            "diff": [
                "diff --git a/hutool-system/src/main/java/cn/hutool/system/OsInfo.java b/hutool-system/src/main/java/cn/hutool/system/OsInfo.java",
                "index 63b14b5fe..2474c6ba2 100644",
                "--- a/hutool-system/src/main/java/cn/hutool/system/OsInfo.java",
                "+++ b/hutool-system/src/main/java/cn/hutool/system/OsInfo.java",
                "@@ -27,2 +27,7 @@ public class OsInfo{",
                "+\tprivate final boolean IS_OS_WINDOWS_7 = getOSMatches(\"Windows\", \"6.1\");",
                "+\tprivate final boolean IS_OS_WINDOWS_8 = getOSMatches(\"Windows\", \"6.2\");",
                "+\tprivate final boolean IS_OS_WINDOWS_8_1 = getOSMatches(\"Windows\", \"6.3\");",
                "+\tprivate final boolean IS_OS_WINDOWS_10 = getOSMatches(\"Windows\", \"10.0\");",
                "+",
                " \t// \u00e7\u0094\u00b1\u00e4\u00ba\u008e\u00e6\u0094\u00b9\u00e5\u008f\u0098file.encoding\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e5\u00b9\u00b6\u00e4\u00b8\u008d\u00e4\u00bc\u009a\u00e6\u0094\u00b9\u00e5\u008f\u0098\u00e7\u00b3\u00bb\u00e7\u00bb\u009f\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e7\u00bc\u0096\u00e7\u00a0\u0081\u00ef\u00bc\u008c\u00e4\u00b8\u00ba\u00e4\u00ba\u0086\u00e4\u00bf\u009d\u00e6\u008c\u0081\u00e4\u00b8\u0080\u00e8\u0087\u00b4\u00ef\u00bc\u008c\u00e9\u0080\u009a\u00e8\u00bf\u0087LocaleUtil\u00e5\u008f\u0096\u00e7\u00b3\u00bb\u00e7\u00bb\u009f\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e7\u00bc\u0096\u00e7\u00a0\u0081\u00e3\u0080\u0082",
                "@@ -285,2 +290,54 @@ public class OsInfo{",
                "+\t/**",
                "+\t * \u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e5\u00bd\u0093\u00e5\u0089\u008dOS\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e3\u0080\u0082",
                "+\t *",
                "+\t * <p>",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u008d\u00e8\u0083\u00bd\u00e5\u008f\u0096\u00e5\u00be\u0097\u00e7\u00b3\u00bb\u00e7\u00bb\u009f\u00e5\u00b1\u009e\u00e6\u0080\u00a7<code>os.name</code>\u00ef\u00bc\u0088\u00e5\u009b\u00a0\u00e4\u00b8\u00baJava\u00e5\u00ae\u0089\u00e5\u0085\u00a8\u00e9\u0099\u0090\u00e5\u0088\u00b6\u00ef\u00bc\u0089\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e6\u0080\u00bb\u00e6\u0098\u00af\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>false</code>",
                "+\t * </p>",
                "+\t *",
                "+\t * @return \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00bd\u0093\u00e5\u0089\u008dOS\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e4\u00b8\u00baWindows 7\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>true</code>",
                "+\t */",
                "+\tpublic final boolean isWindows7() {",
                "+\t\treturn IS_OS_WINDOWS_7;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e5\u00bd\u0093\u00e5\u0089\u008dOS\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e3\u0080\u0082",
                "+\t *",
                "+\t * <p>",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u008d\u00e8\u0083\u00bd\u00e5\u008f\u0096\u00e5\u00be\u0097\u00e7\u00b3\u00bb\u00e7\u00bb\u009f\u00e5\u00b1\u009e\u00e6\u0080\u00a7<code>os.name</code>\u00ef\u00bc\u0088\u00e5\u009b\u00a0\u00e4\u00b8\u00baJava\u00e5\u00ae\u0089\u00e5\u0085\u00a8\u00e9\u0099\u0090\u00e5\u0088\u00b6\u00ef\u00bc\u0089\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e6\u0080\u00bb\u00e6\u0098\u00af\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>false</code>",
                "+\t * </p>",
                "+\t *",
                "+\t * @return \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00bd\u0093\u00e5\u0089\u008dOS\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e4\u00b8\u00baWindows 8\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>true</code>",
                "+\t */",
                "+\tpublic final boolean isWindoows8() {",
                "+\t\treturn IS_OS_WINDOWS_8;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e5\u00bd\u0093\u00e5\u0089\u008dOS\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e3\u0080\u0082",
                "+\t *",
                "+\t * <p>",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u008d\u00e8\u0083\u00bd\u00e5\u008f\u0096\u00e5\u00be\u0097\u00e7\u00b3\u00bb\u00e7\u00bb\u009f\u00e5\u00b1\u009e\u00e6\u0080\u00a7<code>os.name</code>\u00ef\u00bc\u0088\u00e5\u009b\u00a0\u00e4\u00b8\u00baJava\u00e5\u00ae\u0089\u00e5\u0085\u00a8\u00e9\u0099\u0090\u00e5\u0088\u00b6\u00ef\u00bc\u0089\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e6\u0080\u00bb\u00e6\u0098\u00af\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>false</code>",
                "+\t * </p>",
                "+\t *",
                "+\t * @return \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00bd\u0093\u00e5\u0089\u008dOS\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e4\u00b8\u00baWindows 8.1\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>true</code>",
                "+\t */",
                "+\tpublic final boolean isWindows8_1() {",
                "+\t\treturn IS_OS_WINDOWS_8_1;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e5\u00bd\u0093\u00e5\u0089\u008dOS\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e3\u0080\u0082",
                "+\t *",
                "+\t * <p>",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u008d\u00e8\u0083\u00bd\u00e5\u008f\u0096\u00e5\u00be\u0097\u00e7\u00b3\u00bb\u00e7\u00bb\u009f\u00e5\u00b1\u009e\u00e6\u0080\u00a7<code>os.name</code>\u00ef\u00bc\u0088\u00e5\u009b\u00a0\u00e4\u00b8\u00baJava\u00e5\u00ae\u0089\u00e5\u0085\u00a8\u00e9\u0099\u0090\u00e5\u0088\u00b6\u00ef\u00bc\u0089\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e6\u0080\u00bb\u00e6\u0098\u00af\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>false</code>",
                "+\t * </p>",
                "+\t *",
                "+\t * @return \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00bd\u0093\u00e5\u0089\u008dOS\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e4\u00b8\u00baWindows 10\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>true</code>",
                "+\t */",
                "+\tpublic final boolean isWindows10() {",
                "+\t\treturn IS_OS_WINDOWS_10;",
                "+\t}",
                "+",
                " \t/**"
            ],
            "changed_files": [
                "hutool-system/src/main/java/cn/hutool/system/OsInfo.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "38621bc9496a57414b987944b915a0b2d25c44a4",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1532481358,
            "hunks": 5,
            "message": "fix bug and readme",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/text/UnicodeUtil.java b/hutool-core/src/main/java/cn/hutool/core/text/UnicodeUtil.java",
                "index 893236996..163999519 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/text/UnicodeUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/text/UnicodeUtil.java",
                "@@ -2,2 +2,3 @@ package cn.hutool.core.text;",
                "+import cn.hutool.core.lang.Console;",
                " import cn.hutool.core.util.CharUtil;",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java",
                "index b489c438d..053d75aa6 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java",
                "@@ -263,3 +263,2 @@ public class CharUtil {",
                " \t * \u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00baemoji\u00e8\u00a1\u00a8\u00e6\u0083\u0085\u00e7\u00ac\u00a6<br>",
                "-\t * \u00e5\u008f\u0082\u00e8\u0080\u0083\u00ef\u00bc\u009ahttp://blog.csdn.net/a445020593/article/details/56667654",
                " \t * ",
                "@@ -270,3 +269,3 @@ public class CharUtil {",
                " \tpublic static boolean isEmoji(char c) {",
                "-\t\treturn (c == 0x0) || //",
                "+\t\treturn false ==  ((c == 0x0) || //",
                " \t\t\t\t(c == 0x9) || //",
                "@@ -276,3 +275,3 @@ public class CharUtil {",
                " \t\t\t\t((c >= 0xE000) && (c <= 0xFFFD)) || //",
                "-\t\t\t\t((c >= 0x10000) && (c <= 0x10FFFF));",
                "+\t\t\t\t((c >= 0x10000) && (c <= 0x10FFFF)));",
                " \t}",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java b/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "index 07d8706ca..14b3a620b 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "@@ -603,4 +603,4 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \t */",
                "-\tpublic HttpRequest setFollowRedirects(Boolean isFollowRedirects) {",
                "-\t\treturn setMaxRedirectCount(2);",
                "+\tpublic HttpRequest setFollowRedirects(boolean isFollowRedirects) {",
                "+\t\treturn setMaxRedirectCount(isFollowRedirects ? 2 : 0);",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/text/UnicodeUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java",
                "hutool-http/src/main/java/cn/hutool/http/HttpRequest.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d0b090692081cdfca1e7ee052b114b8fd8bf91ea",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1535012672,
            "hunks": 3,
            "message": "fix null pointer exception",
            "diff": [
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/webservice/SoapRequest.java b/hutool-http/src/main/java/cn/hutool/http/webservice/SoapRequest.java",
                "index b0832b202..69dfae6ff 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/webservice/SoapRequest.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/webservice/SoapRequest.java",
                "@@ -6,2 +6,3 @@ import java.util.Map;",
                "+import cn.hutool.core.lang.Assert;",
                " import cn.hutool.core.util.CharsetUtil;",
                "@@ -126,6 +127,9 @@ public class SoapRequest {",
                " \t\t// \u00e4\u00bc\u00a0\u00e5\u0085\u00a5method\u00e5\u0092\u008cnamespace",
                "+\t\tAssert.notBlank(this.method, \"Method must be not blank !\");",
                " \t\tsb.append(\"    <\").append(this.method).append(\" xmlns=\\\"\").append(this.namespace).append(\"\\\">\\n\");",
                " \t\t// \u00e5\u008a\u00a8\u00e6\u0080\u0081\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e5\u0092\u008c\u00e5\u0080\u00bc",
                "-\t\tfor (Map.Entry<String, String> entry : this.params.entrySet()) {",
                "-\t\t\tsb.append(\"      <\").append(entry.getKey()).append(\">\").append(entry.getValue()).append(\"</\").append(entry.getKey()).append(\">\\n\");",
                "+\t\tif(null != this.params) {",
                "+\t\t\tfor (Map.Entry<String, String> entry : this.params.entrySet()) {",
                "+\t\t\t\tsb.append(\"      <\").append(entry.getKey()).append(\">\").append(entry.getValue()).append(\"</\").append(entry.getKey()).append(\">\\n\");",
                "+\t\t\t}",
                " \t\t}"
            ],
            "changed_files": [
                "hutool-http/src/main/java/cn/hutool/http/webservice/SoapRequest.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "f632188a3fefe6f5d68fb284d9776ce91994455c",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1539786136,
            "hunks": 6,
            "message": "fix Compare bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/comparator/CompareUtil.java b/hutool-core/src/main/java/cn/hutool/core/comparator/CompareUtil.java",
                "index e5f2c8e76..8b998fcba 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/comparator/CompareUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/comparator/CompareUtil.java",
                "@@ -23,3 +23,3 @@ public class CompareUtil {",
                " \t * @param c2 \u00e5\u00af\u00b9\u00e8\u00b1\u00a12\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e4\u00b8\u00ba{@code null}",
                "-\t * @param nullGreater \u00e5\u00bd\u0093\u00e8\u00a2\u00ab\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e4\u00b8\u00banull\u00e6\u0097\u00b6\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u008e\u0092\u00e5\u009c\u00a8\u00e5\u0089\u008d\u00e9\u009d\u00a2",
                "+\t * @param isNullGreater \u00e5\u00bd\u0093\u00e8\u00a2\u00ab\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e4\u00b8\u00banull\u00e6\u0097\u00b6\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u008e\u0092\u00e5\u009c\u00a8\u00e5\u0089\u008d\u00e9\u009d\u00a2",
                " \t * @return \u00e6\u00af\u0094\u00e8\u00be\u0083\u00e7\u00bb\u0093\u00e6\u009e\u009c\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009cc1 &lt; c2\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u0095\u00b0\u00e5\u00b0\u008f\u00e4\u00ba\u008e0\u00ef\u00bc\u008cc1==c2\u00e8\u00bf\u0094\u00e5\u009b\u009e0\u00ef\u00bc\u008cc1 &gt; c2 \u00e5\u00a4\u00a7\u00e4\u00ba\u008e0",
                "@@ -27,3 +27,3 @@ public class CompareUtil {",
                " \t */",
                "-\tpublic static <T extends Comparable<? super T>> int compare(T c1, T c2, boolean nullGreater) {",
                "+\tpublic static <T extends Comparable<? super T>> int compare(T c1, T c2, boolean isNullGreater) {",
                " \t\tif (c1 == c2) {",
                "@@ -31,5 +31,5 @@ public class CompareUtil {",
                " \t\t} else if (c1 == null) {",
                "-\t\t\treturn nullGreater ? 1 : -1;",
                "+\t\t\treturn isNullGreater ? 1 : -1;",
                " \t\t} else if (c2 == null) {",
                "-\t\t\treturn nullGreater ? -1 : 1;",
                "+\t\t\treturn isNullGreater ? -1 : 1;",
                " \t\t}",
                "@@ -53,2 +53,3 @@ public class CompareUtil {",
                " \t */",
                "+\t@SuppressWarnings({ \"unchecked\", \"rawtypes\" })",
                " \tpublic static <T> int compare(T o1, T o2, boolean isNullGreater) {",
                "@@ -64,3 +65,3 @@ public class CompareUtil {",
                " \t\t\t//\u00e5\u00a6\u0082\u00e6\u009e\u009cbean\u00e5\u008f\u00af\u00e6\u00af\u0094\u00e8\u00be\u0083\u00ef\u00bc\u008c\u00e7\u009b\u00b4\u00e6\u008e\u00a5\u00e6\u00af\u0094\u00e8\u00be\u0083bean",
                "-\t\t\treturn compare((Comparable<?>)o1, (Comparable<?>)o2, isNullGreater);",
                "+\t\t\treturn ((Comparable)o1).compareTo(o2);",
                " \t\t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/comparator/CompareUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "902b0fb5d600fed0da24d1359b4a041667f6ffff",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1534854524,
            "hunks": 12,
            "message": "update cron",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/thread/NamedThreadFactory.java b/hutool-core/src/main/java/cn/hutool/core/thread/NamedThreadFactory.java",
                "index 6caa88e74..ccc12a495 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/thread/NamedThreadFactory.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/thread/NamedThreadFactory.java",
                "@@ -73,3 +73,3 @@ public class NamedThreadFactory implements ThreadFactory {",
                " \tpublic Thread newThread(Runnable r) {",
                "-\t\tfinal Thread t = new Thread(this.group, r, StrUtil.format(\"{}-{}\", prefix, threadNumber.getAndIncrement()));",
                "+\t\tfinal Thread t = new Thread(this.group, r, StrUtil.format(\"{}{}\", prefix, threadNumber.getAndIncrement()));",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java b/hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java",
                "index e45671fec..3c9cb1d9c 100644",
                "--- a/hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java",
                "@@ -6,4 +6,7 @@ import java.util.TimeZone;",
                " import java.util.UUID;",
                "+import java.util.concurrent.ExecutorService;",
                " import cn.hutool.core.collection.CollectionUtil;",
                "+import cn.hutool.core.thread.ExecutorBuilder;",
                "+import cn.hutool.core.thread.ThreadFactoryBuilder;",
                " import cn.hutool.core.util.CharUtil;",
                "@@ -70,2 +73,4 @@ public class Scheduler {",
                " \tprotected TaskListenerManager listenerManager = new TaskListenerManager();",
                "+\t/** \u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e6\u00b1\u00a0 */",
                "+\tprotected ExecutorService threadExecutor;",
                "@@ -327,3 +332,3 @@ public class Scheduler {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -350,2 +355,5 @@ public class Scheduler {",
                "+\t\t\tthis.threadExecutor = ExecutorBuilder.create().setThreadFactory(//",
                "+\t\t\t\t\tThreadFactoryBuilder.create().setNamePrefix(\"hutool-cron-\").setDaemon(this.daemon).build()//",
                "+\t\t\t).build();",
                " \t\t\tthis.taskLauncherManager = new TaskLauncherManager(this);",
                "@@ -377,2 +385,6 @@ public class Scheduler {",
                " \t\t\tthis.timer = null;",
                "+\t\t\t",
                "+\t\t\t//\u00e5\u0081\u009c\u00e6\u00ad\u00a2\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e6\u00b1\u00a0",
                "+\t\t\tthis.threadExecutor.shutdown();",
                "+\t\t\tthis.threadExecutor = null;",
                "@@ -384,4 +396,2 @@ public class Scheduler {",
                "-\t// -------------------------------------------------------------------- notify start",
                "-\t// -------------------------------------------------------------------- notify end",
                " }",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/TaskExecutor.java b/hutool-cron/src/main/java/cn/hutool/cron/TaskExecutor.java",
                "index 7958a0fbf..61c6bb2f2 100644",
                "--- a/hutool-cron/src/main/java/cn/hutool/cron/TaskExecutor.java",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/TaskExecutor.java",
                "@@ -10,3 +10,3 @@ import cn.hutool.cron.task.Task;",
                "  */",
                "-public class TaskExecutor extends Thread{",
                "+public class TaskExecutor implements Runnable{",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/TaskExecutorManager.java b/hutool-cron/src/main/java/cn/hutool/cron/TaskExecutorManager.java",
                "index 4b90d51a5..93e2e655a 100644",
                "--- a/hutool-cron/src/main/java/cn/hutool/cron/TaskExecutorManager.java",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/TaskExecutorManager.java",
                "@@ -37,3 +37,4 @@ public class TaskExecutorManager {",
                " \t\t// executor.setDaemon(this.scheduler.daemon);",
                "-\t\texecutor.start();",
                "+//\t\texecutor.start();",
                "+\t\tthis.scheduler.threadExecutor.execute(executor);",
                " \t\treturn executor;",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/TaskLauncher.java b/hutool-cron/src/main/java/cn/hutool/cron/TaskLauncher.java",
                "index 38a545c1f..63c079e42 100644",
                "--- a/hutool-cron/src/main/java/cn/hutool/cron/TaskLauncher.java",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/TaskLauncher.java",
                "@@ -10,3 +10,3 @@ package cn.hutool.cron;",
                "  */",
                "-public class TaskLauncher extends Thread{",
                "+public class TaskLauncher implements Runnable{",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/TaskLauncherManager.java b/hutool-cron/src/main/java/cn/hutool/cron/TaskLauncherManager.java",
                "index 575cf7f6b..5510f6acc 100644",
                "--- a/hutool-cron/src/main/java/cn/hutool/cron/TaskLauncherManager.java",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/TaskLauncherManager.java",
                "@@ -33,3 +33,4 @@ public class TaskLauncherManager {",
                " \t\t//launcher.setDaemon(this.scheduler.daemon);",
                "-\t\tlauncher.start();",
                "+//\t\tlauncher.start();",
                "+\t\tthis.scheduler.threadExecutor.execute(launcher);",
                " \t\treturn launcher;"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/thread/NamedThreadFactory.java",
                "hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java",
                "hutool-cron/src/main/java/cn/hutool/cron/TaskExecutor.java",
                "hutool-cron/src/main/java/cn/hutool/cron/TaskExecutorManager.java",
                "hutool-cron/src/main/java/cn/hutool/cron/TaskLauncher.java",
                "hutool-cron/src/main/java/cn/hutool/cron/TaskLauncherManager.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7ef3d3381686a0bae3be51bcd309262da6e66b6a",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1542238179,
            "hunks": 72,
            "message": "add support for HSQLDB",
            "diff": [
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/dialect/DialectFactory.java b/hutool-db/src/main/java/cn/hutool/db/dialect/DialectFactory.java",
                "index b9fe9f6c9..986435e65 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/dialect/DialectFactory.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/dialect/DialectFactory.java",
                "@@ -51,2 +51,4 @@ public class DialectFactory {",
                " \tpublic final static String DRIVER_DERBY_EMBEDDED = \"org.apache.derby.jdbc.EmbeddedDriver\";",
                "+\t/** JDBC \u00e9\u00a9\u00b1\u00e5\u008a\u00a8 HSQLDB */",
                "+\tpublic final static String DRIVER_HSQLDB = \"org.hsqldb.jdbc.JDBCDriver\";",
                "@@ -132,2 +134,5 @@ public class DialectFactory {",
                " \t\t\tdriver = DRIVER_DERBY_EMBEDDED;",
                "+\t\t} else if (nameContainsProductInfo.contains(\"hsqldb\")) {",
                "+\t\t\t// HSQLDB",
                "+\t\t\tdriver = DRIVER_HSQLDB;",
                " \t\t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/DSFactory.java b/hutool-db/src/main/java/cn/hutool/db/ds/DSFactory.java",
                "index f41c72271..6f5a46df4 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/DSFactory.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/DSFactory.java",
                "@@ -38,3 +38,3 @@ public abstract class DSFactory {",
                " \t/** \u00e5\u0088\u00ab\u00e5\u0090\u008d\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e5\u0090\u008d\u00ef\u00bc\u009a\u00e5\u00af\u0086\u00e7\u00a0\u0081 */",
                "-\tpublic static final String[] KEY_ALIAS_PASSWORD = { \"password\", \"pass\" };",
                "+\tpublic static final String[] KEY_ALIAS_PASSWORD = { \"pass\", \"password\" };",
                " \t/** \u00e5\u0088\u00ab\u00e5\u0090\u008d\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e5\u0090\u008d\u00ef\u00bc\u009a\u00e9\u00a9\u00b1\u00e5\u008a\u00a8\u00e5\u0090\u008d */",
                "@@ -70,3 +70,3 @@ public abstract class DSFactory {",
                "-\t\t//\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008eSQL\u00e6\u0089\u0093\u00e5\u008d\u00b0",
                "+\t\t// \u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008eSQL\u00e6\u0089\u0093\u00e5\u008d\u00b0",
                " \t\tDbUtil.setShowSqlGlobal(setting);",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/c3p0/C3p0DSFactory.java b/hutool-db/src/main/java/cn/hutool/db/ds/c3p0/C3p0DSFactory.java",
                "index 5dd1b42f5..80a2a97f1 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/c3p0/C3p0DSFactory.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/c3p0/C3p0DSFactory.java",
                "@@ -2,2 +2,3 @@ package cn.hutool.db.ds.c3p0;",
                "+import java.beans.PropertyVetoException;",
                " import java.util.Collection;",
                "@@ -101,14 +102,11 @@ public class C3p0DSFactory extends DSFactory {",
                " \t\tds.setJdbcUrl(url);",
                "-\t\tds.setUser(config.getAndRemoveStr(KEY_ALIAS_USER));",
                "-\t\tds.setPassword(config.getAndRemoveStr(KEY_ALIAS_PASSWORD));",
                "+\t\t// \u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e8\u00af\u0086\u00e5\u0088\u00abDriver",
                " \t\tfinal String driver = config.getAndRemoveStr(KEY_ALIAS_DRIVER);",
                " \t\ttry {",
                "-\t\t\tif (StrUtil.isNotBlank(driver)) {",
                "-\t\t\t\tds.setDriverClass(driver);",
                "-\t\t\t} else {",
                "-\t\t\t\tds.setDriverClass(DriverUtil.identifyDriver(url));",
                "-\t\t\t}",
                "-\t\t} catch (Exception e) {",
                "+\t\t\tds.setDriverClass(StrUtil.isNotBlank(driver) ? driver : DriverUtil.identifyDriver(url));",
                "+\t\t} catch (PropertyVetoException e) {",
                " \t\t\tthrow new DbRuntimeException(e);",
                " \t\t}",
                "+\t\tds.setUser(config.getAndRemoveStr(KEY_ALIAS_USER));",
                "+\t\tds.setPassword(config.getAndRemoveStr(KEY_ALIAS_PASSWORD));",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/dbcp/DbcpDSFactory.java b/hutool-db/src/main/java/cn/hutool/db/ds/dbcp/DbcpDSFactory.java",
                "index 031162bd0..d44972b6f 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/dbcp/DbcpDSFactory.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/dbcp/DbcpDSFactory.java",
                "@@ -97,3 +97,3 @@ public class DbcpDSFactory extends DSFactory {",
                " \t\t// \u00e5\u009f\u00ba\u00e6\u009c\u00ac\u00e4\u00bf\u00a1\u00e6\u0081\u00af",
                "-\t\tString url = config.getAndRemoveStr(KEY_ALIAS_URL);",
                "+\t\tfinal String url = config.getAndRemoveStr(KEY_ALIAS_URL);",
                " \t\tif (StrUtil.isBlank(url)) {",
                "@@ -102,10 +102,7 @@ public class DbcpDSFactory extends DSFactory {",
                " \t\tds.setUrl(url);",
                "+\t\t//\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e8\u00af\u0086\u00e5\u0088\u00abDriver",
                "+\t\tfinal String driver = config.getAndRemoveStr(KEY_ALIAS_DRIVER);",
                "+\t\tds.setDriverClassName(StrUtil.isNotBlank(driver) ? driver : DriverUtil.identifyDriver(url));",
                " \t\tds.setUsername(config.getAndRemoveStr(KEY_ALIAS_USER));",
                " \t\tds.setPassword(config.getAndRemoveStr(KEY_ALIAS_PASSWORD));",
                "-\t\tfinal String driver = config.getAndRemoveStr(KEY_ALIAS_DRIVER);",
                "-\t\tif (StrUtil.isNotBlank(driver)) {",
                "-\t\t\tds.setDriverClassName(driver);",
                "-\t\t} else {",
                "-\t\t\tds.setDriverClassName(DriverUtil.identifyDriver(ds.getUrl()));",
                "-\t\t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/druid/DruidDSFactory.java b/hutool-db/src/main/java/cn/hutool/db/ds/druid/DruidDSFactory.java",
                "index e5757bebb..dacab75ed 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/druid/DruidDSFactory.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/druid/DruidDSFactory.java",
                "@@ -16,2 +16,3 @@ import cn.hutool.core.util.StrUtil;",
                " import cn.hutool.db.DbRuntimeException;",
                "+import cn.hutool.db.dialect.DriverUtil;",
                " import cn.hutool.db.ds.DSFactory;",
                "@@ -103,12 +104,10 @@ public class DruidDSFactory extends DSFactory {",
                " \t\tds.setUrl(url);",
                "+\t\t// \u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e8\u00af\u0086\u00e5\u0088\u00abDriver",
                "+\t\tfinal String driver = config.getAndRemoveStr(KEY_ALIAS_DRIVER);",
                "+\t\tds.setDriverClassName(StrUtil.isNotBlank(driver) ? driver : DriverUtil.identifyDriver(url));",
                " \t\tds.setUsername(config.getAndRemoveStr(KEY_ALIAS_USER));",
                " \t\tds.setPassword(config.getAndRemoveStr(KEY_ALIAS_PASSWORD));",
                "-\t\tfinal String driver = config.getAndRemoveStr(KEY_ALIAS_DRIVER);",
                "-\t\t// \u00e5\u009c\u00a8\u00e6\u009c\u00aa\u00e6\u008f\u0090\u00e4\u00be\u009bJDBC\u00e9\u00a9\u00b1\u00e5\u008a\u00a8\u00e7\u009a\u0084\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00e4\u00b8\u008b\u00ef\u00bc\u008cDruid\u00e4\u00bc\u009a\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e8\u00af\u0086\u00e5\u0088\u00ab\u00e9\u00a9\u00b1\u00e5\u008a\u00a8",
                "-\t\tif (StrUtil.isNotBlank(driver)) {",
                "-\t\t\tds.setDriverClassName(driver);",
                "-\t\t}",
                " \t\t// \u00e8\u00a7\u0084\u00e8\u008c\u0083\u00e5\u008c\u0096\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e5\u0090\u008d",
                "-\t\tProperties config2 = new Properties();",
                "+\t\tProperties druidProps = new Properties();",
                " \t\tString keyStr;",
                "@@ -116,3 +115,3 @@ public class DruidDSFactory extends DSFactory {",
                " \t\t\tkeyStr = StrUtil.addPrefixIfNot(entry.getKey(), \"druid.\");",
                "-\t\t\tconfig2.put(keyStr, entry.getValue());",
                "+\t\t\tdruidProps.put(keyStr, entry.getValue());",
                " \t\t}",
                "@@ -120,3 +119,3 @@ public class DruidDSFactory extends DSFactory {",
                " \t\t// \u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e6\u00b1\u00a0\u00e4\u00bf\u00a1\u00e6\u0081\u00af",
                "-\t\tds.configFromPropety(config2);",
                "+\t\tds.configFromPropety(druidProps);",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/hikari/HikariDSFactory.java b/hutool-db/src/main/java/cn/hutool/db/ds/hikari/HikariDSFactory.java",
                "index 5676b370f..10b905e90 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/hikari/HikariDSFactory.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/hikari/HikariDSFactory.java",
                "@@ -4,3 +4,2 @@ import java.util.Collection;",
                " import java.util.Map;",
                "-import java.util.Properties;",
                " import java.util.concurrent.ConcurrentHashMap;",
                "@@ -16,4 +15,6 @@ import cn.hutool.core.util.StrUtil;",
                " import cn.hutool.db.DbRuntimeException;",
                "+import cn.hutool.db.dialect.DriverUtil;",
                " import cn.hutool.db.ds.DSFactory;",
                " import cn.hutool.setting.Setting;",
                "+import cn.hutool.setting.dialect.Props;",
                "@@ -94,3 +95,3 @@ public class HikariDSFactory extends DSFactory {",
                "-\t\tfinal Properties config = setting.getProperties(group);",
                "+\t\tfinal Props config = setting.getProps(group);",
                " \t\tif (CollectionUtil.isEmpty(config)) {",
                "@@ -100,15 +101,13 @@ public class HikariDSFactory extends DSFactory {",
                " \t\t// \u00e8\u00a7\u0084\u00e8\u008c\u0083\u00e5\u008c\u0096\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e5\u0090\u008d",
                "-\t\tif (false == config.containsKey(\"jdbcUrl\") && config.containsKey(\"url\")) {",
                "-\t\t\tconfig.put(\"jdbcUrl\", config.remove(\"url\"));",
                "+\t\tfinal String url = config.getAndRemoveStr(KEY_ALIAS_URL);",
                "+\t\tif (StrUtil.isBlank(url)) {",
                "+\t\t\tthrow new DbRuntimeException(\"No JDBC URL for group: [{}]\", group);",
                " \t\t}",
                "-\t\tif (false == config.containsKey(\"username\") && config.containsKey(\"user\")) {",
                "-\t\t\tconfig.put(\"username\", config.remove(\"user\"));",
                "-\t\t}",
                "-\t\tif (false == config.containsKey(\"password\") && config.containsKey(\"pass\")) {",
                "-\t\t\tconfig.put(\"password\", config.remove(\"pass\"));",
                "-\t\t}",
                "-\t\tif (false == config.containsKey(\"driverClassName\") && config.containsKey(\"driver\")) {",
                "-\t\t\tconfig.put(\"driverClassName\", config.remove(\"driver\"));",
                "-\t\t}",
                "-",
                "+\t\tconfig.put(\"jdbcUrl\", url);",
                "+\t\t//\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e8\u00af\u0086\u00e5\u0088\u00abDriver",
                "+\t\tfinal String driver = config.getAndRemoveStr(KEY_ALIAS_DRIVER);",
                "+\t\tconfig.put(\"driverClassName\", StrUtil.isNotBlank(driver) ? driver : DriverUtil.identifyDriver(url));",
                "+\t\tconfig.put(\"username\", config.getAndRemoveStr(KEY_ALIAS_USER));",
                "+\t\tconfig.put(\"password\", config.getAndRemoveStr(KEY_ALIAS_PASSWORD));",
                "+\t\t",
                " \t\tfinal HikariDataSource ds = new HikariDataSource(new HikariConfig(config));",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/pooled/DbSetting.java b/hutool-db/src/main/java/cn/hutool/db/ds/pooled/DbSetting.java",
                "index 22283c702..09b6485b0 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/pooled/DbSetting.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/pooled/DbSetting.java",
                "@@ -61,10 +61,7 @@ public class DbSetting {",
                " \t\tdbConfig.setUrl(url);",
                "+\t\t// \u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e8\u00af\u0086\u00e5\u0088\u00abDriver",
                "+\t\tfinal String driver = config.getAndRemoveStr(DSFactory.KEY_ALIAS_DRIVER);",
                "+\t\tdbConfig.setDriver(StrUtil.isNotBlank(driver) ? driver : DriverUtil.identifyDriver(url));",
                " \t\tdbConfig.setUser(config.getAndRemoveStr(DSFactory.KEY_ALIAS_USER));",
                " \t\tdbConfig.setPass(config.getAndRemoveStr(DSFactory.KEY_ALIAS_PASSWORD));",
                "-\t\tfinal String driver = config.getAndRemoveStr(DSFactory.KEY_ALIAS_DRIVER);",
                "-\t\tif (StrUtil.isNotBlank(driver)) {",
                "-\t\t\tdbConfig.setDriver(driver);",
                "-\t\t} else {",
                "-\t\t\tdbConfig.setDriver(DriverUtil.identifyDriver(url));",
                "-\t\t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/pooled/PooledDataSource.java b/hutool-db/src/main/java/cn/hutool/db/ds/pooled/PooledDataSource.java",
                "index bb099188a..ee0d04e08 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/pooled/PooledDataSource.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/pooled/PooledDataSource.java",
                "@@ -17,2 +17,3 @@ import cn.hutool.db.ds.simple.AbstractDataSource;",
                "  * \u00e6\u00b1\u00a0\u00e5\u008c\u0096\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090",
                "+ * ",
                "  * @author Looly",
                "@@ -20,9 +21,9 @@ import cn.hutool.db.ds.simple.AbstractDataSource;",
                "  */",
                "-public class PooledDataSource extends AbstractDataSource{",
                "-\t",
                "+public class PooledDataSource extends AbstractDataSource {",
                "+",
                " \tprivate Queue<PooledConnection> freePool;",
                "-\tprivate int activeCount;\t\t\t//\u00e6\u00b4\u00bb\u00e8\u00b7\u0083\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e6\u0095\u00b0",
                "-\t",
                "+\tprivate int activeCount; // \u00e6\u00b4\u00bb\u00e8\u00b7\u0083\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e6\u0095\u00b0",
                "+",
                " \tprivate DbConfig config;",
                "-\t",
                "+",
                " \t/**",
                "@@ -36,5 +37,6 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090\u00ef\u00bc\u008c\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e7\u00a9\u00ba\u00e5\u0088\u0086\u00e7\u00bb\u0084",
                "+\t * ",
                " \t * @return {@link PooledDataSource}",
                "@@ -44,4 +46,4 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t}",
                "-\t",
                "-\t//-------------------------------------------------------------------- Constructor start",
                "+",
                "+\t// -------------------------------------------------------------------- Constructor start",
                " \t/**",
                "@@ -52,5 +54,6 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e6\u009e\u0084\u00e9\u0080\u00a0\u00ef\u00bc\u008c\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e7\u009a\u0084\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                " \t * @param group \u00e5\u0088\u0086\u00e7\u00bb\u0084",
                "@@ -60,5 +63,6 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                " \t * @param setting \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "@@ -69,5 +73,6 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                " \t * @param config \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e9\u0085\u008d\u00e7\u00bd\u00ae",
                "@@ -79,3 +84,3 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t\ttry {",
                "-\t\t\twhile(initialSize-- > 0){",
                "+\t\t\twhile (initialSize-- > 0) {",
                " \t\t\t\tfreePool.offer(newConnection());",
                "@@ -86,3 +91,3 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t}",
                "-\t//-------------------------------------------------------------------- Constructor start",
                "+\t// -------------------------------------------------------------------- Constructor start",
                "@@ -95,3 +100,3 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t}",
                "-\t",
                "+",
                " \t@Override",
                "@@ -100,5 +105,6 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e9\u0087\u008a\u00e6\u0094\u00be\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00ef\u00bc\u008c\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e4\u00bc\u009a\u00e8\u00a2\u00ab\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e7\u00bb\u0099\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e6\u00b1\u00a0",
                "+\t * ",
                " \t * @param conn \u00e8\u00bf\u009e\u00e6\u008e\u00a5",
                "@@ -106,3 +112,3 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t */",
                "-\tprotected synchronized boolean free(PooledConnection conn){",
                "+\tprotected synchronized boolean free(PooledConnection conn) {",
                " \t\tactiveCount--;",
                "@@ -110,5 +116,6 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0096\u00b0\u00e8\u00bf\u009e\u00e6\u008e\u00a5",
                "+\t * ",
                " \t * @return \u00e6\u0096\u00b0\u00e8\u00bf\u009e\u00e6\u008e\u00a5",
                "@@ -116,6 +123,6 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t */",
                "-\tpublic PooledConnection newConnection() throws SQLException{",
                "+\tpublic PooledConnection newConnection() throws SQLException {",
                " \t\treturn new PooledConnection(this);",
                " \t}",
                "-\t",
                "+",
                " \tpublic DbConfig getConfig() {",
                "@@ -123,5 +130,6 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * ",
                " \t * @param wait \u00e5\u00bd\u0093\u00e6\u00b1\u00a0\u00e4\u00b8\u00ad\u00e6\u0097\u00a0\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e7\u00ad\u0089\u00e5\u00be\u0085\u00e7\u009a\u0084\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00e6\u0095\u00b0",
                "@@ -130,3 +138,3 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t */",
                "-\tpublic PooledConnection getConnection(long wait) throws SQLException{",
                "+\tpublic PooledConnection getConnection(long wait) throws SQLException {",
                " \t\ttry {",
                "@@ -138,6 +146,6 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t}",
                "-\t",
                "+",
                " \t@Override",
                "-\tsynchronized public void close() throws IOException{",
                "-\t\tif(CollectionUtil.isNotEmpty(this.freePool)){",
                "+\tsynchronized public void close() throws IOException {",
                "+\t\tif (CollectionUtil.isNotEmpty(this.freePool)) {",
                " \t\t\tfor (PooledConnection pooledConnection : freePool) {",
                "@@ -149,3 +157,3 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t}",
                "-\t",
                "+",
                " \t@Override",
                "@@ -154,5 +162,6 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e7\u009b\u00b4\u00e6\u008e\u00a5\u00e4\u00bb\u008e\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e6\u00b1\u00a0\u00e4\u00b8\u00ad\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u00b1\u00a0\u00e4\u00b8\u00ad\u00e6\u0097\u00a0\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e7\u009b\u00b4\u00e6\u008e\u00a5\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * ",
                " \t * @return PooledConnection",
                "@@ -160,15 +169,15 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t */",
                "-\tprivate PooledConnection getConnectionDirect() throws SQLException{",
                "-\t\tif(null == freePool){",
                "+\tprivate PooledConnection getConnectionDirect() throws SQLException {",
                "+\t\tif (null == freePool) {",
                " \t\t\tthrow new SQLException(\"PooledDataSource is closed!\");",
                " \t\t}",
                "-\t\t",
                "-\t\tint maxActive = config.getMaxActive();",
                "-\t\tif(maxActive <= 0 || maxActive < this.activeCount){",
                "-\t\t\t//\u00e8\u00b6\u0085\u00e8\u00bf\u0087\u00e6\u009c\u0080\u00e5\u00a4\u00a7\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e9\u0099\u0090\u00e5\u0088\u00b6",
                "+",
                "+\t\tfinal int maxActive = config.getMaxActive();",
                "+\t\tif (maxActive <= 0 || maxActive < this.activeCount) {",
                "+\t\t\t// \u00e8\u00b6\u0085\u00e8\u00bf\u0087\u00e6\u009c\u0080\u00e5\u00a4\u00a7\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e9\u0099\u0090\u00e5\u0088\u00b6",
                " \t\t\tthrow new SQLException(\"In used Connection is more than Max Active.\");",
                " \t\t}",
                "-\t\t",
                "+",
                " \t\tPooledConnection conn = freePool.poll();",
                "-\t\tif(null == conn){",
                "+\t\tif (null == conn || conn.open().isClosed()) {",
                " \t\t\tconn = this.newConnection();",
                "@@ -176,3 +185,3 @@ public class PooledDataSource extends AbstractDataSource{",
                " \t\tactiveCount++;",
                "-\t\treturn conn.open();",
                "+\t\treturn conn;",
                " \t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/simple/SimpleDataSource.java b/hutool-db/src/main/java/cn/hutool/db/ds/simple/SimpleDataSource.java",
                "index d25fdc73e..acd7881db 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/simple/SimpleDataSource.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/simple/SimpleDataSource.java",
                "@@ -137,3 +137,3 @@ public class SimpleDataSource extends AbstractDataSource {",
                " \tpublic void init(String url, String user, String pass, String driver) {",
                "-\t\tthis.driver = StrUtil.isBlank(driver) ? DriverUtil.identifyDriver(url) : driver;",
                "+\t\tthis.driver = StrUtil.isNotBlank(driver) ? driver : DriverUtil.identifyDriver(url);",
                " \t\ttry {",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/tomcat/TomcatDSFactory.java b/hutool-db/src/main/java/cn/hutool/db/ds/tomcat/TomcatDSFactory.java",
                "index ef6f1f1d5..37e52ebd1 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/tomcat/TomcatDSFactory.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/tomcat/TomcatDSFactory.java",
                "@@ -103,11 +103,11 @@ public class TomcatDSFactory extends DSFactory {",
                " \t\t// \u00e5\u009f\u00ba\u00e6\u009c\u00ac\u00e4\u00bf\u00a1\u00e6\u0081\u00af",
                "-\t\tpoolProps.setUrl(getAndRemoveProperty(config, \"url\", \"jdbcUrl\"));",
                "-\t\tpoolProps.setUsername(getAndRemoveProperty(config, \"username\", \"user\"));",
                "-\t\tpoolProps.setPassword(getAndRemoveProperty(config, \"password\", \"pass\"));",
                "-\t\tfinal String driver = getAndRemoveProperty(config, \"driver\", \"driverClassName\");",
                "-\t\tif (StrUtil.isNotBlank(driver)) {",
                "-\t\t\tpoolProps.setDriverClassName(driver);",
                "-\t\t} else {",
                "-\t\t\tpoolProps.setDriverClassName(DriverUtil.identifyDriver(poolProps.getUrl()));",
                "+\t\tfinal String url = config.getAndRemoveStr(KEY_ALIAS_URL);",
                "+\t\tif (StrUtil.isBlank(url)) {",
                "+\t\t\tthrow new DbRuntimeException(\"No JDBC URL for group: [{}]\", group);",
                " \t\t}",
                "+\t\tpoolProps.setUrl(url);",
                "+\t\tfinal String driver = getAndRemoveProperty(config, \"driver\", \"driverClassName\");",
                "+\t\tpoolProps.setDriverClassName(StrUtil.isNotBlank(driver) ? driver : DriverUtil.identifyDriver(url));",
                "+\t\tpoolProps.setUsername(config.getAndRemoveStr(KEY_ALIAS_USER));",
                "+\t\tpoolProps.setPassword(config.getAndRemoveStr(KEY_ALIAS_PASSWORD));",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/handler/HandleHelper.java b/hutool-db/src/main/java/cn/hutool/db/handler/HandleHelper.java",
                "index f4c2aa42d..780c73c42 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/handler/HandleHelper.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/handler/HandleHelper.java",
                "@@ -111,3 +111,3 @@ public class HandleHelper {",
                " \tpublic static Entity handleRow(int columnCount, ResultSetMetaData meta, ResultSet rs) throws SQLException {",
                "-\t\treturn handleRow(Entity.create(), columnCount, meta, rs, false);",
                "+\t\treturn handleRow(Entity.create(), columnCount, meta, rs, true);",
                " \t}",
                "@@ -122,3 +122,3 @@ public class HandleHelper {",
                " \t * @param rs \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e9\u009b\u0086",
                "-\t * @param withTableName \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e8\u00a1\u00a8\u00e5\u0090\u008d",
                "+\t * @param withMetaInfo \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e8\u00a1\u00a8\u00e5\u0090\u008d\u00e3\u0080\u0081\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e5\u0090\u008d\u00e7\u00ad\u0089\u00e5\u0085\u0083\u00e4\u00bf\u00a1\u00e6\u0081\u00af",
                " \t * @return \u00e6\u00af\u008f\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00e7\u009a\u0084Entity",
                "@@ -127,6 +127,3 @@ public class HandleHelper {",
                " \t */",
                "-\tpublic static <T extends Entity> T handleRow(T row, int columnCount, ResultSetMetaData meta, ResultSet rs, boolean withTableName) throws SQLException {",
                "-\t\tif (withTableName) {",
                "-\t\t\trow.setTableName(meta.getTableName(1));",
                "-\t\t}",
                "+\tpublic static <T extends Entity> T handleRow(T row, int columnCount, ResultSetMetaData meta, ResultSet rs, boolean withMetaInfo) throws SQLException {",
                " \t\tString columnLabel;",
                "@@ -138,2 +135,6 @@ public class HandleHelper {",
                " \t\t}",
                "+\t\tif (withMetaInfo) {",
                "+\t\t\trow.setTableName(meta.getTableName(1));",
                "+\t\t\trow.setFieldNames(row.keySet());",
                "+\t\t}",
                " \t\treturn row;",
                "diff --git a/hutool-setting/src/main/java/cn/hutool/setting/Setting.java b/hutool-setting/src/main/java/cn/hutool/setting/Setting.java",
                "index b8bf880da..6030abc99 100644",
                "--- a/hutool-setting/src/main/java/cn/hutool/setting/Setting.java",
                "+++ b/hutool-setting/src/main/java/cn/hutool/setting/Setting.java",
                "@@ -30,2 +30,3 @@ import cn.hutool.core.util.StrUtil;",
                " import cn.hutool.log.StaticLog;",
                "+import cn.hutool.setting.dialect.Props;",
                "@@ -281,3 +282,3 @@ public class Setting extends AbsSetting implements Map<String, String> {",
                " \t/**",
                "-\t * \u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00baProperties\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u008e\u009f\u00e5\u0088\u0086\u00e7\u00bb\u0084\u00e5\u008f\u0098\u00e4\u00b8\u00ba\u00e5\u0089\u008d\u00e7\u00bc\u0080",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097group\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084\u00e5\u00ad\u0090Properties",
                " \t * ",
                "@@ -292,2 +293,15 @@ public class Setting extends AbsSetting implements Map<String, String> {",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097group\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084\u00e5\u00ad\u0090Props",
                "+\t * ",
                "+\t * @param group \u00e5\u0088\u0086\u00e7\u00bb\u0084",
                "+\t * @return Props\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @since 4.1.21",
                "+\t */",
                "+\tpublic Props getProps(String group) {",
                "+\t\tfinal Props props = new Props();",
                "+\t\tprops.putAll(getMap(group));",
                "+\t\treturn props;",
                "+\t}",
                "+",
                " \t// --------------------------------------------------------------------------------- Functions",
                "diff --git a/hutool-setting/src/main/java/cn/hutool/setting/dialect/Props.java b/hutool-setting/src/main/java/cn/hutool/setting/dialect/Props.java",
                "index fad25255d..d204dea72 100644",
                "--- a/hutool-setting/src/main/java/cn/hutool/setting/dialect/Props.java",
                "+++ b/hutool-setting/src/main/java/cn/hutool/setting/dialect/Props.java",
                "@@ -455,2 +455,20 @@ public final class Props extends Properties implements BasicTypeGetter<String>,",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u00b9\u00b6\u00e5\u0088\u00a0\u00e9\u0099\u00a4\u00e9\u0094\u00ae\u00e5\u0080\u00bc\u00e5\u00af\u00b9\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e9\u0094\u00ae\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e5\u0080\u00bc\u00e9\u009d\u009e\u00e7\u00a9\u00ba\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u00b9\u00b6\u00e5\u0088\u00a0\u00e9\u0099\u00a4\u00e8\u00bf\u0099\u00e4\u00b8\u00aa\u00e5\u0080\u00bc\u00ef\u00bc\u008c\u00e5\u0090\u008e\u00e8\u00be\u00b9\u00e7\u009a\u0084\u00e9\u0094\u00ae\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00e4\u00b8\u008d\u00e5\u0086\u008d\u00e6\u009f\u00a5\u00e6\u0089\u00be",
                "+\t * ",
                "+\t * @param keys \u00e9\u0094\u00ae\u00e5\u0088\u0097\u00e8\u00a1\u00a8\u00ef\u00bc\u008c\u00e5\u00b8\u00b8\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u0088\u00ab\u00e5\u0090\u008d",
                "+\t * @return \u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e5\u0080\u00bc",
                "+\t * @since 4.1.21",
                "+\t */",
                "+\tpublic String getAndRemoveStr(String... keys) {",
                "+\t\tObject value = null;",
                "+\t\tfor (String key : keys) {",
                "+\t\t\tvalue = remove(key);",
                "+\t\t\tif (null != value) {",
                "+\t\t\t\tbreak;",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn (String) value;",
                "+\t}"
            ],
            "changed_files": [
                "hutool-db/src/main/java/cn/hutool/db/dialect/DialectFactory.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/DSFactory.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/c3p0/C3p0DSFactory.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/dbcp/DbcpDSFactory.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/druid/DruidDSFactory.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/hikari/HikariDSFactory.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/pooled/DbSetting.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/pooled/PooledDataSource.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/simple/SimpleDataSource.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/tomcat/TomcatDSFactory.java",
                "hutool-db/src/main/java/cn/hutool/db/handler/HandleHelper.java",
                "hutool-setting/src/main/java/cn/hutool/setting/Setting.java",
                "hutool-setting/src/main/java/cn/hutool/setting/dialect/Props.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ba8ac8129115aaf0e86397337a8f25aa7083365f",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537034785,
            "hunks": 2,
            "message": "fix deprecated",
            "diff": [
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/VelocityUtil.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/VelocityUtil.java",
                "index ab69948a8..d3fdccd4f 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/VelocityUtil.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/VelocityUtil.java",
                "@@ -21,3 +21,3 @@ import cn.hutool.core.io.IORuntimeException;",
                " import cn.hutool.core.io.IoUtil;",
                "-import cn.hutool.core.util.RandomUtil;",
                "+import cn.hutool.core.util.IdUtil;",
                "@@ -237,3 +237,3 @@ public class VelocityUtil {",
                " \t\ttry {",
                "-\t\t\tVelocity.evaluate(context, writer, RandomUtil.randomUUID(), templateContent);",
                "+\t\t\tVelocity.evaluate(context, writer, IdUtil.randomUUID(), templateContent);",
                " \t\t} catch (Exception e) {"
            ],
            "changed_files": [
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/VelocityUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "67e7bc55b87dd4d5683f77230144029cb45b886c",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1533605535,
            "hunks": 21,
            "message": "add getDate",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java b/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java",
                "index fea2b84fa..5634af2bd 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java",
                "@@ -8,2 +8,3 @@ import java.util.ArrayList;",
                " import java.util.Collection;",
                "+import java.util.Date;",
                " import java.util.List;",
                "@@ -423,3 +424,3 @@ public class Convert {",
                " \t * \u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00baBigDecimal<br>",
                "-\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba\u00ef\u00bc\u008c\u00e6\u0088\u0096\u00e8\u0080\u0085\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0080\u00bc<br>",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba\u00ef\u00bc\u008c\u00e6\u0088\u0096\u00e8\u0080\u0085\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009enull<br>",
                " \t * \u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5\u00e4\u00b8\u008d\u00e4\u00bc\u009a\u00e6\u008a\u00a5\u00e9\u0094\u0099",
                "@@ -432,2 +433,29 @@ public class Convert {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00baDate<br>",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba\u00ef\u00bc\u008c\u00e6\u0088\u0096\u00e8\u0080\u0085\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0080\u00bc<br>",
                "+\t * \u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5\u00e4\u00b8\u008d\u00e4\u00bc\u009a\u00e6\u008a\u00a5\u00e9\u0094\u0099",
                "+\t * ",
                "+\t * @param value \u00e8\u00a2\u00ab\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e7\u009a\u0084\u00e5\u0080\u00bc",
                "+\t * @param defaultValue \u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e9\u0094\u0099\u00e8\u00af\u00af\u00e6\u0097\u00b6\u00e7\u009a\u0084\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0080\u00bc",
                "+\t * @return \u00e7\u00bb\u0093\u00e6\u009e\u009c",
                "+\t * @since 4.1.6",
                "+\t */",
                "+\tpublic static Date toDate(Object value, Date defaultValue) {",
                "+\t\treturn convert(Date.class, value, defaultValue);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e4\u00b8\u00baDate<br>",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba\u00ef\u00bc\u008c\u00e6\u0088\u0096\u00e8\u0080\u0085\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>null</code><br>",
                "+\t * \u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5\u00e4\u00b8\u008d\u00e4\u00bc\u009a\u00e6\u008a\u00a5\u00e9\u0094\u0099",
                "+\t * ",
                "+\t * @param value \u00e8\u00a2\u00ab\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e7\u009a\u0084\u00e5\u0080\u00bc",
                "+\t * @return \u00e7\u00bb\u0093\u00e6\u009e\u009c",
                "+\t * @since 4.1.6",
                "+\t */",
                "+\tpublic static Date toDate(Object value) {",
                "+\t\treturn toDate(value, null);",
                "+\t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/getter/BasicTypeGetter.java b/hutool-core/src/main/java/cn/hutool/core/getter/BasicTypeGetter.java",
                "index 4a98a4e69..a4c2256cc 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/getter/BasicTypeGetter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/getter/BasicTypeGetter.java",
                "@@ -4,2 +4,3 @@ import java.math.BigDecimal;",
                " import java.math.BigInteger;",
                "+import java.util.Date;",
                "@@ -116,3 +117,10 @@ public interface BasicTypeGetter<K> {",
                " \t */",
                "-\tpublic <E extends Enum<E>> E getEnum(Class<E> clazz, K key);",
                "+\t<E extends Enum<E>> E getEnum(Class<E> clazz, K key);",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096Date\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u0080\u00bc",
                "+\t * @param key \u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e5\u0090\u008d",
                "+\t * @return Date\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e5\u0080\u00bc",
                "+\t */",
                "+\tDate getDate(K key);",
                " \t/*-------------------------- \u00e5\u009f\u00ba\u00e6\u009c\u00ac\u00e7\u00b1\u00bb\u00e5\u009e\u008b end -------------------------------*/",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/getter/OptBasicTypeGetter.java b/hutool-core/src/main/java/cn/hutool/core/getter/OptBasicTypeGetter.java",
                "index 746ed6846..3203d79cb 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/getter/OptBasicTypeGetter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/getter/OptBasicTypeGetter.java",
                "@@ -4,2 +4,3 @@ import java.math.BigDecimal;",
                " import java.math.BigInteger;",
                "+import java.util.Date;",
                "@@ -142,2 +143,10 @@ public interface OptBasicTypeGetter<K> {",
                " \tpublic <E extends Enum<E>> E getEnum(Class<E> clazz, K key, E defaultValue);",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096Date\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u0080\u00bc",
                "+\t * @param key \u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e5\u0090\u008d",
                "+\t * @param defaultValue \u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0080\u00bc",
                "+\t * @return Date\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e5\u0080\u00bc",
                "+\t */",
                "+\tDate getDate(K key, Date defaultValue);",
                " \t/*-------------------------- \u00e5\u009f\u00ba\u00e6\u009c\u00ac\u00e7\u00b1\u00bb\u00e5\u009e\u008b end -------------------------------*/",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeFromObjectGetter.java b/hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeFromObjectGetter.java",
                "index eacbd8430..de1bd6ed7 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeFromObjectGetter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeFromObjectGetter.java",
                "@@ -4,2 +4,3 @@ import java.math.BigDecimal;",
                " import java.math.BigInteger;",
                "+import java.util.Date;",
                "@@ -77,2 +78,7 @@ public abstract class OptNullBasicTypeFromObjectGetter<K> extends OptNullBasicTy",
                " \t}",
                "+\t",
                "+\t@Override",
                "+\tpublic Date getDate(K key, Date defaultValue) {",
                "+\t\treturn Convert.toDate(getObj(key), defaultValue);",
                "+\t}",
                " }",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeFromStringGetter.java b/hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeFromStringGetter.java",
                "index 2cd0dbc41..b8d6aedad 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeFromStringGetter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeFromStringGetter.java",
                "@@ -4,2 +4,3 @@ import java.math.BigDecimal;",
                " import java.math.BigInteger;",
                "+import java.util.Date;",
                "@@ -9,11 +10,11 @@ import cn.hutool.core.convert.Convert;",
                "  * \u00e5\u009f\u00ba\u00e6\u009c\u00ac\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e7\u009a\u0084getter\u00e6\u008e\u00a5\u00e5\u008f\u00a3\u00e6\u008a\u00bd\u00e8\u00b1\u00a1\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00ef\u00bc\u008c\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e9\u0083\u00bd\u00e6\u0098\u00af\u00e9\u0080\u009a\u00e8\u00bf\u0087\u00e5\u00b0\u0086String\u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e8\u0080\u008c\u00e6\u009d\u00a5<br>",
                "- * \u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u008f\u00aa\u00e9\u009c\u0080\u00e5\u00ae\u009e\u00e7\u008e\u00b0getStr\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u008d\u00b3\u00e5\u008f\u00af\u00ef\u00bc\u008c\u00e5\u0085\u00b6\u00e4\u00bb\u0096\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u00b0\u0086\u00e4\u00bc\u009a\u00e4\u00bb\u008eString\u00e7\u00bb\u0093\u00e6\u009e\u009c\u00e4\u00b8\u00ad\u00e8\u00bd\u00ac\u00e6\u008d\u00a2",
                "- * \u00e5\u009c\u00a8\u00e4\u00b8\u008d\u00e6\u008f\u0090\u00e4\u00be\u009b\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0080\u00bc\u00e7\u009a\u0084\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00e4\u00b8\u008b\u00ef\u00bc\u008c \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u0080\u00bc\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e6\u0088\u0096\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e9\u0094\u0099\u00e8\u00af\u00af\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009enull<br>",
                "+ * \u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u008f\u00aa\u00e9\u009c\u0080\u00e5\u00ae\u009e\u00e7\u008e\u00b0getStr\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u008d\u00b3\u00e5\u008f\u00af\u00ef\u00bc\u008c\u00e5\u0085\u00b6\u00e4\u00bb\u0096\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e5\u00b0\u0086\u00e4\u00bc\u009a\u00e4\u00bb\u008eString\u00e7\u00bb\u0093\u00e6\u009e\u009c\u00e4\u00b8\u00ad\u00e8\u00bd\u00ac\u00e6\u008d\u00a2 \u00e5\u009c\u00a8\u00e4\u00b8\u008d\u00e6\u008f\u0090\u00e4\u00be\u009b\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u0080\u00bc\u00e7\u009a\u0084\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00e4\u00b8\u008b\u00ef\u00bc\u008c \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u0080\u00bc\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e6\u0088\u0096\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e9\u0094\u0099\u00e8\u00af\u00af\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009enull<br>",
                "+ * ",
                "  * @author Looly",
                "  */",
                "-public abstract class OptNullBasicTypeFromStringGetter<K> extends OptNullBasicTypeGetter<K>{",
                "-\t",
                "+public abstract class OptNullBasicTypeFromStringGetter<K> extends OptNullBasicTypeGetter<K> {",
                "+",
                " \t@Override",
                " \tpublic abstract String getStr(K key, String defaultValue);",
                "-\t",
                "+",
                " \t@Override",
                "@@ -22,3 +23,3 @@ public abstract class OptNullBasicTypeFromStringGetter<K> extends OptNullBasicTy",
                " \t}",
                "-\t",
                "+",
                " \t@Override",
                "@@ -47,3 +48,3 @@ public abstract class OptNullBasicTypeFromStringGetter<K> extends OptNullBasicTy",
                " \t}",
                "-\t",
                "+",
                " \t@Override",
                "@@ -72,3 +73,3 @@ public abstract class OptNullBasicTypeFromStringGetter<K> extends OptNullBasicTy",
                " \t}",
                "-\t",
                "+",
                " \t@Override",
                "@@ -77,2 +78,7 @@ public abstract class OptNullBasicTypeFromStringGetter<K> extends OptNullBasicTy",
                " \t}",
                "+",
                "+\t@Override",
                "+\tpublic Date getDate(K key, Date defaultValue) {",
                "+\t\treturn Convert.toDate(getStr(key), defaultValue);",
                "+\t}",
                " }",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeGetter.java b/hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeGetter.java",
                "index 5ce8e1a18..45b40f6a6 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeGetter.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeGetter.java",
                "@@ -4,2 +4,3 @@ import java.math.BigDecimal;",
                " import java.math.BigInteger;",
                "+import java.util.Date;",
                "@@ -163,2 +164,14 @@ public abstract class OptNullBasicTypeGetter<K> implements BasicTypeGetter<K>, O",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096Date\u00e5\u009e\u008b\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e5\u0080\u00bc<br>",
                "+\t * \u00e6\u0097\u00a0\u00e5\u0080\u00bc\u00e6\u0088\u0096\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e9\u0094\u0099\u00e8\u00af\u00af\u00e8\u00bf\u0094\u00e5\u009b\u009enull",
                "+\t * ",
                "+\t * @param key \u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e5\u0090\u008d",
                "+\t * @return \u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e5\u0080\u00bc",
                "+\t */",
                "+\t@Override",
                "+\tpublic Date getDate(K key) {",
                "+\t\treturn this.getDate(key, null);",
                "+\t}",
                " }",
                "diff --git a/hutool-setting/src/main/java/cn/hutool/setting/dialect/Props.java b/hutool-setting/src/main/java/cn/hutool/setting/dialect/Props.java",
                "index be5dbde7c..fad25255d 100644",
                "--- a/hutool-setting/src/main/java/cn/hutool/setting/dialect/Props.java",
                "+++ b/hutool-setting/src/main/java/cn/hutool/setting/dialect/Props.java",
                "@@ -14,2 +14,3 @@ import java.nio.file.Paths;",
                " import java.nio.file.WatchEvent;",
                "+import java.util.Date;",
                " import java.util.Properties;",
                "@@ -444,2 +445,12 @@ public final class Props extends Properties implements BasicTypeGetter<String>,",
                " \t}",
                "+\t",
                "+\t@Override",
                "+\tpublic Date getDate(String key, Date defaultValue) {",
                "+\t\treturn Convert.toDate(getStr(key), defaultValue);",
                "+\t}",
                "+\t",
                "+\t@Override",
                "+\tpublic Date getDate(String key) {",
                "+\t\treturn getDate(key, null);",
                "+\t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/convert/Convert.java",
                "hutool-core/src/main/java/cn/hutool/core/getter/BasicTypeGetter.java",
                "hutool-core/src/main/java/cn/hutool/core/getter/OptBasicTypeGetter.java",
                "hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeFromObjectGetter.java",
                "hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeFromStringGetter.java",
                "hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeGetter.java",
                "hutool-setting/src/main/java/cn/hutool/setting/dialect/Props.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "375ef0982d3f2ca990c1b189a97d0d666b386791",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1535540272,
            "hunks": 1,
            "message": "fix comment and readme",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java b/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "index 1a52b0ac8..1c591b736 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "@@ -49,3 +49,3 @@ public class DateUtil {",
                " \t * Long\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e8\u00bd\u00ac\u00e4\u00b8\u00ba{@link DateTime}<br>",
                "-\t * \u00e5\u0090\u008c\u00e6\u0097\u00b6\u00e6\u0094\u00af\u00e6\u008c\u008110\u00e4\u00bd\u008d\u00e7\u00a7\u0092\u00e7\u00ba\u00a7\u00e5\u0088\u00ab\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3\u00e5\u0092\u008c13\u00e4\u00bd\u008d\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00e7\u00ba\u00a7\u00e5\u0088\u00ab\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3",
                "+\t * \u00e5\u008f\u00aa\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e6\u00af\u00ab\u00e7\u00a7\u0092\u00e7\u00ba\u00a7\u00e5\u0088\u00ab\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e7\u00a7\u0092\u00e7\u00ba\u00a7\u00e5\u0088\u00ab\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3\u00ef\u00bc\u008c\u00e8\u00af\u00b7\u00e8\u0087\u00aa\u00e8\u00a1\u008c\u00c3\u00971000",
                " \t * "
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "494d836318ec02ade7df869a441655addf600aea",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1539252316,
            "hunks": 11,
            "message": "fix charset get",
            "diff": [
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HttpUtil.java b/hutool-http/src/main/java/cn/hutool/http/HttpUtil.java",
                "index e0c1f726a..6c0db53d8 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HttpUtil.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HttpUtil.java",
                "@@ -43,5 +43,5 @@ public class HttpUtil {",
                " \t/** \u00e6\u00ad\u00a3\u00e5\u0088\u0099\u00ef\u00bc\u009aContent-Type\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e7\u00bc\u0096\u00e7\u00a0\u0081\u00e4\u00bf\u00a1\u00e6\u0081\u00af */",
                "-\tpublic static final Pattern CHARSET_PATTERN = Pattern.compile(\"charset=(.*)\");",
                "+\tpublic static final Pattern CHARSET_PATTERN = Pattern.compile(\"charset\\\\s*=\\\\s*([a-z0-9-]*)\", Pattern.CASE_INSENSITIVE);",
                " \t/** \u00e6\u00ad\u00a3\u00e5\u0088\u0099\u00ef\u00bc\u009a\u00e5\u008c\u00b9\u00e9\u0085\u008dmeta\u00e6\u00a0\u0087\u00e7\u00ad\u00be\u00e7\u009a\u0084\u00e7\u00bc\u0096\u00e7\u00a0\u0081\u00e4\u00bf\u00a1\u00e6\u0081\u00af */",
                "-\tpublic static final Pattern META_CHARSET_PATTERN = Pattern.compile(\"<meta.*?charset=(.*?)\\\"\");",
                "+\tpublic static final Pattern META_CHARSET_PATTERN = Pattern.compile(\"<meta[^>]*?charset\\\\s*=\\\\s*['\\\"]?([a-z0-9-]*)\", Pattern.CASE_INSENSITIVE);",
                "@@ -378,3 +378,3 @@ public class HttpUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -391,3 +391,3 @@ public class HttpUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -422,3 +422,3 @@ public class HttpUtil {",
                " \t\tfinal HttpResponse response = HttpRequest.get(url).timeout(timeout).executeAsync();",
                "-\t\tif(false == response.isOk()) {",
                "+\t\tif (false == response.isOk()) {",
                " \t\t\tthrow new HttpException(\"Server response error with status code: [{}]\", response.getStatus());",
                "@@ -458,3 +458,3 @@ public class HttpUtil {",
                " \t\tfinal HttpResponse response = HttpRequest.get(url).executeAsync();",
                "-\t\tif(false == response.isOk()) {",
                "+\t\tif (false == response.isOk()) {",
                " \t\t\tthrow new HttpException(\"Server response error with status code: [{}]\", response.getStatus());",
                "@@ -555,3 +555,3 @@ public class HttpUtil {",
                " \t\tif (pathEndPos > -1) {",
                "-\t\t\t//url + \u00e5\u008f\u0082\u00e6\u0095\u00b0",
                "+\t\t\t// url + \u00e5\u008f\u0082\u00e6\u0095\u00b0",
                " \t\t\turlPart = StrUtil.subPre(paramsStr, pathEndPos);",
                "@@ -613,3 +613,3 @@ public class HttpUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -737,3 +737,3 @@ public class HttpUtil {",
                " \t\t\tif (false == StrUtil.endWith(url, '&')) {",
                "-\t\t\t\t//\u00e5\u00b7\u00b2\u00e7\u00bb\u008f\u00e5\u00b8\u00a6\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e7\u009a\u0084\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00e4\u00b8\u008b\u00e8\u00bf\u00bd\u00e5\u008a\u00a0\u00e5\u008f\u0082\u00e6\u0095\u00b0",
                "+\t\t\t\t// \u00e5\u00b7\u00b2\u00e7\u00bb\u008f\u00e5\u00b8\u00a6\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e7\u009a\u0084\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00e4\u00b8\u008b\u00e8\u00bf\u00bd\u00e5\u008a\u00a0\u00e5\u008f\u0082\u00e6\u0095\u00b0",
                " \t\t\t\turlBuilder.append('&');",
                "@@ -741,6 +741,6 @@ public class HttpUtil {",
                " \t\t} else {",
                "-\t\t\t//\u00e5\u008e\u009furl\u00e6\u0097\u00a0\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e4\u00b8\u008d\u00e5\u0081\u009a\u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                "+\t\t\t// \u00e5\u008e\u009furl\u00e6\u0097\u00a0\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e4\u00b8\u008d\u00e5\u0081\u009a\u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                " \t\t\turlBuilder.append(url);",
                "-\t\t\tif(qmIndex < 0) {",
                "-\t\t\t\t//\u00e6\u0097\u00a0 '?' \u00e8\u00bf\u00bd\u00e5\u008a\u00a0\u00e4\u00b9\u008b",
                "+\t\t\tif (qmIndex < 0) {",
                "+\t\t\t\t// \u00e6\u0097\u00a0 '?' \u00e8\u00bf\u00bd\u00e5\u008a\u00a0\u00e4\u00b9\u008b",
                " \t\t\t\turlBuilder.append('?');"
            ],
            "changed_files": [
                "hutool-http/src/main/java/cn/hutool/http/HttpUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4cd09fce5eb1b7114aadbb571e615666df2e5e7d",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1535366197,
            "hunks": 1,
            "message": "[bug\u00e4\u00bf\u00ae\u00e5\u00a4\u008d] cn.hutool.core.io.BOMInputStream \u00e4\u00bf\u00ae\u00e5\u00a4\u008d\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u009a\u0084bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/BOMInputStream.java b/hutool-core/src/main/java/cn/hutool/core/io/BOMInputStream.java",
                "index b9bb4f28c..29d678e78 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/BOMInputStream.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/BOMInputStream.java",
                "@@ -42,3 +42,3 @@ public class BOMInputStream extends InputStream {",
                " \tpublic BOMInputStream(InputStream in, String defaultCharset) {",
                "-\t\tin = new PushbackInputStream(in, BOM_SIZE);",
                "+\t\tthis.in = new PushbackInputStream(in, BOM_SIZE);",
                " \t\tthis.defaultCharset = defaultCharset;"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/io/BOMInputStream.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3e37a573ef0054e01d2bcafb859ee0855caee3ba",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1542509978,
            "hunks": 20,
            "message": "add support map to BeanUtil.copyProperties",
            "diff": [
                "diff --git a/hutool-captcha/src/main/java/cn/hutool/captcha/ShearCaptcha.java b/hutool-captcha/src/main/java/cn/hutool/captcha/ShearCaptcha.java",
                "index 7cb1a2397..b7b1fab90 100644",
                "--- a/hutool-captcha/src/main/java/cn/hutool/captcha/ShearCaptcha.java",
                "+++ b/hutool-captcha/src/main/java/cn/hutool/captcha/ShearCaptcha.java",
                "@@ -60,3 +60,2 @@ public class ShearCaptcha extends AbstractCaptcha {",
                " \t\t// \u00e7\u0094\u00bb\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "-\t\tg.setColor(Color.black);",
                " \t\tg.setFont(font);",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanCopier.java b/hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanCopier.java",
                "index c218e7800..7128a3926 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanCopier.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanCopier.java",
                "@@ -22,2 +22,3 @@ import cn.hutool.core.util.TypeUtil;",
                "  * Bean\u00e6\u008b\u00b7\u00e8\u00b4\u009d",
                "+ * ",
                "  * @author looly",
                "@@ -27,4 +28,4 @@ import cn.hutool.core.util.TypeUtil;",
                "  */",
                "-public class BeanCopier<T> implements Copier<T>{",
                "-\t",
                "+public class BeanCopier<T> implements Copier<T> {",
                "+",
                " \tprivate Object source;",
                "@@ -32,3 +33,3 @@ public class BeanCopier<T> implements Copier<T>{",
                " \tprivate CopyOptions copyOptions;",
                "-\t",
                "+",
                " \t/**",
                "@@ -42,6 +43,6 @@ public class BeanCopier<T> implements Copier<T>{",
                " \t */",
                "-\tpublic static <T> BeanCopier<T> create(Object source, T dest, CopyOptions copyOptions){",
                "+\tpublic static <T> BeanCopier<T> create(Object source, T dest, CopyOptions copyOptions) {",
                " \t\treturn new BeanCopier<>(source, dest, copyOptions);",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -62,9 +63,18 @@ public class BeanCopier<T> implements Copier<T>{",
                " \tpublic T copy() {",
                "-\t\tif(null != this.source) {",
                "-\t\t\tif(this.source instanceof ValueProvider) {",
                "-\t\t\t\tvalueProviderToBean((ValueProvider<String>)this.source, this.dest);",
                "-\t\t\t}else if(this.source instanceof Map) {",
                "-\t\t\t\tmapToBean((Map<?, ?>)this.source, this.dest);",
                "-\t\t\t}else {",
                "-\t\t\t\tbeanToBean(this.source, this.dest);",
                "+\t\tif (null != this.source) {",
                "+\t\t\tif (this.source instanceof ValueProvider) {",
                "+\t\t\t\t//\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e5\u008f\u00aa\u00e6\u0094\u00af\u00e6\u008c\u0081Bean",
                "+\t\t\t\tvalueProviderToBean((ValueProvider<String>) this.source, this.dest);",
                "+\t\t\t} else if (this.source instanceof Map) {",
                "+\t\t\t\tif(this.dest instanceof Map) {",
                "+\t\t\t\t\tmapToMap((Map<?, ?>)this.source, (Map<?, ?>)this.dest);",
                "+\t\t\t\t} else {",
                "+\t\t\t\t\tmapToBean((Map<?, ?>) this.source, this.dest);",
                "+\t\t\t\t}",
                "+\t\t\t} else {",
                "+\t\t\t\tif(this.dest instanceof Map) {",
                "+\t\t\t\t\tbeanToMap(this.source, (Map<?, ?>)this.dest);",
                "+\t\t\t\t} else {",
                "+\t\t\t\t\tbeanToBean(this.source, this.dest);",
                "+\t\t\t\t}",
                " \t\t\t}",
                "@@ -73,5 +83,6 @@ public class BeanCopier<T> implements Copier<T>{",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * Bean\u00e5\u0092\u008cBean\u00e4\u00b9\u008b\u00e9\u0097\u00b4\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e6\u008b\u00b7\u00e8\u00b4\u009d",
                "+\t * ",
                " \t * @param providerBean \u00e6\u009d\u00a5\u00e6\u00ba\u0090Bean",
                "@@ -82,5 +93,6 @@ public class BeanCopier<T> implements Copier<T>{",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * Map\u00e8\u00bd\u00acBean\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e6\u008b\u00b7\u00e8\u00b4\u009d",
                "+\t * ",
                " \t * @param map Map",
                "@@ -92,2 +104,62 @@ public class BeanCopier<T> implements Copier<T>{",
                "+\t/**",
                "+\t * Map\u00e8\u00bd\u00acMap",
                "+\t * @param source \u00e6\u00ba\u0090Map",
                "+\t * @param dest \u00e7\u009b\u00ae\u00e6\u00a0\u0087Map",
                "+\t */",
                "+\t@SuppressWarnings({ \"unchecked\", \"rawtypes\" })",
                "+\tprivate void mapToMap(Map source, Map dest) {",
                "+\t\tif(null != dest && null != source) {",
                "+\t\t\tdest.putAll(source);",
                "+\t\t}",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e8\u00bd\u00acMap",
                "+\t * ",
                "+\t * @param bean bean\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param targetMap \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e7\u009a\u0084Map",
                "+\t * @return Map",
                "+\t * @since 4.1.22",
                "+\t */",
                "+\t@SuppressWarnings({ \"rawtypes\", \"unchecked\" })",
                "+\tprivate void beanToMap(Object bean, Map targetMap) {",
                "+\t\tfinal Collection<PropDesc> props = BeanUtil.getBeanDesc(bean.getClass()).getProps();",
                "+\t\tfinal HashSet<String> ignoreSet = (null != copyOptions.ignoreProperties) ? CollUtil.newHashSet(copyOptions.ignoreProperties) : null;",
                "+\t\tfinal CopyOptions copyOptions = this.copyOptions;",
                "+\t\t",
                "+\t\tString key;",
                "+\t\tMethod getter;",
                "+\t\tObject value;",
                "+\t\tfor (PropDesc prop : props) {",
                "+\t\t\tkey = prop.getFieldName();",
                "+\t\t\t// \u00e8\u00bf\u0087\u00e6\u00bb\u00a4class\u00e5\u00b1\u009e\u00e6\u0080\u00a7",
                "+\t\t\t// \u00e5\u00be\u0097\u00e5\u0088\u00b0property\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084getter\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t\t\tgetter = prop.getGetter();",
                "+\t\t\tif (null != getter) {",
                "+\t\t\t\t// \u00e5\u008f\u00aa\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e6\u009c\u0089getter\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u009a\u0084\u00e5\u00b1\u009e\u00e6\u0080\u00a7",
                "+\t\t\t\ttry {",
                "+\t\t\t\t\tvalue = getter.invoke(bean);",
                "+\t\t\t\t} catch (Exception e) {",
                "+\t\t\t\t\tif (copyOptions.ignoreError) {",
                "+\t\t\t\t\t\tcontinue;// \u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e5\u008f\u008d\u00e5\u00b0\u0084\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5",
                "+\t\t\t\t\t} else {",
                "+\t\t\t\t\t\tthrow new UtilException(e, \"Get value of [{}] error!\", prop.getFieldName());",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+\t\t\t\tif (CollUtil.contains(ignoreSet, key)) {",
                "+\t\t\t\t\t// \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e5\u0080\u00bc\u00e8\u00a2\u00ab\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e6\u0088\u0096\u00e5\u0080\u00bc\u00e6\u008f\u0090\u00e4\u00be\u009b\u00e8\u0080\u0085\u00e6\u0097\u00a0\u00e6\u00ad\u00a4key\u00e6\u0097\u00b6\u00e8\u00b7\u00b3\u00e8\u00bf\u0087",
                "+\t\t\t\t\tcontinue;",
                "+\t\t\t\t}",
                "+\t\t\t\tif (null == value && copyOptions.ignoreNullValue) {",
                "+\t\t\t\t\tcontinue;// \u00e5\u00bd\u0093\u00e5\u0085\u0081\u00e8\u00ae\u00b8\u00e8\u00b7\u00b3\u00e8\u00bf\u0087\u00e7\u00a9\u00ba\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e8\u00b7\u00b3\u00e8\u00bf\u0087",
                "+\t\t\t\t}",
                "+\t\t\t\tif (bean.equals(value)) {",
                "+\t\t\t\t\tcontinue;// \u00e5\u0080\u00bc\u00e4\u00b8\u008d\u00e8\u0083\u00bd\u00e4\u00b8\u00babean\u00e6\u009c\u00ac\u00e8\u00ba\u00ab\u00ef\u00bc\u008c\u00e9\u0098\u00b2\u00e6\u00ad\u00a2\u00e5\u00be\u00aa\u00e7\u008e\u00af\u00e5\u00bc\u0095\u00e7\u0094\u00a8",
                "+\t\t\t\t}",
                "+\t\t\t\ttargetMap.put(mappingKey(copyOptions.fieldMapping, key), value);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t}",
                "+",
                " \t/**",
                "@@ -103,2 +175,3 @@ public class BeanCopier<T> implements Copier<T>{",
                "+\t\tfinal CopyOptions copyOptions = this.copyOptions;",
                " \t\tClass<?> actualEditable = bean.getClass();",
                "@@ -127,4 +200,4 @@ public class BeanCopier<T> implements Copier<T>{",
                " \t\t\tfinal String providerKey = mappingKey(fieldReverseMapping, fieldName);",
                "-\t\t\tif(false == valueProvider.containsKey(providerKey)) {",
                "-\t\t\t\t//\u00e6\u0097\u00a0\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e5\u0080\u00bc\u00e5\u008f\u00af\u00e6\u008f\u0090\u00e4\u00be\u009b",
                "+\t\t\tif (false == valueProvider.containsKey(providerKey)) {",
                "+\t\t\t\t// \u00e6\u0097\u00a0\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e5\u0080\u00bc\u00e5\u008f\u00af\u00e6\u008f\u0090\u00e4\u00be\u009b",
                " \t\t\t\tcontinue;",
                "@@ -132,4 +205,4 @@ public class BeanCopier<T> implements Copier<T>{",
                " \t\t\tsetterMethod = prop.getSetter();",
                "-\t\t\tif(null == setterMethod) {",
                "-\t\t\t\t//Setter\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e8\u00b7\u00b3\u00e8\u00bf\u0087",
                "+\t\t\tif (null == setterMethod) {",
                "+\t\t\t\t// Setter\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e8\u00b7\u00b3\u00e8\u00bf\u0087",
                " \t\t\t\tcontinue;",
                "@@ -140,2 +213,5 @@ public class BeanCopier<T> implements Copier<T>{",
                " \t\t\t}",
                "+\t\t\tif(bean.equals(value)) {",
                "+\t\t\t\tcontinue;// \u00e5\u0080\u00bc\u00e4\u00b8\u008d\u00e8\u0083\u00bd\u00e4\u00b8\u00babean\u00e6\u009c\u00ac\u00e8\u00ba\u00ab\u00ef\u00bc\u008c\u00e9\u0098\u00b2\u00e6\u00ad\u00a2\u00e5\u00be\u00aa\u00e7\u008e\u00af\u00e5\u00bc\u0095\u00e7\u0094\u00a8",
                "+\t\t\t}",
                "@@ -162,6 +238,7 @@ public class BeanCopier<T> implements Copier<T>{",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e5\u0090\u008d\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084\u00e6\u0098\u00a0\u00e5\u00b0\u0084\u00e5\u0080\u00bc",
                "-\t * @param fieldReverseMapping \u00e5\u008f\u008d\u00e5\u0090\u0091\u00e6\u0098\u00a0\u00e5\u00b0\u0084Map",
                "+\t * ",
                "+\t * @param mapping \u00e5\u008f\u008d\u00e5\u0090\u0091\u00e6\u0098\u00a0\u00e5\u00b0\u0084Map",
                " \t * @param fieldName \u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e5\u0090\u008d",
                "@@ -170,7 +247,7 @@ public class BeanCopier<T> implements Copier<T>{",
                " \t */",
                "-\tprivate static String mappingKey(Map<String, String> fieldReverseMapping, String fieldName) {",
                "-\t\tif(MapUtil.isEmpty(fieldReverseMapping)) {",
                "+\tprivate static String mappingKey(Map<String, String> mapping, String fieldName) {",
                "+\t\tif (MapUtil.isEmpty(mapping)) {",
                " \t\t\treturn fieldName;",
                " \t\t}",
                "-\t\treturn ObjectUtil.defaultIfNull(fieldReverseMapping.get(fieldName), fieldName);",
                "+\t\treturn ObjectUtil.defaultIfNull(mapping.get(fieldName), fieldName);",
                " \t}"
            ],
            "changed_files": [
                "hutool-captcha/src/main/java/cn/hutool/captcha/ShearCaptcha.java",
                "hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanCopier.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c6cdc7fd4a3182b2779a70fb945562658b34e9ae",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1542525605,
            "hunks": 16,
            "message": "setBackground support for captcha",
            "diff": [
                "diff --git a/hutool-captcha/src/main/java/cn/hutool/captcha/AbstractCaptcha.java b/hutool-captcha/src/main/java/cn/hutool/captcha/AbstractCaptcha.java",
                "index 6b13a1e6b..b0be672da 100644",
                "--- a/hutool-captcha/src/main/java/cn/hutool/captcha/AbstractCaptcha.java",
                "+++ b/hutool-captcha/src/main/java/cn/hutool/captcha/AbstractCaptcha.java",
                "@@ -2,2 +2,3 @@ package cn.hutool.captcha;",
                "+import java.awt.Color;",
                " import java.awt.Font;",
                "@@ -31,13 +32,13 @@ public abstract class AbstractCaptcha implements ICaptcha {",
                "-\t// \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e7\u009a\u0084\u00e5\u00ae\u00bd\u00e5\u00ba\u00a6\u00e3\u0080\u0082",
                "+\t/** \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e7\u009a\u0084\u00e5\u00ae\u00bd\u00e5\u00ba\u00a6 */",
                " \tprotected int width = 100;",
                "-\t// \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e7\u009a\u0084\u00e9\u00ab\u0098\u00e5\u00ba\u00a6\u00e3\u0080\u0082",
                "+\t/** \u00e5\u009b\u00be\u00e7\u0089\u0087\u00e7\u009a\u0084\u00e9\u00ab\u0098\u00e5\u00ba\u00a6 */",
                " \tprotected int height = 37;",
                "-\t// \u00e9\u00aa\u008c\u00e8\u00af\u0081\u00e7\u00a0\u0081\u00e5\u00b9\u00b2\u00e6\u0089\u00b0\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e4\u00b8\u00aa\u00e6\u0095\u00b0",
                "+\t/** \u00e9\u00aa\u008c\u00e8\u00af\u0081\u00e7\u00a0\u0081\u00e5\u00b9\u00b2\u00e6\u0089\u00b0\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e4\u00b8\u00aa\u00e6\u0095\u00b0 */",
                " \tprotected int interfereCount = 15;",
                "-\t// \u00e5\u00ad\u0097\u00e4\u00bd\u0093",
                "+\t/** \u00e5\u00ad\u0097\u00e4\u00bd\u0093 */",
                " \tprotected Font font;",
                "-\t// \u00e9\u00aa\u008c\u00e8\u00af\u0081\u00e7\u00a0\u0081",
                "+\t/** \u00e9\u00aa\u008c\u00e8\u00af\u0081\u00e7\u00a0\u0081 */",
                " \tprotected String code;",
                "-\t// \u00e9\u00aa\u008c\u00e8\u00af\u0081\u00e7\u00a0\u0081\u00e5\u009b\u00be\u00e7\u0089\u0087",
                "+\t/** \u00e9\u00aa\u008c\u00e8\u00af\u0081\u00e7\u00a0\u0081\u00e5\u009b\u00be\u00e7\u0089\u0087 */",
                " \tprotected byte[] imageBytes;",
                "@@ -45,2 +46,4 @@ public abstract class AbstractCaptcha implements ICaptcha {",
                " \tprotected CodeGenerator generator;",
                "+\t/** \u00e8\u0083\u008c\u00e6\u0099\u00af\u00e8\u0089\u00b2 */",
                "+\tprotected Color background;",
                "@@ -191,2 +194,12 @@ public abstract class AbstractCaptcha implements ICaptcha {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e8\u0083\u008c\u00e6\u0099\u00af\u00e8\u0089\u00b2",
                "+\t * ",
                "+\t * @param background \u00e8\u0083\u008c\u00e6\u0099\u00af\u00e8\u0089\u00b2",
                "+\t * @since 4.1.22",
                "+\t */",
                "+\tpublic void setBackground(Color background) {",
                "+\t\tthis.background = background;",
                "+\t}",
                " }",
                "diff --git a/hutool-captcha/src/main/java/cn/hutool/captcha/CircleCaptcha.java b/hutool-captcha/src/main/java/cn/hutool/captcha/CircleCaptcha.java",
                "index c43304205..49d56080a 100644",
                "--- a/hutool-captcha/src/main/java/cn/hutool/captcha/CircleCaptcha.java",
                "+++ b/hutool-captcha/src/main/java/cn/hutool/captcha/CircleCaptcha.java",
                "@@ -12,2 +12,3 @@ import java.util.concurrent.ThreadLocalRandom;",
                " import cn.hutool.core.util.ImageUtil;",
                "+import cn.hutool.core.util.ObjectUtil;",
                " import cn.hutool.core.util.RandomUtil;",
                "@@ -60,3 +61,3 @@ public class CircleCaptcha extends AbstractCaptcha {",
                " \t\tfinal BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);",
                "-\t\tfinal Graphics2D g = ImageUtil.createGraphics(image, Color.WHITE);",
                "+\t\tfinal Graphics2D g = ImageUtil.createGraphics(image, ObjectUtil.defaultIfNull(this.background, Color.WHITE));",
                "diff --git a/hutool-captcha/src/main/java/cn/hutool/captcha/LineCaptcha.java b/hutool-captcha/src/main/java/cn/hutool/captcha/LineCaptcha.java",
                "index 0d1d24adf..a4cf00292 100644",
                "--- a/hutool-captcha/src/main/java/cn/hutool/captcha/LineCaptcha.java",
                "+++ b/hutool-captcha/src/main/java/cn/hutool/captcha/LineCaptcha.java",
                "@@ -2,2 +2,3 @@ package cn.hutool.captcha;",
                "+import java.awt.Color;",
                " import java.awt.FontMetrics;",
                "@@ -9,2 +10,3 @@ import java.util.concurrent.ThreadLocalRandom;",
                " import cn.hutool.core.util.ImageUtil;",
                "+import cn.hutool.core.util.ObjectUtil;",
                " import cn.hutool.core.util.RandomUtil;",
                "@@ -49,3 +51,3 @@ public class LineCaptcha extends AbstractCaptcha {",
                " \t\tfinal ThreadLocalRandom random = RandomUtil.getRandom();",
                "-\t\tfinal Graphics2D g = ImageUtil.createGraphics(image, ImageUtil.randomColor(random));",
                "+\t\tfinal Graphics2D g = ImageUtil.createGraphics(image, ObjectUtil.defaultIfNull(this.background, Color.WHITE));",
                "diff --git a/hutool-captcha/src/main/java/cn/hutool/captcha/ShearCaptcha.java b/hutool-captcha/src/main/java/cn/hutool/captcha/ShearCaptcha.java",
                "index b7b1fab90..c4049ff2d 100644",
                "--- a/hutool-captcha/src/main/java/cn/hutool/captcha/ShearCaptcha.java",
                "+++ b/hutool-captcha/src/main/java/cn/hutool/captcha/ShearCaptcha.java",
                "@@ -9,2 +9,3 @@ import java.awt.image.BufferedImage;",
                " import cn.hutool.core.util.ImageUtil;",
                "+import cn.hutool.core.util.ObjectUtil;",
                " import cn.hutool.core.util.RandomUtil;",
                "@@ -56,4 +57,4 @@ public class ShearCaptcha extends AbstractCaptcha {",
                " \tpublic Image createImage(String code) {",
                "-\t\tfinal BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);",
                "-\t\tfinal Graphics2D g = ImageUtil.createGraphics(image, Color.WHITE);",
                "+\t\tfinal BufferedImage image = new BufferedImage(this.width, this.height, BufferedImage.TYPE_INT_RGB);",
                "+\t\tfinal Graphics2D g = ImageUtil.createGraphics(image, ObjectUtil.defaultIfNull(this.background, Color.WHITE));"
            ],
            "changed_files": [
                "hutool-captcha/src/main/java/cn/hutool/captcha/AbstractCaptcha.java",
                "hutool-captcha/src/main/java/cn/hutool/captcha/CircleCaptcha.java",
                "hutool-captcha/src/main/java/cn/hutool/captcha/LineCaptcha.java",
                "hutool-captcha/src/main/java/cn/hutool/captcha/ShearCaptcha.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "07b0ba22c396f66844f08655f5ed9b00218dd5cc",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1534334081,
            "hunks": 2,
            "message": "add SoapRequest",
            "diff": [
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/webservice/SoapRequest.java b/hutool-http/src/main/java/cn/hutool/http/webservice/SoapRequest.java",
                "new file mode 100644",
                "index 000000000..b0832b202",
                "--- /dev/null",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/webservice/SoapRequest.java",
                "@@ -0,0 +1,146 @@",
                "+package cn.hutool.http.webservice;",
                "+",
                "+import java.nio.charset.Charset;",
                "+import java.util.LinkedHashMap;",
                "+import java.util.Map;",
                "+",
                "+import cn.hutool.core.util.CharsetUtil;",
                "+import cn.hutool.core.util.StrUtil;",
                "+import cn.hutool.http.HttpRequest;",
                "+",
                "+/**",
                "+ * SOAP\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e5\u009c\u00b0\u00e5\u009d\u0080\u00e3\u0080\u0081\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e3\u0080\u0081\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e7\u00ad\u0089\u00e4\u00bf\u00a1\u00e6\u0081\u00af",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.8",
                "+ */",
                "+public class SoapRequest {",
                "+\t",
                "+\tprivate static final String TEXT_XML_CONTENT_TYPE = \"text/xml;charset=\";",
                "+\t",
                "+\t/** \u00e7\u00bc\u0096\u00e7\u00a0\u0081 */",
                "+\tprivate Charset charset = CharsetUtil.CHARSET_UTF_8;",
                "+\t/** Webservice\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e5\u009c\u00b0\u00e5\u009d\u0080 */",
                "+\tprivate String url;",
                "+\t/** \u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e7\u00a9\u00ba\u00e9\u0097\u00b4 */",
                "+\tprivate String namespace;",
                "+\t/** \u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e6\u0096\u00b9\u00e6\u00b3\u0095 */",
                "+\tprivate String method;",
                "+\t/** \u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e5\u008f\u0082\u00e6\u0095\u00b0 */",
                "+\tprivate Map<String, String> params;",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param url Webservice\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e5\u009c\u00b0\u00e5\u009d\u0080",
                "+\t * @param namespace \u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e7\u00a9\u00ba\u00e9\u0097\u00b4",
                "+\t */",
                "+\tpublic SoapRequest(String url, String namespace) {",
                "+\t\tthis.url = url;",
                "+\t\tthis.namespace = namespace;",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                "+\t * @param charset \u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                "+\t * @return this",
                "+\t */",
                "+\tpublic SoapRequest setCharset(Charset charset) {",
                "+\t\tthis.charset = charset;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00aeWebservice\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e5\u009c\u00b0\u00e5\u009d\u0080",
                "+\t * @param url Webservice\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e5\u009c\u00b0\u00e5\u009d\u0080",
                "+\t * @return this",
                "+\t */",
                "+\tpublic SoapRequest setUrl(String url) {",
                "+\t\tthis.url = url;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e7\u00a9\u00ba\u00e9\u0097\u00b4",
                "+\t * @param namespace \u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e7\u00a9\u00ba\u00e9\u0097\u00b4",
                "+\t * @return this",
                "+\t */",
                "+\tpublic SoapRequest setNamespace(String namespace) {",
                "+\t\tthis.namespace = namespace;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t * @param method \u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t * @return this",
                "+\t */",
                "+\tpublic SoapRequest setMethod(String method) {",
                "+\t\tthis.method = method;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae \u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e5\u008f\u0082\u00e6\u0095\u00b0",
                "+\t * @param params \u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e5\u008f\u0082\u00e6\u0095\u00b0",
                "+\t * @return this",
                "+\t */",
                "+\tpublic SoapRequest setParams(Map<String, String> params) {",
                "+\t\tthis.params = params;",
                "+\t\treturn this;",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u00a2\u009e\u00e5\u008a\u00a0\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e5\u008f\u0082\u00e6\u0095\u00b0",
                "+\t * @param name \u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e5\u0090\u008d",
                "+\t * @param value \u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e5\u0080\u00bc",
                "+\t * @return this",
                "+\t */",
                "+\tpublic SoapRequest addParam(String name, String value) {",
                "+\t\tMap<String, String> params = this.params;",
                "+\t\tif(null == params) {",
                "+\t\t\tparams = new LinkedHashMap<>();",
                "+\t\t\tthis.params = params;",
                "+\t\t}",
                "+\t\tparams.put(name, value);",
                "+\t\treturn this;",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u0089\u00a7\u00e8\u00a1\u008cWebservice\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e5\u008f\u0091\u00e9\u0080\u0081SOAP\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "+\t * @return \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e7\u00bb\u0093\u00e6\u009e\u009c",
                "+\t */",
                "+\tpublic String execute() {",
                "+\t\treturn HttpRequest.post(this.url).body(toSoapXml()).contentType(getXmlContentType()).execute().body();",
                "+\t}",
                "+\t",
                "+\t//------------------------------------------------------------------------------------------------------------------------- Private method start",
                "+\t/**",
                "+\t * \u00e7\u0094\u009f\u00e6\u0088\u0090SOAP\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e7\u009a\u0084XML\u00e6\u0096\u0087\u00e6\u009c\u00ac",
                "+\t * @return SOAP\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e7\u009a\u0084XML\u00e6\u0096\u0087\u00e6\u009c\u00ac",
                "+\t */",
                "+\tprivate String toSoapXml() {",
                "+\t\tStringBuilder sb = StrUtil.builder();",
                "+\t\tsb.append(\"<soap:Envelope xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\\n\");",
                "+\t\tsb.append(\"  <soap:Body>\\n\");",
                "+\t\t// \u00e4\u00bc\u00a0\u00e5\u0085\u00a5method\u00e5\u0092\u008cnamespace",
                "+\t\tsb.append(\"    <\").append(this.method).append(\" xmlns=\\\"\").append(this.namespace).append(\"\\\">\\n\");",
                "+\t\t// \u00e5\u008a\u00a8\u00e6\u0080\u0081\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e5\u0092\u008c\u00e5\u0080\u00bc",
                "+\t\tfor (Map.Entry<String, String> entry : this.params.entrySet()) {",
                "+\t\t\tsb.append(\"      <\").append(entry.getKey()).append(\">\").append(entry.getValue()).append(\"</\").append(entry.getKey()).append(\">\\n\");",
                "+\t\t}",
                "+\t\tsb.append(\"    </\").append(this.method).append(\">\\n\");",
                "+\t\tsb.append(\"  </soap:Body>\\n\");",
                "+\t\tsb.append(\"</soap:Envelope>\");",
                "+\t\treturn sb.toString();",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e7\u009a\u0084Content-Type\u00ef\u00bc\u008c\u00e9\u0099\u0084\u00e5\u008a\u00a0\u00e7\u00bc\u0096\u00e7\u00a0\u0081\u00e4\u00bf\u00a1\u00e6\u0081\u00af",
                "+\t * @return \u00e8\u00af\u00b7\u00e6\u00b1\u0082\u00e7\u009a\u0084Content-Type",
                "+\t */",
                "+\tprivate String getXmlContentType() {",
                "+\t\treturn TEXT_XML_CONTENT_TYPE.concat(this.charset.toString());",
                "+\t}",
                "+\t//------------------------------------------------------------------------------------------------------------------------- Private method end",
                "+}",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/webservice/package-info.java b/hutool-http/src/main/java/cn/hutool/http/webservice/package-info.java",
                "new file mode 100644",
                "index 000000000..c37934c93",
                "--- /dev/null",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/webservice/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Webservice\u00e5\u00ae\u00a2\u00e6\u0088\u00b7\u00e7\u00ab\u00af\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.http.webservice;",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "hutool-http/src/main/java/cn/hutool/http/webservice/SoapRequest.java",
                "hutool-http/src/main/java/cn/hutool/http/webservice/package-info.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "9d383509535ee194ef4774e6b60bcf0d7f99824d",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537924911,
            "hunks": 17,
            "message": "add cut method",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/img/Img.java b/hutool-core/src/main/java/cn/hutool/core/img/Img.java",
                "index c70727758..0f4f46c53 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/img/Img.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/img/Img.java",
                "@@ -12,2 +12,3 @@ import java.awt.Toolkit;",
                " import java.awt.color.ColorSpace;",
                "+import java.awt.geom.Ellipse2D;",
                " import java.awt.image.BufferedImage;",
                "@@ -31,2 +32,3 @@ import cn.hutool.core.util.ImageUtil;",
                " import cn.hutool.core.util.NumberUtil;",
                "+import cn.hutool.core.util.ObjectUtil;",
                " import cn.hutool.core.util.StrUtil;",
                "@@ -122,3 +124,3 @@ public class Img {",
                "-\t\tfinal BufferedImage srcImg = this.srcImage;",
                "+\t\tfinal BufferedImage srcImg = getValidSrcImg();",
                " \t\tint width = NumberUtil.mul(Integer.toString(srcImg.getWidth()), Float.toString(scale)).intValue(); // \u00e5\u00be\u0097\u00e5\u0088\u00b0\u00e6\u00ba\u0090\u00e5\u009b\u00be\u00e5\u00ae\u00bd",
                "@@ -137,3 +139,3 @@ public class Img {",
                " \tpublic Img scale(int width, int height) {",
                "-\t\tfinal BufferedImage srcImg = this.srcImage;",
                "+\t\tfinal BufferedImage srcImg = getValidSrcImg();",
                " \t\tint srcHeight = srcImg.getHeight();",
                "@@ -166,3 +168,3 @@ public class Img {",
                " \tpublic Img scale(int width, int height, Color fixedColor) {",
                "-\t\tfinal BufferedImage srcImage = this.srcImage;",
                "+\t\tfinal BufferedImage srcImage = getValidSrcImg();",
                " \t\tint srcHeight = srcImage.getHeight(null);",
                "@@ -186,3 +188,3 @@ public class Img {",
                " \t\t}",
                "-\t\tfinal BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);",
                "+\t\tfinal BufferedImage image = new BufferedImage(width, height, getTypeInt());",
                " \t\tGraphics2D g = image.createGraphics();",
                "@@ -208,3 +210,3 @@ public class Img {",
                " \t * @param rectangle \u00e7\u009f\u00a9\u00e5\u00bd\u00a2\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e7\u009f\u00a9\u00e5\u00bd\u00a2\u00e5\u008c\u00ba\u00e5\u009f\u009f\u00e7\u009a\u0084x\u00ef\u00bc\u008cy\u00ef\u00bc\u008cwidth\u00ef\u00bc\u008cheight",
                "-\t * @return {@link BufferedImage}",
                "+\t * @return this",
                " \t */",
                "@@ -216,2 +218,39 @@ public class Img {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u009b\u00be\u00e5\u0083\u008f\u00e5\u0088\u0087\u00e5\u0089\u00b2\u00e4\u00b8\u00ba\u00e5\u009c\u0086\u00e5\u00bd\u00a2(\u00e6\u008c\u0089\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e8\u00b5\u00b7\u00e7\u0082\u00b9\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e5\u0092\u008c\u00e5\u008d\u008a\u00e5\u00be\u0084\u00e5\u0088\u0087\u00e5\u0089\u00b2)\u00ef\u00bc\u008c\u00e5\u00a1\u00ab\u00e5\u0085\u0085\u00e6\u00bb\u00a1\u00e6\u0095\u00b4\u00e4\u00b8\u00aa\u00e5\u009b\u00be\u00e7\u0089\u0087\u00ef\u00bc\u0088\u00e7\u009b\u00b4\u00e5\u00be\u0084\u00e5\u008f\u0096\u00e9\u0095\u00bf\u00e5\u00ae\u00bd\u00e6\u009c\u0080\u00e5\u00b0\u008f\u00e5\u0080\u00bc\u00ef\u00bc\u0089",
                "+\t * ",
                "+\t * @param x \u00e5\u008e\u009f\u00e5\u009b\u00be\u00e7\u009a\u0084x\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e4\u00bd\u008d\u00e7\u00bd\u00ae",
                "+\t * @param y \u00e5\u008e\u009f\u00e5\u009b\u00be\u00e7\u009a\u0084y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e4\u00bd\u008d\u00e7\u00bd\u00ae",
                "+\t * @return this",
                "+\t * @since 4.1.15",
                "+\t */",
                "+\tpublic Img cut(int x, int y) {",
                "+\t\treturn cut(x, y, -1);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u009b\u00be\u00e5\u0083\u008f\u00e5\u0088\u0087\u00e5\u0089\u00b2\u00e4\u00b8\u00ba\u00e5\u009c\u0086\u00e5\u00bd\u00a2(\u00e6\u008c\u0089\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e8\u00b5\u00b7\u00e7\u0082\u00b9\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e5\u0092\u008c\u00e5\u008d\u008a\u00e5\u00be\u0084\u00e5\u0088\u0087\u00e5\u0089\u00b2)",
                "+\t * ",
                "+\t * @param x \u00e5\u008e\u009f\u00e5\u009b\u00be\u00e7\u009a\u0084x\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e4\u00bd\u008d\u00e7\u00bd\u00ae",
                "+\t * @param y \u00e5\u008e\u009f\u00e5\u009b\u00be\u00e7\u009a\u0084y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e4\u00bd\u008d\u00e7\u00bd\u00ae",
                "+\t * @param radius \u00e5\u008d\u008a\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e5\u00b0\u008f\u00e4\u00ba\u008e0\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e5\u00a1\u00ab\u00e5\u0085\u0085\u00e6\u00bb\u00a1\u00e6\u0095\u00b4\u00e4\u00b8\u00aa\u00e5\u009b\u00be\u00e7\u0089\u0087\u00ef\u00bc\u0088\u00e7\u009b\u00b4\u00e5\u00be\u0084\u00e5\u008f\u0096\u00e9\u0095\u00bf\u00e5\u00ae\u00bd\u00e6\u009c\u0080\u00e5\u00b0\u008f\u00e5\u0080\u00bc\u00ef\u00bc\u0089",
                "+\t * @return this",
                "+\t * @since 4.1.15",
                "+\t */",
                "+\tpublic Img cut(int x, int y, int radius) {",
                "+\t\tfinal BufferedImage srcImage = getValidSrcImg();",
                "+\t\tfinal int width = srcImage.getWidth();",
                "+\t\tfinal int height = srcImage.getHeight();",
                "+\t\t",
                "+\t\t",
                "+\t\tfinal int diameter = radius > 0 ? radius * 2 : Math.min(width, height);",
                "+\t\tfinal BufferedImage destImage = new BufferedImage(diameter, diameter, BufferedImage.TYPE_INT_ARGB);",
                "+\t\tfinal Graphics2D g = destImage.createGraphics();",
                "+\t\tg.setClip(new Ellipse2D.Double(0, 0, diameter, diameter));",
                "+\t\tg.drawImage(srcImage, x, y, null);",
                "+\t\tg.dispose();",
                "+\t\tthis.destImage = destImage;",
                "+\t\treturn this;",
                "+\t}",
                "@@ -224,3 +263,3 @@ public class Img {",
                " \t\tfinal ColorConvertOp op = new ColorConvertOp(ColorSpace.getInstance(ColorSpace.CS_GRAY), null);",
                "-\t\tthis.destImage = op.filter(this.srcImage, null);",
                "+\t\tthis.destImage = op.filter(getValidSrcImg(), null);",
                " \t\treturn this;",
                "@@ -234,3 +273,3 @@ public class Img {",
                " \tpublic Img binary() {",
                "-\t\tthis.destImage = ImageUtil.copyImage(this.srcImage, BufferedImage.TYPE_BYTE_BINARY);",
                "+\t\tthis.destImage = ImageUtil.copyImage(getValidSrcImg(), BufferedImage.TYPE_BYTE_BINARY);",
                " \t\treturn this;",
                "@@ -251,3 +290,3 @@ public class Img {",
                " \tpublic Img pressText(String pressText, Color color, Font font, int x, int y, float alpha) {",
                "-\t\tfinal BufferedImage destImage = this.srcImage;",
                "+\t\tfinal BufferedImage destImage = getValidSrcImg();",
                " \t\tfinal Graphics2D g = destImage.createGraphics();",
                "@@ -299,3 +338,3 @@ public class Img {",
                " \tpublic Img pressImage(Image pressImg,Rectangle rectangle, float alpha) {",
                "-\t\tfinal BufferedImage destImg = this.srcImage;",
                "+\t\tfinal BufferedImage destImg = getValidSrcImg();",
                "@@ -315,3 +354,3 @@ public class Img {",
                " \tpublic Img rotate(int degree) {",
                "-\t\tfinal BufferedImage image = this.srcImage;",
                "+\t\tfinal BufferedImage image = getValidSrcImg();",
                " \t\tint width = image.getWidth(null);",
                "@@ -336,3 +375,3 @@ public class Img {",
                " \tpublic Img flip() {",
                "-\t\tfinal BufferedImage image = this.srcImage;",
                "+\t\tfinal BufferedImage image = getValidSrcImg();",
                " \t\tint width = image.getWidth();",
                "@@ -390,3 +429,3 @@ public class Img {",
                " \t\tif (StrUtil.isBlank(formatName)) {",
                "-\t\t\tformatName = ImageUtil.IMAGE_TYPE_JPG;",
                "+\t\t\tformatName = this.destImageType;",
                " \t\t}",
                "@@ -440,2 +479,11 @@ public class Img {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u009c\u0089\u00e6\u0095\u0088\u00e7\u009a\u0084\u00e6\u00ba\u0090\u00e5\u009b\u00be\u00e7\u0089\u0087\u00ef\u00bc\u008c\u00e9\u00a6\u0096\u00e5\u0085\u0088\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e4\u00b8\u008a\u00e4\u00b8\u0080\u00e6\u00ac\u00a1\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e7\u009a\u0084\u00e7\u00bb\u0093\u00e6\u009e\u009c\u00e5\u009b\u00be\u00e7\u0089\u0087\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u0097\u00a0\u00e5\u0088\u0099\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\u00e7\u009a\u0084\u00e6\u00ba\u0090\u00e5\u009b\u00be\u00e7\u0089\u0087",
                "+\t * ",
                "+\t * @return \u00e6\u009c\u0089\u00e6\u0095\u0088\u00e7\u009a\u0084\u00e6\u00ba\u0090\u00e5\u009b\u00be\u00e7\u0089\u0087",
                "+\t */",
                "+\tprivate BufferedImage getValidSrcImg() {",
                "+\t\treturn ObjectUtil.defaultIfNull(this.destImage, this.srcImage);",
                "+\t}",
                " \t// ---------------------------------------------------------------------------------------------------------------- Private method end",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java",
                "index 1e1907c11..10d1a51db 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java",
                "@@ -322,2 +322,29 @@ public class ImageUtil {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u009b\u00be\u00e5\u0083\u008f\u00e5\u0088\u0087\u00e5\u0089\u00b2(\u00e6\u008c\u0089\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e8\u00b5\u00b7\u00e7\u0082\u00b9\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e5\u0092\u008c\u00e5\u00ae\u00bd\u00e9\u00ab\u0098\u00e5\u0088\u0087\u00e5\u0089\u00b2)\u00ef\u00bc\u008c\u00e5\u00a1\u00ab\u00e5\u0085\u0085\u00e6\u00bb\u00a1\u00e6\u0095\u00b4\u00e4\u00b8\u00aa\u00e5\u009b\u00be\u00e7\u0089\u0087\u00ef\u00bc\u0088\u00e7\u009b\u00b4\u00e5\u00be\u0084\u00e5\u008f\u0096\u00e9\u0095\u00bf\u00e5\u00ae\u00bd\u00e6\u009c\u0080\u00e5\u00b0\u008f\u00e5\u0080\u00bc\u00ef\u00bc\u0089",
                "+\t * ",
                "+\t * @param srcImage \u00e6\u00ba\u0090\u00e5\u009b\u00be\u00e5\u0083\u008f",
                "+\t * @param x \u00e5\u008e\u009f\u00e5\u009b\u00be\u00e7\u009a\u0084x\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e4\u00bd\u008d\u00e7\u00bd\u00ae",
                "+\t * @param y \u00e5\u008e\u009f\u00e5\u009b\u00be\u00e7\u009a\u0084y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e4\u00bd\u008d\u00e7\u00bd\u00ae",
                "+\t * @return {@link BufferedImage}",
                "+\t * @since 4.1.15",
                "+\t */",
                "+\tpublic static BufferedImage cut(Image srcImage, int x, int y) {",
                "+\t\treturn cut(srcImage, x, y, -1);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u009b\u00be\u00e5\u0083\u008f\u00e5\u0088\u0087\u00e5\u0089\u00b2(\u00e6\u008c\u0089\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e8\u00b5\u00b7\u00e7\u0082\u00b9\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e5\u0092\u008c\u00e5\u00ae\u00bd\u00e9\u00ab\u0098\u00e5\u0088\u0087\u00e5\u0089\u00b2)",
                "+\t * ",
                "+\t * @param srcImage \u00e6\u00ba\u0090\u00e5\u009b\u00be\u00e5\u0083\u008f",
                "+\t * @param x \u00e5\u008e\u009f\u00e5\u009b\u00be\u00e7\u009a\u0084x\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e4\u00bd\u008d\u00e7\u00bd\u00ae",
                "+\t * @param y \u00e5\u008e\u009f\u00e5\u009b\u00be\u00e7\u009a\u0084y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e4\u00bd\u008d\u00e7\u00bd\u00ae",
                "+\t * @param radius \u00e5\u008d\u008a\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e5\u00b0\u008f\u00e4\u00ba\u008e0\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e5\u00a1\u00ab\u00e5\u0085\u0085\u00e6\u00bb\u00a1\u00e6\u0095\u00b4\u00e4\u00b8\u00aa\u00e5\u009b\u00be\u00e7\u0089\u0087\u00ef\u00bc\u0088\u00e7\u009b\u00b4\u00e5\u00be\u0084\u00e5\u008f\u0096\u00e9\u0095\u00bf\u00e5\u00ae\u00bd\u00e6\u009c\u0080\u00e5\u00b0\u008f\u00e5\u0080\u00bc\u00ef\u00bc\u0089",
                "+\t * @return {@link BufferedImage}",
                "+\t * @since 4.1.15",
                "+\t */",
                "+\tpublic static BufferedImage cut(Image srcImage, int x, int y, int radius) {",
                "+\t\treturn Img.from(srcImage).cut(x, y, radius).getImg();",
                "+\t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/img/Img.java",
                "hutool-core/src/main/java/cn/hutool/core/util/ImageUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "411a86ecbc4e0f6b75aa73c6ebd9ab966b44aeb3",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1536765399,
            "hunks": 6,
            "message": "fix cron bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java b/hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java",
                "index 4b4483177..3abc948f5 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java",
                "@@ -6,2 +6,3 @@ import java.util.concurrent.LinkedBlockingQueue;",
                " import java.util.concurrent.RejectedExecutionHandler;",
                "+import java.util.concurrent.SynchronousQueue;",
                " import java.util.concurrent.ThreadFactory;",
                "@@ -72,3 +73,9 @@ public class ExecutorBuilder implements Builder<ThreadPoolExecutor> {",
                " \t/**",
                "-\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e9\u0098\u009f\u00e5\u0088\u0097\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e6\u009c\u00aa\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e7\u009a\u0084\u00e7\u00ba\u00bf\u00e7\u00a8\u008b",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e9\u0098\u009f\u00e5\u0088\u0097\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e6\u009c\u00aa\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e7\u009a\u0084\u00e7\u00ba\u00bf\u00e7\u00a8\u008b<br>",
                "+\t * \u00e5\u008f\u00af\u00e9\u0080\u0089\u00e9\u0098\u009f\u00e5\u0088\u0097\u00e6\u009c\u0089\u00ef\u00bc\u009a",
                "+\t * <pre>",
                "+\t * 1. SynchronousQueue    \u00e5\u00ae\u0083\u00e5\u00b0\u0086\u00e4\u00bb\u00bb\u00e5\u008a\u00a1\u00e7\u009b\u00b4\u00e6\u008e\u00a5\u00e6\u008f\u0090\u00e4\u00ba\u00a4\u00e7\u00bb\u0099\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e8\u0080\u008c\u00e4\u00b8\u008d\u00e4\u00bf\u009d\u00e6\u008c\u0081\u00e5\u00ae\u0083\u00e4\u00bb\u00ac\u00e3\u0080\u0082\u00e5\u00bd\u0093\u00e8\u00bf\u0090\u00e8\u00a1\u008c\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00b0\u008f\u00e4\u00ba\u008emaxPoolSize\u00e6\u0097\u00b6\u00e4\u00bc\u009a\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0096\u00b0\u00e7\u00ba\u00bf\u00e7\u00a8\u008b",
                "+\t * 2. LinkedBlockingQueue \u00e6\u0097\u00a0\u00e7\u0095\u008c\u00e9\u0098\u009f\u00e5\u0088\u0097\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e8\u00bf\u0090\u00e8\u00a1\u008c\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00a4\u00a7\u00e4\u00ba\u008ecorePoolSize\u00e6\u0097\u00b6\u00e5\u00a7\u008b\u00e7\u00bb\u0088\u00e6\u0094\u00be\u00e5\u0085\u00a5\u00e6\u00ad\u00a4\u00e9\u0098\u009f\u00e5\u0088\u0097\u00ef\u00bc\u008c\u00e6\u00ad\u00a4\u00e6\u0097\u00b6maximumPoolSize\u00e6\u0097\u00a0\u00e6\u0095\u0088",
                "+\t * 3. ArrayBlockingQueue  \u00e6\u009c\u0089\u00e7\u0095\u008c\u00e9\u0098\u009f\u00e5\u0088\u0097\u00ef\u00bc\u008c\u00e7\u009b\u00b8\u00e5\u00af\u00b9\u00e6\u0097\u00a0\u00e7\u0095\u008c\u00e9\u0098\u009f\u00e5\u0088\u0097\u00e6\u009c\u0089\u00e5\u0088\u00a9\u00e4\u00ba\u008e\u00e6\u008e\u00a7\u00e5\u0088\u00b6\u00e9\u0098\u009f\u00e5\u0088\u0097\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00ef\u00bc\u008c\u00e9\u0098\u009f\u00e5\u0088\u0097\u00e6\u00bb\u00a1\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e8\u00bf\u0090\u00e8\u00a1\u008c\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00b0\u008f\u00e4\u00ba\u008emaxPoolSize\u00e6\u0097\u00b6\u00e4\u00bc\u009a\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0096\u00b0\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e8\u00a7\u00a6\u00e5\u008f\u0091\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e7\u00ad\u0096\u00e7\u0095\u00a5",
                "+\t * </pre>",
                " \t * ",
                "@@ -81,2 +88,12 @@ public class ExecutorBuilder implements Builder<ThreadPoolExecutor> {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link SynchronousQueue} \u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e7\u00ad\u0089\u00e5\u00be\u0085\u00e9\u0098\u009f\u00e5\u0088\u0097",
                "+\t * ",
                "+\t * @return this",
                "+\t * @since 4.1.11",
                "+\t */",
                "+\tpublic ExecutorBuilder useSynchronousQueue() {",
                "+\t\treturn setWorkQueue(new SynchronousQueue<Runnable>());",
                "+\t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/thread/GlobalThreadPool.java b/hutool-core/src/main/java/cn/hutool/core/thread/GlobalThreadPool.java",
                "index 972869081..15c09a1a6 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/thread/GlobalThreadPool.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/thread/GlobalThreadPool.java",
                "@@ -5,3 +5,2 @@ import java.util.concurrent.ExecutorService;",
                " import java.util.concurrent.Future;",
                "-import java.util.concurrent.SynchronousQueue;",
                "@@ -32,3 +31,3 @@ public class GlobalThreadPool {",
                " \t\t}",
                "-\t\texecutor = ExecutorBuilder.create().setWorkQueue(new SynchronousQueue<Runnable>()).build();",
                "+\t\texecutor = ExecutorBuilder.create().useSynchronousQueue().build();",
                " \t}",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java b/hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java",
                "index 3c9cb1d9c..2060e43b5 100644",
                "--- a/hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java",
                "@@ -355,3 +355,3 @@ public class Scheduler {",
                "-\t\t\tthis.threadExecutor = ExecutorBuilder.create().setThreadFactory(//",
                "+\t\t\tthis.threadExecutor = ExecutorBuilder.create().useSynchronousQueue().setThreadFactory(//",
                " \t\t\t\t\tThreadFactoryBuilder.create().setNamePrefix(\"hutool-cron-\").setDaemon(this.daemon).build()//"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java",
                "hutool-core/src/main/java/cn/hutool/core/thread/GlobalThreadPool.java",
                "hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "0888ec1423dc97acca114434420cf0abfb43b5f5",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1533400022,
            "hunks": 3,
            "message": "\u00e5\u008a\u00a0\u00e5\u0085\u00a5 AndroidSupportSSLFactory \u00e5\u00bd\u0093\u00e8\u00ae\u00be\u00e5\u00a4\u0087\u00e4\u00b8\u00ba\u00e5\u00ae\u0089\u00e5\u008d\u0093\u00e6\u0097\u00b6\u00e5\u0085\u00bc\u00e5\u00ae\u00b9\u00e4\u00bd\u008e\u00e7\u0089\u0088\u00e6\u009c\u00acAndroid\u00e4\u00b8\u008d\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e6\u009f\u0090\u00e4\u00ba\u009bSSL\u00e5\u008d\u008f\u00e8\u00ae\u00ae\u00e7\u009a\u0084\u00e9\u0097\u00ae\u00e9\u00a2\u0098",
            "diff": [
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HttpBase.java b/hutool-http/src/main/java/cn/hutool/http/HttpBase.java",
                "index 296b93f46..2a4b7ebc4 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HttpBase.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HttpBase.java",
                "@@ -14,2 +14,5 @@ import cn.hutool.core.util.CharsetUtil;",
                " import cn.hutool.core.util.StrUtil;",
                "+import cn.hutool.http.ssl.AndroidSupportSSLFactory;",
                "+",
                "+import javax.net.ssl.HttpsURLConnection;",
                "@@ -36,2 +39,17 @@ public abstract class HttpBase<T> {",
                " \tprotected byte[] bodyBytes;",
                "+",
                "+\tstatic {",
                "+",
                "+\t\tboolean isAndroid = false;",
                "+",
                "+\t\ttry {",
                "+\t\t\tisAndroid = \"Dalvik\".equals(System.getProperty(\"java.vm.name\"));",
                "+\t\t} catch(Exception ignored) {}",
                "+",
                "+\t\tif (isAndroid) {",
                "+\t\t\tHttpsURLConnection.setDefaultSSLSocketFactory(new AndroidSupportSSLFactory());",
                "+\t\t}",
                "+",
                "+\t}",
                "+",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/ssl/AndroidSupportSSLFactory.java b/hutool-http/src/main/java/cn/hutool/http/ssl/AndroidSupportSSLFactory.java",
                "new file mode 100644",
                "index 000000000..80c0ce589",
                "--- /dev/null",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/ssl/AndroidSupportSSLFactory.java",
                "@@ -0,0 +1,111 @@",
                "+package cn.hutool.http.ssl;",
                "+",
                "+import javax.net.ssl.SSLContext;",
                "+import javax.net.ssl.SSLSocket;",
                "+import javax.net.ssl.SSLSocketFactory;",
                "+import javax.net.ssl.X509TrustManager;",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.net.InetAddress;",
                "+import java.net.Socket;",
                "+import java.security.SecureRandom;",
                "+",
                "+import static cn.hutool.http.ssl.SSLSocketFactoryBuilder.*;",
                "+",
                "+/**",
                "+ * \u00e5\u0085\u00bc\u00e5\u00ae\u00b9android\u00e4\u00bd\u008e\u00e7\u0089\u0088\u00e6\u009c\u00acSSL\u00e8\u00bf\u009e\u00e6\u008e\u00a5",
                "+ * \u00e5\u0092\u00b1\u00e5\u009c\u00a8\u00e6\u00b5\u008b\u00e8\u00af\u0095HttpUrlConnection\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e5\u0080\u0099",
                "+ * \u00e5\u008f\u0091\u00e7\u008e\u00b0\u00e4\u00b8\u0080\u00e9\u0083\u00a8\u00e5\u0088\u0086\u00e6\u0089\u008b\u00e6\u009c\u00ba\u00e6\u0097\u00a0\u00e6\u00b3\u0095\u00e8\u00bf\u009e\u00e6\u008e\u00a5[GithubPage]",
                "+ *",
                "+ * \u00e6\u009c\u0080\u00e5\u0090\u008e\u00e5\u008f\u0091\u00e7\u008e\u00b0\u00e5\u008e\u009f\u00e6\u009d\u00a5\u00e6\u0098\u00af\u00e6\u009f\u0090\u00e4\u00ba\u009bSSL\u00e5\u008d\u008f\u00e8\u00ae\u00ae\u00e6\u00b2\u00a1\u00e6\u009c\u0089\u00e5\u00bc\u0080\u00e5\u0090\u00af",
                "+ * @author MikaGuraNTK",
                "+ */",
                "+public class AndroidSupportSSLFactory extends SSLSocketFactory {",
                "+",
                "+\tprivate static String[] protocols = {SSLv3, TLSv1, TLSv11, TLSv12};",
                "+\t// Android\u00e4\u00bd\u008e\u00e7\u0089\u0088\u00e6\u009c\u00ac\u00e4\u00b8\u008d\u00e9\u0087\u008d\u00e7\u00bd\u00ae\u00e7\u009a\u0084\u00e8\u00af\u009d\u00e6\u009f\u0090\u00e4\u00ba\u009bSSL\u00e8\u00ae\u00bf\u00e9\u0097\u00ae\u00e5\u00b0\u00b1\u00e4\u00bc\u009a\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5",
                "+",
                "+\tprivate SSLSocketFactory base;",
                "+",
                "+\tpublic AndroidSupportSSLFactory() {",
                "+",
                "+\t\tsuper();",
                "+\t\ttry {",
                "+\t\t\tSSLContext context = SSLContext.getInstance(\"SSL\");",
                "+\t\t\tcontext.init(null, new X509TrustManager[]{new DefaultTrustManager()}, new SecureRandom());",
                "+\t\t\tbase = context.getSocketFactory();",
                "+\t\t} catch (Exception ignored) {",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic String[] getDefaultCipherSuites() {",
                "+\t\treturn base.getDefaultCipherSuites();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic String[] getSupportedCipherSuites() {",
                "+\t\treturn base.getSupportedCipherSuites();",
                "+\t}",
                "+",
                "+",
                "+\t@Override",
                "+\tpublic Socket createSocket(Socket socket, InputStream inputStream, boolean b) throws IOException {",
                "+\t\tSSLSocket sslSocket = (SSLSocket) base.createSocket(socket,inputStream,b);",
                "+\t\tresetProtocols(sslSocket);",
                "+\t\treturn sslSocket;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Socket createSocket() throws IOException {",
                "+\t\tSSLSocket sslSocket = (SSLSocket) base.createSocket();",
                "+\t\tresetProtocols(sslSocket);",
                "+\t\treturn sslSocket;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic SSLSocket createSocket(Socket s, String host, int port, boolean autoClose) throws IOException {",
                "+\t\tSSLSocket socket = (SSLSocket) base.createSocket(s, host, port, autoClose);",
                "+\t\tresetProtocols(socket);",
                "+\t\treturn socket;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Socket createSocket(String host, int port) throws IOException {",
                "+\t\tSSLSocket socket = (SSLSocket) base.createSocket(host, port);",
                "+\t\tresetProtocols(socket);",
                "+\t\treturn socket;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Socket createSocket(String host, int port, InetAddress localHost, int localPort) throws IOException {",
                "+",
                "+\t\tSSLSocket socket = (SSLSocket) base.createSocket(host, port, localHost, localPort);",
                "+\t\tresetProtocols(socket);",
                "+\t\treturn socket;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Socket createSocket(InetAddress host, int port) throws IOException {",
                "+",
                "+\t\tSSLSocket socket = (SSLSocket) base.createSocket(host, port);",
                "+\t\tresetProtocols(socket);",
                "+\t\treturn socket;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Socket createSocket(InetAddress address, int port, InetAddress localAddress, int localPort) throws IOException {",
                "+",
                "+\t\tSSLSocket socket = (SSLSocket) base.createSocket(address, port, localAddress, localPort);",
                "+\t\tresetProtocols(socket);",
                "+\t\treturn socket;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e9\u0087\u008d\u00e7\u00bd\u00ae\u00e5\u008f\u00af\u00e7\u0094\u00a8\u00e7\u00ad\u0096\u00e7\u0095\u00a5",
                "+\t */",
                "+\tprivate void resetProtocols(SSLSocket socket) {",
                "+\t\tsocket.setEnabledProtocols(protocols);",
                "+\t}",
                "+",
                "+}",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "hutool-http/src/main/java/cn/hutool/http/HttpBase.java",
                "hutool-http/src/main/java/cn/hutool/http/ssl/AndroidSupportSSLFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ed1c6b6b4432937b9afaa72ca27736c2e03cbcea",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1533823329,
            "hunks": 58,
            "message": "fix show sql and dialect",
            "diff": [
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/Db.java b/hutool-db/src/main/java/cn/hutool/db/Db.java",
                "index 73c7f3d9a..869012915 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/Db.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/Db.java",
                "@@ -85,3 +85,3 @@ public class Db extends AbstractDb {",
                " \tpublic Db(DataSource ds) {",
                "-\t\tthis(ds, DialectFactory.newDialect(ds));",
                "+\t\tthis(ds, DialectFactory.getDialect(ds));",
                " \t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/DbUtil.java b/hutool-db/src/main/java/cn/hutool/db/DbUtil.java",
                "index 1dae5216c..6e34706cb 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/DbUtil.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/DbUtil.java",
                "@@ -13,2 +13,3 @@ import javax.sql.DataSource;",
                "+import cn.hutool.core.convert.Convert;",
                " import cn.hutool.core.io.IoUtil;",
                "@@ -21,2 +22,3 @@ import cn.hutool.log.LogFactory;",
                " import cn.hutool.log.level.Level;",
                "+import cn.hutool.setting.Setting;",
                "@@ -96,3 +98,3 @@ public final class DbUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -228,2 +230,21 @@ public final class DbUtil {",
                "+\t/**",
                "+\t * \u00e4\u00bb\u008e\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u00ad\u00e8\u00af\u00bb\u00e5\u008f\u0096SQL\u00e6\u0089\u0093\u00e5\u008d\u00b0\u00e9\u0080\u0089\u00e9\u00a1\u00b9",
                "+\t * @param setting \u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @since 4.1.7",
                "+\t */",
                "+\tpublic static void setShowSqlGlobal(Setting setting) {",
                "+\t\t// \u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u008c\u0096SQL\u00e6\u0098\u00be\u00e7\u00a4\u00ba",
                "+\t\tfinal boolean isShowSql = Convert.toBool(setting.remove(\"showSql\"), false);",
                "+\t\tfinal boolean isFormatSql = Convert.toBool(setting.remove(\"formatSql\"), false);",
                "+\t\tfinal boolean isShowParams = Convert.toBool(setting.remove(\"showParams\"), false);",
                "+\t\tString sqlLevelStr = setting.remove(\"sqlLevel\");",
                "+\t\tif (null != sqlLevelStr) {",
                "+\t\t\tsqlLevelStr = sqlLevelStr.toUpperCase();",
                "+\t\t}",
                "+\t\tfinal Level level = Convert.toEnum(Level.class, sqlLevelStr, Level.DEBUG);",
                "+\t\tlog.debug(\"Show sql: [{}], format sql: [{}], show params: [{}], level: [{}]\", isShowSql, isFormatSql, isShowParams, level);",
                "+\t\tsetShowSqlGlobal(isShowSql, isFormatSql, isShowParams, level);",
                "+\t}",
                "+",
                " \t/**",
                "@@ -234,6 +255,7 @@ public final class DbUtil {",
                " \t * @param isShowParams \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0089\u0093\u00e5\u008d\u00b0\u00e5\u008f\u0082\u00e6\u0095\u00b0",
                "-\t * @since 4.0.3",
                "+\t * @param level SQL\u00e6\u0089\u0093\u00e5\u008d\u00b0\u00e5\u0088\u00b0\u00e7\u009a\u0084\u00e6\u0097\u00a5\u00e5\u00bf\u0097\u00e7\u00ad\u0089\u00e7\u00ba\u00a7",
                "+\t * @since 4.1.7",
                " \t */",
                "-\tpublic static void setShowSqlGlobal(boolean isShowSql, boolean isFormatSql, boolean isShowParams) {",
                "-\t\tSqlLog.INSTASNCE.init(isShowSql, isFormatSql, isShowParams, Level.DEBUG);",
                "+\tpublic static void setShowSqlGlobal(boolean isShowSql, boolean isFormatSql, boolean isShowParams, Level level) {",
                "+\t\tSqlLog.INSTASNCE.init(isShowSql, isFormatSql, isShowParams, level);",
                " \t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/Session.java b/hutool-db/src/main/java/cn/hutool/db/Session.java",
                "index 1ead2467c..ad83de0e6 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/Session.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/Session.java",
                "@@ -70,3 +70,3 @@ public class Session extends AbstractDb implements Closeable {",
                " \tpublic Session(DataSource ds) {",
                "-\t\tthis(ds, DialectFactory.newDialect(ds));",
                "+\t\tthis(ds, DialectFactory.getDialect(ds));",
                " \t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/SqlConnRunner.java b/hutool-db/src/main/java/cn/hutool/db/SqlConnRunner.java",
                "index 2344b06ee..3cfb5c945 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/SqlConnRunner.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/SqlConnRunner.java",
                "@@ -26,3 +26,2 @@ import cn.hutool.db.sql.SqlUtil;",
                " import cn.hutool.db.sql.Wrapper;",
                "-import cn.hutool.log.StaticLog;",
                "@@ -55,3 +54,3 @@ public class SqlConnRunner{",
                " \tpublic static SqlConnRunner create(DataSource ds) {",
                "-\t\treturn new SqlConnRunner(DialectFactory.newDialect(ds));",
                "+\t\treturn new SqlConnRunner(DialectFactory.getDialect(ds));",
                " \t}",
                "@@ -74,4 +73,2 @@ public class SqlConnRunner{",
                " \tpublic SqlConnRunner(Dialect dialect) {",
                "-\t\tStaticLog.debug(\"Use Dialect: [{}].\", dialect.getClass().getSimpleName());",
                "-\t\t",
                " \t\tthis.dialect = dialect;",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/SqlRunner.java b/hutool-db/src/main/java/cn/hutool/db/SqlRunner.java",
                "index f4e90e9a1..902784aa5 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/SqlRunner.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/SqlRunner.java",
                "@@ -82,3 +82,3 @@ public class SqlRunner extends AbstractDb{",
                " \tpublic SqlRunner(DataSource ds) {",
                "-\t\tthis(ds, DialectFactory.newDialect(ds));",
                "+\t\tthis(ds, DialectFactory.getDialect(ds));",
                " \t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/dialect/DialectFactory.java b/hutool-db/src/main/java/cn/hutool/db/dialect/DialectFactory.java",
                "index f46cb32e1..b9fe9f6c9 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/dialect/DialectFactory.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/dialect/DialectFactory.java",
                "@@ -3,2 +3,4 @@ package cn.hutool.db.dialect;",
                " import java.sql.Connection;",
                "+import java.util.Map;",
                "+import java.util.concurrent.ConcurrentHashMap;",
                "@@ -15,2 +17,3 @@ import cn.hutool.db.dialect.impl.SqlServer2012Dialect;",
                " import cn.hutool.db.dialect.impl.Sqlite3Dialect;",
                "+import cn.hutool.log.StaticLog;",
                "@@ -23,3 +26,3 @@ import cn.hutool.db.dialect.impl.Sqlite3Dialect;",
                " public class DialectFactory {",
                "-",
                "+\t",
                " \t/** JDBC \u00e9\u00a9\u00b1\u00e5\u008a\u00a8 MySQL */",
                "@@ -48,2 +51,5 @@ public class DialectFactory {",
                " \tpublic final static String DRIVER_DERBY_EMBEDDED = \"org.apache.derby.jdbc.EmbeddedDriver\";",
                "+\t",
                "+\tprivate static Map<DataSource, Dialect> dialectPool = new ConcurrentHashMap<>();",
                "+\tprivate static Object lock = new Object();",
                "@@ -51,3 +57,3 @@ public class DialectFactory {",
                " \t}",
                "-",
                "+\t",
                " \t/**",
                "@@ -60,2 +66,15 @@ public class DialectFactory {",
                " \tpublic static Dialect newDialect(String driverName) {",
                "+\t\tfinal Dialect dialect = internalNewDialect(driverName);",
                "+\t\tStaticLog.debug(\"Use Dialect: [{}].\", dialect.getClass().getSimpleName());",
                "+\t\treturn dialect;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e9\u00a9\u00b1\u00e5\u008a\u00a8\u00e5\u0090\u008d\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0096\u00b9\u00e8\u00a8\u0080<br>",
                "+\t * \u00e9\u00a9\u00b1\u00e5\u008a\u00a8\u00e5\u0090\u008d\u00e6\u0098\u00af\u00e4\u00b8\u008d\u00e5\u0088\u0086\u00e5\u008c\u00ba\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00e5\u0086\u0099\u00e5\u00ae\u008c\u00e5\u0085\u00a8\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e7\u009a\u0084",
                "+\t * ",
                "+\t * @param driverName JDBC\u00e9\u00a9\u00b1\u00e5\u008a\u00a8\u00e7\u00b1\u00bb\u00e5\u0090\u008d",
                "+\t * @return \u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                "+\t */",
                "+\tprivate static Dialect internalNewDialect(String driverName) {",
                " \t\tif (StrUtil.isNotBlank(driverName)) {",
                "@@ -75,3 +94,2 @@ public class DialectFactory {",
                " \t\t}",
                "-",
                " \t\t// \u00e6\u0097\u00a0\u00e6\u00b3\u0095\u00e8\u00af\u0086\u00e5\u0088\u00ab\u00e5\u008f\u00af\u00e6\u0094\u00af\u00e6\u008c\u0081\u00e7\u009a\u0084\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e4\u00bd\u00bf\u00e7\u0094\u00a8ANSI\u00e6\u0096\u00b9\u00e8\u00a8\u0080\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e5\u0085\u00bc\u00e5\u00ae\u00b9\u00e5\u00a4\u00a7\u00e9\u0083\u00a8\u00e5\u0088\u0086SQL\u00e8\u00af\u00ad\u00e5\u008f\u00a5",
                "@@ -118,2 +136,21 @@ public class DialectFactory {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u0085\u00b1\u00e4\u00ba\u00ab\u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                "+\t * @param ds \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090\u00ef\u00bc\u008c\u00e6\u00af\u008f\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e5\u0094\u00af\u00e4\u00b8\u0080\u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                "+\t * @return {@link Dialect}\u00e6\u0096\u00b9\u00e8\u00a8\u0080",
                "+\t */",
                "+\tpublic static Dialect getDialect(DataSource ds) {",
                "+\t\tDialect dialect = dialectPool.get(ds);",
                "+\t\tif(null == dialect) {",
                "+\t\t\tsynchronized (lock) {",
                "+\t\t\t\tdialect = dialectPool.get(ds);",
                "+\t\t\t\tif(null == dialect) {",
                "+\t\t\t\t\tdialect = newDialect(ds);",
                "+\t\t\t\t\tdialectPool.put(ds, dialect);",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn dialect;",
                "+\t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/DSFactory.java b/hutool-db/src/main/java/cn/hutool/db/ds/DSFactory.java",
                "index 6944c32a8..f41c72271 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/DSFactory.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/DSFactory.java",
                "@@ -6,2 +6,3 @@ import cn.hutool.core.io.resource.NoResourceException;",
                " import cn.hutool.core.util.StrUtil;",
                "+import cn.hutool.db.DbUtil;",
                " import cn.hutool.db.ds.c3p0.C3p0DSFactory;",
                "@@ -31,11 +32,11 @@ public abstract class DSFactory {",
                " \tprotected static final String DEFAULT_DB_SETTING_PATH2 = \"db.setting\";",
                "-\t",
                "+",
                " \t/** \u00e5\u0088\u00ab\u00e5\u0090\u008d\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e5\u0090\u008d\u00ef\u00bc\u009aURL */",
                "-\tpublic static final String[] KEY_ALIAS_URL = {\"url\", \"jdbcUrl\"};",
                "+\tpublic static final String[] KEY_ALIAS_URL = { \"url\", \"jdbcUrl\" };",
                " \t/** \u00e5\u0088\u00ab\u00e5\u0090\u008d\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e5\u0090\u008d\u00ef\u00bc\u009a\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u0090\u008d */",
                "-\tpublic static final String[] KEY_ALIAS_USER = {\"user\", \"username\"};",
                "+\tpublic static final String[] KEY_ALIAS_USER = { \"user\", \"username\" };",
                " \t/** \u00e5\u0088\u00ab\u00e5\u0090\u008d\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e5\u0090\u008d\u00ef\u00bc\u009a\u00e5\u00af\u0086\u00e7\u00a0\u0081 */",
                "-\tpublic static final String[] KEY_ALIAS_PASSWORD = {\"password\", \"pass\"};",
                "+\tpublic static final String[] KEY_ALIAS_PASSWORD = { \"password\", \"pass\" };",
                " \t/** \u00e5\u0088\u00ab\u00e5\u0090\u008d\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e5\u0090\u008d\u00ef\u00bc\u009a\u00e9\u00a9\u00b1\u00e5\u008a\u00a8\u00e5\u0090\u008d */",
                "-\tpublic static final String[] KEY_ALIAS_DRIVER = {\"driver\", \"driverClassName\"};",
                "+\tpublic static final String[] KEY_ALIAS_DRIVER = { \"driver\", \"driverClassName\" };",
                "@@ -60,3 +61,3 @@ public abstract class DSFactory {",
                " \t\t\t} catch (NoResourceException e) {",
                "-\t\t\t\t//\u00e5\u00b0\u009d\u00e8\u00af\u0095ClassPath\u00e4\u00b8\u008b\u00e7\u009b\u00b4\u00e6\u008e\u00a5\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t\t\t\t// \u00e5\u00b0\u009d\u00e8\u00af\u0095ClassPath\u00e4\u00b8\u008b\u00e7\u009b\u00b4\u00e6\u008e\u00a5\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                " \t\t\t\ttry {",
                "@@ -68,7 +69,12 @@ public abstract class DSFactory {",
                " \t\t}",
                "+",
                "+\t\t//\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008eSQL\u00e6\u0089\u0093\u00e5\u008d\u00b0",
                "+\t\tDbUtil.setShowSqlGlobal(setting);",
                "+",
                " \t\tthis.setting = setting;",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e6\u00b7\u00bb\u00e5\u008a\u00a0\u00e9\u0085\u008d\u00e7\u00bd\u00ae\u00e9\u00a1\u00b9",
                "+\t * ",
                " \t * @return Setting",
                "@@ -191,2 +197,3 @@ public abstract class DSFactory {",
                " \t * \u00e9\u0087\u008d\u00e6\u0096\u00b0\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e5\u0085\u00a8\u00e5\u00b1\u0080\u00e7\u009a\u0084\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00ba\u0090\u00e5\u00b7\u00a5\u00e5\u008e\u0082\u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u008f\u00af\u00e5\u009c\u00a8\u00e4\u00bb\u00a5\u00e4\u00b8\u008b\u00e4\u00b8\u00a4\u00e7\u00a7\u008d\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00e4\u00b8\u008b\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00ef\u00bc\u009a",
                "+\t * ",
                " \t * <pre>",
                "@@ -215,3 +222,3 @@ public abstract class DSFactory {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -228,3 +235,3 @@ public abstract class DSFactory {",
                " \t\t} catch (NoClassDefFoundError e) {",
                "-\t\t\t//ignore",
                "+\t\t\t// ignore",
                " \t\t}",
                "@@ -233,3 +240,3 @@ public abstract class DSFactory {",
                " \t\t} catch (NoClassDefFoundError e) {",
                "-\t\t\t//ignore",
                "+\t\t\t// ignore",
                " \t\t}",
                "@@ -238,3 +245,3 @@ public abstract class DSFactory {",
                " \t\t} catch (NoClassDefFoundError e) {",
                "-\t\t\t//ignore",
                "+\t\t\t// ignore",
                " \t\t}",
                "@@ -243,3 +250,3 @@ public abstract class DSFactory {",
                " \t\t} catch (NoClassDefFoundError e) {",
                "-\t\t\t//ignore",
                "+\t\t\t// ignore",
                " \t\t}",
                "@@ -248,3 +255,3 @@ public abstract class DSFactory {",
                " \t\t} catch (NoClassDefFoundError e) {",
                "-\t\t\t//ignore",
                "+\t\t\t// ignore",
                " \t\t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/c3p0/C3p0DSFactory.java b/hutool-db/src/main/java/cn/hutool/db/ds/c3p0/C3p0DSFactory.java",
                "index 9a8e563fb..5dd1b42f5 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/c3p0/C3p0DSFactory.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/c3p0/C3p0DSFactory.java",
                "@@ -11,6 +11,4 @@ import com.mchange.v2.c3p0.ComboPooledDataSource;",
                " import cn.hutool.core.collection.CollectionUtil;",
                "-import cn.hutool.core.convert.Convert;",
                " import cn.hutool.core.util.StrUtil;",
                " import cn.hutool.db.DbRuntimeException;",
                "-import cn.hutool.db.DbUtil;",
                " import cn.hutool.db.dialect.DriverUtil;",
                "@@ -95,8 +93,2 @@ public class C3p0DSFactory extends DSFactory {",
                "-\t\t// \u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u008c\u0096SQL\u00e6\u0098\u00be\u00e7\u00a4\u00ba",
                "-\t\tfinal boolean isShowSql = Convert.toBool(config.remove(\"showSql\"), false);",
                "-\t\tfinal boolean isFormatSql = Convert.toBool(config.remove(\"formatSql\"), false);",
                "-\t\tfinal boolean isShowParams = Convert.toBool(config.remove(\"showParams\"), false);",
                "-\t\tDbUtil.setShowSqlGlobal(isShowSql, isFormatSql, isShowParams);",
                "-",
                " \t\tfinal ComboPooledDataSource ds = new ComboPooledDataSource();",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/dbcp/DbcpDSFactory.java b/hutool-db/src/main/java/cn/hutool/db/ds/dbcp/DbcpDSFactory.java",
                "index bdb5b2e71..031162bd0 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/dbcp/DbcpDSFactory.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/dbcp/DbcpDSFactory.java",
                "@@ -11,3 +11,2 @@ import org.apache.commons.dbcp2.BasicDataSource;",
                " import cn.hutool.core.collection.CollectionUtil;",
                "-import cn.hutool.core.convert.Convert;",
                " import cn.hutool.core.io.IoUtil;",
                "@@ -15,3 +14,2 @@ import cn.hutool.core.util.StrUtil;",
                " import cn.hutool.db.DbRuntimeException;",
                "-import cn.hutool.db.DbUtil;",
                " import cn.hutool.db.dialect.DriverUtil;",
                "@@ -96,8 +94,2 @@ public class DbcpDSFactory extends DSFactory {",
                "-\t\t// \u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u008c\u0096SQL\u00e6\u0098\u00be\u00e7\u00a4\u00ba",
                "-\t\tfinal boolean isShowSql = Convert.toBool(config.remove(\"showSql\"), false);",
                "-\t\tfinal boolean isFormatSql = Convert.toBool(config.remove(\"formatSql\"), false);",
                "-\t\tfinal boolean isShowParams = Convert.toBool(config.remove(\"showParams\"), false);",
                "-\t\tDbUtil.setShowSqlGlobal(isShowSql, isFormatSql, isShowParams);",
                "-",
                " \t\tfinal BasicDataSource ds = new BasicDataSource();",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/druid/DruidDSFactory.java b/hutool-db/src/main/java/cn/hutool/db/ds/druid/DruidDSFactory.java",
                "index 8be54d129..e5757bebb 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/druid/DruidDSFactory.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/druid/DruidDSFactory.java",
                "@@ -13,3 +13,2 @@ import com.alibaba.druid.pool.DruidDataSource;",
                " import cn.hutool.core.collection.CollectionUtil;",
                "-import cn.hutool.core.convert.Convert;",
                " import cn.hutool.core.io.IoUtil;",
                "@@ -17,3 +16,2 @@ import cn.hutool.core.util.StrUtil;",
                " import cn.hutool.db.DbRuntimeException;",
                "-import cn.hutool.db.DbUtil;",
                " import cn.hutool.db.ds.DSFactory;",
                "@@ -97,8 +95,2 @@ public class DruidDSFactory extends DSFactory {",
                "-\t\t// \u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u008c\u0096SQL\u00e6\u0098\u00be\u00e7\u00a4\u00ba",
                "-\t\tfinal boolean isShowSql = Convert.toBool(config.remove(\"showSql\"), false);",
                "-\t\tfinal boolean isFormatSql = Convert.toBool(config.remove(\"formatSql\"), false);",
                "-\t\tfinal boolean isShowParams = Convert.toBool(config.remove(\"showParams\"), false);",
                "-\t\tDbUtil.setShowSqlGlobal(isShowSql, isFormatSql, isShowParams);",
                "-",
                " \t\tfinal DruidDataSource ds = new DruidDataSource();",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/hikari/HikariDSFactory.java b/hutool-db/src/main/java/cn/hutool/db/ds/hikari/HikariDSFactory.java",
                "index 2625ba05c..5676b370f 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/hikari/HikariDSFactory.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/hikari/HikariDSFactory.java",
                "@@ -13,3 +13,2 @@ import com.zaxxer.hikari.HikariDataSource;",
                " import cn.hutool.core.collection.CollectionUtil;",
                "-import cn.hutool.core.convert.Convert;",
                " import cn.hutool.core.io.IoUtil;",
                "@@ -17,3 +16,2 @@ import cn.hutool.core.util.StrUtil;",
                " import cn.hutool.db.DbRuntimeException;",
                "-import cn.hutool.db.DbUtil;",
                " import cn.hutool.db.ds.DSFactory;",
                "@@ -101,8 +99,2 @@ public class HikariDSFactory extends DSFactory {",
                "-\t\t// \u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u008c\u0096SQL\u00e6\u0098\u00be\u00e7\u00a4\u00ba",
                "-\t\tfinal boolean isShowSql = Convert.toBool(config.remove(\"showSql\"), false);",
                "-\t\tfinal boolean isFormatSql = Convert.toBool(config.remove(\"formatSql\"), false);",
                "-\t\tfinal boolean isShowParams = Convert.toBool(config.remove(\"showParams\"), false);",
                "-\t\tDbUtil.setShowSqlGlobal(isShowSql, isFormatSql, isShowParams);",
                "-",
                " \t\t// \u00e8\u00a7\u0084\u00e8\u008c\u0083\u00e5\u008c\u0096\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e5\u0090\u008d",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/pooled/DbSetting.java b/hutool-db/src/main/java/cn/hutool/db/ds/pooled/DbSetting.java",
                "index 1d1104014..22283c702 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/pooled/DbSetting.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/pooled/DbSetting.java",
                "@@ -3,6 +3,4 @@ package cn.hutool.db.ds.pooled;",
                " import cn.hutool.core.collection.CollectionUtil;",
                "-import cn.hutool.core.convert.Convert;",
                " import cn.hutool.core.util.StrUtil;",
                " import cn.hutool.db.DbRuntimeException;",
                "-import cn.hutool.db.DbUtil;",
                " import cn.hutool.db.dialect.DriverUtil;",
                "@@ -55,8 +53,2 @@ public class DbSetting {",
                "-\t\t// \u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u008c\u0096SQL\u00e6\u0098\u00be\u00e7\u00a4\u00ba",
                "-\t\tfinal boolean isShowSql = Convert.toBool(config.remove(\"showSql\"), false);",
                "-\t\tfinal boolean isFormatSql = Convert.toBool(config.remove(\"formatSql\"), false);",
                "-\t\tfinal boolean isShowParams = Convert.toBool(config.remove(\"showParams\"), false);",
                "-\t\tDbUtil.setShowSqlGlobal(isShowSql, isFormatSql, isShowParams);",
                "-",
                " \t\tfinal DbConfig dbConfig = new DbConfig();",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/simple/SimpleDataSource.java b/hutool-db/src/main/java/cn/hutool/db/ds/simple/SimpleDataSource.java",
                "index 089600946..d25fdc73e 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/simple/SimpleDataSource.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/simple/SimpleDataSource.java",
                "@@ -8,6 +8,4 @@ import java.sql.SQLException;",
                " import cn.hutool.core.collection.CollectionUtil;",
                "-import cn.hutool.core.convert.Convert;",
                " import cn.hutool.core.util.StrUtil;",
                " import cn.hutool.db.DbRuntimeException;",
                "-import cn.hutool.db.DbUtil;",
                " import cn.hutool.db.dialect.DriverUtil;",
                "@@ -85,8 +83,2 @@ public class SimpleDataSource extends AbstractDataSource {",
                "-\t\t// \u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u008c\u0096SQL\u00e6\u0098\u00be\u00e7\u00a4\u00ba",
                "-\t\tfinal boolean isShowSql = Convert.toBool(config.remove(\"showSql\"), false);",
                "-\t\tfinal boolean isFormatSql = Convert.toBool(config.remove(\"formatSql\"), false);",
                "-\t\tfinal boolean isShowParams = Convert.toBool(config.remove(\"showParams\"), false);",
                "-\t\tDbUtil.setShowSqlGlobal(isShowSql, isFormatSql, isShowParams);",
                "-",
                " \t\tinit(//",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/ds/tomcat/TomcatDSFactory.java b/hutool-db/src/main/java/cn/hutool/db/ds/tomcat/TomcatDSFactory.java",
                "index e359b251d..ef6f1f1d5 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/ds/tomcat/TomcatDSFactory.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/ds/tomcat/TomcatDSFactory.java",
                "@@ -11,6 +11,4 @@ import cn.hutool.core.collection.CollUtil;",
                " import cn.hutool.core.collection.CollectionUtil;",
                "-import cn.hutool.core.convert.Convert;",
                " import cn.hutool.core.util.StrUtil;",
                " import cn.hutool.db.DbRuntimeException;",
                "-import cn.hutool.db.DbUtil;",
                " import cn.hutool.db.dialect.DriverUtil;",
                "@@ -102,8 +100,2 @@ public class TomcatDSFactory extends DSFactory {",
                "-\t\t// \u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u008c\u0096SQL\u00e6\u0098\u00be\u00e7\u00a4\u00ba",
                "-\t\tfinal boolean isShowSql = Convert.toBool(config.remove(\"showSql\"), false);",
                "-\t\tfinal boolean isFormatSql = Convert.toBool(config.remove(\"formatSql\"), false);",
                "-\t\tfinal boolean isShowParams = Convert.toBool(config.remove(\"showParams\"), false);",
                "-\t\tDbUtil.setShowSqlGlobal(isShowSql, isFormatSql, isShowParams);",
                "-",
                " \t\tfinal PoolProperties poolProps = new PoolProperties();"
            ],
            "changed_files": [
                "hutool-db/src/main/java/cn/hutool/db/Db.java",
                "hutool-db/src/main/java/cn/hutool/db/DbUtil.java",
                "hutool-db/src/main/java/cn/hutool/db/Session.java",
                "hutool-db/src/main/java/cn/hutool/db/SqlConnRunner.java",
                "hutool-db/src/main/java/cn/hutool/db/SqlRunner.java",
                "hutool-db/src/main/java/cn/hutool/db/dialect/DialectFactory.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/DSFactory.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/c3p0/C3p0DSFactory.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/dbcp/DbcpDSFactory.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/druid/DruidDSFactory.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/hikari/HikariDSFactory.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/pooled/DbSetting.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/simple/SimpleDataSource.java",
                "hutool-db/src/main/java/cn/hutool/db/ds/tomcat/TomcatDSFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "e62087c64222cb0522234dd9ae5cdb94a4256a7a",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537181244,
            "hunks": 45,
            "message": "Unify FTP",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/IdUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/IdUtil.java",
                "index c41105771..741fa1ab4 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/IdUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/IdUtil.java",
                "@@ -58,3 +58,3 @@ public class IdUtil {",
                " \t}",
                "-",
                "+\t",
                " \t/**",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/ftp/AbstractFtp.java b/hutool-extra/src/main/java/cn/hutool/extra/ftp/AbstractFtp.java",
                "new file mode 100644",
                "index 000000000..953ee11dc",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/ftp/AbstractFtp.java",
                "@@ -0,0 +1,159 @@",
                "+package cn.hutool.extra.ftp;",
                "+",
                "+import java.io.Closeable;",
                "+import java.io.File;",
                "+import java.nio.charset.Charset;",
                "+import java.util.List;",
                "+",
                "+import cn.hutool.core.collection.CollUtil;",
                "+import cn.hutool.core.io.FileUtil;",
                "+import cn.hutool.core.util.CharsetUtil;",
                "+import cn.hutool.core.util.StrUtil;",
                "+",
                "+/**",
                "+ * \u00e6\u008a\u00bd\u00e8\u00b1\u00a1FTP\u00e7\u00b1\u00bb\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e9\u0080\u009a\u00e7\u0094\u00a8\u00e7\u009a\u0084FTP\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.14",
                "+ */",
                "+public abstract class AbstractFtp implements Closeable {",
                "+\t",
                "+\tpublic static final Charset DEFAULT_CHARSET = CharsetUtil.CHARSET_UTF_8 ;",
                "+",
                "+\tprotected Charset charset;",
                "+",
                "+\t/**",
                "+\t * \u00e6\u0089\u0093\u00e5\u00bc\u0080\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * ",
                "+\t * @param directory directory",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0089\u0093\u00e5\u00bc\u0080\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t */",
                "+\tpublic abstract boolean cd(String directory);",
                "+",
                "+\t/**",
                "+\t * \u00e6\u0089\u0093\u00e5\u00bc\u0080\u00e4\u00b8\u008a\u00e7\u00ba\u00a7\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * ",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0089\u0093\u00e5\u00bc\u0080\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * @since 4.0.5",
                "+\t */",
                "+\tpublic boolean toParent() {",
                "+\t\treturn cd(\"..\");",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00bf\u009c\u00e7\u00a8\u008b\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u0088\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u0089",
                "+\t * ",
                "+\t * @return \u00e8\u00bf\u009c\u00e7\u00a8\u008b\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t */",
                "+\tpublic abstract String pwd();",
                "+",
                "+\t/**",
                "+\t * \u00e5\u009c\u00a8\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e8\u00bf\u009c\u00e7\u00a8\u008b\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u0088\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u0089\u00e4\u00b8\u008b\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0096\u00b0\u00e7\u009a\u0084\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * ",
                "+\t * @param dir \u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0090\u008d",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0088\u0090\u00e5\u008a\u009f",
                "+\t */",
                "+\tpublic abstract boolean mkdir(String dir);",
                "+",
                "+\t/**",
                "+\t * \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00ad\u0098\u00e5\u009c\u00a8",
                "+\t * ",
                "+\t * @param path \u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * @param fileOrDirName \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0090\u008d",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00ad\u0098\u00e5\u009c\u00a8",
                "+\t */",
                "+\tpublic boolean exist(String path) {",
                "+\t\tfinal String fileName = FileUtil.getName(path);",
                "+\t\tfinal String dir = StrUtil.removeSuffix(path, fileName);",
                "+\t\tfinal List<String> names = ls(dir);",
                "+\t\treturn containsIgnoreCase(names, fileName);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e9\u0081\u008d\u00e5\u008e\u0086\u00e6\u009f\u0090\u00e4\u00b8\u00aa\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u008b\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0092\u008c\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e4\u00bc\u009a\u00e9\u0080\u0092\u00e5\u00bd\u0092\u00e9\u0081\u008d\u00e5\u008e\u0086",
                "+\t * ",
                "+\t * @param path \u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e9\u0081\u008d\u00e5\u008e\u0086\u00e7\u009a\u0084\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * @return \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0092\u008c\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t */",
                "+\tpublic abstract List<String> ls(String path);",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u00a0\u00e9\u0099\u00a4\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u008b\u00e7\u009a\u0084\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param path \u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t * @param fileName \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00ad\u0098\u00e5\u009c\u00a8",
                "+\t */",
                "+\tpublic abstract boolean delFile(String path);",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u00a0\u00e9\u0099\u00a4\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9\u00e5\u008f\u008a\u00e5\u0085\u00b6\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9\u00e4\u00b8\u008b\u00e7\u009a\u0084\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param dirPath \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t * @return boolean \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0088\u00a0\u00e9\u0099\u00a4\u00e6\u0088\u0090\u00e5\u008a\u009f",
                "+\t */",
                "+\tpublic abstract boolean delDir(String dirPath);",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9\u00e5\u008f\u008a\u00e5\u0085\u00b6\u00e7\u0088\u00b6\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e4\u00bb\u008e\u00e6\u00a0\u00b9\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00ef\u00bc\u008c\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e5\u00ae\u008c\u00e6\u0088\u0090\u00e5\u0090\u008e\u00e5\u009b\u009e\u00e5\u0088\u00b0\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e7\u009a\u0084\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * ",
                "+\t * @param dir \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e7\u00bb\u009d\u00e5\u00af\u00b9\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t */",
                "+\tpublic void mkDirs(String dir) {",
                "+\t\tfinal String[] dirs = dir.split(\"[\\\\\\\\/]\");",
                "+",
                "+\t\tfinal String now = pwd();",
                "+\t\tcd(\"/\");",
                "+\t\tfor (int i = 0; i < dirs.length; i++) {",
                "+\t\t\tif (StrUtil.isNotEmpty(dirs[i])) {",
                "+\t\t\t\tif (false == cd(dirs[i])) {",
                "+\t\t\t\t\tmkdir(dirs[i]);",
                "+\t\t\t\t\tcd(dirs[i]);",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\t// \u00e5\u0088\u0087\u00e6\u008d\u00a2\u00e5\u009b\u009e\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t\tcd(now);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00b0\u0086\u00e6\u009c\u00ac\u00e5\u009c\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u008a\u00e4\u00bc\u00a0\u00e5\u0088\u00b0\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u009c\u008d\u00e5\u008a\u00a1\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00e4\u00b8\u00badestPath\u00ef\u00bc\u008c\u00e8\u008b\u00a5destPath\u00e4\u00b8\u00ba\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00e5\u00b0\u0086\u00e4\u00b8\u008esrcFilePath\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d\u00e7\u009b\u00b8\u00e5\u0090\u008c\u00e3\u0080\u0082\u00e8\u00a6\u0086\u00e7\u009b\u0096\u00e6\u00a8\u00a1\u00e5\u00bc\u008f",
                "+\t * ",
                "+\t * @param srcFilePath \u00e6\u009c\u00ac\u00e5\u009c\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t * @param destFile \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0088\u0090\u00e5\u008a\u009f",
                "+\t */",
                "+\tpublic abstract boolean upload(String srcFilePath, File destFile);",
                "+",
                "+\t/**",
                "+\t * \u00e4\u00b8\u008b\u00e8\u00bd\u00bd\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param path \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t * @param outFile \u00e8\u00be\u0093\u00e5\u0087\u00ba\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t */",
                "+\tpublic abstract void download(String path, File outFile);",
                "+",
                "+\t// ---------------------------------------------------------------------------------------------------------------------------------------- Private method start",
                "+\t/**",
                "+\t * \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00ef\u00bc\u008c\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00e5\u0086\u0099",
                "+\t * ",
                "+\t * @param names \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0090\u008d\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * @param nameToFind \u00e8\u00a6\u0081\u00e6\u009f\u00a5\u00e6\u0089\u00be\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0090\u008d",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab",
                "+\t */",
                "+\tprivate static boolean containsIgnoreCase(List<String> names, String nameToFind) {",
                "+\t\tif (CollUtil.isEmpty(names)) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                "+\t\tif (StrUtil.isEmpty(nameToFind)) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                "+\t\tfor (String name : names) {",
                "+\t\t\tif (nameToFind.equalsIgnoreCase(name)) {",
                "+\t\t\t\treturn true;",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn false;",
                "+\t}",
                "+\t// ---------------------------------------------------------------------------------------------------------------------------------------- Private method end",
                "+}",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java b/hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java",
                "index 018880961..e637fb174 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java",
                "@@ -2,3 +2,2 @@ package cn.hutool.extra.ftp;",
                "-import java.io.Closeable;",
                " import java.io.File;",
                "@@ -8,2 +7,3 @@ import java.io.OutputStream;",
                " import java.nio.charset.Charset;",
                "+import java.util.List;",
                "@@ -13,2 +13,3 @@ import org.apache.commons.net.ftp.FTPReply;",
                "+import cn.hutool.core.collection.CollUtil;",
                " import cn.hutool.core.io.FileUtil;",
                "@@ -26,3 +27,3 @@ import cn.hutool.core.util.StrUtil;",
                "  */",
                "-public class Ftp implements Closeable {",
                "+public class Ftp extends AbstractFtp {",
                "@@ -118,2 +119,3 @@ public class Ftp implements Closeable {",
                " \t */",
                "+\t@Override",
                " \tpublic boolean cd(String directory) {",
                "@@ -127,38 +129,38 @@ public class Ftp implements Closeable {",
                " \t}",
                "-",
                "+\t",
                " \t/**",
                "-\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e5\u00a4\u009a\u00e5\u00b1\u0082\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u009c\u0089ftp\u00e6\u009c\u008d\u00e5\u008a\u00a1\u00e5\u0099\u00a8\u00e5\u00b7\u00b2\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e8\u00af\u00a5\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e4\u00b8\u008d\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u0097\u00a0\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u0088\u009b\u00e5\u00bb\u00ba",
                "+\t * \u00e8\u00bf\u009c\u00e7\u00a8\u008b\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                " \t * ",
                "-\t * @param remote \u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0088\u0090\u00e5\u008a\u009f",
                "+\t * @return \u00e8\u00bf\u009c\u00e7\u00a8\u008b\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * @since 4.1.14",
                " \t */",
                "-\tpublic boolean mkdir(String remote) {",
                "-\t\tboolean success = true;",
                "-\t\tString directory = StrUtil.addSuffixIfNot(remote, StrUtil.SLASH);",
                "-\t\t// \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e8\u00bf\u009c\u00e7\u00a8\u008b\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e9\u0080\u0092\u00e5\u00bd\u0092\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e8\u00bf\u009c\u00e7\u00a8\u008b\u00e6\u009c\u008d\u00e5\u008a\u00a1\u00e5\u0099\u00a8\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "-\t\tif (false == directory.equalsIgnoreCase(StrUtil.SLASH) && false == cd(directory)) {",
                "-\t\t\tint start = directory.startsWith(directory) ? 1 : 0;",
                "-\t\t\tint end = directory.indexOf(start, start);",
                "-\t\t\tString path = \"\";",
                "-\t\t\tString paths = \"\";",
                "-\t\t\tString subDirectory;",
                "-\t\t\twhile (true) {",
                "-\t\t\t\tsubDirectory = remote.substring(start, end);",
                "-\t\t\t\tpath = StrUtil.format(\"{}/{}\", path, subDirectory);",
                "-\t\t\t\tif (false == existFile(path)) {",
                "-\t\t\t\t\tmakeDirectory(subDirectory);",
                "-\t\t\t\t}",
                "-\t\t\t\tcd(subDirectory);",
                "-\t\t\t\tpaths = StrUtil.format(\"{}/{}\", paths, subDirectory);",
                "-\t\t\t\tstart = end + 1;",
                "-\t\t\t\tend = directory.indexOf(StrUtil.SLASH, start);",
                "-\t\t\t\t// \u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e5\u00ae\u008c\u00e6\u00af\u0095",
                "-\t\t\t\tif (end <= start) {",
                "-\t\t\t\t\tbreak;",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "+\t@Override",
                "+\tpublic String pwd() {",
                "+\t\ttry {",
                "+\t\t\treturn client.printWorkingDirectory();",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new FtpException(e);",
                " \t\t}",
                "-\t\treturn success;",
                " \t}",
                "-",
                "+\t",
                "+\t@Override",
                "+\tpublic List<String> ls(String path) {",
                "+\t\ttry {",
                "+\t\t\treturn CollUtil.toList(this.client.listNames(path));",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new FtpException(e);",
                "+\t\t}",
                "+\t}",
                "+\t",
                "+\t@Override",
                "+\tpublic boolean mkdir(String dir) {",
                "+\t\tboolean flag = true;",
                "+\t\ttry {",
                "+\t\t\tflag = this.client.makeDirectory(dir);",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new FtpException(e);",
                "+\t\t}",
                "+\t\treturn flag;",
                "+\t}",
                "+\t",
                " \t/**",
                "@@ -182,13 +184,44 @@ public class Ftp implements Closeable {",
                "-\t/**",
                "-\t * \u00e5\u0088\u00a0\u00e9\u0099\u00a4\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u008b\u00e7\u009a\u0084\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "-\t * ",
                "-\t * @param path \u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "-\t * @param fileName \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00ad\u0098\u00e5\u009c\u00a8",
                "-\t */",
                "-\tpublic boolean del(String path, String fileName) {",
                "-\t\tcd(path);",
                "+\t@Override",
                "+\tpublic boolean delFile(String path) {",
                "+\t\tfinal String pwd = pwd();",
                "+\t\tfinal String fileName = FileUtil.getName(path);",
                "+\t\tfinal String dir = StrUtil.removeSuffix(path, fileName);",
                "+\t\tcd(dir);",
                "+\t\tboolean isSuccess;",
                " \t\ttry {",
                "-\t\t\treturn client.deleteFile(fileName);",
                "+\t\t\tisSuccess = client.deleteFile(fileName);",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new FtpException(e);",
                "+\t\t}",
                "+\t\tcd(pwd);",
                "+\t\treturn isSuccess;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic boolean delDir(String dirPath) {",
                "+\t\tFTPFile[] dirs;",
                "+\t\ttry {",
                "+\t\t\tdirs = client.listDirectories(dirPath);",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new FtpException(e);",
                "+\t\t}",
                "+\t\tString name;",
                "+\t\tString childPath;",
                "+\t\tfor (FTPFile ftpFile : dirs) {",
                "+\t\t\tname = ftpFile.getName();",
                "+\t\t\tchildPath = StrUtil.format(\"{}/{}\", dirPath, name);",
                "+\t\t\tif(ftpFile.isDirectory()) {",
                "+\t\t\t\t//\u00e4\u00b8\u008a\u00e7\u00ba\u00a7\u00e5\u0092\u008c\u00e6\u009c\u00ac\u00e7\u00ba\u00a7\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e9\u0099\u00a4\u00e5\u00a4\u0096",
                "+\t\t\t\tif (false == name.equals(\".\") && false == name.equals(\"..\")) {",
                "+\t\t\t\t\tdelDir(childPath);",
                "+\t\t\t\t}",
                "+\t\t\t}else {",
                "+\t\t\t\tdelFile(childPath);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\t",
                "+\t\t//\u00e5\u0088\u00a0\u00e9\u0099\u00a4\u00e7\u00a9\u00ba\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t\ttry {",
                "+\t\t\treturn this.client.removeDirectory(dirPath);",
                " \t\t} catch (IOException e) {",
                "@@ -205,2 +238,3 @@ public class Ftp implements Closeable {",
                " \t */",
                "+\t@Override",
                " \tpublic boolean upload(String path, File file) {",
                "@@ -240,3 +274,3 @@ public class Ftp implements Closeable {",
                " \t\t}",
                "-\t\tmkdir(path);",
                "+\t\tmkDirs(path);",
                " \t\tcd(path);",
                "@@ -248,2 +282,15 @@ public class Ftp implements Closeable {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e4\u00b8\u008b\u00e8\u00bd\u00bd\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param path \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t * @param outFile \u00e8\u00be\u0093\u00e5\u0087\u00ba\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t */",
                "+\t@Override",
                "+\tpublic void download(String path, File outFile) {",
                "+\t\tfinal String fileName = FileUtil.getName(path);",
                "+\t\tfinal String dir = StrUtil.removeSuffix(path, fileName);",
                "+\t\tdownload(dir, fileName, outFile);",
                "+\t}",
                "@@ -303,18 +350,2 @@ public class Ftp implements Closeable {",
                " \t}",
                "-",
                "-\t// ------------------------------------------------------------------------------------------------------- Private method start",
                "-\t/**",
                "-\t * @param dir \u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0090\u008d",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0088\u0090\u00e5\u008a\u009f",
                "-\t */",
                "-\tprivate boolean makeDirectory(String dir) {",
                "-\t\tboolean flag = true;",
                "-\t\ttry {",
                "-\t\t\tflag = this.client.makeDirectory(dir);",
                "-\t\t} catch (IOException e) {",
                "-\t\t\tthrow new FtpException(e);",
                "-\t\t}",
                "-\t\treturn flag;",
                "-\t}",
                "-\t// ------------------------------------------------------------------------------------------------------- Private method end",
                " }",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/ssh/Sftp.java b/hutool-extra/src/main/java/cn/hutool/extra/ssh/Sftp.java",
                "index b99a296a3..dfdd1bff3 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/ssh/Sftp.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/ssh/Sftp.java",
                "@@ -2,4 +2,5 @@ package cn.hutool.extra.ssh;",
                "-import java.io.Closeable;",
                "+import java.io.File;",
                " import java.io.IOException;",
                "+import java.nio.charset.Charset;",
                " import java.util.ArrayList;",
                "@@ -14,5 +15,6 @@ import com.jcraft.jsch.SftpException;",
                "-import cn.hutool.core.collection.CollUtil;",
                "+import cn.hutool.core.io.FileUtil;",
                " import cn.hutool.core.lang.Filter;",
                " import cn.hutool.core.util.StrUtil;",
                "+import cn.hutool.extra.ftp.AbstractFtp;",
                "@@ -31,3 +33,3 @@ import cn.hutool.core.util.StrUtil;",
                "  */",
                "-public class Sftp implements Closeable {",
                "+public class Sftp extends AbstractFtp {",
                "@@ -46,4 +48,17 @@ public class Sftp implements Closeable {",
                " \tpublic Sftp(String sshHost, int sshPort, String sshUser, String sshPass) {",
                "-\t\tthis.session = JschUtil.getSession(sshHost, sshPort, sshUser, sshPass);",
                "-\t\tthis.channel = JschUtil.openSftp(session);",
                "+\t\tthis(sshHost, sshPort, sshUser, sshPass, DEFAULT_CHARSET);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param sshHost \u00e8\u00bf\u009c\u00e7\u00a8\u008b\u00e4\u00b8\u00bb\u00e6\u009c\u00ba",
                "+\t * @param sshPort \u00e8\u00bf\u009c\u00e7\u00a8\u008b\u00e4\u00b8\u00bb\u00e6\u009c\u00ba\u00e7\u00ab\u00af\u00e5\u008f\u00a3",
                "+\t * @param sshUser \u00e8\u00bf\u009c\u00e7\u00a8\u008b\u00e4\u00b8\u00bb\u00e6\u009c\u00ba\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u0090\u008d",
                "+\t * @param sshPass \u00e8\u00bf\u009c\u00e7\u00a8\u008b\u00e4\u00b8\u00bb\u00e6\u009c\u00ba\u00e5\u00af\u0086\u00e7\u00a0\u0081",
                "+\t * @param charset \u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                "+\t * @since 4.1.14",
                "+\t */",
                "+\tpublic Sftp(String sshHost, int sshPort, String sshUser, String sshPass, Charset charset) {",
                "+\t\tthis(JschUtil.getSession(sshHost, sshPort, sshUser, sshPass), charset);",
                " \t}",
                "@@ -56,4 +71,15 @@ public class Sftp implements Closeable {",
                " \tpublic Sftp(Session session) {",
                "+\t\tthis(session, DEFAULT_CHARSET);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param session {@link Session}",
                "+\t * @param charset \u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                "+\t * @since 4.1.14",
                "+\t */",
                "+\tpublic Sftp(Session session, Charset charset) {",
                "+\t\tthis(JschUtil.openSftp(session), charset);",
                " \t\tthis.session = session;",
                "-\t\tthis.channel = JschUtil.openSftp(session);",
                " \t}",
                "@@ -64,5 +90,12 @@ public class Sftp implements Closeable {",
                " \t * @param channel {@link ChannelSftp}",
                "+\t * @param charset \u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                " \t */",
                "-\tpublic Sftp(ChannelSftp channel) {",
                "+\tpublic Sftp(ChannelSftp channel, Charset charset) {",
                "+\t\tthis.charset = charset;",
                " \t\tthis.channel = channel;",
                "+\t\ttry {",
                "+\t\t\tthis.channel.setFilenameEncoding(charset.toString());",
                "+\t\t} catch (SftpException e) {",
                "+\t\t\tthrow new JschRuntimeException(e);",
                "+\t\t}",
                " \t}",
                "@@ -70,2 +103,12 @@ public class Sftp implements Closeable {",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096SFTP\u00e9\u0080\u009a\u00e9\u0081\u0093\u00e5\u00ae\u00a2\u00e6\u0088\u00b7\u00e7\u00ab\u00af",
                "+\t * ",
                "+\t * @return \u00e9\u0080\u009a\u00e9\u0081\u0093\u00e5\u00ae\u00a2\u00e6\u0088\u00b7\u00e7\u00ab\u00af",
                "+\t * @since 4.1.14",
                "+\t */",
                "+\tpublic ChannelSftp getClient() {",
                "+\t\treturn this.channel;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -74,5 +117,7 @@ public class Sftp implements Closeable {",
                " \t * @return \u00e9\u0080\u009a\u00e9\u0081\u0093",
                "+\t * @deprecated \u00e8\u00af\u00b7\u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link #getClient()}",
                " \t */",
                "+\t@Deprecated",
                " \tpublic ChannelSftp getChannel() {",
                "-\t\treturn this.channel;",
                "+\t\treturn getClient();",
                " \t}",
                "@@ -84,2 +129,3 @@ public class Sftp implements Closeable {",
                " \t */",
                "+\t@Override",
                " \tpublic String pwd() {",
                "@@ -106,15 +152,2 @@ public class Sftp implements Closeable {",
                "-\t/**",
                "-\t * \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u009c\u00a8\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u008b\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00ad\u0098\u00e5\u009c\u00a8",
                "-\t * ",
                "-\t * @param path \u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "-\t * @param fileOrDirName \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0090\u008d",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00ad\u0098\u00e5\u009c\u00a8",
                "-\t * @since 4.0.5",
                "-\t */",
                "-\tpublic boolean exist(String path, String fileOrDirName) {",
                "-\t\tList<String> ls = ls(path);",
                "-\t\treturn containsIgnoreCase(ls, fileOrDirName);",
                "-\t}",
                "-",
                " \t/**",
                "@@ -126,2 +159,3 @@ public class Sftp implements Closeable {",
                " \t */",
                "+\t@Override",
                " \tpublic List<String> ls(String path) {",
                "@@ -191,10 +225,10 @@ public class Sftp implements Closeable {",
                "-\t/**",
                "-\t * \u00e6\u0089\u0093\u00e5\u00bc\u0080\u00e4\u00b8\u008a\u00e7\u00ba\u00a7\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "-\t * ",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0089\u0093\u00e5\u00bc\u0080\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "-\t * @since 4.0.5",
                "-\t */",
                "-\tpublic boolean toParent() {",
                "-\t\treturn cd(\"..\");",
                "+\t@Override",
                "+\tpublic boolean mkdir(String dir) {",
                "+\t\ttry {",
                "+\t\t\tthis.channel.mkdir(dir);",
                "+\t\t\treturn true;",
                "+\t\t} catch (SftpException e) {",
                "+\t\t\tthrow new JschRuntimeException(e);",
                "+\t\t}",
                " \t}",
                "@@ -214,28 +248,2 @@ public class Sftp implements Closeable {",
                " \t\t\treturn true;",
                "-\t\t} catch (SftpException e) {",
                "-\t\t\treturn false;",
                "-\t\t}",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9\u00e5\u008f\u008a\u00e5\u0085\u00b6\u00e7\u0088\u00b6\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "-\t * ",
                "-\t * @param dir \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u00a4\u00b9\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e7\u00bb\u009d\u00e5\u00af\u00b9\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "-\t */",
                "-\tpublic void mkDirs(String dir) {",
                "-\t\tfinal String[] dirs = dir.split(\"[\\\\\\\\/]\");",
                "-",
                "-\t\ttry {",
                "-\t\t\tfinal String now = channel.pwd();",
                "-\t\t\tchannel.cd(\"/\");",
                "-\t\t\tfor (int i = 0; i < dirs.length; i++) {",
                "-\t\t\t\tif (StrUtil.isNotEmpty(dirs[i])) {",
                "-\t\t\t\t\tboolean dirExists = cd(dirs[i]);",
                "-\t\t\t\t\tif (false == dirExists) {",
                "-\t\t\t\t\t\tchannel.mkdir(dirs[i]);",
                "-\t\t\t\t\t\tchannel.cd(dirs[i]);",
                "-\t\t\t\t\t}",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "-\t\t\tchannel.cd(now);",
                " \t\t} catch (SftpException e) {",
                "@@ -250,3 +258,4 @@ public class Sftp implements Closeable {",
                " \t */",
                "-\tpublic Sftp delFile(String filePath) {",
                "+\t@Override",
                "+\tpublic boolean delFile(String filePath) {",
                " \t\ttry {",
                "@@ -256,3 +265,3 @@ public class Sftp implements Closeable {",
                " \t\t}",
                "-\t\treturn this;",
                "+\t\treturn true;",
                " \t}",
                "@@ -265,2 +274,3 @@ public class Sftp implements Closeable {",
                " \t */",
                "+\t@Override",
                " \t@SuppressWarnings(\"unchecked\")",
                "@@ -303,2 +313,8 @@ public class Sftp implements Closeable {",
                "+\t@Override",
                "+\tpublic boolean upload(String srcFilePath, File destFile) {",
                "+\t\tput(srcFilePath, FileUtil.getAbsolutePath(destFile));",
                "+\t\treturn true;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -331,2 +347,7 @@ public class Sftp implements Closeable {",
                "+\t@Override",
                "+\tpublic void download(String src, File destFile) {",
                "+\t\tget(src, FileUtil.getAbsolutePath(destFile));",
                "+\t}",
                "+",
                " \t/**",
                "@@ -367,27 +388,2 @@ public class Sftp implements Closeable {",
                " \t}",
                "-",
                "-\t// ---------------------------------------------------------------------------------------------------------------------------------------- Private method start",
                "-\t/**",
                "-\t * \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00ef\u00bc\u008c\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00e5\u0086\u0099",
                "-\t * ",
                "-\t * @param names \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0090\u008d\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "-\t * @param nameToFind \u00e8\u00a6\u0081\u00e6\u009f\u00a5\u00e6\u0089\u00be\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0090\u008d",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab",
                "-\t * @since 4.0.5",
                "-\t */",
                "-\tprivate static boolean containsIgnoreCase(List<String> names, String nameToFind) {",
                "-\t\tif (CollUtil.isEmpty(names)) {",
                "-\t\t\treturn false;",
                "-\t\t}",
                "-\t\tif (StrUtil.isEmpty(nameToFind)) {",
                "-\t\t\treturn false;",
                "-\t\t}",
                "-\t\tfor (String name : names) {",
                "-\t\t\tif (nameToFind.equalsIgnoreCase(name)) {",
                "-\t\t\t\treturn true;",
                "-\t\t\t}",
                "-\t\t}",
                "-\t\treturn false;",
                "-\t}",
                "-\t// ---------------------------------------------------------------------------------------------------------------------------------------- Private method end",
                " }"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/IdUtil.java",
                "hutool-extra/src/main/java/cn/hutool/extra/ftp/AbstractFtp.java",
                "hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java",
                "hutool-extra/src/main/java/cn/hutool/extra/ssh/Sftp.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8ea4a7f8fba1093b688b25854e0bf41a8bd2b322",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1540723669,
            "hunks": 2,
            "message": "fix DateUtil.parse to support UTC",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java b/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "index 4c15a8992..52f07b3f7 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "@@ -732,2 +732,6 @@ public class DateUtil {",
                " \t\tif (length == DatePattern.NORM_DATETIME_PATTERN.length() || length == DatePattern.NORM_DATETIME_PATTERN.length() + 1) {",
                "+\t\t\tif(dateStr.contains(\"T\")) {",
                "+\t\t\t\t//UTC\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00ef\u00bc\u009a\u00e7\u00b1\u00bb\u00e4\u00bc\u00bc2018-09-13T05:34:31",
                "+\t\t\t\treturn parseUTC(dateStr);",
                "+\t\t\t}",
                " \t\t\treturn parseDateTime(dateStr);",
                "@@ -736,3 +740,3 @@ public class DateUtil {",
                " \t\t} else if (length == DatePattern.NORM_TIME_PATTERN.length() || length == DatePattern.NORM_TIME_PATTERN.length() + 1) {",
                "-\t\t\treturn parseTime(dateStr);",
                "+\t\t\treturn parseTimeToday(dateStr);",
                " \t\t} else if (length == DatePattern.NORM_DATETIME_MINUTE_PATTERN.length() || length == DatePattern.NORM_DATETIME_MINUTE_PATTERN.length() + 1) {"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ae8e8f05d06dfa5e6f4d1baf9c90bb5c8430e96e",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1536664127,
            "hunks": 6,
            "message": "add UUID",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/UUID.java b/hutool-core/src/main/java/cn/hutool/core/lang/UUID.java",
                "new file mode 100644",
                "index 000000000..7c2882905",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/UUID.java",
                "@@ -0,0 +1,426 @@",
                "+package cn.hutool.core.lang;",
                "+",
                "+import java.security.*;",
                "+",
                "+import cn.hutool.core.util.StrUtil;",
                "+",
                "+/**",
                "+ * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e9\u0080\u009a\u00e7\u0094\u00a8\u00e5\u0094\u00af\u00e4\u00b8\u0080\u00e8\u00af\u0086\u00e5\u0088\u00ab\u00e7\u00a0\u0081\u00ef\u00bc\u0088universally unique identifier\u00ef\u00bc\u0089\u00ef\u00bc\u0088UUID\u00ef\u00bc\u0089\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00ef\u00bc\u008cUUID\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e4\u00b8\u0080\u00e4\u00b8\u00aa128\u00e4\u00bd\u008d\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00e3\u0080\u0082<br>",
                "+ * \u00e6\u00ad\u00a4\u00e7\u00b1\u00bb\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e8\u0087\u00aajava.util.UUID\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e4\u00b8\u008d\u00e5\u00b8\u00a6-\u00e7\u009a\u0084UUID\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+ * ",
                "+ * <p>",
                "+ * \u00e8\u00bf\u0099\u00e4\u00ba\u009b\u00e9\u0080\u009a\u00e7\u0094\u00a8\u00e6\u00a0\u0087\u00e8\u00af\u0086\u00e7\u00ac\u00a6\u00e5\u0085\u00b7\u00e6\u009c\u0089\u00e4\u00b8\u008d\u00e5\u0090\u008c\u00e7\u009a\u0084\u00e5\u008f\u0098\u00e4\u00bd\u0093\u00e3\u0080\u0082\u00e6\u00ad\u00a4\u00e7\u00b1\u00bb\u00e7\u009a\u0084\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e6\u0093\u008d\u00e4\u00bd\u009c Leach-Salz \u00e5\u008f\u0098\u00e4\u00bd\u0093\u00ef\u00bc\u008c\u00e4\u00b8\u008d\u00e8\u00bf\u0087\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u0085\u0081\u00e8\u00ae\u00b8\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e4\u00bb\u00bb\u00e4\u00bd\u0095 UUID \u00e5\u008f\u0098\u00e4\u00bd\u0093\u00ef\u00bc\u0088\u00e5\u00b0\u0086\u00e5\u009c\u00a8\u00e4\u00b8\u008b\u00e9\u009d\u00a2\u00e8\u00bf\u009b\u00e8\u00a1\u008c\u00e6\u008f\u008f\u00e8\u00bf\u00b0\u00ef\u00bc\u0089\u00e3\u0080\u0082",
                "+ * <p>",
                "+ * ",
                "+ * \u00e5\u008f\u0098\u00e4\u00bd\u0093 2 (Leach-Salz) UUID \u00e7\u009a\u0084\u00e5\u00b8\u0083\u00e5\u00b1\u0080\u00e5\u00a6\u0082\u00e4\u00b8\u008b\u00ef\u00bc\u009a long \u00e5\u009e\u008b\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e7\u009a\u0084\u00e6\u009c\u0080\u00e9\u00ab\u0098\u00e6\u009c\u0089\u00e6\u0095\u0088\u00e4\u00bd\u008d\u00e7\u0094\u00b1\u00e4\u00bb\u00a5\u00e4\u00b8\u008b\u00e6\u0097\u00a0\u00e7\u00ac\u00a6\u00e5\u008f\u00b7\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e7\u00bb\u0084\u00e6\u0088\u0090\u00ef\u00bc\u009a",
                "+ * ",
                "+ * <pre>",
                "+ * 0xFFFFFFFF00000000 time_low",
                "+ * 0x00000000FFFF0000 time_mid",
                "+ * 0x000000000000F000 version",
                "+ * 0x0000000000000FFF time_hi",
                "+ * </pre>",
                "+ * ",
                "+ * long \u00e5\u009e\u008b\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e7\u009a\u0084\u00e6\u009c\u0080\u00e4\u00bd\u008e\u00e6\u009c\u0089\u00e6\u0095\u0088\u00e4\u00bd\u008d\u00e7\u0094\u00b1\u00e4\u00bb\u00a5\u00e4\u00b8\u008b\u00e6\u0097\u00a0\u00e7\u00ac\u00a6\u00e5\u008f\u00b7\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e7\u00bb\u0084\u00e6\u0088\u0090\u00ef\u00bc\u009a",
                "+ * ",
                "+ * <pre>",
                "+ * 0xC000000000000000 variant",
                "+ * 0x3FFF000000000000 clock_seq",
                "+ * 0x0000FFFFFFFFFFFF node",
                "+ * </pre>",
                "+ *",
                "+ * <p>",
                "+ * variant \u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba UUID \u00e5\u00b8\u0083\u00e5\u00b1\u0080\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00e3\u0080\u0082\u00e4\u00bb\u00a5\u00e4\u00b8\u008a\u00e6\u008f\u008f\u00e8\u00bf\u00b0\u00e7\u009a\u0084\u00e4\u00bd\u008d\u00e5\u00b8\u0083\u00e5\u00b1\u0080\u00e4\u00bb\u0085\u00e5\u009c\u00a8 UUID \u00e7\u009a\u0084 variant \u00e5\u0080\u00bc\u00e4\u00b8\u00ba 2\u00ef\u00bc\u0088\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba Leach-Salz \u00e5\u008f\u0098\u00e4\u00bd\u0093\u00ef\u00bc\u0089\u00e6\u0097\u00b6\u00e6\u0089\u008d\u00e6\u009c\u0089\u00e6\u0095\u0088\u00e3\u0080\u0082 *",
                "+ * <p>",
                "+ * version \u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e4\u00bf\u009d\u00e5\u00ad\u0098\u00e6\u008f\u008f\u00e8\u00bf\u00b0\u00e6\u00ad\u00a4 UUID \u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00e3\u0080\u0082\u00e6\u009c\u0089 4 \u00e7\u00a7\u008d\u00e4\u00b8\u008d\u00e5\u0090\u008c\u00e7\u009a\u0084\u00e5\u009f\u00ba\u00e6\u009c\u00ac UUID \u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u009a\u00e5\u009f\u00ba\u00e4\u00ba\u008e\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e7\u009a\u0084 UUID\u00e3\u0080\u0081DCE \u00e5\u00ae\u0089\u00e5\u0085\u00a8 UUID\u00e3\u0080\u0081\u00e5\u009f\u00ba\u00e4\u00ba\u008e\u00e5\u0090\u008d\u00e7\u00a7\u00b0\u00e7\u009a\u0084 UUID \u00e5\u0092\u008c\u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e7\u009a\u0084 UUID\u00e3\u0080\u0082<br>",
                "+ * \u00e8\u00bf\u0099\u00e4\u00ba\u009b\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e7\u009a\u0084 version \u00e5\u0080\u00bc\u00e5\u0088\u0086\u00e5\u0088\u00ab\u00e4\u00b8\u00ba 1\u00e3\u0080\u00812\u00e3\u0080\u00813 \u00e5\u0092\u008c 4\u00e3\u0080\u0082",
                "+ *",
                "+ * @since 4.1.11",
                "+ */",
                "+public final class UUID implements java.io.Serializable, Comparable<UUID> {",
                "+\tprivate static final long serialVersionUID = -1185015143654744140L;",
                "+",
                "+\t/**",
                "+\t * {@link SecureRandom} \u00e7\u009a\u0084\u00e5\u008d\u0095\u00e4\u00be\u008b",
                "+\t * ",
                "+\t * @author looly",
                "+\t *",
                "+\t */",
                "+\tprivate static class Holder {",
                "+\t\tstatic final SecureRandom numberGenerator = new SecureRandom();",
                "+\t}",
                "+",
                "+\t/** \u00e6\u00ad\u00a4UUID\u00e7\u009a\u0084\u00e6\u009c\u0080\u00e9\u00ab\u009864\u00e6\u009c\u0089\u00e6\u0095\u0088\u00e4\u00bd\u008d */",
                "+\tprivate final long mostSigBits;",
                "+",
                "+\t/** \u00e6\u00ad\u00a4UUID\u00e7\u009a\u0084\u00e6\u009c\u0080\u00e4\u00bd\u008e64\u00e6\u009c\u0089\u00e6\u0095\u0088\u00e4\u00bd\u008d */",
                "+\tprivate final long leastSigBits;",
                "+",
                "+\t/**",
                "+\t * \u00e7\u00a7\u0081\u00e6\u009c\u0089\u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param data \u00e6\u0095\u00b0\u00e6\u008d\u00ae",
                "+\t */",
                "+\tprivate UUID(byte[] data) {",
                "+\t\tlong msb = 0;",
                "+\t\tlong lsb = 0;",
                "+\t\tassert data.length == 16 : \"data must be 16 bytes in length\";",
                "+\t\tfor (int i = 0; i < 8; i++) {",
                "+\t\t\tmsb = (msb << 8) | (data[i] & 0xff);",
                "+\t\t}",
                "+\t\tfor (int i = 8; i < 16; i++) {",
                "+\t\t\tlsb = (lsb << 8) | (data[i] & 0xff);",
                "+\t\t}",
                "+\t\tthis.mostSigBits = msb;",
                "+\t\tthis.leastSigBits = lsb;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u009a\u0084\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e6\u0096\u00b0\u00e7\u009a\u0084 UUID\u00e3\u0080\u0082",
                "+\t *",
                "+\t * @param mostSigBits \u00e7\u0094\u00a8\u00e4\u00ba\u008e {@code UUID} \u00e7\u009a\u0084\u00e6\u009c\u0080\u00e9\u00ab\u0098\u00e6\u009c\u0089\u00e6\u0095\u0088 64 \u00e4\u00bd\u008d",
                "+\t * @param leastSigBits \u00e7\u0094\u00a8\u00e4\u00ba\u008e {@code UUID} \u00e7\u009a\u0084\u00e6\u009c\u0080\u00e4\u00bd\u008e\u00e6\u009c\u0089\u00e6\u0095\u0088 64 \u00e4\u00bd\u008d",
                "+\t */",
                "+\tpublic UUID(long mostSigBits, long leastSigBits) {",
                "+\t\tthis.mostSigBits = mostSigBits;",
                "+\t\tthis.leastSigBits = leastSigBits;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e7\u00b1\u00bb\u00e5\u009e\u008b 4\u00ef\u00bc\u0088\u00e4\u00bc\u00aa\u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e7\u009a\u0084\u00ef\u00bc\u0089UUID \u00e7\u009a\u0084\u00e9\u009d\u0099\u00e6\u0080\u0081\u00e5\u00b7\u00a5\u00e5\u008e\u0082\u00e3\u0080\u0082 \u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u008a\u00a0\u00e5\u00af\u0086\u00e7\u009a\u0084\u00e5\u00bc\u00ba\u00e4\u00bc\u00aa\u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e6\u0095\u00b0\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e5\u0099\u00a8\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e8\u00af\u00a5 UUID\u00e3\u0080\u0082",
                "+\t * ",
                "+\t * @return \u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e7\u009a\u0084 {@code UUID}",
                "+\t */",
                "+\tpublic static UUID randomUUID() {",
                "+\t\tfinal SecureRandom ng = Holder.numberGenerator;",
                "+",
                "+\t\tbyte[] randomBytes = new byte[16];",
                "+\t\tng.nextBytes(randomBytes);",
                "+\t\trandomBytes[6] &= 0x0f; /* clear version */",
                "+\t\trandomBytes[6] |= 0x40; /* set to version 4 */",
                "+\t\trandomBytes[8] &= 0x3f; /* clear variant */",
                "+\t\trandomBytes[8] |= 0x80; /* set to IETF variant */",
                "+\t\treturn new UUID(randomBytes);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e8\u008a\u0082\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e7\u00b1\u00bb\u00e5\u009e\u008b 3\u00ef\u00bc\u0088\u00e5\u009f\u00ba\u00e4\u00ba\u008e\u00e5\u0090\u008d\u00e7\u00a7\u00b0\u00e7\u009a\u0084\u00ef\u00bc\u0089UUID \u00e7\u009a\u0084\u00e9\u009d\u0099\u00e6\u0080\u0081\u00e5\u00b7\u00a5\u00e5\u008e\u0082\u00e3\u0080\u0082",
                "+\t *",
                "+\t * @param name \u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e6\u009e\u0084\u00e9\u0080\u00a0 UUID \u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e8\u008a\u0082\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e3\u0080\u0082",
                "+\t *",
                "+\t * @return \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e7\u009a\u0084 {@code UUID}",
                "+\t */",
                "+\tpublic static UUID nameUUIDFromBytes(byte[] name) {",
                "+\t\tMessageDigest md;",
                "+\t\ttry {",
                "+\t\t\tmd = MessageDigest.getInstance(\"MD5\");",
                "+\t\t} catch (NoSuchAlgorithmException nsae) {",
                "+\t\t\tthrow new InternalError(\"MD5 not supported\");",
                "+\t\t}",
                "+\t\tbyte[] md5Bytes = md.digest(name);",
                "+\t\tmd5Bytes[6] &= 0x0f; /* clear version */",
                "+\t\tmd5Bytes[6] |= 0x30; /* set to version 3 */",
                "+\t\tmd5Bytes[8] &= 0x3f; /* clear variant */",
                "+\t\tmd5Bytes[8] |= 0x80; /* set to IETF variant */",
                "+\t\treturn new UUID(md5Bytes);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae {@link #toString()} \u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e4\u00b8\u00ad\u00e6\u008f\u008f\u00e8\u00bf\u00b0\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e6\u00a0\u0087\u00e5\u0087\u0086\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e5\u00bd\u00a2\u00e5\u00bc\u008f\u00e5\u0088\u009b\u00e5\u00bb\u00ba{@code UUID}\u00e3\u0080\u0082",
                "+\t *",
                "+\t * @param name \u00e6\u008c\u0087\u00e5\u00ae\u009a {@code UUID} \u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @return \u00e5\u0085\u00b7\u00e6\u009c\u0089\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u0080\u00bc\u00e7\u009a\u0084 {@code UUID}",
                "+\t * @throws IllegalArgumentException \u00e5\u00a6\u0082\u00e6\u009e\u009c name \u00e4\u00b8\u008e {@link #toString} \u00e4\u00b8\u00ad\u00e6\u008f\u008f\u00e8\u00bf\u00b0\u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e5\u00bd\u00a2\u00e5\u00bc\u008f\u00e4\u00b8\u008d\u00e7\u00ac\u00a6\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e6\u00ad\u00a4\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t *",
                "+\t */",
                "+\tpublic static UUID fromString(String name) {",
                "+\t\tString[] components = name.split(\"-\");",
                "+\t\tif (components.length != 5) {",
                "+\t\t\tthrow new IllegalArgumentException(\"Invalid UUID string: \" + name);",
                "+\t\t}",
                "+\t\tfor (int i = 0; i < 5; i++) {",
                "+\t\t\tcomponents[i] = \"0x\" + components[i];",
                "+\t\t}",
                "+",
                "+\t\tlong mostSigBits = Long.decode(components[0]).longValue();",
                "+\t\tmostSigBits <<= 16;",
                "+\t\tmostSigBits |= Long.decode(components[1]).longValue();",
                "+\t\tmostSigBits <<= 16;",
                "+\t\tmostSigBits |= Long.decode(components[2]).longValue();",
                "+",
                "+\t\tlong leastSigBits = Long.decode(components[3]).longValue();",
                "+\t\tleastSigBits <<= 48;",
                "+\t\tleastSigBits |= Long.decode(components[4]).longValue();",
                "+",
                "+\t\treturn new UUID(mostSigBits, leastSigBits);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u00ad\u00a4 UUID \u00e7\u009a\u0084 128 \u00e4\u00bd\u008d\u00e5\u0080\u00bc\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e6\u009c\u0080\u00e4\u00bd\u008e\u00e6\u009c\u0089\u00e6\u0095\u0088 64 \u00e4\u00bd\u008d\u00e3\u0080\u0082",
                "+\t *",
                "+\t * @return \u00e6\u00ad\u00a4 UUID \u00e7\u009a\u0084 128 \u00e4\u00bd\u008d\u00e5\u0080\u00bc\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e6\u009c\u0080\u00e4\u00bd\u008e\u00e6\u009c\u0089\u00e6\u0095\u0088 64 \u00e4\u00bd\u008d\u00e3\u0080\u0082",
                "+\t */",
                "+\tpublic long getLeastSignificantBits() {",
                "+\t\treturn leastSigBits;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u00ad\u00a4 UUID \u00e7\u009a\u0084 128 \u00e4\u00bd\u008d\u00e5\u0080\u00bc\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e6\u009c\u0080\u00e9\u00ab\u0098\u00e6\u009c\u0089\u00e6\u0095\u0088 64 \u00e4\u00bd\u008d\u00e3\u0080\u0082",
                "+\t *",
                "+\t * @return \u00e6\u00ad\u00a4 UUID \u00e7\u009a\u0084 128 \u00e4\u00bd\u008d\u00e5\u0080\u00bc\u00e4\u00b8\u00ad\u00e6\u009c\u0080\u00e9\u00ab\u0098\u00e6\u009c\u0089\u00e6\u0095\u0088 64 \u00e4\u00bd\u008d\u00e3\u0080\u0082",
                "+\t */",
                "+\tpublic long getMostSignificantBits() {",
                "+\t\treturn mostSigBits;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e4\u00b8\u008e\u00e6\u00ad\u00a4 {@code UUID} \u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e8\u0081\u0094\u00e7\u009a\u0084\u00e7\u0089\u0088\u00e6\u009c\u00ac\u00e5\u008f\u00b7. \u00e7\u0089\u0088\u00e6\u009c\u00ac\u00e5\u008f\u00b7\u00e6\u008f\u008f\u00e8\u00bf\u00b0\u00e6\u00ad\u00a4 {@code UUID} \u00e6\u0098\u00af\u00e5\u00a6\u0082\u00e4\u00bd\u0095\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e7\u009a\u0084\u00e3\u0080\u0082",
                "+\t * <p>",
                "+\t * \u00e7\u0089\u0088\u00e6\u009c\u00ac\u00e5\u008f\u00b7\u00e5\u0085\u00b7\u00e6\u009c\u0089\u00e4\u00bb\u00a5\u00e4\u00b8\u008b\u00e5\u0090\u00ab\u00e6\u0084\u008f:",
                "+\t * <ul>",
                "+\t * <li>1 \u00e5\u009f\u00ba\u00e4\u00ba\u008e\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e7\u009a\u0084 UUID",
                "+\t * <li>2 DCE \u00e5\u00ae\u0089\u00e5\u0085\u00a8 UUID",
                "+\t * <li>3 \u00e5\u009f\u00ba\u00e4\u00ba\u008e\u00e5\u0090\u008d\u00e7\u00a7\u00b0\u00e7\u009a\u0084 UUID",
                "+\t * <li>4 \u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e7\u009a\u0084 UUID",
                "+\t * </ul>",
                "+\t *",
                "+\t * @return \u00e6\u00ad\u00a4 {@code UUID} \u00e7\u009a\u0084\u00e7\u0089\u0088\u00e6\u009c\u00ac\u00e5\u008f\u00b7",
                "+\t */",
                "+\tpublic int version() {",
                "+\t\t// Version is bits masked by 0x000000000000F000 in MS long",
                "+\t\treturn (int) ((mostSigBits >> 12) & 0x0f);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e4\u00b8\u008e\u00e6\u00ad\u00a4 {@code UUID} \u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e8\u0081\u0094\u00e7\u009a\u0084\u00e5\u008f\u0098\u00e4\u00bd\u0093\u00e5\u008f\u00b7\u00e3\u0080\u0082\u00e5\u008f\u0098\u00e4\u00bd\u0093\u00e5\u008f\u00b7\u00e6\u008f\u008f\u00e8\u00bf\u00b0 {@code UUID} \u00e7\u009a\u0084\u00e5\u00b8\u0083\u00e5\u00b1\u0080\u00e3\u0080\u0082",
                "+\t * <p>",
                "+\t * \u00e5\u008f\u0098\u00e4\u00bd\u0093\u00e5\u008f\u00b7\u00e5\u0085\u00b7\u00e6\u009c\u0089\u00e4\u00bb\u00a5\u00e4\u00b8\u008b\u00e5\u0090\u00ab\u00e6\u0084\u008f\u00ef\u00bc\u009a",
                "+\t * <ul>",
                "+\t * <li>0 \u00e4\u00b8\u00ba NCS \u00e5\u0090\u0091\u00e5\u0090\u008e\u00e5\u0085\u00bc\u00e5\u00ae\u00b9\u00e4\u00bf\u009d\u00e7\u0095\u0099",
                "+\t * <li>2 <a href=\"http://www.ietf.org/rfc/rfc4122.txt\">IETF&nbsp;RFC&nbsp;4122</a>(Leach-Salz), \u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e6\u00ad\u00a4\u00e7\u00b1\u00bb",
                "+\t * <li>6 \u00e4\u00bf\u009d\u00e7\u0095\u0099\u00ef\u00bc\u008c\u00e5\u00be\u00ae\u00e8\u00bd\u00af\u00e5\u0090\u0091\u00e5\u0090\u008e\u00e5\u0085\u00bc\u00e5\u00ae\u00b9",
                "+\t * <li>7 \u00e4\u00bf\u009d\u00e7\u0095\u0099\u00e4\u00be\u009b\u00e4\u00bb\u00a5\u00e5\u0090\u008e\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e4\u00bd\u00bf\u00e7\u0094\u00a8",
                "+\t * </ul>",
                "+\t *",
                "+\t * @return \u00e6\u00ad\u00a4 {@code UUID} \u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e8\u0081\u0094\u00e7\u009a\u0084\u00e5\u008f\u0098\u00e4\u00bd\u0093\u00e5\u008f\u00b7",
                "+\t */",
                "+\tpublic int variant() {",
                "+\t\t// This field is composed of a varying number of bits.",
                "+\t\t// 0 - - Reserved for NCS backward compatibility",
                "+\t\t// 1 0 - The IETF aka Leach-Salz variant (used by this class)",
                "+\t\t// 1 1 0 Reserved, Microsoft backward compatibility",
                "+\t\t// 1 1 1 Reserved for future definition.",
                "+\t\treturn (int) ((leastSigBits >>> (64 - (leastSigBits >>> 62))) & (leastSigBits >> 63));",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e4\u00b8\u008e\u00e6\u00ad\u00a4 UUID \u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e8\u0081\u0094\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3\u00e5\u0080\u00bc\u00e3\u0080\u0082",
                "+\t *",
                "+\t * <p>",
                "+\t * 60 \u00e4\u00bd\u008d\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3\u00e5\u0080\u00bc\u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e6\u00ad\u00a4 {@code UUID} \u00e7\u009a\u0084 time_low\u00e3\u0080\u0081time_mid \u00e5\u0092\u008c time_hi \u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e3\u0080\u0082<br>",
                "+\t * \u00e6\u0089\u0080\u00e5\u00be\u0097\u00e5\u0088\u00b0\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3\u00e4\u00bb\u00a5 100 \u00e6\u00af\u00ab\u00e5\u00be\u00ae\u00e7\u00a7\u0092\u00e4\u00b8\u00ba\u00e5\u008d\u0095\u00e4\u00bd\u008d\u00ef\u00bc\u008c\u00e4\u00bb\u008e UTC\u00ef\u00bc\u0088\u00e9\u0080\u009a\u00e7\u0094\u00a8\u00e5\u008d\u008f\u00e8\u00b0\u0083\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u0089 1582 \u00e5\u00b9\u00b4 10 \u00e6\u009c\u0088 15 \u00e6\u0097\u00a5\u00e9\u009b\u00b6\u00e6\u0097\u00b6\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e3\u0080\u0082",
                "+\t *",
                "+\t * <p>",
                "+\t * \u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u0088\u00b3\u00e5\u0080\u00bc\u00e4\u00bb\u0085\u00e5\u009c\u00a8\u00e5\u009c\u00a8\u00e5\u009f\u00ba\u00e4\u00ba\u008e\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e7\u009a\u0084 UUID\u00ef\u00bc\u0088\u00e5\u0085\u00b6 version \u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e4\u00b8\u00ba 1\u00ef\u00bc\u0089\u00e4\u00b8\u00ad\u00e6\u0089\u008d\u00e6\u009c\u0089\u00e6\u0084\u008f\u00e4\u00b9\u0089\u00e3\u0080\u0082<br>",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u00ad\u00a4 {@code UUID} \u00e4\u00b8\u008d\u00e6\u0098\u00af\u00e5\u009f\u00ba\u00e4\u00ba\u008e\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e7\u009a\u0084 UUID\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e6\u008a\u009b\u00e5\u0087\u00ba UnsupportedOperationException\u00e3\u0080\u0082",
                "+\t *",
                "+\t * @throws UnsupportedOperationException \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u00ad\u00a4 {@code UUID} \u00e4\u00b8\u008d\u00e6\u0098\u00af version \u00e4\u00b8\u00ba 1 \u00e7\u009a\u0084 UUID\u00e3\u0080\u0082",
                "+\t */",
                "+\tpublic long timestamp() throws UnsupportedOperationException {",
                "+\t\tcheckTimeBase();",
                "+\t\treturn (mostSigBits & 0x0FFFL) << 48//",
                "+\t\t\t\t| ((mostSigBits >> 16) & 0x0FFFFL) << 32//",
                "+\t\t\t\t| mostSigBits >>> 32;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e4\u00b8\u008e\u00e6\u00ad\u00a4 UUID \u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e8\u0081\u0094\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0092\u009f\u00e5\u00ba\u008f\u00e5\u0088\u0097\u00e5\u0080\u00bc\u00e3\u0080\u0082",
                "+\t *",
                "+\t * <p>",
                "+\t * 14 \u00e4\u00bd\u008d\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0092\u009f\u00e5\u00ba\u008f\u00e5\u0088\u0097\u00e5\u0080\u00bc\u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e6\u00ad\u00a4 UUID \u00e7\u009a\u0084 clock_seq \u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e3\u0080\u0082clock_seq \u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e4\u00bf\u009d\u00e8\u00af\u0081\u00e5\u009c\u00a8\u00e5\u009f\u00ba\u00e4\u00ba\u008e\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e7\u009a\u0084 UUID \u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e5\u0094\u00af\u00e4\u00b8\u0080\u00e6\u0080\u00a7\u00e3\u0080\u0082",
                "+\t * <p>",
                "+\t * {@code clockSequence} \u00e5\u0080\u00bc\u00e4\u00bb\u0085\u00e5\u009c\u00a8\u00e5\u009f\u00ba\u00e4\u00ba\u008e\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e7\u009a\u0084 UUID\u00ef\u00bc\u0088\u00e5\u0085\u00b6 version \u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e4\u00b8\u00ba 1\u00ef\u00bc\u0089\u00e4\u00b8\u00ad\u00e6\u0089\u008d\u00e6\u009c\u0089\u00e6\u0084\u008f\u00e4\u00b9\u0089\u00e3\u0080\u0082 \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u00ad\u00a4 UUID \u00e4\u00b8\u008d\u00e6\u0098\u00af\u00e5\u009f\u00ba\u00e4\u00ba\u008e\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e7\u009a\u0084 UUID\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e6\u008a\u009b\u00e5\u0087\u00ba UnsupportedOperationException\u00e3\u0080\u0082",
                "+\t *",
                "+\t * @return \u00e6\u00ad\u00a4 {@code UUID} \u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0092\u009f\u00e5\u00ba\u008f\u00e5\u0088\u0097",
                "+\t *",
                "+\t * @throws UnsupportedOperationException \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u00ad\u00a4 UUID \u00e7\u009a\u0084 version \u00e4\u00b8\u008d\u00e4\u00b8\u00ba 1",
                "+\t */",
                "+\tpublic int clockSequence() throws UnsupportedOperationException {",
                "+\t\tcheckTimeBase();",
                "+\t\treturn (int) ((leastSigBits & 0x3FFF000000000000L) >>> 48);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e4\u00b8\u008e\u00e6\u00ad\u00a4 UUID \u00e7\u009b\u00b8\u00e5\u0085\u00b3\u00e7\u009a\u0084\u00e8\u008a\u0082\u00e7\u0082\u00b9\u00e5\u0080\u00bc\u00e3\u0080\u0082",
                "+\t *",
                "+\t * <p>",
                "+\t * 48 \u00e4\u00bd\u008d\u00e7\u009a\u0084\u00e8\u008a\u0082\u00e7\u0082\u00b9\u00e5\u0080\u00bc\u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e6\u00ad\u00a4 UUID \u00e7\u009a\u0084 node \u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e3\u0080\u0082\u00e6\u00ad\u00a4\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e6\u0097\u00a8\u00e5\u009c\u00a8\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e4\u00bf\u009d\u00e5\u00ad\u0098\u00e6\u009c\u00ba\u00e5\u0099\u00a8\u00e7\u009a\u0084 IEEE 802 \u00e5\u009c\u00b0\u00e5\u009d\u0080\u00ef\u00bc\u008c\u00e8\u00af\u00a5\u00e5\u009c\u00b0\u00e5\u009d\u0080\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e6\u00ad\u00a4 UUID \u00e4\u00bb\u00a5\u00e4\u00bf\u009d\u00e8\u00af\u0081\u00e7\u00a9\u00ba\u00e9\u0097\u00b4\u00e5\u0094\u00af\u00e4\u00b8\u0080\u00e6\u0080\u00a7\u00e3\u0080\u0082",
                "+\t * <p>",
                "+\t * \u00e8\u008a\u0082\u00e7\u0082\u00b9\u00e5\u0080\u00bc\u00e4\u00bb\u0085\u00e5\u009c\u00a8\u00e5\u009f\u00ba\u00e4\u00ba\u008e\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e7\u009a\u0084 UUID\u00ef\u00bc\u0088\u00e5\u0085\u00b6 version \u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e4\u00b8\u00ba 1\u00ef\u00bc\u0089\u00e4\u00b8\u00ad\u00e6\u0089\u008d\u00e6\u009c\u0089\u00e6\u0084\u008f\u00e4\u00b9\u0089\u00e3\u0080\u0082<br>",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u00ad\u00a4 UUID \u00e4\u00b8\u008d\u00e6\u0098\u00af\u00e5\u009f\u00ba\u00e4\u00ba\u008e\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e7\u009a\u0084 UUID\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e6\u008a\u009b\u00e5\u0087\u00ba UnsupportedOperationException\u00e3\u0080\u0082",
                "+\t *",
                "+\t * @return \u00e6\u00ad\u00a4 {@code UUID} \u00e7\u009a\u0084\u00e8\u008a\u0082\u00e7\u0082\u00b9\u00e5\u0080\u00bc",
                "+\t *",
                "+\t * @throws UnsupportedOperationException \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u00ad\u00a4 UUID \u00e7\u009a\u0084 version \u00e4\u00b8\u008d\u00e4\u00b8\u00ba 1",
                "+\t */",
                "+\tpublic long node() throws UnsupportedOperationException {",
                "+\t\tcheckTimeBase();",
                "+\t\treturn leastSigBits & 0x0000FFFFFFFFFFFFL;",
                "+\t}",
                "+",
                "+\t// Object Inherited Methods",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u00ad\u00a4{@code UUID} \u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e8\u00a1\u00a8\u00e7\u008e\u00b0\u00e5\u00bd\u00a2\u00e5\u00bc\u008f\u00e3\u0080\u0082",
                "+\t *",
                "+\t * <p>",
                "+\t * UUID \u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e5\u00bd\u00a2\u00e5\u00bc\u008f\u00e7\u0094\u00b1\u00e6\u00ad\u00a4 BNF \u00e6\u008f\u008f\u00e8\u00bf\u00b0\u00ef\u00bc\u009a",
                "+\t * ",
                "+\t * <pre>",
                "+\t * {@code",
                "+\t * UUID                   = <time_low>-<time_mid>-<time_high_and_version>-<variant_and_sequence>-<node>",
                "+\t * time_low               = 4*<hexOctet>",
                "+\t * time_mid               = 2*<hexOctet>",
                "+\t * time_high_and_version  = 2*<hexOctet>",
                "+\t * variant_and_sequence   = 2*<hexOctet>",
                "+\t * node                   = 6*<hexOctet>",
                "+\t * hexOctet               = <hexDigit><hexDigit>",
                "+\t * hexDigit               = [0-9a-fA-F]",
                "+\t * }",
                "+\t * </pre>",
                "+\t * ",
                "+\t * </blockquote>",
                "+\t *",
                "+\t * @return \u00e6\u00ad\u00a4{@code UUID} \u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e8\u00a1\u00a8\u00e7\u008e\u00b0\u00e5\u00bd\u00a2\u00e5\u00bc\u008f",
                "+\t * @see #toString(boolean)",
                "+\t */",
                "+\t@Override",
                "+\tpublic String toString() {",
                "+\t\treturn toString(false);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u00ad\u00a4{@code UUID} \u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e8\u00a1\u00a8\u00e7\u008e\u00b0\u00e5\u00bd\u00a2\u00e5\u00bc\u008f\u00e3\u0080\u0082",
                "+\t *",
                "+\t * <p>",
                "+\t * UUID \u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e5\u00bd\u00a2\u00e5\u00bc\u008f\u00e7\u0094\u00b1\u00e6\u00ad\u00a4 BNF \u00e6\u008f\u008f\u00e8\u00bf\u00b0\u00ef\u00bc\u009a",
                "+\t * ",
                "+\t * <pre>",
                "+\t * {@code",
                "+\t * UUID                   = <time_low>-<time_mid>-<time_high_and_version>-<variant_and_sequence>-<node>",
                "+\t * time_low               = 4*<hexOctet>",
                "+\t * time_mid               = 2*<hexOctet>",
                "+\t * time_high_and_version  = 2*<hexOctet>",
                "+\t * variant_and_sequence   = 2*<hexOctet>",
                "+\t * node                   = 6*<hexOctet>",
                "+\t * hexOctet               = <hexDigit><hexDigit>",
                "+\t * hexDigit               = [0-9a-fA-F]",
                "+\t * }",
                "+\t * </pre>",
                "+\t * ",
                "+\t * </blockquote>",
                "+\t *",
                "+\t * @param isSimple \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e7\u00ae\u0080\u00e5\u008d\u0095\u00e6\u00a8\u00a1\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e7\u00ae\u0080\u00e5\u008d\u0095\u00e6\u00a8\u00a1\u00e5\u00bc\u008f\u00e4\u00b8\u00ba\u00e4\u00b8\u008d\u00e5\u00b8\u00a6'-'\u00e7\u009a\u0084UUID\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @return \u00e6\u00ad\u00a4{@code UUID} \u00e7\u009a\u0084\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e8\u00a1\u00a8\u00e7\u008e\u00b0\u00e5\u00bd\u00a2\u00e5\u00bc\u008f",
                "+\t */",
                "+\tpublic String toString(boolean isSimple) {",
                "+\t\tfinal StringBuilder builder = StrUtil.builder(isSimple ? 32 : 36);",
                "+\t\t// time_low",
                "+\t\tbuilder.append(digits(mostSigBits >> 32, 8));",
                "+\t\tif (false == isSimple) {",
                "+\t\t\tbuilder.append('-');",
                "+\t\t}",
                "+\t\t// time_mid",
                "+\t\tbuilder.append(digits(mostSigBits >> 16, 4));",
                "+\t\tif (false == isSimple) {",
                "+\t\t\tbuilder.append('-');",
                "+\t\t}",
                "+\t\t// time_high_and_version",
                "+\t\tbuilder.append(digits(mostSigBits, 4));",
                "+\t\tif (false == isSimple) {",
                "+\t\t\tbuilder.append('-');",
                "+\t\t}",
                "+\t\t// variant_and_sequence",
                "+\t\tbuilder.append(digits(leastSigBits >> 48, 4));",
                "+\t\tif (false == isSimple) {",
                "+\t\t\tbuilder.append('-');",
                "+\t\t}",
                "+\t\t// node",
                "+\t\tbuilder.append(digits(leastSigBits, 12));",
                "+",
                "+\t\treturn builder.toString();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u00ad\u00a4 UUID \u00e7\u009a\u0084\u00e5\u0093\u0088\u00e5\u00b8\u008c\u00e7\u00a0\u0081\u00e3\u0080\u0082",
                "+\t *",
                "+\t * @return UUID \u00e7\u009a\u0084\u00e5\u0093\u0088\u00e5\u00b8\u008c\u00e7\u00a0\u0081\u00e5\u0080\u00bc\u00e3\u0080\u0082",
                "+\t */",
                "+\tpublic int hashCode() {",
                "+\t\tlong hilo = mostSigBits ^ leastSigBits;",
                "+\t\treturn ((int) (hilo >> 32)) ^ (int) hilo;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00b0\u0086\u00e6\u00ad\u00a4\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e4\u00b8\u008e\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e3\u0080\u0082",
                "+\t * <p>",
                "+\t * \u00e5\u00bd\u0093\u00e4\u00b8\u0094\u00e4\u00bb\u0085\u00e5\u00bd\u0093\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e4\u00b8\u008d\u00e4\u00b8\u00ba {@code null}\u00e3\u0080\u0081\u00e8\u0080\u008c\u00e6\u0098\u00af\u00e4\u00b8\u0080\u00e4\u00b8\u00aa UUID \u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e3\u0080\u0081\u00e5\u0085\u00b7\u00e6\u009c\u0089\u00e4\u00b8\u008e\u00e6\u00ad\u00a4 UUID \u00e7\u009b\u00b8\u00e5\u0090\u008c\u00e7\u009a\u0084 varriant\u00e3\u0080\u0081\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e7\u009b\u00b8\u00e5\u0090\u008c\u00e7\u009a\u0084\u00e5\u0080\u00bc\u00ef\u00bc\u0088\u00e6\u00af\u008f\u00e4\u00b8\u0080\u00e4\u00bd\u008d\u00e5\u009d\u0087\u00e7\u009b\u00b8\u00e5\u0090\u008c\u00ef\u00bc\u0089\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e7\u00bb\u0093\u00e6\u009e\u009c\u00e6\u0089\u008d\u00e4\u00b8\u00ba {@code true}\u00e3\u0080\u0082",
                "+\t *",
                "+\t * @param obj \u00e8\u00a6\u0081\u00e4\u00b8\u008e\u00e4\u00b9\u008b\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t *",
                "+\t * @return \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u009b\u00b8\u00e5\u0090\u008c\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e8\u00bf\u0094\u00e5\u009b\u009e {@code true}\u00ef\u00bc\u009b\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e8\u00bf\u0094\u00e5\u009b\u009e {@code false}",
                "+\t */",
                "+\tpublic boolean equals(Object obj) {",
                "+\t\tif ((null == obj) || (obj.getClass() != UUID.class)) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                "+\t\tUUID id = (UUID) obj;",
                "+\t\treturn (mostSigBits == id.mostSigBits && leastSigBits == id.leastSigBits);",
                "+\t}",
                "+",
                "+\t// Comparison Operations",
                "+",
                "+\t/**",
                "+\t * \u00e5\u00b0\u0086\u00e6\u00ad\u00a4 UUID \u00e4\u00b8\u008e\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u009a\u0084 UUID \u00e6\u00af\u0094\u00e8\u00be\u0083\u00e3\u0080\u0082",
                "+\t *",
                "+\t * <p>",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u00a4\u00e4\u00b8\u00aa UUID \u00e4\u00b8\u008d\u00e5\u0090\u008c\u00ef\u00bc\u008c\u00e4\u00b8\u0094\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aa UUID \u00e7\u009a\u0084\u00e6\u009c\u0080\u00e9\u00ab\u0098\u00e6\u009c\u0089\u00e6\u0095\u0088\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00e5\u00a4\u00a7\u00e4\u00ba\u008e\u00e7\u00ac\u00ac\u00e4\u00ba\u008c\u00e4\u00b8\u00aa UUID \u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e5\u00ad\u0097\u00e6\u00ae\u00b5\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aa UUID \u00e5\u00a4\u00a7\u00e4\u00ba\u008e\u00e7\u00ac\u00ac\u00e4\u00ba\u008c\u00e4\u00b8\u00aa UUID\u00e3\u0080\u0082",
                "+\t *",
                "+\t * @param val \u00e4\u00b8\u008e\u00e6\u00ad\u00a4 UUID \u00e6\u00af\u0094\u00e8\u00be\u0083\u00e7\u009a\u0084 UUID",
                "+\t *",
                "+\t * @return \u00e5\u009c\u00a8\u00e6\u00ad\u00a4 UUID \u00e5\u00b0\u008f\u00e4\u00ba\u008e\u00e3\u0080\u0081\u00e7\u00ad\u0089\u00e4\u00ba\u008e\u00e6\u0088\u0096\u00e5\u00a4\u00a7\u00e4\u00ba\u008e val \u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e5\u0088\u0086\u00e5\u0088\u00ab\u00e8\u00bf\u0094\u00e5\u009b\u009e -1\u00e3\u0080\u00810 \u00e6\u0088\u0096 1\u00e3\u0080\u0082",
                "+\t *",
                "+\t */",
                "+\tpublic int compareTo(UUID val) {",
                "+\t\t// The ordering is intentionally set up so that the UUIDs",
                "+\t\t// can simply be numerically compared as two numbers",
                "+\t\treturn (this.mostSigBits < val.mostSigBits ? -1 : //",
                "+\t\t\t\t(this.mostSigBits > val.mostSigBits ? 1 : //",
                "+\t\t\t\t\t\t(this.leastSigBits < val.leastSigBits ? -1 : //",
                "+\t\t\t\t\t\t\t\t(this.leastSigBits > val.leastSigBits ? 1 : //",
                "+\t\t\t\t\t\t\t\t\t\t0))));",
                "+\t}",
                "+",
                "+\t// ------------------------------------------------------------------------------------------------------------------- Private method start",
                "+\t/**",
                "+\t * \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084hex\u00e5\u0080\u00bc",
                "+\t * ",
                "+\t * @param val \u00e5\u0080\u00bc",
                "+\t * @param digits \u00e4\u00bd\u008d",
                "+\t * @return \u00e5\u0080\u00bc",
                "+\t */",
                "+\tprivate static String digits(long val, int digits) {",
                "+\t\tlong hi = 1L << (digits * 4);",
                "+\t\treturn Long.toHexString(hi | (val & (hi - 1))).substring(1);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00batime-based\u00e7\u0089\u0088\u00e6\u009c\u00acUUID",
                "+\t */",
                "+\tprivate void checkTimeBase() {",
                "+\t\tif (version() != 1) {",
                "+\t\t\tthrow new UnsupportedOperationException(\"Not a time-based UUID\");",
                "+\t\t}",
                "+\t}",
                "+\t// ------------------------------------------------------------------------------------------------------------------- Private method end",
                "+}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java",
                "index 6f2ede3d1..f0877aca3 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java",
                "@@ -13,3 +13,2 @@ import java.util.Random;",
                " import java.util.Set;",
                "-import java.util.UUID;",
                " import java.util.concurrent.ThreadLocalRandom;",
                "@@ -19,2 +18,3 @@ import cn.hutool.core.date.DateUtil;",
                " import cn.hutool.core.exceptions.UtilException;",
                "+import cn.hutool.core.lang.UUID;",
                " import cn.hutool.core.lang.WeightRandom;",
                "@@ -384,5 +384,5 @@ public class RandomUtil {",
                " \t/**",
                "-\t * \u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e6\u0095\u00b0\u00e5\u00ad\u0097",
                "+\t * \u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00ef\u00bc\u008c\u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00e4\u00b8\u00ba0~9\u00e5\u008d\u0095\u00e4\u00b8\u00aa\u00e6\u0095\u00b0\u00e5\u00ad\u0097",
                " \t * ",
                "-\t * @return \u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e5\u00ad\u0097\u00e7\u00ac\u00a6",
                "+\t * @return \u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00e5\u00ad\u0097\u00e7\u00ac\u00a6",
                " \t * @since 3.1.2",
                "@@ -462,3 +462,3 @@ public class RandomUtil {",
                " \tpublic static String simpleUUID() {",
                "-\t\treturn randomUUID().replace(\"-\", \"\");",
                "+\t\treturn UUID.randomUUID().toString(true);",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/lang/UUID.java",
                "hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "2aee4ad092aba91df3c0bcbab8231256bece28dd",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1532525778,
            "hunks": 2,
            "message": "fix table meta",
            "diff": [
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/meta/Table.java b/hutool-db/src/main/java/cn/hutool/db/meta/Table.java",
                "index fc53add6e..653cb7faf 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/meta/Table.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/meta/Table.java",
                "@@ -2,3 +2,3 @@ package cn.hutool.db.meta;",
                "-import java.util.HashMap;",
                "+import java.util.LinkedHashMap;",
                " import java.util.LinkedHashSet;",
                "@@ -12,3 +12,3 @@ import java.util.Set;",
                "  */",
                "-public class Table extends HashMap<String, Column> {",
                "+public class Table extends LinkedHashMap<String, Column> {",
                " \tprivate static final long serialVersionUID = -810699625961392983L;"
            ],
            "changed_files": [
                "hutool-db/src/main/java/cn/hutool/db/meta/Table.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8d9134076a4a2396dc764ef66532ccccf5ef7ad0",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1540284816,
            "hunks": 20,
            "message": "fix html",
            "diff": [
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java b/hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java",
                "index e637fb174..b73f289b9 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java",
                "@@ -28,3 +28,3 @@ import cn.hutool.core.util.StrUtil;",
                " public class Ftp extends AbstractFtp {",
                "-\t",
                "+",
                " \t/** \u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e7\u00ab\u00af\u00e5\u008f\u00a3 */",
                "@@ -34,3 +34,3 @@ public class Ftp extends AbstractFtp {",
                " \tprivate Charset charset;",
                "-\t",
                "+",
                " \t/**",
                "@@ -43,3 +43,3 @@ public class Ftp extends AbstractFtp {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -53,3 +53,3 @@ public class Ftp extends AbstractFtp {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -113,2 +113,21 @@ public class Ftp extends AbstractFtp {",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00aeFTP\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e6\u00a8\u00a1\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e9\u0080\u0089\u00e4\u00b8\u00bb\u00e5\u008a\u00a8\u00e5\u0092\u008c\u00e8\u00a2\u00ab\u00e5\u008a\u00a8\u00e6\u00a8\u00a1\u00e5\u00bc\u008f",
                "+\t * ",
                "+\t * @param mode \u00e6\u00a8\u00a1\u00e5\u00bc\u008f\u00e6\u009e\u009a\u00e4\u00b8\u00be",
                "+\t * @return this",
                "+\t * @since 4.1.19",
                "+\t */",
                "+\tpublic Ftp setMode(FtpMode mode) {",
                "+\t\tswitch (mode) {",
                "+\t\tcase Active:",
                "+\t\t\tthis.client.enterLocalActiveMode();",
                "+\t\t\tbreak;",
                "+\t\tcase Passive:",
                "+\t\t\tthis.client.enterLocalPassiveMode();",
                "+\t\t\tbreak;",
                "+\t\t}",
                "+\t\treturn this;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -129,3 +148,3 @@ public class Ftp extends AbstractFtp {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -144,3 +163,3 @@ public class Ftp extends AbstractFtp {",
                " \t}",
                "-\t",
                "+",
                " \t@Override",
                "@@ -153,3 +172,3 @@ public class Ftp extends AbstractFtp {",
                " \t}",
                "-\t",
                "+",
                " \t@Override",
                "@@ -164,3 +183,3 @@ public class Ftp extends AbstractFtp {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -213,4 +232,4 @@ public class Ftp extends AbstractFtp {",
                " \t\t\tchildPath = StrUtil.format(\"{}/{}\", dirPath, name);",
                "-\t\t\tif(ftpFile.isDirectory()) {",
                "-\t\t\t\t//\u00e4\u00b8\u008a\u00e7\u00ba\u00a7\u00e5\u0092\u008c\u00e6\u009c\u00ac\u00e7\u00ba\u00a7\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e9\u0099\u00a4\u00e5\u00a4\u0096",
                "+\t\t\tif (ftpFile.isDirectory()) {",
                "+\t\t\t\t// \u00e4\u00b8\u008a\u00e7\u00ba\u00a7\u00e5\u0092\u008c\u00e6\u009c\u00ac\u00e7\u00ba\u00a7\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e9\u0099\u00a4\u00e5\u00a4\u0096",
                " \t\t\t\tif (false == name.equals(\".\") && false == name.equals(\"..\")) {",
                "@@ -218,3 +237,3 @@ public class Ftp extends AbstractFtp {",
                " \t\t\t\t}",
                "-\t\t\t}else {",
                "+\t\t\t} else {",
                " \t\t\t\tdelFile(childPath);",
                "@@ -222,4 +241,4 @@ public class Ftp extends AbstractFtp {",
                " \t\t}",
                "-\t\t",
                "-\t\t//\u00e5\u0088\u00a0\u00e9\u0099\u00a4\u00e7\u00a9\u00ba\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+",
                "+\t\t// \u00e5\u0088\u00a0\u00e9\u0099\u00a4\u00e7\u00a9\u00ba\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                " \t\ttry {",
                "@@ -282,3 +301,3 @@ public class Ftp extends AbstractFtp {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/ftp/FtpMode.java b/hutool-extra/src/main/java/cn/hutool/extra/ftp/FtpMode.java",
                "new file mode 100644",
                "index 000000000..8e85da98c",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/ftp/FtpMode.java",
                "@@ -0,0 +1,17 @@",
                "+package cn.hutool.extra.ftp;",
                "+",
                "+/**",
                "+ * FTP\u00e8\u00bf\u009e\u00e6\u008e\u00a5\u00e6\u00a8\u00a1\u00e5\u00bc\u008f",
                "+ * ",
                "+ * <p>",
                "+ * \u00e8\u00a7\u0081\u00ef\u00bc\u009ahttps://www.cnblogs.com/huhaoshida/p/5412615.html",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.19",
                "+ */",
                "+public enum FtpMode {",
                "+\t/** \u00e4\u00b8\u00bb\u00e5\u008a\u00a8\u00e6\u00a8\u00a1\u00e5\u00bc\u008f */",
                "+\tActive,",
                "+\t/** \u00e8\u00a2\u00ab\u00e5\u008a\u00a8\u00e6\u00a8\u00a1\u00e5\u00bc\u008f */",
                "+\tPassive;",
                "+}",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/ssh/JschUtil.java b/hutool-extra/src/main/java/cn/hutool/extra/ssh/JschUtil.java",
                "index 0550dd495..00f99b891 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/ssh/JschUtil.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/ssh/JschUtil.java",
                "@@ -42,3 +42,3 @@ public class JschUtil {",
                " \t}",
                "-",
                "+\t",
                " \t/**",
                "@@ -74,2 +74,3 @@ public class JschUtil {",
                " \t\t\tsession.setPassword(sshPass);",
                "+\t\t\t//\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e6\u00ac\u00a1\u00e7\u0099\u00bb\u00e9\u0099\u0086\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e5\u0080\u0099\u00e6\u008f\u0090\u00e7\u00a4\u00ba\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e9\u0080\u0089\u00e5\u0080\u00bc\u00ef\u00bc\u009a(ask | yes | no) ",
                " \t\t\tsession.setConfig(\"StrictHostKeyChecking\", \"no\");",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HTMLFilter.java b/hutool-http/src/main/java/cn/hutool/http/HTMLFilter.java",
                "index c6f8dec6e..3b2dc82d2 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HTMLFilter.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HTMLFilter.java",
                "@@ -9,3 +9,2 @@ import java.util.concurrent.ConcurrentHashMap;",
                " import java.util.concurrent.ConcurrentMap;",
                "-import java.util.logging.Logger;",
                " import java.util.regex.Matcher;",
                "@@ -13,2 +12,4 @@ import java.util.regex.Pattern;",
                "+import cn.hutool.log.StaticLog;",
                "+",
                " /**",
                "@@ -183,3 +184,3 @@ public final class HTMLFilter {",
                " \t\tif (vDebug) {",
                "-\t\t\tLogger.getAnonymousLogger().info(msg);",
                "+\t\t\tStaticLog.debug(msg);",
                " \t\t}",
                "@@ -333,3 +334,3 @@ public final class HTMLFilter {",
                " \t\t\tif (allowed(name)) {",
                "-\t\t\t\tif (!inArray(name, vSelfClosingTags)) {",
                "+\t\t\t\tif (false == inArray(name, vSelfClosingTags)) {",
                " \t\t\t\t\tif (vTagCounts.containsKey(name)) {"
            ],
            "changed_files": [
                "hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java",
                "hutool-extra/src/main/java/cn/hutool/extra/ftp/FtpMode.java",
                "hutool-extra/src/main/java/cn/hutool/extra/ssh/JschUtil.java",
                "hutool-http/src/main/java/cn/hutool/http/HTMLFilter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b3236f3d33398d85cb25cbebb0bc712e1f214d81",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1532578218,
            "hunks": 22,
            "message": "add ExcelBase",
            "diff": [
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/JSONObject.java b/hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "index 722fae49b..f3ef7f42d 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "@@ -156,3 +156,3 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \tpublic JSONObject(Object source, boolean ignoreNullValue) {",
                "-\t\tthis();",
                "+\t\tthis(DEFAULT_CAPACITY, (source instanceof LinkedHashMap));",
                " \t\tthis.ignoreNullValue = ignoreNullValue;",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelBase.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelBase.java",
                "new file mode 100644",
                "index 000000000..a35184ce9",
                "--- /dev/null",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelBase.java",
                "@@ -0,0 +1,249 @@",
                "+package cn.hutool.poi.excel;",
                "+",
                "+import java.io.Closeable;",
                "+import java.util.ArrayList;",
                "+import java.util.List;",
                "+",
                "+import org.apache.poi.ss.usermodel.Cell;",
                "+import org.apache.poi.ss.usermodel.CellStyle;",
                "+import org.apache.poi.ss.usermodel.Row;",
                "+import org.apache.poi.ss.usermodel.Sheet;",
                "+import org.apache.poi.ss.usermodel.Workbook;",
                "+",
                "+import cn.hutool.core.io.IoUtil;",
                "+import cn.hutool.core.lang.Assert;",
                "+import cn.hutool.poi.excel.cell.CellUtil;",
                "+",
                "+/**",
                "+ * Excel\u00e5\u009f\u00ba\u00e7\u00a1\u0080\u00e7\u00b1\u00bb\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e6\u008a\u00bd\u00e8\u00b1\u00a1ExcelWriter\u00e5\u0092\u008cExcelReader\u00e4\u00b8\u00ad\u00e5\u0085\u00b1\u00e7\u0094\u00a8\u00e9\u0083\u00a8\u00e5\u0088\u0086\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e5\u0092\u008c\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+ * ",
                "+ * @param <T> \u00e5\u00ad\u0090\u00e7\u00b1\u00bb\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e8\u00bf\u0094\u00e5\u009b\u009ethis",
                "+ * @author looly",
                "+ * @since 4.1.4",
                "+ */",
                "+public class ExcelBase<T extends ExcelBase<T>> implements Closeable {",
                "+\t/** \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e8\u00a2\u00ab\u00e5\u0085\u00b3\u00e9\u0097\u00ad */",
                "+\tprotected boolean isClosed;",
                "+\t/** \u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf */",
                "+\tprotected Workbook workbook;",
                "+\t/** Excel\u00e4\u00b8\u00ad\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084Sheet */",
                "+\tprotected Sheet sheet;",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param sheet Excel\u00e4\u00b8\u00ad\u00e7\u009a\u0084sheet",
                "+\t */",
                "+\tpublic ExcelBase(Sheet sheet) {",
                "+\t\tAssert.notNull(sheet, \"No Sheet provided.\");",
                "+\t\tthis.sheet = sheet;",
                "+\t\tthis.workbook = sheet.getWorkbook();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096Workbook",
                "+\t * ",
                "+\t * @return Workbook",
                "+\t */",
                "+\tpublic Workbook getWorkbook() {",
                "+\t\treturn this.workbook;",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf\u00e8\u00a1\u00a8\u00e6\u00a0\u00bc\u00e6\u0095\u00b0",
                "+\t * ",
                "+\t * @return \u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf\u00e8\u00a1\u00a8\u00e6\u00a0\u00bc\u00e6\u0095\u00b0",
                "+\t * @since 4.0.10",
                "+\t */",
                "+\tpublic int getSheetCount() {",
                "+\t\treturn this.workbook.getNumberOfSheets();",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u00ad\u00a4\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf\u00e6\u0089\u0080\u00e6\u009c\u0089Sheet\u00e8\u00a1\u00a8",
                "+\t * ",
                "+\t * @return sheet\u00e8\u00a1\u00a8\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * @since 4.0.3",
                "+\t */",
                "+\tpublic List<Sheet> getSheets() {",
                "+\t\tfinal int totalSheet = getSheetCount();",
                "+\t\tfinal List<Sheet> result = new ArrayList<>(totalSheet);",
                "+\t\tfor (int i = 0; i < totalSheet; i++) {",
                "+\t\t\tresult.add(this.workbook.getSheetAt(i));",
                "+\t\t}",
                "+\t\treturn result;",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e8\u00a1\u00a8\u00e5\u0090\u008d\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * ",
                "+\t * @return \u00e8\u00a1\u00a8\u00e5\u0090\u008d\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * @since 4.0.3",
                "+\t */",
                "+\tpublic List<String> getSheetNames() {",
                "+\t\tfinal int totalSheet = workbook.getNumberOfSheets();",
                "+\t\tList<String> result = new ArrayList<>(totalSheet);",
                "+\t\tfor (int i = 0; i < totalSheet; i++) {",
                "+\t\t\tresult.add(this.workbook.getSheetAt(i).getSheetName());",
                "+\t\t}",
                "+\t\treturn result;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u00bd\u0093\u00e5\u0089\u008dSheet",
                "+\t * ",
                "+\t * @return {@link Sheet}",
                "+\t */",
                "+\tpublic Sheet getSheet() {",
                "+\t\treturn this.sheet;",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e7\u009a\u0084Sheet\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e7\u009a\u0084sheet\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00ef\u00bc\u008c\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e4\u00b9\u008b\u00e3\u0080\u0082<br>",
                "+\t * \u00e5\u009c\u00a8\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u0088\u0087\u00e6\u008d\u00a2\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e7\u009a\u0084sheet\u00ef\u00bc\u008c\u00e5\u009c\u00a8\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e6\u0096\u00b0\u00e5\u00bb\u00ba\u00e6\u0088\u0096\u00e8\u0080\u0085\u00e5\u0088\u0087\u00e6\u008d\u00a2sheet\u00e3\u0080\u0082",
                "+\t * ",
                "+\t * @param sheetName sheet\u00e5\u0090\u008d",
                "+\t * @return this",
                "+\t * @since 4.0.10",
                "+\t */",
                "+\t@SuppressWarnings(\"unchecked\")",
                "+\tpublic T setSheet(String sheetName) {",
                "+\t\tthis.sheet = this.workbook.getSheet(sheetName);",
                "+\t\tif(null == this.sheet) {",
                "+\t\t\tthis.sheet = this.workbook.createSheet(sheetName);",
                "+\t\t}",
                "+\t\treturn (T) this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e7\u009a\u0084Sheet\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e7\u009a\u0084sheet\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00ef\u00bc\u008c\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e4\u00b9\u008b\u00ef\u00bc\u0088\u00e5\u0091\u00bd\u00e5\u0090\u008d\u00e4\u00b8\u00ba\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00ef\u00bc\u0089<br>",
                "+\t * \u00e5\u009c\u00a8\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u0088\u0087\u00e6\u008d\u00a2\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e7\u009a\u0084sheet\u00ef\u00bc\u008c\u00e5\u009c\u00a8\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e6\u0096\u00b0\u00e5\u00bb\u00ba\u00e6\u0088\u0096\u00e8\u0080\u0085\u00e5\u0088\u0087\u00e6\u008d\u00a2sheet",
                "+\t * ",
                "+\t * @param sheetIndex sheet\u00e5\u00ba\u008f\u00e5\u008f\u00b7\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e8\u00ae\u00a1\u00e6\u0095\u00b0",
                "+\t * @return this",
                "+\t * @since 4.0.10",
                "+\t */",
                "+\t@SuppressWarnings(\"unchecked\")",
                "+\tpublic T setSheet(int sheetIndex) {",
                "+\t\tthis.sheet = this.workbook.getSheetAt(sheetIndex);",
                "+\t\tif(null == this.sheet) {",
                "+\t\t\tthis.sheet = this.workbook.createSheet();",
                "+\t\t}",
                "+\t\treturn (T) this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc\u00ef\u00bc\u008c\u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e6\u0097\u00b6\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>null</code>",
                "+\t * ",
                "+\t * @param x X\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e5\u0088\u0097\u00e5\u008f\u00b7",
                "+\t * @param y Y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e8\u00a1\u008c\u00e5\u008f\u00b7",
                "+\t * @return {@link Cell}",
                "+\t * @since 4.0.5",
                "+\t */",
                "+\tpublic Cell getCell(int x, int y) {",
                "+\t\treturn getCell(x, y, false);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u0088\u0096\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc",
                "+\t * ",
                "+\t * @param x X\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e5\u0088\u0097\u00e5\u008f\u00b7",
                "+\t * @param y Y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e8\u00a1\u008c\u00e5\u008f\u00b7",
                "+\t * @return {@link Cell}",
                "+\t * @since 4.0.6",
                "+\t */",
                "+\tpublic Cell getOrCreateCell(int x, int y) {",
                "+\t\treturn getCell(x, y, true);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009cisCreateIfNotExist\u00e4\u00b8\u00bafalse\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u009c\u00a8\u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e6\u0097\u00b6\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>null</code>",
                "+\t * ",
                "+\t * @param x X\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e5\u0088\u0097\u00e5\u008f\u00b7",
                "+\t * @param y Y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e8\u00a1\u008c\u00e5\u008f\u00b7",
                "+\t * @param isCreateIfNotExist \u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e6\u0097\u00b6\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0088\u009b\u00e5\u00bb\u00ba",
                "+\t * @return {@link Cell}",
                "+\t * @since 4.0.6",
                "+\t */",
                "+\tpublic Cell getCell(int x, int y, boolean isCreateIfNotExist) {",
                "+\t\tfinal Row row = isCreateIfNotExist ? RowUtil.getOrCreateRow(this.sheet, y) : this.sheet.getRow(y);",
                "+\t\tif (null != row) {",
                "+\t\t\treturn isCreateIfNotExist ? CellUtil.getOrCreateCell(row, x) : row.getCell(x);",
                "+\t\t}",
                "+\t\treturn null;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u0088\u0096\u00e8\u0080\u0085\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e8\u00a1\u008c",
                "+\t * ",
                "+\t * @param y Y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e8\u00a1\u008c\u00e5\u008f\u00b7",
                "+\t * @return {@link Row}",
                "+\t * @since 4.1.4",
                "+\t */",
                "+\tpublic Row getOrCreateRow(int y) {",
                "+\t\treturn RowUtil.getOrCreateRow(this.sheet, y);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e4\u00b8\u00ba\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u0088\u0096\u00e8\u0080\u0085\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00e5\u0090\u008e\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "+\t * ",
                "+\t * @param x X\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e5\u0088\u0097\u00e5\u008f\u00b7",
                "+\t * @param y Y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e8\u00a1\u008c\u00e5\u008f\u00b7",
                "+\t * @return {@link CellStyle}",
                "+\t * @since 4.1.4",
                "+\t */",
                "+\tpublic CellStyle getOrCreateCellStyle(int x, int y) {",
                "+\t\tfinal Cell cell = getOrCreateCell(x, y);",
                "+\t\tCellStyle cellStyle = cell.getCellStyle();",
                "+\t\tif (null == cellStyle) {",
                "+\t\t\tcellStyle = this.workbook.createCellStyle();",
                "+\t\t\tcell.setCellStyle(cellStyle);",
                "+\t\t}",
                "+\t\treturn cellStyle;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u0088\u0096\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u009f\u0090\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00e7\u009a\u0084\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00e5\u0090\u008e\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "+\t * ",
                "+\t * @param y Y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e8\u00a1\u008c\u00e5\u008f\u00b7",
                "+\t * @return {@link CellStyle}",
                "+\t * @since 4.1.4",
                "+\t */",
                "+\tpublic CellStyle getOrCreateRowStyle(int y) {",
                "+\t\tfinal Row row = getOrCreateRow(y);",
                "+\t\tCellStyle rowStyle = row.getRowStyle();",
                "+\t\tif (null == rowStyle) {",
                "+\t\t\trowStyle = this.workbook.createCellStyle();",
                "+\t\t\trow.setRowStyle(rowStyle);",
                "+\t\t}",
                "+\t\treturn rowStyle;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u0088\u0096\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u009f\u0090\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00e7\u009a\u0084\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00e5\u0090\u008e\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00e5\u0086\u0085\u00e5\u00ae\u00b9",
                "+\t * ",
                "+\t * @param x X\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e5\u0088\u0097\u00e5\u008f\u00b7",
                "+\t * @return {@link CellStyle}",
                "+\t * @since 4.1.4",
                "+\t */",
                "+\tpublic CellStyle getOrCreateColumnStyle(int x) {",
                "+\t\tCellStyle columnStyle = this.sheet.getColumnStyle(x);",
                "+\t\tif (null == columnStyle) {",
                "+\t\t\tcolumnStyle = this.workbook.createCellStyle();",
                "+\t\t\tthis.sheet.setDefaultColumnStyle(x, columnStyle);",
                "+\t\t}",
                "+\t\treturn columnStyle;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0085\u00b3\u00e9\u0097\u00ad\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf<br>",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e8\u00ae\u00be\u00e5\u00ae\u009a\u00e4\u00ba\u0086\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e5\u0085\u0088\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008e\u00e7\u00bb\u0099\u00e5\u0085\u00b3\u00e9\u0097\u00ad\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf",
                "+\t */",
                "+\t@Override",
                "+\tpublic void close() {",
                "+\t\tIoUtil.close(this.workbook);",
                "+\t\tthis.sheet = null;",
                "+\t\tthis.workbook = null;",
                "+\t\tthis.isClosed = true;",
                "+\t}",
                "+}",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java",
                "index 3c26bfc8a..eaa7c615b 100644",
                "--- a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java",
                "@@ -2,3 +2,2 @@ package cn.hutool.poi.excel;",
                "-import java.io.Closeable;",
                " import java.io.File;",
                "@@ -12,3 +11,2 @@ import org.apache.poi.hssf.usermodel.HSSFWorkbook;",
                " import org.apache.poi.ss.extractor.ExcelExtractor;",
                "-import org.apache.poi.ss.usermodel.Cell;",
                " import org.apache.poi.ss.usermodel.Row;",
                "@@ -23,3 +21,2 @@ import cn.hutool.core.collection.IterUtil;",
                " import cn.hutool.core.io.FileUtil;",
                "-import cn.hutool.core.io.IoUtil;",
                " import cn.hutool.core.lang.Assert;",
                "@@ -38,10 +35,3 @@ import cn.hutool.poi.excel.editors.TrimEditor;",
                "  */",
                "-public class ExcelReader implements Closeable {",
                "-",
                "-\t/** \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e8\u00a2\u00ab\u00e5\u0085\u00b3\u00e9\u0097\u00ad */",
                "-\tprivate boolean isClosed;",
                "-\t/** \u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf */",
                "-\tprivate Workbook workbook;",
                "-\t/** Excel\u00e4\u00b8\u00ad\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084Sheet */",
                "-\tprivate Sheet sheet;",
                "+public class ExcelReader extends ExcelBase<ExcelReader> {",
                "@@ -133,5 +123,3 @@ public class ExcelReader implements Closeable {",
                " \tpublic ExcelReader(Sheet sheet) {",
                "-\t\tAssert.notNull(sheet, \"No Sheet provided.\");",
                "-\t\tthis.sheet = sheet;",
                "-\t\tthis.workbook = sheet.getWorkbook();",
                "+\t\tsuper(sheet);",
                " \t}",
                "@@ -140,86 +128,2 @@ public class ExcelReader implements Closeable {",
                " \t// ------------------------------------------------------------------------------------------------------- Getters and Setters start",
                "-\t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e7\u009a\u0084Workbook",
                "-\t * ",
                "-\t * @return Workbook",
                "-\t * @since 4.0.0",
                "-\t */",
                "-\tpublic Workbook getWorkbook() {",
                "-\t\treturn this.workbook;",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf\u00e8\u00a1\u00a8\u00e6\u00a0\u00bc\u00e6\u0095\u00b0",
                "-\t * ",
                "-\t * @return \u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf\u00e8\u00a1\u00a8\u00e6\u00a0\u00bc\u00e6\u0095\u00b0",
                "-\t * @since 4.0.10",
                "-\t */",
                "-\tpublic int getSheetCount() {",
                "-\t\treturn this.workbook.getNumberOfSheets();",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u00ad\u00a4\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf\u00e6\u0089\u0080\u00e6\u009c\u0089Sheet\u00e8\u00a1\u00a8",
                "-\t * ",
                "-\t * @return sheet\u00e8\u00a1\u00a8\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "-\t * @since 4.0.3",
                "-\t */",
                "-\tpublic List<Sheet> getSheets() {",
                "-\t\tfinal int totalSheet = getSheetCount();",
                "-\t\tfinal List<Sheet> result = new ArrayList<>(totalSheet);",
                "-\t\tfor (int i = 0; i < totalSheet; i++) {",
                "-\t\t\tresult.add(this.workbook.getSheetAt(i));",
                "-\t\t}",
                "-\t\treturn result;",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e8\u00a1\u00a8\u00e5\u0090\u008d\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "-\t * ",
                "-\t * @return \u00e8\u00a1\u00a8\u00e5\u0090\u008d\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "-\t * @since 4.0.3",
                "-\t */",
                "-\tpublic List<String> getSheetNames() {",
                "-\t\tfinal int totalSheet = workbook.getNumberOfSheets();",
                "-\t\tList<String> result = new ArrayList<>(totalSheet);",
                "-\t\tfor (int i = 0; i < totalSheet; i++) {",
                "-\t\t\tresult.add(this.workbook.getSheetAt(i).getSheetName());",
                "-\t\t}",
                "-\t\treturn result;",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e7\u00bc\u0096\u00e8\u00be\u0091\u00e7\u009a\u0084sheet",
                "-\t * ",
                "-\t * @return sheet",
                "-\t * @since 4.0.0",
                "-\t */",
                "-\tpublic Sheet getSheet() {",
                "-\t\treturn this.sheet;",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e7\u009a\u0084Sheet",
                "-\t * ",
                "-\t * @param sheetName sheet\u00e5\u0090\u008d",
                "-\t * @return this",
                "-\t * @since 4.0.10",
                "-\t */",
                "-\tpublic ExcelReader setSheet(String sheetName) {",
                "-\t\tthis.sheet = this.workbook.getSheet(sheetName);",
                "-\t\treturn this;",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e7\u009a\u0084Sheet",
                "-\t * ",
                "-\t * @param sheetIndex sheet\u00e5\u00ba\u008f\u00e5\u008f\u00b7\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e8\u00ae\u00a1\u00e6\u0095\u00b0",
                "-\t * @return this",
                "-\t * @since 4.0.10",
                "-\t */",
                "-\tpublic ExcelReader setSheet(int sheetIndex) {",
                "-\t\tthis.sheet = this.workbook.getSheetAt(sheetIndex);",
                "-\t\treturn this;",
                "-\t}",
                "-",
                " \t/**",
                "@@ -511,56 +415,2 @@ public class ExcelReader implements Closeable {",
                "-\t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc",
                "-\t * ",
                "-\t * @param x X\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e5\u0088\u0097\u00e5\u008f\u00b7",
                "-\t * @param y Y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e8\u00a1\u008c\u00e5\u008f\u00b7",
                "-\t * @return {@link Cell}",
                "-\t * @since 4.0.5",
                "-\t */",
                "-\tpublic Cell getCell(int x, int y) {",
                "-\t\treturn getCell(x, y, false);",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u0088\u0096\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc",
                "-\t * ",
                "-\t * @param x X\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e5\u0088\u0097\u00e5\u008f\u00b7",
                "-\t * @param y Y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e8\u00a1\u008c\u00e5\u008f\u00b7",
                "-\t * @return {@link Cell}",
                "-\t * @since 4.0.6",
                "-\t */",
                "-\tpublic Cell getOrCreateCell(int x, int y) {",
                "-\t\treturn getCell(x, y, true);",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc",
                "-\t * ",
                "-\t * @param x X\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e5\u0088\u0097\u00e5\u008f\u00b7",
                "-\t * @param y Y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e8\u00a1\u008c\u00e5\u008f\u00b7",
                "-\t * @param isCreateIfNotExist \u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e6\u0097\u00b6\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0088\u009b\u00e5\u00bb\u00ba",
                "-\t * @return {@link Cell}",
                "-\t * @since 4.0.6",
                "-\t */",
                "-\tpublic Cell getCell(int x, int y, boolean isCreateIfNotExist) {",
                "-\t\tfinal Row row = isCreateIfNotExist ? RowUtil.getOrCreateRow(this.sheet, y) : this.sheet.getRow(y);",
                "-\t\tif (null != row) {",
                "-\t\t\treturn isCreateIfNotExist ? CellUtil.getOrCreateCell(row, x) : row.getCell(x);",
                "-\t\t}",
                "-\t\treturn null;",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e5\u0085\u00b3\u00e9\u0097\u00ad\u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf",
                "-\t * ",
                "-\t * @since 3.2.0",
                "-\t */",
                "-\t@Override",
                "-\tpublic void close() {",
                "-\t\tIoUtil.close(this.workbook);",
                "-\t\tthis.sheet = null;",
                "-\t\tthis.workbook = null;",
                "-\t\tthis.isClosed = true;",
                "-\t}",
                "-",
                " \t/**",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "index 0d2d45ed5..183fcb284 100644",
                "--- a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "@@ -2,3 +2,2 @@ package cn.hutool.poi.excel;",
                "-import java.io.Closeable;",
                " import java.io.File;",
                "@@ -19,3 +18,2 @@ import org.apache.poi.ss.usermodel.Font;",
                " import org.apache.poi.ss.usermodel.HeaderFooter;",
                "-import org.apache.poi.ss.usermodel.Row;",
                " import org.apache.poi.ss.usermodel.Sheet;",
                "@@ -45,10 +43,4 @@ import cn.hutool.poi.excel.style.Align;",
                "  */",
                "-public class ExcelWriter implements Closeable {",
                "-",
                "-\t/** \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e8\u00a2\u00ab\u00e5\u0085\u00b3\u00e9\u0097\u00ad */",
                "-\tprivate boolean isClosed;",
                "-\t/** \u00e5\u00b7\u00a5\u00e4\u00bd\u009c\u00e7\u00b0\u00bf */",
                "-\tprivate Workbook workbook;",
                "-\t/** Excel\u00e4\u00b8\u00ad\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084Sheet */",
                "-\tprivate Sheet sheet;",
                "+public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                "+",
                " \t/** \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u0087\u00e4\u00bb\u00b6 */",
                "@@ -146,4 +138,3 @@ public class ExcelWriter implements Closeable {",
                " \tpublic ExcelWriter(Sheet sheet) {",
                "-\t\tthis.workbook = sheet.getWorkbook();",
                "-\t\tthis.sheet = sheet;",
                "+\t\tsuper(sheet);",
                " \t\tthis.styleSet = new StyleSet(workbook);",
                "@@ -153,20 +144,2 @@ public class ExcelWriter implements Closeable {",
                "-\t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096Workbook",
                "-\t * ",
                "-\t * @return Workbook",
                "-\t */",
                "-\tpublic Workbook getWorkbook() {",
                "-\t\treturn this.workbook;",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u00bd\u0093\u00e5\u0089\u008dSheet",
                "-\t * ",
                "-\t * @return {@link Sheet}",
                "-\t */",
                "-\tpublic Sheet getSheet() {",
                "-\t\treturn this.sheet;",
                "-\t}",
                "-",
                " \t/**",
                "@@ -284,16 +257,2 @@ public class ExcelWriter implements Closeable {",
                "-\t/**",
                "-\t * \u00e5\u0088\u0087\u00e6\u008d\u00a2sheet\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u009a\u0084sheet\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00ef\u00bc\u008c\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e4\u00b9\u008b<br>",
                "-\t * \u00e5\u00bd\u0093\u00e5\u0088\u0087\u00e6\u008d\u00a2\u00e5\u0088\u00b0\u00e6\u0096\u00b0\u00e7\u009a\u0084sheet\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e6\u00b8\u00b8\u00e6\u00a0\u0087\u00e5\u00b0\u0086\u00e5\u00bd\u0092\u00e9\u009b\u00b6\u00e5\u0088\u00b0\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e8\u00a1\u008c",
                "-\t * ",
                "-\t * @param sheetName sheet\u00e5\u0090\u008d",
                "-\t * @return this",
                "-\t * @since 4.0.8",
                "-\t */",
                "-\tpublic ExcelWriter setOrCreateSheet(String sheetName) {",
                "-\t\tthis.sheet = ExcelUtil.getOrCreateSheet(this.workbook, sheetName);",
                "-\t\tthis.resetRow();",
                "-\t\treturn this;",
                "-\t}",
                "-",
                " \t/**",
                "@@ -593,15 +552,2 @@ public class ExcelWriter implements Closeable {",
                "-\t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u0088\u0096\u00e8\u0080\u0085\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e4\u00bd\u008d\u00e7\u00bd\u00ae\u00e7\u009a\u0084\u00e5\u008d\u0095\u00e5\u0085\u0083\u00e6\u00a0\u00bc",
                "-\t * ",
                "-\t * @param x X\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e5\u0088\u0097\u00e5\u008f\u00b7",
                "-\t * @param y Y\u00e5\u009d\u0090\u00e6\u00a0\u0087\u00ef\u00bc\u008c\u00e4\u00bb\u008e0\u00e8\u00ae\u00a1\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e8\u00a1\u008c\u00e5\u008f\u00b7",
                "-\t * @return {@link Cell}",
                "-\t * @since 4.0.9",
                "-\t */",
                "-\tpublic Cell getOrCreateCell(int x, int y) {",
                "-\t\tfinal Row row = RowUtil.getOrCreateRow(this.sheet, y);",
                "-\t\treturn CellUtil.getOrCreateCell(row, x);",
                "-\t}",
                "-",
                " \t/**",
                "@@ -613,7 +559,9 @@ public class ExcelWriter implements Closeable {",
                " \t * @since 4.0.9",
                "+\t * @deprecated \u00e8\u00af\u00b7\u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link #getOrCreateCellStyle(int, int)}",
                " \t */",
                "+\t@Deprecated",
                " \tpublic CellStyle createStyleForCell(int x, int y) {",
                "-\t\tfinal CellStyle cellStyle = this.workbook.createCellStyle();",
                " \t\tfinal Cell cell = getOrCreateCell(x, y);",
                "-\t\tcell.setCellStyle(this.workbook.createCellStyle());",
                "+\t\tfinal CellStyle cellStyle = this.workbook.createCellStyle();",
                "+\t\tcell.setCellStyle(cellStyle);",
                " \t\treturn cellStyle;",
                "@@ -690,3 +638,3 @@ public class ExcelWriter implements Closeable {",
                " \t\t}",
                "-\t\tIoUtil.close(this.workbook);",
                "+\t\tsuper.close();",
                "@@ -695,5 +643,2 @@ public class ExcelWriter implements Closeable {",
                " \t\tthis.styleSet = null;",
                "-\t\tthis.sheet = null;",
                "-\t\tthis.workbook = null;",
                "-\t\tisClosed = true;",
                " \t}"
            ],
            "changed_files": [
                "hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelBase.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "47fdd0be91c9da99d4237953a7586f1fb78bb5e2",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1535541133,
            "hunks": 2,
            "message": "fix null bug",
            "diff": [
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java b/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "index c53030ff6..2b817044a 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "@@ -299,2 +299,3 @@ final class InternalJSONUtil {",
                " \t\t\tif(BeanUtil.isBean(rowType)) {",
                "+\t\t\t\t//\u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e4\u00b8\u00baBean",
                " \t\t\t\ttargetValue = ((JSONObject) value).toBean(type, ignoreError);",
                "@@ -313,3 +314,3 @@ final class InternalJSONUtil {",
                " \t\t\ttry {",
                "-\t\t\t\ttargetValue = ConverterRegistry.getInstance().convert(rowType, value);",
                "+\t\t\t\ttargetValue = ConverterRegistry.getInstance().convert(type, value);",
                " \t\t\t} catch (ConvertException e) {"
            ],
            "changed_files": [
                "hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "e3252abccd61c9118ed00c852b42ccb8cf831362",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537977678,
            "hunks": 17,
            "message": "fix corm",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java b/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "index 9f11c889e..170941dc4 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "@@ -1487,3 +1487,3 @@ public class DateUtil {",
                " \t/**",
                "-\t * \u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e8\u00bd\u00ac\u00e4\u00b8\u00ba\u00e7\u00a7\u0092\u00e6\u0095\u00b0<br>",
                "+\t * HH:mm:ss \u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2\u00e8\u00bd\u00ac\u00e4\u00b8\u00ba\u00e7\u00a7\u0092\u00e6\u0095\u00b0<br>",
                " \t * \u00e5\u008f\u0082\u00e8\u0080\u0083\u00ef\u00bc\u009ahttps://github.com/iceroot",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/ObjectId.java b/hutool-core/src/main/java/cn/hutool/core/lang/ObjectId.java",
                "index c52973b92..d5a22bb3a 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/lang/ObjectId.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/ObjectId.java",
                "@@ -33,3 +33,3 @@ public class ObjectId {",
                " \t/** \u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00ae\u0089\u00e5\u0085\u00a8\u00e7\u009a\u0084\u00e4\u00b8\u008b\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e6\u0095\u00b0,\u00e6\u00af\u008f\u00e6\u00ac\u00a1\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e8\u0087\u00aa\u00e5\u00a2\u009e+1 */",
                "-\tprivate static AtomicInteger nextInc = new AtomicInteger(RandomUtil.randomInt());",
                "+\tprivate static final AtomicInteger nextInc = new AtomicInteger(RandomUtil.randomInt());",
                " \t/** \u00e6\u009c\u00ba\u00e5\u0099\u00a8\u00e4\u00bf\u00a1\u00e6\u0081\u00af */",
                "@@ -49,4 +49,5 @@ public class ObjectId {",
                " \t\tfinal int len = s.length();",
                "-\t\tif (len != 24)",
                "+\t\tif (len != 24) {",
                " \t\t\treturn false;",
                "+\t\t}",
                "@@ -69,2 +70,17 @@ public class ObjectId {",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e4\u00b8\u0080\u00e4\u00b8\u00aaobjectId\u00e7\u009a\u0084bytes\u00e8\u00a1\u00a8\u00e7\u008e\u00b0\u00e5\u00bd\u00a2\u00e5\u00bc\u008f",
                "+\t * ",
                "+\t * @return objectId",
                "+\t * @since 4.1.15",
                "+\t */",
                "+\tpublic static byte[] nextBytes() {",
                "+\t\tfinal ByteBuffer bb = ByteBuffer.wrap(new byte[12]);",
                "+\t\tbb.putInt((int) DateUtil.currentSeconds());// 4\u00e4\u00bd\u008d",
                "+\t\tbb.putInt(machine);// 4\u00e4\u00bd\u008d",
                "+\t\tbb.putInt(nextInc.getAndIncrement());// 4\u00e4\u00bd\u008d",
                "+",
                "+\t\treturn bb.array();",
                "+\t}",
                "+",
                " \t/**",
                "@@ -79,4 +95,5 @@ public class ObjectId {",
                " \t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e4\u00b8\u0080\u00e4\u00b8\u00aaobjectId\u00e7\u0094\u00a8\u00e4\u00b8\u008b\u00e5\u0088\u0092\u00e7\u00ba\u00bf\u00e5\u0088\u0086\u00e5\u0089\u00b2",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e4\u00b8\u0080\u00e4\u00b8\u00aaobjectId",
                " \t * ",
                "+\t * @param withHyphen \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e5\u0088\u0086\u00e9\u009a\u0094\u00e7\u00ac\u00a6",
                " \t * @return objectId",
                "@@ -84,9 +101,3 @@ public class ObjectId {",
                " \tpublic static String next(boolean withHyphen) {",
                "-\t\tByteBuffer bb = ByteBuffer.wrap(new byte[12]);",
                "-\t\tbb.putInt((int) DateUtil.currentSeconds());// 4\u00e4\u00bd\u008d",
                "-\t\tbb.putInt(machine);// 4\u00e4\u00bd\u008d",
                "-\t\tbb.putInt(nextInc.getAndIncrement());// 4\u00e4\u00bd\u008d",
                "-",
                "-\t\t// \u00e5\u008e\u009f\u00e6\u009d\u00a5objectId\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e5\u008c\u0096\u00e5\u00a4\u00aa\u00e6\u0085\u00a2",
                "-\t\tbyte[] array = bb.array();",
                "+\t\tbyte[] array = nextBytes();",
                " \t\tfinal StringBuilder buf = new StringBuilder(withHyphen ? 26 : 24);",
                "@@ -99,3 +110,3 @@ public class ObjectId {",
                " \t\t\tif (t < 16) {",
                "-\t\t\t\tbuf.append(\"0\");",
                "+\t\t\t\tbuf.append('0');",
                " \t\t\t}",
                "@@ -148,3 +159,9 @@ public class ObjectId {",
                " \t\t\t// \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e8\u00bf\u009b\u00e7\u00a8\u008bID",
                "-\t\t\tprocessId = ManagementFactory.getRuntimeMXBean().getName().hashCode();",
                "+\t\t\tfinal String processName =ManagementFactory.getRuntimeMXBean().getName();",
                "+\t\t\tfinal int atIndex = processName.indexOf('@');",
                "+\t\t\tif (atIndex > 0) {",
                "+\t\t\t\tprocessId = Integer.parseInt(processName.substring(0, atIndex));",
                "+\t\t\t} else {",
                "+\t\t\t\tprocessId = processName.hashCode();",
                "+\t\t\t}",
                " \t\t} catch (Throwable t) {",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java",
                "index 0fc407c9d..1aa461b38 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java",
                "@@ -24,2 +24,3 @@ import cn.hutool.core.io.IORuntimeException;",
                " import cn.hutool.core.io.resource.ResourceUtil;",
                "+import cn.hutool.core.lang.Assert;",
                " import cn.hutool.core.lang.ClassScaner;",
                "@@ -820,6 +821,4 @@ public class ClassUtil {",
                " \tpublic static boolean isPublic(Method method) {",
                "-\t\tif (null == method) {",
                "-\t\t\tthrow new NullPointerException(\"Method to provided is null.\");",
                "-\t\t}",
                "-\t\treturn isPublic(method.getDeclaringClass());",
                "+\t\tAssert.notNull(method, \"Method to provided is null.\");",
                "+\t\treturn Modifier.isPublic(method.getModifiers());",
                " \t}",
                "@@ -853,2 +852,3 @@ public class ClassUtil {",
                " \tpublic static boolean isStatic(Method method) {",
                "+\t\tAssert.notNull(method, \"Method to provided is null.\");",
                " \t\treturn Modifier.isStatic(method.getModifiers());",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java",
                "index d4443bb0d..994b02a7e 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java",
                "@@ -61,2 +61,15 @@ public class RandomUtil {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e6\u0095\u00b0\u00e4\u00ba\u00a7\u00e7\u0094\u009f\u00e5\u0099\u00a8",
                "+\t * ",
                "+\t * @param isSecure \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba\u00e5\u00bc\u00ba\u00e9\u009a\u008f\u00e6\u009c\u00ba\u00e6\u0095\u00b0\u00e7\u0094\u009f\u00e6\u0088\u0090\u00e5\u0099\u00a8 (RNG)",
                "+\t * @return {@link Random}",
                "+\t * @since 4.1.15",
                "+\t * @see #getSecureRandom()",
                "+\t * @see #getRandom()",
                "+\t */",
                "+\tpublic static Random getRandom(boolean isSecure) {",
                "+\t\treturn isSecure ? getSecureRandom() : getRandom();",
                "+\t}",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java b/hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java",
                "index 3bd6bcf2e..30fbbf91d 100644",
                "--- a/hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java",
                "@@ -144,3 +144,3 @@ public class CronPattern {",
                " \tpublic boolean match(TimeZone timezone, long millis, boolean isMatchSecond) {",
                "-\t\tGregorianCalendar calendar = new GregorianCalendar(timezone);",
                "+\t\tfinal GregorianCalendar calendar = new GregorianCalendar(timezone);",
                " \t\tcalendar.setTimeInMillis(millis);",
                "diff --git a/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java b/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java",
                "index f7ce71e69..9dca1829b 100644",
                "--- a/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java",
                "+++ b/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java",
                "@@ -121,3 +121,3 @@ public class ValueMatcherBuilder {",
                " \t\t// \u00e5\u0085\u00a8\u00e9\u0083\u00a8\u00e5\u008c\u00b9\u00e9\u0085\u008d\u00e5\u00bd\u00a2\u00e5\u00bc\u008f",
                "-\t\tif (value.length() == 1 && value.equals(\"*\")) {",
                "+\t\tif (value.length() <= 2) {",
                " \t\t\tif(step < 1) {",
                "@@ -126,3 +126,17 @@ public class ValueMatcherBuilder {",
                " \t\t\t}",
                "-\t\t\tfor (int i = parser.getMin(); i <= parser.getMax(); i+=step) {",
                "+\t\t\t",
                "+\t\t\t//\u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e6\u00ad\u00a5\u00e8\u00bf\u009b\u00e7\u009a\u0084\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e6\u0095\u00b0\u00e5\u00ad\u0097\u00e7\u00a1\u00ae\u00e5\u00ae\u009a\u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u008c\u00e7\u00b1\u00bb\u00e4\u00bc\u00bc\u00e4\u00ba\u008e 12/3\u00e5\u0088\u0099\u00e4\u00bb\u008e12\u00ef\u00bc\u0088\u00e7\u00a7\u0092\u00e3\u0080\u0081\u00e5\u0088\u0086\u00e7\u00ad\u0089\u00ef\u00bc\u0089\u00e5\u00bc\u0080\u00e5\u00a7\u008b",
                "+\t\t\tint minValue = parser.getMin();",
                "+\t\t\tif(false == \"*\".equals(value) && false == \"?\".equals(value)) {",
                "+\t\t\t\ttry {",
                "+\t\t\t\t\tminValue = Math.max(minValue, Integer.parseInt(value));",
                "+\t\t\t\t} catch (NumberFormatException e) {",
                "+\t\t\t\t\tthrow new CronException(\"Invalid field value: [{}]\", value);",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tfinal int maxValue = parser.getMax();",
                "+\t\t\tif(minValue > maxValue) {",
                "+\t\t\t\tthrow new CronException(\"Invalid value {} > {}\", minValue, maxValue);",
                "+\t\t\t}",
                "+\t\t\tfor (int i = minValue; i <= maxValue; i+=step) {",
                " \t\t\t\tresults.add(i);"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/lang/ObjectId.java",
                "hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java",
                "hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java",
                "hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "bc20903d72b46db8b1555e16701b99212bf36c0e",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1536890285,
            "hunks": 1,
            "message": "fix RuntimeUtil bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/RuntimeUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/RuntimeUtil.java",
                "index b9e719401..82a863156 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/RuntimeUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/RuntimeUtil.java",
                "@@ -167,2 +167,3 @@ public class RuntimeUtil {",
                " \t\t\tIoUtil.close(in);",
                "+\t\t\tdestroy(process);",
                " \t\t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/RuntimeUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4353f96a23e5ea74d6a7d9778e2ed042af553a9f",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1535550439,
            "hunks": 1,
            "message": "fix setting bug",
            "diff": [
                "diff --git a/hutool-setting/src/main/java/cn/hutool/setting/GroupedMap.java b/hutool-setting/src/main/java/cn/hutool/setting/GroupedMap.java",
                "index 4e4175e2e..8312bbe9e 100644",
                "--- a/hutool-setting/src/main/java/cn/hutool/setting/GroupedMap.java",
                "+++ b/hutool-setting/src/main/java/cn/hutool/setting/GroupedMap.java",
                "@@ -183,3 +183,3 @@ public class GroupedMap extends LinkedHashMap<String, LinkedHashMap<String, Stri",
                " \t\tif (MapUtil.isNotEmpty(valueMap)) {",
                "-\t\t\tvalueMap.keySet();",
                "+\t\t\treturn valueMap.keySet();",
                " \t\t}"
            ],
            "changed_files": [
                "hutool-setting/src/main/java/cn/hutool/setting/GroupedMap.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8a9d291551bb799db3b76ce77cec106e65737009",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1532347315,
            "hunks": 1,
            "message": "fix qrCodeUtil bug",
            "diff": [
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/qrcode/QrCodeUtil.java b/hutool-extra/src/main/java/cn/hutool/extra/qrcode/QrCodeUtil.java",
                "index 6dab27db2..284112585 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/qrcode/QrCodeUtil.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/qrcode/QrCodeUtil.java",
                "@@ -246,2 +246,6 @@ public class QrCodeUtil {",
                " \t\thints.put(DecodeHintType.CHARACTER_SET, CharsetUtil.UTF_8);",
                "+\t\t//\u00e4\u00bc\u0098\u00e5\u008c\u0096\u00e7\u00b2\u00be\u00e5\u00ba\u00a6",
                "+\t\thints.put(DecodeHintType.TRY_HARDER, Boolean.TRUE);",
                "+\t\t//\u00e5\u00a4\u008d\u00e6\u009d\u0082\u00e6\u00a8\u00a1\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e5\u00bc\u0080\u00e5\u0090\u00afPURE_BARCODE\u00e6\u00a8\u00a1\u00e5\u00bc\u008f",
                "+\t\thints.put(DecodeHintType.PURE_BARCODE, Boolean.TRUE);",
                " \t\tResult result;"
            ],
            "changed_files": [
                "hutool-extra/src/main/java/cn/hutool/extra/qrcode/QrCodeUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "da8c1b4e099b016ee253b1eddefd11bf022e9b17",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1534603207,
            "hunks": 19,
            "message": "add cglib support for aop",
            "diff": [
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/Aspect.java b/hutool-aop/src/main/java/cn/hutool/aop/Aspect.java",
                "deleted file mode 100644",
                "index 3414b9e0d..000000000",
                "--- a/hutool-aop/src/main/java/cn/hutool/aop/Aspect.java",
                "+++ /dev/null",
                "@@ -1,76 +0,0 @@",
                "-package cn.hutool.aop;",
                "-",
                "-import java.lang.reflect.InvocationHandler;",
                "-import java.lang.reflect.InvocationTargetException;",
                "-import java.lang.reflect.Method;",
                "-",
                "-import cn.hutool.core.exceptions.UtilException;",
                "-import cn.hutool.core.util.ReflectUtil;",
                "-",
                "-/**",
                "- * \u00e5\u0088\u0087\u00e9\u009d\u00a2\u00e6\u008a\u00bd\u00e8\u00b1\u00a1",
                "- * @author Looly",
                "- *",
                "- */",
                "-public abstract class Aspect implements InvocationHandler{",
                "-\t",
                "-\tprivate Object target;",
                "-\t",
                "-\tpublic Aspect(Object target) {",
                "-\t\tthis.target = target;",
                "-\t}",
                "-\t",
                "-\tpublic Object getTarget(){",
                "-\t\treturn this.target;",
                "-\t}",
                "-\t",
                "-\t/**",
                "-\t * \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e5\u0089\u008d\u00e7\u009a\u0084\u00e6\u0093\u008d\u00e4\u00bd\u009c",
                "-\t * @param target \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "-\t * @param method \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "-\t * @param args \u00e5\u008f\u0082\u00e6\u0095\u00b0",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e7\u00bb\u00a7\u00e7\u00bb\u00ad\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e6\u008e\u00a5\u00e4\u00b8\u008b\u00e6\u009d\u00a5\u00e7\u009a\u0084\u00e6\u0093\u008d\u00e4\u00bd\u009c",
                "-\t */",
                "-\tpublic abstract boolean before(Object target, Method method, Object[] args);",
                "-\t",
                "-\t/**",
                "-\t * \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e6\u0093\u008d\u00e4\u00bd\u009c",
                "-\t * @param target \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "-\t * @param method \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "-\t * @param args \u00e5\u008f\u0082\u00e6\u0095\u00b0",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0085\u0081\u00e8\u00ae\u00b8\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u0080\u00bc\u00ef\u00bc\u0088\u00e6\u008e\u00a5\u00e4\u00b8\u008b\u00e6\u009d\u00a5\u00e7\u009a\u0084\u00e6\u0093\u008d\u00e4\u00bd\u009c\u00ef\u00bc\u0089",
                "-\t */",
                "-\tpublic abstract boolean after(Object target, Method method, Object[] args);",
                "-\t",
                "-\t/**",
                "-\t * \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e6\u0097\u00b6\u00e7\u009a\u0084\u00e6\u0093\u008d\u00e4\u00bd\u009c",
                "-\t * @param target \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "-\t * @param method \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "-\t * @param args \u00e5\u008f\u0082\u00e6\u0095\u00b0",
                "-\t * @param e \u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0085\u0081\u00e8\u00ae\u00b8\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "-\t */",
                "-\tpublic abstract boolean afterException(Object target, Method method, Object[] args, Throwable e);",
                "-\t",
                "-\t@Override",
                "-\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {",
                "-\t\tObject result = null;",
                "-\t\tif(before(target, method, args)){",
                "-\t\t\ttry {",
                "-\t\t\t\tresult = ReflectUtil.invoke(target, method, args);",
                "-\t\t\t}catch (UtilException e) {",
                "-\t\t\t\tfinal Throwable cause = e.getCause();",
                "-\t\t\t\tif(e.getCause() instanceof InvocationTargetException) {",
                "-\t\t\t\t\tafterException(target, method, args, ((InvocationTargetException)cause).getTargetException());",
                "-\t\t\t\t}else {",
                "-\t\t\t\t\tthrow e;//\u00e5\u0085\u00b6\u00e5\u00ae\u0083\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e5\u00b1\u009e\u00e4\u00ba\u008e\u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e7\u009a\u0084\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00ef\u00bc\u008c\u00e7\u009b\u00b4\u00e6\u008e\u00a5\u00e6\u008a\u009b\u00e5\u0087\u00ba",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "-\t\t}",
                "-\t\tif(after(target, method, args)){",
                "-\t\t\treturn result;",
                "-\t\t}",
                "-\t\treturn null;",
                "-\t}",
                "-\t",
                "-}",
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/ProxyUtil.java b/hutool-aop/src/main/java/cn/hutool/aop/ProxyUtil.java",
                "index 22542e75b..6c458ee9b 100644",
                "--- a/hutool-aop/src/main/java/cn/hutool/aop/ProxyUtil.java",
                "+++ b/hutool-aop/src/main/java/cn/hutool/aop/ProxyUtil.java",
                "@@ -6,2 +6,4 @@ import java.lang.reflect.Proxy;",
                "+import cn.hutool.aop.aspects.Aspect;",
                "+import cn.hutool.aop.proxy.ProxyFactory;",
                " import cn.hutool.core.util.ClassUtil;",
                "@@ -24,6 +26,4 @@ public final class ProxyUtil {",
                " \t */",
                "-\t@SuppressWarnings(\"unchecked\")",
                " \tpublic static <T> T proxy(T target, Class<? extends Aspect> aspectClass){",
                "-\t\tfinal Aspect aspect = ReflectUtil.newInstance(aspectClass, target);",
                "-\t\treturn (T) newProxyInstance(target.getClass().getClassLoader(), aspect, target.getClass().getInterfaces());",
                "+\t\treturn proxy(target, ReflectUtil.newInstance(aspectClass));",
                " \t}",
                "@@ -37,6 +37,4 @@ public final class ProxyUtil {",
                " \t */",
                "-\t@SuppressWarnings(\"unchecked\")",
                "-\tpublic static <T> T proxy(Aspect aspect){",
                "-\t\tfinal Object target = aspect.getTarget();",
                "-\t\treturn (T) newProxyInstance(target.getClass().getClassLoader(), aspect, target.getClass().getInterfaces());",
                "+\tpublic static <T> T proxy(T target, Aspect aspect){",
                "+\t\treturn ProxyFactory.createProxy(target, aspect);",
                " \t}",
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/aspects/Aspect.java b/hutool-aop/src/main/java/cn/hutool/aop/aspects/Aspect.java",
                "new file mode 100644",
                "index 000000000..ab3e8473a",
                "--- /dev/null",
                "+++ b/hutool-aop/src/main/java/cn/hutool/aop/aspects/Aspect.java",
                "@@ -0,0 +1,43 @@",
                "+package cn.hutool.aop.aspects;",
                "+",
                "+import java.lang.reflect.Method;",
                "+",
                "+/**",
                "+ * \u00e5\u0088\u0087\u00e9\u009d\u00a2\u00e6\u008e\u00a5\u00e5\u008f\u00a3",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.18",
                "+ */",
                "+public interface Aspect {",
                "+",
                "+\t/**",
                "+\t * \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e5\u0089\u008d\u00e7\u009a\u0084\u00e6\u0093\u008d\u00e4\u00bd\u009c",
                "+\t * ",
                "+\t * @param target \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param method \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t * @param args \u00e5\u008f\u0082\u00e6\u0095\u00b0",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e7\u00bb\u00a7\u00e7\u00bb\u00ad\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e6\u008e\u00a5\u00e4\u00b8\u008b\u00e6\u009d\u00a5\u00e7\u009a\u0084\u00e6\u0093\u008d\u00e4\u00bd\u009c",
                "+\t */",
                "+\tboolean before(Object target, Method method, Object[] args);",
                "+",
                "+\t/**",
                "+\t * \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e6\u0093\u008d\u00e4\u00bd\u009c",
                "+\t * ",
                "+\t * @param target \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param method \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t * @param args \u00e5\u008f\u0082\u00e6\u0095\u00b0",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0085\u0081\u00e8\u00ae\u00b8\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u0080\u00bc\u00ef\u00bc\u0088\u00e6\u008e\u00a5\u00e4\u00b8\u008b\u00e6\u009d\u00a5\u00e7\u009a\u0084\u00e6\u0093\u008d\u00e4\u00bd\u009c\u00ef\u00bc\u0089",
                "+\t */",
                "+\tboolean after(Object target, Method method, Object[] args);",
                "+",
                "+\t/**",
                "+\t * \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e6\u0097\u00b6\u00e7\u009a\u0084\u00e6\u0093\u008d\u00e4\u00bd\u009c",
                "+\t * ",
                "+\t * @param target \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param method \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t * @param args \u00e5\u008f\u0082\u00e6\u0095\u00b0",
                "+\t * @param e \u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0085\u0081\u00e8\u00ae\u00b8\u00e6\u008a\u009b\u00e5\u0087\u00ba\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t */",
                "+\tboolean afterException(Object target, Method method, Object[] args, Throwable e);",
                "+}",
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/aspects/SimpleAspect.java b/hutool-aop/src/main/java/cn/hutool/aop/aspects/SimpleAspect.java",
                "index d3b9a292e..265898227 100644",
                "--- a/hutool-aop/src/main/java/cn/hutool/aop/aspects/SimpleAspect.java",
                "+++ b/hutool-aop/src/main/java/cn/hutool/aop/aspects/SimpleAspect.java",
                "@@ -4,4 +4,2 @@ import java.lang.reflect.Method;",
                "-import cn.hutool.aop.Aspect;",
                "-",
                " /**",
                "@@ -13,8 +11,4 @@ import cn.hutool.aop.Aspect;",
                "  */",
                "-public class SimpleAspect extends Aspect{",
                "+public class SimpleAspect implements Aspect{",
                "-\tpublic SimpleAspect(Object target) {",
                "-\t\tsuper(target);",
                "-\t}",
                "-",
                " \t@Override",
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/aspects/TimeIntervalAspect.java b/hutool-aop/src/main/java/cn/hutool/aop/aspects/TimeIntervalAspect.java",
                "index 7810895bb..516b60f6f 100644",
                "--- a/hutool-aop/src/main/java/cn/hutool/aop/aspects/TimeIntervalAspect.java",
                "+++ b/hutool-aop/src/main/java/cn/hutool/aop/aspects/TimeIntervalAspect.java",
                "@@ -16,6 +16,2 @@ public class TimeIntervalAspect extends SimpleAspect{",
                "-\tpublic TimeIntervalAspect(Object target) {",
                "-\t\tsuper(target);",
                "-\t}",
                "-\t",
                " \tprivate TimeInterval interval = new TimeInterval();",
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/interceptor/CglibInterceptor.java b/hutool-aop/src/main/java/cn/hutool/aop/interceptor/CglibInterceptor.java",
                "new file mode 100644",
                "index 000000000..d33a0292e",
                "--- /dev/null",
                "+++ b/hutool-aop/src/main/java/cn/hutool/aop/interceptor/CglibInterceptor.java",
                "@@ -0,0 +1,51 @@",
                "+package cn.hutool.aop.interceptor;",
                "+",
                "+import java.lang.reflect.InvocationTargetException;",
                "+import java.lang.reflect.Method;",
                "+",
                "+import cn.hutool.aop.aspects.Aspect;",
                "+import cn.hutool.core.exceptions.UtilException;",
                "+import net.sf.cglib.proxy.MethodInterceptor;",
                "+import net.sf.cglib.proxy.MethodProxy;",
                "+",
                "+public class CglibInterceptor implements MethodInterceptor{",
                "+\tprivate Object target;",
                "+\tprivate Aspect aspect;",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param target \u00e8\u00a2\u00ab\u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param aspect \u00e5\u0088\u0087\u00e9\u009d\u00a2\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+\t */",
                "+\tpublic CglibInterceptor(Object target, Aspect aspect) {",
                "+\t\tthis.target = target;",
                "+\t\tthis.aspect = aspect;",
                "+\t}",
                "+\t",
                "+\tpublic Object getTarget(){",
                "+\t\treturn this.target;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable {",
                "+\t\tObject result = null;",
                "+\t\tif(aspect.before(target, method, args)){",
                "+\t\t\ttry {",
                "+//\t\t\t\tresult = ReflectUtil.invoke(target, method, args);",
                "+\t\t\t\tresult = proxy.invokeSuper(obj, args);",
                "+\t\t\t}catch (UtilException e) {",
                "+\t\t\t\tfinal Throwable cause = e.getCause();",
                "+\t\t\t\tif(e.getCause() instanceof InvocationTargetException) {",
                "+\t\t\t\t\taspect.afterException(target, method, args, ((InvocationTargetException)cause).getTargetException());",
                "+\t\t\t\t}else {",
                "+\t\t\t\t\tthrow e;//\u00e5\u0085\u00b6\u00e5\u00ae\u0083\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e5\u00b1\u009e\u00e4\u00ba\u008e\u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e7\u009a\u0084\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00ef\u00bc\u008c\u00e7\u009b\u00b4\u00e6\u008e\u00a5\u00e6\u008a\u009b\u00e5\u0087\u00ba",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\tif(aspect.after(target, method, args)){",
                "+\t\t\treturn result;",
                "+\t\t}",
                "+\t\treturn null;",
                "+\t}",
                "+}",
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/interceptor/JdkInterceptor.java b/hutool-aop/src/main/java/cn/hutool/aop/interceptor/JdkInterceptor.java",
                "new file mode 100644",
                "index 000000000..1d4bf2ee4",
                "--- /dev/null",
                "+++ b/hutool-aop/src/main/java/cn/hutool/aop/interceptor/JdkInterceptor.java",
                "@@ -0,0 +1,59 @@",
                "+package cn.hutool.aop.interceptor;",
                "+",
                "+import java.lang.reflect.InvocationHandler;",
                "+import java.lang.reflect.InvocationTargetException;",
                "+import java.lang.reflect.Method;",
                "+",
                "+import cn.hutool.aop.aspects.Aspect;",
                "+import cn.hutool.core.exceptions.UtilException;",
                "+import cn.hutool.core.util.ReflectUtil;",
                "+",
                "+/**",
                "+ * \u00e5\u0088\u0087\u00e9\u009d\u00a2\u00e6\u008a\u00bd\u00e8\u00b1\u00a1",
                "+ * @author Looly",
                "+ *",
                "+ */",
                "+public class JdkInterceptor implements InvocationHandler{",
                "+\t",
                "+\tprivate Object target;",
                "+\tprivate Aspect aspect;",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param target \u00e8\u00a2\u00ab\u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param aspect \u00e5\u0088\u0087\u00e9\u009d\u00a2\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+\t */",
                "+\tpublic JdkInterceptor(Object target, Aspect aspect) {",
                "+\t\tthis.target = target;",
                "+\t\tthis.aspect = aspect;",
                "+\t}",
                "+\t",
                "+\tpublic Object getTarget(){",
                "+\t\treturn this.target;",
                "+\t}",
                "+\t",
                "+\t@Override",
                "+\tpublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable {",
                "+\t\tfinal Object target = this.target;",
                "+\t\tfinal Aspect aspect = this.aspect;",
                "+\t\tObject result = null;",
                "+\t\tif(aspect.before(target, method, args)){",
                "+\t\t\ttry {",
                "+\t\t\t\tresult = ReflectUtil.invoke(target, method, args);",
                "+\t\t\t}catch (UtilException e) {",
                "+\t\t\t\tfinal Throwable cause = e.getCause();",
                "+\t\t\t\tif(e.getCause() instanceof InvocationTargetException) {",
                "+\t\t\t\t\taspect.afterException(target, method, args, ((InvocationTargetException)cause).getTargetException());",
                "+\t\t\t\t}else {",
                "+\t\t\t\t\tthrow e;//\u00e5\u0085\u00b6\u00e5\u00ae\u0083\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e5\u00b1\u009e\u00e4\u00ba\u008e\u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e7\u009a\u0084\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00ef\u00bc\u008c\u00e7\u009b\u00b4\u00e6\u008e\u00a5\u00e6\u008a\u009b\u00e5\u0087\u00ba",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\tif(aspect.after(target, method, args)){",
                "+\t\t\treturn result;",
                "+\t\t}",
                "+\t\treturn null;",
                "+\t}",
                "+\t",
                "+}",
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/interceptor/package-info.java b/hutool-aop/src/main/java/cn/hutool/aop/interceptor/package-info.java",
                "new file mode 100644",
                "index 000000000..49027f094",
                "--- /dev/null",
                "+++ b/hutool-aop/src/main/java/cn/hutool/aop/interceptor/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e6\u008b\u00a6\u00e6\u0088\u00aa\u00e5\u0099\u00a8\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.aop.interceptor;",
                "\\ No newline at end of file",
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/proxy/CglibProxyFactory.java b/hutool-aop/src/main/java/cn/hutool/aop/proxy/CglibProxyFactory.java",
                "new file mode 100644",
                "index 000000000..ecb6baf5c",
                "--- /dev/null",
                "+++ b/hutool-aop/src/main/java/cn/hutool/aop/proxy/CglibProxyFactory.java",
                "@@ -0,0 +1,24 @@",
                "+package cn.hutool.aop.proxy;",
                "+",
                "+import cn.hutool.aop.aspects.Aspect;",
                "+import cn.hutool.aop.interceptor.CglibInterceptor;",
                "+import net.sf.cglib.proxy.Enhancer;",
                "+",
                "+/**",
                "+ * \u00e5\u009f\u00ba\u00e4\u00ba\u008eCglib\u00e7\u009a\u0084\u00e5\u0088\u0087\u00e9\u009d\u00a2\u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00b7\u00a5\u00e5\u008e\u0082",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+public class CglibProxyFactory extends ProxyFactory{",
                "+",
                "+\t@Override",
                "+\t@SuppressWarnings(\"unchecked\")",
                "+\tpublic <T> T proxy(T target, Aspect aspect) {",
                "+\t\tfinal Enhancer enhancer = new Enhancer();",
                "+\t\tenhancer.setSuperclass(target.getClass());",
                "+\t\tenhancer.setCallback(new CglibInterceptor(target, aspect));",
                "+\t\treturn (T) enhancer.create();",
                "+\t}",
                "+",
                "+}",
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/proxy/JdkProxyFactory.java b/hutool-aop/src/main/java/cn/hutool/aop/proxy/JdkProxyFactory.java",
                "new file mode 100644",
                "index 000000000..dd578bdd5",
                "--- /dev/null",
                "+++ b/hutool-aop/src/main/java/cn/hutool/aop/proxy/JdkProxyFactory.java",
                "@@ -0,0 +1,20 @@",
                "+package cn.hutool.aop.proxy;",
                "+",
                "+import cn.hutool.aop.ProxyUtil;",
                "+import cn.hutool.aop.aspects.Aspect;",
                "+import cn.hutool.aop.interceptor.JdkInterceptor;",
                "+",
                "+/**",
                "+ * JDK\u00e5\u00ae\u009e\u00e7\u008e\u00b0\u00e7\u009a\u0084\u00e5\u0088\u0087\u00e9\u009d\u00a2\u00e4\u00bb\u00a3\u00e7\u0090\u0086",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+public class JdkProxyFactory extends ProxyFactory{",
                "+",
                "+\t@Override",
                "+\t@SuppressWarnings(\"unchecked\")",
                "+\tpublic <T> T proxy(T target, Aspect aspect) {",
                "+\t\treturn (T) ProxyUtil.newProxyInstance(target.getClass().getClassLoader(), new JdkInterceptor(target, aspect), target.getClass().getInterfaces());",
                "+\t}",
                "+}",
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/proxy/ProxyFactory.java b/hutool-aop/src/main/java/cn/hutool/aop/proxy/ProxyFactory.java",
                "new file mode 100644",
                "index 000000000..00ed62872",
                "--- /dev/null",
                "+++ b/hutool-aop/src/main/java/cn/hutool/aop/proxy/ProxyFactory.java",
                "@@ -0,0 +1,47 @@",
                "+package cn.hutool.aop.proxy;",
                "+",
                "+import cn.hutool.aop.aspects.Aspect;",
                "+",
                "+/**",
                "+ * \u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00b7\u00a5\u00e5\u008e\u0082<br>",
                "+ * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u00bc\u0095\u00e5\u0085\u00a5\u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00ba\u0093\u00e7\u009a\u0084\u00e4\u00b8\u008d\u00e5\u0090\u008c\u00ef\u00bc\u008c\u00e4\u00ba\u00a7\u00e7\u0094\u009f\u00e4\u00b8\u008d\u00e5\u0090\u008c\u00e7\u009a\u0084\u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+public abstract class ProxyFactory {",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e4\u00bb\u00a3\u00e7\u0090\u0086",
                "+\t * ",
                "+\t * @param target \u00e8\u00a2\u00ab\u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param aspect \u00e5\u0088\u0087\u00e9\u009d\u00a2\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+\t * @return \u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t */",
                "+\tpublic abstract <T> T proxy(T target, Aspect aspect);",
                "+",
                "+\t/**",
                "+\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u00bc\u0095\u00e5\u0085\u00a5Cglib\u00e4\u00b8\u008e\u00e5\u0090\u00a6\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * ",
                "+\t * @param target \u00e8\u00a2\u00ab\u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param aspect \u00e5\u0088\u0087\u00e9\u009d\u00a2\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+\t * @return \u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t */",
                "+\tpublic static <T> T createProxy(T target, Aspect aspect) {",
                "+\t\treturn create().proxy(target, aspect);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u00bc\u0095\u00e5\u0085\u00a5Cglib\u00e4\u00b8\u008e\u00e5\u0090\u00a6\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00b7\u00a5\u00e5\u008e\u0082",
                "+\t * ",
                "+\t * @return \u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00b7\u00a5\u00e5\u008e\u0082",
                "+\t */",
                "+\tpublic static ProxyFactory create() {",
                "+\t\ttry {",
                "+\t\t\treturn new CglibProxyFactory();",
                "+\t\t} catch (NoClassDefFoundError e) {",
                "+\t\t\t// ignore",
                "+\t\t}",
                "+\t\treturn new JdkProxyFactory();",
                "+\t}",
                "+}",
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/proxy/package-info.java b/hutool-aop/src/main/java/cn/hutool/aop/proxy/package-info.java",
                "new file mode 100644",
                "index 000000000..62915a871",
                "--- /dev/null",
                "+++ b/hutool-aop/src/main/java/cn/hutool/aop/proxy/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.aop.proxy;",
                "\\ No newline at end of file",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java b/hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java",
                "new file mode 100644",
                "index 000000000..1e24d153c",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java",
                "@@ -0,0 +1,155 @@",
                "+package cn.hutool.extra.ftp;",
                "+",
                "+import java.io.IOException;",
                "+import java.nio.charset.Charset;",
                "+",
                "+import org.apache.commons.net.ftp.FTPClient;",
                "+import org.apache.commons.net.ftp.FTPFile;",
                "+import org.apache.commons.net.ftp.FTPReply;",
                "+",
                "+import cn.hutool.core.util.CharsetUtil;",
                "+",
                "+/**",
                "+ * FTP\u00e5\u00ae\u00a2\u00e6\u0088\u00b7\u00e7\u00ab\u00af\u00e5\u00b0\u0081\u00e8\u00a3\u0085<br>",
                "+ * \u00e6\u00ad\u00a4\u00e5\u00ae\u00a2\u00e6\u0088\u00b7\u00e7\u00ab\u00af\u00e5\u009f\u00ba\u00e4\u00ba\u008eApache-Commons-Net",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.8",
                "+ */",
                "+public class Ftp {",
                "+",
                "+\tprivate FTPClient client;",
                "+\tprivate Charset charset = CharsetUtil.CHARSET_UTF_8;",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u008c\u0096\u00e8\u00bf\u009e\u00e6\u008e\u00a5",
                "+\t * ",
                "+\t * @param host \u00e5\u009f\u009f\u00e5\u0090\u008d\u00e6\u0088\u0096IP",
                "+\t * @param port \u00e7\u00ab\u00af\u00e5\u008f\u00a3",
                "+\t * @param user \u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u0090\u008d",
                "+\t * @param password \u00e5\u00af\u0086\u00e7\u00a0\u0081",
                "+\t * @return this",
                "+\t */",
                "+\tpublic Ftp init(String host, int port, String user, String password) {",
                "+\t\tfinal FTPClient client = new FTPClient();",
                "+\t\tclient.setControlEncoding(this.charset.toString());",
                "+\t\ttry {",
                "+\t\t\t// \u00e8\u00bf\u009e\u00e6\u008e\u00a5ftp\u00e6\u009c\u008d\u00e5\u008a\u00a1\u00e5\u0099\u00a8",
                "+\t\t\tclient.connect(host, port);",
                "+\t\t\t// \u00e7\u0099\u00bb\u00e5\u00bd\u0095ftp\u00e6\u009c\u008d\u00e5\u008a\u00a1\u00e5\u0099\u00a8",
                "+\t\t\tclient.login(user, password);",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new FtpException(e);",
                "+\t\t}",
                "+\t\tfinal int replyCode = client.getReplyCode(); // \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0088\u0090\u00e5\u008a\u009f\u00e7\u0099\u00bb\u00e5\u00bd\u0095\u00e6\u009c\u008d\u00e5\u008a\u00a1\u00e5\u0099\u00a8",
                "+\t\tif (false == FTPReply.isPositiveCompletion(replyCode)) {",
                "+\t\t\ttry {",
                "+\t\t\t\tclient.disconnect();",
                "+\t\t\t} catch (IOException e) {",
                "+\t\t\t\t// ignore",
                "+\t\t\t}",
                "+\t\t\tthrow new FtpException(\"Login failed for user [{}], reply code is: [{}]\", user, replyCode);",
                "+\t\t}",
                "+\t\tthis.client = client;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u0094\u00b9\u00e5\u008f\u0098\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * ",
                "+\t * @param directory \u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0088\u0090\u00e5\u008a\u009f",
                "+\t */",
                "+\tpublic boolean cd(String directory) {",
                "+\t\tboolean flag = true;",
                "+\t\ttry {",
                "+\t\t\tflag = client.changeWorkingDirectory(directory);",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new FtpException(e);",
                "+\t\t}",
                "+\t\treturn flag;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e5\u00a4\u009a\u00e5\u00b1\u0082\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u009c\u0089ftp\u00e6\u009c\u008d\u00e5\u008a\u00a1\u00e5\u0099\u00a8\u00e5\u00b7\u00b2\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e8\u00af\u00a5\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e4\u00b8\u008d\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u0097\u00a0\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u0088\u009b\u00e5\u00bb\u00ba",
                "+\t * ",
                "+\t * @param remote",
                "+\t * @return",
                "+\t * @throws IOException",
                "+\t */",
                "+\tpublic boolean mkdir(String remote) {",
                "+\t\tboolean success = true;",
                "+\t\tString directory = remote + \"/\";",
                "+\t\t// \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e8\u00bf\u009c\u00e7\u00a8\u008b\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e9\u0080\u0092\u00e5\u00bd\u0092\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e8\u00bf\u009c\u00e7\u00a8\u008b\u00e6\u009c\u008d\u00e5\u008a\u00a1\u00e5\u0099\u00a8\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t\tif (!directory.equalsIgnoreCase(\"/\") && false == cd(new String(directory))) {",
                "+\t\t\tint start = 0;",
                "+\t\t\tint end = 0;",
                "+\t\t\tif (directory.startsWith(\"/\")) {",
                "+\t\t\t\tstart = 1;",
                "+\t\t\t} else {",
                "+\t\t\t\tstart = 0;",
                "+\t\t\t}",
                "+\t\t\tend = directory.indexOf(\"/\", start);",
                "+\t\t\tString path = \"\";",
                "+\t\t\tString paths = \"\";",
                "+\t\t\twhile (true) {",
                "+\t\t\t\tString subDirectory = remote.substring(start, end);",
                "+\t\t\t\tpath = path + \"/\" + subDirectory;",
                "+\t\t\t\tif (false == existFile(path)) {",
                "+\t\t\t\t\tif (makeDirectory(subDirectory)) {",
                "+\t\t\t\t\t\tcd(subDirectory);",
                "+\t\t\t\t\t} else {",
                "+\t\t\t\t\t\tSystem.out.println(\"\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e7\u009b\u00ae\u00e5\u00bd\u0095[\" + subDirectory + \"]\u00e5\u00a4\u00b1\u00e8\u00b4\u00a5\");",
                "+\t\t\t\t\t\tcd(subDirectory);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t} else {",
                "+\t\t\t\t\tcd(subDirectory);",
                "+\t\t\t\t}",
                "+",
                "+\t\t\t\tpaths = paths + \"/\" + subDirectory;",
                "+\t\t\t\tstart = end + 1;",
                "+\t\t\t\tend = directory.indexOf(\"/\", start);",
                "+\t\t\t\t// \u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e5\u00ae\u008c\u00e6\u00af\u0095",
                "+\t\t\t\tif (end <= start) {",
                "+\t\t\t\t\tbreak;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn success;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u00a4\u00e6\u0096\u00adftp\u00e6\u009c\u008d\u00e5\u008a\u00a1\u00e5\u0099\u00a8\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00ad\u0098\u00e5\u009c\u00a8",
                "+\t * ",
                "+\t * @param path \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00ad\u0098\u00e5\u009c\u00a8",
                "+\t */",
                "+\tpublic boolean existFile(String path) {",
                "+\t\tboolean flag = false;",
                "+\t\tFTPFile[] ftpFileArr;",
                "+\t\ttry {",
                "+\t\t\tftpFileArr = client.listFiles(path);",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new FtpException(e);",
                "+\t\t}",
                "+\t\tif (ftpFileArr.length > 0) {",
                "+\t\t\tflag = true;",
                "+\t\t}",
                "+\t\treturn flag;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * @param dir \u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0090\u008d",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0088\u0090\u00e5\u008a\u009f",
                "+\t */",
                "+\tprivate boolean makeDirectory(String dir) {",
                "+\t\tboolean flag = true;",
                "+\t\ttry {",
                "+\t\t\tflag = this.client.makeDirectory(dir);",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new FtpException(e);",
                "+\t\t}",
                "+\t\treturn flag;",
                "+\t}",
                "+",
                "+}",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/ftp/FtpException.java b/hutool-extra/src/main/java/cn/hutool/extra/ftp/FtpException.java",
                "new file mode 100644",
                "index 000000000..72df46aa8",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/ftp/FtpException.java",
                "@@ -0,0 +1,33 @@",
                "+package cn.hutool.extra.ftp;",
                "+",
                "+import cn.hutool.core.exceptions.ExceptionUtil;",
                "+import cn.hutool.core.util.StrUtil;",
                "+",
                "+/**",
                "+ * Ftp\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+ * ",
                "+ * @author xiaoleilu",
                "+ */",
                "+public class FtpException extends RuntimeException {",
                "+\tprivate static final long serialVersionUID = -8490149159895201756L;",
                "+",
                "+\tpublic FtpException(Throwable e) {",
                "+\t\tsuper(ExceptionUtil.getMessage(e), e);",
                "+\t}",
                "+",
                "+\tpublic FtpException(String message) {",
                "+\t\tsuper(message);",
                "+\t}",
                "+",
                "+\tpublic FtpException(String messageTemplate, Object... params) {",
                "+\t\tsuper(StrUtil.format(messageTemplate, params));",
                "+\t}",
                "+",
                "+\tpublic FtpException(String message, Throwable throwable) {",
                "+\t\tsuper(message, throwable);",
                "+\t}",
                "+",
                "+\tpublic FtpException(Throwable throwable, String messageTemplate, Object... params) {",
                "+\t\tsuper(StrUtil.format(messageTemplate, params), throwable);",
                "+\t}",
                "+}",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/ftp/package-info.java b/hutool-extra/src/main/java/cn/hutool/extra/ftp/package-info.java",
                "new file mode 100644",
                "index 000000000..a302983c7",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/ftp/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * \u00e5\u009f\u00ba\u00e4\u00ba\u008eApache Commons Net\u00e5\u00b0\u0081\u00e8\u00a3\u0085\u00e7\u009a\u0084FTP\u00e5\u00b7\u00a5\u00e5\u0085\u00b7",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.extra.ftp;",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "hutool-aop/src/main/java/cn/hutool/aop/Aspect.java",
                "hutool-aop/src/main/java/cn/hutool/aop/ProxyUtil.java",
                "hutool-aop/src/main/java/cn/hutool/aop/aspects/Aspect.java",
                "hutool-aop/src/main/java/cn/hutool/aop/aspects/SimpleAspect.java",
                "hutool-aop/src/main/java/cn/hutool/aop/aspects/TimeIntervalAspect.java",
                "hutool-aop/src/main/java/cn/hutool/aop/interceptor/CglibInterceptor.java",
                "hutool-aop/src/main/java/cn/hutool/aop/interceptor/JdkInterceptor.java",
                "hutool-aop/src/main/java/cn/hutool/aop/interceptor/package-info.java",
                "hutool-aop/src/main/java/cn/hutool/aop/proxy/CglibProxyFactory.java",
                "hutool-aop/src/main/java/cn/hutool/aop/proxy/JdkProxyFactory.java",
                "hutool-aop/src/main/java/cn/hutool/aop/proxy/ProxyFactory.java",
                "hutool-aop/src/main/java/cn/hutool/aop/proxy/package-info.java",
                "hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java",
                "hutool-extra/src/main/java/cn/hutool/extra/ftp/FtpException.java",
                "hutool-extra/src/main/java/cn/hutool/extra/ftp/package-info.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c4a54d69418e84d57c4c169613570731799200d6",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1536328001,
            "hunks": 6,
            "message": "add test and fix readme",
            "diff": [
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/AbstractDb.java b/hutool-db/src/main/java/cn/hutool/db/AbstractDb.java",
                "index 54991dc6b..7fb6415cd 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/AbstractDb.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/AbstractDb.java",
                "@@ -531,2 +531,3 @@ public abstract class AbstractDb{",
                " \t}",
                "+\t",
                " \t/**",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/TemplateUtil.java b/hutool-extra/src/main/java/cn/hutool/extra/template/TemplateUtil.java",
                "index 2561d3797..4dea6d73c 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/template/TemplateUtil.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/TemplateUtil.java",
                "@@ -12,2 +12,12 @@ public class TemplateUtil {",
                "+\t/**",
                "+\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u00bc\u0095\u00e5\u0085\u00a5\u00e7\u009a\u0084\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00bc\u0095\u00e6\u0093\u008ejar\u00ef\u00bc\u008c\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00bc\u0095\u00e6\u0093\u008e\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e9\u0085\u008d\u00e7\u00bd\u00ae",
                "+\t * ",
                "+\t * @return {@link Engine}",
                "+\t * @since 4.1.11",
                "+\t */",
                "+\tpublic static Engine createEngine() {",
                "+\t\treturn createEngine(new TemplateConfig());",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java",
                "index eaa7c615b..277ee29f8 100644",
                "--- a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java",
                "@@ -23,2 +23,3 @@ import cn.hutool.core.lang.Assert;",
                " import cn.hutool.core.map.MapUtil;",
                "+import cn.hutool.core.util.ObjectUtil;",
                " import cn.hutool.core.util.StrUtil;",
                "@@ -237,4 +238,4 @@ public class ExcelReader extends ExcelBase<ExcelReader> {",
                "-\t\tstartRowIndex = Math.max(startRowIndex, sheet.getFirstRowNum());// \u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e8\u00a1\u008c\u00ef\u00bc\u0088\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00ef\u00bc\u0089",
                "-\t\tendRowIndex = Math.min(endRowIndex, sheet.getLastRowNum());// \u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e8\u00a1\u008c\u00ef\u00bc\u0088\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00ef\u00bc\u0089",
                "+\t\tstartRowIndex = Math.max(startRowIndex, this.sheet.getFirstRowNum());// \u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e8\u00a1\u008c\u00ef\u00bc\u0088\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00ef\u00bc\u0089",
                "+\t\tendRowIndex = Math.min(endRowIndex, this.sheet.getLastRowNum());// \u00e8\u00af\u00bb\u00e5\u008f\u0096\u00e7\u00bb\u0093\u00e6\u009d\u009f\u00e8\u00a1\u008c\u00ef\u00bc\u0088\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00ef\u00bc\u0089",
                " \t\tboolean isFirstLine = true;",
                "@@ -249,3 +250,3 @@ public class ExcelReader extends ExcelBase<ExcelReader> {",
                " \t\t\t\t\tisFirstLine = false;",
                "-\t\t\t\t\tif (MapUtil.isNotEmpty(headerAlias)) {",
                "+\t\t\t\t\tif (MapUtil.isNotEmpty(this.headerAlias)) {",
                " \t\t\t\t\t\trowList = aliasHeader(rowList);",
                "@@ -454,7 +455,3 @@ public class ExcelReader extends ExcelBase<ExcelReader> {",
                " \t\t\t\theader = headerObj.toString();",
                "-\t\t\t\talias = this.headerAlias.get(header);",
                "-\t\t\t\tif (null == alias) {",
                "-\t\t\t\t\t// \u00e6\u0097\u00a0\u00e5\u0088\u00ab\u00e5\u0090\u008d\u00e5\u0088\u0099\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u008e\u009f\u00e6\u00a0\u0087\u00e9\u00a2\u0098",
                "-\t\t\t\t\talias = header;",
                "-\t\t\t\t}",
                "+\t\t\t\talias = ObjectUtil.defaultIfNull(this.headerAlias.get(header), header);",
                " \t\t\t}"
            ],
            "changed_files": [
                "hutool-db/src/main/java/cn/hutool/db/AbstractDb.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/TemplateUtil.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "9702d5a039a1907b1190a43782a090aacda10991",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537331088,
            "hunks": 4,
            "message": "remove useless code",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java",
                "index 0971a8615..de035cf2f 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java",
                "@@ -233,3 +233,3 @@ public class ObjectUtil {",
                " \t\t\tif (obj instanceof Cloneable) {",
                "-\t\t\t\tresult = ReflectUtil.invoke(obj, \"clone\", new Object[] {});",
                "+\t\t\t\tresult = ReflectUtil.invoke(obj, \"clone\");",
                " \t\t\t} else {",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/Entity.java b/hutool-db/src/main/java/cn/hutool/db/Entity.java",
                "index 422bc02f9..4635995be 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/Entity.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/Entity.java",
                "@@ -282,3 +282,3 @@ public class Entity extends Dict {",
                " \t\t\t\t// try oracle.sql.TIMESTAMP",
                "-\t\t\t\tresult = ReflectUtil.invoke(obj, \"timeValue\", new Object[] {});",
                "+\t\t\t\tresult = ReflectUtil.invoke(obj, \"timeValue\");",
                " \t\t\t}",
                "@@ -297,3 +297,3 @@ public class Entity extends Dict {",
                " \t\t\t\t// try oracle.sql.TIMESTAMP",
                "-\t\t\t\tresult = ReflectUtil.invoke(obj, \"dateValue\", new Object[] {});",
                "+\t\t\t\tresult = ReflectUtil.invoke(obj, \"dateValue\");",
                " \t\t\t}",
                "@@ -312,3 +312,3 @@ public class Entity extends Dict {",
                " \t\t\t\t// try oracle.sql.TIMESTAMP",
                "-\t\t\t\tresult = ReflectUtil.invoke(obj, \"timestampValue\", new Object[] {});",
                "+\t\t\t\tresult = ReflectUtil.invoke(obj, \"timestampValue\");",
                " \t\t\t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java",
                "hutool-db/src/main/java/cn/hutool/db/Entity.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "f42f4d7656d128f55d1192ea90047dea4b7dcb10",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1532311706,
            "hunks": 20,
            "message": "update comment",
            "diff": [
                "diff --git a/hutool-cache/src/main/java/cn/hutool/cache/Cache.java b/hutool-cache/src/main/java/cn/hutool/cache/Cache.java",
                "index 177efc2df..ea522c385 100644",
                "--- a/hutool-cache/src/main/java/cn/hutool/cache/Cache.java",
                "+++ b/hutool-cache/src/main/java/cn/hutool/cache/Cache.java",
                "@@ -8,2 +8,3 @@ import cn.hutool.cache.impl.CacheObj;",
                "  * \u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e6\u008e\u00a5\u00e5\u008f\u00a3",
                "+ * ",
                "  * @author Looly,jodd",
                "@@ -13,3 +14,3 @@ import cn.hutool.cache.impl.CacheObj;",
                "  */",
                "-public interface Cache<K, V> extends Iterable<V>{",
                "+public interface Cache<K, V> extends Iterable<V> {",
                "@@ -17,2 +18,3 @@ public interface Cache<K, V> extends Iterable<V>{",
                " \t * \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e5\u00ae\u00b9\u00e9\u0087\u008f\u00ef\u00bc\u008c<code>0</code>\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e6\u0097\u00a0\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00e9\u0099\u0090\u00e5\u0088\u00b6",
                "+\t * ",
                " \t * @return \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e5\u00ae\u00b9\u00e9\u0087\u008f\u00ef\u00bc\u008c<code>0</code>\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e6\u0097\u00a0\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00e9\u0099\u0090\u00e5\u0088\u00b6",
                "@@ -22,3 +24,4 @@ public interface Cache<K, V> extends Iterable<V>{",
                " \t/**",
                "-\t *  \u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e5\u00a4\u00b1\u00e6\u0095\u0088\u00e6\u0097\u00b6\u00e9\u0095\u00bf\u00ef\u00bc\u008c <code>0</code> \u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e6\u00b2\u00a1\u00e6\u009c\u0089\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00ef\u00bc\u008c\u00e5\u008d\u0095\u00e4\u00bd\u008d\u00e6\u00af\u00ab\u00e7\u00a7\u0092",
                "+\t * \u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e5\u00a4\u00b1\u00e6\u0095\u0088\u00e6\u0097\u00b6\u00e9\u0095\u00bf\u00ef\u00bc\u008c <code>0</code> \u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e6\u00b2\u00a1\u00e6\u009c\u0089\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00ef\u00bc\u008c\u00e5\u008d\u0095\u00e4\u00bd\u008d\u00e6\u00af\u00ab\u00e7\u00a7\u0092",
                "+\t * ",
                " \t * @return \u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e5\u00a4\u00b1\u00e6\u0095\u0088\u00e6\u0097\u00b6\u00e9\u0095\u00bf\u00ef\u00bc\u008c <code>0</code> \u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e6\u00b2\u00a1\u00e6\u009c\u0089\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00ef\u00bc\u008c\u00e5\u008d\u0095\u00e4\u00bd\u008d\u00e6\u00af\u00ab\u00e7\u00a7\u0092",
                "@@ -29,2 +32,3 @@ public interface Cache<K, V> extends Iterable<V>{",
                " \t * \u00e5\u00b0\u0086\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e5\u008a\u00a0\u00e5\u0085\u00a5\u00e5\u0088\u00b0\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00ef\u00bc\u008c\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u00a4\u00b1\u00e6\u0095\u0088\u00e6\u0097\u00b6\u00e9\u0095\u00bf",
                "+\t * ",
                " \t * @param key \u00e9\u0094\u00ae",
                "@@ -38,2 +42,3 @@ public interface Cache<K, V> extends Iterable<V>{",
                " \t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e7\u00a9\u00ba\u00e9\u0097\u00b4\u00e6\u00bb\u00a1\u00e4\u00ba\u0086\u00ef\u00bc\u008c{@link #prune()} \u00e5\u00b0\u0086\u00e8\u00a2\u00ab\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e4\u00bb\u00a5\u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e7\u00a9\u00ba\u00e9\u0097\u00b4\u00e6\u009d\u00a5\u00e5\u00ad\u0098\u00e6\u0094\u00be\u00e6\u0096\u00b0\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * ",
                " \t * @param key \u00e9\u0094\u00ae",
                "@@ -47,11 +52,20 @@ public interface Cache<K, V> extends Iterable<V>{",
                " \t * \u00e4\u00bb\u008e\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e4\u00b8\u00ad\u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e4\u00b8\u008d\u00e5\u009c\u00a8\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e4\u00b8\u00ad\u00e6\u0088\u0096\u00e5\u00b7\u00b2\u00e7\u00bb\u008f\u00e8\u00bf\u0087\u00e6\u009c\u009f\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>null</code>",
                "+\t * <p>",
                "+\t * \u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e4\u00bc\u009a\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e4\u00b8\u008a\u00e6\u00ac\u00a1\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u008e\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e5\u00b7\u00ae\u00e5\u0080\u00bc\u00e5\u00a4\u00a7\u00e4\u00ba\u008e\u00e8\u00b6\u0085\u00e6\u0097\u00b6\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>null</code>\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u0080\u00bc\u00e3\u0080\u0082",
                "+\t * <p>",
                "+\t * \u00e6\u00af\u008f\u00e6\u00ac\u00a1\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e4\u00bc\u009a\u00e5\u0088\u00b7\u00e6\u0096\u00b0\u00e6\u009c\u0080\u00e5\u0090\u008e\u00e8\u00ae\u00bf\u00e9\u0097\u00ae\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u008c\u00e4\u00b9\u009f\u00e5\u00b0\u00b1\u00e6\u0098\u00af\u00e8\u00af\u00b4\u00e4\u00bc\u009a\u00e9\u0087\u008d\u00e6\u0096\u00b0\u00e8\u00ae\u00a1\u00e7\u00ae\u0097\u00e8\u00b6\u0085\u00e6\u0097\u00b6\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e3\u0080\u0082",
                "+\t * ",
                " \t * @param key \u00e9\u0094\u00ae",
                " \t * @return \u00e9\u0094\u00ae\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @see #get(Object, boolean)",
                " \t */",
                " \tV get(K key);",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e4\u00bb\u008e\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e4\u00b8\u00ad\u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e4\u00b8\u008d\u00e5\u009c\u00a8\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e4\u00b8\u00ad\u00e6\u0088\u0096\u00e5\u00b7\u00b2\u00e7\u00bb\u008f\u00e8\u00bf\u0087\u00e6\u009c\u009f\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>null</code>",
                "+\t * <p>",
                "+\t * \u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e6\u00ad\u00a4\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e4\u00bc\u009a\u00e6\u00a3\u0080\u00e6\u009f\u00a5\u00e4\u00b8\u008a\u00e6\u00ac\u00a1\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u008e\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e5\u00b7\u00ae\u00e5\u0080\u00bc\u00e5\u00a4\u00a7\u00e4\u00ba\u008e\u00e8\u00b6\u0085\u00e6\u0097\u00b6\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e8\u00bf\u0094\u00e5\u009b\u009e<code>null</code>\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e5\u0080\u00bc\u00e3\u0080\u0082",
                "+\t * ",
                " \t * @param key \u00e9\u0094\u00ae",
                "-\t * @param isUpdateLastAccess \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u009b\u00b4\u00e6\u0096\u00b0\u00e6\u009c\u0080\u00e5\u0090\u008e\u00e8\u00ae\u00bf\u00e9\u0097\u00ae\u00e6\u0097\u00b6\u00e9\u0097\u00b4",
                "+\t * @param isUpdateLastAccess \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u009b\u00b4\u00e6\u0096\u00b0\u00e6\u009c\u0080\u00e5\u0090\u008e\u00e8\u00ae\u00bf\u00e9\u0097\u00ae\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u008c\u00e5\u008d\u00b3\u00e9\u0087\u008d\u00e6\u0096\u00b0\u00e8\u00ae\u00a1\u00e7\u00ae\u0097\u00e8\u00b6\u0085\u00e6\u0097\u00b6\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00e3\u0080\u0082",
                " \t * @return \u00e9\u0094\u00ae\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "@@ -62,2 +76,3 @@ public interface Cache<K, V> extends Iterable<V>{",
                " \t * \u00e8\u00bf\u0094\u00e5\u009b\u009e\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e8\u00bf\u00ad\u00e4\u00bb\u00a3\u00e5\u0099\u00a8",
                "+\t * ",
                " \t * @return \u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e8\u00bf\u00ad\u00e4\u00bb\u00a3\u00e5\u0099\u00a8",
                "@@ -66,3 +81,3 @@ public interface Cache<K, V> extends Iterable<V>{",
                " \tIterator<V> iterator();",
                "-\t",
                "+",
                " \t/**",
                "@@ -77,2 +92,3 @@ public interface Cache<K, V> extends Iterable<V>{",
                " \t * \u00e4\u00bb\u008e\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e4\u00b8\u00ad\u00e6\u00b8\u0085\u00e7\u0090\u0086\u00e8\u00bf\u0087\u00e6\u009c\u009f\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e6\u00b8\u0085\u00e7\u0090\u0086\u00e7\u00ad\u0096\u00e7\u0095\u00a5\u00e5\u008f\u0096\u00e5\u0086\u00b3\u00e4\u00ba\u008e\u00e5\u0085\u00b7\u00e4\u00bd\u0093\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+\t * ",
                " \t * @return \u00e6\u00b8\u0085\u00e7\u0090\u0086\u00e7\u009a\u0084\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e4\u00b8\u00aa\u00e6\u0095\u00b0",
                "@@ -83,2 +99,3 @@ public interface Cache<K, V> extends Iterable<V>{",
                " \t * \u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00b7\u00b2\u00e6\u00bb\u00a1\u00ef\u00bc\u008c\u00e4\u00bb\u0085\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e6\u009c\u0089\u00e7\u00a9\u00ba\u00e9\u0097\u00b4\u00e9\u0099\u0090\u00e5\u0088\u00b6\u00e7\u009a\u0084\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * ",
                " \t * @return \u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00b7\u00b2\u00e6\u00bb\u00a1\u00ef\u00bc\u008c\u00e4\u00bb\u0085\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e6\u009c\u0089\u00e7\u00a9\u00ba\u00e9\u0097\u00b4\u00e9\u0099\u0090\u00e5\u0088\u00b6\u00e7\u009a\u0084\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "@@ -89,2 +106,3 @@ public interface Cache<K, V> extends Iterable<V>{",
                " \t * \u00e4\u00bb\u008e\u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e4\u00b8\u00ad\u00e7\u00a7\u00bb\u00e9\u0099\u00a4\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * ",
                " \t * @param key \u00e9\u0094\u00ae",
                "@@ -100,2 +118,3 @@ public interface Cache<K, V> extends Iterable<V>{",
                " \t * \u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u0095\u00b0\u00e9\u0087\u008f",
                "+\t * ",
                " \t * @return \u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u0095\u00b0\u00e9\u0087\u008f",
                "@@ -106,2 +125,3 @@ public interface Cache<K, V> extends Iterable<V>{",
                " \t * \u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba",
                "+\t * ",
                " \t * @return \u00e7\u00bc\u0093\u00e5\u00ad\u0098\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba",
                "@@ -109,5 +129,6 @@ public interface Cache<K, V> extends Iterable<V>{",
                " \tboolean isEmpty();",
                "-\t",
                "+",
                " \t/**",
                " \t * \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00abkey",
                "+\t * ",
                " \t * @param key KEY"
            ],
            "changed_files": [
                "hutool-cache/src/main/java/cn/hutool/cache/Cache.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "51de2cf41ff3d80bbd303c50b67de0b1eb7b7d85",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1534603800,
            "hunks": 5,
            "message": "add method for ProxyFactory",
            "diff": [
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/ProxyUtil.java b/hutool-aop/src/main/java/cn/hutool/aop/ProxyUtil.java",
                "index 6c458ee9b..47698a8a2 100644",
                "--- a/hutool-aop/src/main/java/cn/hutool/aop/ProxyUtil.java",
                "+++ b/hutool-aop/src/main/java/cn/hutool/aop/ProxyUtil.java",
                "@@ -9,3 +9,2 @@ import cn.hutool.aop.proxy.ProxyFactory;",
                " import cn.hutool.core.util.ClassUtil;",
                "-import cn.hutool.core.util.ReflectUtil;",
                "@@ -27,3 +26,3 @@ public final class ProxyUtil {",
                " \tpublic static <T> T proxy(T target, Class<? extends Aspect> aspectClass){",
                "-\t\treturn proxy(target, ReflectUtil.newInstance(aspectClass));",
                "+\t\treturn ProxyFactory.createProxy(target, aspectClass);",
                " \t}",
                "diff --git a/hutool-aop/src/main/java/cn/hutool/aop/proxy/ProxyFactory.java b/hutool-aop/src/main/java/cn/hutool/aop/proxy/ProxyFactory.java",
                "index 00ed62872..94c7106ed 100644",
                "--- a/hutool-aop/src/main/java/cn/hutool/aop/proxy/ProxyFactory.java",
                "+++ b/hutool-aop/src/main/java/cn/hutool/aop/proxy/ProxyFactory.java",
                "@@ -3,2 +3,3 @@ package cn.hutool.aop.proxy;",
                " import cn.hutool.aop.aspects.Aspect;",
                "+import cn.hutool.core.util.ReflectUtil;",
                "@@ -21,2 +22,14 @@ public abstract class ProxyFactory {",
                " \tpublic abstract <T> T proxy(T target, Aspect aspect);",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e7\u0094\u00a8\u00e6\u0088\u00b7\u00e5\u00bc\u0095\u00e5\u0085\u00a5Cglib\u00e4\u00b8\u008e\u00e5\u0090\u00a6\u00e8\u0087\u00aa\u00e5\u008a\u00a8\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * ",
                "+\t * @param <T> \u00e5\u0088\u0087\u00e9\u009d\u00a2\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @param target \u00e7\u009b\u00ae\u00e6\u00a0\u0087\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param aspectClass \u00e5\u0088\u0087\u00e9\u009d\u00a2\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u00b1\u00bb",
                "+\t * @return \u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t */",
                "+\tpublic static <T> T createProxy(T target, Class<? extends Aspect> aspectClass){",
                "+\t\treturn createProxy(target, ReflectUtil.newInstance(aspectClass));",
                "+\t}",
                "@@ -25,2 +38,3 @@ public abstract class ProxyFactory {",
                " \t * ",
                "+\t * @param <T> \u00e5\u0088\u0087\u00e9\u009d\u00a2\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                " \t * @param target \u00e8\u00a2\u00ab\u00e4\u00bb\u00a3\u00e7\u0090\u0086\u00e5\u00af\u00b9\u00e8\u00b1\u00a1"
            ],
            "changed_files": [
                "hutool-aop/src/main/java/cn/hutool/aop/ProxyUtil.java",
                "hutool-aop/src/main/java/cn/hutool/aop/proxy/ProxyFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "46ccbab1801e0e809e7ed28973a270e60fc56459",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1533144473,
            "hunks": 106,
            "message": "fix classScaner",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/comparator/IndexedComparator.java b/hutool-core/src/main/java/cn/hutool/core/comparator/IndexedComparator.java",
                "new file mode 100644",
                "index 000000000..2529fa2b3",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/comparator/IndexedComparator.java",
                "@@ -0,0 +1,37 @@",
                "+package cn.hutool.core.comparator;",
                "+",
                "+import java.util.Comparator;",
                "+",
                "+import cn.hutool.core.util.ArrayUtil;",
                "+",
                "+/**",
                "+ * \u00e6\u008c\u0089\u00e7\u0085\u00a7\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e7\u009a\u0084\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e6\u00ad\u00a3\u00e5\u00ba\u008f\u00e6\u008e\u0092\u00e5\u0088\u0097\u00ef\u00bc\u008c\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e7\u009a\u0084\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e4\u00bd\u008d\u00e7\u00bd\u00ae\u00e5\u0086\u00b3\u00e5\u00ae\u009a\u00e4\u00ba\u0086\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u009a\u0084\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0085\u0088\u00e5\u0090\u008e<br>",
                "+ * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u008f\u0082\u00e4\u00b8\u008e\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e7\u009a\u0084\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e5\u00b9\u00b6\u00e4\u00b8\u008d\u00e5\u009c\u00a8\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e4\u00b8\u00ad\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u009c\u00a8\u00e5\u0089\u008d",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ * @param <T> \u00e8\u00a2\u00ab\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+ * @since 4.1.5",
                "+ */",
                "+public class IndexedComparator<T> implements Comparator<T> {",
                "+",
                "+\tprivate T[] array;",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param objs \u00e5\u008f\u0082\u00e4\u00b8\u008e\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e7\u009a\u0084\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00ef\u00bc\u008c\u00e6\u0095\u00b0\u00e7\u00bb\u0084\u00e7\u009a\u0084\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e4\u00bd\u008d\u00e7\u00bd\u00ae\u00e5\u0086\u00b3\u00e5\u00ae\u009a\u00e4\u00ba\u0086\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u009a\u0084\u00e6\u008e\u0092\u00e5\u00ba\u008f\u00e5\u0085\u0088\u00e5\u0090\u008e",
                "+\t */",
                "+\t@SuppressWarnings(\"unchecked\")",
                "+\tpublic IndexedComparator(T... objs) {",
                "+\t\tthis.array = objs;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic int compare(T o1, T o2) {",
                "+\t\tfinal int index1 = ArrayUtil.indexOf(array, o1);",
                "+\t\tfinal int index2 = ArrayUtil.indexOf(array, o2);",
                "+\t\treturn index1 < index2 ? -1 : 1;",
                "+\t}",
                "+",
                "+}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/exceptions/StatefulException.java b/hutool-core/src/main/java/cn/hutool/core/exceptions/StatefulException.java",
                "index 043afca87..a4e919c3b 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/exceptions/StatefulException.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/exceptions/StatefulException.java",
                "@@ -6,2 +6,3 @@ import cn.hutool.core.util.StrUtil;",
                "  * \u00e5\u00b8\u00a6\u00e6\u009c\u0089\u00e7\u008a\u00b6\u00e6\u0080\u0081\u00e7\u00a0\u0081\u00e7\u009a\u0084\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+ * ",
                "  * @author xiaoleilu",
                "@@ -9,6 +10,6 @@ import cn.hutool.core.util.StrUtil;",
                "  */",
                "-public class StatefulException extends Exception{",
                "+public class StatefulException extends RuntimeException {",
                " \tprivate static final long serialVersionUID = 6057602589533840889L;",
                "-\t",
                "-\t//\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e7\u008a\u00b6\u00e6\u0080\u0081\u00e7\u00a0\u0081",
                "+",
                "+\t// \u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e7\u008a\u00b6\u00e6\u0080\u0081\u00e7\u00a0\u0081",
                " \tprivate int status;",
                "@@ -17,3 +18,3 @@ public class StatefulException extends Exception{",
                " \t}",
                "-\t",
                "+",
                " \tpublic StatefulException(String msg) {",
                "@@ -21,3 +22,3 @@ public class StatefulException extends Exception{",
                " \t}",
                "-\t",
                "+",
                " \tpublic StatefulException(String messageTemplate, Object... params) {",
                "@@ -25,3 +26,3 @@ public class StatefulException extends Exception{",
                " \t}",
                "-\t",
                "+",
                " \tpublic StatefulException(Throwable throwable) {",
                "@@ -29,3 +30,3 @@ public class StatefulException extends Exception{",
                " \t}",
                "-\t",
                "+",
                " \tpublic StatefulException(String msg, Throwable throwable) {",
                "@@ -33,3 +34,3 @@ public class StatefulException extends Exception{",
                " \t}",
                "-\t",
                "+",
                " \tpublic StatefulException(int status, String msg) {",
                "@@ -38,3 +39,3 @@ public class StatefulException extends Exception{",
                " \t}",
                "-\t",
                "+",
                " \tpublic StatefulException(int status, Throwable throwable) {",
                "@@ -43,3 +44,3 @@ public class StatefulException extends Exception{",
                " \t}",
                "-\t",
                "+",
                " \tpublic StatefulException(int status, String msg, Throwable throwable) {",
                "@@ -48,3 +49,3 @@ public class StatefulException extends Exception{",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/io/resource/ResourceUtil.java b/hutool-core/src/main/java/cn/hutool/core/io/resource/ResourceUtil.java",
                "index 9e8641689..bbcf3677a 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/io/resource/ResourceUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/io/resource/ResourceUtil.java",
                "@@ -11,2 +11,3 @@ import java.util.List;",
                " import cn.hutool.core.collection.CollectionUtil;",
                "+import cn.hutool.core.collection.EnumerationIter;",
                " import cn.hutool.core.io.FileUtil;",
                "@@ -124,2 +125,25 @@ public class ResourceUtil {",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e4\u00b8\u008b\u00e7\u009a\u0084\u00e8\u00b5\u0084\u00e6\u00ba\u0090Iterator<br>",
                "+\t * \u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e5\u00bf\u0085\u00e9\u00a1\u00bb\u00e4\u00b8\u00ba\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e6\u00a0\u00bc\u00e5\u00bc\u008f,\u00e7\u0094\u00a8/\u00e5\u0088\u0086\u00e9\u009a\u0094\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082:",
                "+\t * ",
                "+\t * <pre>",
                "+\t * config/a",
                "+\t * spring/xml",
                "+\t * </pre>",
                "+\t * ",
                "+\t * @param resource \u00e8\u00b5\u0084\u00e6\u00ba\u0090\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "+\t * @return \u00e8\u00b5\u0084\u00e6\u00ba\u0090\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * @since 4.1.5",
                "+\t */",
                "+\tpublic static EnumerationIter<URL> getResourceIter(String resource) {",
                "+\t\tfinal Enumeration<URL> resources;",
                "+\t\ttry {",
                "+\t\t\tresources = ClassLoaderUtil.getClassLoader().getResources(resource);",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new IORuntimeException(e);",
                "+\t\t}",
                "+\t\treturn new EnumerationIter<>(resources);",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/ClassScaner.java b/hutool-core/src/main/java/cn/hutool/core/lang/ClassScaner.java",
                "index 78c56eba1..47ef09ae7 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/lang/ClassScaner.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/ClassScaner.java",
                "@@ -3,5 +3,7 @@ package cn.hutool.core.lang;",
                " import java.io.File;",
                "-import java.io.FileFilter;",
                "-import java.io.InputStream;",
                "+import java.io.IOException;",
                " import java.lang.annotation.Annotation;",
                "+import java.net.URL;",
                "+import java.nio.charset.Charset;",
                "+import java.util.Collections;",
                " import java.util.HashSet;",
                "@@ -10,7 +12,9 @@ import java.util.jar.JarEntry;",
                " import java.util.jar.JarFile;",
                "-import java.util.jar.JarInputStream;",
                "+import cn.hutool.core.collection.CollUtil;",
                " import cn.hutool.core.collection.EnumerationIter;",
                " import cn.hutool.core.io.FileUtil;",
                "-import cn.hutool.core.io.IoUtil;",
                "+import cn.hutool.core.io.IORuntimeException;",
                "+import cn.hutool.core.io.resource.ResourceUtil;",
                "+import cn.hutool.core.util.CharUtil;",
                " import cn.hutool.core.util.CharsetUtil;",
                "@@ -23,11 +27,23 @@ import cn.hutool.core.util.URLUtil;",
                "  * ",
                "- * @author Looly",
                "+ * @author looly",
                "+ * @since 4.1.5",
                "  *",
                "  */",
                "-public final class ClassScaner {",
                "-\t// private static Log log = LogFactory.get();",
                "+public class ClassScaner {",
                "-\tprivate ClassScaner() {",
                "-\t}",
                "+\t/** \u00e5\u008c\u0085\u00e5\u0090\u008d */",
                "+\tprivate String packageName;",
                "+\t/** \u00e5\u008c\u0085\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e4\u00b8\u00ad\u00e5\u00af\u00b9\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e6\u0093\u008d\u00e4\u00bd\u009c */",
                "+\tprivate String packageDirName;",
                "+\t/** \u00e5\u008c\u0085\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008ejar\u00e4\u00b8\u00ad\u00e5\u00af\u00b9\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e6\u0093\u008d\u00e4\u00bd\u009c\u00ef\u00bc\u008c\u00e5\u009c\u00a8Linux\u00e4\u00b8\u008b\u00e4\u00b8\u008epackageDirName\u00e4\u00b8\u0080\u00e8\u0087\u00b4 */",
                "+\tprivate String packagePath;",
                "+\t/** \u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8 */",
                "+\tprivate Filter<Class<?>> classFilter;",
                "+\t/** \u00e7\u00bc\u0096\u00e7\u00a0\u0081 */",
                "+\tprivate Charset charset;",
                "+\t/** \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u008c\u0096\u00e7\u00b1\u00bb */",
                "+\tprivate boolean initialize;",
                "+\tprivate Set<Class<?>> classes = new HashSet<Class<?>>();",
                "+\t",
                " \t/**",
                "@@ -93,40 +109,12 @@ public final class ClassScaner {",
                " \tpublic static Set<Class<?>> scanPackage(String packageName, Filter<Class<?>> classFilter) {",
                "-\t\tif (StrUtil.isBlank(packageName)) {",
                "-\t\t\tpackageName = StrUtil.EMPTY;",
                "-\t\t}",
                "-\t\t// log.debug(\"Scan classes from package [{}]...\", packageName);",
                "-\t\tpackageName = getWellFormedPackageName(packageName);",
                "-",
                "-\t\tfinal Set<Class<?>> classes = new HashSet<Class<?>>();",
                "-\t\tfinal Set<String> classPaths = ClassUtil.getClassPaths(packageName, true);",
                "-\t\tfor (String classPath : classPaths) {",
                "-\t\t\t// \u00e5\u00a1\u00ab\u00e5\u0085\u0085 classes",
                "-\t\t\tfillClasses(classPath, packageName, classFilter, classes);",
                "-\t\t}",
                "-",
                "-\t\t// \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u009c\u00a8\u00e9\u00a1\u00b9\u00e7\u009b\u00ae\u00e7\u009a\u0084ClassPath\u00e4\u00b8\u00ad\u00e6\u009c\u00aa\u00e6\u0089\u00be\u00e5\u0088\u00b0\u00ef\u00bc\u008c\u00e5\u008e\u00bb\u00e7\u00b3\u00bb\u00e7\u00bb\u009f\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e7\u009a\u0084ClassPath\u00e9\u0087\u008c\u00e6\u0089\u00be",
                "-\t\tif (classes.isEmpty()) {",
                "-\t\t\tfinal String[] javaClassPaths = ClassUtil.getJavaClassPaths();",
                "-\t\t\tfor (String classPath : javaClassPaths) {",
                "-\t\t\t\t// bug\u00e4\u00bf\u00ae\u00e5\u00a4\u008d\u00ef\u00bc\u008c\u00e7\u0094\u00b1\u00e4\u00ba\u008e\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e4\u00b8\u00ad\u00e7\u00a9\u00ba\u00e6\u00a0\u00bc\u00e5\u0092\u008c\u00e4\u00b8\u00ad\u00e6\u0096\u0087\u00e5\u00af\u00bc\u00e8\u0087\u00b4\u00e7\u009a\u0084Jar\u00e6\u0089\u00be\u00e4\u00b8\u008d\u00e5\u0088\u00b0",
                "-\t\t\t\tclassPath = URLUtil.decode(classPath, CharsetUtil.systemCharsetName());",
                "-",
                "-\t\t\t\t// log.debug(\"Scan java classpath: [{}]\", classPath);",
                "-\t\t\t\t// \u00e5\u00a1\u00ab\u00e5\u0085\u0085 classes",
                "-\t\t\t\tfillClasses(classPath, new File(classPath), packageName, classFilter, classes);",
                "-\t\t\t}",
                "-\t\t}",
                "-\t\treturn classes;",
                "+\t\treturn new ClassScaner(packageName, classFilter).scan();",
                " \t}",
                "-\t// --------------------------------------------------------------------------------------------------- Private method start",
                " \t/**",
                "-\t * \u00e6\u0094\u00b9\u00e5\u008f\u0098 com -> com. \u00e9\u0081\u00bf\u00e5\u0085\u008d\u00e5\u009c\u00a8\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e5\u0080\u0099\u00e6\u008a\u008a\u00e6\u00af\u0094\u00e5\u00a6\u0082 completeTestSuite.class\u00e7\u00b1\u00bb\u00e6\u0089\u00ab\u00e6\u008f\u008f\u00e8\u00bf\u009b\u00e5\u008e\u00bb\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u00b2\u00a1\u00e6\u009c\u0089\".\"<br>",
                "-\t * \u00e9\u0082\u00a3class\u00e9\u0087\u008c\u00e9\u009d\u00a2com\u00e5\u00bc\u0080\u00e5\u00a4\u00b4\u00e7\u009a\u0084class\u00e7\u00b1\u00bb\u00e4\u00b9\u009f\u00e4\u00bc\u009a\u00e8\u00a2\u00ab\u00e6\u0089\u00ab\u00e6\u008f\u008f\u00e8\u00bf\u009b\u00e5\u008e\u00bb,\u00e5\u0085\u00b6\u00e5\u00ae\u009e\u00e5\u0090\u008d\u00e7\u00a7\u00b0\u00e5\u0090\u008e\u00e9\u009d\u00a2\u00e6\u0088\u0096\u00e5\u0089\u008d\u00e9\u009d\u00a2\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e4\u00b8\u0080\u00e4\u00b8\u00aa \".\",\u00e6\u009d\u00a5\u00e6\u00b7\u00bb\u00e5\u008a\u00a0\u00e5\u008c\u0085\u00e7\u009a\u0084\u00e7\u0089\u00b9\u00e5\u00be\u0081",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4UTF-8\u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                " \t * ",
                "-\t * @param packageName",
                "-\t * @return \u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e5\u008c\u0096\u00e5\u0090\u008e\u00e7\u009a\u0084\u00e5\u008c\u0085\u00e5\u0090\u008d",
                "+\t * @param packageName \u00e5\u008c\u0085\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e5\u008c\u0085\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\"\"\u00e6\u0088\u0096\u00e8\u0080\u0085null",
                " \t */",
                "-\tprivate static String getWellFormedPackageName(String packageName) {",
                "-\t\treturn packageName.lastIndexOf(StrUtil.DOT) != packageName.length() - 1 ? packageName + StrUtil.DOT : packageName;",
                "+\tpublic ClassScaner() {",
                "+\t\tthis(null);",
                " \t}",
                "@@ -134,23 +122,8 @@ public final class ClassScaner {",
                " \t/**",
                "-\t * \u00e5\u00a1\u00ab\u00e5\u0085\u0085\u00e6\u00bb\u00a1\u00e8\u00b6\u00b3\u00e6\u009d\u00a1\u00e4\u00bb\u00b6\u00e7\u009a\u0084class \u00e5\u00a1\u00ab\u00e5\u0085\u0085\u00e5\u0088\u00b0 classes<br>",
                "-\t * \u00e5\u0090\u008c\u00e6\u0097\u00b6\u00e4\u00bc\u009a\u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e7\u009a\u0084\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00baJar\u00e5\u008c\u0085\u00e5\u0086\u0085\u00e7\u009a\u0084\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e6\u0098\u00af\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e6\u0089\u00ab\u00e6\u008f\u008f\u00e6\u00ad\u00a4Jar\u00e5\u008c\u0085",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4UTF-8\u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                " \t * ",
                "-\t * @param path Class\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e6\u0088\u0096\u00e8\u0080\u0085\u00e6\u0089\u0080\u00e5\u009c\u00a8\u00e7\u009b\u00ae\u00e5\u00bd\u0095Jar\u00e5\u008c\u0085\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "-\t * @param packageName \u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e6\u0089\u00ab\u00e9\u009d\u00a2\u00e7\u009a\u0084\u00e5\u008c\u0085\u00e5\u0090\u008d",
                "-\t * @param classFilter class\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8",
                "-\t * @param classes List \u00e9\u009b\u0086\u00e5\u0090\u0088",
                "+\t * @param packageName \u00e5\u008c\u0085\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e5\u008c\u0085\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\"\"\u00e6\u0088\u0096\u00e8\u0080\u0085null",
                " \t */",
                "-\tprivate static void fillClasses(String path, String packageName, Filter<Class<?>> classFilter, Set<Class<?>> classes) {",
                "-\t\t// \u00e5\u0088\u00a4\u00e5\u00ae\u009a\u00e7\u00bb\u0099\u00e5\u00ae\u009a\u00e7\u009a\u0084\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00baJar",
                "-\t\tint index = path.lastIndexOf(FileUtil.JAR_PATH_EXT);",
                "-\t\tif (index != -1) {",
                "-\t\t\t// Jar\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "-\t\t\tpath = path.substring(",
                "-\t\t\t\t\tpath.startsWith(FileUtil.PATH_FILE_PRE) ? FileUtil.PATH_FILE_PRE.length() : 0, //\u00e5\u008e\u00bb\u00e9\u0099\u00a4file:\u00e5\u0089\u008d\u00e7\u00bc\u0080",
                "-\t\t\t\t\tindex + FileUtil.JAR_FILE_EXT.length()// \u00e6\u0088\u00aa\u00e5\u008f\u0096\u00e5\u0088\u00b0.jar\u00e4\u00b9\u008b\u00e5\u0090\u008e",
                "-\t\t\t); ",
                "-\t\t\tprocessJarFile(new File(path), packageName, classFilter, classes);",
                "-\t\t} else {",
                "-\t\t\tfillClasses(path, new File(path), packageName, classFilter, classes);",
                "-\t\t}",
                "+\tpublic ClassScaner(String packageName) {",
                "+\t\tthis(packageName, null);",
                " \t}",
                "@@ -158,18 +131,9 @@ public final class ClassScaner {",
                " \t/**",
                "-\t * \u00e5\u00a1\u00ab\u00e5\u0085\u0085\u00e6\u00bb\u00a1\u00e8\u00b6\u00b3\u00e6\u009d\u00a1\u00e4\u00bb\u00b6\u00e7\u009a\u0084class \u00e5\u00a1\u00ab\u00e5\u0085\u0085\u00e5\u0088\u00b0 classes",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4UTF-8\u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                " \t * ",
                "-\t * @param classPath \u00e7\u00b1\u00bb\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0089\u0080\u00e5\u009c\u00a8\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e5\u008c\u0085\u00e5\u0090\u008d\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba\u00e6\u0097\u00b6\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e6\u00ad\u00a4\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e6\u0088\u00aa\u00e6\u008e\u0089\u00e7\u00b1\u00bb\u00e5\u0090\u008d\u00e5\u0089\u008d\u00e9\u009d\u00a2\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "-\t * @param file Class\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e8\u0080\u0085\u00e6\u0089\u0080\u00e5\u009c\u00a8\u00e7\u009b\u00ae\u00e5\u00bd\u0095Jar\u00e5\u008c\u0085\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "-\t * @param packageName \u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e6\u0089\u00ab\u00e9\u009d\u00a2\u00e7\u009a\u0084\u00e5\u008c\u0085\u00e5\u0090\u008d",
                "-\t * @param classFilter class\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8",
                "-\t * @param classes List \u00e9\u009b\u0086\u00e5\u0090\u0088",
                "+\t * @param packageName \u00e5\u008c\u0085\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e5\u008c\u0085\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\"\"\u00e6\u0088\u0096\u00e8\u0080\u0085null",
                "+\t * @param classFilter \u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e6\u0097\u00a0\u00e9\u009c\u0080\u00e4\u00bc\u00a0\u00e5\u0085\u00a5null",
                " \t */",
                "-\tprivate static void fillClasses(String classPath, File file, String packageName, Filter<Class<?>> classFilter, Set<Class<?>> classes) {",
                "-\t\tif (file.isDirectory()) {",
                "-\t\t\tprocessDirectory(classPath, file, packageName, classFilter, classes);",
                "-\t\t} else if (isClassFile(file)) {",
                "-\t\t\tprocessClassFile(classPath, file, packageName, classFilter, classes);",
                "-\t\t} else if (isJarFile(file)) {",
                "-\t\t\tprocessJarFile(file, packageName, classFilter, classes);",
                "-\t\t}",
                "+\tpublic ClassScaner(String packageName, Filter<Class<?>> classFilter) {",
                "+\t\tthis(packageName, classFilter, CharsetUtil.CHARSET_UTF_8);",
                " \t}",
                "@@ -177,13 +141,14 @@ public final class ClassScaner {",
                " \t/**",
                "-\t * \u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u00ba\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e7\u009a\u0084\u00e6\u0083\u0085\u00e5\u0086\u00b5,\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e9\u0080\u0092\u00e5\u00bd\u0092\u00e8\u00b0\u0083\u00e7\u0094\u00a8 fillClasses\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                " \t * ",
                "-\t * @param directory \u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "-\t * @param packageName \u00e5\u008c\u0085\u00e5\u0090\u008d",
                "-\t * @param classFilter \u00e7\u00b1\u00bb\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8",
                "-\t * @param classes \u00e7\u00b1\u00bb\u00e9\u009b\u0086\u00e5\u0090\u0088",
                "+\t * @param packageName \u00e5\u008c\u0085\u00e5\u0090\u008d\u00ef\u00bc\u008c\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e5\u008c\u0085\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\"\"\u00e6\u0088\u0096\u00e8\u0080\u0085null",
                "+\t * @param classFilter \u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e6\u0097\u00a0\u00e9\u009c\u0080\u00e4\u00bc\u00a0\u00e5\u0085\u00a5null",
                "+\t * @param charset \u00e7\u00bc\u0096\u00e7\u00a0\u0081",
                " \t */",
                "-\tprivate static void processDirectory(String classPath, File directory, String packageName, Filter<Class<?>> classFilter, Set<Class<?>> classes) {",
                "-\t\tfor (File file : directory.listFiles(fileFilter)) {",
                "-\t\t\tfillClasses(classPath, file, packageName, classFilter, classes);",
                "-\t\t}",
                "+\tpublic ClassScaner(String packageName, Filter<Class<?>> classFilter, Charset charset) {",
                "+\t\tthis.packageName = StrUtil.nullToEmpty(packageName);",
                "+\t\tthis.packageDirName = this.packageName.replace(CharUtil.DOT, File.separatorChar);",
                "+\t\tthis.packagePath = this.packageName.replace(CharUtil.DOT, CharUtil.SLASH);",
                "+\t\tthis.classFilter = classFilter;",
                "+\t\tthis.charset = charset;",
                " \t}",
                "@@ -191,57 +156,52 @@ public final class ClassScaner {",
                " \t/**",
                "-\t * \u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e4\u00b8\u00baclass\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e7\u009a\u0084\u00e6\u0083\u0085\u00e5\u0086\u00b5,\u00e5\u00a1\u00ab\u00e5\u0085\u0085\u00e6\u00bb\u00a1\u00e8\u00b6\u00b3\u00e6\u009d\u00a1\u00e4\u00bb\u00b6\u00e7\u009a\u0084class \u00e5\u0088\u00b0 classes",
                "+\t * \u00e6\u0089\u00ab\u00e9\u009d\u00a2\u00e5\u008c\u0085\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e4\u00b8\u008b\u00e6\u00bb\u00a1\u00e8\u00b6\u00b3class\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8\u00e6\u009d\u00a1\u00e4\u00bb\u00b6\u00e7\u009a\u0084\u00e6\u0089\u0080\u00e6\u009c\u0089class\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00ef\u00bc\u008c<br>",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u008c\u0085\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e4\u00b8\u00ba com.abs + A.class \u00e4\u00bd\u0086\u00e6\u0098\u00af\u00e8\u00be\u0093\u00e5\u0085\u00a5 abs\u00e4\u00bc\u009a\u00e4\u00ba\u00a7\u00e7\u0094\u009fclassNotFoundException<br>",
                "+\t * \u00e5\u009b\u00a0\u00e4\u00b8\u00baclassName \u00e5\u00ba\u0094\u00e8\u00af\u00a5\u00e4\u00b8\u00ba com.abs.A \u00e7\u008e\u00b0\u00e5\u009c\u00a8\u00e5\u008d\u00b4\u00e6\u0088\u0090\u00e4\u00b8\u00baabs.A,\u00e6\u00ad\u00a4\u00e5\u00b7\u00a5\u00e5\u0085\u00b7\u00e7\u00b1\u00bb\u00e5\u00af\u00b9\u00e8\u00af\u00a5\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e8\u00bf\u009b\u00e8\u00a1\u008c\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e5\u00a4\u0084\u00e7\u0090\u0086<br>",
                " \t * ",
                "-\t * @param classPath \u00e7\u00b1\u00bb\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0089\u0080\u00e5\u009c\u00a8\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e5\u008c\u0085\u00e5\u0090\u008d\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba\u00e6\u0097\u00b6\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e6\u00ad\u00a4\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e6\u0088\u00aa\u00e6\u008e\u0089\u00e7\u00b1\u00bb\u00e5\u0090\u008d\u00e5\u0089\u008d\u00e9\u009d\u00a2\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                "-\t * @param classFile class\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "-\t * @param packageName \u00e5\u008c\u0085\u00e5\u0090\u008d",
                "-\t * @param classFilter \u00e7\u00b1\u00bb\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8",
                "-\t * @param classes \u00e7\u00b1\u00bb\u00e9\u009b\u0086\u00e5\u0090\u0088",
                "+\t * @param packageName \u00e5\u008c\u0085\u00e8\u00b7\u00af\u00e5\u00be\u0084 com | com. | com.abs | com.abs.",
                "+\t * @param classFilter class\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e6\u008e\u0089\u00e4\u00b8\u008d\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e7\u009a\u0084class",
                "+\t * @return",
                "+\t * @return \u00e7\u00b1\u00bb\u00e9\u009b\u0086\u00e5\u0090\u0088",
                " \t */",
                "-\tprivate static void processClassFile(String classPath, File classFile, String packageName, Filter<Class<?>> classFilter, Set<Class<?>> classes) {",
                "-\t\tif (false == classPath.endsWith(File.separator)) {",
                "-\t\t\tclassPath += File.separator;",
                "+\tpublic Set<Class<?>> scan() {",
                "+\t\tfor (URL url : ResourceUtil.getResourceIter(this.packagePath)) {",
                "+\t\t\tswitch (url.getProtocol()) {",
                "+\t\t\tcase \"file\":",
                "+\t\t\t\tscanFile(new File(URLUtil.decode(url.getFile(), this.charset.name())), null);",
                "+\t\t\t\tbreak;",
                "+\t\t\tcase \"jar\":",
                "+\t\t\t\tscanJar(URLUtil.getJarFile(url));",
                "+\t\t\t\tbreak;",
                "+\t\t\t}",
                " \t\t}",
                "-\t\tString path = classFile.getAbsolutePath();",
                "-\t\tif (StrUtil.isEmpty(packageName)) {",
                "-\t\t\tpath = StrUtil.removePrefix(path, classPath);",
                "+\t\t",
                "+\t\tif(CollUtil.isEmpty(this.classes)) {",
                "+\t\t\tscanJavaClassPaths();",
                " \t\t}",
                "-\t\tfinal String filePathWithDot = path.replace(File.separator, StrUtil.DOT);",
                "-",
                "-\t\tint subIndex = -1;",
                "-\t\tif ((subIndex = filePathWithDot.indexOf(packageName)) != -1) {",
                "-\t\t\tfinal int endIndex = filePathWithDot.lastIndexOf(FileUtil.CLASS_EXT);",
                "+\t\t",
                "+\t\treturn Collections.unmodifiableSet(this.classes);",
                "+\t}",
                "-\t\t\tfinal String className = filePathWithDot.substring(subIndex, endIndex);",
                "-\t\t\tfillClass(className, packageName, classes, classFilter);",
                "-\t\t}",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u009c\u00a8\u00e6\u0089\u00ab\u00e6\u008f\u008f\u00e5\u0088\u00b0\u00e7\u00b1\u00bb\u00e6\u0097\u00b6\u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u008c\u0096\u00e7\u00b1\u00bb",
                "+\t * ",
                "+\t * @param initialize \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u008c\u0096\u00e7\u00b1\u00bb",
                "+\t */",
                "+\tpublic void setInitialize(boolean initialize) {",
                "+\t\tthis.initialize = initialize;",
                " \t}",
                "+\t// --------------------------------------------------------------------------------------------------- Private method start",
                " \t/**",
                "-\t * \u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e4\u00b8\u00bajar\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e7\u009a\u0084\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00ef\u00bc\u008c\u00e5\u00a1\u00ab\u00e5\u0085\u0085\u00e6\u00bb\u00a1\u00e8\u00b6\u00b3\u00e6\u009d\u00a1\u00e4\u00bb\u00b6\u00e7\u009a\u0084class \u00e5\u0088\u00b0 classes",
                "+\t * \u00e6\u0089\u00ab\u00e6\u008f\u008fJava\u00e6\u008c\u0087\u00e5\u00ae\u009a\u00e7\u009a\u0084ClassPath\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                " \t * ",
                "-\t * @param file jar\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "-\t * @param packageName \u00e5\u008c\u0085\u00e5\u0090\u008d",
                "-\t * @param classFilter \u00e7\u00b1\u00bb\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8",
                "-\t * @param classes \u00e7\u00b1\u00bb\u00e9\u009b\u0086\u00e5\u0090\u0088",
                "+\t * @return \u00e6\u0089\u00ab\u00e6\u008f\u008f\u00e5\u0088\u00b0\u00e7\u009a\u0084\u00e7\u00b1\u00bb",
                " \t */",
                "-\tprivate static void processJarFile(File file, String packageName, Filter<Class<?>> classFilter, Set<Class<?>> classes) {",
                "-\t\tJarFile jarFile = null;",
                "-\t\tEnumerationIter<JarEntry> entries;",
                "-\t\ttry {",
                "-\t\t\tjarFile = new JarFile(file);",
                "-\t\t\tentries = new EnumerationIter<>(jarFile.entries());",
                "-\t\t\tString entryName;",
                "-\t\t\tfor (JarEntry jarEntry : entries) {",
                "-\t\t\t\tentryName = jarEntry.getName();",
                "-\t\t\t\tif (isClass(entryName)) {",
                "-\t\t\t\t\tfinal String className = StrUtil.removeSuffix(entryName.replace(StrUtil.SLASH, StrUtil.DOT), FileUtil.CLASS_EXT);",
                "-\t\t\t\t\tfillClass(className, packageName, classes, classFilter);",
                "-\t\t\t\t} else if(isJar(entryName)) {",
                "-\t\t\t\t\tprocessJarStream(jarFile.getInputStream(jarEntry), packageName, classFilter, classes);",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "-\t\t} catch (Exception ex) {",
                "-\t\t\tConsole.error(ex, ex.getMessage());",
                "-\t\t} finally {",
                "-\t\t\tIoUtil.close(jarFile);",
                "+\tprivate void scanJavaClassPaths() {",
                "+\t\tfinal String[] javaClassPaths = ClassUtil.getJavaClassPaths();",
                "+\t\tfor (String classPath : javaClassPaths) {",
                "+\t\t\t// bug\u00e4\u00bf\u00ae\u00e5\u00a4\u008d\u00ef\u00bc\u008c\u00e7\u0094\u00b1\u00e4\u00ba\u008e\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e4\u00b8\u00ad\u00e7\u00a9\u00ba\u00e6\u00a0\u00bc\u00e5\u0092\u008c\u00e4\u00b8\u00ad\u00e6\u0096\u0087\u00e5\u00af\u00bc\u00e8\u0087\u00b4\u00e7\u009a\u0084Jar\u00e6\u0089\u00be\u00e4\u00b8\u008d\u00e5\u0088\u00b0",
                "+\t\t\tclassPath = URLUtil.decode(classPath, CharsetUtil.systemCharsetName());",
                "+",
                "+\t\t\tscanFile(new File(classPath), null);",
                " \t\t}",
                "@@ -250,28 +210,27 @@ public final class ClassScaner {",
                " \t/**",
                "-\t * \u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e4\u00b8\u00bajar\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e7\u009a\u0084\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00ef\u00bc\u008c\u00e5\u00a1\u00ab\u00e5\u0085\u0085\u00e6\u00bb\u00a1\u00e8\u00b6\u00b3\u00e6\u009d\u00a1\u00e4\u00bb\u00b6\u00e7\u009a\u0084class \u00e5\u0088\u00b0 classes",
                "+\t * \u00e6\u0089\u00ab\u00e6\u008f\u008f\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e4\u00b8\u00ad\u00e7\u009a\u0084\u00e7\u00b1\u00bb",
                " \t * ",
                "-\t * @param in jar\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u00b5\u0081",
                "-\t * @param packageName \u00e5\u008c\u0085\u00e5\u0090\u008d",
                "-\t * @param classFilter \u00e7\u00b1\u00bb\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8",
                "-\t * @param classes \u00e7\u00b1\u00bb\u00e9\u009b\u0086\u00e5\u0090\u0088",
                "-\t * @since 4.0.12",
                "+\t * @param file \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e6\u0088\u0096\u00e7\u009b\u00ae\u00e5\u00bd\u0095",
                "+\t * @param rootDir \u00e5\u008c\u0085\u00e5\u0090\u008d\u00e5\u00af\u00b9\u00e5\u00ba\u0094classpath\u00e7\u00bb\u009d\u00e5\u00af\u00b9\u00e8\u00b7\u00af\u00e5\u00be\u0084",
                " \t */",
                "-\tprivate static void processJarStream(InputStream in, String packageName, Filter<Class<?>> classFilter, Set<Class<?>> classes) {",
                "-\t\tJarInputStream jarIn = null;",
                "-\t\ttry {",
                "-\t\t\tjarIn = (in instanceof JarInputStream) ? (JarInputStream)in : new JarInputStream(in);",
                "-\t\t\tJarEntry entry;",
                "-\t\t\tString entryName;",
                "-\t\t\twhile (null != (entry = jarIn.getNextJarEntry())) {",
                "-\t\t\t\tentryName = entry.getName();",
                "-\t\t\t\tif (isClass(entryName)) {",
                "-\t\t\t\t\tfinal String className = StrUtil.removeSuffix(entryName.replace(StrUtil.SLASH, StrUtil.DOT), FileUtil.CLASS_EXT);",
                "-\t\t\t\t\tfillClass(className, packageName, classes, classFilter);",
                "+\tprivate void scanFile(File file, String rootDir) {",
                "+\t\tif (file.isFile()) {",
                "+\t\t\tfinal String fileName = file.getAbsolutePath();",
                "+\t\t\tif (fileName.endsWith(FileUtil.CLASS_EXT)) {",
                "+\t\t\t\tfinal String className = fileName//",
                "+\t\t\t\t\t\t// 8\u00e4\u00b8\u00baclasses\u00e9\u0095\u00bf\u00e5\u00ba\u00a6\u00ef\u00bc\u008cfileName.length() - 6\u00e4\u00b8\u00ba\".class\"\u00e7\u009a\u0084\u00e9\u0095\u00bf\u00e5\u00ba\u00a6",
                "+\t\t\t\t\t\t.substring(rootDir.length(), fileName.length() - 6)//",
                "+\t\t\t\t\t\t.replace(File.separatorChar, CharUtil.DOT);//",
                "+\t\t\t\taddIfAccept(loadClass(className));",
                "+\t\t\t} else if (fileName.endsWith(FileUtil.JAR_FILE_EXT)) {",
                "+\t\t\t\ttry {",
                "+\t\t\t\t\tscanJar(new JarFile(file));",
                "+\t\t\t\t} catch (IOException e) {",
                "+\t\t\t\t\tthrow new IORuntimeException(e);",
                " \t\t\t\t}",
                " \t\t\t}",
                "-\t\t} catch (Exception ex) {",
                "-\t\t\tConsole.error(ex, ex.getMessage());",
                "-\t\t} finally {",
                "-\t\t\tIoUtil.close(jarIn);",
                "-\t\t\tIoUtil.close(in);",
                "+\t\t} else if (file.isDirectory()) {",
                "+\t\t\tfor (File subFile : file.listFiles()) {",
                "+\t\t\t\tscanFile(subFile, (null == rootDir) ? subPathBeforePackage(file) : rootDir);",
                "+\t\t\t}",
                " \t\t}",
                "@@ -280,18 +239,18 @@ public final class ClassScaner {",
                " \t/**",
                "-\t * \u00e5\u00a1\u00ab\u00e5\u0085\u0085class \u00e5\u0088\u00b0 classes",
                "+\t * \u00e6\u0089\u00ab\u00e6\u008f\u008fjar\u00e5\u008c\u0085",
                " \t * ",
                "-\t * @param className \u00e7\u00b1\u00bb\u00e5\u0090\u008d",
                "-\t * @param packageName \u00e5\u008c\u0085\u00e5\u0090\u008d",
                "-\t * @param classes \u00e7\u00b1\u00bb\u00e9\u009b\u0086\u00e5\u0090\u0088",
                "-\t * @param classFilter \u00e7\u00b1\u00bb\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8",
                "+\t * @param jar jar\u00e5\u008c\u0085",
                " \t */",
                "-\tprivate static void fillClass(String className, String packageName, Set<Class<?>> classes, Filter<Class<?>> classFilter) {",
                "-\t\tif (className.startsWith(packageName)) {",
                "-\t\t\ttry {",
                "-\t\t\t\tfinal Class<?> clazz = Class.forName(className, false, ClassUtil.getClassLoader());",
                "-\t\t\t\tif (classFilter == null || classFilter.accept(clazz)) {",
                "-\t\t\t\t\tclasses.add(clazz);",
                "+\tprivate void scanJar(JarFile jar) {",
                "+\t\tString name;",
                "+\t\tfor (JarEntry entry : new EnumerationIter<>(jar.entries())) {",
                "+\t\t\tname = StrUtil.removePrefix(entry.getName(), StrUtil.SLASH);",
                "+\t\t\tif (name.startsWith(this.packagePath)) {",
                "+\t\t\t\tif (name.endsWith(FileUtil.CLASS_EXT) && false == entry.isDirectory()) {",
                "+\t\t\t\t\tConsole.log(name);",
                "+\t\t\t\t\tfinal String className = name//",
                "+\t\t\t\t\t\t\t.substring(0, name.length() - 6)//",
                "+\t\t\t\t\t\t\t.replace(CharUtil.SLASH, CharUtil.DOT);//",
                "+\t\t\t\t\taddIfAccept(loadClass(className));",
                " \t\t\t\t}",
                "-\t\t\t} catch (Throwable ex) {",
                "-\t\t\t\t// Pass Load Error.",
                " \t\t\t}",
                "@@ -301,18 +260,20 @@ public final class ClassScaner {",
                " \t/**",
                "-\t * \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e6\u008e\u0089\u00e4\u00b8\u008d\u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e7\u009a\u0084\u00e6\u0096\u0087\u00e4\u00bb\u00b6<br>",
                "-\t * \u00e5\u008f\u00aa\u00e4\u00bf\u009d\u00e7\u0095\u0099Class\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e3\u0080\u0081\u00e7\u009b\u00ae\u00e5\u00bd\u0095\u00e5\u0092\u008cJar",
                "+\t * \u00e5\u008a\u00a0\u00e8\u00bd\u00bd\u00e7\u00b1\u00bb",
                "+\t * ",
                "+\t * @param className \u00e7\u00b1\u00bb\u00e5\u0090\u008d",
                "+\t * @return \u00e5\u008a\u00a0\u00e8\u00bd\u00bd\u00e7\u009a\u0084\u00e7\u00b1\u00bb",
                " \t */",
                "-\tprivate static FileFilter fileFilter = new FileFilter() {",
                "-\t\t@Override",
                "-\t\tpublic boolean accept(File pathname) {",
                "-\t\t\treturn isClass(pathname.getName()) || pathname.isDirectory() || isJarFile(pathname);",
                "+\tprivate Class<?> loadClass(String className) {",
                "+\t\tClass<?> clazz = null;",
                "+\t\ttry {",
                "+\t\t\tclazz = Class.forName(className, this.initialize, ClassUtil.getClassLoader());",
                "+\t\t} catch (NoClassDefFoundError e) {",
                "+\t\t\t// \u00e7\u0094\u00b1\u00e4\u00ba\u008e\u00e4\u00be\u009d\u00e8\u00b5\u0096\u00e5\u00ba\u0093\u00e5\u00af\u00bc\u00e8\u0087\u00b4\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00e6\u0097\u00a0\u00e6\u00b3\u0095\u00e5\u008a\u00a0\u00e8\u00bd\u00bd\u00ef\u00bc\u008c\u00e7\u009b\u00b4\u00e6\u008e\u00a5\u00e8\u00b7\u00b3\u00e8\u00bf\u0087\u00e6\u00ad\u00a4\u00e7\u00b1\u00bb",
                "+\t\t} catch (UnsupportedClassVersionError e) {",
                "+\t\t\t// \u00e7\u0089\u0088\u00e6\u009c\u00ac\u00e5\u00af\u00bc\u00e8\u0087\u00b4\u00e7\u009a\u0084\u00e4\u00b8\u008d\u00e5\u0085\u00bc\u00e5\u00ae\u00b9\u00e7\u009a\u0084\u00e7\u00b1\u00bb\u00ef\u00bc\u008c\u00e8\u00b7\u00b3\u00e8\u00bf\u0087",
                "+\t\t} catch (Exception e) {",
                "+\t\t\tthrow new RuntimeException(e);",
                "+\t\t\t// Console.error(e);",
                " \t\t}",
                "-\t};",
                "-",
                "-\t/**",
                "-\t * @param file \u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba\u00e7\u00b1\u00bb\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "-\t */",
                "-\tprivate static boolean isClassFile(File file) {",
                "-\t\treturn isClass(file.getName());",
                "+\t\treturn clazz;",
                " \t}",
                "@@ -320,7 +281,14 @@ public final class ClassScaner {",
                " \t/**",
                "-\t * @param fileName \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba\u00e7\u00b1\u00bb\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "+\t * \u00e9\u0080\u009a\u00e8\u00bf\u0087\u00e8\u00bf\u0087\u00e6\u00bb\u00a4\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u00bb\u00a1\u00e8\u00b6\u00b3\u00e6\u008e\u00a5\u00e5\u008f\u0097\u00e6\u00ad\u00a4\u00e7\u00b1\u00bb\u00e7\u009a\u0084\u00e6\u009d\u00a1\u00e4\u00bb\u00b6",
                "+\t * ",
                "+\t * @param clazz \u00e7\u00b1\u00bb",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u008e\u00a5\u00e5\u008f\u0097",
                " \t */",
                "-\tprivate static boolean isClass(String fileName) {",
                "-\t\treturn fileName.endsWith(FileUtil.CLASS_EXT);",
                "+\tprivate void addIfAccept(Class<?> clazz) {",
                "+\t\tif (null != clazz) {",
                "+\t\t\tFilter<Class<?>> classFilter = this.classFilter;",
                "+\t\t\tif (classFilter == null || classFilter.accept(clazz)) {",
                "+\t\t\t\tthis.classes.add(clazz);",
                "+\t\t\t}",
                "+\t\t}",
                " \t}",
                "@@ -328,16 +296,13 @@ public final class ClassScaner {",
                " \t/**",
                "+\t * \u00e6\u0088\u00aa\u00e5\u008f\u0096\u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e7\u00bb\u009d\u00e5\u00af\u00b9\u00e8\u00b7\u00af\u00e5\u00be\u0084\u00e4\u00b8\u00ad\u00e5\u008c\u0085\u00e5\u0090\u008d\u00e4\u00b9\u008b\u00e5\u0089\u008d\u00e7\u009a\u0084\u00e9\u0083\u00a8\u00e5\u0088\u0086",
                "+\t * ",
                " \t * @param file \u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00baJar\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "-\t */",
                "-\tprivate static boolean isJarFile(File file) {",
                "-\t\treturn isJar(file.getName());",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * @param fileName \u00e6\u0096\u0087\u00e4\u00bb\u00b6\u00e5\u0090\u008d",
                "-\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00baJar\u00e6\u0096\u0087\u00e4\u00bb\u00b6",
                "-\t * @since 4.0.12",
                "+\t * @return \u00e5\u008c\u0085\u00e5\u0090\u008d\u00e4\u00b9\u008b\u00e5\u0089\u008d\u00e7\u009a\u0084\u00e9\u0083\u00a8\u00e5\u0088\u0086",
                " \t */",
                "-\tprivate static boolean isJar(String fileName) {",
                "-\t\treturn fileName.endsWith(FileUtil.JAR_FILE_EXT);",
                "+\tprivate String subPathBeforePackage(File file) {",
                "+\t\tfinal String filePath = file.getAbsolutePath();",
                "+\t\tif (StrUtil.isEmpty(this.packageDirName)) {",
                "+\t\t\treturn StrUtil.addSuffixIfNot(filePath, StrUtil.SLASH);",
                "+\t\t}",
                "+\t\treturn StrUtil.subBefore(filePath, this.packageDirName, true);",
                " \t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java",
                "index 47bf73b05..9fb86f9cd 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java",
                "@@ -7,2 +7,3 @@ import java.io.InputStream;",
                " import java.io.UnsupportedEncodingException;",
                "+import java.net.JarURLConnection;",
                " import java.net.MalformedURLException;",
                "@@ -15,2 +16,3 @@ import java.net.URLStreamHandler;",
                " import java.nio.charset.Charset;",
                "+import java.util.jar.JarFile;",
                "@@ -57,3 +59,3 @@ public class URLUtil {",
                " \tpublic static final String WAR_URL_SEPARATOR = \"*/\";",
                "-\t",
                "+",
                " \t/**",
                "@@ -194,3 +196,3 @@ public class URLUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -204,3 +206,3 @@ public class URLUtil {",
                " \t */",
                "-\tpublic static String encode(String url) throws UtilException{",
                "+\tpublic static String encode(String url) throws UtilException {",
                " \t\treturn encode(url, CharsetUtil.UTF_8);",
                "@@ -217,3 +219,3 @@ public class URLUtil {",
                " \t */",
                "-\tpublic static String encode(String url, String charset) throws UtilException{",
                "+\tpublic static String encode(String url, String charset) throws UtilException {",
                " \t\ttry {",
                "@@ -224,3 +226,3 @@ public class URLUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -234,3 +236,3 @@ public class URLUtil {",
                " \t */",
                "-\tpublic static String decode(String url) throws UtilException{",
                "+\tpublic static String decode(String url) throws UtilException {",
                " \t\treturn decode(url, CharsetUtil.UTF_8);",
                "@@ -247,3 +249,3 @@ public class URLUtil {",
                " \t */",
                "-\tpublic static String decode(String url, String charset) throws UtilException{",
                "+\tpublic static String decode(String url, String charset) throws UtilException {",
                " \t\ttry {",
                "@@ -282,6 +284,6 @@ public class URLUtil {",
                " \tpublic static String getDecodedPath(URL url) {",
                "-\t\tif(null == url) {",
                "+\t\tif (null == url) {",
                " \t\t\treturn null;",
                " \t\t}",
                "-\t\t",
                "+",
                " \t\tString path = null;",
                "@@ -343,6 +345,6 @@ public class URLUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "-\t * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e7\u009a\u0084URL\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00bajar\u00e5\u008c\u0085URL",
                "-\t * \u00e5\u008d\u008f\u00e8\u00ae\u00ae\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00ef\u00bc\u009a \"jar\", \"zip\", \"vfszip\" \u00e6\u0088\u0096 \"wsjar\".",
                "+\t * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e7\u009a\u0084URL\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00bajar\u00e5\u008c\u0085URL \u00e5\u008d\u008f\u00e8\u00ae\u00ae\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00ef\u00bc\u009a \"jar\", \"zip\", \"vfszip\" \u00e6\u0088\u0096 \"wsjar\".",
                "+\t * ",
                " \t * @param url {@link URL}",
                "@@ -359,4 +361,4 @@ public class URLUtil {",
                " \t/**",
                "-\t * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e7\u009a\u0084URL\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00baJar\u00e6\u0096\u0087\u00e4\u00bb\u00b6URL",
                "-\t * \u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e4\u00be\u009d\u00e6\u008d\u00ae\u00e4\u00b8\u00bafile\u00e5\u008d\u008f\u00e8\u00ae\u00ae\u00e4\u00b8\u0094\u00e6\u0089\u00a9\u00e5\u00b1\u0095\u00e5\u0090\u008d\u00e4\u00b8\u00ba.jar",
                "+\t * \u00e6\u008f\u0090\u00e4\u00be\u009b\u00e7\u009a\u0084URL\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00baJar\u00e6\u0096\u0087\u00e4\u00bb\u00b6URL \u00e5\u0088\u00a4\u00e6\u0096\u00ad\u00e4\u00be\u009d\u00e6\u008d\u00ae\u00e4\u00b8\u00bafile\u00e5\u008d\u008f\u00e8\u00ae\u00ae\u00e4\u00b8\u0094\u00e6\u0089\u00a9\u00e5\u00b1\u0095\u00e5\u0090\u008d\u00e4\u00b8\u00ba.jar",
                "+\t * ",
                " \t * @param url the URL to check",
                "@@ -372,2 +374,3 @@ public class URLUtil {",
                " \t * \u00e4\u00bb\u008eURL\u00e4\u00b8\u00ad\u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e6\u00b5\u0081",
                "+\t * ",
                " \t * @param url {@link URL}",
                "@@ -384,3 +387,3 @@ public class URLUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "@@ -393,5 +396,21 @@ public class URLUtil {",
                " \t */",
                "-\tpublic static BufferedReader getReader(URL url, Charset charset){",
                "+\tpublic static BufferedReader getReader(URL url, Charset charset) {",
                " \t\treturn IoUtil.getReader(getStream(url), charset);",
                " \t}",
                "+",
                "+\t/**",
                "+\t * \u00e4\u00bb\u008eURL\u00e4\u00b8\u00ad\u00e8\u008e\u00b7\u00e5\u008f\u0096JarFile",
                "+\t * ",
                "+\t * @param url URL",
                "+\t * @return JarFile",
                "+\t * @since 4.1.5",
                "+\t */",
                "+\tpublic static JarFile getJarFile(URL url) {",
                "+\t\ttry {",
                "+\t\t\tJarURLConnection urlConnection = (JarURLConnection) url.openConnection();",
                "+\t\t\treturn urlConnection.getJarFile();",
                "+\t\t} catch (IOException e) {",
                "+\t\t\tthrow new IORuntimeException(e);",
                "+\t\t}",
                "+\t}",
                " }",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/StatementUtil.java b/hutool-db/src/main/java/cn/hutool/db/StatementUtil.java",
                "index 740bedce2..4c5160432 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/StatementUtil.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/StatementUtil.java",
                "@@ -19,2 +19,3 @@ import cn.hutool.core.util.StrUtil;",
                " import cn.hutool.db.sql.SqlBuilder;",
                "+import cn.hutool.db.sql.SqlLog;",
                " import cn.hutool.db.sql.SqlUtil;",
                "@@ -138,2 +139,3 @@ public class StatementUtil {",
                " \t\tsql = sql.trim();",
                "+\t\tSqlLog.INSTASNCE.log(sql, params);",
                " \t\tPreparedStatement ps;",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/dialect/impl/AnsiSqlDialect.java b/hutool-db/src/main/java/cn/hutool/db/dialect/impl/AnsiSqlDialect.java",
                "index a0c5cd74a..45f457e2a 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/dialect/impl/AnsiSqlDialect.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/dialect/impl/AnsiSqlDialect.java",
                "@@ -5,3 +5,2 @@ import java.sql.PreparedStatement;",
                " import java.sql.SQLException;",
                "-import java.sql.Statement;",
                "@@ -58,3 +57,3 @@ public class AnsiSqlDialect implements Dialect {",
                "-\t\tfinal PreparedStatement ps = conn.prepareStatement(insert.build(), Statement.RETURN_GENERATED_KEYS);",
                "+\t\tfinal PreparedStatement ps = StatementUtil.prepareStatement(conn, insert.build());",
                " \t\tfor (Entity entity : entities) {",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/sql/SqlBuilder.java b/hutool-db/src/main/java/cn/hutool/db/sql/SqlBuilder.java",
                "index 5a02f714d..e50563976 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/sql/SqlBuilder.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/sql/SqlBuilder.java",
                "@@ -557,18 +557,3 @@ public class SqlBuilder {",
                " \tpublic String build() {",
                "-\t\treturn build(true);",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * \u00e6\u009e\u0084\u00e5\u00bb\u00ba",
                "-\t * ",
                "-\t * @param printLog \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e6\u0089\u0093\u00e5\u008d\u00b0\u00e6\u0097\u00a5\u00e5\u00bf\u0097",
                "-\t * @return \u00e6\u009e\u0084\u00e5\u00bb\u00ba\u00e5\u00a5\u00bd\u00e7\u009a\u0084SQL\u00e8\u00af\u00ad\u00e5\u008f\u00a5",
                "-\t * @since 4.1.3",
                "-\t */",
                "-\tpublic String build(boolean printLog) {",
                "-\t\tfinal String sqlStr = this.sql.toString().trim();",
                "-\t\tif(printLog) {",
                "-\t\t\tSqlLog.INSTASNCE.log(sqlStr, this.paramValues);",
                "-\t\t}",
                "-\t\treturn sqlStr;",
                "+\t\treturn this.sql.toString();",
                " \t}",
                "@@ -577,3 +562,3 @@ public class SqlBuilder {",
                " \tpublic String toString() {",
                "-\t\treturn this.build(false);",
                "+\t\treturn this.build();",
                " \t}",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/ContentType.java b/hutool-http/src/main/java/cn/hutool/http/ContentType.java",
                "index da28dce9a..8578d4dba 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/ContentType.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/ContentType.java",
                "@@ -30,2 +30,13 @@ public enum ContentType {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba\u00e9\u00bb\u0098\u00e8\u00ae\u00a4Content-Type\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e5\u008c\u0085\u00e6\u008b\u00ac<code>null</code>\u00e5\u0092\u008capplication/x-www-form-urlencoded",
                "+\t * ",
                "+\t * @param contentType \u00e5\u0086\u0085\u00e5\u00ae\u00b9\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba\u00e9\u00bb\u0098\u00e8\u00ae\u00a4Content-Type",
                "+\t * @since 4.1.5",
                "+\t */",
                "+\tpublic static boolean isDefault(String contentType) {",
                "+\t\treturn null == contentType || isFormUrlEncoed(contentType);",
                "+\t}",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java b/hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java",
                "index 8bb553c04..e83ae4342 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java",
                "@@ -43,7 +43,7 @@ public enum GlobalHeaders{",
                "-//\t\theader(Header.ACCEPT, \"text/html,application/xhtml+xml,application/xml,application/json;q=0.9,*/*;q=0.8\", true);",
                "-//\t\theader(Header.ACCEPT_ENCODING, \"gzip\", true);",
                "-//\t\theader(Header.ACCEPT_LANGUAGE, \"zh-CN,zh;q=0.8\", true);",
                "-//\t\theader(Header.CONTENT_TYPE, \"application/x-www-form-urlencoded\", true);",
                "-//\t\theader(Header.USER_AGENT, \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36 Hutool\", true);",
                "+\t\theader(Header.ACCEPT, \"text/html,application/xhtml+xml,application/xml,application/json;q=0.9,*/*;q=0.8\", true);",
                "+\t\theader(Header.ACCEPT_ENCODING, \"gzip\", true);",
                "+\t\theader(Header.ACCEPT_LANGUAGE, \"zh-CN,zh;q=0.8\", true);",
                "+\t\theader(Header.CONTENT_TYPE, \"application/x-www-form-urlencoded\", true);",
                "+\t\theader(Header.USER_AGENT, \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36 Hutool\", true);",
                " \t\treturn this;",
                "diff --git a/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java b/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "index c7f54ddc3..015f002c6 100644",
                "--- a/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "+++ b/hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "@@ -533,3 +533,3 @@ public class HttpRequest extends HttpBase<HttpRequest> {",
                " \t\t\tcontentType = HttpUtil.getContentTypeByRequestBody(body);",
                "-\t\t\tif (null != contentType && ContentType.isFormUrlEncoed(this.header(Header.CONTENT_TYPE))) {",
                "+\t\t\tif (null != contentType && ContentType.isDefault(this.header(Header.CONTENT_TYPE))) {",
                " \t\t\t\tif (null != this.charset) {",
                "diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "index 183fcb284..2d1dfe11c 100644",
                "--- a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java",
                "@@ -11,2 +11,3 @@ import java.util.List;",
                " import java.util.Map;",
                "+import java.util.Set;",
                " import java.util.TreeMap;",
                "@@ -22,2 +23,3 @@ import org.apache.poi.ss.usermodel.Workbook;",
                " import cn.hutool.core.bean.BeanUtil;",
                "+import cn.hutool.core.comparator.IndexedComparator;",
                " import cn.hutool.core.io.FileUtil;",
                "@@ -51,2 +53,3 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \tprivate Map<String, String> headerAlias;",
                "+\tprivate Comparator<String> aliasComparator;",
                " \t/** \u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00e9\u009b\u0086\u00ef\u00bc\u008c\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e4\u00b8\u008d\u00e5\u0090\u008c\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e6\u00a0\u00b7\u00e5\u00bc\u008f */",
                "@@ -280,2 +283,20 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                "+\t/**",
                "+\t * \u00e5\u00a2\u009e\u00e5\u008a\u00a0\u00e6\u00a0\u0087\u00e9\u00a2\u0098\u00e5\u0088\u00ab\u00e5\u0090\u008d",
                "+\t * ",
                "+\t * @param name \u00e5\u008e\u009f\u00e6\u00a0\u0087\u00e9\u00a2\u0098",
                "+\t * @param alias \u00e5\u0088\u00ab\u00e5\u0090\u008d",
                "+\t * @return this",
                "+\t * @since 4.1.5",
                "+\t */",
                "+\tpublic ExcelWriter addHeaderAlias(String name, String alias) {",
                "+\t\tMap<String, String> headerAlias = this.headerAlias;",
                "+\t\tif (null == headerAlias) {",
                "+\t\t\theaderAlias = new LinkedHashMap<>();",
                "+\t\t}",
                "+\t\tthis.headerAlias = headerAlias;",
                "+\t\theaderAlias.put(name, alias);",
                "+\t\treturn this;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -434,20 +455,5 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \t\tfor (Object object : data) {",
                "-\t\t\tif (object instanceof Iterable) {",
                "-\t\t\t\t// \u00e6\u0099\u00ae\u00e9\u0080\u009a\u00e5\u00a4\u009a\u00e8\u00a1\u008c\u00e6\u0095\u00b0\u00e6\u008d\u00ae",
                "-\t\t\t\twriteRow((Iterable<?>) object);",
                "-\t\t\t} else if (object instanceof Map) {",
                "-\t\t\t\t// Map\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00ef\u00bc\u008c\u00e7\u00ac\u00ac\u00e4\u00b8\u0080\u00e6\u009d\u00a1\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e7\u009a\u0084key\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e6\u00a0\u0087\u00e9\u00a2\u0098\u00e8\u00a1\u008c",
                "-\t\t\t\twriteRows((Map<?, ?>) object, 0 == index);",
                "-\t\t\t} else if (BeanUtil.isBean(object.getClass())) {",
                "-\t\t\t\t// \u00e4\u00b8\u0080\u00e4\u00b8\u00aaBean\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008c",
                "-\t\t\t\twriteRows(BeanUtil.beanToMap(object, new LinkedHashMap<String, Object>(), false, false), 0 == index);",
                "-\t\t\t} else {",
                "-\t\t\t\tbreak;",
                "-\t\t\t}",
                "+\t\t\twriteRow(object, 0 == index);",
                " \t\t\tindex++;",
                " \t\t}",
                "-\t\tif (0 == index) {",
                "-\t\t\t// \u00e5\u009c\u00a8\u00e6\u0097\u00a0\u00e6\u00b3\u0095\u00e8\u00af\u0086\u00e5\u0088\u00ab\u00e5\u0085\u0083\u00e7\u00b4\u00a0\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e7\u009a\u0084\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00e4\u00b8\u008b\u00ef\u00bc\u008c\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00e5\u00af\u00b9\u00e5\u00be\u0085",
                "-\t\t\twriteRow(data);",
                "-\t\t}",
                " \t\treturn this;",
                "@@ -472,3 +478,3 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \t@SuppressWarnings({ \"rawtypes\", \"unchecked\" })",
                "-\tpublic <T> ExcelWriter write(Iterable<T> data, Comparator<String> comparator) {",
                "+\tpublic ExcelWriter write(Iterable<?> data, Comparator<String> comparator) {",
                " \t\tAssert.isFalse(this.isClosed, \"ExcelWriter has been closed!\");",
                "@@ -476,10 +482,10 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \t\tMap<?, ?> map;",
                "-\t\tfor (T t : data) {",
                "-\t\t\tif (t instanceof Map) {",
                "+\t\tfor (Object obj : data) {",
                "+\t\t\tif (obj instanceof Map) {",
                " \t\t\t\tmap = new TreeMap<>(comparator);",
                "-\t\t\t\tmap.putAll((Map) t);",
                "+\t\t\t\tmap.putAll((Map) obj);",
                " \t\t\t} else {",
                "-\t\t\t\tmap = BeanUtil.beanToMap(t, new TreeMap<String, Object>(comparator), false, false);",
                "+\t\t\t\tmap = BeanUtil.beanToMap(obj, new TreeMap<String, Object>(comparator), false, false);",
                " \t\t\t}",
                "-\t\t\twriteRows(map, isFirstRow);",
                "+\t\t\twriteRow(map, isFirstRow);",
                " \t\t\tif (isFirstRow) {",
                "@@ -507,14 +513,33 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \t/**",
                "-\t * \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00e6\u0095\u00b0\u00e6\u008d\u00ae<br>",
                "-\t * \u00e6\u009c\u00ac\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u008f\u00aa\u00e6\u0098\u00af\u00e5\u00b0\u0086\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u0086\u0099\u00e5\u0085\u00a5Workbook\u00e4\u00b8\u00ad\u00e7\u009a\u0084Sheet\u00ef\u00bc\u008c\u00e5\u00b9\u00b6\u00e4\u00b8\u008d\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6<br>",
                "-\t * \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084\u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e8\u00a1\u008c\u00e4\u00b8\u00ba\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e8\u00a1\u008c\u00e5\u008f\u00b7\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link #getCurrentRow()}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00ef\u00bc\u008c\u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084\u00e7\u009a\u0084\u00e8\u00a1\u008c\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e8\u00a1\u008c\u00e5\u008f\u00b7\u00e8\u0087\u00aa\u00e5\u008a\u00a8+1<br>",
                "-\t * \u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00e4\u00b8\u00ba\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link #getCellStyle()}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e5\u0090\u008e\u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e6\u00a0\u00b7\u00e5\u00bc\u008f",
                "+\t * \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00ef\u00bc\u008c\u00e6\u00a0\u00b9\u00e6\u008d\u00aerowBean\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e7\u00b1\u00bb\u00e5\u009e\u008b\u00e4\u00b8\u008d\u00e5\u0090\u008c\u00ef\u00bc\u008c\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00e5\u00a6\u0082\u00e4\u00b8\u008b\u00ef\u00bc\u009a",
                " \t * ",
                "-\t * @param rowData \u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00e7\u009a\u0084\u00e6\u0095\u00b0\u00e6\u008d\u00ae",
                "+\t * <pre>",
                "+\t * 1\u00e3\u0080\u0081\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u00baIterable\u00ef\u00bc\u008c\u00e7\u009b\u00b4\u00e6\u008e\u00a5\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008c",
                "+\t * 2\u00e3\u0080\u0081\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u00baMap\u00ef\u00bc\u008cisWriteKeyAsHead\u00e4\u00b8\u00batrue\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u00a4\u00e8\u00a1\u008c\u00ef\u00bc\u008cMap\u00e7\u009a\u0084keys\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00ef\u00bc\u008cvalues\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e7\u00ac\u00ac\u00e4\u00ba\u008c\u00e8\u00a1\u008c\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e5\u008f\u00aa\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008cvalues",
                "+\t * 3\u00e3\u0080\u0081\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u00baBean\u00ef\u00bc\u008c\u00e8\u00bd\u00ac\u00e4\u00b8\u00baMap\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00ef\u00bc\u008cisWriteKeyAsHead\u00e4\u00b8\u00batrue\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u00a4\u00e8\u00a1\u008c\u00ef\u00bc\u008cMap\u00e7\u009a\u0084keys\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00ef\u00bc\u008cvalues\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e7\u00ac\u00ac\u00e4\u00ba\u008c\u00e8\u00a1\u008c\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e5\u008f\u00aa\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008cvalues",
                "+\t * </pre>",
                "+\t * ",
                "+\t * @param rowBean \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084Bean",
                "+\t * @param isWriteKeyAsHead \u00e4\u00b8\u00batrue\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u00a4\u00e8\u00a1\u008c\u00ef\u00bc\u008cMap\u00e7\u009a\u0084keys\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00ef\u00bc\u008cvalues\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e7\u00ac\u00ac\u00e4\u00ba\u008c\u00e8\u00a1\u008c\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e5\u008f\u00aa\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008cvalues",
                " \t * @return this",
                "-\t */",
                "-\tpublic ExcelWriter writeRow(Iterable<?> rowData) {",
                "-\t\tAssert.isFalse(this.isClosed, \"ExcelWriter has been closed!\");",
                "-\t\tRowUtil.writeRow(this.sheet.createRow(this.currentRow.getAndIncrement()), rowData, this.styleSet, false);",
                "-\t\treturn this;",
                "+\t * @see #writeRow(Iterable)",
                "+\t * @see #writeRow(Map, boolean)",
                "+\t * @since 4.1.5",
                "+\t */",
                "+\tpublic ExcelWriter writeRow(Object rowBean, boolean isWriteKeyAsHead) {",
                "+\t\tMap<?, ?> rowMap = null;",
                "+\t\tif (rowBean instanceof Iterable) {",
                "+\t\t\twriteRow((Iterable<?>) rowBean);",
                "+\t\t}",
                "+\t\tif (rowBean instanceof Map) {",
                "+\t\t\trowMap = (Map<?, ?>) rowBean;",
                "+\t\t} else {",
                "+\t\t\tif (MapUtil.isEmpty(this.headerAlias)) {",
                "+\t\t\t\trowMap = BeanUtil.beanToMap(rowBean, new LinkedHashMap<String, Object>(), false, false);",
                "+\t\t\t} else {",
                "+\t\t\t\t// \u00e5\u0088\u00ab\u00e5\u0090\u008d\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e6\u0083\u0085\u00e5\u0086\u00b5\u00e4\u00b8\u008b\u00e6\u008c\u0089\u00e7\u0085\u00a7\u00e5\u0088\u00ab\u00e5\u0090\u008d\u00e7\u009a\u0084\u00e6\u00b7\u00bb\u00e5\u008a\u00a0\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e6\u008e\u0092\u00e5\u00ba\u008fBean\u00e6\u0095\u00b0\u00e6\u008d\u00ae",
                "+\t\t\t\trowMap = BeanUtil.beanToMap(rowBean, new TreeMap<String, Object>(getInitedAliasComparator()), false, false);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn writeRow(rowMap, isWriteKeyAsHead);",
                " \t}",
                "@@ -522,11 +547,17 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \t/**",
                "-\t * \u00e5\u00b0\u0086\u00e4\u00b8\u0080\u00e4\u00b8\u00aaMap\u00e5\u0086\u0099\u00e5\u0085\u00a5\u00e5\u0088\u00b0Excel\u00ef\u00bc\u008cisWriteKeys\u00e4\u00b8\u00batrue\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u00a4\u00e8\u00a1\u008c\u00ef\u00bc\u008cMap\u00e7\u009a\u0084keys\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00ef\u00bc\u008cvalues\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e7\u00ac\u00ac\u00e4\u00ba\u008c\u00e8\u00a1\u008c\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e5\u008f\u00aa\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008cvalues",
                "+\t * \u00e5\u00b0\u0086\u00e4\u00b8\u0080\u00e4\u00b8\u00aaMap\u00e5\u0086\u0099\u00e5\u0085\u00a5\u00e5\u0088\u00b0Excel\u00ef\u00bc\u008cisWriteKeyAsHead\u00e4\u00b8\u00batrue\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u00a4\u00e8\u00a1\u008c\u00ef\u00bc\u008cMap\u00e7\u009a\u0084keys\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00ef\u00bc\u008cvalues\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e7\u00ac\u00ac\u00e4\u00ba\u008c\u00e8\u00a1\u008c\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e5\u008f\u00aa\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008cvalues<br>",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009crowMap\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba\u00ef\u00bc\u0088\u00e5\u008c\u0085\u00e6\u008b\u00acnull\u00ef\u00bc\u0089\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u00a9\u00ba\u00e8\u00a1\u008c",
                " \t * ",
                "-\t * @param rowMap \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084Map",
                "-\t * @param isWriteKeys \u00e4\u00b8\u00batrue\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u00a4\u00e8\u00a1\u008c\u00ef\u00bc\u008cMap\u00e7\u009a\u0084keys\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00ef\u00bc\u008cvalues\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e7\u00ac\u00ac\u00e4\u00ba\u008c\u00e8\u00a1\u008c\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e5\u008f\u00aa\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008cvalues",
                "+\t * @param rowMap \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084Map\u00ef\u00bc\u008c\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba\u00ef\u00bc\u0088\u00e5\u008c\u0085\u00e6\u008b\u00acnull\u00ef\u00bc\u0089\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u00a9\u00ba\u00e8\u00a1\u008c",
                "+\t * @param isWriteKeyAsHead \u00e4\u00b8\u00batrue\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u00a4\u00e8\u00a1\u008c\u00ef\u00bc\u008cMap\u00e7\u009a\u0084keys\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00ef\u00bc\u008cvalues\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e7\u00ac\u00ac\u00e4\u00ba\u008c\u00e8\u00a1\u008c\u00ef\u00bc\u008c\u00e5\u0090\u00a6\u00e5\u0088\u0099\u00e5\u008f\u00aa\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008cvalues",
                " \t * @return this",
                " \t */",
                "-\tpublic ExcelWriter writeRows(Map<?, ?> rowMap, boolean isWriteKeys) {",
                "+\tpublic ExcelWriter writeRow(Map<?, ?> rowMap, boolean isWriteKeyAsHead) {",
                " \t\tAssert.isFalse(this.isClosed, \"ExcelWriter has been closed!\");",
                "-\t\tif (isWriteKeys) {",
                "+\t\tif (MapUtil.isEmpty(rowMap)) {",
                "+\t\t\t// \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e4\u00b8\u00banull\u00e6\u0088\u0096\u00e7\u00a9\u00ba\u00ef\u00bc\u008c\u00e8\u00b7\u00b3\u00e8\u00bf\u0087\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e8\u00a1\u008c",
                "+\t\t\treturn passCurrentRow();",
                "+\t\t}",
                "+",
                "+\t\tif (isWriteKeyAsHead) {",
                " \t\t\twriteHeadRow(aliasHeader(rowMap.keySet()));",
                "@@ -537,2 +568,17 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                "+\t/**",
                "+\t * \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00e6\u0095\u00b0\u00e6\u008d\u00ae<br>",
                "+\t * \u00e6\u009c\u00ac\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u008f\u00aa\u00e6\u0098\u00af\u00e5\u00b0\u0086\u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u0086\u0099\u00e5\u0085\u00a5Workbook\u00e4\u00b8\u00ad\u00e7\u009a\u0084Sheet\u00ef\u00bc\u008c\u00e5\u00b9\u00b6\u00e4\u00b8\u008d\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e5\u0088\u00b0\u00e6\u0096\u0087\u00e4\u00bb\u00b6<br>",
                "+\t * \u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084\u00e8\u00b5\u00b7\u00e5\u00a7\u008b\u00e8\u00a1\u008c\u00e4\u00b8\u00ba\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e8\u00a1\u008c\u00e5\u008f\u00b7\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link #getCurrentRow()}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00ef\u00bc\u008c\u00e6\u00a0\u00b9\u00e6\u008d\u00ae\u00e5\u0086\u0099\u00e5\u0087\u00ba\u00e7\u009a\u0084\u00e7\u009a\u0084\u00e8\u00a1\u008c\u00e6\u0095\u00b0\u00ef\u00bc\u008c\u00e5\u00bd\u0093\u00e5\u0089\u008d\u00e8\u00a1\u008c\u00e5\u008f\u00b7\u00e8\u0087\u00aa\u00e5\u008a\u00a8+1<br>",
                "+\t * \u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00e4\u00b8\u00ba\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e6\u00a0\u00b7\u00e5\u00bc\u008f\u00ef\u00bc\u008c\u00e5\u008f\u00af\u00e4\u00bd\u00bf\u00e7\u0094\u00a8{@link #getCellStyle()}\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e5\u0090\u008e\u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e6\u00a0\u00b7\u00e5\u00bc\u008f",
                "+\t * ",
                "+\t * @param rowData \u00e4\u00b8\u0080\u00e8\u00a1\u008c\u00e7\u009a\u0084\u00e6\u0095\u00b0\u00e6\u008d\u00ae",
                "+\t * @return this",
                "+\t */",
                "+\tpublic ExcelWriter writeRow(Iterable<?> rowData) {",
                "+\t\tAssert.isFalse(this.isClosed, \"ExcelWriter has been closed!\");",
                "+\t\tRowUtil.writeRow(this.sheet.createRow(this.currentRow.getAndIncrement()), rowData, this.styleSet, false);",
                "+\t\treturn this;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -664,2 +710,21 @@ public class ExcelWriter extends ExcelBase<ExcelWriter> {",
                " \t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u008e\u00b7\u00e5\u008f\u0096\u00e5\u008d\u0095\u00e4\u00be\u008b\u00e7\u009a\u0084\u00e5\u0088\u00ab\u00e5\u0090\u008d\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e5\u0099\u00a8\u00ef\u00bc\u008c\u00e6\u00af\u0094\u00e8\u00be\u0083\u00e5\u0099\u00a8\u00e7\u009a\u0084\u00e9\u00a1\u00ba\u00e5\u00ba\u008f\u00e4\u00b8\u00ba\u00e5\u0088\u00ab\u00e5\u0090\u008d\u00e5\u008a\u00a0\u00e5\u0085\u00a5\u00e7\u009a\u0084\u00e9\u00a1\u00ba\u00e5\u00ba\u008f",
                "+\t * ",
                "+\t * @return Comparator",
                "+\t * @since 4.1.5",
                "+\t */",
                "+\tprivate Comparator<String> getInitedAliasComparator() {",
                "+\t\tif (MapUtil.isEmpty(this.headerAlias)) {",
                "+\t\t\treturn null;",
                "+\t\t}",
                "+\t\tComparator<String> aliasComparator = this.aliasComparator;",
                "+\t\tif (null == aliasComparator) {",
                "+\t\t\tSet<String> keySet = this.headerAlias.keySet();",
                "+\t\t\taliasComparator = new IndexedComparator<>(keySet.toArray(new String[keySet.size()]));",
                "+\t\t\tthis.aliasComparator = aliasComparator;",
                "+\t\t}",
                "+\t\treturn aliasComparator;",
                "+\t}",
                " \t// -------------------------------------------------------------------------- Private method end"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/comparator/IndexedComparator.java",
                "hutool-core/src/main/java/cn/hutool/core/exceptions/StatefulException.java",
                "hutool-core/src/main/java/cn/hutool/core/io/resource/ResourceUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/lang/ClassScaner.java",
                "hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java",
                "hutool-db/src/main/java/cn/hutool/db/StatementUtil.java",
                "hutool-db/src/main/java/cn/hutool/db/dialect/impl/AnsiSqlDialect.java",
                "hutool-db/src/main/java/cn/hutool/db/sql/SqlBuilder.java",
                "hutool-http/src/main/java/cn/hutool/http/ContentType.java",
                "hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java",
                "hutool-http/src/main/java/cn/hutool/http/HttpRequest.java",
                "hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ab02ef4074eda718e49c8f6c8e7fe3b848dcb744",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1536920987,
            "hunks": 16,
            "message": "sql log fixed",
            "diff": [
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/StatementUtil.java b/hutool-db/src/main/java/cn/hutool/db/StatementUtil.java",
                "index 4c5160432..048cbc251 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/StatementUtil.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/StatementUtil.java",
                "@@ -4,2 +4,3 @@ import java.math.BigDecimal;",
                " import java.math.BigInteger;",
                "+import java.sql.CallableStatement;",
                " import java.sql.Connection;",
                "@@ -149,2 +150,45 @@ public class StatementUtil {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e6\u0089\u00b9\u00e9\u0087\u008f\u00e6\u0093\u008d\u00e4\u00bd\u009c\u00e7\u009a\u0084{@link PreparedStatement}",
                "+\t * ",
                "+\t * @param conn \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e8\u00bf\u009e\u00e6\u008e\u00a5",
                "+\t * @param sql SQL\u00e8\u00af\u00ad\u00e5\u008f\u00a5\u00ef\u00bc\u008c\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\"?\"\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e5\u008d\u00a0\u00e4\u00bd\u008d\u00e7\u00ac\u00a6",
                "+\t * @param paramsBatch \"?\"\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e6\u0089\u00b9\u00e6\u00ac\u00a1\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * @return {@link PreparedStatement}",
                "+\t * @throws SQLException SQL\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * @since 4.1.13",
                "+\t */",
                "+\tpublic static PreparedStatement prepareStatementForBatch(Connection conn, String sql, Object[]... paramsBatch) throws SQLException {",
                "+\t\tAssert.notBlank(sql, \"Sql String must be not blank!\");",
                "+\t\t",
                "+\t\tsql = sql.trim();",
                "+//\t\tSqlLog.INSTASNCE.log(sql, paramsBatch);",
                "+\t\tPreparedStatement ps = conn.prepareStatement(sql);",
                "+\t\tfor (Object[] params : paramsBatch) {",
                "+\t\t\tStatementUtil.fillParams(ps, params);",
                "+\t\t\tps.addBatch();",
                "+\t\t}",
                "+\t\treturn ps;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba{@link CallableStatement}",
                "+\t * ",
                "+\t * @param conn \u00e6\u0095\u00b0\u00e6\u008d\u00ae\u00e5\u00ba\u0093\u00e8\u00bf\u009e\u00e6\u008e\u00a5",
                "+\t * @param sql SQL\u00e8\u00af\u00ad\u00e5\u008f\u00a5\u00ef\u00bc\u008c\u00e4\u00bd\u00bf\u00e7\u0094\u00a8\"?\"\u00e5\u0081\u009a\u00e4\u00b8\u00ba\u00e5\u008d\u00a0\u00e4\u00bd\u008d\u00e7\u00ac\u00a6",
                "+\t * @param params \"?\"\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e5\u008f\u0082\u00e6\u0095\u00b0\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * @return {@link CallableStatement}",
                "+\t * @throws SQLException SQL\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * @since 4.1.13",
                "+\t */",
                "+\tpublic static CallableStatement prepareCall(Connection conn, String sql, Object... params) throws SQLException {",
                "+\t\tAssert.notBlank(sql, \"Sql String must be not blank!\");",
                "+",
                "+\t\tsql = sql.trim();",
                "+\t\tSqlLog.INSTASNCE.log(sql, params);",
                "+\t\tCallableStatement call = conn.prepareCall(sql);",
                "+\t\tfillParams(call, params);",
                "+\t\treturn call;",
                "+\t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/sql/SqlExecutor.java b/hutool-db/src/main/java/cn/hutool/db/sql/SqlExecutor.java",
                "index 8bff2377a..d6663ca1e 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/sql/SqlExecutor.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/sql/SqlExecutor.java",
                "@@ -7,3 +7,2 @@ import java.sql.ResultSet;",
                " import java.sql.SQLException;",
                "-import java.sql.Statement;",
                " import java.util.Map;",
                "@@ -54,4 +53,4 @@ public class SqlExecutor {",
                " \t\ttry {",
                "-\t\t\tps = conn.prepareStatement(sql);",
                "-\t\t\treturn executeUpdate(ps, params);",
                "+\t\t\tps = StatementUtil.prepareStatement(conn, sql, params);",
                "+\t\t\treturn ps.executeUpdate();",
                " \t\t} finally {",
                "@@ -72,8 +71,8 @@ public class SqlExecutor {",
                " \tpublic static boolean call(Connection conn, String sql, Object... params) throws SQLException {",
                "-\t\tCallableStatement proc = null;",
                "+\t\tCallableStatement call = null;",
                " \t\ttry {",
                "-\t\t\tproc = conn.prepareCall(sql);",
                "-\t\t\treturn execute(proc, params);",
                "+\t\t\tcall = StatementUtil.prepareCall(conn, sql, params);",
                "+\t\t\treturn call.execute();",
                " \t\t} finally {",
                "-\t\t\tDbUtil.close(proc);",
                "+\t\t\tDbUtil.close(call);",
                " \t\t}",
                "@@ -95,3 +94,3 @@ public class SqlExecutor {",
                " \t\ttry {",
                "-\t\t\tproc = conn.prepareCall(sql);",
                "+\t\t\tproc = StatementUtil.prepareCall(conn, sql, params);",
                " \t\t\treturn proc.executeQuery();",
                "@@ -132,6 +131,7 @@ public class SqlExecutor {",
                " \t\tPreparedStatement ps = null;",
                "+\t\tResultSet rs = null;",
                " \t\ttry {",
                "-\t\t\tps = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);",
                "-\t\t\texecuteUpdate(ps, params);",
                "-\t\t\tResultSet rs = ps.getGeneratedKeys();",
                "+\t\t\tps = StatementUtil.prepareStatement(conn, sql, params);",
                "+\t\t\tps.executeUpdate();",
                "+\t\t\trs = ps.getGeneratedKeys();",
                " \t\t\tif (rs != null && rs.next()) {",
                "@@ -146,2 +146,3 @@ public class SqlExecutor {",
                " \t\t\tDbUtil.close(ps);",
                "+\t\t\tDbUtil.close(rs);",
                " \t\t}",
                "@@ -163,7 +164,3 @@ public class SqlExecutor {",
                " \t\ttry {",
                "-\t\t\tps = conn.prepareStatement(sql);",
                "-\t\t\tfor (Object[] params : paramsBatch) {",
                "-\t\t\t\tStatementUtil.fillParams(ps, params);",
                "-\t\t\t\tps.addBatch();",
                "-\t\t\t}",
                "+\t\t\tps = StatementUtil.prepareStatementForBatch(conn, sql, paramsBatch);",
                " \t\t\treturn ps.executeBatch();",
                "@@ -207,4 +204,4 @@ public class SqlExecutor {",
                " \t\ttry {",
                "-\t\t\tps = conn.prepareStatement(sql);",
                "-\t\t\treturn query(ps, rsh, params);",
                "+\t\t\tps = StatementUtil.prepareStatement(conn, sql, params);",
                "+\t\t\treturn executeQuery(ps, rsh);",
                " \t\t} finally {",
                "@@ -257,12 +254,6 @@ public class SqlExecutor {",
                " \tpublic static <T> T query(PreparedStatement ps, RsHandler<T> rsh, Object... params) throws SQLException {",
                "-\t\tResultSet rs = null;",
                "-\t\ttry {",
                "-\t\t\tStatementUtil.fillParams(ps, params);",
                "-\t\t\trs = ps.executeQuery();",
                "-\t\t\treturn rsh.handle(rs);",
                "-\t\t} finally {",
                "-\t\t\tDbUtil.close(rs);",
                "-\t\t}",
                "+\t\tStatementUtil.fillParams(ps, params);",
                "+\t\treturn executeQuery(ps, rsh);",
                " \t}",
                "-",
                "+\t",
                " \t/**",
                "@@ -284,2 +275,23 @@ public class SqlExecutor {",
                " \t}",
                "+\t",
                "+\t//-------------------------------------------------------------------------------------------------------------------------------- Private method start",
                "+\t/**",
                "+\t * \u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e6\u009f\u00a5\u00e8\u00af\u00a2",
                "+\t * @param ps {@link PreparedStatement}",
                "+\t * @param rsh  \u00e7\u00bb\u0093\u00e6\u009e\u009c\u00e9\u009b\u0086\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param params \u00e5\u008f\u0082\u00e6\u0095\u00b0",
                "+\t * @return \u00e7\u00bb\u0093\u00e6\u009e\u009c\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @throws SQLException SQL\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * @since 4.1.13",
                "+\t */",
                "+\tprivate static <T> T executeQuery(PreparedStatement ps, RsHandler<T> rsh) throws SQLException{",
                "+\t\tResultSet rs = null;",
                "+\t\ttry {",
                "+\t\t\trs = ps.executeQuery();",
                "+\t\t\treturn rsh.handle(rs);",
                "+\t\t} finally {",
                "+\t\t\tDbUtil.close(rs);",
                "+\t\t}",
                "+\t}",
                "+\t//-------------------------------------------------------------------------------------------------------------------------------- Private method end",
                " }"
            ],
            "changed_files": [
                "hutool-db/src/main/java/cn/hutool/db/StatementUtil.java",
                "hutool-db/src/main/java/cn/hutool/db/sql/SqlExecutor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "74009b695de0f43eefadf6b1a11a645ecb57d065",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1539268257,
            "hunks": 7,
            "message": "fix BeanUtil bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java b/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "index bdc9e5bbe..50e8ea7c2 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "@@ -540,6 +540,5 @@ public class BeanUtil {",
                " \t}",
                "-",
                "+\t",
                " \t/**",
                " \t * \u00e5\u00a4\u008d\u00e5\u0088\u00b6Bean\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e5\u00b1\u009e\u00e6\u0080\u00a7<br>",
                "-\t * \u00e9\u0099\u0090\u00e5\u0088\u00b6\u00e7\u00b1\u00bb\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e9\u0099\u0090\u00e5\u0088\u00b6\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e7\u009a\u0084\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e7\u00b1\u00bb\u00e6\u0088\u0091\u00e5\u008f\u00aa\u00e6\u0083\u00b3\u00e5\u00a4\u008d\u00e5\u0088\u00b6\u00e5\u0085\u00b6\u00e7\u0088\u00b6\u00e7\u00b1\u00bb\u00e7\u009a\u0084\u00e4\u00b8\u0080\u00e4\u00ba\u009b\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00ef\u00bc\u008c\u00e5\u00b0\u00b1\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e5\u00b0\u0086editable\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e4\u00b8\u00ba\u00e7\u0088\u00b6\u00e7\u00b1\u00bb",
                " \t * ",
                "@@ -547,6 +546,6 @@ public class BeanUtil {",
                " \t * @param target \u00e7\u009b\u00ae\u00e6\u00a0\u0087Bean\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "-\t * @param copyOptions \u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e9\u0080\u0089\u00e9\u00a1\u00b9\u00ef\u00bc\u008c\u00e8\u00a7\u0081 {@link CopyOptions}",
                "+\t * @param ignoreCase \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00e5\u0086\u0099",
                " \t */",
                "-\tpublic static void copyProperties(final Object source, Object target, CopyOptions copyOptions) {",
                "-\t\tcopyProperties(source, target, false, copyOptions);",
                "+\tpublic static void copyProperties(Object source, Object target, boolean ignoreCase) {",
                "+\t\tBeanCopier.create(source, target, CopyOptions.create().setIgnoreCase(ignoreCase)).copy();",
                " \t}",
                "@@ -555,3 +554,3 @@ public class BeanUtil {",
                " \t * \u00e5\u00a4\u008d\u00e5\u0088\u00b6Bean\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e5\u00b1\u009e\u00e6\u0080\u00a7<br>",
                "-\t * \u00e9\u0099\u0090\u00e5\u0088\u00b6\u00e7\u00b1\u00bb\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e9\u0099\u0090\u00e5\u0088\u00b6\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e7\u009a\u0084\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e7\u00b1\u00bb\u00e6\u0088\u0091\u00e5\u008f\u00aa\u00e6\u0083\u00b3\u00e5\u00a4\u008d\u00e5\u0088\u00b6\u00e5\u0085\u00b6\u00e7\u0088\u00b6\u00e7\u00b1\u00bb\u00e7\u009a\u0084\u00e4\u00b8\u0080\u00e4\u00ba\u009b\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00ef\u00bc\u008c\u00e5\u00b0\u00b1\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e5\u00b0\u0086CopyOptions.editable\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e4\u00b8\u00ba\u00e7\u0088\u00b6\u00e7\u00b1\u00bb",
                "+\t * \u00e9\u0099\u0090\u00e5\u0088\u00b6\u00e7\u00b1\u00bb\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e9\u0099\u0090\u00e5\u0088\u00b6\u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e7\u009a\u0084\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e7\u00b1\u00bb\u00e6\u0088\u0091\u00e5\u008f\u00aa\u00e6\u0083\u00b3\u00e5\u00a4\u008d\u00e5\u0088\u00b6\u00e5\u0085\u00b6\u00e7\u0088\u00b6\u00e7\u00b1\u00bb\u00e7\u009a\u0084\u00e4\u00b8\u0080\u00e4\u00ba\u009b\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00ef\u00bc\u008c\u00e5\u00b0\u00b1\u00e5\u008f\u00af\u00e4\u00bb\u00a5\u00e5\u00b0\u0086editable\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e4\u00b8\u00ba\u00e7\u0088\u00b6\u00e7\u00b1\u00bb",
                " \t * ",
                "@@ -559,10 +558,6 @@ public class BeanUtil {",
                " \t * @param target \u00e7\u009b\u00ae\u00e6\u00a0\u0087Bean\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "-\t * @param ignoreCase \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00e5\u0086\u0099",
                " \t * @param copyOptions \u00e6\u008b\u00b7\u00e8\u00b4\u009d\u00e9\u0080\u0089\u00e9\u00a1\u00b9\u00ef\u00bc\u008c\u00e8\u00a7\u0081 {@link CopyOptions}",
                " \t */",
                "-\tpublic static void copyProperties(final Object source, Object target, boolean ignoreCase, CopyOptions copyOptions) {",
                "-\t\tif (null == copyOptions) {",
                "-\t\t\tcopyOptions = new CopyOptions();",
                "-\t\t}",
                "-\t\tBeanCopier.create(source, target, copyOptions).copy();",
                "+\tpublic static void copyProperties(Object source, Object target, CopyOptions copyOptions) {",
                "+\t\tcopyProperties(source, target, copyOptions);",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7ab805481905b8824a28c4d04cb43faa3f28a5b8",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1532763047,
            "hunks": 7,
            "message": "fix array bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/date/DateTime.java b/hutool-core/src/main/java/cn/hutool/core/date/DateTime.java",
                "index 2f948eb88..585769802 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/date/DateTime.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/date/DateTime.java",
                "@@ -772,2 +772,17 @@ public class DateTime extends Date {",
                " \t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e8\u00bd\u00ac\u00e4\u00b8\u00ba\"HH:mm:ss\" \u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * ",
                "+\t * @return \"HH:mm:ss\" \u00e6\u00a0\u00bc\u00e5\u00bc\u008f\u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @since 4.1.4",
                "+\t */",
                "+\tpublic String toTimeStr() {",
                "+\t\tif(null != this.timeZone) {",
                "+\t\t\tfinal SimpleDateFormat simpleDateFormat = new SimpleDateFormat(DatePattern.NORM_TIME_PATTERN);",
                "+\t\t\tsimpleDateFormat.setTimeZone(this.timeZone);",
                "+\t\t\treturn toString(simpleDateFormat);",
                "+\t\t}",
                "+\t\treturn toString(DatePattern.NORM_TIME_FORMAT);",
                "+\t}",
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java b/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "index a1ce7b021..4624f947b 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "@@ -4,2 +4,3 @@ import java.io.IOException;",
                " import java.io.Writer;",
                "+import java.lang.reflect.Array;",
                " import java.lang.reflect.Type;",
                "@@ -18,3 +19,2 @@ import cn.hutool.core.convert.ConverterRegistry;",
                " import cn.hutool.core.convert.impl.CollectionConverter;",
                "-import cn.hutool.core.util.ArrayUtil;",
                " import cn.hutool.core.util.NumberUtil;",
                "@@ -233,3 +233,2 @@ final class InternalJSONUtil {",
                " \t\t\t\t}",
                "-\t\t\t\t",
                " \t\t\t\treturn jsonConvert(valueType, value, ignoreError);",
                "@@ -258,7 +257,8 @@ final class InternalJSONUtil {",
                " \t */",
                "-\tprotected static Object[] toArray(final JSONArray jsonArray, Class<?> arrayClass, boolean ignoreError) {",
                "+\tprotected static Object toArray(final JSONArray jsonArray, Class<?> arrayClass, boolean ignoreError) {",
                " \t\tfinal Class<?> componentType = arrayClass.isArray() ? arrayClass.getComponentType() : arrayClass;",
                "-\t\tfinal Object[] objArray = ArrayUtil.newArray(componentType, jsonArray.size());",
                "-\t\tfor (int i = 0; i < objArray.length; i++) {",
                "-\t\t\tobjArray[i] = jsonConvert(componentType, jsonArray.get(i), ignoreError);",
                "+\t\tfinal int size = jsonArray.size();",
                "+\t\tfinal Object objArray = Array.newInstance(componentType, size);",
                "+\t\tfor (int i = 0; i < size; i++) {",
                "+\t\t\tArray.set(objArray, i, jsonConvert(componentType, jsonArray.get(i), ignoreError));",
                " \t\t}",
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/JSONArray.java b/hutool-json/src/main/java/cn/hutool/json/JSONArray.java",
                "index 03f22e009..97dabef1b 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/JSONArray.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/JSONArray.java",
                "@@ -594,3 +594,3 @@ public class JSONArray extends JSONGetter<Integer> implements JSON, List<Object>",
                " \t */",
                "-\tpublic Object[] toArray(Class<?> arrayClass, boolean ignoreError) {",
                "+\tpublic Object toArray(Class<?> arrayClass, boolean ignoreError) {",
                " \t\treturn InternalJSONUtil.toArray(this, arrayClass, ignoreError);"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/date/DateTime.java",
                "hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
                "hutool-json/src/main/java/cn/hutool/json/JSONArray.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b29eee175857dbbafd29ce0c6d7b8ed9a765bb6d",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1535455132,
            "hunks": 5,
            "message": "add enjoy support",
            "diff": [
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/EngineFactory.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/EngineFactory.java",
                "index 53788d090..7ba03cd53 100644",
                "--- a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/EngineFactory.java",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/EngineFactory.java",
                "@@ -6,2 +6,3 @@ import cn.hutool.extra.template.TemplateException;",
                " import cn.hutool.extra.template.engine.beetl.BeetlEngine;",
                "+import cn.hutool.extra.template.engine.enjoy.EnjoyEngine;",
                " import cn.hutool.extra.template.engine.freemarker.FreemarkerEngine;",
                "@@ -57,2 +58,7 @@ public class EngineFactory {",
                " \t\t}",
                "+\t\ttry {",
                "+\t\t\treturn new EnjoyEngine(config);",
                "+\t\t} catch (NoClassDefFoundError e) {",
                "+\t\t\t// ignore",
                "+\t\t}",
                " \t\tthrow new TemplateException(\"No template found ! Please add one of [Beetl,Freemarker,Velocity,Rythm] jar to your project !\");",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/EnjoyEngine.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/EnjoyEngine.java",
                "new file mode 100644",
                "index 000000000..d1d363f6a",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/EnjoyEngine.java",
                "@@ -0,0 +1,91 @@",
                "+package cn.hutool.extra.template.engine.enjoy;",
                "+",
                "+import org.beetl.core.GroupTemplate;",
                "+",
                "+import com.jfinal.template.source.FileSourceFactory;",
                "+",
                "+import cn.hutool.core.lang.Assert;",
                "+import cn.hutool.core.util.ObjectUtil;",
                "+import cn.hutool.extra.template.Engine;",
                "+import cn.hutool.extra.template.Template;",
                "+import cn.hutool.extra.template.TemplateConfig;",
                "+import cn.hutool.extra.template.TemplateConfig.ResourceMode;",
                "+",
                "+/**",
                "+ * Enjoy\u00e5\u00ba\u0093\u00e7\u009a\u0084\u00e5\u00bc\u0095\u00e6\u0093\u008e\u00e5\u008c\u0085\u00e8\u00a3\u0085",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.10",
                "+ */",
                "+public class EnjoyEngine implements Engine {",
                "+",
                "+\tprivate com.jfinal.template.Engine engine;",
                "+\tprivate ResourceMode resourceMode;",
                "+",
                "+\t// --------------------------------------------------------------------------------- Constructor start",
                "+\t/**",
                "+\t * \u00e9\u00bb\u0098\u00e8\u00ae\u00a4\u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t */",
                "+\tpublic EnjoyEngine() {",
                "+\t\tthis(new TemplateConfig());",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param config \u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e9\u0085\u008d\u00e7\u00bd\u00ae",
                "+\t */",
                "+\tpublic EnjoyEngine(TemplateConfig config) {",
                "+\t\tthis(createEngine(config));",
                "+\t\tthis.resourceMode = config.getResourceMode();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param engine {@link com.jfinal.template.Engine}",
                "+\t */",
                "+\tpublic EnjoyEngine(com.jfinal.template.Engine engine) {",
                "+\t\tthis.engine = engine;",
                "+\t}",
                "+\t// --------------------------------------------------------------------------------- Constructor end",
                "+",
                "+\t@Override",
                "+\tpublic String getName() {",
                "+\t\treturn \"Enjoy\";",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Template getTemplate(String resource) {",
                "+\t\tif(ObjectUtil.equal(ResourceMode.STRING, this.resourceMode)) {",
                "+\t\t\treturn EnjoyTemplate.wrap(this.engine.getTemplateByString(resource));",
                "+\t\t}",
                "+\t\treturn EnjoyTemplate.wrap(this.engine.getTemplate(resource));",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e5\u00bc\u0095\u00e6\u0093\u008e",
                "+\t * ",
                "+\t * @param config \u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e9\u0085\u008d\u00e7\u00bd\u00ae",
                "+\t * @return {@link GroupTemplate}",
                "+\t */",
                "+\tprivate static com.jfinal.template.Engine createEngine(TemplateConfig config) {",
                "+\t\tAssert.notNull(config, \"Template config is null !\");",
                "+\t\tfinal com.jfinal.template.Engine engine = com.jfinal.template.Engine.create(\"Hutool-Enjoy-Engine\");",
                "+\t\tengine.setEncoding(config.getCharset().toString());",
                "+",
                "+\t\tswitch (config.getResourceMode()) {",
                "+\t\tcase CLASSPATH:",
                "+\t\t\tengine.setToClassPathSourceFactory();",
                "+\t\t\tengine.setBaseTemplatePath(null);",
                "+\t\t\tbreak;",
                "+\t\tcase FILE:",
                "+\t\t\tengine.setSourceFactory(new FileSourceFactory());",
                "+\t\t\tbreak;",
                "+\t\tdefault:",
                "+\t\t\tbreak;",
                "+\t\t}",
                "+",
                "+\t\treturn engine;",
                "+\t}",
                "+}",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/EnjoyTemplate.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/EnjoyTemplate.java",
                "new file mode 100644",
                "index 000000000..55074b11f",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/EnjoyTemplate.java",
                "@@ -0,0 +1,50 @@",
                "+package cn.hutool.extra.template.engine.enjoy;",
                "+",
                "+import java.io.OutputStream;",
                "+import java.io.Serializable;",
                "+import java.io.Writer;",
                "+import java.util.Map;",
                "+",
                "+import cn.hutool.extra.template.AbstractTemplate;",
                "+",
                "+/**",
                "+ * Engoy\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.9",
                "+ */",
                "+public class EnjoyTemplate extends AbstractTemplate implements Serializable{",
                "+\tprivate static final long serialVersionUID = -8157926902932567280L;",
                "+",
                "+\tcom.jfinal.template.Template rawTemplate;",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u008c\u0085\u00e8\u00a3\u0085Enjoy\u00e6\u00a8\u00a1\u00e6\u009d\u00bf",
                "+\t * ",
                "+\t * @param EnjoyTemplate Enjoy\u00e7\u009a\u0084\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00af\u00b9\u00e8\u00b1\u00a1 {@link com.jfinal.template.Template}",
                "+\t * @return {@link EnjoyTemplate}",
                "+\t */",
                "+\tpublic static EnjoyTemplate wrap(com.jfinal.template.Template EnjoyTemplate) {",
                "+\t\treturn (null == EnjoyTemplate) ? null : new EnjoyTemplate(EnjoyTemplate);",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e9\u0080\u00a0",
                "+\t * ",
                "+\t * @param EnjoyTemplate Enjoy\u00e7\u009a\u0084\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00af\u00b9\u00e8\u00b1\u00a1 {@link com.jfinal.template.Template}",
                "+\t */",
                "+\tpublic EnjoyTemplate(com.jfinal.template.Template EnjoyTemplate) {",
                "+\t\tthis.rawTemplate = EnjoyTemplate;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic void render(Map<String, Object> bindingMap, Writer writer) {",
                "+\t\trawTemplate.render(bindingMap, writer);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic void render(Map<String, Object> bindingMap, OutputStream out) {",
                "+\t\trawTemplate.render(bindingMap, out);",
                "+\t}",
                "+",
                "+}",
                "diff --git a/hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/package-info.java b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/package-info.java",
                "new file mode 100644",
                "index 000000000..b8b477068",
                "--- /dev/null",
                "+++ b/hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/package-info.java",
                "@@ -0,0 +1,7 @@",
                "+/**",
                "+ * Jfinal\u00e5\u00ae\u00b6\u00e7\u009a\u0084Enjoy\u00e6\u00a8\u00a1\u00e6\u009d\u00bf\u00e5\u00bc\u0095\u00e6\u0093\u008e\u00e5\u00ae\u009e\u00e7\u008e\u00b0",
                "+ * ",
                "+ * @author looly",
                "+ *",
                "+ */",
                "+package cn.hutool.extra.template.engine.enjoy;",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/EngineFactory.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/EnjoyEngine.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/EnjoyTemplate.java",
                "hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/package-info.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "79a6bb23727462df631f251d9b57bb5307060f4e",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1533457785,
            "hunks": 5,
            "message": "fix JSONObject bug",
            "diff": [
                "diff --git a/hutool-json/src/main/java/cn/hutool/json/JSONObject.java b/hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "index f3ef7f42d..d25952869 100644",
                "--- a/hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "+++ b/hutool-json/src/main/java/cn/hutool/json/JSONObject.java",
                "@@ -24,2 +24,3 @@ import cn.hutool.core.map.CaseInsensitiveLinkedMap;",
                " import cn.hutool.core.map.CaseInsensitiveMap;",
                "+import cn.hutool.core.util.ArrayUtil;",
                " import cn.hutool.core.util.ReflectUtil;",
                "@@ -96,6 +97,6 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \t * \u00e4\u00bd\u00bf\u00e7\u0094\u00a8\u00e5\u0085\u00b6\u00e4\u00bb\u0096<code>JSONObject</code>\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e6\u0096\u00b0\u00e7\u009a\u0084<code>JSONObject</code>\u00ef\u00bc\u008c\u00e5\u00b9\u00b6\u00e5\u008f\u00aa\u00e5\u008a\u00a0\u00e5\u0085\u00a5\u00e6\u008c\u0087\u00e5\u00ae\u009aname\u00e5\u00af\u00b9\u00e5\u00ba\u0094\u00e7\u009a\u0084\u00e9\u0094\u00ae\u00e5\u0080\u00bc\u00e5\u00af\u00b9\u00e3\u0080\u0082<br>",
                "-\t * \u00e6\u00ad\u00a4\u00e6\u009e\u0084\u00e9\u0080\u00a0\u00e6\u0096\u00b9\u00e6\u00b3\u0095\u00e5\u00b9\u00b6\u00e4\u00b8\u008d\u00e5\u00bf\u00bd\u00e7\u0095\u00a5\u00e7\u00a9\u00ba\u00e5\u0080\u00bc",
                "+\t * \u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00bc\u00a0\u00e5\u0085\u00a5\u00e7\u009a\u0084name\u00e5\u0088\u0097\u00e8\u00a1\u00a8\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba\u00e5\u0088\u0099\u00e5\u008a\u00a0\u00e5\u0085\u00a5\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e9\u0094\u00ae\u00e5\u0080\u00bc\u00e5\u00af\u00b9",
                " \t *",
                " \t * @param jsonObject A JSONObject.",
                "-\t * @param names \u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e7\u009a\u0084name\u00e5\u0088\u0097\u00e8\u00a1\u00a8",
                "+\t * @param names \u00e9\u009c\u0080\u00e8\u00a6\u0081\u00e7\u009a\u0084name\u00e5\u0088\u0097\u00e8\u00a1\u00a8\u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba\u00e5\u008a\u00a0\u00e5\u0085\u00a5\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e9\u0094\u00ae\u00e5\u0080\u00bc\u00e5\u00af\u00b9",
                " \t */",
                "@@ -103,7 +104,11 @@ public class JSONObject extends JSONGetter<String> implements JSON, Map<String,",
                " \t\tthis();",
                "-\t\tfor (String name : names) {",
                "-\t\t\ttry {",
                "-\t\t\t\tthis.putOnce(name, jsonObject.getObj(name));",
                "-\t\t\t} catch (Exception ignore) {",
                "+\t\tif(ArrayUtil.isNotEmpty(names)) {",
                "+\t\t\tfor (String name : names) {",
                "+\t\t\t\ttry {",
                "+\t\t\t\t\tthis.putOnce(name, jsonObject.getObj(name));",
                "+\t\t\t\t} catch (Exception ignore) {",
                "+\t\t\t\t}",
                " \t\t\t}",
                "+\t\t} else {",
                "+\t\t\tthis.putAll(jsonObject);",
                " \t\t}"
            ],
            "changed_files": [
                "hutool-json/src/main/java/cn/hutool/json/JSONObject.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "34ebe3a6afe4b6f55e15459abe61424a5119c6f8",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1535643771,
            "hunks": 3,
            "message": "fix comment and add method",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java b/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "index 3fcbe7df1..919f80fd3 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "@@ -620,2 +620,41 @@ public class BeanUtil {",
                "+\t/**",
                "+\t * \u00e5\u0088\u00a4\u00e6\u0096\u00adBean\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00ef\u00bc\u008c\u00e7\u00a9\u00ba\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e8\u00a1\u00a8\u00e7\u00a4\u00ba\u00e6\u009c\u00ac\u00e8\u00ba\u00ab\u00e4\u00b8\u00ba<code>null</code>\u00e6\u0088\u0096\u00e8\u0080\u0085\u00e6\u0089\u0080\u00e6\u009c\u0089\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00e9\u0083\u00bd\u00e4\u00b8\u00ba<code>null</code>",
                "+\t *",
                "+\t * @param bean Bean\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param clazz \u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u00ba\u00e7\u00a9\u00ba\u00ef\u00bc\u008c<code>true</code> - \u00e7\u00a9\u00ba / <code>false</code> - \u00e9\u009d\u009e\u00e7\u00a9\u00ba",
                "+\t * @since 4.1.10",
                "+\t */",
                "+\tpublic static boolean isEmpty(Object bean) {",
                "+\t\tif (null != bean) {",
                "+\t\t\tfor (Field field : ReflectUtil.getFields(bean.getClass())) {",
                "+\t\t\t\tif (null != ReflectUtil.getFieldValue(bean, field)) {",
                "+\t\t\t\t\treturn false;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn true;",
                "+\t}",
                "+\t",
                "+\t/**",
                "+\t * \u00e5\u0088\u00a4\u00e6\u0096\u00adBean\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e5\u0080\u00bc\u00e4\u00b8\u00ba<code>null</code>\u00e7\u009a\u0084\u00e5\u00b1\u009e\u00e6\u0080\u00a7<br>",
                "+\t * \u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u009c\u00ac\u00e8\u00ba\u00ab\u00e4\u00b8\u00ba<code>null</code>\u00e4\u00b9\u009f\u00e8\u00bf\u0094\u00e5\u009b\u009etrue",
                "+\t *",
                "+\t * @param bean Bean\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t * @param clazz \u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+\t * @return \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u008c\u0085\u00e5\u0090\u00ab\u00e5\u0080\u00bc\u00e4\u00b8\u00ba<code>null</code>\u00e7\u009a\u0084\u00e5\u00b1\u009e\u00e6\u0080\u00a7\u00ef\u00bc\u008c<code>true</code> - \u00e5\u008c\u0085\u00e5\u0090\u00ab / <code>false</code> - \u00e4\u00b8\u008d\u00e5\u008c\u0085\u00e5\u0090\u00ab",
                "+\t * @since 4.1.10",
                "+\t */",
                "+\tpublic static boolean hasNullField(Object bean) {",
                "+\t\tif (null == bean) {",
                "+\t\t\treturn true;",
                "+\t\t}",
                "+\t\tfor (Field field : ReflectUtil.getFields(bean.getClass())) {",
                "+\t\t\tif (null == ReflectUtil.getFieldValue(bean, field)) {",
                "+\t\t\t\treturn true;",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn false;",
                "+\t}",
                " }",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/Assert.java b/hutool-core/src/main/java/cn/hutool/core/lang/Assert.java",
                "index 7a19490e8..8f9d975ab 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/lang/Assert.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/Assert.java",
                "@@ -116,3 +116,3 @@ public class Assert {",
                " \t/**",
                "-\t * \u00e6\u0096\u00ad\u00e8\u00a8\u0080\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u008d\u00e4\u00b8\u00ba{@code null} \u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u00ba{@code null} \u00e6\u008a\u009b\u00e5\u0087\u00ba{@link IllegalArgumentException} \u00e5\u00bc\u0082\u00e5\u00b8\u00b8 Assert that an object is not {@code null} .",
                "+\t * \u00e6\u0096\u00ad\u00e8\u00a8\u0080\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u008d\u00e4\u00b8\u00ba{@code null} \u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u00ba{@code null} \u00e6\u008a\u009b\u00e5\u0087\u00ba{@link NullPointerException} \u00e5\u00bc\u0082\u00e5\u00b8\u00b8 Assert that an object is not {@code null} .",
                " \t * ",
                "@@ -137,3 +137,3 @@ public class Assert {",
                " \t/**",
                "-\t * \u00e6\u0096\u00ad\u00e8\u00a8\u0080\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u008d\u00e4\u00b8\u00ba{@code null} \u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u00ba{@code null} \u00e6\u008a\u009b\u00e5\u0087\u00ba{@link IllegalArgumentException} \u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "+\t * \u00e6\u0096\u00ad\u00e8\u00a8\u0080\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e4\u00b8\u008d\u00e4\u00b8\u00ba{@code null} \u00ef\u00bc\u008c\u00e5\u00a6\u0082\u00e6\u009e\u009c\u00e4\u00b8\u00ba{@code null} \u00e6\u008a\u009b\u00e5\u0087\u00ba{@link NullPointerException} \u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                " \t * "
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/lang/Assert.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d691921360e3cac27312f173f32b6277997c77f0",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1534853514,
            "hunks": 10,
            "message": "add ThreadFactoryBuilder and ExecutorBuilder",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/lang/Builder.java b/hutool-core/src/main/java/cn/hutool/core/lang/Builder.java",
                "new file mode 100644",
                "index 000000000..6bfe341a9",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/lang/Builder.java",
                "@@ -0,0 +1,17 @@",
                "+package cn.hutool.core.lang;",
                "+",
                "+/**",
                "+ * \u00e5\u00bb\u00ba\u00e9\u0080\u00a0\u00e8\u0080\u0085\u00e6\u00a8\u00a1\u00e5\u00bc\u008f\u00e6\u008e\u00a5\u00e5\u008f\u00a3\u00e5\u00ae\u009a\u00e4\u00b9\u0089",
                "+ * ",
                "+ * @param <T> \u00e5\u00bb\u00ba\u00e9\u0080\u00a0\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\u00e7\u00b1\u00bb\u00e5\u009e\u008b",
                "+ * @author Looly",
                "+ * @since 4.1.9",
                "+ */",
                "+public interface Builder<T> {",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e5\u00bb\u00ba",
                "+\t * ",
                "+\t * @return \u00e8\u00a2\u00ab\u00e6\u009e\u0084\u00e5\u00bb\u00ba\u00e7\u009a\u0084\u00e5\u00af\u00b9\u00e8\u00b1\u00a1",
                "+\t */",
                "+\tT build();",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java b/hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java",
                "new file mode 100644",
                "index 000000000..4b4483177",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java",
                "@@ -0,0 +1,143 @@",
                "+package cn.hutool.core.thread;",
                "+",
                "+import java.util.concurrent.BlockingQueue;",
                "+import java.util.concurrent.Executors;",
                "+import java.util.concurrent.LinkedBlockingQueue;",
                "+import java.util.concurrent.RejectedExecutionHandler;",
                "+import java.util.concurrent.ThreadFactory;",
                "+import java.util.concurrent.ThreadPoolExecutor;",
                "+import java.util.concurrent.TimeUnit;",
                "+",
                "+import cn.hutool.core.lang.Builder;",
                "+",
                "+/**",
                "+ * {@link ThreadPoolExecutor} \u00e5\u00bb\u00ba\u00e9\u0080\u00a0\u00e8\u0080\u0085",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.9",
                "+ */",
                "+public class ExecutorBuilder implements Builder<ThreadPoolExecutor> {",
                "+",
                "+\tprivate int corePoolSize;",
                "+\tprivate int maxPoolSize = Integer.MAX_VALUE;",
                "+\tprivate long keepAliveTime = TimeUnit.SECONDS.toNanos(60);",
                "+\tprivate BlockingQueue<Runnable> workQueue;",
                "+\tprivate ThreadFactory threadFactory;",
                "+\tprivate RejectedExecutionHandler handler;",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e6\u00b1\u00a0\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a40",
                "+\t * ",
                "+\t * @param corePoolSize \u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e6\u00b1\u00a0\u00e5\u00a4\u00a7\u00e5\u00b0\u008f",
                "+\t * @return this",
                "+\t */",
                "+\tpublic ExecutorBuilder setCorePoolSize(int corePoolSize) {",
                "+\t\tthis.corePoolSize = corePoolSize;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e6\u009c\u0080\u00e5\u00a4\u00a7\u00e6\u00b1\u00a0\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00ef\u00bc\u0088\u00e5\u0085\u0081\u00e8\u00ae\u00b8\u00e5\u0090\u008c\u00e6\u0097\u00b6\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e7\u009a\u0084\u00e6\u009c\u0080\u00e5\u00a4\u00a7\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e6\u0095\u00b0\u00ef\u00bc\u0089",
                "+\t * ",
                "+\t * @param maxPoolSize \u00e6\u009c\u0080\u00e5\u00a4\u00a7\u00e6\u00b1\u00a0\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00ef\u00bc\u0088\u00e5\u0085\u0081\u00e8\u00ae\u00b8\u00e5\u0090\u008c\u00e6\u0097\u00b6\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e7\u009a\u0084\u00e6\u009c\u0080\u00e5\u00a4\u00a7\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e6\u0095\u00b0\u00ef\u00bc\u0089",
                "+\t * @return this",
                "+\t */",
                "+\tpublic ExecutorBuilder setMaxPoolSize(int maxPoolSize) {",
                "+\t\tthis.maxPoolSize = maxPoolSize;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00ad\u0098\u00e6\u00b4\u00bb\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e5\u00bd\u0093\u00e6\u00b1\u00a0\u00e4\u00b8\u00ad\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00a4\u009a\u00e4\u00ba\u008e\u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e5\u00a4\u009a\u00e5\u0087\u00ba\u00e7\u009a\u0084\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e4\u00bf\u009d\u00e7\u0095\u0099\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0095\u00bf",
                "+\t * ",
                "+\t * @param keepAliveTime \u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00ad\u0098\u00e6\u00b4\u00bb\u00e6\u0097\u00b6\u00e9\u0097\u00b4",
                "+\t * @param unit \u00e5\u008d\u0095\u00e4\u00bd\u008d",
                "+\t * @return this",
                "+\t */",
                "+\tpublic ExecutorBuilder setKeepAliveTime(long keepAliveTime, TimeUnit unit) {",
                "+\t\treturn setKeepAliveTime(unit.toNanos(keepAliveTime));",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00ad\u0098\u00e6\u00b4\u00bb\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u008c\u00e6\u0097\u00a2\u00e5\u00bd\u0093\u00e6\u00b1\u00a0\u00e4\u00b8\u00ad\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00a4\u009a\u00e4\u00ba\u008e\u00e5\u0088\u009d\u00e5\u00a7\u008b\u00e5\u00a4\u00a7\u00e5\u00b0\u008f\u00e6\u0097\u00b6\u00ef\u00bc\u008c\u00e5\u00a4\u009a\u00e5\u0087\u00ba\u00e7\u009a\u0084\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e4\u00bf\u009d\u00e7\u0095\u0099\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0095\u00bf\u00ef\u00bc\u008c\u00e5\u008d\u0095\u00e4\u00bd\u008d\u00e7\u00ba\u00b3\u00e7\u00a7\u0092",
                "+\t * ",
                "+\t * @param keepAliveTime \u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00ad\u0098\u00e6\u00b4\u00bb\u00e6\u0097\u00b6\u00e9\u0097\u00b4\u00ef\u00bc\u008c\u00e5\u008d\u0095\u00e4\u00bd\u008d\u00e7\u00ba\u00b3\u00e7\u00a7\u0092",
                "+\t * @return this",
                "+\t */",
                "+\tpublic ExecutorBuilder setKeepAliveTime(long keepAliveTime) {",
                "+\t\tthis.keepAliveTime = keepAliveTime;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e9\u0098\u009f\u00e5\u0088\u0097\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u00ad\u0098\u00e5\u009c\u00a8\u00e6\u009c\u00aa\u00e6\u0089\u00a7\u00e8\u00a1\u008c\u00e7\u009a\u0084\u00e7\u00ba\u00bf\u00e7\u00a8\u008b",
                "+\t * ",
                "+\t * @param workQueue \u00e9\u0098\u009f\u00e5\u0088\u0097",
                "+\t * @return this",
                "+\t */",
                "+\tpublic ExecutorBuilder setWorkQueue(BlockingQueue<Runnable> workQueue) {",
                "+\t\tthis.workQueue = workQueue;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00b7\u00a5\u00e5\u008e\u0082\u00ef\u00bc\u008c\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e8\u0087\u00aa\u00e5\u00ae\u009a\u00e4\u00b9\u0089\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u0088\u009b\u00e5\u00bb\u00ba",
                "+\t * ",
                "+\t * @param threadFactory \u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00b7\u00a5\u00e5\u008e\u0082",
                "+\t * @return this",
                "+\t * @see ThreadFactoryBuilder",
                "+\t */",
                "+\tpublic ExecutorBuilder setThreadFactory(ThreadFactory threadFactory) {",
                "+\t\tthis.threadFactory = threadFactory;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e5\u00bd\u0093\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e9\u0098\u00bb\u00e5\u00a1\u009e\u00ef\u00bc\u0088block\u00ef\u00bc\u0089\u00e6\u0097\u00b6\u00e7\u009a\u0084\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e5\u0099\u00a8",
                "+\t * ",
                "+\t * @param handler {@link RejectedExecutionHandler}",
                "+\t * @return this",
                "+\t */",
                "+\tpublic ExecutorBuilder setHandler(RejectedExecutionHandler handler) {",
                "+\t\tthis.handler = handler;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00baExecutorBuilder\u00ef\u00bc\u008c\u00e5\u00bc\u0080\u00e5\u00a7\u008b\u00e6\u009e\u0084\u00e5\u00bb\u00ba",
                "+\t * ",
                "+\t * @return {@link ExecutorBuilder}",
                "+\t */",
                "+\tpublic static ExecutorBuilder create() {",
                "+\t\treturn new ExecutorBuilder();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e5\u00bb\u00baThreadPoolExecutor",
                "+\t */",
                "+\t@Override",
                "+\tpublic ThreadPoolExecutor build() {",
                "+\t\treturn build(this);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e5\u00bb\u00baThreadPoolExecutor",
                "+\t * ",
                "+\t * @param builder {@link ExecutorBuilder}",
                "+\t * @return {@link ThreadPoolExecutor}",
                "+\t */",
                "+\tprivate static ThreadPoolExecutor build(ExecutorBuilder builder) {",
                "+\t\tfinal int corePoolSize = builder.corePoolSize;",
                "+\t\tfinal int maxPoolSize = builder.maxPoolSize;",
                "+\t\tfinal long keepAliveTime = builder.keepAliveTime;",
                "+\t\tfinal BlockingQueue<Runnable> workQueue = (null != builder.workQueue) ? builder.workQueue : new LinkedBlockingQueue<Runnable>();",
                "+\t\tfinal ThreadFactory threadFactory = (null != builder.threadFactory) ? builder.threadFactory : Executors.defaultThreadFactory();",
                "+\t\tfinal RejectedExecutionHandler handler = builder.handler;",
                "+",
                "+\t\tif (null == handler) {",
                "+\t\t\treturn new ThreadPoolExecutor(corePoolSize, maxPoolSize, keepAliveTime, TimeUnit.NANOSECONDS, workQueue, threadFactory);",
                "+\t\t} else {",
                "+\t\t\treturn new ThreadPoolExecutor(corePoolSize, maxPoolSize, keepAliveTime, TimeUnit.NANOSECONDS, workQueue, threadFactory, handler);",
                "+\t\t}",
                "+\t}",
                "+}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/thread/GlobalThreadPool.java b/hutool-core/src/main/java/cn/hutool/core/thread/GlobalThreadPool.java",
                "index a3efdabab..972869081 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/thread/GlobalThreadPool.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/thread/GlobalThreadPool.java",
                "@@ -6,4 +6,2 @@ import java.util.concurrent.Future;",
                " import java.util.concurrent.SynchronousQueue;",
                "-import java.util.concurrent.ThreadPoolExecutor;",
                "-import java.util.concurrent.TimeUnit;",
                "@@ -34,4 +32,3 @@ public class GlobalThreadPool {",
                " \t\t}",
                "-\t\texecutor = new ThreadPoolExecutor(0, Integer.MAX_VALUE, 60L, TimeUnit.SECONDS,",
                "-\t\t\t\tnew SynchronousQueue<Runnable>());",
                "+\t\texecutor = ExecutorBuilder.create().setWorkQueue(new SynchronousQueue<Runnable>()).build();",
                " \t}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/thread/ThreadFactoryBuilder.java b/hutool-core/src/main/java/cn/hutool/core/thread/ThreadFactoryBuilder.java",
                "new file mode 100644",
                "index 000000000..c2e2f2b3e",
                "--- /dev/null",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/thread/ThreadFactoryBuilder.java",
                "@@ -0,0 +1,147 @@",
                "+package cn.hutool.core.thread;",
                "+",
                "+import java.lang.Thread.UncaughtExceptionHandler;",
                "+import java.util.concurrent.Executors;",
                "+import java.util.concurrent.ThreadFactory;",
                "+import java.util.concurrent.atomic.AtomicLong;",
                "+",
                "+import cn.hutool.core.lang.Builder;",
                "+import cn.hutool.core.util.StrUtil;",
                "+",
                "+/**",
                "+ * ThreadFactory\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e5\u0099\u00a8<br>",
                "+ * \u00e5\u008f\u0082\u00e8\u0080\u0083\u00ef\u00bc\u009aGuava\u00e7\u009a\u0084ThreadFactoryBuilder",
                "+ * ",
                "+ * @author looly",
                "+ * @since 4.1.9",
                "+ */",
                "+public class ThreadFactoryBuilder implements Builder<ThreadFactory>{",
                "+",
                "+\t/** \u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e7\u009a\u0084\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00b7\u00a5\u00e5\u008e\u0082\u00e7\u00b1\u00bb */",
                "+\tprivate ThreadFactory backingThreadFactory;",
                "+\t/** \u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u0090\u008d\u00e7\u009a\u0084\u00e5\u0089\u008d\u00e7\u00bc\u0080 */",
                "+\tprivate String namePrefix;",
                "+\t/** \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00ae\u0088\u00e6\u008a\u00a4\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00ef\u00bc\u008c\u00e9\u00bb\u0098\u00e8\u00ae\u00a4false */",
                "+\tprivate Boolean daemon;",
                "+\t/** \u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e4\u00bc\u0098\u00e5\u0085\u0088\u00e7\u00ba\u00a7 */",
                "+\tprivate Integer priority;",
                "+\t/** \u00e6\u009c\u00aa\u00e6\u008d\u0095\u00e8\u008e\u00b7\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e5\u0099\u00a8 */",
                "+\tprivate UncaughtExceptionHandler uncaughtExceptionHandler;",
                "+",
                "+\t/**",
                "+\t * \u00e5\u0088\u009b\u00e5\u00bb\u00ba{@link ThreadFactoryBuilder}",
                "+\t * ",
                "+\t * @return {@link ThreadFactoryBuilder}",
                "+\t */",
                "+\tpublic static ThreadFactoryBuilder create() {",
                "+\t\treturn new ThreadFactoryBuilder();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e5\u009f\u00ba\u00e7\u00a1\u0080\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e7\u009a\u0084\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00b7\u00a5\u00e5\u008e\u0082",
                "+\t *",
                "+\t * @param backingThreadFactory \u00e7\u0094\u00a8\u00e4\u00ba\u008e\u00e5\u0088\u009b\u00e5\u00bb\u00ba\u00e5\u009f\u00ba\u00e7\u00a1\u0080\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e7\u009a\u0084\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u00b7\u00a5\u00e5\u008e\u0082",
                "+\t * @return this",
                "+\t */",
                "+\tpublic ThreadFactoryBuilder setThreadFactory(ThreadFactory backingThreadFactory) {",
                "+\t\tthis.backingThreadFactory = backingThreadFactory;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u0090\u008d\u00e5\u0089\u008d\u00e7\u00bc\u0080\u00ef\u00bc\u008c\u00e4\u00be\u008b\u00e5\u00a6\u0082\u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e5\u0089\u008d\u00e7\u00bc\u0080\u00e4\u00b8\u00bahutool-thread-\u00ef\u00bc\u008c\u00e5\u0088\u0099\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u0090\u008d\u00e4\u00b8\u00bahutool-thread-1\u00e4\u00b9\u008b\u00e7\u00b1\u00bb\u00e3\u0080\u0082",
                "+\t * ",
                "+\t * @param namePrefix \u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e5\u0090\u008d\u00e5\u0089\u008d\u00e7\u00bc\u0080",
                "+\t * @return this",
                "+\t */",
                "+\tpublic ThreadFactoryBuilder setNamePrefix(String namePrefix) {",
                "+\t\tthis.namePrefix = namePrefix;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00ae\u0088\u00e6\u008a\u00a4\u00e7\u00ba\u00bf\u00e7\u00a8\u008b",
                "+\t * ",
                "+\t * @param daemon \u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e5\u00ae\u0088\u00e6\u008a\u00a4\u00e7\u00ba\u00bf\u00e7\u00a8\u008b",
                "+\t * @return this",
                "+\t */",
                "+\tpublic ThreadFactoryBuilder setDaemon(boolean daemon) {",
                "+\t\tthis.daemon = daemon;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e7\u00ba\u00bf\u00e7\u00a8\u008b\u00e4\u00bc\u0098\u00e5\u0085\u0088\u00e7\u00ba\u00a7",
                "+\t * ",
                "+\t * @param priority \u00e4\u00bc\u0098\u00e5\u0085\u0088\u00e7\u00ba\u00a7",
                "+\t * @return this",
                "+\t * @see Thread#MIN_PRIORITY",
                "+\t * @see Thread#NORM_PRIORITY",
                "+\t * @see Thread#MAX_PRIORITY",
                "+\t */",
                "+\tpublic ThreadFactoryBuilder setPriority(int priority) {",
                "+\t\tif (priority < Thread.MIN_PRIORITY) {",
                "+\t\t\tthrow new IllegalArgumentException(StrUtil.format(\"Thread priority ({}) must be >= {}\", priority, Thread.MIN_PRIORITY));",
                "+\t\t}",
                "+\t\tif (priority > Thread.MAX_PRIORITY) {",
                "+\t\t\tthrow new IllegalArgumentException(StrUtil.format(\"Thread priority ({}) must be <= {}\", priority, Thread.MAX_PRIORITY));",
                "+\t\t}",
                "+\t\tthis.priority = priority;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e8\u00ae\u00be\u00e7\u00bd\u00ae\u00e6\u009c\u00aa\u00e6\u008d\u0095\u00e8\u008e\u00b7\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e7\u009a\u0084\u00e5\u00a4\u0084\u00e7\u0090\u0086\u00e6\u0096\u00b9\u00e5\u00bc\u008f",
                "+\t * ",
                "+\t * @param uncaughtExceptionHandler {@link UncaughtExceptionHandler}",
                "+\t */",
                "+\tpublic void setUncaughtExceptionHandler(UncaughtExceptionHandler uncaughtExceptionHandler) {",
                "+\t\tthis.uncaughtExceptionHandler = uncaughtExceptionHandler;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e5\u00bb\u00ba{@link ThreadFactory}",
                "+\t * ",
                "+\t * @return {@link ThreadFactory}",
                "+\t */",
                "+\t@Override",
                "+\tpublic ThreadFactory build() {",
                "+\t\treturn build(this);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * \u00e6\u009e\u0084\u00e5\u00bb\u00ba",
                "+\t * ",
                "+\t * @param builder {@link ThreadFactoryBuilder}",
                "+\t * @return {@link ThreadFactory}",
                "+\t */",
                "+\tprivate static ThreadFactory build(ThreadFactoryBuilder builder) {",
                "+\t\tfinal ThreadFactory backingThreadFactory = (null != builder.backingThreadFactory)//",
                "+\t\t\t\t? builder.backingThreadFactory //",
                "+\t\t\t\t: Executors.defaultThreadFactory();",
                "+\t\tfinal String namePrefix = builder.namePrefix;",
                "+\t\tfinal Boolean daemon = builder.daemon;",
                "+\t\tfinal Integer priority = builder.priority;",
                "+\t\tfinal UncaughtExceptionHandler handler = builder.uncaughtExceptionHandler;",
                "+\t\tfinal AtomicLong count = (null == namePrefix) ? null : new AtomicLong();",
                "+\t\treturn new ThreadFactory() {",
                "+\t\t\t@Override",
                "+\t\t\tpublic Thread newThread(Runnable r) {",
                "+\t\t\t\tfinal Thread thread = backingThreadFactory.newThread(r);",
                "+\t\t\t\tif (null != namePrefix) {",
                "+\t\t\t\t\tthread.setName(namePrefix + count.getAndIncrement());",
                "+\t\t\t\t}",
                "+\t\t\t\tif (null != daemon) {",
                "+\t\t\t\t\tthread.setDaemon(daemon);",
                "+\t\t\t\t}",
                "+\t\t\t\tif (null != priority) {",
                "+\t\t\t\t\tthread.setPriority(priority);",
                "+\t\t\t\t}",
                "+\t\t\t\tif (null != handler) {",
                "+\t\t\t\t\tthread.setUncaughtExceptionHandler(handler);",
                "+\t\t\t\t}",
                "+\t\t\t\treturn thread;",
                "+\t\t\t}",
                "+\t\t};",
                "+\t}",
                "+}",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/thread/ThreadUtil.java b/hutool-core/src/main/java/cn/hutool/core/thread/ThreadUtil.java",
                "index 74c8aa1d7..1efac1e86 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/thread/ThreadUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/thread/ThreadUtil.java",
                "@@ -10,3 +10,2 @@ import java.util.concurrent.Executors;",
                " import java.util.concurrent.Future;",
                "-import java.util.concurrent.LinkedBlockingQueue;",
                " import java.util.concurrent.SynchronousQueue;",
                "@@ -30,4 +29,3 @@ public class ThreadUtil {",
                " \tpublic static ExecutorService newExecutor(int threadSize) {",
                "-\t\treturn new ThreadPoolExecutor(threadSize, threadSize, 0L, TimeUnit.MILLISECONDS,",
                "-\t\t\t\tnew LinkedBlockingQueue<Runnable>());",
                "+\t\treturn ExecutorBuilder.create().setCorePoolSize(threadSize).build();",
                " \t}",
                "@@ -40,3 +38,3 @@ public class ThreadUtil {",
                " \tpublic static ExecutorService newExecutor() {",
                "-\t\treturn new ThreadPoolExecutor(0, Integer.MAX_VALUE, 60L, TimeUnit.SECONDS, new SynchronousQueue<Runnable>());",
                "+\t\treturn ExecutorBuilder.create().setWorkQueue(new SynchronousQueue<Runnable>()).build();",
                " \t}",
                "@@ -61,5 +59,3 @@ public class ThreadUtil {",
                " \tpublic static ThreadPoolExecutor newExecutor(int corePoolSize, int maximumPoolSize) {",
                "-\t\treturn new ThreadPoolExecutor(corePoolSize, maximumPoolSize, //",
                "-\t\t\t\t60L, TimeUnit.SECONDS, //",
                "-\t\t\t\tnew LinkedBlockingQueue<Runnable>());",
                "+\t\treturn ExecutorBuilder.create().setCorePoolSize(corePoolSize).setMaxPoolSize(maximumPoolSize).build();",
                " \t}",
                "@@ -85,6 +81,3 @@ public class ThreadUtil {",
                " \t\tint poolSize = (int) (Runtime.getRuntime().availableProcessors() / (1 - blockingCoefficient));",
                "-",
                "-\t\treturn new ThreadPoolExecutor(poolSize, poolSize, //",
                "-\t\t\t\t0L, TimeUnit.MILLISECONDS, //",
                "-\t\t\t\tnew LinkedBlockingQueue<Runnable>());",
                "+\t\treturn ExecutorBuilder.create().setCorePoolSize(poolSize).setMaxPoolSize(poolSize).setKeepAliveTime(0L).build();",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/lang/Builder.java",
                "hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java",
                "hutool-core/src/main/java/cn/hutool/core/thread/GlobalThreadPool.java",
                "hutool-core/src/main/java/cn/hutool/core/thread/ThreadFactoryBuilder.java",
                "hutool-core/src/main/java/cn/hutool/core/thread/ThreadUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "eb9888fd24455e8e0236c3f92967b9b2daf5a31e",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1532485594,
            "hunks": 1,
            "message": "fix readme",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/text/UnicodeUtil.java b/hutool-core/src/main/java/cn/hutool/core/text/UnicodeUtil.java",
                "index 163999519..893236996 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/text/UnicodeUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/text/UnicodeUtil.java",
                "@@ -2,3 +2,2 @@ package cn.hutool.core.text;",
                "-import cn.hutool.core.lang.Console;",
                " import cn.hutool.core.util.CharUtil;"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/text/UnicodeUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d19e86645156b1c628b9db0f776aac91d7e123a0",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1537099316,
            "hunks": 7,
            "message": "fix test and comment",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/exceptions/ExceptionUtil.java b/hutool-core/src/main/java/cn/hutool/core/exceptions/ExceptionUtil.java",
                "index d7b4722b2..214936345 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/exceptions/ExceptionUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/exceptions/ExceptionUtil.java",
                "@@ -19,3 +19,3 @@ import cn.hutool.core.util.StrUtil;",
                "  */",
                "-public final class ExceptionUtil {",
                "+public class ExceptionUtil {",
                "@@ -23,5 +23,2 @@ public final class ExceptionUtil {",
                "-\tprivate ExceptionUtil() {",
                "-\t};",
                "-",
                " \t/**",
                "@@ -40,6 +37,6 @@ public final class ExceptionUtil {",
                " \t/**",
                "-\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e5\u00ae\u008c\u00e6\u0095\u00b4\u00e6\u00b6\u0088\u00e6\u0081\u00af\u00ef\u00bc\u008c\u00e5\u008c\u0085\u00e6\u008b\u00ac\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e5\u0090\u008d",
                "+\t * \u00e8\u008e\u00b7\u00e5\u00be\u0097\u00e6\u00b6\u0088\u00e6\u0081\u00af\u00ef\u00bc\u008c\u00e8\u00b0\u0083\u00e7\u0094\u00a8\u00e5\u00bc\u0082\u00e5\u00b8\u00b8\u00e7\u00b1\u00bb\u00e7\u009a\u0084getMessage\u00e6\u0096\u00b9\u00e6\u00b3\u0095",
                " \t * ",
                " \t * @param e \u00e5\u00bc\u0082\u00e5\u00b8\u00b8",
                "-\t * @return \u00e5\u00ae\u008c\u00e6\u0095\u00b4\u00e6\u00b6\u0088\u00e6\u0081\u00af",
                "+\t * @return \u00e6\u00b6\u0088\u00e6\u0081\u00af",
                " \t */",
                "@@ -226,3 +223,3 @@ public final class ExceptionUtil {",
                " \t}",
                "-\t",
                "+",
                " \t/**",
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/util/IdUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/IdUtil.java",
                "index ec592e3d6..c41105771 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/util/IdUtil.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/util/IdUtil.java",
                "@@ -53,6 +53,6 @@ public class IdUtil {",
                " \t * ",
                "-\t * @return {@link ObjectId}",
                "+\t * @return ObjectId",
                " \t */",
                "-\tpublic static ObjectId createObjectId() {",
                "-\t\treturn new ObjectId();",
                "+\tpublic static String objectId() {",
                "+\t\treturn ObjectId.next();",
                " \t}"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/exceptions/ExceptionUtil.java",
                "hutool-core/src/main/java/cn/hutool/core/util/IdUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b9ade1191aa4d6567dd23d9e93a5f87004fb8525",
            "repository": "https://github.com/looly/hutool",
            "timestamp": 1534326657,
            "hunks": 4,
            "message": "fix session bug",
            "diff": [
                "diff --git a/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java b/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java",
                "index 5634af2bd..96db29efc 100644",
                "--- a/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java",
                "+++ b/hutool-core/src/main/java/cn/hutool/core/convert/Convert.java",
                "@@ -16,2 +16,3 @@ import cn.hutool.core.convert.impl.GenericEnumConverter;",
                " import cn.hutool.core.lang.Assert;",
                "+import cn.hutool.core.text.UnicodeUtil;",
                " import cn.hutool.core.util.CharsetUtil;",
                "@@ -733,13 +734,6 @@ public class Convert {",
                " \t * @return String \u00e5\u00ad\u0097\u00e7\u00ac\u00a6\u00e4\u00b8\u00b2",
                "+\t * @see UnicodeUtil#toString(String)",
                " \t */",
                " \tpublic static String unicodeToStr(String unicode) {",
                "-\t\tStringBuffer string = new StringBuffer();",
                "-\t\tString[] hex = StrUtil.split(unicode, \"\\\\u\");",
                "-\t\tfor (int i = 1; i < hex.length; i++) {",
                "-\t\t\t// \u00e8\u00bd\u00ac\u00e6\u008d\u00a2\u00e5\u0087\u00ba\u00e6\u00af\u008f\u00e4\u00b8\u0080\u00e4\u00b8\u00aa\u00e4\u00bb\u00a3\u00e7\u00a0\u0081\u00e7\u0082\u00b9",
                "-\t\t\tint data = Integer.parseInt(hex[i], 16);",
                "-\t\t\t// \u00e8\u00bf\u00bd\u00e5\u008a\u00a0\u00e6\u0088\u0090string",
                "-\t\t\tstring.append((char) data);",
                "-\t\t}",
                "-\t\treturn string.toString();",
                "+\t\treturn UnicodeUtil.toString(unicode);",
                " \t}",
                "diff --git a/hutool-db/src/main/java/cn/hutool/db/Session.java b/hutool-db/src/main/java/cn/hutool/db/Session.java",
                "index ad83de0e6..8c248ebf8 100644",
                "--- a/hutool-db/src/main/java/cn/hutool/db/Session.java",
                "+++ b/hutool-db/src/main/java/cn/hutool/db/Session.java",
                "@@ -30,4 +30,2 @@ public class Session extends AbstractDb implements Closeable {",
                "-\tprivate DataSource ds;",
                "-",
                " \t/**"
            ],
            "changed_files": [
                "hutool-core/src/main/java/cn/hutool/core/convert/Convert.java",
                "hutool-db/src/main/java/cn/hutool/db/Session.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.5.0",
                "4.5.1",
                "4.5.10",
                "4.5.11",
                "4.5.12",
                "4.5.13",
                "4.5.15",
                "4.5.16",
                "4.5.17",
                "4.5.18",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8",
                "4.5.9",
                "4.6.0",
                "4.6.1"
            ],
            "matched_rules": []
        }
    ]
}
