{
    "advisory_record": {
        "cve_id": "CVE-2018-1271",
        "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to configure Spring MVC to serve static resources (e.g. CSS, JS, images). When static resources are served from a file system on Windows (as opposed to the classpath, or the ServletContext), a malicious user can send a request using a specially crafted URL that can lead a directory traversal attack.",
        "reserved_timestamp": 1512518400,
        "published_timestamp": 1522886400,
        "updated_timestamp": 1634726283,
        "repository_url": null,
        "references": {
            "": 133,
            "https://access.redhat.com/support/": 26,
            "https://access.redhat.com/downloads/": 21,
            "https://access.redhat.com/labs/": 16,
            "https://access.redhat.com/errata/": 15,
            "https://access.redhat.com/management/": 10,
            "https://access.redhat.com/": 10,
            "https://access.redhat.com/documentation": 10,
            "https://access.redhat.com/product-life-cycles/": 10,
            "https://access.redhat.com/security": 10,
            "https://access.redhat.com/security/security-updates/#/security-advisories": 10,
            "https://access.redhat.com/security/security-updates/#/cve": 10,
            "https://access.redhat.com/support/contact/": 10,
            "https://status.redhat.com": 10,
            "https://access.redhat.com/products/red-hat-enterprise-linux/": 9,
            "https://access.redhat.com/products/red-hat-openshift-container-platform": 9,
            "https://access.redhat.com/products/red-hat-ansible-automation-platform/": 9,
            "https://access.redhat.com/products/": 9,
            "https://pivotal.io/security/cve-2018-1271": 6,
            "https://access.redhat.com/downloads/content/package-browser": 5,
            "https://catalog.redhat.com/software/containers/explore/": 5,
            "https://access.redhat.com/articles/1202803": 5,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Solution": 5,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Article": 5,
            "https://access.redhat.com/documentation/en/red_hat_enterprise_linux": 5,
            "https://access.redhat.com/documentation/en/openshift_container_platform": 5,
            "https://access.redhat.com/documentation/en/red_hat_ansible_automation_platform": 5,
            "https://access.redhat.com/documentation/": 5,
            "https://access.redhat.com/security/": 5,
            "https://access.redhat.com/security/vulnerabilities": 5,
            "https://access.redhat.com/security/data": 5,
            "https://access.redhat.com/security/security-updates/#/security-labs": 5,
            "https://access.redhat.com/security/updates/backporting/": 5,
            "https://access.redhat.com/support/cases/": 5,
            "https://access.redhat.com/support/cases/#/troubleshoot": 5,
            "https://access.redhat.com/community": 5,
            "https://access.redhat.com/community/": 5,
            "https://access.redhat.com/discussions/": 5,
            "https://access.redhat.com/announcements/": 5,
            "https://access.redhat.com/accelerators/": 5,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html": 5,
            "https://cloud.redhat.com/insights": 5,
            "https://access.redhat.com/changeLanguage?language=en": 5,
            "https://access.redhat.com/changeLanguage?language=ko": 5,
            "https://access.redhat.com/changeLanguage?language=ja": 5,
            "https://access.redhat.com/changeLanguage?language=zh_CN": 5,
            "https://redhat.com/en": 5,
            "https://twitter.com/RedHat": 5,
            "https://access.redhat.com/management": 5,
            "https://access.redhat.com/support": 5,
            "https://access.redhat.com/support/customer-service": 5,
            "https://access.redhat.com/articles/33844": 5,
            "https://access.redhat.com/help/login_assistance": 5,
            "https://www.redhat.com/en/trust": 5,
            "https://www.redhat.com/en/about/browser-support": 5,
            "https://www.redhat.com/en/about/digital-accessibility": 5,
            "https://access.redhat.com/recognition/": 5,
            "https://access.redhat.com/help/colophon/": 5,
            "https://www.redhat.com/": 5,
            "http://developers.redhat.com/": 5,
            "https://connect.redhat.com/": 5,
            "https://cloud.redhat.com/": 5,
            "https://access.redhat.com/subscription-value": 5,
            "https://www.redhat.com/about/": 5,
            "http://jobs.redhat.com": 5,
            "https://redhat.com/en/about/company": 5,
            "https://redhat.com/en/jobs": 5,
            "https://redhat.com/en/events": 5,
            "https://redhat.com/en/about/office-locations": 5,
            "https://redhat.com/en/contact": 5,
            "https://redhat.com/en/blog": 5,
            "https://redhat.com/en/about/our-culture/diversity-equity-inclusion": 5,
            "https://coolstuff.redhat.com/": 5,
            "https://www.redhat.com/en/summit": 5,
            "https://redhat.com/en/about/privacy-policy": 5,
            "https://redhat.com/en/about/terms-use": 5,
            "https://redhat.com/en/about/all-policies-guidelines": 5,
            "https://redhat.com/en/about/digital-accessibility": 5,
            "https://access.redhat.com/errata/RHSA-2018:2669": 4,
            "https://access.redhat.com/errata/RHSA-2018:2939": 4,
            "https://access.redhat.com/errata/RHSA-2018:1320": 4,
            "https://access.redhat.com/support/policy/updates/jboss_notes": 4,
            "https://access.redhat.com/changeLanguage?language=fr": 4,
            "https://access.redhat.com/products/red-hat-satellite/": 4,
            "https://access.redhat.com/products/red-hat-subscription-management/": 4,
            "https://access.redhat.com/products/red-hat-insights/": 4,
            "https://access.redhat.com/products/red-hat-openstack-platform/": 4,
            "https://access.redhat.com/products/red-hat-openshift-container-platform/": 4,
            "https://access.redhat.com/products/red-hat-openshift-ai/": 4,
            "https://access.redhat.com/products/openshift-dedicated-red-hat/": 4,
            "https://access.redhat.com/products/red-hat-advanced-cluster-security-for-kubernetes/": 4,
            "https://access.redhat.com/products/red-hat-advanced-cluster-management-for-kubernetes/": 4,
            "https://access.redhat.com/products/red-hat-quay/": 4,
            "https://access.redhat.com/products/red-hat-openshift-dev-spaces": 4,
            "https://access.redhat.com/products/red-hat-openshift-service-aws": 4,
            "https://access.redhat.com/products/red-hat-storage/": 4,
            "https://access.redhat.com/products/red-hat-hyperconverged-infrastructure/": 4,
            "https://access.redhat.com/products/red-hat-ceph-storage/": 4,
            "https://access.redhat.com/products/red-hat-openshift-data-foundation": 4,
            "https://access.redhat.com/products/red-hat-runtimes/": 4,
            "https://access.redhat.com/products/red-hat-jboss-enterprise-application-platform/": 4,
            "https://access.redhat.com/products/red-hat-data-grid/": 4,
            "https://access.redhat.com/products/red-hat-jboss-web-server/": 4,
            "https://access.redhat.com/products/red-hat-build-of-keycloak/": 4,
            "https://access.redhat.com/products/spring-boot/": 4,
            "https://access.redhat.com/products/nodejs/": 4,
            "https://access.redhat.com/products/quarkus/": 4,
            "https://access.redhat.com/products/red-hat-application-foundations/": 4,
            "https://access.redhat.com/products/red-hat-fuse/": 4,
            "https://access.redhat.com/products/red-hat-amq/": 4,
            "https://access.redhat.com/products/red-hat-3scale/": 4,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1571050": 3,
            "https://www.redhat.com/security/data/cve/CVE-2018-1271.html": 3,
            "https://access.redhat.com/security/team/contact/": 3,
            "http://www.securityfocus.com/bid/103699": 2,
            "http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html": 2,
            "http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html": 2,
            "https://www.oracle.com/security-alerts/cpujul2020.html": 2,
            "https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html": 2,
            "https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html": 2,
            "https://www.oracle.com/security-alerts/cpuoct2021.html": 2,
            "https://access.redhat.com/security/cve/CVE-2018-1199": 2,
            "commit::13356a7ee2240f740737c5c83bdccdacc30603ab": 2,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1564408": 2,
            "https://www.redhat.com/security/data/cve/CVE-2018-1272.html": 2,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1548282": 2,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1548289": 2,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1565307": 2,
            "https://www.redhat.com/security/data/cve/CVE-2018-1275.html": 2,
            "https://www.redhat.com/security/data/cve/CVE-2018-1304.html": 2,
            "https://www.redhat.com/security/data/cve/CVE-2018-1305.html": 2,
            "https://access.redhat.com/security/updates/classification/#critical": 2,
            "https://access.redhat.com/support/policy/updates/red_hat_build_of_quarkus_notes": 2,
            "https://access.redhat.com/articles/7060671": 2,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1091938": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1487563": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1544620": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1548909": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1559316": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1559317": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1572421": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1572424": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1573045": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1588306": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1588313": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1588314": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1588323": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1588327": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1588330": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1588688": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1588695": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1588708": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1588715": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1588721": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1597490": 1,
            "https://www.redhat.com/security/data/cve/CVE-2014-0114.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2016-5397.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2016-1000338.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2016-1000339.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2016-1000340.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2016-1000341.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2016-1000342.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2016-1000343.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2016-1000344.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2016-1000345.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2016-1000346.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2016-1000352.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2017-14063.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1114.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1338.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1339.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-8036.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-8088.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1000129.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1000130.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1000180.html": 1,
            "https://access.redhat.com/security/updates/classification/#important": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?product=jboss.fuse&downloadType=distributions&version=7.1.0": 1,
            "https://access.redhat.com/documentation/en-us/red_hat_fuse/7.1/": 1,
            "https://access.redhat.com/articles/2939351": 1,
            "https://access.redhat.com/articles/3060411": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1494283": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1549276": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1564405": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1584376": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1607591": 1,
            "https://www.redhat.com/security/data/cve/CVE-2017-12617.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1260.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1270.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1336.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-7489.html": 1,
            "https://access.redhat.com/articles/11258": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&product=catRhoar.spring.boot&version=1.5.12": 1,
            "https://access.redhat.com/documentation/en-us/red_hat_openshift_application_runtimes/1/html/red_hat_openshift_application_runtimes_release_notes/": 1,
            "https://access.redhat.com/product-life-cycles": 1,
            "https://access.redhat.com/articles/7019023": 1,
            "https://access.redhat.com/articles/6200982": 1,
            "https://access.redhat.com/search/#/knowledgebase": 1,
            "https://access.redhat.com/search/#/discussions": 1,
            "https://access.redhat.com/support/policy/updates/jboss_eap_xp_notes": 1,
            "https://access.redhat.com/articles/7037218": 1,
            "https://github.com/nodejs/Release": 1,
            "https://access.redhat.com/articles/4544981": 1,
            "https://access.redhat.com/support/policy/updates/jboss_notes#p_rhbocamel": 1,
            "https://access.redhat.com/solutions/6342381": 1,
            "https://access.redhat.com/solutions/5941551": 1,
            "https://access.redhat.com/support/policy/updates/service-interconnect": 1,
            "https://access.redhat.com/articles/6975608": 1,
            "https://access.redhat.com/articles/6999674": 1,
            "https://access.redhat.com/articles/6371801": 1
        },
        "affected_products": [
            "CSS",
            "Spring",
            "MVC",
            "ServletContext",
            "Framework",
            "Windows",
            "Spring Framework"
        ],
        "versions": {
            "status": "affected",
            "version": "Versions prior to 5.0.5 and 4.3.15"
        },
        "files": [
            "MVC",
            "CSS",
            "URL",
            "ServletContext"
        ],
        "keywords": [
            "spring",
            "directory",
            "attack",
            "file",
            "serve",
            "lead",
            "craft",
            "servletcontext",
            "classpath",
            "resource",
            "windows",
            "user",
            "system",
            "configure",
            "framework",
            "allow",
            "traversal",
            "application",
            "image",
            "version",
            "send",
            "request",
            "oppose"
        ],
        "files_extension": [],
        "has_fixing_commit": true
    },
    "commits": [
        {
            "commit_id": "13356a7ee2240f740737c5c83bdccdacc30603ab",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522105242,
            "hunks": 11,
            "message": "Consistent encoded path evaluation in reactive ResourceWebHandler and co Issue: SPR-16616",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "index 5fa5a20692..37bcff4b23 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,2 +19,3 @@ package org.springframework.web.reactive.resource;",
                " import java.io.IOException;",
                "+import java.io.UnsupportedEncodingException;",
                " import java.net.URLDecoder;",
                "@@ -186,17 +187,17 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\tlocationPath = (locationPath.endsWith(\"/\") || locationPath.isEmpty() ? locationPath : locationPath + \"/\");",
                "-\t\tif (!resourcePath.startsWith(locationPath)) {",
                "-\t\t\treturn false;",
                "-\t\t}",
                "+\t\treturn (resourcePath.startsWith(locationPath) && !isInvalidEncodedPath(resourcePath));",
                "+\t}",
                "+\tprivate boolean isInvalidEncodedPath(String resourcePath) {",
                " \t\tif (resourcePath.contains(\"%\")) {",
                " \t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars...",
                "-\t\t\tif (URLDecoder.decode(resourcePath, \"UTF-8\").contains(\"../\")) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Resolved resource path contains \\\"../\\\" after decoding: \" + resourcePath);",
                "-\t\t\t\t}",
                "-\t\t\t\treturn false;",
                "+\t\t\ttry {",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(resourcePath, \"UTF-8\");",
                "+\t\t\t\treturn (decodedPath.contains(\"../\") || decodedPath.contains(\"..\\\\\"));",
                "+\t\t\t}",
                "+\t\t\tcatch (UnsupportedEncodingException ex) {",
                "+\t\t\t\t// Should never happen...",
                " \t\t\t}",
                " \t\t}",
                "-",
                "-\t\treturn true;",
                "+\t\treturn false;",
                " \t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java",
                "index 215a50f6c8..1d1782a392 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java",
                "@@ -30,3 +30,2 @@ import org.apache.commons.logging.Log;",
                " import org.apache.commons.logging.LogFactory;",
                "-import reactor.core.Exceptions;",
                " import reactor.core.publisher.Mono;",
                "@@ -316,5 +315,5 @@ public class ResourceWebHandler implements WebHandler, InitializingBean {",
                " \tprotected Mono<Resource> getResource(ServerWebExchange exchange) {",
                "-",
                " \t\tString name = HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE;",
                " \t\tPathContainer pathWithinHandler = exchange.getRequiredAttribute(name);",
                "+",
                " \t\tString path = processPath(pathWithinHandler.value());",
                "@@ -326,27 +325,7 @@ public class ResourceWebHandler implements WebHandler, InitializingBean {",
                " \t\t}",
                "-",
                "-\t\tif (path.contains(\"%\")) {",
                "-\t\t\ttry {",
                "-\t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "-\t\t\t\tString decodedPath = URLDecoder.decode(path, \"UTF-8\");",
                "-\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "-\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"].\");",
                "-\t\t\t\t\t}",
                "-\t\t\t\t\treturn Mono.empty();",
                "-\t\t\t\t}",
                "-\t\t\t\tdecodedPath = processPath(decodedPath);",
                "-\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "-\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"].\");",
                "-\t\t\t\t\t}",
                "-\t\t\t\t\treturn Mono.empty();",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "-\t\t\tcatch (IllegalArgumentException ex) {",
                "-\t\t\t\t// ignore",
                "-\t\t\t}",
                "-\t\t\tcatch (UnsupportedEncodingException ex) {",
                "-\t\t\t\treturn Mono.error(Exceptions.propagate(ex));",
                "+\t\tif (isInvalidEncodedPath(path)) {",
                "+\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"]\");",
                " \t\t\t}",
                "+\t\t\treturn Mono.empty();",
                " \t\t}",
                "@@ -422,2 +401,27 @@ public class ResourceWebHandler implements WebHandler, InitializingBean {",
                "+\t/**",
                "+\t * Check whether the given path contains invalid escape sequences.",
                "+\t * @param path the path to validate",
                "+\t * @return {@code true} if the path is invalid, {@code false} otherwise",
                "+\t */",
                "+\tprivate boolean isInvalidEncodedPath(String path) {",
                "+\t\tif (path.contains(\"%\")) {",
                "+\t\t\ttry {",
                "+\t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(path, \"UTF-8\");",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t\tdecodedPath = processPath(decodedPath);",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tcatch (IllegalArgumentException | UnsupportedEncodingException ex) {",
                "+\t\t\t\t// Should never happen...",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn false;",
                "+\t}",
                "+",
                " \t/**"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 2 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: resource",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "91b803a2310344d925e5d4b1709bbcea90375548",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521630133,
            "hunks": 22,
            "message": "Consistent encoded path evaluation in ResourceHttpRequestHandler and co Issue: SPR-16616",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "index 7543d91d4f..5e9753fc3b 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,2 +19,3 @@ package org.springframework.web.servlet.resource;",
                " import java.io.IOException;",
                "+import java.io.UnsupportedEncodingException;",
                " import java.net.URLDecoder;",
                "@@ -253,17 +254,3 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\tlocationPath = (locationPath.endsWith(\"/\") || locationPath.isEmpty() ? locationPath : locationPath + \"/\");",
                "-\t\tif (!resourcePath.startsWith(locationPath)) {",
                "-\t\t\treturn false;",
                "-\t\t}",
                "-",
                "-\t\tif (resourcePath.contains(\"%\")) {",
                "-\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars...",
                "-\t\t\tif (URLDecoder.decode(resourcePath, \"UTF-8\").contains(\"../\")) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Resolved resource path contains \\\"../\\\" after decoding: \" + resourcePath);",
                "-\t\t\t\t}",
                "-\t\t\t\treturn false;",
                "-\t\t\t}",
                "-\t\t}",
                "-",
                "-\t\treturn true;",
                "+\t\treturn (resourcePath.startsWith(locationPath) && !isInvalidEncodedPath(resourcePath));",
                " \t}",
                "@@ -291,4 +278,26 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \tprivate boolean shouldEncodeRelativePath(Resource location) {",
                "-\t\treturn location instanceof UrlResource &&",
                "-\t\t\t\tthis.urlPathHelper != null && this.urlPathHelper.isUrlDecode();",
                "+\t\treturn (location instanceof UrlResource && this.urlPathHelper != null && this.urlPathHelper.isUrlDecode());",
                "+\t}",
                "+",
                "+\tprivate boolean isInvalidEncodedPath(String resourcePath) {",
                "+\t\tif (resourcePath.contains(\"%\")) {",
                "+\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars...",
                "+\t\t\ttry {",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(resourcePath, \"UTF-8\");",
                "+\t\t\t\tint separatorIndex = decodedPath.indexOf(\"..\") + 2;",
                "+\t\t\t\tif (separatorIndex > 1 && separatorIndex < decodedPath.length()) {",
                "+\t\t\t\t\tchar separator = decodedPath.charAt(separatorIndex);",
                "+\t\t\t\t\tif (separator == '/' || separator == '\\\\') {",
                "+\t\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\t\t\tlogger.trace(\"Resolved resource path contains \\\"../\\\" after decoding: \" + resourcePath);",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tcatch (UnsupportedEncodingException ex) {",
                "+\t\t\t\t// Should never happen...",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn false;",
                " \t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "index 80731c37b6..0691dd5ce2 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "@@ -19,2 +19,3 @@ package org.springframework.web.servlet.resource;",
                " import java.io.IOException;",
                "+import java.io.UnsupportedEncodingException;",
                " import java.net.URLDecoder;",
                "@@ -68,5 +69,5 @@ import org.springframework.web.util.UrlPathHelper;",
                "  * <p>The {@linkplain #setLocations \"locations\"} property takes a list of Spring",
                "- * {@link Resource} locations from which static resources are allowed to",
                "- * be served by this handler. Resources could be served from a classpath location,",
                "- * e.g. \"classpath:/META-INF/public-web-resources/\", allowing convenient packaging",
                "+ * {@link Resource} locations from which static resources are allowed to be served",
                "+ * by this handler. Resources could be served from a classpath location, e.g.",
                "+ * \"classpath:/META-INF/public-web-resources/\", allowing convenient packaging",
                "  * and serving of resources such as .js, .css, and others in jar files.",
                "@@ -76,12 +77,11 @@ import org.springframework.web.util.UrlPathHelper;",
                "  * {@link #setResourceTransformers(List) resourceTransformer} chains to support",
                "- * arbitrary resolution and transformation of resources being served. By default a",
                "- * {@link PathResourceResolver} simply finds resources based on the configured",
                "- * \"locations\". An application can configure additional resolvers and",
                "- * transformers such as the {@link VersionResourceResolver} which can resolve",
                "- * and prepare URLs for resources with a version in the URL.",
                "+ * arbitrary resolution and transformation of resources being served. By default",
                "+ * a {@link PathResourceResolver} simply finds resources based on the configured",
                "+ * \"locations\". An application can configure additional resolvers and transformers",
                "+ * such as the {@link VersionResourceResolver} which can resolve and prepare URLs",
                "+ * for resources with a version in the URL.",
                "  *",
                "- * <p>This handler also properly evaluates the {@code Last-Modified} header (if",
                "- * present) so that a {@code 304} status code will be returned as appropriate,",
                "- * avoiding unnecessary overhead for resources that are already cached by the",
                "- * client.",
                "+ * <p>This handler also properly evaluates the {@code Last-Modified} header",
                "+ * (if present) so that a {@code 304} status code will be returned as appropriate,",
                "+ * avoiding unnecessary overhead for resources that are already cached by the client.",
                "  *",
                "@@ -512,2 +512,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t}",
                "+",
                " \t\tpath = processPath(path);",
                "@@ -519,24 +520,9 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t}",
                "-\t\tif (path.contains(\"%\")) {",
                "-\t\t\ttry {",
                "-\t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "-\t\t\t\tString decodedPath = URLDecoder.decode(path, \"UTF-8\");",
                "-\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "-\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"].\");",
                "-\t\t\t\t\t}",
                "-\t\t\t\t\treturn null;",
                "-\t\t\t\t}",
                "-\t\t\t\tdecodedPath = processPath(decodedPath);",
                "-\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "-\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"].\");",
                "-\t\t\t\t\t}",
                "-\t\t\t\t\treturn null;",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "-\t\t\tcatch (IllegalArgumentException ex) {",
                "-\t\t\t\t// ignore",
                "+\t\tif (isInvalidEncodedPath(path)) {",
                "+\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"]\");",
                " \t\t\t}",
                "+\t\t\treturn null;",
                " \t\t}",
                "+",
                " \t\tResourceResolverChain resolveChain = new DefaultResourceResolverChain(getResourceResolvers());",
                "@@ -546,2 +532,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t}",
                "+",
                " \t\tResourceTransformerChain transformChain =",
                "@@ -552,20 +539,2 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                "-\t/**",
                "-\t * Process the given resource path.",
                "-\t * <p>The default implementation replaces:",
                "-\t * <ul>",
                "-\t * <li>Backslash with forward slash.",
                "-\t * <li>Duplicate occurrences of slash with a single slash.",
                "-\t * <li>Any combination of leading slash and control characters (00-1F and 7F)",
                "-\t * with a single \"/\" or \"\". For example {@code \"  / // foo/bar\"}",
                "-\t * becomes {@code \"/foo/bar\"}.",
                "-\t * </ul>",
                "-\t * @since 3.2.12",
                "-\t */",
                "-\tprotected String processPath(String path) {",
                "-\t\tpath = StringUtils.replace(path, \"\\\\\", \"/\");",
                "-\t\tpath = cleanDuplicateSlashes(path);",
                "-\t\treturn cleanLeadingSlash(path);",
                "-\t}",
                "-",
                " \tprivate String cleanDuplicateSlashes(String path) {",
                "@@ -603,5 +572,5 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\t\t}",
                "-\t\t\t\tpath = slash ? \"/\" + path.substring(i) : path.substring(i);",
                "+\t\t\t\tpath = (slash ? \"/\" + path.substring(i) : path.substring(i));",
                " \t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Path after trimming leading '/' and control characters: \" + path);",
                "+\t\t\t\t\tlogger.trace(\"Path after trimming leading '/' and control characters: [\" + path + \"]\");",
                " \t\t\t\t}",
                "@@ -613,2 +582,27 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                "+\t/**",
                "+\t * Check whether the given path contains invalid escape sequences.",
                "+\t * @param path the path to validate",
                "+\t * @return {@code true} if the path is invalid, {@code false} otherwise",
                "+\t */",
                "+\tprivate boolean isInvalidEncodedPath(String path) {",
                "+\t\tif (path.contains(\"%\")) {",
                "+\t\t\ttry {",
                "+\t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(path, \"UTF-8\");",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t\tdecodedPath = processPath(decodedPath);",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tcatch (IllegalArgumentException | UnsupportedEncodingException ex) {",
                "+\t\t\t\t// Should never happen...",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn false;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -629,9 +623,4 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \tprotected boolean isInvalidPath(String path) {",
                "-\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\tlogger.trace(\"Applying \\\"invalid path\\\" checks to path: \" + path);",
                "-\t\t}",
                " \t\tif (path.contains(\"WEB-INF\") || path.contains(\"META-INF\")) {",
                "-\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\tlogger.trace(\"Path contains \\\"WEB-INF\\\" or \\\"META-INF\\\".\");",
                "-\t\t\t}",
                "+\t\t\tlogger.trace(\"Path contains \\\"WEB-INF\\\" or \\\"META-INF\\\".\");",
                " \t\t\treturn true;",
                "@@ -641,5 +630,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\tif (ResourceUtils.isUrl(relativePath) || relativePath.startsWith(\"url:\")) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Path represents URL or has \\\"url:\\\" prefix.\");",
                "-\t\t\t\t}",
                "+\t\t\t\tlogger.trace(\"Path represents URL or has \\\"url:\\\" prefix.\");",
                " \t\t\t\treturn true;",
                "@@ -650,5 +637,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\tif (path.contains(\"../\")) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Path contains \\\"../\\\" after call to StringUtils#cleanPath.\");",
                "-\t\t\t\t}",
                "+\t\t\t\tlogger.trace(\"Path contains \\\"../\\\" after call to StringUtils#cleanPath.\");",
                " \t\t\t\treturn true;",
                "@@ -659,2 +644,20 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                "+\t/**",
                "+\t * Process the given resource path.",
                "+\t * <p>The default implementation replaces:",
                "+\t * <ul>",
                "+\t * <li>Backslash with forward slash.",
                "+\t * <li>Duplicate occurrences of slash with a single slash.",
                "+\t * <li>Any combination of leading slash and control characters (00-1F and 7F)",
                "+\t * with a single \"/\" or \"\". For example {@code \"  / // foo/bar\"}",
                "+\t * becomes {@code \"/foo/bar\"}.",
                "+\t * </ul>",
                "+\t * @since 3.2.12",
                "+\t */",
                "+\tprotected String processPath(String path) {",
                "+\t\tpath = StringUtils.replace(path, \"\\\\\", \"/\");",
                "+\t\tpath = cleanDuplicateSlashes(path);",
                "+\t\treturn cleanLeadingSlash(path);",
                "+\t}",
                "+",
                " \t/**"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: resource, request",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource, request",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "b9ebdaaf3710db473a2e1fec8641c316483a22aa",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521688716,
            "hunks": 20,
            "message": "Backport clean duplicate separators in resource URLs Issue: SPR-16616",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "index 8732c39ecd..e8cbd8ee50 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -247,17 +247,3 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\tlocationPath = (locationPath.endsWith(\"/\") || locationPath.isEmpty() ? locationPath : locationPath + \"/\");",
                "-\t\tif (!resourcePath.startsWith(locationPath)) {",
                "-\t\t\treturn false;",
                "-\t\t}",
                "-",
                "-\t\tif (resourcePath.contains(\"%\")) {",
                "-\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars...",
                "-\t\t\tif (URLDecoder.decode(resourcePath, \"UTF-8\").contains(\"../\")) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Resolved resource path contains \\\"../\\\" after decoding: \" + resourcePath);",
                "-\t\t\t\t}",
                "-\t\t\t\treturn false;",
                "-\t\t\t}",
                "-\t\t}",
                "-",
                "-\t\treturn true;",
                "+\t\treturn (resourcePath.startsWith(locationPath) && !isInvalidEncodedPath(resourcePath));",
                " \t}",
                "@@ -293,4 +279,26 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \tprivate boolean shouldEncodeRelativePath(Resource location) {",
                "-\t\treturn location instanceof UrlResource &&",
                "-\t\t\t\tthis.urlPathHelper != null && this.urlPathHelper.isUrlDecode();",
                "+\t\treturn (location instanceof UrlResource && this.urlPathHelper != null && this.urlPathHelper.isUrlDecode());",
                "+\t}",
                "+",
                "+\tprivate boolean isInvalidEncodedPath(String resourcePath) {",
                "+\t\tif (resourcePath.contains(\"%\")) {",
                "+\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars...",
                "+\t\t\ttry {",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(resourcePath, \"UTF-8\");",
                "+\t\t\t\tint separatorIndex = decodedPath.indexOf(\"..\") + 2;",
                "+\t\t\t\tif (separatorIndex > 1 && separatorIndex < decodedPath.length()) {",
                "+\t\t\t\t\tchar separator = decodedPath.charAt(separatorIndex);",
                "+\t\t\t\t\tif (separator == '/' || separator == '\\\\') {",
                "+\t\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\t\t\tlogger.trace(\"Resolved resource path contains \\\"../\\\" after decoding: \" + resourcePath);",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tcatch (UnsupportedEncodingException ex) {",
                "+\t\t\t\t// Should never happen...",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn false;",
                " \t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "index 2b31cb5f96..9bd4a5f92c 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,2 +19,3 @@ package org.springframework.web.servlet.resource;",
                " import java.io.IOException;",
                "+import java.io.UnsupportedEncodingException;",
                " import java.net.URLDecoder;",
                "@@ -509,2 +510,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t}",
                "+",
                " \t\tpath = processPath(path);",
                "@@ -516,16 +518,9 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t}",
                "-\t\tif (path.contains(\"%\")) {",
                "-\t\t\ttry {",
                "-\t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "-\t\t\t\tif (isInvalidPath(URLDecoder.decode(path, \"UTF-8\"))) {",
                "-\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"].\");",
                "-\t\t\t\t\t}",
                "-\t\t\t\t\treturn null;",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "-\t\t\tcatch (IllegalArgumentException ex) {",
                "-\t\t\t\t// ignore",
                "+\t\tif (isInvalidEncodedPath(path)) {",
                "+\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"]\");",
                " \t\t\t}",
                "+\t\t\treturn null;",
                " \t\t}",
                "+",
                " \t\tResourceResolverChain resolveChain = new DefaultResourceResolverChain(getResourceResolvers());",
                "@@ -535,2 +530,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t}",
                "+",
                " \t\tResourceTransformerChain transformChain =",
                "@@ -542,6 +538,11 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t/**",
                "-\t * Process the given resource path to be used.",
                "-\t * <p>The default implementation replaces any combination of leading '/' and",
                "-\t * control characters (00-1F and 7F) with a single \"/\" or \"\". For example",
                "-\t * {@code \"  // /// ////  foo/bar\"} becomes {@code \"/foo/bar\"}.",
                "+\t * Process the given resource path.",
                "+\t * <p>The default implementation replaces:",
                "+\t * <ul>",
                "+\t * <li>Backslash with forward slash.",
                "+\t * <li>Duplicate occurrences of slash with a single slash.",
                "+\t * <li>Any combination of leading slash and control characters (00-1F and 7F)",
                "+\t * with a single \"/\" or \"\". For example {@code \"  / // foo/bar\"}",
                "+\t * becomes {@code \"/foo/bar\"}.",
                "+\t * </ul>",
                " \t * @since 3.2.12",
                "@@ -549,2 +550,31 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \tprotected String processPath(String path) {",
                "+\t\tpath = StringUtils.replace(path, \"\\\\\", \"/\");",
                "+\t\tpath = cleanDuplicateSlashes(path);",
                "+\t\treturn cleanLeadingSlash(path);",
                "+\t}",
                "+",
                "+\tprivate String cleanDuplicateSlashes(String path) {",
                "+\t\tStringBuilder sb = null;",
                "+\t\tchar prev = 0;",
                "+\t\tfor (int i = 0; i < path.length(); i++) {",
                "+\t\t\tchar curr = path.charAt(i);",
                "+\t\t\ttry {",
                "+\t\t\t\tif ((curr == '/') && (prev == '/')) {",
                "+\t\t\t\t\tif (sb == null) {",
                "+\t\t\t\t\t\tsb = new StringBuilder(path.substring(0, i));",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\tcontinue;",
                "+\t\t\t\t}",
                "+\t\t\t\tif (sb != null) {",
                "+\t\t\t\t\tsb.append(path.charAt(i));",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tfinally {",
                "+\t\t\t\tprev = curr;",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn sb != null ? sb.toString() : path;",
                "+\t}",
                "+",
                "+\tprivate String cleanLeadingSlash(String path) {",
                " \t\tboolean slash = false;",
                "@@ -558,5 +588,5 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\t\t}",
                "-\t\t\t\tpath = slash ? \"/\" + path.substring(i) : path.substring(i);",
                "+\t\t\t\tpath = (slash ? \"/\" + path.substring(i) : path.substring(i));",
                " \t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Path after trimming leading '/' and control characters: \" + path);",
                "+\t\t\t\t\tlogger.trace(\"Path after trimming leading '/' and control characters: [\" + path + \"]\");",
                " \t\t\t\t}",
                "@@ -568,2 +598,30 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                "+\t/**",
                "+\t * Check whether the given path contains invalid escape sequences.",
                "+\t * @param path the path to validate",
                "+\t * @return {@code true} if the path is invalid, {@code false} otherwise",
                "+\t */",
                "+\tprivate boolean isInvalidEncodedPath(String path) {",
                "+\t\tif (path.contains(\"%\")) {",
                "+\t\t\ttry {",
                "+\t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(path, \"UTF-8\");",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t\tdecodedPath = processPath(decodedPath);",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tcatch (IllegalArgumentException ex) {",
                "+\t\t\t\t// Should never happen...",
                "+\t\t\t}",
                "+\t\t\tcatch (UnsupportedEncodingException ex) {",
                "+\t\t\t\t// Should never happen...",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn false;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -582,11 +640,7 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t * @return {@code true} if the path is invalid, {@code false} otherwise",
                "+\t * @since 3.0.6",
                " \t */",
                " \tprotected boolean isInvalidPath(String path) {",
                "-\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\tlogger.trace(\"Applying \\\"invalid path\\\" checks to path: \" + path);",
                "-\t\t}",
                " \t\tif (path.contains(\"WEB-INF\") || path.contains(\"META-INF\")) {",
                "-\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\tlogger.trace(\"Path contains \\\"WEB-INF\\\" or \\\"META-INF\\\".\");",
                "-\t\t\t}",
                "+\t\t\tlogger.trace(\"Path contains \\\"WEB-INF\\\" or \\\"META-INF\\\".\");",
                " \t\t\treturn true;",
                "@@ -596,5 +650,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\tif (ResourceUtils.isUrl(relativePath) || relativePath.startsWith(\"url:\")) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Path represents URL or has \\\"url:\\\" prefix.\");",
                "-\t\t\t\t}",
                "+\t\t\t\tlogger.trace(\"Path represents URL or has \\\"url:\\\" prefix.\");",
                " \t\t\t\treturn true;",
                "@@ -605,5 +657,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\tif (path.contains(\"../\")) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Path contains \\\"../\\\" after call to StringUtils#cleanPath.\");",
                "-\t\t\t\t}",
                "+\t\t\t\tlogger.trace(\"Path contains \\\"../\\\" after call to StringUtils#cleanPath.\");",
                " \t\t\t\treturn true;"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: resource",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource, request",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "695bf2961feffd35b5560ccc982a2189dcca611f",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522332273,
            "hunks": 4,
            "message": "Consistent trace logging in PathResourceResolver Issue: SPR-16616",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "index 404607542d..1f49cde6cb 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "@@ -120,6 +120,6 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\t\t\tResource[] allowedLocations = getAllowedLocations();",
                "-\t\t\t\t\tlogger.trace(\"Resource path=\\\"\" + resourcePath + \"\\\" was successfully resolved \" +",
                "-\t\t\t\t\t\t\t\"but resource=\\\"\" + resource.getURL() + \"\\\" is neither under the \" +",
                "-\t\t\t\t\t\t\t\"current location=\\\"\" + location.getURL() + \"\\\" nor under any of the \" +",
                "-\t\t\t\t\t\t\t\"allowed locations=\" + (allowedLocations != null ? Arrays.asList(allowedLocations) : \"[]\"));",
                "+\t\t\t\t\tlogger.trace(\"Resource path \\\"\" + resourcePath + \"\\\" was successfully resolved \" +",
                "+\t\t\t\t\t\t\t\"but resource \\\"\" + resource.getURL() + \"\\\" is neither under the \" +",
                "+\t\t\t\t\t\t\t\"current location \\\"\" + location.getURL() + \"\\\" nor under any of the \" +",
                "+\t\t\t\t\t\t\t\"allowed locations \" + (allowedLocations != null ? Arrays.asList(allowedLocations) : \"[]\"));",
                " \t\t\t\t}",
                "@@ -197,3 +197,3 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + resourcePath + \"]\");",
                "+\t\t\t\t\t\tlogger.trace(\"Resolved resource path contains encoded \\\"../\\\" or \\\"..\\\\\\\": \" + resourcePath);",
                " \t\t\t\t\t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "index 43a8397650..13de12e493 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "@@ -191,6 +191,6 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\t\tResource[] allowedLocations = getAllowedLocations();",
                "-\t\t\t\tlogger.trace(\"Resource path=\\\"\" + resourcePath + \"\\\" was successfully resolved \" +",
                "-\t\t\t\t\t\t\"but resource=\\\"\" +\tresource.getURL() + \"\\\" is neither under the \" +",
                "-\t\t\t\t\t\t\"current location=\\\"\" + location.getURL() + \"\\\" nor under any of the \" +",
                "-\t\t\t\t\t\t\"allowed locations=\" + (allowedLocations != null ? Arrays.asList(allowedLocations) : \"[]\"));",
                "+\t\t\t\tlogger.trace(\"Resource path \\\"\" + resourcePath + \"\\\" was successfully resolved \" +",
                "+\t\t\t\t\t\t\"but resource \\\"\" +\tresource.getURL() + \"\\\" is neither under the \" +",
                "+\t\t\t\t\t\t\"current location \\\"\" + location.getURL() + \"\\\" nor under any of the \" +",
                "+\t\t\t\t\t\t\"allowed locations \" + (allowedLocations != null ? Arrays.asList(allowedLocations) : \"[]\"));",
                " \t\t\t}",
                "@@ -288,3 +288,3 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + resourcePath + \"]\");",
                "+\t\t\t\t\t\tlogger.trace(\"Resolved resource path contains encoded \\\"../\\\" or \\\"..\\\\\\\": \" + resourcePath);",
                " \t\t\t\t\t}"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: resource",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "0e28bee0f155b9bf240b4bafc4646e4810cb23f8",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521493885,
            "hunks": 6,
            "message": "Clean duplicate separators in resource URLs Most Servlet containers do this anyway, but not all, and not consistently for forward and backslashes. Issue: SPR-16616",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java",
                "index 62641b9e30..215a50f6c8 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java",
                "@@ -330,3 +330,11 @@ public class ResourceWebHandler implements WebHandler, InitializingBean {",
                " \t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "-\t\t\t\tif (isInvalidPath(URLDecoder.decode(path, \"UTF-8\"))) {",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(path, \"UTF-8\");",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"].\");",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn Mono.empty();",
                "+\t\t\t\t}",
                "+\t\t\t\tdecodedPath = processPath(decodedPath);",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                " \t\t\t\t\tif (logger.isTraceEnabled()) {",
                "@@ -354,8 +362,43 @@ public class ResourceWebHandler implements WebHandler, InitializingBean {",
                " \t/**",
                "-\t * Process the given resource path to be used.",
                "-\t * <p>The default implementation replaces any combination of leading '/' and",
                "-\t * control characters (00-1F and 7F) with a single \"/\" or \"\". For example",
                "-\t * {@code \"  // /// ////  foo/bar\"} becomes {@code \"/foo/bar\"}.",
                "+\t * Process the given resource path.",
                "+\t * <p>The default implementation replaces:",
                "+\t * <ul>",
                "+\t * <li>Backslash with forward slash.",
                "+\t * <li>Duplicate occurrences of slash with a single slash.",
                "+\t * <li>Any combination of leading slash and control characters (00-1F and 7F)",
                "+\t * with a single \"/\" or \"\". For example {@code \"  / // foo/bar\"}",
                "+\t * becomes {@code \"/foo/bar\"}.",
                "+\t * </ul>",
                "+\t * @since 3.2.12",
                " \t */",
                " \tprotected String processPath(String path) {",
                "+\t\tpath = StringUtils.replace(path, \"\\\\\", \"/\");",
                "+\t\tpath = cleanDuplicateSlashes(path);",
                "+\t\treturn cleanLeadingSlash(path);",
                "+\t}",
                "+",
                "+\tprivate String cleanDuplicateSlashes(String path) {",
                "+\t\tStringBuilder sb = null;",
                "+\t\tchar prev = 0;",
                "+\t\tfor (int i = 0; i < path.length(); i++) {",
                "+\t\t\tchar curr = path.charAt(i);",
                "+\t\t\ttry {",
                "+\t\t\t\tif ((curr == '/') && (prev == '/')) {",
                "+\t\t\t\t\tif (sb == null) {",
                "+\t\t\t\t\t\tsb = new StringBuilder(path.substring(0, i));",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\tcontinue;",
                "+\t\t\t\t}",
                "+\t\t\t\tif (sb != null) {",
                "+\t\t\t\t\tsb.append(path.charAt(i));",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tfinally {",
                "+\t\t\t\tprev = curr;",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn sb != null ? sb.toString() : path;",
                "+\t}",
                "+",
                "+\tprivate String cleanLeadingSlash(String path) {",
                " \t\tboolean slash = false;",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "index 43f19c5499..80731c37b6 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "@@ -522,3 +522,11 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "-\t\t\t\tif (isInvalidPath(URLDecoder.decode(path, \"UTF-8\"))) {",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(path, \"UTF-8\");",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"].\");",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn null;",
                "+\t\t\t\t}",
                "+\t\t\t\tdecodedPath = processPath(decodedPath);",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                " \t\t\t\t\tif (logger.isTraceEnabled()) {",
                "@@ -545,6 +553,11 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t/**",
                "-\t * Process the given resource path to be used.",
                "-\t * <p>The default implementation replaces any combination of leading '/' and",
                "-\t * control characters (00-1F and 7F) with a single \"/\" or \"\". For example",
                "-\t * {@code \"  // /// ////  foo/bar\"} becomes {@code \"/foo/bar\"}.",
                "+\t * Process the given resource path.",
                "+\t * <p>The default implementation replaces:",
                "+\t * <ul>",
                "+\t * <li>Backslash with forward slash.",
                "+\t * <li>Duplicate occurrences of slash with a single slash.",
                "+\t * <li>Any combination of leading slash and control characters (00-1F and 7F)",
                "+\t * with a single \"/\" or \"\". For example {@code \"  / // foo/bar\"}",
                "+\t * becomes {@code \"/foo/bar\"}.",
                "+\t * </ul>",
                " \t * @since 3.2.12",
                "@@ -552,2 +565,31 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \tprotected String processPath(String path) {",
                "+\t\tpath = StringUtils.replace(path, \"\\\\\", \"/\");",
                "+\t\tpath = cleanDuplicateSlashes(path);",
                "+\t\treturn cleanLeadingSlash(path);",
                "+\t}",
                "+",
                "+\tprivate String cleanDuplicateSlashes(String path) {",
                "+\t\tStringBuilder sb = null;",
                "+\t\tchar prev = 0;",
                "+\t\tfor (int i = 0; i < path.length(); i++) {",
                "+\t\t\tchar curr = path.charAt(i);",
                "+\t\t\ttry {",
                "+\t\t\t\tif ((curr == '/') && (prev == '/')) {",
                "+\t\t\t\t\tif (sb == null) {",
                "+\t\t\t\t\t\tsb = new StringBuilder(path.substring(0, i));",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\tcontinue;",
                "+\t\t\t\t}",
                "+\t\t\t\tif (sb != null) {",
                "+\t\t\t\t\tsb.append(path.charAt(i));",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tfinally {",
                "+\t\t\t\tprev = curr;",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn sb != null ? sb.toString() : path;",
                "+\t}",
                "+",
                "+\tprivate String cleanLeadingSlash(String path) {",
                " \t\tboolean slash = false;"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: resource",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource, request",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f59ea610dfcf55cd0b42f6dd76a9b3dab0218aaa",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522103016,
            "hunks": 1,
            "message": "Simplified separator check within isInvalidEncodedPath Issue: SPR-16616",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "index 5e9753fc3b..41f3ffebf2 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "@@ -286,12 +286,3 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\t\tString decodedPath = URLDecoder.decode(resourcePath, \"UTF-8\");",
                "-\t\t\t\tint separatorIndex = decodedPath.indexOf(\"..\") + 2;",
                "-\t\t\t\tif (separatorIndex > 1 && separatorIndex < decodedPath.length()) {",
                "-\t\t\t\t\tchar separator = decodedPath.charAt(separatorIndex);",
                "-\t\t\t\t\tif (separator == '/' || separator == '\\\\') {",
                "-\t\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\t\tlogger.trace(\"Resolved resource path contains \\\"../\\\" after decoding: \" + resourcePath);",
                "-\t\t\t\t\t\t}",
                "-\t\t\t\t\t}",
                "-\t\t\t\t\treturn true;",
                "-\t\t\t\t}",
                "+\t\t\t\treturn (decodedPath.contains(\"../\") || decodedPath.contains(\"..\\\\\"));",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f046a066eceefa0799d1bc89bd6e1318f39bdf69"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bcda243f637391d9d7c243b847853a3624baba49",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522337668,
            "hunks": 27,
            "message": "Polishing",
            "diff": [
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java b/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java",
                "index 8298f9e099..bf02fb4045 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2013 the original author or authors.",
                "+ * Copyright 2002-2017 the original author or authors.",
                "  *",
                "@@ -83,3 +83,3 @@ public abstract class AopNamespaceUtils {",
                " \t\tif (sourceElement != null) {",
                "-\t\t\tboolean proxyTargetClass = Boolean.valueOf(sourceElement.getAttribute(PROXY_TARGET_CLASS_ATTRIBUTE));",
                "+\t\t\tboolean proxyTargetClass = Boolean.parseBoolean(sourceElement.getAttribute(PROXY_TARGET_CLASS_ATTRIBUTE));",
                " \t\t\tif (proxyTargetClass) {",
                "@@ -87,3 +87,3 @@ public abstract class AopNamespaceUtils {",
                " \t\t\t}",
                "-\t\t\tboolean exposeProxy = Boolean.valueOf(sourceElement.getAttribute(EXPOSE_PROXY_ATTRIBUTE));",
                "+\t\t\tboolean exposeProxy = Boolean.parseBoolean(sourceElement.getAttribute(EXPOSE_PROXY_ATTRIBUTE));",
                " \t\t\tif (exposeProxy) {",
                "diff --git a/spring-context/src/main/java/org/springframework/scheduling/support/CronSequenceGenerator.java b/spring-context/src/main/java/org/springframework/scheduling/support/CronSequenceGenerator.java",
                "index 64cdf5aa6b..ff592c415c 100644",
                "--- a/spring-context/src/main/java/org/springframework/scheduling/support/CronSequenceGenerator.java",
                "+++ b/spring-context/src/main/java/org/springframework/scheduling/support/CronSequenceGenerator.java",
                "@@ -352,3 +352,3 @@ public class CronSequenceGenerator {",
                " \t\t\t\t}",
                "-\t\t\t\tint delta = Integer.valueOf(split[1]);",
                "+\t\t\t\tint delta = Integer.parseInt(split[1]);",
                " \t\t\t\tif (delta <= 0) {",
                "diff --git a/spring-core/src/main/java/org/springframework/core/convert/Property.java b/spring-core/src/main/java/org/springframework/core/convert/Property.java",
                "index 9c6db43c76..c7c1bddcc6 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/convert/Property.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/convert/Property.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -38,4 +38,4 @@ import org.springframework.util.StringUtils;",
                "  *",
                "- * <p>Used to build a TypeDescriptor from a property location.",
                "- * The built TypeDescriptor can then be used to convert from/to the property type.",
                "+ * <p>Used to build a {@link TypeDescriptor} from a property location. The built",
                "+ * {@code TypeDescriptor} can then be used to convert from/to the property type.",
                "  *",
                "diff --git a/spring-core/src/main/java/org/springframework/util/StringUtils.java b/spring-core/src/main/java/org/springframework/util/StringUtils.java",
                "index b2ed59a890..8dcef81e92 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/StringUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java",
                "@@ -696,7 +696,7 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Parse the given {@code localeString} value into a {@link Locale}.",
                "+\t * Parse the given {@code String} representation into a {@link Locale}.",
                " \t * <p>This is the inverse operation of {@link Locale#toString Locale's toString}.",
                "-\t * @param localeString the locale {@code String}, following {@code Locale's}",
                "-\t * {@code toString()} format (\"en\", \"en_UK\", etc);",
                "-\t * also accepts spaces as separators, as an alternative to underscores",
                "+\t * @param localeString the locale {@code String}: following {@code Locale's}",
                "+\t * {@code toString()} format (\"en\", \"en_UK\", etc), also accepting spaces as",
                "+\t * separators (as an alternative to underscores)",
                " \t * @return a corresponding {@code Locale} instance, or {@code null} if none",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java",
                "index f40a1883e8..cde4bd4e26 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java",
                "@@ -370,3 +370,3 @@ public class ReflectionHelper {",
                "-\tstatic enum ArgumentsMatchKind {",
                "+\tenum ArgumentsMatchKind {",
                "diff --git a/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java",
                "index 5e63576023..388aee0d3f 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -242,4 +242,4 @@ public class UriComponentsBuilder implements Cloneable {",
                " \t * <pre class=\"code\">",
                "-\t * String uriString = &quot;/hotels/42?filter={value}&quot;;",
                "-\t * UriComponentsBuilder.fromUriString(uriString).buildAndExpand(&quot;hot&amp;cold&quot;);",
                "+\t * String urlString = &quot;https://example.com/hotels/42?filter={value}&quot;;",
                "+\t * UriComponentsBuilder.fromHttpUrl(urlString).buildAndExpand(&quot;hot&amp;cold&quot;);",
                " \t * </pre>",
                "@@ -375,6 +375,6 @@ public class UriComponentsBuilder implements Cloneable {",
                "-\t// URI components methods",
                "+\t// Instance methods",
                " \t/**",
                "-\t * Initialize all components of this URI builder with the components of the given URI.",
                "+\t * Initialize components of this builder from components of the given URI.",
                " \t * @param uri the URI",
                "@@ -415,9 +415,13 @@ public class UriComponentsBuilder implements Cloneable {",
                " \t/**",
                "-\t * Set the URI scheme. The given scheme may contain URI template variables,",
                "-\t * and may also be {@code null} to clear the scheme of this builder.",
                "-\t * @param scheme the URI scheme",
                "+\t * Set or append individual URI components of this builder from the values",
                "+\t * of the given {@link UriComponents} instance.",
                "+\t * <p>For the semantics of each component (i.e. set vs append) check the",
                "+\t * builder methods on this class. For example {@link #host(String)} sets",
                "+\t * while {@link #path(String)} appends.",
                "+\t * @param uriComponents the UriComponents to copy from",
                " \t * @return this UriComponentsBuilder",
                " \t */",
                "-\tpublic UriComponentsBuilder scheme(String scheme) {",
                "-\t\tthis.scheme = scheme;",
                "+\tpublic UriComponentsBuilder uriComponents(UriComponents uriComponents) {",
                "+\t\tAssert.notNull(uriComponents, \"UriComponents must not be null\");",
                "+\t\turiComponents.copyToUriComponentsBuilder(this);",
                " \t\treturn this;",
                "@@ -426,9 +430,9 @@ public class UriComponentsBuilder implements Cloneable {",
                " \t/**",
                "-\t * Set all components of this URI builder from the given {@link UriComponents}.",
                "-\t * @param uriComponents the UriComponents instance",
                "+\t * Set the URI scheme. The given scheme may contain URI template variables,",
                "+\t * and may also be {@code null} to clear the scheme of this builder.",
                "+\t * @param scheme the URI scheme",
                " \t * @return this UriComponentsBuilder",
                " \t */",
                "-\tpublic UriComponentsBuilder uriComponents(UriComponents uriComponents) {",
                "-\t\tAssert.notNull(uriComponents, \"UriComponents must not be null\");",
                "-\t\turiComponents.copyToUriComponentsBuilder(this);",
                "+\tpublic UriComponentsBuilder scheme(String scheme) {",
                "+\t\tthis.scheme = scheme;",
                " \t\treturn this;",
                "@@ -512,8 +516,10 @@ public class UriComponentsBuilder implements Cloneable {",
                " \t/**",
                "-\t * Set the path of this builder overriding all existing path and path segment values.",
                "-\t * @param path the URI path; a {@code null} value results in an empty path.",
                "+\t * Append path segments to the existing path. Each path segment may contain",
                "+\t * URI template variables and should not contain any slashes.",
                "+\t * Use {@code path(\"/\")} subsequently to ensure a trailing slash.",
                "+\t * @param pathSegments the URI path segments",
                " \t * @return this UriComponentsBuilder",
                " \t */",
                "-\tpublic UriComponentsBuilder replacePath(String path) {",
                "-\t\tthis.pathBuilder = new CompositePathComponentBuilder(path);",
                "+\tpublic UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {",
                "+\t\tthis.pathBuilder.addPathSegments(pathSegments);",
                " \t\tresetSchemeSpecificPart();",
                "@@ -523,10 +529,8 @@ public class UriComponentsBuilder implements Cloneable {",
                " \t/**",
                "-\t * Append path segments to the existing path. Each path segment may contain",
                "-\t * URI template variables and should not contain any slashes.",
                "-\t * Use {@code path(\"/\")} subsequently to ensure a trailing slash.",
                "-\t * @param pathSegments the URI path segments",
                "+\t * Set the path of this builder overriding all existing path and path segment values.",
                "+\t * @param path the URI path (a {@code null} value results in an empty path)",
                " \t * @return this UriComponentsBuilder",
                " \t */",
                "-\tpublic UriComponentsBuilder pathSegment(String... pathSegments) throws IllegalArgumentException {",
                "-\t\tthis.pathBuilder.addPathSegments(pathSegments);",
                "+\tpublic UriComponentsBuilder replacePath(String path) {",
                "+\t\tthis.pathBuilder = new CompositePathComponentBuilder(path);",
                " \t\tresetSchemeSpecificPart();",
                "@@ -584,3 +588,3 @@ public class UriComponentsBuilder implements Cloneable {",
                " \t * values are given, the resulting URI will contain the query parameter name",
                "-\t * only (i.e. {@code ?foo} instead of {@code ?foo=bar}.",
                "+\t * only (i.e. {@code ?foo} instead of {@code ?foo=bar}).",
                " \t * @param name the query parameter name",
                "@@ -706,3 +710,3 @@ public class UriComponentsBuilder implements Cloneable {",
                "-\t\tif ((this.scheme != null) && ((this.scheme.equals(\"http\") && \"80\".equals(this.port)) ||",
                "+\t\tif (this.scheme != null && ((this.scheme.equals(\"http\") && \"80\".equals(this.port)) ||",
                " \t\t\t\t(this.scheme.equals(\"https\") && \"443\".equals(this.port)))) {",
                "@@ -742,3 +746,2 @@ public class UriComponentsBuilder implements Cloneable {",
                " \t * Delegates to {@link #cloneBuilder()}.",
                "-\t * @see Object#clone()",
                " \t */",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java",
                "index e514caf735..6bfcb11df6 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java",
                "@@ -77,3 +77,3 @@ class ViewControllerBeanDefinitionParser implements BeanDefinitionParser {",
                " \t\tif (element.hasAttribute(\"status-code\")) {",
                "-\t\t\tint statusValue = Integer.valueOf(element.getAttribute(\"status-code\"));",
                "+\t\t\tint statusValue = Integer.parseInt(element.getAttribute(\"status-code\"));",
                " \t\t\tstatusCode = HttpStatus.valueOf(statusValue);",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "index 63baaf1baa..c0a1ffb277 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "@@ -185,6 +185,7 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\telse if (logger.isTraceEnabled()) {",
                "-\t\t\t\tlogger.trace(\"Resource path=\\\"\" + resourcePath + \"\\\" was successfully resolved \" +",
                "-\t\t\t\t\t\t\"but resource=\\\"\" +\tresource.getURL() + \"\\\" is neither under the \" +",
                "-\t\t\t\t\t\t\"current location=\\\"\" + location.getURL() + \"\\\" nor under any of the \" +",
                "-\t\t\t\t\t\t\"allowed locations=\" + Arrays.asList(getAllowedLocations()));",
                "+\t\t\t\tResource[] allowedLocations = getAllowedLocations();",
                "+\t\t\t\tlogger.trace(\"Resource path \\\"\" + resourcePath + \"\\\" was successfully resolved \" +",
                "+\t\t\t\t\t\t\"but resource \\\"\" +\tresource.getURL() + \"\\\" is neither under the \" +",
                "+\t\t\t\t\t\t\"current location \\\"\" + location.getURL() + \"\\\" nor under any of the \" +",
                "+\t\t\t\t\t\t\"allowed locations \" + (allowedLocations != null ? Arrays.asList(allowedLocations) : \"[]\"));",
                " \t\t\t}",
                "@@ -289,3 +290,3 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + resourcePath + \"]\");",
                "+\t\t\t\t\t\tlogger.trace(\"Resolved resource path contains encoded \\\"../\\\" or \\\"..\\\\\\\": \" + resourcePath);",
                " \t\t\t\t\t}"
            ],
            "changed_files": [
                "spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java",
                "spring-context/src/main/java/org/springframework/scheduling/support/CronSequenceGenerator.java",
                "spring-core/src/main/java/org/springframework/core/convert/Property.java",
                "spring-core/src/main/java/org/springframework/util/StringUtils.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java",
                "spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "b2d87abcbbead29fe4538329a05636d2b6503cc7"
                ],
                [
                    "no-tag",
                    "b165475eb60f65b902940cbaa2f6f6f6166fa3d3"
                ],
                [
                    "no-tag",
                    "1ca06537c115899c32adf5748d1a410c0e49921f"
                ],
                [
                    "no-tag",
                    "702b27e1e4d67fd8041427d779c15a8d33ef1522"
                ],
                [
                    "no-tag",
                    "c1405ef140b9ee62be111c4bed1a78787161b0ad"
                ],
                [
                    "no-tag",
                    "475c4d4425b2170c4a0f19d5bd39b70e752e38a1"
                ],
                [
                    "no-tag",
                    "9cc03fa8b02682762e4ba3c2d2dd6cd35fbe4b1b"
                ],
                [
                    "no-tag",
                    "0bc01fcd55ea57290f7fbfcba0117f8af90fb3ba"
                ],
                [
                    "no-tag",
                    "cc379f1cc74124974d9261f94371da51433ffc15"
                ],
                [
                    "no-tag",
                    "912c270f2bebf3f24dd16dcaea576a58d500852e"
                ],
                [
                    "no-tag",
                    "49eafe426142f55f415c2c289333e133180d13e5"
                ],
                [
                    "no-tag",
                    "b0ed385f84f8610f5fe482d319c881f3aaa771ac"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5861e9685bfa6556ffdd56e76df6bd83829fbba6",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522194888,
            "hunks": 9,
            "message": "Always specify charset for form data requests Issue: SPR-16613",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java",
                "index fa4ed289c3..2e8a676593 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -63,4 +63,4 @@ public class FormHttpMessageWriter implements HttpMessageWriter<MultiValueMap<St",
                "-\tprivate static final ResolvableType MULTIVALUE_TYPE =",
                "-\t\t\tResolvableType.forClassWithGenerics(MultiValueMap.class, String.class, String.class);",
                "+\tprivate static final MediaType DEFAULT_FORM_DATA_MEDIA_TYPE =",
                "+\t\t\tnew MediaType(MediaType.APPLICATION_FORM_URLENCODED, DEFAULT_CHARSET);",
                "@@ -69,2 +69,5 @@ public class FormHttpMessageWriter implements HttpMessageWriter<MultiValueMap<St",
                "+\tprivate static final ResolvableType MULTIVALUE_TYPE =",
                "+\t\t\tResolvableType.forClassWithGenerics(MultiValueMap.class, String.class, String.class);",
                "+",
                "@@ -119,9 +122,12 @@ public class FormHttpMessageWriter implements HttpMessageWriter<MultiValueMap<St",
                "-\t\tMediaType contentType = message.getHeaders().getContentType();",
                "-\t\tif (contentType == null) {",
                "-\t\t\tcontentType = MediaType.APPLICATION_FORM_URLENCODED;",
                "-\t\t\tmessage.getHeaders().setContentType(contentType);",
                "+\t\tmediaType = (mediaType != null ? mediaType : DEFAULT_FORM_DATA_MEDIA_TYPE);",
                "+\t\tCharset charset;",
                "+\t\tif (mediaType.getCharset() == null) {",
                "+\t\t\tcharset = getDefaultCharset();",
                "+\t\t\tmediaType = new MediaType(mediaType, charset);",
                " \t\t}",
                "-",
                "-\t\tCharset charset = getMediaTypeCharset(contentType);",
                "+\t\telse {",
                "+\t\t\tcharset = mediaType.getCharset();",
                "+\t\t}",
                "+\t\tmessage.getHeaders().setContentType(mediaType);",
                "diff --git a/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "index a2c8964ff4..70d5e4c498 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "@@ -98,2 +98,5 @@ public class FormHttpMessageConverter implements HttpMessageConverter<MultiValue",
                "+\tprivate static final MediaType DEFAULT_FORM_DATA_MEDIA_TYPE =",
                "+\t\t\tnew MediaType(MediaType.APPLICATION_FORM_URLENCODED, DEFAULT_CHARSET);",
                "+",
                "@@ -292,11 +295,10 @@ public class FormHttpMessageConverter implements HttpMessageConverter<MultiValue",
                "-\t\tCharset charset;",
                "-\t\tif (contentType != null) {",
                "-\t\t\toutputMessage.getHeaders().setContentType(contentType);",
                "-\t\t\tcharset = (contentType.getCharset() != null ? contentType.getCharset() : this.charset);",
                "-\t\t}",
                "-\t\telse {",
                "-\t\t\toutputMessage.getHeaders().setContentType(MediaType.APPLICATION_FORM_URLENCODED);",
                "+\t\tcontentType = (contentType != null ? contentType : DEFAULT_FORM_DATA_MEDIA_TYPE);",
                "+\t\tCharset charset = contentType.getCharset();",
                "+\t\tif (charset == null) {",
                " \t\t\tcharset = this.charset;",
                "+\t\t\tcontentType = new MediaType(contentType, charset);",
                " \t\t}",
                "+\t\toutputMessage.getHeaders().setContentType(contentType);",
                "+",
                " \t\tStringBuilder builder = new StringBuilder();"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/codec/FormHttpMessageWriter.java",
                "spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "1897d8e85843174e18d164b2eebb08c14b988999"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e3d0ef6015f14ceb7baf380ca0598904d75731d5",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522103912,
            "hunks": 198,
            "message": "Use Map.forEach instead of manual Map.Entry iteration wherever possible Issue: SPR-16646",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java",
                "index 34d9f71e82..4f2528d601 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java",
                "@@ -468,5 +468,3 @@ public class PropertyEditorRegistrySupport implements PropertyEditorRegistry {",
                " \t\tif (this.customEditorsForPath != null) {",
                "-\t\t\tfor (Map.Entry<String, CustomEditorHolder> entry : this.customEditorsForPath.entrySet()) {",
                "-\t\t\t\tString editorPath = entry.getKey();",
                "-\t\t\t\tCustomEditorHolder editorHolder = entry.getValue();",
                "+\t\t\tthis.customEditorsForPath.forEach((editorPath, editorHolder) -> {",
                " \t\t\t\tif (nestedProperty != null) {",
                "@@ -486,3 +484,3 @@ public class PropertyEditorRegistrySupport implements PropertyEditorRegistry {",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/config/CustomScopeConfigurer.java b/spring-beans/src/main/java/org/springframework/beans/factory/config/CustomScopeConfigurer.java",
                "index 59e9111e63..fb20d3d969 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/config/CustomScopeConfigurer.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/CustomScopeConfigurer.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -99,5 +99,3 @@ public class CustomScopeConfigurer implements BeanFactoryPostProcessor, BeanClas",
                " \t\tif (this.scopes != null) {",
                "-\t\t\tfor (Map.Entry<String, Object> entry : this.scopes.entrySet()) {",
                "-\t\t\t\tString scopeKey = entry.getKey();",
                "-\t\t\t\tObject value = entry.getValue();",
                "+\t\t\tthis.scopes.forEach((scopeKey, value) -> {",
                " \t\t\t\tif (value instanceof Scope) {",
                "@@ -120,3 +118,3 @@ public class CustomScopeConfigurer implements BeanFactoryPostProcessor, BeanClas",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java b/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java",
                "index d7fe0ef2be..2a75fa50cd 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -27,3 +27,2 @@ import java.util.List;",
                " import java.util.Map;",
                "-import java.util.Map.Entry;",
                " import java.util.Properties;",
                "@@ -274,4 +273,3 @@ public abstract class YamlProcessor {",
                " \tprivate void buildFlattenedMap(Map<String, Object> result, Map<String, Object> source, @Nullable String path) {",
                "-\t\tfor (Entry<String, Object> entry : source.entrySet()) {",
                "-\t\t\tString key = entry.getKey();",
                "+\t\tsource.forEach((key, value) -> {",
                " \t\t\tif (StringUtils.hasText(path)) {",
                "@@ -284,3 +282,2 @@ public abstract class YamlProcessor {",
                " \t\t\t}",
                "-\t\t\tObject value = entry.getValue();",
                " \t\t\tif (value instanceof String) {",
                "@@ -307,3 +304,3 @@ public abstract class YamlProcessor {",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t}",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionValueResolver.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionValueResolver.java",
                "index 5d0c0e5e13..11e860b84a 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionValueResolver.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionValueResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -423,8 +423,7 @@ class BeanDefinitionValueResolver {",
                " \t\tMap<Object, Object> resolved = new LinkedHashMap<>(mm.size());",
                "-\t\tfor (Map.Entry<?, ?> entry : mm.entrySet()) {",
                "-\t\t\tObject resolvedKey = resolveValueIfNecessary(argName, entry.getKey());",
                "-\t\t\tObject resolvedValue = resolveValueIfNecessary(",
                "-\t\t\t\t\tnew KeyedArgName(argName, entry.getKey()), entry.getValue());",
                "+\t\tmm.forEach((key, value) -> {",
                "+\t\t\tObject resolvedKey = resolveValueIfNecessary(argName, key);",
                "+\t\t\tObject resolvedValue = resolveValueIfNecessary(new KeyedArgName(argName, key), value);",
                " \t\t\tresolved.put(resolvedKey, resolvedValue);",
                "-\t\t}",
                "+\t\t});",
                " \t\treturn resolved;",
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java",
                "index 00103a4472..57a5ffa146 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java",
                "@@ -317,6 +317,3 @@ class ConfigurationClassBeanDefinitionReader {",
                "-\t\tfor (Map.Entry<String, Class<? extends BeanDefinitionReader>> entry : importedResources.entrySet()) {",
                "-\t\t\tString resource = entry.getKey();",
                "-\t\t\tClass<? extends BeanDefinitionReader> readerClass = entry.getValue();",
                "-",
                "+\t\timportedResources.forEach((resource, readerClass) -> {",
                " \t\t\t// Default reader selection necessary?",
                "@@ -354,3 +351,3 @@ class ConfigurationClassBeanDefinitionReader {",
                " \t\t\treader.loadBeanDefinitions(resource);",
                "-\t\t}",
                "+\t\t});",
                " \t}",
                "diff --git a/spring-core/src/main/java/org/springframework/core/Constants.java b/spring-core/src/main/java/org/springframework/core/Constants.java",
                "index a3a70f2e7e..b81790ee4b 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/Constants.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/Constants.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -217,7 +217,7 @@ public class Constants {",
                " \t\tSet<Object> values = new HashSet<>();",
                "-\t\tfor (String code : this.fieldCache.keySet()) {",
                "+\t\tthis.fieldCache.forEach((code, value) -> {",
                " \t\t\tif (code.startsWith(prefixToUse)) {",
                "-\t\t\t\tvalues.add(this.fieldCache.get(code));",
                "+\t\t\t\tvalues.add(value);",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t\treturn values;",
                "@@ -249,7 +249,7 @@ public class Constants {",
                " \t\tSet<Object> values = new HashSet<>();",
                "-\t\tfor (String code : this.fieldCache.keySet()) {",
                "+\t\tthis.fieldCache.forEach((code, value) -> {",
                " \t\t\tif (code.endsWith(suffixToUse)) {",
                "-\t\t\t\tvalues.add(this.fieldCache.get(code));",
                "+\t\t\t\tvalues.add(value);",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t\treturn values;",
                "diff --git a/spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java b/spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java",
                "index 0e676c43eb..35fdd3d617 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java",
                "@@ -143,4 +143,3 @@ public class SimpleAliasRegistry implements AliasRegistry {",
                " \t\t\tMap<String, String> aliasCopy = new HashMap<>(this.aliasMap);",
                "-\t\t\tfor (String alias : aliasCopy.keySet()) {",
                "-\t\t\t\tString registeredName = aliasCopy.get(alias);",
                "+\t\t\taliasCopy.forEach((alias, registeredName) -> {",
                " \t\t\t\tString resolvedAlias = valueResolver.resolveStringValue(alias);",
                "@@ -156,3 +155,3 @@ public class SimpleAliasRegistry implements AliasRegistry {",
                " \t\t\t\t\t\t\tthis.aliasMap.remove(alias);",
                "-\t\t\t\t\t\t\tbreak;",
                "+\t\t\t\t\t\t\treturn;",
                " \t\t\t\t\t\t}",
                "@@ -170,3 +169,3 @@ public class SimpleAliasRegistry implements AliasRegistry {",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index 59c6cf5327..2c296bbd5f 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -1248,5 +1248,5 @@ public abstract class AnnotationUtils {",
                " \t\t\tMap<String, List<String>> aliasMap = getAttributeAliasMap(annotationType);",
                "-\t\t\tfor (String attributeName : aliasMap.keySet()) {",
                "+\t\t\taliasMap.forEach((attributeName, aliasedAttributeNames) -> {",
                " \t\t\t\tif (valuesAlreadyReplaced.contains(attributeName)) {",
                "-\t\t\t\t\tcontinue;",
                "+\t\t\t\t\treturn;",
                " \t\t\t\t}",
                "@@ -1254,4 +1254,3 @@ public abstract class AnnotationUtils {",
                " \t\t\t\tboolean valuePresent = (value != null && !(value instanceof DefaultValueHolder));",
                "-",
                "-\t\t\t\tfor (String aliasedAttributeName : aliasMap.get(attributeName)) {",
                "+\t\t\t\tfor (String aliasedAttributeName : aliasedAttributeNames) {",
                " \t\t\t\t\tif (valuesAlreadyReplaced.contains(aliasedAttributeName)) {",
                "@@ -1259,6 +1258,4 @@ public abstract class AnnotationUtils {",
                " \t\t\t\t\t}",
                "-",
                " \t\t\t\t\tObject aliasedValue = attributes.get(aliasedAttributeName);",
                " \t\t\t\t\tboolean aliasPresent = (aliasedValue != null && !(aliasedValue instanceof DefaultValueHolder));",
                "-",
                " \t\t\t\t\t// Something to validate or replace with an alias?",
                "@@ -1292,3 +1289,3 @@ public abstract class AnnotationUtils {",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t\tattributes.validated = true;",
                "diff --git a/spring-core/src/main/java/org/springframework/core/io/support/SpringFactoriesLoader.java b/spring-core/src/main/java/org/springframework/core/io/support/SpringFactoriesLoader.java",
                "index 9ce5724e0f..197e37a770 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/io/support/SpringFactoriesLoader.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/io/support/SpringFactoriesLoader.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -123,4 +123,6 @@ public abstract class SpringFactoriesLoader {",
                " \t\tMultiValueMap<String, String> result = cache.get(classLoader);",
                "-\t\tif (result != null)",
                "+\t\tif (result != null) {",
                " \t\t\treturn result;",
                "+\t\t}",
                "+",
                " \t\ttry {",
                "diff --git a/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java b/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java",
                "index 5c20bf35f5..b510e64e31 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java",
                "@@ -198,4 +198,3 @@ public class LinkedMultiValueMap<K, V> implements MultiValueMap<K, V>, Serializa",
                " \t\tLinkedMultiValueMap<K, V> copy = new LinkedMultiValueMap<>(this.targetMap.size());",
                "-\t\tthis.targetMap.forEach((k, v) -> copy.put(k, new LinkedList<>(v)));",
                "-\t\t",
                "+\t\tthis.targetMap.forEach((key, value) -> copy.put(key, new LinkedList<>(value)));",
                " \t\treturn copy;",
                "diff --git a/spring-core/src/main/java/org/springframework/util/MimeType.java b/spring-core/src/main/java/org/springframework/util/MimeType.java",
                "index bc2d996ab8..7fb5e0cc89 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/MimeType.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/MimeType.java",
                "@@ -411,3 +411,4 @@ public class MimeType implements Comparable<MimeType>, Serializable {",
                "-\t\tfor (String key : this.parameters.keySet()) {",
                "+\t\tfor (Map.Entry<String, String> entry : this.parameters.entrySet()) {",
                "+\t\t\tString key = entry.getKey();",
                " \t\t\tif (!other.parameters.containsKey(key)) {",
                "@@ -420,3 +421,3 @@ public class MimeType implements Comparable<MimeType>, Serializable {",
                " \t\t\t}",
                "-\t\t\telse if (!ObjectUtils.nullSafeEquals(this.parameters.get(key), other.parameters.get(key))) {",
                "+\t\t\telse if (!ObjectUtils.nullSafeEquals(entry.getValue(), other.parameters.get(key))) {",
                " \t\t\t\treturn false;",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java",
                "index bcf39c9926..1d6a5561f4 100755",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java",
                "@@ -565,3 +565,3 @@ public class CallMetaDataContext {",
                " \t\tMap<String, Object> matchedParameters = new HashMap<>(inParameters.size());",
                "-\t\tfor (String parameterName : inParameters.keySet()) {",
                "+\t\tinParameters.forEach((parameterName, parameterValue) -> {",
                " \t\t\tString parameterNameToMatch = provider.parameterNameToUse(parameterName);",
                "@@ -570,5 +570,5 @@ public class CallMetaDataContext {",
                " \t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\tObject value = inParameters.get(parameterName);",
                "+\t\t\t\t\tObject value = parameterValue;",
                " \t\t\t\t\tif (value instanceof SqlParameterValue) {",
                "-\t\t\t\t\t\tvalue = ((SqlParameterValue)value).getValue();",
                "+\t\t\t\t\t\tvalue = ((SqlParameterValue) value).getValue();",
                " \t\t\t\t\t}",
                "@@ -581,5 +581,5 @@ public class CallMetaDataContext {",
                " \t\t\telse {",
                "-\t\t\t\tmatchedParameters.put(callParameterName, inParameters.get(parameterName));",
                "+\t\t\t\tmatchedParameters.put(callParameterName, parameterValue);",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                "index 10823a73b1..1a26ff5d86 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                "@@ -246,9 +246,17 @@ public class TableMetaDataContext {",
                " \tpublic List<Object> matchInParameterValuesWithInsertColumns(Map<String, ?> inParameters) {",
                "-\t\tList<Object> values = new ArrayList<>();",
                "-\t\tMap<String, Object> source = new LinkedHashMap<>(inParameters.size());",
                "-\t\tfor (String key : inParameters.keySet()) {",
                "-\t\t\tsource.put(key.toLowerCase(), inParameters.get(key));",
                "-\t\t}",
                "+\t\tList<Object> values = new ArrayList<>(inParameters.size());",
                " \t\tfor (String column : this.tableColumns) {",
                "-\t\t\tvalues.add(source.get(column.toLowerCase()));",
                "+\t\t\tObject value = inParameters.get(column);",
                "+\t\t\tif (value == null) {",
                "+\t\t\t\tvalue = inParameters.get(column.toLowerCase());",
                "+\t\t\t\tif (value == null) {",
                "+\t\t\t\t\tfor (Map.Entry<String, ?> entry : inParameters.entrySet()) {",
                "+\t\t\t\t\t\tif (column.equalsIgnoreCase(entry.getKey())) {",
                "+\t\t\t\t\t\t\tvalue = entry.getValue();",
                "+\t\t\t\t\t\t\t// TODO: break;",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tvalues.add(value);",
                " \t\t}",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcCall.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcCall.java",
                "index 406cf1e526..4e2df89afc 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcCall.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcCall.java",
                "@@ -316,7 +316,5 @@ public abstract class AbstractJdbcCall {",
                " \t\t// Iterate over the declared RowMappers and register the corresponding SqlParameter",
                "-\t\tfor (Map.Entry<String, RowMapper<?>> entry : this.declaredRowMappers.entrySet()) {",
                "-\t\t\tSqlParameter resultSetParameter =",
                "-\t\t\t\t\tthis.callMetaDataContext.createReturnResultSetParameter(entry.getKey(), entry.getValue());",
                "-\t\t\tthis.declaredParameters.add(resultSetParameter);",
                "-\t\t}",
                "+\t\tthis.declaredRowMappers.forEach((key, value) -> {",
                "+\t\t\tthis.declaredParameters.add(this.callMetaDataContext.createReturnResultSetParameter(key, value));",
                "+\t\t});",
                " \t\tthis.callMetaDataContext.processParameters(this.declaredParameters);",
                "@@ -328,4 +326,4 @@ public abstract class AbstractJdbcCall {",
                "-\t\tthis.callableStatementFactory =",
                "-\t\t\t\tnew CallableStatementCreatorFactory(this.callString, this.callMetaDataContext.getCallParameters());",
                "+\t\tthis.callableStatementFactory = new CallableStatementCreatorFactory(",
                "+\t\t\t\tthis.callString, this.callMetaDataContext.getCallParameters());",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/support/CustomSQLExceptionTranslatorRegistrar.java b/spring-jdbc/src/main/java/org/springframework/jdbc/support/CustomSQLExceptionTranslatorRegistrar.java",
                "index 02ebbfc1ad..e90fb1bc84 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/support/CustomSQLExceptionTranslatorRegistrar.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/CustomSQLExceptionTranslatorRegistrar.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -24,4 +24,3 @@ import org.springframework.beans.factory.InitializingBean;",
                " /**",
                "- * Registry for registering custom {@link org.springframework.jdbc.support.SQLExceptionTranslator}",
                "- * instances for specific databases.",
                "+ * Registry for custom {@link SQLExceptionTranslator} instances for specific databases.",
                "  *",
                "@@ -52,5 +51,4 @@ public class CustomSQLExceptionTranslatorRegistrar implements InitializingBean {",
                " \tpublic void afterPropertiesSet() {",
                "-\t\tfor (String dbName : this.translators.keySet()) {",
                "-\t\t\tCustomSQLExceptionTranslatorRegistry.getInstance().registerTranslator(dbName, this.translators.get(dbName));",
                "-\t\t}",
                "+\t\tthis.translators.forEach((dbName, translator) ->",
                "+\t\t\t\tCustomSQLExceptionTranslatorRegistry.getInstance().registerTranslator(dbName, translator));",
                " \t}",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/support/converter/SimpleMessageConverter.java b/spring-jms/src/main/java/org/springframework/jms/support/converter/SimpleMessageConverter.java",
                "index 18dabab78b..fae059aba3 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/support/converter/SimpleMessageConverter.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/support/converter/SimpleMessageConverter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -149,7 +149,8 @@ public class SimpleMessageConverter implements MessageConverter {",
                " \t\tfor (Map.Entry<?, ?> entry : map.entrySet()) {",
                "-\t\t\tif (!(entry.getKey() instanceof String)) {",
                "+\t\t\tObject key = entry.getKey();",
                "+\t\t\tif (!(key instanceof String)) {",
                " \t\t\t\tthrow new MessageConversionException(\"Cannot convert non-String key of type [\" +",
                "-\t\t\t\t\t\tObjectUtils.nullSafeClassName(entry.getKey()) + \"] to JMS MapMessage entry\");",
                "+\t\t\t\t\t\tObjectUtils.nullSafeClassName(key) + \"] to JMS MapMessage entry\");",
                " \t\t\t}",
                "-\t\t\tmessage.setObject((String) entry.getKey(), entry.getValue());",
                "+\t\t\tmessage.setObject((String) key, entry.getValue());",
                " \t\t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpAttributes.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpAttributes.java",
                "index 29bc4d1175..e59ab597f4 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpAttributes.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpAttributes.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -170,6 +170,6 @@ public class SimpAttributes {",
                " \tprivate void executeDestructionCallbacks() {",
                "-\t\tfor (Map.Entry<String, Object> entry : this.attributes.entrySet()) {",
                "-\t\t\tif (entry.getKey().startsWith(DESTRUCTION_CALLBACK_NAME_PREFIX)) {",
                "+\t\tthis.attributes.forEach((key, value) -> {",
                "+\t\t\tif (key.startsWith(DESTRUCTION_CALLBACK_NAME_PREFIX)) {",
                " \t\t\t\ttry {",
                "-\t\t\t\t\t((Runnable) entry.getValue()).run();",
                "+\t\t\t\t\t((Runnable) value).run();",
                " \t\t\t\t}",
                "@@ -179,3 +179,3 @@ public class SimpAttributes {",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessagingTemplate.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessagingTemplate.java",
                "index 7d7ac06778..ee06f157e1 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessagingTemplate.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessagingTemplate.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -265,6 +265,3 @@ public class SimpMessagingTemplate extends AbstractMessageSendingTemplate<String",
                " \t\tinitHeaders(headerAccessor);",
                "-\t\tfor (Map.Entry<String, Object> headerEntry : headers.entrySet()) {",
                "-\t\t\tObject value = headerEntry.getValue();",
                "-\t\t\theaderAccessor.setNativeHeader(headerEntry.getKey(), (value != null ? value.toString() : null));",
                "-\t\t}",
                "+\t\theaders.forEach((key, value) -> headerAccessor.setNativeHeader(key, (value != null ? value.toString() : null)));",
                " \t\treturn headerAccessor.getMessageHeaders();",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "index 18c9a9169e..b926fae2d5 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "@@ -272,4 +272,4 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t\t\t\t\t\tif (getPathMatcher().match(destinationPattern, destination)) {",
                "-\t\t\t\t\t\t\t\tfor (Subscription subscription : info.getSubscriptions(destinationPattern)) {",
                "-\t\t\t\t\t\t\t\t\tresult.add(info.sessionId, subscription.getId());",
                "+\t\t\t\t\t\t\t\tfor (Subscription sub : info.getSubscriptions(destinationPattern)) {",
                "+\t\t\t\t\t\t\t\t\tresult.add(info.sessionId, sub.getId());",
                " \t\t\t\t\t\t\t\t}",
                "@@ -289,14 +289,12 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t\tsynchronized (this.updateCache) {",
                "-\t\t\t\tfor (Map.Entry<String, LinkedMultiValueMap<String, String>> entry : this.updateCache.entrySet()) {",
                "-\t\t\t\t\tString cachedDestination = entry.getKey();",
                "+\t\t\t\tthis.updateCache.forEach((cachedDestination, subscriptions) -> {",
                " \t\t\t\t\tif (getPathMatcher().match(destination, cachedDestination)) {",
                "-\t\t\t\t\t\tLinkedMultiValueMap<String, String> subs = entry.getValue();",
                " \t\t\t\t\t\t// Subscription id's may also be populated via getSubscriptions()",
                "-\t\t\t\t\t\tList<String> subsForSession = subs.get(sessionId);",
                "+\t\t\t\t\t\tList<String> subsForSession = subscriptions.get(sessionId);",
                " \t\t\t\t\t\tif (subsForSession == null || !subsForSession.contains(subsId)) {",
                "-\t\t\t\t\t\t\tsubs.add(sessionId, subsId);",
                "-\t\t\t\t\t\t\tthis.accessCache.put(cachedDestination, subs.deepCopy());",
                "+\t\t\t\t\t\t\tsubscriptions.add(sessionId, subsId);",
                "+\t\t\t\t\t\t\tthis.accessCache.put(cachedDestination, subscriptions.deepCopy());",
                " \t\t\t\t\t\t}",
                " \t\t\t\t\t}",
                "-\t\t\t\t}",
                "+\t\t\t\t});",
                " \t\t\t}",
                "@@ -307,5 +305,3 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t\t\tSet<String> destinationsToRemove = new HashSet<>();",
                "-\t\t\t\tfor (Map.Entry<String, LinkedMultiValueMap<String, String>> entry : this.updateCache.entrySet()) {",
                "-\t\t\t\t\tString destination = entry.getKey();",
                "-\t\t\t\t\tLinkedMultiValueMap<String, String> sessionMap = entry.getValue();",
                "+\t\t\t\tthis.updateCache.forEach((destination, sessionMap) -> {",
                " \t\t\t\t\tList<String> subscriptions = sessionMap.get(sessionId);",
                "@@ -323,3 +319,3 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t\t\t\t}",
                "-\t\t\t\t}",
                "+\t\t\t\t});",
                " \t\t\t\tfor (String destination : destinationsToRemove) {",
                "@@ -334,5 +330,3 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t\t\tSet<String> destinationsToRemove = new HashSet<>();",
                "-\t\t\t\tfor (Map.Entry<String, LinkedMultiValueMap<String, String>> entry : this.updateCache.entrySet()) {",
                "-\t\t\t\t\tString destination = entry.getKey();",
                "-\t\t\t\t\tLinkedMultiValueMap<String, String> sessionMap = entry.getValue();",
                "+\t\t\t\tthis.updateCache.forEach((destination, sessionMap) -> {",
                " \t\t\t\t\tif (sessionMap.remove(info.getSessionId()) != null) {",
                "@@ -345,3 +339,3 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t\t\t\t}",
                "-\t\t\t\t}",
                "+\t\t\t\t});",
                " \t\t\t\tfor (String destination : destinationsToRemove) {",
                "@@ -435,9 +429,5 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t\t\t\tthis.destinationLookup.entrySet()) {",
                "-",
                "-\t\t\t\tSet<Subscription> subs = destinationEntry.getValue();",
                "-\t\t\t\tif (subs != null) {",
                "-\t\t\t\t\tfor (Subscription sub : subs) {",
                "-\t\t\t\t\t\tif (sub.getId().equalsIgnoreCase(subscriptionId)) {",
                "-\t\t\t\t\t\t\treturn sub;",
                "-\t\t\t\t\t\t}",
                "+\t\t\t\tfor (Subscription sub : destinationEntry.getValue()) {",
                "+\t\t\t\t\tif (sub.getId().equalsIgnoreCase(subscriptionId)) {",
                "+\t\t\t\t\t\treturn sub;",
                " \t\t\t\t\t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.java",
                "index 21c2067d16..c2b884ffd5 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -21,3 +21,2 @@ import java.util.Arrays;",
                " import java.util.Collection;",
                "-import java.util.List;",
                " import java.util.Map;",
                "@@ -354,7 +353,7 @@ public class SimpleBrokerMessageHandler extends AbstractBrokerMessageHandler {",
                " \t\tlong now = System.currentTimeMillis();",
                "-\t\tfor (Map.Entry<String, List<String>> subscriptionEntry : subscriptions.entrySet()) {",
                "-\t\t\tfor (String subscriptionId : subscriptionEntry.getValue()) {",
                "+\t\tsubscriptions.forEach((sessionId, subscriptionIds) -> {",
                "+\t\t\tfor (String subscriptionId : subscriptionIds) {",
                " \t\t\t\tSimpMessageHeaderAccessor headerAccessor = SimpMessageHeaderAccessor.create(SimpMessageType.MESSAGE);",
                " \t\t\t\tinitHeaders(headerAccessor);",
                "-\t\t\t\theaderAccessor.setSessionId(subscriptionEntry.getKey());",
                "+\t\t\t\theaderAccessor.setSessionId(sessionId);",
                " \t\t\t\theaderAccessor.setSubscriptionId(subscriptionId);",
                "@@ -372,3 +371,3 @@ public class SimpleBrokerMessageHandler extends AbstractBrokerMessageHandler {",
                " \t\t\t\tfinally {",
                "-\t\t\t\t\tSessionInfo info = this.sessions.get(subscriptionEntry.getKey());",
                "+\t\t\t\t\tSessionInfo info = this.sessions.get(sessionId);",
                " \t\t\t\t\tif (info != null) {",
                "@@ -378,3 +377,3 @@ public class SimpleBrokerMessageHandler extends AbstractBrokerMessageHandler {",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SubscriptionRegistry.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SubscriptionRegistry.java",
                "index ac9dc15e54..c16b914026 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SubscriptionRegistry.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SubscriptionRegistry.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -47,7 +47,7 @@ public interface SubscriptionRegistry {",
                " \t/**",
                "-\t * Find all subscriptions that should receive the given message. The map",
                "-\t * returned is safe to iterate and will never be modified.",
                "+\t * Find all subscriptions that should receive the given message.",
                "+\t * The map returned is safe to iterate and will never be modified.",
                " \t * @param message the message",
                "-\t * @return a {@code MultiValueMap} with sessionId-subscriptionId pairs,",
                "-\t * possibly empty.",
                "+\t * @return a {@code MultiValueMap} with sessionId-subscriptionId pairs",
                "+\t * (possibly empty)",
                " \t */",
                "diff --git a/spring-web/src/main/java/org/springframework/http/HttpHeaders.java b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java",
                "index adfe99afe2..961662aad2 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/HttpHeaders.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/HttpHeaders.java",
                "@@ -418,8 +418,4 @@ public class HttpHeaders implements MultiValueMap<String, String>, Serializable",
                " \t\tif (readOnly) {",
                "-\t\t\tMap<String, List<String>> map =",
                "-\t\t\t\t\tnew LinkedCaseInsensitiveMap<>(headers.size(), Locale.ENGLISH);",
                "-\t\t\tfor (Entry<String, List<String>> entry : headers.entrySet()) {",
                "-\t\t\t\tList<String> values = Collections.unmodifiableList(entry.getValue());",
                "-\t\t\t\tmap.put(entry.getKey(), values);",
                "-\t\t\t}",
                "+\t\t\tMap<String, List<String>> map = new LinkedCaseInsensitiveMap<>(headers.size(), Locale.ENGLISH);",
                "+\t\t\theaders.forEach((key, valueList) -> map.put(key, Collections.unmodifiableList(valueList)));",
                " \t\t\tthis.headers = Collections.unmodifiableMap(map);",
                "@@ -1440,5 +1436,3 @@ public class HttpHeaders implements MultiValueMap<String, String>, Serializable",
                " \tpublic void addAll(MultiValueMap<String, String> values) {",
                "-\t\tfor (Entry<String, List<String>> entry : values.entrySet()) {",
                "-\t\t\taddAll(entry.getKey(), entry.getValue());",
                "-\t\t}",
                "+\t\tvalues.forEach(this::addAll);",
                " \t}",
                "@@ -1462,5 +1456,3 @@ public class HttpHeaders implements MultiValueMap<String, String>, Serializable",
                " \tpublic void setAll(Map<String, String> values) {",
                "-\t\tfor (Entry<String, String> entry : values.entrySet()) {",
                "-\t\t\tset(entry.getKey(), entry.getValue());",
                "-\t\t}",
                "+\t\tvalues.forEach(this::set);",
                " \t}",
                "@@ -1470,5 +1462,3 @@ public class HttpHeaders implements MultiValueMap<String, String>, Serializable",
                " \t\tLinkedHashMap<String, String> singleValueMap = new LinkedHashMap<>(this.headers.size());",
                "-\t\tfor (Entry<String, List<String>> entry : this.headers.entrySet()) {",
                "-\t\t\tsingleValueMap.put(entry.getKey(), entry.getValue().get(0));",
                "-\t\t}",
                "+\t\tthis.headers.forEach((key, valueList) -> singleValueMap.put(key, valueList.get(0)));",
                " \t\treturn singleValueMap;",
                "diff --git a/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequest.java b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequest.java",
                "index a605a67683..324925bff3 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequest.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequest.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -20,4 +20,2 @@ import java.io.IOException;",
                " import java.net.URI;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "@@ -99,6 +97,5 @@ final class HttpComponentsClientHttpRequest extends AbstractBufferingClientHttpR",
                " \tstatic void addHeaders(HttpUriRequest httpRequest, HttpHeaders headers) {",
                "-\t\tfor (Map.Entry<String, List<String>> entry : headers.entrySet()) {",
                "-\t\t\tString headerName = entry.getKey();",
                "+\t\theaders.forEach((headerName, headerValues) -> {",
                " \t\t\tif (HttpHeaders.COOKIE.equalsIgnoreCase(headerName)) {  // RFC 6265",
                "-\t\t\t\tString headerValue = StringUtils.collectionToDelimitedString(entry.getValue(), \"; \");",
                "+\t\t\t\tString headerValue = StringUtils.collectionToDelimitedString(headerValues, \"; \");",
                " \t\t\t\thttpRequest.addHeader(headerName, headerValue);",
                "@@ -107,3 +104,3 @@ final class HttpComponentsClientHttpRequest extends AbstractBufferingClientHttpR",
                " \t\t\t\t\t!HTTP.TRANSFER_ENCODING.equalsIgnoreCase(headerName)) {",
                "-\t\t\t\tfor (String headerValue : entry.getValue()) {",
                "+\t\t\t\tfor (String headerValue : headerValues) {",
                " \t\t\t\t\thttpRequest.addHeader(headerName, headerValue);",
                "@@ -111,3 +108,3 @@ final class HttpComponentsClientHttpRequest extends AbstractBufferingClientHttpR",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t}",
                "diff --git a/spring-web/src/main/java/org/springframework/http/client/Netty4ClientHttpRequest.java b/spring-web/src/main/java/org/springframework/http/client/Netty4ClientHttpRequest.java",
                "index 5d9820c2fb..9a64e6cc0c 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/client/Netty4ClientHttpRequest.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/client/Netty4ClientHttpRequest.java",
                "@@ -21,4 +21,2 @@ import java.io.OutputStream;",
                " import java.net.URI;",
                "-import java.util.List;",
                "-import java.util.Map;",
                " import java.util.concurrent.ExecutionException;",
                "@@ -144,5 +142,3 @@ class Netty4ClientHttpRequest extends AbstractAsyncClientHttpRequest implements",
                " \t\tnettyRequest.headers().set(HttpHeaders.CONNECTION, \"close\");",
                "-\t\tfor (Map.Entry<String, List<String>> entry : headers.entrySet()) {",
                "-\t\t\tnettyRequest.headers().add(entry.getKey(), entry.getValue());",
                "-\t\t}",
                "+\t\theaders.forEach((headerName, headerValues) -> nettyRequest.headers().add(headerName, headerValues));",
                " \t\tif (!nettyRequest.headers().contains(HttpHeaders.CONTENT_LENGTH) && this.body.buffer().readableBytes() > 0) {",
                "diff --git a/spring-web/src/main/java/org/springframework/http/client/OkHttp3ClientHttpRequestFactory.java b/spring-web/src/main/java/org/springframework/http/client/OkHttp3ClientHttpRequestFactory.java",
                "index e160d73930..59c4f7e059 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/client/OkHttp3ClientHttpRequestFactory.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/client/OkHttp3ClientHttpRequestFactory.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -21,4 +21,2 @@ import java.net.MalformedURLException;",
                " import java.net.URI;",
                "-import java.util.List;",
                "-import java.util.Map;",
                " import java.util.concurrent.TimeUnit;",
                "@@ -139,8 +137,7 @@ public class OkHttp3ClientHttpRequestFactory",
                " \t\tRequest.Builder builder = new Request.Builder().url(uri.toURL()).method(method.name(), body);",
                "-\t\tfor (Map.Entry<String, List<String>> entry : headers.entrySet()) {",
                "-\t\t\tString headerName = entry.getKey();",
                "-\t\t\tfor (String headerValue : entry.getValue()) {",
                "+\t\theaders.forEach((headerName, headerValues) -> {",
                "+\t\t\tfor (String headerValue : headerValues) {",
                " \t\t\t\tbuilder.addHeader(headerName, headerValue);",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t\treturn builder.build();",
                "diff --git a/spring-web/src/main/java/org/springframework/http/client/SimpleBufferingClientHttpRequest.java b/spring-web/src/main/java/org/springframework/http/client/SimpleBufferingClientHttpRequest.java",
                "index d422e498dd..aade690476 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/client/SimpleBufferingClientHttpRequest.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/client/SimpleBufferingClientHttpRequest.java",
                "@@ -22,4 +22,2 @@ import java.net.URI;",
                " import java.net.URISyntaxException;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "@@ -95,6 +93,5 @@ final class SimpleBufferingClientHttpRequest extends AbstractBufferingClientHttp",
                " \tstatic void addHeaders(HttpURLConnection connection, HttpHeaders headers) {",
                "-\t\tfor (Map.Entry<String, List<String>> entry : headers.entrySet()) {",
                "-\t\t\tString headerName = entry.getKey();",
                "+\t\theaders.forEach((headerName, headerValues) -> {",
                " \t\t\tif (HttpHeaders.COOKIE.equalsIgnoreCase(headerName)) {  // RFC 6265",
                "-\t\t\t\tString headerValue = StringUtils.collectionToDelimitedString(entry.getValue(), \"; \");",
                "+\t\t\t\tString headerValue = StringUtils.collectionToDelimitedString(headerValues, \"; \");",
                " \t\t\t\tconnection.setRequestProperty(headerName, headerValue);",
                "@@ -102,3 +99,3 @@ final class SimpleBufferingClientHttpRequest extends AbstractBufferingClientHttp",
                " \t\t\telse {",
                "-\t\t\t\tfor (String headerValue : entry.getValue()) {",
                "+\t\t\t\tfor (String headerValue : headerValues) {",
                " \t\t\t\t\tString actualHeaderValue = headerValue != null ? headerValue : \"\";",
                "@@ -107,3 +104,3 @@ final class SimpleBufferingClientHttpRequest extends AbstractBufferingClientHttp",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t}",
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpResponse.java b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpResponse.java",
                "index 2fd1b5734a..a88da3fb2b 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpResponse.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpResponse.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -23,3 +23,2 @@ import java.util.Collection;",
                " import java.util.List;",
                "-import java.util.Map;",
                " import javax.servlet.http.HttpServletResponse;",
                "@@ -101,8 +100,7 @@ public class ServletServerHttpResponse implements ServerHttpResponse {",
                " \t\tif (!this.headersWritten) {",
                "-\t\t\tfor (Map.Entry<String, List<String>> entry : this.headers.entrySet()) {",
                "-\t\t\t\tString headerName = entry.getKey();",
                "-\t\t\t\tfor (String headerValue : entry.getValue()) {",
                "+\t\t\tgetHeaders().forEach((headerName, headerValues) -> {",
                "+\t\t\t\tfor (String headerValue : headerValues) {",
                " \t\t\t\t\tthis.servletResponse.addHeader(headerName, headerValue);",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t\t// HttpServletResponse exposes some headers as properties: we should include those if not already present",
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultServerHttpRequestBuilder.java b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultServerHttpRequestBuilder.java",
                "index bb2884398a..f357909a27 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultServerHttpRequestBuilder.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/DefaultServerHttpRequestBuilder.java",
                "@@ -22,4 +22,2 @@ import java.net.URISyntaxException;",
                " import java.util.LinkedList;",
                "-import java.util.List;",
                "-import java.util.Map;",
                " import java.util.function.Consumer;",
                "@@ -82,10 +80,4 @@ class DefaultServerHttpRequestBuilder implements ServerHttpRequest.Builder {",
                "-\tprivate static <K, V> void copyMultiValueMap(MultiValueMap<K,V> source,",
                "-\t\t\tMultiValueMap<K,V> destination) {",
                "-",
                "-\t\tfor (Map.Entry<K, List<V>> entry : source.entrySet()) {",
                "-\t\t\tK key = entry.getKey();",
                "-\t\t\tList<V> values = new LinkedList<>(entry.getValue());",
                "-\t\t\tdestination.put(key, values);",
                "-\t\t}",
                "+\tprivate static <K, V> void copyMultiValueMap(MultiValueMap<K,V> source, MultiValueMap<K,V> target) {",
                "+\t\tsource.forEach((key, value) -> target.put(key, new LinkedList<>(value)));",
                " \t}",
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpResponse.java b/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpResponse.java",
                "index b0e071c2ed..7eb2465a18 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpResponse.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpResponse.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,4 +19,2 @@ package org.springframework.http.server.reactive;",
                " import java.io.File;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "@@ -87,7 +85,7 @@ class ReactorServerHttpResponse extends AbstractServerHttpResponse implements Ze",
                " \tprotected void applyHeaders() {",
                "-\t\tfor (Map.Entry<String, List<String>> entry : getHeaders().entrySet()) {",
                "-\t\t\tfor (String value : entry.getValue()) {",
                "-\t\t\t\tthis.response.responseHeaders().add(entry.getKey(), value);",
                "+\t\tgetHeaders().forEach((headerName, headerValues) -> {",
                "+\t\t\tfor (String value : headerValues) {",
                "+\t\t\t\tthis.response.responseHeaders().add(headerName, value);",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t}",
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/reactive/ServletServerHttpResponse.java b/spring-web/src/main/java/org/springframework/http/server/reactive/ServletServerHttpResponse.java",
                "index 37e12071dd..143667a2db 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/reactive/ServletServerHttpResponse.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServletServerHttpResponse.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -21,4 +21,2 @@ import java.io.InputStream;",
                " import java.nio.charset.Charset;",
                "-import java.util.List;",
                "-import java.util.Map;",
                " import javax.servlet.AsyncContext;",
                "@@ -101,8 +99,7 @@ class ServletServerHttpResponse extends AbstractListenerServerHttpResponse {",
                " \tprotected void applyHeaders() {",
                "-\t\tfor (Map.Entry<String, List<String>> entry : getHeaders().entrySet()) {",
                "-\t\t\tString headerName = entry.getKey();",
                "-\t\t\tfor (String headerValue : entry.getValue()) {",
                "+\t\tgetHeaders().forEach((headerName, headerValues) -> {",
                "+\t\t\tfor (String headerValue : headerValues) {",
                " \t\t\t\tthis.response.addHeader(headerName, headerValue);",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t\tMediaType contentType = getHeaders().getContentType();",
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java b/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java",
                "index d6c93f896c..7d93e21374 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java",
                "@@ -23,4 +23,2 @@ import java.nio.channels.FileChannel;",
                " import java.nio.file.StandardOpenOption;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "@@ -84,6 +82,4 @@ class UndertowServerHttpResponse extends AbstractListenerServerHttpResponse impl",
                " \tprotected void applyHeaders() {",
                "-\t\tfor (Map.Entry<String, List<String>> entry : getHeaders().entrySet()) {",
                "-\t\t\tHttpString headerName = HttpString.tryFromString(entry.getKey());",
                "-\t\t\tthis.exchange.getResponseHeaders().addAll(headerName, entry.getValue());",
                "-\t\t}",
                "+\t\tgetHeaders().forEach((headerName, headerValues) ->",
                "+\t\t\t\tthis.exchange.getResponseHeaders().addAll(HttpString.tryFromString(headerName), headerValues));",
                " \t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java",
                "index f132060802..a68c94713a 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -23,3 +23,2 @@ import java.util.Locale;",
                " import java.util.Map;",
                "-import java.util.Map.Entry;",
                " import java.util.Properties;",
                "@@ -162,7 +161,7 @@ public class ContentNegotiationManagerFactoryBean",
                " \t\tif (!CollectionUtils.isEmpty(mediaTypes)) {",
                "-\t\t\tfor (Entry<Object, Object> entry : mediaTypes.entrySet()) {",
                "-\t\t\t\tString extension = ((String)entry.getKey()).toLowerCase(Locale.ENGLISH);",
                "-\t\t\t\tMediaType mediaType = MediaType.valueOf((String) entry.getValue());",
                "+\t\t\tmediaTypes.forEach((key, value) -> {",
                "+\t\t\t\tString extension = ((String) key).toLowerCase(Locale.ENGLISH);",
                "+\t\t\t\tMediaType mediaType = MediaType.valueOf((String) value);",
                " \t\t\t\tthis.mediaTypes.put(extension, mediaType);",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java b/spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java",
                "index 30795bdd67..7bf28fd430 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -24,3 +24,2 @@ import java.util.Locale;",
                " import java.util.Map;",
                "-import java.util.Map.Entry;",
                " import java.util.concurrent.ConcurrentHashMap;",
                "@@ -45,7 +44,5 @@ public class MappingMediaTypeFileExtensionResolver implements MediaTypeFileExten",
                "-\tprivate final ConcurrentMap<String, MediaType> mediaTypes =",
                "-\t\t\tnew ConcurrentHashMap<>(64);",
                "+\tprivate final ConcurrentMap<String, MediaType> mediaTypes = new ConcurrentHashMap<>(64);",
                "-\tprivate final MultiValueMap<MediaType, String> fileExtensions =",
                "-\t\t\tnew LinkedMultiValueMap<>();",
                "+\tprivate final MultiValueMap<MediaType, String> fileExtensions = new LinkedMultiValueMap<>();",
                "@@ -59,9 +56,8 @@ public class MappingMediaTypeFileExtensionResolver implements MediaTypeFileExten",
                " \t\tif (mediaTypes != null) {",
                "-\t\t\tfor (Entry<String, MediaType> entries : mediaTypes.entrySet()) {",
                "-\t\t\t\tString extension = entries.getKey().toLowerCase(Locale.ENGLISH);",
                "-\t\t\t\tMediaType mediaType = entries.getValue();",
                "-\t\t\t\tthis.mediaTypes.put(extension, mediaType);",
                "-\t\t\t\tthis.fileExtensions.add(mediaType, extension);",
                "-\t\t\t\tthis.allFileExtensions.add(extension);",
                "-\t\t\t}",
                "+\t\t\tmediaTypes.forEach((extension, mediaType) -> {",
                "+\t\t\t\tString lowerCaseExtension = extension.toLowerCase(Locale.ENGLISH);",
                "+\t\t\t\tthis.mediaTypes.put(lowerCaseExtension, mediaType);",
                "+\t\t\t\tthis.fileExtensions.add(mediaType, lowerCaseExtension);",
                "+\t\t\t\tthis.allFileExtensions.add(lowerCaseExtension);",
                "+\t\t\t});",
                " \t\t}",
                "@@ -93,3 +89,3 @@ public class MappingMediaTypeFileExtensionResolver implements MediaTypeFileExten",
                " \t\tList<String> fileExtensions = this.fileExtensions.get(mediaType);",
                "-\t\treturn (fileExtensions != null) ? fileExtensions : Collections.emptyList();",
                "+\t\treturn (fileExtensions != null ? fileExtensions : Collections.emptyList());",
                " \t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/bind/WebDataBinder.java b/spring-web/src/main/java/org/springframework/web/bind/WebDataBinder.java",
                "index 2a627dbd85..923f942739 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/bind/WebDataBinder.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/bind/WebDataBinder.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -317,5 +317,3 @@ public class WebDataBinder extends DataBinder {",
                " \tprotected void bindMultipart(Map<String, List<MultipartFile>> multipartFiles, MutablePropertyValues mpvs) {",
                "-\t\tfor (Map.Entry<String, List<MultipartFile>> entry : multipartFiles.entrySet()) {",
                "-\t\t\tString key = entry.getKey();",
                "-\t\t\tList<MultipartFile> values = entry.getValue();",
                "+\t\tmultipartFiles.forEach((key, values) -> {",
                " \t\t\tif (values.size() == 1) {",
                "@@ -329,3 +327,3 @@ public class WebDataBinder extends DataBinder {",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/bind/support/WebRequestDataBinder.java b/spring-web/src/main/java/org/springframework/web/bind/support/WebRequestDataBinder.java",
                "index b0c40c40e7..d466731ad5 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/bind/support/WebRequestDataBinder.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/bind/support/WebRequestDataBinder.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,4 +18,2 @@ package org.springframework.web.bind.support;",
                "-import java.util.List;",
                "-import java.util.Map;",
                " import javax.servlet.http.HttpServletRequest;",
                "@@ -143,7 +141,7 @@ public class WebRequestDataBinder extends WebDataBinder {",
                " \t\t\t}",
                "-\t\t\tfor (Map.Entry<String, List<Part>> entry: map.entrySet()) {",
                "-\t\t\t\tif (entry.getValue().size() == 1) {",
                "-\t\t\t\t\tPart part = entry.getValue().get(0);",
                "+\t\t\tmap.forEach((key, values) -> {",
                "+\t\t\t\tif (values.size() == 1) {",
                "+\t\t\t\t\tPart part = values.get(0);",
                " \t\t\t\t\tif (isBindEmptyMultipartFiles() || part.getSize() > 0) {",
                "-\t\t\t\t\t\tmpvs.add(entry.getKey(), part);",
                "+\t\t\t\t\t\tmpvs.add(key, part);",
                " \t\t\t\t\t}",
                "@@ -151,5 +149,5 @@ public class WebRequestDataBinder extends WebDataBinder {",
                " \t\t\t\telse {",
                "-\t\t\t\t\tmpvs.add(entry.getKey(), entry.getValue());",
                "+\t\t\t\t\tmpvs.add(key, values);",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java",
                "index a9bc98c296..18b41589a6 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java",
                "@@ -914,5 +914,3 @@ public class RestTemplate extends InterceptingHttpAccessor implements RestOperat",
                " \t\t\t\tif (!requestHeaders.isEmpty()) {",
                "-\t\t\t\t\tfor (Map.Entry<String, List<String>> entry : requestHeaders.entrySet()) {",
                "-\t\t\t\t\t\thttpHeaders.put(entry.getKey(), new LinkedList<>(entry.getValue()));",
                "-\t\t\t\t\t}",
                "+\t\t\t\t\trequestHeaders.forEach((key, values) -> httpHeaders.put(key, new LinkedList<>(values)));",
                " \t\t\t\t}",
                "@@ -935,5 +933,3 @@ public class RestTemplate extends InterceptingHttpAccessor implements RestOperat",
                " \t\t\t\t\t\t\tif (!requestHeaders.isEmpty()) {",
                "-\t\t\t\t\t\t\t\tfor (Map.Entry<String, List<String>> entry : requestHeaders.entrySet()) {",
                "-\t\t\t\t\t\t\t\t\thttpHeaders.put(entry.getKey(), new LinkedList<>(entry.getValue()));",
                "-\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\trequestHeaders.forEach((key, values) -> httpHeaders.put(key, new LinkedList<>(values)));",
                " \t\t\t\t\t\t\t}",
                "@@ -955,5 +951,3 @@ public class RestTemplate extends InterceptingHttpAccessor implements RestOperat",
                " \t\t\t\t\t\tif (!requestHeaders.isEmpty()) {",
                "-\t\t\t\t\t\t\tfor (Map.Entry<String, List<String>> entry : requestHeaders.entrySet()) {",
                "-\t\t\t\t\t\t\t\thttpHeaders.put(entry.getKey(), new LinkedList<>(entry.getValue()));",
                "-\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\trequestHeaders.forEach((key, values) -> httpHeaders.put(key, new LinkedList<>(values)));",
                " \t\t\t\t\t\t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/method/annotation/RequestParamMapMethodArgumentResolver.java b/spring-web/src/main/java/org/springframework/web/method/annotation/RequestParamMapMethodArgumentResolver.java",
                "index 7c4d9e09ee..8e9c482c01 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/method/annotation/RequestParamMapMethodArgumentResolver.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/method/annotation/RequestParamMapMethodArgumentResolver.java",
                "@@ -66,7 +66,7 @@ public class RequestParamMapMethodArgumentResolver implements HandlerMethodArgum",
                " \t\t\tMultiValueMap<String, String> result = new LinkedMultiValueMap<>(parameterMap.size());",
                "-\t\t\tfor (Map.Entry<String, String[]> entry : parameterMap.entrySet()) {",
                "-\t\t\t\tfor (String value : entry.getValue()) {",
                "-\t\t\t\t\tresult.add(entry.getKey(), value);",
                "+\t\t\tparameterMap.forEach((key, values) -> {",
                "+\t\t\t\tfor (String value : values) {",
                "+\t\t\t\t\tresult.add(key, value);",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t\treturn result;",
                "@@ -75,7 +75,7 @@ public class RequestParamMapMethodArgumentResolver implements HandlerMethodArgum",
                " \t\t\tMap<String, String> result = new LinkedHashMap<>(parameterMap.size());",
                "-\t\t\tfor (Map.Entry<String, String[]> entry : parameterMap.entrySet()) {",
                "-\t\t\t\tif (entry.getValue().length > 0) {",
                "-\t\t\t\t\tresult.put(entry.getKey(), entry.getValue()[0]);",
                "+\t\t\tparameterMap.forEach((key, values) -> {",
                "+\t\t\t\tif (values.length > 0) {",
                "+\t\t\t\t\tresult.put(key, values[0]);",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t\treturn result;",
                "diff --git a/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java",
                "index e8614657c8..a0f4160cef 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java",
                "@@ -28,3 +28,2 @@ import java.util.Iterator;",
                " import java.util.List;",
                "-import java.util.Map;",
                "@@ -153,5 +152,3 @@ final class HierarchicalUriComponents extends UriComponents {",
                " \t\t\tStringBuilder queryBuilder = new StringBuilder();",
                "-\t\t\tfor (Map.Entry<String, List<String>> entry : this.queryParams.entrySet()) {",
                "-\t\t\t\tString name = entry.getKey();",
                "-\t\t\t\tList<String> values = entry.getValue();",
                "+\t\t\tthis.queryParams.forEach((name, values) -> {",
                " \t\t\t\tif (CollectionUtils.isEmpty(values)) {",
                "@@ -173,3 +170,3 @@ final class HierarchicalUriComponents extends UriComponents {",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t\treturn queryBuilder.toString();",
                "@@ -218,10 +215,10 @@ final class HierarchicalUriComponents extends UriComponents {",
                " \t\tMultiValueMap<String, String> result = new LinkedMultiValueMap<>(size);",
                "-\t\tfor (Map.Entry<String, List<String>> entry : this.queryParams.entrySet()) {",
                "-\t\t\tString name = encodeUriComponent(entry.getKey(), charset, Type.QUERY_PARAM);",
                "-\t\t\tList<String> values = new ArrayList<>(entry.getValue().size());",
                "-\t\t\tfor (String value : entry.getValue()) {",
                "-\t\t\t\tvalues.add(encodeUriComponent(value, charset, Type.QUERY_PARAM));",
                "-\t\t\t}",
                "-\t\t\tresult.put(name, values);",
                "-\t\t}",
                "+\t\tthis.queryParams.forEach((key, values) -> {",
                "+\t\t\tString name = encodeUriComponent(key, charset, Type.QUERY_PARAM);",
                "+\t\t\tList<String> encodedValues = new ArrayList<>(values.size());",
                "+\t\t\tfor (String value : values) {",
                "+\t\t\t\tencodedValues.add(encodeUriComponent(value, charset, Type.QUERY_PARAM));",
                "+\t\t\t}",
                "+\t\t\tresult.put(name, encodedValues);",
                "+\t\t});",
                " \t\treturn result;",
                "@@ -300,8 +297,8 @@ final class HierarchicalUriComponents extends UriComponents {",
                " \t\tthis.path.verify();",
                "-\t\tfor (Map.Entry<String, List<String>> entry : queryParams.entrySet()) {",
                "-\t\t\tverifyUriComponent(entry.getKey(), Type.QUERY_PARAM);",
                "-\t\t\tfor (String value : entry.getValue()) {",
                "+\t\tthis.queryParams.forEach((key, values) -> {",
                "+\t\t\tverifyUriComponent(key, Type.QUERY_PARAM);",
                "+\t\t\tfor (String value : values) {",
                " \t\t\t\tverifyUriComponent(value, Type.QUERY_PARAM);",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t\tverifyUriComponent(getFragment(), Type.FRAGMENT);",
                "@@ -362,11 +359,11 @@ final class HierarchicalUriComponents extends UriComponents {",
                " \t\tMultiValueMap<String, String> result = new LinkedMultiValueMap<>(size);",
                "-\t\tvariables = new QueryUriTemplateVariables(variables);",
                "-\t\tfor (Map.Entry<String, List<String>> entry : this.queryParams.entrySet()) {",
                "-\t\t\tString name = expandUriComponent(entry.getKey(), variables);",
                "-\t\t\tList<String> values = new ArrayList<>(entry.getValue().size());",
                "-\t\t\tfor (String value : entry.getValue()) {",
                "-\t\t\t\tvalues.add(expandUriComponent(value, variables));",
                "-\t\t\t}",
                "-\t\t\tresult.put(name, values);",
                "-\t\t}",
                "+\t\tUriTemplateVariables queryVariables = new QueryUriTemplateVariables(variables);",
                "+\t\tthis.queryParams.forEach((key, values) -> {",
                "+\t\t\tString name = expandUriComponent(key, queryVariables);",
                "+\t\t\tList<String> expandedValues = new ArrayList<>(values.size());",
                "+\t\t\tfor (String value : values) {",
                "+\t\t\t\texpandedValues.add(expandUriComponent(value, queryVariables));",
                "+\t\t\t}",
                "+\t\t\tresult.put(name, expandedValues);",
                "+\t\t});",
                " \t\treturn result;",
                "diff --git a/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "index ecb455e3d1..feefad6540 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -22,3 +22,2 @@ import java.util.LinkedHashMap;",
                " import java.util.Map;",
                "-import java.util.Map.Entry;",
                " import java.util.Properties;",
                "@@ -546,5 +545,3 @@ public class UrlPathHelper {",
                " \t\t\tMap<String, String> decodedVars = new LinkedHashMap<>(vars.size());",
                "-\t\t\tfor (Entry<String, String> entry : vars.entrySet()) {",
                "-\t\t\t\tdecodedVars.put(entry.getKey(), decodeInternal(request, entry.getValue()));",
                "-\t\t\t}",
                "+\t\t\tvars.forEach((key, value) -> decodedVars.put(key, decodeInternal(request, value)));",
                " \t\t\treturn decodedVars;",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java",
                "index 1d9dafde53..2fad402232 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -38,3 +38,2 @@ import org.springframework.http.server.reactive.ServerHttpRequest;",
                " import org.springframework.http.server.reactive.ServerHttpResponse;",
                "-import org.springframework.util.Assert;",
                " import org.springframework.util.MultiValueMap;",
                "@@ -67,3 +66,2 @@ public abstract class BodyExtractors {",
                " \tpublic static <T> BodyExtractor<Mono<T>, ReactiveHttpInputMessage> toMono(Class<? extends T> elementClass) {",
                "-\t\tAssert.notNull(elementClass, \"'elementClass' must not be null\");",
                " \t\treturn toMono(ResolvableType.forClass(elementClass));",
                "@@ -89,3 +87,2 @@ public abstract class BodyExtractors {",
                "-\t\tAssert.notNull(typeReference, \"'typeReference' must not be null\");",
                " \t\treturn toMono(ResolvableType.forType(typeReference.getType()));",
                "@@ -94,3 +91,2 @@ public abstract class BodyExtractors {",
                " \tstatic <T> BodyExtractor<Mono<T>, ReactiveHttpInputMessage> toMono(ResolvableType elementType) {",
                "-\t\tAssert.notNull(elementType, \"'elementType' must not be null\");",
                " \t\treturn (inputMessage, context) -> readWithMessageReaders(inputMessage, context,",
                "@@ -119,3 +115,2 @@ public abstract class BodyExtractors {",
                " \tpublic static <T> BodyExtractor<Flux<T>, ReactiveHttpInputMessage> toFlux(Class<? extends T> elementClass) {",
                "-\t\tAssert.notNull(elementClass, \"'elementClass' must not be null\");",
                " \t\treturn toFlux(ResolvableType.forClass(elementClass));",
                "@@ -141,3 +136,2 @@ public abstract class BodyExtractors {",
                "-\t\tAssert.notNull(typeReference, \"'typeReference' must not be null\");",
                " \t\treturn toFlux(ResolvableType.forType(typeReference.getType()));",
                "@@ -147,3 +141,2 @@ public abstract class BodyExtractors {",
                " \tstatic <T> BodyExtractor<Flux<T>, ReactiveHttpInputMessage> toFlux(ResolvableType elementType) {",
                "-\t\tAssert.notNull(elementType, \"'elementType' must not be null\");",
                " \t\treturn (inputMessage, context) -> readWithMessageReaders(inputMessage, context,",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserters.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserters.java",
                "index f1a0cfbdeb..5c043d0a29 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserters.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserters.java",
                "@@ -19,3 +19,2 @@ package org.springframework.web.reactive.function;",
                " import java.util.List;",
                "-import java.util.Map;",
                " import java.util.Optional;",
                "@@ -89,3 +88,2 @@ public abstract class BodyInserters {",
                " \tpublic static <T> BodyInserter<T, ReactiveHttpOutputMessage> fromObject(T body) {",
                "-\t\tAssert.notNull(body, \"'body' must not be null\");",
                " \t\treturn bodyInserterFor(Mono.just(body), ResolvableType.forInstance(body));",
                "@@ -108,4 +106,2 @@ public abstract class BodyInserters {",
                "-\t\tAssert.notNull(publisher, \"'publisher' must not be null\");",
                "-\t\tAssert.notNull(elementClass, \"'elementClass' must not be null\");",
                " \t\treturn bodyInserterFor(publisher, ResolvableType.forClass(elementClass));",
                "@@ -128,4 +124,2 @@ public abstract class BodyInserters {",
                "-\t\tAssert.notNull(publisher, \"'publisher' must not be null\");",
                "-\t\tAssert.notNull(typeReference, \"'typeReference' must not be null\");",
                " \t\treturn bodyInserterFor(publisher, ResolvableType.forType(typeReference.getType()));",
                "@@ -142,3 +136,2 @@ public abstract class BodyInserters {",
                " \tpublic static <T extends Resource> BodyInserter<T, ReactiveHttpOutputMessage> fromResource(T resource) {",
                "-\t\tAssert.notNull(resource, \"'resource' must not be null\");",
                " \t\treturn (outputMessage, context) -> {",
                "@@ -182,3 +175,2 @@ public abstract class BodyInserters {",
                "-\t\tAssert.notNull(eventsPublisher, \"'eventsPublisher' must not be null\");",
                " \t\treturn (serverResponse, context) -> {",
                "@@ -210,3 +202,2 @@ public abstract class BodyInserters {",
                " \tpublic static FormInserter<String> fromFormData(MultiValueMap<String, String> formData) {",
                "-\t\tAssert.notNull(formData, \"'formData' must not be null\");",
                " \t\treturn new DefaultFormInserter().with(formData);",
                "@@ -391,3 +382,3 @@ public abstract class BodyInserters {",
                " \t\t */",
                "-\t\tFormInserter<T> with(String key, @Nullable T value);",
                "+\t\tFormInserter<T> with(String key, T value);",
                "@@ -437,7 +428,2 @@ public abstract class BodyInserters {",
                "-",
                "-\t\tpublic DefaultFormInserter() {",
                "-\t\t}",
                "-",
                "-",
                " \t\t@Override",
                "@@ -469,10 +455,4 @@ public abstract class BodyInserters {",
                "-",
                "-\t\tpublic DefaultMultipartInserter() {",
                "-\t\t}",
                "-",
                "-",
                " \t\t@Override",
                "-\t\tpublic MultipartInserter with(String key, @Nullable Object value) {",
                "-\t\t\tAssert.notNull(value, \"'value' must not be null\");",
                "+\t\tpublic MultipartInserter with(String key, Object value) {",
                " \t\t\tthis.builder.part(key, value);",
                "@@ -488,8 +468,7 @@ public abstract class BodyInserters {",
                " \t\tprivate MultipartInserter withInternal(MultiValueMap<String, ?> values) {",
                "-\t\t\tAssert.notNull(values, \"'values' must not be null\");",
                "-\t\t\tfor (Map.Entry<String, ? extends List<?>> entry : values.entrySet()) {",
                "-\t\t\t\tfor (Object value : entry.getValue()) {",
                "-\t\t\t\t\tthis.builder.part(entry.getKey(), value);",
                "+\t\t\tvalues.forEach((key, valueList) -> {",
                "+\t\t\t\tfor (Object value : valueList) {",
                "+\t\t\t\t\tthis.builder.part(key, value);",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t\treturn this;",
                "@@ -498,4 +477,4 @@ public abstract class BodyInserters {",
                " \t\t@Override",
                "-\t\tpublic <T, P extends Publisher<T>> MultipartInserter withPublisher(String name,",
                "-\t\t\t\tP publisher, Class<T> elementClass) {",
                "+\t\tpublic <T, P extends Publisher<T>> MultipartInserter withPublisher(",
                "+\t\t\t\tString name, P publisher, Class<T> elementClass) {",
                "@@ -506,4 +485,4 @@ public abstract class BodyInserters {",
                " \t\t@Override",
                "-\t\tpublic <T, P extends Publisher<T>> MultipartInserter withPublisher(String name,",
                "-\t\t\t\tP publisher, ParameterizedTypeReference<T> typeReference) {",
                "+\t\tpublic <T, P extends Publisher<T>> MultipartInserter withPublisher(",
                "+\t\t\t\tString name, P publisher, ParameterizedTypeReference<T> typeReference) {",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java",
                "index 8247c9f033..8c71b36346 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java",
                "@@ -247,7 +247,6 @@ public abstract class AbstractHandlerMethodMapping<T> extends AbstractHandlerMap",
                " \t\t\t}",
                "-\t\t\tfor (Map.Entry<Method, T> entry : methods.entrySet()) {",
                "-\t\t\t\tMethod invocableMethod = AopUtils.selectInvocableMethod(entry.getKey(), userType);",
                "-\t\t\t\tT mapping = entry.getValue();",
                "+\t\t\tmethods.forEach((method, mapping) -> {",
                "+\t\t\t\tMethod invocableMethod = AopUtils.selectInvocableMethod(method, userType);",
                " \t\t\t\tregisterHandlerMethod(handler, invocableMethod, mapping);",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java",
                "index e70540a131..b7da900e02 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java",
                "@@ -25,3 +25,2 @@ import java.util.List;",
                " import java.util.Map;",
                "-import java.util.Map.Entry;",
                " import java.util.concurrent.ConcurrentHashMap;",
                "@@ -472,3 +471,3 @@ public class ExceptionHandlerExceptionResolver extends AbstractHandlerMethodExce",
                "-\t\tfor (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {",
                "+\t\tfor (Map.Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {",
                " \t\t\tControllerAdviceBean advice = entry.getKey();",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "index 01de47e905..ac5457119c 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "@@ -702,6 +702,5 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\tHttpHeaders resourceHeaders = ((HttpResource) resource).getResponseHeaders();",
                "-\t\t\tfor (Map.Entry<String, List<String>> entry : resourceHeaders.entrySet()) {",
                "-\t\t\t\tString headerName = entry.getKey();",
                "+\t\t\tresourceHeaders.forEach((headerName, headerValues) -> {",
                " \t\t\t\tboolean first = true;",
                "-\t\t\t\tfor (String headerValue : entry.getValue()) {",
                "+\t\t\t\tfor (String headerValue : headerValues) {",
                " \t\t\t\t\tif (first) {",
                "@@ -714,3 +713,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketExtension.java b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketExtension.java",
                "index be885c3460..4a80e48a90 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketExtension.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/WebSocketExtension.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -121,8 +121,3 @@ public class WebSocketExtension {",
                " \t\tstr.append(this.name);",
                "-\t\tfor (Map.Entry<String, String> entry : this.parameters.entrySet()) {",
                "-\t\t\tstr.append(';');",
                "-\t\t\tstr.append(entry.getKey());",
                "-\t\t\tstr.append('=');",
                "-\t\t\tstr.append(entry.getValue());",
                "-\t\t}",
                "+\t\tthis.parameters.forEach((key, value) -> str.append(';').append(key).append('=').append(value));",
                " \t\treturn str.toString();",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter.java b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter.java",
                "index 45fab4637b..4a8c2de0e1 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2013 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,4 +18,2 @@ package org.springframework.web.socket.adapter.jetty;",
                "-import java.util.Map;",
                "-",
                " import org.eclipse.jetty.websocket.api.extensions.ExtensionConfig;",
                "@@ -32,6 +30,5 @@ public class WebSocketToJettyExtensionConfigAdapter extends ExtensionConfig {",
                " \t\tsuper(extension.getName());",
                "-\t\tfor (Map.Entry<String,String> p : extension.getParameters().entrySet()) {",
                "-\t\t\tsuper.setParameter(p.getKey(), p.getValue());",
                "-\t\t}",
                "+\t\textension.getParameters().forEach(super::setParameter);",
                " \t}",
                "+",
                " }",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/GlassFishRequestUpgradeStrategy.java b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/GlassFishRequestUpgradeStrategy.java",
                "index dc7c60181d..d1fb09584e 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/GlassFishRequestUpgradeStrategy.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/GlassFishRequestUpgradeStrategy.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -20,4 +20,2 @@ import java.io.IOException;",
                " import java.lang.reflect.Constructor;",
                "-import java.util.List;",
                "-import java.util.Map;",
                " import javax.servlet.ServletException;",
                "@@ -69,5 +67,3 @@ public class GlassFishRequestUpgradeStrategy extends AbstractTyrusRequestUpgrade",
                " \t\tresponse.setStatus(upgradeResponse.getStatus());",
                "-\t\tfor (Map.Entry<String, List<String>> entry : upgradeResponse.getHeaders().entrySet()) {",
                "-\t\t\tresponse.addHeader(entry.getKey(), Utils.getHeaderFromList(entry.getValue()));",
                "-\t\t}",
                "+\t\tupgradeResponse.getHeaders().forEach((key, value) -> response.addHeader(key, Utils.getHeaderFromList(value)));",
                " \t\tresponse.flushBuffer();",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/WebLogicRequestUpgradeStrategy.java b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/WebLogicRequestUpgradeStrategy.java",
                "index 16bda831e2..d513e37fac 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/WebLogicRequestUpgradeStrategy.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/WebLogicRequestUpgradeStrategy.java",
                "@@ -21,4 +21,2 @@ import java.lang.reflect.Constructor;",
                " import java.lang.reflect.Method;",
                "-import java.util.List;",
                "-import java.util.Map;",
                " import javax.servlet.AsyncContext;",
                "@@ -65,5 +63,3 @@ public class WebLogicRequestUpgradeStrategy extends AbstractTyrusRequestUpgradeS",
                " \t\tresponse.setStatus(upgradeResponse.getStatus());",
                "-\t\tfor (Map.Entry<String, List<String>> entry : upgradeResponse.getHeaders().entrySet()) {",
                "-\t\t\tresponse.addHeader(entry.getKey(), Utils.getHeaderFromList(entry.getValue()));",
                "-\t\t}",
                "+\t\tupgradeResponse.getHeaders().forEach((key, value) -> response.addHeader(key, Utils.getHeaderFromList(value)));",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java",
                "index 06a2660538..f9bf6c4071 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java",
                "@@ -22,4 +22,2 @@ import java.nio.ByteBuffer;",
                " import java.util.Enumeration;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "@@ -163,7 +161,7 @@ public class JettyXhrTransport extends AbstractXhrTransport implements Lifecycle",
                " \tprivate static void addHttpHeaders(Request request, HttpHeaders headers) {",
                "-\t\tfor (Map.Entry<String, List<String>> entry : headers.entrySet()) {",
                "-\t\t\tfor (String value : entry.getValue()) {",
                "-\t\t\t\trequest.header(entry.getKey(), value);",
                "+\t\theaders.forEach((key, values) -> {",
                "+\t\t\tfor (String value : values) {",
                "+\t\t\t\trequest.header(key, value);",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t}",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/UndertowXhrTransport.java b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/UndertowXhrTransport.java",
                "index c2611c7e76..50f9783e16 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/UndertowXhrTransport.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/UndertowXhrTransport.java",
                "@@ -23,3 +23,2 @@ import java.nio.ByteBuffer;",
                " import java.util.List;",
                "-import java.util.Map;",
                " import java.util.concurrent.CopyOnWriteArrayList;",
                "@@ -173,7 +172,7 @@ public class UndertowXhrTransport extends AbstractXhrTransport {",
                " \t\tHeaderMap headerMap = request.getRequestHeaders();",
                "-\t\tfor (Map.Entry<String, List<String>> entry : headers.entrySet()) {",
                "-\t\t\tfor (String value : entry.getValue()) {",
                "-\t\t\t\theaderMap.add(HttpString.tryFromString(entry.getKey()), value);",
                "+\t\theaders.forEach((key, values) -> {",
                "+\t\t\tfor (String value : values) {",
                "+\t\t\t\theaderMap.add(HttpString.tryFromString(key), value);",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t}"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/PropertyEditorRegistrySupport.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/config/CustomScopeConfigurer.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/support/BeanDefinitionValueResolver.java",
                "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java",
                "spring-core/src/main/java/org/springframework/core/Constants.java",
                "spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "spring-core/src/main/java/org/springframework/core/io/support/SpringFactoriesLoader.java",
                "spring-core/src/main/java/org/springframework/util/LinkedMultiValueMap.java",
                "spring-core/src/main/java/org/springframework/util/MimeType.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcCall.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/support/CustomSQLExceptionTranslatorRegistrar.java",
                "spring-jms/src/main/java/org/springframework/jms/support/converter/SimpleMessageConverter.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/SimpAttributes.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessagingTemplate.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SubscriptionRegistry.java",
                "spring-web/src/main/java/org/springframework/http/HttpHeaders.java",
                "spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequest.java",
                "spring-web/src/main/java/org/springframework/http/client/Netty4ClientHttpRequest.java",
                "spring-web/src/main/java/org/springframework/http/client/OkHttp3ClientHttpRequestFactory.java",
                "spring-web/src/main/java/org/springframework/http/client/SimpleBufferingClientHttpRequest.java",
                "spring-web/src/main/java/org/springframework/http/server/ServletServerHttpResponse.java",
                "spring-web/src/main/java/org/springframework/http/server/reactive/DefaultServerHttpRequestBuilder.java",
                "spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpResponse.java",
                "spring-web/src/main/java/org/springframework/http/server/reactive/ServletServerHttpResponse.java",
                "spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java",
                "spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java",
                "spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java",
                "spring-web/src/main/java/org/springframework/web/bind/WebDataBinder.java",
                "spring-web/src/main/java/org/springframework/web/bind/support/WebRequestDataBinder.java",
                "spring-web/src/main/java/org/springframework/web/client/RestTemplate.java",
                "spring-web/src/main/java/org/springframework/web/method/annotation/RequestParamMapMethodArgumentResolver.java",
                "spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java",
                "spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyExtractors.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserters.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/WebSocketExtension.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/server/standard/GlassFishRequestUpgradeStrategy.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/server/standard/WebLogicRequestUpgradeStrategy.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/UndertowXhrTransport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "4aae6a6dda54dc594285b3cc4df93fb6ff041c53"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource, configure, file, serve, request",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b8c92ce9319a5baa71dd4dba1065be19e64cbb37",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521123475,
            "hunks": 56,
            "message": "Consistent volatile access to running flag in Lifecycle implementations Issue: SPR-16596 Issue: SPR-16488 (cherry picked from commit d4a8f76)",
            "diff": [
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java",
                "index 0de5f39a8d..c701c3ae43 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -78,3 +78,3 @@ public abstract class AbstractJmsListeningContainer extends JmsDestinationAccess",
                "-\tprivate boolean running = false;",
                "+\tprivate volatile boolean running = false;",
                "@@ -346,5 +346,3 @@ public abstract class AbstractJmsListeningContainer extends JmsDestinationAccess",
                " \tpublic final boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn (this.running && runningAllowed());",
                "-\t\t}",
                "+\t\treturn (this.running && runningAllowed());",
                " \t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.java",
                "index 814ab49527..1c67f32f9d 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -113,6 +113,6 @@ public class SimpAnnotationMethodMessageHandler extends AbstractMethodMessageHan",
                "-\tprivate final Object lifecycleMonitor = new Object();",
                "-",
                " \tprivate volatile boolean running = false;",
                "+\tprivate final Object lifecycleMonitor = new Object();",
                "+",
                "@@ -300,5 +300,3 @@ public class SimpAnnotationMethodMessageHandler extends AbstractMethodMessageHan",
                " \tpublic final boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn this.running;",
                "-\t\t}",
                "+\t\treturn this.running;",
                " \t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java",
                "index af7690661d..eb17ff80e1 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -155,5 +155,3 @@ public abstract class AbstractBrokerMessageHandler",
                " \t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\tif (logger.isInfoEnabled()) {",
                "-\t\t\t\tlogger.info(\"Starting...\");",
                "-\t\t\t}",
                "+\t\t\tlogger.info(\"Starting...\");",
                " \t\t\tthis.clientInboundChannel.subscribe(this);",
                "@@ -175,5 +173,3 @@ public abstract class AbstractBrokerMessageHandler",
                " \t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\tif (logger.isInfoEnabled()) {",
                "-\t\t\t\tlogger.info(\"Stopping...\");",
                "-\t\t\t}",
                "+\t\t\tlogger.info(\"Stopping...\");",
                " \t\t\tstopInternal();",
                "@@ -208,5 +204,3 @@ public abstract class AbstractBrokerMessageHandler",
                " \tpublic final boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn this.running;",
                "-\t\t}",
                "+\t\treturn this.running;",
                " \t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "index 77a3528983..c6383aff04 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -66,6 +66,6 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                "-\tprivate final Object lifecycleMonitor = new Object();",
                "-",
                " \tprivate volatile boolean running = false;",
                "+\tprivate final Object lifecycleMonitor = new Object();",
                "+",
                "@@ -182,5 +182,3 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                " \tpublic final boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn this.running;",
                "-\t\t}",
                "+\t\treturn this.running;",
                " \t}",
                "diff --git a/spring-tx/src/main/java/org/springframework/jca/endpoint/GenericMessageEndpointManager.java b/spring-tx/src/main/java/org/springframework/jca/endpoint/GenericMessageEndpointManager.java",
                "index 61253e025c..f88326a43a 100644",
                "--- a/spring-tx/src/main/java/org/springframework/jca/endpoint/GenericMessageEndpointManager.java",
                "+++ b/spring-tx/src/main/java/org/springframework/jca/endpoint/GenericMessageEndpointManager.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -158,3 +158,3 @@ public class GenericMessageEndpointManager implements SmartLifecycle, Initializi",
                "-\tprivate boolean running = false;",
                "+\tprivate volatile boolean running = false;",
                "@@ -320,5 +320,3 @@ public class GenericMessageEndpointManager implements SmartLifecycle, Initializi",
                " \tpublic boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn this.running;",
                "-\t\t}",
                "+\t\treturn this.running;",
                " \t}",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/client/ConnectionManagerSupport.java b/spring-websocket/src/main/java/org/springframework/web/socket/client/ConnectionManagerSupport.java",
                "index 7146a59395..f5638ea833 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/client/ConnectionManagerSupport.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/client/ConnectionManagerSupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -40,3 +40,2 @@ public abstract class ConnectionManagerSupport implements SmartLifecycle {",
                "-",
                " \tprivate final URI uri;",
                "@@ -45,6 +44,6 @@ public abstract class ConnectionManagerSupport implements SmartLifecycle {",
                "-\tprivate boolean running = false;",
                "-",
                " \tprivate int phase = Integer.MAX_VALUE;",
                "+\tprivate volatile boolean running = false;",
                "+",
                " \tprivate final Object lifecycleMonitor = new Object();",
                "@@ -163,5 +162,3 @@ public abstract class ConnectionManagerSupport implements SmartLifecycle {",
                " \tpublic boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn this.running;",
                "-\t\t}",
                "+\t\treturn this.running;",
                " \t}",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java b/spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java",
                "index d0cd29afa5..813c9ca15c 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -62,4 +62,2 @@ public class JettyWebSocketClient extends AbstractWebSocketClient implements Lif",
                "-\tprivate final Object lifecycleMonitor = new Object();",
                "-",
                " \tprivate AsyncListenableTaskExecutor taskExecutor = new SimpleAsyncTaskExecutor();",
                "@@ -101,8 +99,2 @@ public class JettyWebSocketClient extends AbstractWebSocketClient implements Lif",
                "-\t@Override",
                "-\tpublic boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn this.client.isStarted();",
                "-\t\t}",
                "-\t}",
                "@@ -110,14 +102,7 @@ public class JettyWebSocketClient extends AbstractWebSocketClient implements Lif",
                " \tpublic void start() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\tif (!isRunning()) {",
                "-\t\t\t\ttry {",
                "-\t\t\t\t\tif (logger.isInfoEnabled()) {",
                "-\t\t\t\t\t\tlogger.info(\"Starting Jetty WebSocketClient\");",
                "-\t\t\t\t\t}",
                "-\t\t\t\t\tthis.client.start();",
                "-\t\t\t\t}",
                "-\t\t\t\tcatch (Exception ex) {",
                "-\t\t\t\t\tthrow new IllegalStateException(\"Failed to start Jetty client\", ex);",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "+\t\ttry {",
                "+\t\t\tthis.client.start();",
                "+\t\t}",
                "+\t\tcatch (Exception ex) {",
                "+\t\t\tthrow new IllegalStateException(\"Failed to start Jetty WebSocketClient\", ex);",
                " \t\t}",
                "@@ -127,14 +112,7 @@ public class JettyWebSocketClient extends AbstractWebSocketClient implements Lif",
                " \tpublic void stop() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\tif (isRunning()) {",
                "-\t\t\t\ttry {",
                "-\t\t\t\t\tif (logger.isInfoEnabled()) {",
                "-\t\t\t\t\t\tlogger.info(\"Stopping Jetty WebSocketClient\");",
                "-\t\t\t\t\t}",
                "-\t\t\t\t\tthis.client.stop();",
                "-\t\t\t\t}",
                "-\t\t\t\tcatch (Exception ex) {",
                "-\t\t\t\t\tlogger.error(\"Error stopping Jetty WebSocketClient\", ex);",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "+\t\ttry {",
                "+\t\t\tthis.client.stop();",
                "+\t\t}",
                "+\t\tcatch (Exception ex) {",
                "+\t\t\tlogger.error(\"Failed to stop Jetty WebSocketClient\", ex);",
                " \t\t}",
                "@@ -142,2 +120,8 @@ public class JettyWebSocketClient extends AbstractWebSocketClient implements Lif",
                "+\t@Override",
                "+\tpublic boolean isRunning() {",
                "+\t\treturn this.client.isStarted();",
                "+\t}",
                "+",
                "+",
                " \t@Override",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java",
                "index 15e47e2002..fce06bdb9b 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java",
                "@@ -104,6 +104,6 @@ public class SubProtocolWebSocketHandler",
                "-\tprivate final Object lifecycleMonitor = new Object();",
                "-",
                " \tprivate volatile boolean running = false;",
                "+\tprivate final Object lifecycleMonitor = new Object();",
                "+",
                "@@ -281,5 +281,3 @@ public class SubProtocolWebSocketHandler",
                " \tpublic final boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn this.running;",
                "-\t\t}",
                "+\t\treturn this.running;",
                " \t}",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java",
                "index 3623508253..baa6aedb21 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -74,3 +74,2 @@ public class WebSocketStompClient extends StompClientSupport implements SmartLif",
                "-",
                " \tprivate final WebSocketClient webSocketClient;",
                "@@ -81,6 +80,6 @@ public class WebSocketStompClient extends StompClientSupport implements SmartLif",
                "-\tprivate boolean running = false;",
                "-",
                " \tprivate int phase = Integer.MAX_VALUE;",
                "+\tprivate volatile boolean running = false;",
                "+",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java b/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java",
                "index e4b23ff71c..24e3b84f85 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java",
                "@@ -188,6 +188,2 @@ public abstract class AbstractHandshakeHandler implements HandshakeHandler, Life",
                "-\t@Override",
                "-\tpublic boolean isRunning() {",
                "-\t\treturn this.running;",
                "-\t}",
                "@@ -221,2 +217,7 @@ public abstract class AbstractHandshakeHandler implements HandshakeHandler, Life",
                "+\t@Override",
                "+\tpublic boolean isRunning() {",
                "+\t\treturn this.running;",
                "+\t}",
                "+",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/server/support/WebSocketHttpRequestHandler.java b/spring-websocket/src/main/java/org/springframework/web/socket/server/support/WebSocketHttpRequestHandler.java",
                "index ae814653d9..b097d3e8db 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/server/support/WebSocketHttpRequestHandler.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/support/WebSocketHttpRequestHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -23,3 +23,2 @@ import java.util.List;",
                " import java.util.Map;",
                "-",
                " import javax.servlet.ServletContext;",
                "@@ -121,6 +120,2 @@ public class WebSocketHttpRequestHandler implements HttpRequestHandler, Lifecycl",
                "-\t@Override",
                "-\tpublic boolean isRunning() {",
                "-\t\treturn this.running;",
                "-\t}",
                "@@ -146,2 +141,7 @@ public class WebSocketHttpRequestHandler implements HttpRequestHandler, Lifecycl",
                "+\t@Override",
                "+\tpublic boolean isRunning() {",
                "+\t\treturn this.running;",
                "+\t}",
                "+",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java",
                "index c6c6b9dc1e..987e62ae79 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -66,4 +66,3 @@ public abstract class AbstractXhrTransport implements XhrTransport {",
                " \tpublic List<TransportType> getTransportTypes() {",
                "-\t\treturn (isXhrStreamingDisabled() ?",
                "-\t\t\t\tCollections.singletonList(TransportType.XHR) :",
                "+\t\treturn (isXhrStreamingDisabled() ? Collections.singletonList(TransportType.XHR) :",
                " \t\t\t\tArrays.asList(TransportType.XHR_STREAMING, TransportType.XHR));",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java",
                "index 80297452eb..18b0e466a1 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -22,2 +22,4 @@ import java.nio.ByteBuffer;",
                " import java.util.Enumeration;",
                "+import java.util.List;",
                "+import java.util.Map;",
                "@@ -85,3 +87,3 @@ public class JettyXhrTransport extends AbstractXhrTransport implements Lifecycle",
                " \t\tcatch (Exception ex) {",
                "-\t\t\tthrow new SockJsException(\"Failed to start \" + this, ex);",
                "+\t\t\tthrow new SockJsException(\"Failed to start JettyXhrTransport\", ex);",
                " \t\t}",
                "@@ -97,3 +99,3 @@ public class JettyXhrTransport extends AbstractXhrTransport implements Lifecycle",
                " \t\tcatch (Exception ex) {",
                "-\t\t\tthrow new SockJsException(\"Failed to stop \" + this, ex);",
                "+\t\t\tthrow new SockJsException(\"Failed to stop JettyXhrTransport\", ex);",
                " \t\t}",
                "@@ -158,5 +160,5 @@ public class JettyXhrTransport extends AbstractXhrTransport implements Lifecycle",
                " \tprivate static void addHttpHeaders(Request request, HttpHeaders headers) {",
                "-\t\tfor (String name : headers.keySet()) {",
                "-\t\t\tfor (String value : headers.get(name)) {",
                "-\t\t\t\trequest.header(name, value);",
                "+\t\tfor (Map.Entry<String, List<String>> entry : headers.entrySet()) {",
                "+\t\t\tfor (String value : entry.getValue()) {",
                "+\t\t\t\trequest.header(entry.getKey(), value);",
                " \t\t\t}",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java",
                "index 465762f4ef..99d39c3c72 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java",
                "@@ -80,3 +80,3 @@ public class TransportHandlingSockJsService extends AbstractSockJsService implem",
                "-\tprivate boolean running;",
                "+\tprivate volatile boolean running;",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/WebSocketTransportHandler.java b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/WebSocketTransportHandler.java",
                "index 6915512068..7a66b6c16e 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/WebSocketTransportHandler.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/WebSocketTransportHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,3 +19,2 @@ package org.springframework.web.socket.sockjs.transport.handler;",
                " import java.util.Map;",
                "-",
                " import javax.servlet.ServletContext;",
                "@@ -55,3 +54,3 @@ public class WebSocketTransportHandler extends AbstractTransportHandler",
                "-\tprivate boolean running;",
                "+\tprivate volatile boolean running;",
                "@@ -59,3 +58,3 @@ public class WebSocketTransportHandler extends AbstractTransportHandler",
                " \tpublic WebSocketTransportHandler(HandshakeHandler handshakeHandler) {",
                "-\t\tAssert.notNull(handshakeHandler, \"handshakeHandler must not be null\");",
                "+\t\tAssert.notNull(handshakeHandler, \"HandshakeHandler must not be null\");",
                " \t\tthis.handshakeHandler = handshakeHandler;",
                "@@ -80,6 +79,2 @@ public class WebSocketTransportHandler extends AbstractTransportHandler",
                "-\t@Override",
                "-\tpublic boolean isRunning() {",
                "-\t\treturn this.running;",
                "-\t}",
                "@@ -105,2 +100,8 @@ public class WebSocketTransportHandler extends AbstractTransportHandler",
                "+\t@Override",
                "+\tpublic boolean isRunning() {",
                "+\t\treturn this.running;",
                "+\t}",
                "+",
                "+",
                " \t@Override"
            ],
            "changed_files": [
                "spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "spring-tx/src/main/java/org/springframework/jca/endpoint/GenericMessageEndpointManager.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/client/ConnectionManagerSupport.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/server/support/WebSocketHttpRequestHandler.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/WebSocketTransportHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: ServletContext",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: serve, user, request",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "2e4963fca3647be299fa75383548e23e2448a2ce",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522252649,
            "hunks": 4,
            "message": "Revert \"Always specify charset for form data requests\" This reverts commit 1897d8e85843174e18d164b2eebb08c14b988999. Issue: SPR-16613",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "index 9442273149..d5d595dd9c 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "@@ -95,5 +95,2 @@ public class FormHttpMessageConverter implements HttpMessageConverter<MultiValue",
                "-\tprivate static final MediaType DEFAULT_FORM_DATA_MEDIA_TYPE =",
                "-\t\t\tnew MediaType(MediaType.APPLICATION_FORM_URLENCODED, DEFAULT_CHARSET);",
                "-",
                "@@ -284,10 +281,11 @@ public class FormHttpMessageConverter implements HttpMessageConverter<MultiValue",
                "-\t\tcontentType = (contentType != null ? contentType : DEFAULT_FORM_DATA_MEDIA_TYPE);",
                "-\t\tCharset charset = contentType.getCharset();",
                "-\t\tif (charset == null) {",
                "+\t\tCharset charset;",
                "+\t\tif (contentType != null) {",
                "+\t\t\toutputMessage.getHeaders().setContentType(contentType);",
                "+\t\t\tcharset = (contentType.getCharset() != null ? contentType.getCharset() : this.charset);",
                "+\t\t}",
                "+\t\telse {",
                "+\t\t\toutputMessage.getHeaders().setContentType(MediaType.APPLICATION_FORM_URLENCODED);",
                " \t\t\tcharset = this.charset;",
                "-\t\t\tcontentType = new MediaType(contentType, charset);",
                " \t\t}",
                "-\t\toutputMessage.getHeaders().setContentType(contentType);",
                "-",
                " \t\tStringBuilder builder = new StringBuilder();"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "25a3019234cdcb2db868c9e4803332e0cdde22d4",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520889978,
            "hunks": 7,
            "message": "URIEditor uses straight ClassPathResource.getURI() access Issue: SPR-16581 (cherry picked from commit 499128d)",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/propertyeditors/URIEditor.java b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/URIEditor.java",
                "index 7dc173a0d2..dece70f1e9 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/propertyeditors/URIEditor.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/URIEditor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -69,2 +69,3 @@ public class URIEditor extends PropertyEditorSupport {",
                " \t * @param encode indicates whether Strings will be encoded or not",
                "+\t * @since 3.0",
                " \t */",
                "@@ -91,2 +92,3 @@ public class URIEditor extends PropertyEditorSupport {",
                " \t * @param encode indicates whether Strings will be encoded or not",
                "+\t * @since 3.0",
                " \t */",
                "@@ -103,7 +105,6 @@ public class URIEditor extends PropertyEditorSupport {",
                " \t\t\tif (this.classLoader != null && uri.startsWith(ResourceUtils.CLASSPATH_URL_PREFIX)) {",
                "-\t\t\t\tClassPathResource resource =",
                "-\t\t\t\t\t\tnew ClassPathResource(uri.substring(ResourceUtils.CLASSPATH_URL_PREFIX.length()), this.classLoader);",
                "+\t\t\t\tClassPathResource resource = new ClassPathResource(",
                "+\t\t\t\t\t\turi.substring(ResourceUtils.CLASSPATH_URL_PREFIX.length()), this.classLoader);",
                " \t\t\t\ttry {",
                "-\t\t\t\t\tString url = resource.getURL().toString();",
                "-\t\t\t\t\tsetValue(createURI(url));",
                "+\t\t\t\t\tsetValue(resource.getURI());",
                " \t\t\t\t}",
                "@@ -112,5 +113,2 @@ public class URIEditor extends PropertyEditorSupport {",
                " \t\t\t\t}",
                "-\t\t\t\tcatch (URISyntaxException ex) {",
                "-\t\t\t\t\tthrow new IllegalArgumentException(\"Invalid URI syntax: \" + ex);",
                "-\t\t\t\t}",
                " \t\t\t}",
                "@@ -131,5 +129,4 @@ public class URIEditor extends PropertyEditorSupport {",
                " \t/**",
                "-\t * Create a URI instance for the given (resolved) String value.",
                "-\t * <p>The default implementation encodes the value into a RFC",
                "-\t * 2396 compliant URI.",
                "+\t * Create a URI instance for the given user-specified String value.",
                "+\t * <p>The default implementation encodes the value into a RFC-2396 compliant URI.",
                " \t * @param value the value to convert into a URI instance"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/propertyeditors/URIEditor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: resource, classpath",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "98ad23bef8e2e04143f8f5b201380543a8d8c0c3",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522163099,
            "hunks": 2,
            "message": "Consistent logging of encoded path evaluation failure Issue: SPR-16616",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "index 37bcff4b23..404607542d 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "@@ -195,3 +195,8 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\t\tString decodedPath = URLDecoder.decode(resourcePath, \"UTF-8\");",
                "-\t\t\t\treturn (decodedPath.contains(\"../\") || decodedPath.contains(\"..\\\\\"));",
                "+\t\t\t\tif (decodedPath.contains(\"../\") || decodedPath.contains(\"..\\\\\")) {",
                "+\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + resourcePath + \"]\");",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                " \t\t\t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "index 41f3ffebf2..43a8397650 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "@@ -286,3 +286,8 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\t\tString decodedPath = URLDecoder.decode(resourcePath, \"UTF-8\");",
                "-\t\t\t\treturn (decodedPath.contains(\"../\") || decodedPath.contains(\"..\\\\\"));",
                "+\t\t\t\tif (decodedPath.contains(\"../\") || decodedPath.contains(\"..\\\\\")) {",
                "+\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + resourcePath + \"]\");",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "9601d4bb5b40f3abba3d81b2347c7e43d07be64c",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522750989,
            "hunks": 3,
            "message": "Revised mime.types file with cpp extension and updated modification docs Issue: SPR-16678",
            "diff": [
                "diff --git a/spring-context-support/src/main/resources/org/springframework/mail/javamail/mime.types b/spring-context-support/src/main/resources/org/springframework/mail/javamail/mime.types",
                "index 7d625b684d..1eabbf5d2f 100644",
                "--- a/spring-context-support/src/main/resources/org/springframework/mail/javamail/mime.types",
                "+++ b/spring-context-support/src/main/resources/org/springframework/mail/javamail/mime.types",
                "@@ -1,3 +1,3 @@",
                " ################################################################################",
                "-# Copyright 2002-2010 the original author or authors.",
                "+# Copyright 2002-2018 the original author or authors.",
                " #",
                "@@ -18,5 +18,6 @@",
                " #",
                "-# Defaults for the Java Activation Framework",
                "-# Additional extensions registered in this file:",
                "-# text/plain\t\t\t\tjava c c++ pl cc h",
                "+# Defaults for the Java Activation Framework (revised).",
                "+# Modified extensions registered in this file:",
                "+# text/plain\t\t\tjava c c++ cpp pl cc h",
                "+# image/png\t\t\t\tpng",
                " #",
                "@@ -25,3 +26,3 @@",
                " text/html\t\t\t\thtml htm HTML HTM",
                "-text/plain\t\t\t\ttxt text TXT TEXT java c c++ pl cc h",
                "+text/plain\t\t\t\ttxt text TXT TEXT java c c++ cpp pl cc h",
                " image/gif\t\t\t\tgif GIF"
            ],
            "changed_files": [
                "spring-context-support/src/main/resources/org/springframework/mail/javamail/mime.types"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "1ab0850303737e78d3e50e5846cacee0c15c2297"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2fa060f0e9933aa2e9ea290cec05f19232afa97e",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522832087,
            "hunks": 3,
            "message": "Fix Dokka reference to Spring Framework's Javadoc This commit specifies a local packageListUrl and defines that dokka task must be executed after the api task in order to be able to build KDoc during the release process when the Spring Framework's Javadoc is not published yet. Issue: SPR-16687",
            "diff": [
                "diff --git a/gradle/docs.gradle b/gradle/docs.gradle",
                "index 56f5c55a12..2698b456a8 100644",
                "--- a/gradle/docs.gradle",
                "+++ b/gradle/docs.gradle",
                "@@ -51,8 +51,5 @@ task api(type: Javadoc) {",
                "-// Need https://github.com/Kotlin/dokka/issues/184 to be fixed to avoid \"Can't find node by signature\" log spam",
                " dokka {",
                " \tdependsOn {",
                "-\t\tsubprojects.collect {",
                "-\t\t\tit.tasks.getByName(\"jar\")",
                "-\t\t}",
                "+\t\ttasks.getByName(\"api\")",
                " \t}",
                "@@ -71,2 +68,6 @@ dokka {",
                " \t})",
                "+\texternalDocumentationLink {",
                "+\t\turl = new URL(\"https://docs.spring.io/spring-framework/docs/$version/javadoc-api/\")",
                "+\t\tpackageListUrl = new File(buildDir, \"api/package-list\").toURI().toURL()",
                "+\t}",
                " \texternalDocumentationLink {"
            ],
            "changed_files": [
                "gradle/docs.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "c7c743872aa7ee9143f95fc74d654914df4938fa"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6e4bbac6f7d54fe8f7c4c0ac6a94e924cb24765e",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522290450,
            "hunks": 3,
            "message": "MvcResult returns asyncResult after asyncDispatch Issue: SPR-16648",
            "diff": [
                "diff --git a/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java b/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java",
                "index 12a58a77d2..588ae02c73 100644",
                "--- a/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java",
                "+++ b/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -64,3 +64,10 @@ public class MockAsyncContext implements AsyncContext {",
                " \t\tAssert.notNull(handler, \"Dispatch handler must not be null\");",
                "-\t\tthis.dispatchHandlers.add(handler);",
                "+\t\tsynchronized (this) {",
                "+\t\t\tif (this.dispatchedPath == null) {",
                "+\t\t\t\tthis.dispatchHandlers.add(handler);",
                "+\t\t\t}",
                "+\t\t\telse {",
                "+\t\t\t\thandler.run();",
                "+\t\t\t}",
                "+\t\t}",
                " \t}",
                "@@ -94,5 +101,7 @@ public class MockAsyncContext implements AsyncContext {",
                " \tpublic void dispatch(ServletContext context, String path) {",
                "-\t\tthis.dispatchedPath = path;",
                "-\t\tfor (Runnable r : this.dispatchHandlers) {",
                "-\t\t\tr.run();",
                "+\t\tsynchronized (this) {",
                "+\t\t\tthis.dispatchedPath = path;",
                "+\t\t\tfor (Runnable r : this.dispatchHandlers) {",
                "+\t\t\t\tr.run();",
                "+\t\t\t}",
                " \t\t}"
            ],
            "changed_files": [
                "spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f9e6ea548241194b46e7eed1e47960e2c30119b7"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: ServletContext",
                    "relevance": 8
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "977084a6b83590390e6ee93775d394d8326f2955",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521488294,
            "hunks": 13,
            "message": "Correct documentation of default HttpMessageConverters in RestTemplate Issue: SPR-7885 (cherry picked from commit 442ddb0)",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "index 7849a6e891..d5d595dd9c 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -63,4 +63,6 @@ import org.springframework.util.StringUtils;",
                "  * <pre class=\"code\">",
                "- * RestTemplate template = new RestTemplate();  // FormHttpMessageConverter is configured by default",
                "- * MultiValueMap&lt;String, String&gt; form = new LinkedMultiValueMap&lt;String, String&gt;();",
                "+ * RestTemplate template = new RestTemplate();",
                "+ * // AllEncompassingFormHttpMessageConverter is configured by default",
                "+ *",
                "+ * MultiValueMap&lt;String, String&gt; form = new LinkedMultiValueMap&lt;&gt;();",
                "  * form.add(\"field 1\", \"value 1\");",
                "@@ -73,3 +75,3 @@ import org.springframework.util.StringUtils;",
                "  * <pre class=\"code\">",
                "- * MultiValueMap&lt;String, Object&gt; parts = new LinkedMultiValueMap&lt;String, Object&gt;();",
                "+ * MultiValueMap&lt;String, Object&gt; parts = new LinkedMultiValueMap&lt;&gt;();",
                "  * parts.add(\"field 1\", \"value 1\");",
                "@@ -86,3 +88,4 @@ import org.springframework.util.StringUtils;",
                "  * @since 3.0",
                "- * @see MultiValueMap",
                "+ * @see org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter",
                "+ * @see org.springframework.util.MultiValueMap",
                "  */",
                "diff --git a/src/asciidoc/integration.adoc b/src/asciidoc/integration.adoc",
                "index cb6ef0241d..a506c0bd70 100644",
                "--- a/src/asciidoc/integration.adoc",
                "+++ b/src/asciidoc/integration.adoc",
                "@@ -1061,19 +1061,19 @@ will be thrown; this behavior can be changed by plugging in another",
                "-The `exchange` and `execute` methods are generalized versions of the more",
                "-specific methods listed above them and can support additional combinations and methods,",
                "-like HTTP PATCH. However, note that the underlying HTTP library must also support the",
                "-desired combination. The JDK `HttpURLConnection` does not support the `PATCH` method, but",
                "-Apache HttpComponents HttpClient version 4.2 or later does. They also enable",
                "-`RestTemplate` to read an HTTP response to a generic type (e.g. `List<Account>`), using a",
                "-`ParameterizedTypeReference`, a new class that enables capturing and passing generic",
                "-type info.",
                "+The `exchange` and `execute` methods are generalized versions of the more specific",
                "+methods listed above them and can support additional combinations and methods,",
                "+e.g. HTTP PATCH. However, note that the underlying HTTP library must also support the",
                "+desired combination. The JDK `HttpURLConnection` does not support the `PATCH` method",
                "+but Apache HttpComponents HttpClient version 4.2 or later does. They also enable",
                "+`RestTemplate` to read an HTTP response to a generic type (e.g. `List<Account>`),",
                "+using a `ParameterizedTypeReference`, a new class that enables capturing and passing",
                "+generic type info.",
                " Objects passed to and returned from these methods are converted to and from HTTP",
                "-messages by `HttpMessageConverter` instances. Converters for the main mime types are",
                "-registered by default, but you can also write your own converter and register it via the",
                "-`messageConverters()` bean property. The default converter instances registered with the",
                "-template are `ByteArrayHttpMessageConverter`, `StringHttpMessageConverter`,",
                "-`FormHttpMessageConverter` and `SourceHttpMessageConverter`. You can override these",
                "-defaults using the `messageConverters()` bean property as would be required if using the",
                "-`MarshallingHttpMessageConverter` or `MappingJackson2HttpMessageConverter`.",
                "+messages by `HttpMessageConverter` implementations. Converters for the main MIME types",
                "+are registered by default, but you can also override the defaults and register custom",
                "+converters via the `messageConverters()` bean property. The default converters are",
                "+`ByteArrayHttpMessageConverter`, `StringHttpMessageConverter`,",
                "+`ResourceHttpMessageConverter`, `SourceHttpMessageConverter` as well as",
                "+`AllEncompassingFormHttpMessageConverter` and a few provider-specific converters:",
                "+e.g. `MappingJackson2HttpMessageConverter` when Jackson is present on the classpath.",
                "@@ -5780,5 +5780,4 @@ The `org.springframework.mail.javamail.JavaMailSender` interface adds specialize",
                " __JavaMail__ features such as MIME message support to the `MailSender` interface (from",
                "-which it inherits). `JavaMailSender` also provides a callback interface for preparation",
                "-of JavaMail MIME messages, called",
                "-`org.springframework.mail.javamail.MimeMessagePreparator`",
                "+which it inherits). `JavaMailSender` also provides a callback interface for preparing",
                "+a 'MimeMessage', called `org.springframework.mail.javamail.MimeMessagePreparator`.",
                "@@ -5905,5 +5904,3 @@ callback interface. Please note in this case that the `mailSender` property is o",
                " \t\tpublic void placeOrder(final Order order) {",
                "-",
                " \t\t\t// Do the business calculations...",
                "-",
                " \t\t\t// Call the collaborators to persist the order...",
                "@@ -5911,5 +5908,3 @@ callback interface. Please note in this case that the `mailSender` property is o",
                " \t\t\tMimeMessagePreparator preparator = new MimeMessagePreparator() {",
                "-",
                " \t\t\t\tpublic void prepare(MimeMessage mimeMessage) throws Exception {",
                "-",
                " \t\t\t\t\tmimeMessage.setRecipient(Message.RecipientType.TO,",
                "@@ -5917,7 +5912,5 @@ callback interface. Please note in this case that the `mailSender` property is o",
                " \t\t\t\t\tmimeMessage.setFrom(new InternetAddress(\"mail@mycompany.com\"));",
                "-\t\t\t\t\tmimeMessage.setText(",
                "-\t\t\t\t\t\t\t\"Dear \" + order.getCustomer().getFirstName() + \" \"",
                "-\t\t\t\t\t\t\t\t+ order.getCustomer().getLastName()",
                "-\t\t\t\t\t\t\t\t+ \", thank you for placing order. Your order number is \"",
                "-\t\t\t\t\t\t\t\t+ order.getOrderNumber());",
                "+\t\t\t\t\tmimeMessage.setText(\"Dear \" + order.getCustomer().getFirstName() + \" \" +",
                "+\t\t\t\t\t\t\torder.getCustomer().getLastName() + \", thanks for your order. \" +",
                "+\t\t\t\t\t\t\t\"Your order number is \" + order.getOrderNumber() + \".\");",
                " \t\t\t\t}",
                "@@ -6037,6 +6030,6 @@ along with an inline image.",
                " ====",
                "-Inline resources are added to the mime message using the specified `Content-ID` (",
                "-`identifier1234` in the above example). The order in which you are adding the text and",
                "-the resource are __very__ important. Be sure to __first add the text__ and after that",
                "-the resources. If you are doing it the other way around, it won't work!",
                "+Inline resources are added to the `MimeMessage` using the specified `Content-ID`",
                "+(`identifier1234` in the above example). The order in which you are adding the text",
                "+and the resource are __very__ important. Be sure to __first add the text__ and after",
                "+that the resources. If you are doing it the other way around, it won't work!",
                " ===="
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "src/asciidoc/integration.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "442ddb08457bf22afce9622ba9cd82c7415b6832"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2cac3a82552063b9b7eb3ad6089bd06e12fe5dab",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520890308,
            "hunks": 25,
            "message": "InterceptingClientHttpRequest adapts to StreamingHttpOutputMessage Issue: SPR-16582 (cherry picked from commit 4173022)",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/HttpInputMessage.java b/spring-web/src/main/java/org/springframework/http/HttpInputMessage.java",
                "index 9aeab46b9a..61874849f7 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/HttpInputMessage.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/HttpInputMessage.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -36,3 +36,3 @@ public interface HttpInputMessage extends HttpMessage {",
                " \t * @return the input stream body (never {@code null})",
                "-\t * @throws IOException in case of I/O Errors",
                "+\t * @throws IOException in case of I/O errors",
                " \t */",
                "diff --git a/spring-web/src/main/java/org/springframework/http/HttpOutputMessage.java b/spring-web/src/main/java/org/springframework/http/HttpOutputMessage.java",
                "index fdee15b0c9..f8c7f866c8 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/HttpOutputMessage.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/HttpOutputMessage.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -36,3 +36,3 @@ public interface HttpOutputMessage extends HttpMessage {",
                " \t * @return the output stream body (never {@code null})",
                "-\t * @throws IOException in case of I/O Errors",
                "+\t * @throws IOException in case of I/O errors",
                " \t */",
                "diff --git a/spring-web/src/main/java/org/springframework/http/StreamingHttpOutputMessage.java b/spring-web/src/main/java/org/springframework/http/StreamingHttpOutputMessage.java",
                "index 66facbb588..92b6a6d64d 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/StreamingHttpOutputMessage.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/StreamingHttpOutputMessage.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -32,4 +32,4 @@ public interface StreamingHttpOutputMessage extends HttpOutputMessage {",
                " \t/**",
                "-\t * Set the streaming body for this message.",
                "-\t * @param body the streaming body",
                "+\t * Set the streaming body callback for this message.",
                "+\t * @param body the streaming body callback",
                " \t */",
                "@@ -39,5 +39,5 @@ public interface StreamingHttpOutputMessage extends HttpOutputMessage {",
                " \t/**",
                "-\t * Defines the contract for bodies that can be written directly to an {@link OutputStream}.",
                "-\t * It is useful with HTTP client libraries that provide indirect access to an",
                "-\t * {@link OutputStream} via a callback mechanism.",
                "+\t * Defines the contract for bodies that can be written directly to an",
                "+\t * {@link OutputStream}. Useful with HTTP client libraries that provide",
                "+\t * indirect access to an {@link OutputStream} via a callback mechanism.",
                " \t */",
                "@@ -48,3 +48,3 @@ public interface StreamingHttpOutputMessage extends HttpOutputMessage {",
                " \t\t * @param outputStream the output stream to write to",
                "-\t\t * @throws IOException in case of errors",
                "+\t\t * @throws IOException in case of I/O errors",
                " \t\t */",
                "diff --git a/spring-web/src/main/java/org/springframework/http/client/ClientHttpRequestInterceptor.java b/spring-web/src/main/java/org/springframework/http/client/ClientHttpRequestInterceptor.java",
                "index 410cdeb2ff..67b6596944 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/client/ClientHttpRequestInterceptor.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/client/ClientHttpRequestInterceptor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2012 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -23,8 +23,10 @@ import org.springframework.http.HttpRequest;",
                " /**",
                "- * Intercepts client-side HTTP requests. Implementations of this interface can be {@linkplain",
                "- * org.springframework.web.client.RestTemplate#setInterceptors(java.util.List) registered} with the",
                "- * {@link org.springframework.web.client.RestTemplate RestTemplate}, as to modify the outgoing {@link ClientHttpRequest}",
                "- * and/or the incoming {@link ClientHttpResponse}.",
                "+ * Intercepts client-side HTTP requests. Implementations of this interface can be",
                "+ * {@linkplain org.springframework.web.client.RestTemplate#setInterceptors registered}",
                "+ * with the {@link org.springframework.web.client.RestTemplate RestTemplate},",
                "+ * as to modify the outgoing {@link ClientHttpRequest} and/or the incoming",
                "+ * {@link ClientHttpResponse}.",
                "  *",
                "- * <p>The main entry point for interceptors is {@link #intercept(HttpRequest, byte[], ClientHttpRequestExecution)}.",
                "+ * <p>The main entry point for interceptors is",
                "+ * {@link #intercept(HttpRequest, byte[], ClientHttpRequestExecution)}.",
                "  *",
                "@@ -36,5 +38,5 @@ public interface ClientHttpRequestInterceptor {",
                " \t/**",
                "-\t * Intercept the given request, and return a response. The given {@link ClientHttpRequestExecution} allows",
                "-\t * the interceptor to pass on the request and response to the next entity in the chain.",
                "-\t *",
                "+\t * Intercept the given request, and return a response. The given",
                "+\t * {@link ClientHttpRequestExecution} allows the interceptor to pass on the",
                "+\t * request and response to the next entity in the chain.",
                " \t * <p>A typical implementation of this method would follow the following pattern:",
                "@@ -42,3 +44,4 @@ public interface ClientHttpRequestInterceptor {",
                " \t * <li>Examine the {@linkplain HttpRequest request} and body</li>",
                "-\t * <li>Optionally {@linkplain org.springframework.http.client.support.HttpRequestWrapper wrap} the request to filter HTTP attributes.</li>",
                "+\t * <li>Optionally {@linkplain org.springframework.http.client.support.HttpRequestWrapper",
                "+\t * wrap} the request to filter HTTP attributes.</li>",
                " \t * <li>Optionally modify the body of the request.</li>",
                "@@ -46,3 +49,4 @@ public interface ClientHttpRequestInterceptor {",
                " \t * <ul>",
                "-\t * <li>execute the request using {@link ClientHttpRequestExecution#execute(org.springframework.http.HttpRequest, byte[])},</li>",
                "+\t * <li>execute the request using",
                "+\t * {@link ClientHttpRequestExecution#execute(org.springframework.http.HttpRequest, byte[])},</li>",
                " \t * <strong>or</strong>",
                "@@ -52,3 +56,2 @@ public interface ClientHttpRequestInterceptor {",
                " \t * </ol>",
                "-\t *",
                " \t * @param request the request, containing method, URI, and headers",
                "diff --git a/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java",
                "index e81f9145cc..c626ae7009 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -197,2 +197,3 @@ public class HttpComponentsClientHttpRequestFactory implements ClientHttpRequest",
                " \t * recommended to change this property to {@code false}, so as not to run out of memory.",
                "+\t * @since 4.0",
                " \t */",
                "diff --git a/spring-web/src/main/java/org/springframework/http/client/InterceptingClientHttpRequest.java b/spring-web/src/main/java/org/springframework/http/client/InterceptingClientHttpRequest.java",
                "index 95228d3862..141690e0c4 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/client/InterceptingClientHttpRequest.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/client/InterceptingClientHttpRequest.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,2 +19,3 @@ package org.springframework.http.client;",
                " import java.io.IOException;",
                "+import java.io.OutputStream;",
                " import java.net.URI;",
                "@@ -27,2 +28,3 @@ import org.springframework.http.HttpMethod;",
                " import org.springframework.http.HttpRequest;",
                "+import org.springframework.http.StreamingHttpOutputMessage;",
                " import org.springframework.util.StreamUtils;",
                "@@ -82,3 +84,3 @@ class InterceptingClientHttpRequest extends AbstractBufferingClientHttpRequest {",
                " \t\t@Override",
                "-\t\tpublic ClientHttpResponse execute(HttpRequest request, byte[] body) throws IOException {",
                "+\t\tpublic ClientHttpResponse execute(HttpRequest request, final byte[] body) throws IOException {",
                " \t\t\tif (this.iterator.hasNext()) {",
                "@@ -96,3 +98,14 @@ class InterceptingClientHttpRequest extends AbstractBufferingClientHttpRequest {",
                " \t\t\t\tif (body.length > 0) {",
                "-\t\t\t\t\tStreamUtils.copy(body, delegate.getBody());",
                "+\t\t\t\t\tif (delegate instanceof StreamingHttpOutputMessage) {",
                "+\t\t\t\t\t\tStreamingHttpOutputMessage streamingOutputMessage = (StreamingHttpOutputMessage) delegate;",
                "+\t\t\t\t\t\tstreamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {",
                "+\t\t\t\t\t\t\t@Override",
                "+\t\t\t\t\t\t\tpublic void writeTo(final OutputStream outputStream) throws IOException {",
                "+\t\t\t\t\t\t\t\tStreamUtils.copy(body, outputStream);",
                "+\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t});",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\telse {",
                "+\t\t\t\t\t\tStreamUtils.copy(body, delegate.getBody());",
                "+\t\t\t\t\t}",
                " \t\t\t\t}",
                "diff --git a/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java b/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java",
                "index 3bcf378523..88019fc56c 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -207,4 +207,3 @@ public abstract class AbstractHttpMessageConverter<T> implements HttpMessageConv",
                " \t\tif (outputMessage instanceof StreamingHttpOutputMessage) {",
                "-\t\t\tStreamingHttpOutputMessage streamingOutputMessage =",
                "-\t\t\t\t\t(StreamingHttpOutputMessage) outputMessage;",
                "+\t\t\tStreamingHttpOutputMessage streamingOutputMessage = (StreamingHttpOutputMessage) outputMessage;",
                " \t\t\tstreamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {",
                "diff --git a/spring-web/src/main/java/org/springframework/http/converter/BufferedImageHttpMessageConverter.java b/spring-web/src/main/java/org/springframework/http/converter/BufferedImageHttpMessageConverter.java",
                "index 359cac6302..f40dd598ea 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/converter/BufferedImageHttpMessageConverter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/converter/BufferedImageHttpMessageConverter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/HttpInputMessage.java",
                "spring-web/src/main/java/org/springframework/http/HttpOutputMessage.java",
                "spring-web/src/main/java/org/springframework/http/StreamingHttpOutputMessage.java",
                "spring-web/src/main/java/org/springframework/http/client/ClientHttpRequestInterceptor.java",
                "spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java",
                "spring-web/src/main/java/org/springframework/http/client/InterceptingClientHttpRequest.java",
                "spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java",
                "spring-web/src/main/java/org/springframework/http/converter/BufferedImageHttpMessageConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: request, image",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d9e17a62ce0a35af35a92061dbdbff070c655a50",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522512183,
            "hunks": 21,
            "message": "Refine SyncInvocableHandlerMethod error handling Ensure the error is wrapped as ServerErrorException",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java b/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "index f25cad1886..523b44d751 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -21,7 +21,8 @@ import org.springframework.http.HttpStatus;",
                " import org.springframework.lang.Nullable;",
                "+import org.springframework.web.method.HandlerMethod;",
                " /**",
                "- * Exception for errors that fit response status 500 (bad request) for use in",
                "- * Spring Web applications. The exception provides additional fields (e.g.",
                "- * an optional {@link MethodParameter} if related to the error).",
                "+ * Exception for an {@link HttpStatus#INTERNAL_SERVER_ERROR} that exposes extra",
                "+ * information about a controller method that failed, or a controller method",
                "+ * argument that could not be resolved.",
                "  *",
                "@@ -33,2 +34,5 @@ public class ServerErrorException extends ResponseStatusException {",
                "+\t@Nullable",
                "+\tprivate final HandlerMethod handlerMethod;",
                "+",
                " \t@Nullable",
                "@@ -41,3 +45,5 @@ public class ServerErrorException extends ResponseStatusException {",
                " \tpublic ServerErrorException(String reason) {",
                "-\t\tthis(reason, null, null);",
                "+\t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, null);",
                "+\t\tthis.handlerMethod = null;",
                "+\t\tthis.parameter = null;",
                " \t}",
                "@@ -45,6 +51,9 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t/**",
                "-\t * Constructor for a 500 error linked to a specific {@code MethodParameter}.",
                "+\t * Constructor with a reason and root cause.",
                "+\t * @since 5.0.5",
                " \t */",
                "-\tpublic ServerErrorException(String reason, MethodParameter parameter) {",
                "-\t\tthis(reason, parameter, null);",
                "+\tpublic ServerErrorException(String reason, Throwable cause) {",
                "+\t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);",
                "+\t\tthis.handlerMethod = null;",
                "+\t\tthis.parameter = null;",
                " \t}",
                "@@ -52,6 +61,7 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t/**",
                "-\t * Constructor for a 500 error with a root cause.",
                "+\t * Constructor for a 500 error with a {@link MethodParameter}.",
                " \t */",
                "-\tpublic ServerErrorException(String reason, @Nullable MethodParameter parameter, @Nullable Throwable cause) {",
                "+\tpublic ServerErrorException(String reason, MethodParameter parameter, @Nullable Throwable cause) {",
                " \t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);",
                "+\t\tthis.handlerMethod = null;",
                " \t\tthis.parameter = parameter;",
                "@@ -59,5 +69,32 @@ public class ServerErrorException extends ResponseStatusException {",
                "+\t/**",
                "+\t * Constructor for a 500 error with a root cause.",
                "+\t */",
                "+\tpublic ServerErrorException(String reason, HandlerMethod handlerMethod, @Nullable Throwable cause) {",
                "+\t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);",
                "+\t\tthis.handlerMethod = handlerMethod;",
                "+\t\tthis.parameter = null;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Constructor for a 500 error linked to a specific {@code MethodParameter}.",
                "+\t * @deprecated in favor of {@link #ServerErrorException(String, MethodParameter, Throwable)}",
                "+\t */",
                "+\t@Deprecated",
                "+\tpublic ServerErrorException(String reason, MethodParameter parameter) {",
                "+\t\tthis(reason, parameter, null);",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Return the controller method associated with the error, if any.",
                "+\t * @since 5.0.5",
                "+\t */",
                "+\t@Nullable",
                "+\tpublic HandlerMethod getHandlerMethod() {",
                "+\t\treturn this.handlerMethod;",
                "+\t}",
                " \t/**",
                "-\t * Return the {@code MethodParameter} associated with this error, if any.",
                "+\t * Return the controller method argument associated with this error, if any.",
                " \t */",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/BindingContext.java b/spring-webflux/src/main/java/org/springframework/web/reactive/BindingContext.java",
                "index 4e0b7cf98c..8099a538d7 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/BindingContext.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/BindingContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -23,2 +23,3 @@ import org.springframework.web.bind.support.WebBindingInitializer;",
                " import org.springframework.web.bind.support.WebExchangeDataBinder;",
                "+import org.springframework.web.server.ServerErrorException;",
                " import org.springframework.web.server.ServerWebExchange;",
                "@@ -77,2 +78,3 @@ public class BindingContext {",
                " \t * @return the created data binder",
                "+\t * @throws ServerErrorException if {@code @InitBinder} method invocation fails",
                " \t */",
                "@@ -88,2 +90,3 @@ public class BindingContext {",
                " \t * Initialize the data binder instance for the given exchange.",
                "+\t * @throws ServerErrorException if {@code @InitBinder} method invocation fails",
                " \t */",
                "@@ -99,2 +102,3 @@ public class BindingContext {",
                " \t * @return the created data binder",
                "+\t * @throws ServerErrorException if {@code @InitBinder} method invocation fails",
                " \t */",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "index 216ecf7a0c..c60f24b88b 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "@@ -31,2 +31,3 @@ import org.springframework.web.reactive.BindingContext;",
                " import org.springframework.web.reactive.HandlerResult;",
                "+import org.springframework.web.server.ServerErrorException;",
                " import org.springframework.web.server.ServerWebExchange;",
                "@@ -97,2 +98,3 @@ public class SyncInvocableHandlerMethod extends HandlerMethod {",
                " \t * @return Mono with a {@link HandlerResult}.",
                "+\t * @throws ServerErrorException if method argument resolution or method invocation fails",
                " \t */",
                "@@ -106,5 +108,6 @@ public class SyncInvocableHandlerMethod extends HandlerMethod {",
                " \t\tif (processor.isTerminated()) {",
                "-\t\t\tThrowable error = processor.getError();",
                "-\t\t\tif (error != null) {",
                "-\t\t\t\tthrow (RuntimeException) error;",
                "+\t\t\tThrowable ex = processor.getError();",
                "+\t\t\tif (ex != null) {",
                "+\t\t\t\tthrow (ex instanceof ServerErrorException ? (ServerErrorException) ex :",
                "+\t\t\t\t\t\tnew ServerErrorException(\"Failed to invoke: \" + getShortLogMessage(), this, ex));",
                " \t\t\t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/PathVariableMethodArgumentResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/PathVariableMethodArgumentResolver.java",
                "index 0a7274fd07..28d5a4ce9d 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/PathVariableMethodArgumentResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/PathVariableMethodArgumentResolver.java",
                "@@ -94,3 +94,3 @@ public class PathVariableMethodArgumentResolver extends AbstractNamedValueSyncAr",
                " \tprotected void handleMissingValue(String name, MethodParameter parameter) {",
                "-\t\tthrow new ServerErrorException(name, parameter);",
                "+\t\tthrow new ServerErrorException(name, parameter, null);",
                " \t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/BindingContext.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/PathVariableMethodArgumentResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: serve",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: serve",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "ddb2bdf8c60c58a37e73fde060786e3d087b99aa",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521817662,
            "hunks": 4,
            "message": "Improve docs on @Controller methods in STOMP section Issue: SPR-16631",
            "diff": [
                "diff --git a/src/asciidoc/web-websocket.adoc b/src/asciidoc/web-websocket.adoc",
                "index 53db293fbc..370407547e 100644",
                "--- a/src/asciidoc/web-websocket.adoc",
                "+++ b/src/asciidoc/web-websocket.adoc",
                "@@ -1374,17 +1374,24 @@ kinds of arguments and return values supported.",
                " [[websocket-stomp-handle-annotations]]",
                "-=== Handler methods",
                "+=== Annotated Controllers",
                "-The `@MessageMapping` annotation is supported on methods of `@Controller` classes.",
                "-It can be used for mapping methods to message destinations and can also be combined",
                "-with the type-level `@MessageMapping` for expressing shared mappings across all",
                "-annotated methods within a controller.",
                "+Applications can use annotated `@Controller` classes to handle messages from clients.",
                "+Such classes can declare `@MessageMapping`, `@SubscribeMapping`, and `@ExceptionHandler`",
                "+methods as described next.",
                "-By default destination mappings are treated as Ant-style, slash-separated, path",
                "-patterns, e.g. \"/foo*\", \"/foo/**\". etc. They can also contain template variables,",
                "-e.g. \"/foo/{id}\" that can then be referenced via `@DestinationVariable`-annotated",
                "-method arguments.",
                "-[NOTE]",
                "+[[websocket-stomp-message-mapping]]",
                "+==== `@MessageMapping`",
                "+",
                "+The `@MessageMapping` annotation can be used on methods to route messages based on their",
                "+destination. It is supported at the method level as well as at the type level. At type",
                "+level `@MessageMapping` is used to express shared mappings across all methods in a",
                "+controller.",
                "+",
                "+By default destination mappings are expected to be Ant-style, path patterns, e.g. \"/foo*\",",
                "+\"/foo/**\". The patterns include support for template variables, e.g. \"/foo/{id}\", that can",
                "+be referenced with `@DestinationVariable` method arguments.",
                "+",
                "+[TIP]",
                " ====",
                "-Applications can also use dot-separated destinations (vs slash).",
                "+Applications can choose to switch to a dot-separated destination convention.",
                " See <<websocket-stomp-destination-separator>>.",
                "@@ -1392,60 +1399,117 @@ See <<websocket-stomp-destination-separator>>.",
                "-The following method arguments are supported for `@MessageMapping` methods:",
                "-",
                "-* `Message` method argument to get access to the complete message being processed.",
                "-* `@Payload`-annotated argument for access to the payload of a message, converted with",
                "-a `org.springframework.messaging.converter.MessageConverter`.",
                "-The presence of the annotation is not required since it is assumed by default.",
                "-Payload method arguments annotated with validation annotations (like `@Validated`) will",
                "-be subject to JSR-303 validation.",
                "-* `@Header`-annotated arguments for access to a specific header value along with",
                "-type conversion using an `org.springframework.core.convert.converter.Converter`",
                "-if necessary.",
                "-* `@Headers`-annotated method argument that must also be assignable to `java.util.Map`",
                "-for access to all headers in the message.",
                "-* `MessageHeaders` method argument for getting access to a map of all headers.",
                "-* `MessageHeaderAccessor`, `SimpMessageHeaderAccessor`, or `StompHeaderAccessor`",
                "-for access to headers via typed accessor methods.",
                "-* `@DestinationVariable`-annotated arguments for access to template",
                "-variables extracted from the message destination. Values will be converted to",
                "-the declared method argument type as necessary.",
                "-* `java.security.Principal` method arguments reflecting the user logged in at",
                "-the time of the WebSocket HTTP handshake.",
                "-",
                "-A return value from an `@MessageMapping` method will be converted with a",
                "-`org.springframework.messaging.converter.MessageConverter` and used as the body",
                "-of a new message that is then sent, by default, to the `\"brokerChannel\"` with",
                "-the same destination as the client message but using the prefix `\"/topic\"` by",
                "-default. An `@SendTo` message level annotation can be used to specify any",
                "-other destination instead. It can also be set a class-level to share a common",
                "+`@MessageMapping` methods can have flexible signatures with the following arguments:",
                "+",
                "+[cols=\"1,2\", options=\"header\"]",
                "+|===",
                "+| Method argument | Description",
                "+",
                "+| `Message`",
                "+| For access to the complete message.",
                "+",
                "+| `MessageHeaders`",
                "+| For access to the headers within the `Message`.",
                "+",
                "+| `MessageHeaderAccessor`, `SimpMessageHeaderAccessor`, `StompHeaderAccessor`",
                "+| For access to the headers via typed accessor methods.",
                "+",
                "+| `@Payload`",
                "+| For access to the payload of the message, converted (e.g. from JSON) via a configured",
                "+`MessageConverter`.",
                "+",
                "+The presence of this annotation is not required since it is assumed by default if no",
                "+other argument is matched.",
                "+",
                "+Payload arguments may be annotated with `@javax.validation.Valid` or Spring's `@Validated`",
                "+in order to be automatically validated.",
                "+",
                "+| `@Header`",
                "+| For access to a specific header value along with type conversion using an",
                "+`org.springframework.core.convert.converter.Converter` if necessary.",
                "+",
                "+| `@Headers`",
                "+| For access to all headers in the message. This argument must be assignable to",
                "+`java.util.Map`.",
                "+",
                "+| `@DestinationVariable`",
                "+| For access to template variables extracted from the message destination.",
                "+Values will be converted to the declared method argument type as necessary.",
                "+",
                "+| `java.security.Principal`",
                "+| Reflects the user logged in at the time of the WebSocket HTTP handshake.",
                "+",
                "+|===",
                "+",
                "+When an `@MessageMapping` method returns a value, by default the value is serialized to",
                "+a payload through a configured `MessageConverter`, and then sent as a `Message` to the",
                "+`\"brokerChannel\"` from where it is broadcast to subscribers. The destination of the",
                "+outbound message is the same as that of the inbound message but prefixed with `\"/topic\"`.",
                "+",
                "+You can use the `@SendTo` method annotation to customize the destination to send",
                "+the payload to. `@SendTo` can also be used at the class level to share a default target",
                "+destination to send messages to. `@SendToUser` is an variant for sending messages only to",
                "+the user associated with a message. See <<websocket-stomp-user-destination>> for details.",
                "+",
                "+The return value from an `@MessageMapping` method may be wrapped with `ListenableFuture`,",
                "+`CompletableFuture`, or `CompletionStage` in order to produce the payload asynchronously.",
                "+",
                "+As an alternative to returning a payload from an `@MessageMapping` method you can also",
                "+send messages using the `SimpMessagingTemplate`, which is also how return values are",
                "+handled under the covers. See <<websocket-stomp-handle-send>>.",
                "+",
                "+",
                "+[[websocket-stomp-subscribe-mapping]]",
                "+==== `@SubscribeMapping`",
                "+",
                "+The `@SubscribeMapping` annotation is used in combination with `@MessageMapping` in order",
                "+to narrow the mapping to subscription messages. In such scenarios, the `@MessageMapping`",
                "+annotation specifies the destination while `@SubscribeMapping` indicates interest in",
                "+subscription messages only.",
                "+",
                "+An `@SubscribeMapping` method is generally no different from any `@MessageMapping`",
                "+method with respect to mapping and input arguments. For example you can combine it with a",
                "+type-level `@MessageMapping` to express a shared destination prefix, and you can use the",
                "+same <<websocket-stomp-message-mapping,method arguments>> as on any @MessageMapping` method.",
                "+",
                "+The key difference with `@SubscribeMapping` is that the return value of the method is",
                "+serialized as a payload and sent, not to the \"brokerChannel\" but to the",
                "+\"clientOutboundChannel\", effectively replying directly to the client rather than",
                "+broadcasting through the broker. This is useful for implementing one-off, request-reply",
                "+message exchanges, and never holding on to the subscription. A common scenario for this",
                "+pattern is application initialization when data must be loaded and presented.",
                "+",
                "+A `@SubscribeMapping` method can also be annotated with `@SendTo` in which case the",
                "+return value is sent to the `\"brokerChannel\"` with the explicitly specified target",
                " destination.",
                "-A response message may also be provided asynchronously via a `ListenableFuture`",
                "-or `CompletableFuture`/`CompletionStage` return type signature, analogous to",
                "-deferred results in an MVC handler method.",
                "-A `@SubscribeMapping` annotation can be used to map subscription requests to",
                "-`@Controller` methods. It is supported on the method level, but can also be",
                "-combined with a type level `@MessageMapping` annotation that expresses shared",
                "-mappings across all message handling methods within the same controller.",
                "+[[websocket-stomp-exception-handler]]",
                "+==== `@MessageExceptionHandler`",
                "-By default the return value from an `@SubscribeMapping` method is sent as a",
                "-message directly back to the connected client and does not pass through the",
                "-broker. This is useful for implementing request-reply message interactions; for",
                "-example, to fetch application data when the application UI is being initialized.",
                "-Or alternatively an `@SubscribeMapping` method can be annotated with `@SendTo`",
                "-in which case the resulting message is sent to the `\"brokerChannel\"` using",
                "-the specified target destination.",
                "+An application can use `@MessageExceptionHandler` methods to handle exceptions from",
                "+`@MessageMapping` methods. Exceptions of interest can be declared in the annotation",
                "+itself, or through a method argument if you want to get access to the exception instance:",
                "-[NOTE]",
                "-====",
                "-In some cases a controller may need to be decorated with an AOP proxy at runtime.",
                "-One example is if you choose to have `@Transactional` annotations directly on the",
                "-controller. When this is the case, for controllers specifically, we recommend",
                "-using class-based proxying. This is typically the default choice with controllers.",
                "-However if a controller must implement an interface that is not a Spring Context",
                "-callback (e.g. `InitializingBean`, `*Aware`, etc), you may need to explicitly",
                "-configure class-based proxying. For example with `<tx:annotation-driven />`,",
                "-change to `<tx:annotation-driven proxy-target-class=\"true\" />`.",
                "-====",
                "+[source,java,indent=0]",
                "+[subs=\"verbatim,quotes\"]",
                "+----",
                "+\t@Controller",
                "+\tpublic class MyController {",
                "+",
                "+\t\t// ...",
                "+",
                "+\t\t@MessageExceptionHandler",
                "+\t\tpublic ApplicationError handleException(MyException exception) {",
                "+\t\t\t// ...",
                "+\t\t\treturn appError;",
                "+\t\t}",
                "+\t}",
                "+----",
                "+",
                "+`@MessageExceptionHandler` methods support flexible method signatures and support the same",
                "+method argument types and return values as <<websocket-stomp-message-mapping>> methods.",
                "+",
                "+Typically `@MessageExceptionHandler` methods apply within the `@Controller` class (or",
                "+class hierarchy) they are declared in. If you want such methods to apply more globally,",
                "+across controllers, you can declare them in a class marked with `@ControllerAdvice`.",
                "+This is comparable to <<web.adoc#mvc-ann-controller-advice,similar support>> in Spring MVC."
            ],
            "changed_files": [
                "src/asciidoc/web-websocket.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: MVC",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "66a3a82fb31b610e63bb27e7ddef02c2b63d8c50",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522534875,
            "hunks": 17,
            "message": "Avoid reference to HandlerMethod class in ServerErrorException This breaks the package dependency cycle between web.server/web.method and makes ServerErrorException more generally applicable. Includes deprecation of the plain reason constructor variant, in favor of providing a Method or MethodParameter context (which MatrixVariableMethodArgumentResolver does now).",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java b/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "index 523b44d751..5f18a9f021 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "@@ -18,2 +18,4 @@ package org.springframework.web.server;",
                "+import java.lang.reflect.Method;",
                "+",
                " import org.springframework.core.MethodParameter;",
                "@@ -21,3 +23,2 @@ import org.springframework.http.HttpStatus;",
                " import org.springframework.lang.Nullable;",
                "-import org.springframework.web.method.HandlerMethod;",
                "@@ -35,3 +36,3 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t@Nullable",
                "-\tprivate final HandlerMethod handlerMethod;",
                "+\tprivate final Method handlerMethod;",
                "@@ -42,6 +43,7 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t/**",
                "-\t * Constructor with an explanation only.",
                "+\t * Constructor for a 500 error with a reason and an optional cause.",
                "+\t * @since 5.0.5",
                " \t */",
                "-\tpublic ServerErrorException(String reason) {",
                "-\t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, null);",
                "+\tpublic ServerErrorException(String reason, @Nullable Throwable cause) {",
                "+\t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);",
                " \t\tthis.handlerMethod = null;",
                "@@ -51,8 +53,8 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t/**",
                "-\t * Constructor with a reason and root cause.",
                "+\t * Constructor for a 500 error with a handler {@link Method} and an optional cause.",
                " \t * @since 5.0.5",
                " \t */",
                "-\tpublic ServerErrorException(String reason, Throwable cause) {",
                "+\tpublic ServerErrorException(String reason, Method handlerMethod, @Nullable Throwable cause) {",
                " \t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);",
                "-\t\tthis.handlerMethod = null;",
                "+\t\tthis.handlerMethod = handlerMethod;",
                " \t\tthis.parameter = null;",
                "@@ -61,3 +63,3 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t/**",
                "-\t * Constructor for a 500 error with a {@link MethodParameter}.",
                "+\t * Constructor for a 500 error with a {@link MethodParameter} and an optional cause.",
                " \t */",
                "@@ -65,3 +67,3 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);",
                "-\t\tthis.handlerMethod = null;",
                "+\t\tthis.handlerMethod = parameter.getMethod();",
                " \t\tthis.parameter = parameter;",
                "@@ -69,11 +71,2 @@ public class ServerErrorException extends ResponseStatusException {",
                "-\t/**",
                "-\t * Constructor for a 500 error with a root cause.",
                "-\t */",
                "-\tpublic ServerErrorException(String reason, HandlerMethod handlerMethod, @Nullable Throwable cause) {",
                "-\t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);",
                "-\t\tthis.handlerMethod = handlerMethod;",
                "-\t\tthis.parameter = null;",
                "-\t}",
                "-",
                " \t/**",
                "@@ -87,5 +80,16 @@ public class ServerErrorException extends ResponseStatusException {",
                "+\t/**",
                "+\t * Constructor for a 500 error with a reason only.",
                "+\t * @deprecated in favor of {@link #ServerErrorException(String, Throwable)}",
                "+\t */",
                "+\t@Deprecated",
                "+\tpublic ServerErrorException(String reason) {",
                "+\t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, null);",
                "+\t\tthis.handlerMethod = null;",
                "+\t\tthis.parameter = null;",
                "+\t}",
                "+",
                " \t/**",
                "-\t * Return the controller method associated with the error, if any.",
                "+\t * Return the handler method associated with the error, if any.",
                " \t * @since 5.0.5",
                "@@ -93,3 +97,3 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t@Nullable",
                "-\tpublic HandlerMethod getHandlerMethod() {",
                "+\tpublic Method getHandlerMethod() {",
                " \t\treturn this.handlerMethod;",
                "@@ -98,3 +102,3 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t/**",
                "-\t * Return the controller method argument associated with this error, if any.",
                "+\t * Return the specific method parameter associated with the error, if any.",
                " \t */",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "index c60f24b88b..afd59abc7d 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "@@ -111,3 +111,3 @@ public class SyncInvocableHandlerMethod extends HandlerMethod {",
                " \t\t\t\tthrow (ex instanceof ServerErrorException ? (ServerErrorException) ex :",
                "-\t\t\t\t\t\tnew ServerErrorException(\"Failed to invoke: \" + getShortLogMessage(), this, ex));",
                "+\t\t\t\t\t\tnew ServerErrorException(\"Failed to invoke: \" + getShortLogMessage(), getMethod(), ex));",
                " \t\t\t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/MatrixVariableMethodArgumentResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/MatrixVariableMethodArgumentResolver.java",
                "index a2824b4c85..0e999c84d3 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/MatrixVariableMethodArgumentResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/MatrixVariableMethodArgumentResolver.java",
                "@@ -100,3 +100,4 @@ public class MatrixVariableMethodArgumentResolver extends AbstractNamedValueSync",
                " \t\t\t\t\t\t\t\t\"Found more than one match for URI path parameter '\" + name +",
                "-\t\t\t\t\t\t\t\t\"' for parameter type [\" + paramType + \"]. Use 'pathVar' attribute to disambiguate.\");",
                "+\t\t\t\t\t\t\t\t\"' for parameter type [\" + paramType + \"]. Use 'pathVar' attribute to disambiguate.\",",
                "+\t\t\t\t\t\t\t\tparam, null);",
                " \t\t\t\t\t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/MatrixVariableMethodArgumentResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: serve",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: serve",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "c56317928fa457f83a93411c097f150c242de6a5",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521795539,
            "hunks": 14,
            "message": "Add formData() and multipartData() to ServerRequest Issue: SPR-16551",
            "diff": [
                "diff --git a/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java",
                "index 4adca3e308..8499476861 100644",
                "--- a/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java",
                "+++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -42,2 +42,3 @@ import org.springframework.http.HttpRequest;",
                " import org.springframework.http.MediaType;",
                "+import org.springframework.http.codec.multipart.Part;",
                " import org.springframework.http.server.PathContainer;",
                "@@ -211,2 +212,17 @@ public class MockServerRequest implements ServerRequest {",
                "+",
                "+\t@Override",
                "+\t@SuppressWarnings(\"unchecked\")",
                "+\tpublic Mono<MultiValueMap<String, String>> formData() {",
                "+\t\tAssert.state(this.body != null, \"No body\");",
                "+\t\treturn (Mono<MultiValueMap<String, String>>) this.body;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\t@SuppressWarnings(\"unchecked\")",
                "+\tpublic Mono<MultiValueMap<String, Part>> multipartData() {",
                "+\t\tAssert.state(this.body != null, \"No body\");",
                "+\t\treturn (Mono<MultiValueMap<String, Part>>) this.body;",
                "+\t}",
                "+",
                " \tpublic static Builder builder() {",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java",
                "index 1f770e9b4a..a8c115b4fb 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -41,2 +41,3 @@ import org.springframework.http.MediaType;",
                " import org.springframework.http.codec.HttpMessageReader;",
                "+import org.springframework.http.codec.multipart.Part;",
                " import org.springframework.http.server.PathContainer;",
                "@@ -192,2 +193,12 @@ class DefaultServerRequest implements ServerRequest {",
                "+\t@Override",
                "+\tpublic Mono<MultiValueMap<String, String>> formData() {",
                "+\t\treturn this.exchange.getFormData();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Mono<MultiValueMap<String, Part>> multipartData() {",
                "+\t\treturn this.exchange.getMultipartData();",
                "+\t}",
                "+",
                " \tprivate ServerHttpRequest request() {",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java",
                "index 1da5a793ec..654990265a 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -41,2 +41,3 @@ import org.springframework.http.HttpMethod;",
                " import org.springframework.http.MediaType;",
                "+import org.springframework.http.codec.multipart.Part;",
                " import org.springframework.http.server.PathContainer;",
                "@@ -584,2 +585,12 @@ public abstract class RequestPredicates {",
                "+\t\t@Override",
                "+\t\tpublic Mono<MultiValueMap<String, String>> formData() {",
                "+\t\t\treturn this.request.formData();",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic Mono<MultiValueMap<String, Part>> multipartData() {",
                "+\t\t\treturn this.request.multipartData();",
                "+\t\t}",
                "+",
                " \t\t@Override",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerRequest.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerRequest.java",
                "index 594dc84528..9ee7d8cb2d 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerRequest.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerRequest.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -39,2 +39,3 @@ import org.springframework.http.codec.HttpMessageReader;",
                " import org.springframework.http.codec.json.Jackson2CodecSupport;",
                "+import org.springframework.http.codec.multipart.Part;",
                " import org.springframework.http.server.PathContainer;",
                "@@ -246,2 +247,23 @@ public interface ServerRequest {",
                "+\t/**",
                "+\t * Return the form data from the body of the request if the Content-Type is",
                "+\t * {@code \"application/x-www-form-urlencoded\"} or an empty map otherwise.",
                "+\t *",
                "+\t * <p><strong>Note:</strong> calling this method causes the request body to",
                "+\t * be read and parsed in full and the resulting {@code MultiValueMap} is",
                "+\t * cached so that this method is safe to call more than once.",
                "+\t */",
                "+\tMono<MultiValueMap<String, String>> formData();",
                "+",
                "+\t/**",
                "+\t * Return the parts of a multipart request if the Content-Type is",
                "+\t * {@code \"multipart/form-data\"} or an empty map otherwise.",
                "+\t *",
                "+\t * <p><strong>Note:</strong> calling this method causes the request body to",
                "+\t * be read and parsed in full and the resulting {@code MultiValueMap} is",
                "+\t * cached so that this method is safe to call more than once.",
                "+\t */",
                "+\tMono<MultiValueMap<String, Part>> multipartData();",
                "+",
                "+",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java",
                "index 8617686070..dde16b7dd1 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java",
                "@@ -37,2 +37,3 @@ import org.springframework.http.HttpRange;",
                " import org.springframework.http.MediaType;",
                "+import org.springframework.http.codec.multipart.Part;",
                " import org.springframework.http.server.PathContainer;",
                "@@ -187,2 +188,12 @@ public class ServerRequestWrapper implements ServerRequest {",
                "+\t@Override",
                "+\tpublic Mono<MultiValueMap<String, String>> formData() {",
                "+\t\treturn this.delegate.formData();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Mono<MultiValueMap<String, Part>> multipartData() {",
                "+\t\treturn this.delegate.multipartData();",
                "+\t}",
                "+",
                " \t/**"
            ],
            "changed_files": [
                "spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerRequest.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: serve, request",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: serve, request",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "3fb8d16ff79d902ab5c2deee43da979dd92bcac4",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522782889,
            "hunks": 1,
            "message": "Temporarily remove reference to Spring Framework's Javadoc Issue: SPR-16687",
            "diff": [
                "diff --git a/gradle/docs.gradle b/gradle/docs.gradle",
                "index 510144e575..56f5c55a12 100644",
                "--- a/gradle/docs.gradle",
                "+++ b/gradle/docs.gradle",
                "@@ -71,5 +71,2 @@ dokka {",
                " \t})",
                "-\texternalDocumentationLink {",
                "-\t\turl = new URL(\"http://docs.spring.io/spring-framework/docs/${version}/javadoc-api/\")",
                "-\t}",
                " \texternalDocumentationLink {"
            ],
            "changed_files": [
                "gradle/docs.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: URL",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "94c525cdc84209dd079c1e62f8aeed36bf15619c",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521671173,
            "hunks": 8,
            "message": "Polish @RequestPart support",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "index e538c33b81..259a444873 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "@@ -314,2 +314,5 @@ public abstract class MimeTypeUtils {",
                "+",
                "+",
                "+",
                " \t/**",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestPartMethodArgumentResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestPartMethodArgumentResolver.java",
                "index 8dc91dc55a..dbba8e07a5 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestPartMethodArgumentResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestPartMethodArgumentResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,3 +18,2 @@ package org.springframework.web.reactive.result.method.annotation;",
                "-import java.util.Collections;",
                " import java.util.List;",
                "@@ -77,6 +76,12 @@ public class RequestPartMethodArgumentResolver extends AbstractMessageReaderArgu",
                "-\t\tFlux<Part> partFlux = getPartValues(name, exchange);",
                "-\t\tif (isRequired) {",
                "-\t\t\tpartFlux = partFlux.switchIfEmpty(Flux.error(getMissingPartException(name, parameter)));",
                "-\t\t}",
                "+\t\tFlux<Part> values = exchange.getMultipartData()",
                "+\t\t\t\t.flatMapMany(map -> {",
                "+\t\t\t\t\tList<Part> parts = map.get(name);",
                "+\t\t\t\t\tif (CollectionUtils.isEmpty(parts)) {",
                "+\t\t\t\t\t\treturn isRequired ?",
                "+\t\t\t\t\t\t\t\tFlux.error(getMissingPartException(name, parameter)) :",
                "+\t\t\t\t\t\t\t\tFlux.empty();",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn Flux.fromIterable(parts);",
                "+\t\t\t\t});",
                "@@ -87,7 +92,7 @@ public class RequestPartMethodArgumentResolver extends AbstractMessageReaderArgu",
                " \t\t\tif (adapter != null) {",
                "-\t\t\t\tpartFlux = adapter.isMultiValue() ? partFlux : partFlux.take(1);",
                "-\t\t\t\treturn Mono.just(adapter.fromPublisher(partFlux));",
                "+\t\t\t\tvalues = adapter.isMultiValue() ? values : values.take(1);",
                "+\t\t\t\treturn Mono.just(adapter.fromPublisher(values));",
                " \t\t\t}",
                " \t\t\telse {",
                "-\t\t\t\treturn partFlux.next().cast(Object.class);",
                "+\t\t\t\treturn values.next().cast(Object.class);",
                " \t\t\t}",
                "@@ -95,3 +100,3 @@ public class RequestPartMethodArgumentResolver extends AbstractMessageReaderArgu",
                "-\t\treturn partFlux.next().flatMap(part -> {",
                "+\t\treturn values.next().flatMap(part -> {",
                " \t\t\tServerHttpRequest partRequest = new PartServerHttpRequest(exchange.getRequest(), part);",
                "@@ -115,8 +120,2 @@ public class RequestPartMethodArgumentResolver extends AbstractMessageReaderArgu",
                "-\tprivate Flux<Part> getPartValues(String name, ServerWebExchange exchange) {",
                "-\t\treturn exchange.getMultipartData()",
                "-\t\t\t\t.filter(map -> !CollectionUtils.isEmpty(map.get(name)))",
                "-\t\t\t\t.flatMapIterable(map -> map.getOrDefault(name, Collections.emptyList()));",
                "-\t}",
                "-",
                " \tprivate ServerWebInputException getMissingPartException(String name, MethodParameter param) {"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestPartMethodArgumentResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: request",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "ba5ef6456faa1ce6f39c8f5474ebf56cb5d07052",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521645152,
            "hunks": 17,
            "message": "WebFluxResponseStatusExceptionHandler for @ResponseStatus introspection The web.server package is quite low-level and should not depend on web.bind in order to avoid a dependency cycle. Extracting the introspection of the ResponseStatus annotation into a WebFlux-level subclass resolves the cycle. Issue: SPR-16567",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java b/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java",
                "index d760c8676c..5093a28be8 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java",
                "@@ -22,3 +22,2 @@ import reactor.core.publisher.Mono;",
                "-import org.springframework.core.annotation.AnnotatedElementUtils;",
                " import org.springframework.http.HttpStatus;",
                "@@ -26,3 +25,2 @@ import org.springframework.http.server.reactive.ServerHttpRequest;",
                " import org.springframework.lang.Nullable;",
                "-import org.springframework.web.bind.annotation.ResponseStatus;",
                " import org.springframework.web.server.ResponseStatusException;",
                "@@ -32,8 +30,3 @@ import org.springframework.web.server.WebExceptionHandler;",
                " /**",
                "- * Handle instances of {@link ResponseStatusException}, or of exceptions annotated",
                "- * with {@link ResponseStatus @ResponseStatus}, by extracting the",
                "- * {@code HttpStatus} from them and updating the status of the response.",
                "- *",
                "- * <p>If the response is already committed, the error remains unresolved and is",
                "- * propagated.",
                "+ * Handle {@link ResponseStatusException} by setting the response status.",
                "  *",
                "@@ -50,3 +43,3 @@ public class ResponseStatusExceptionHandler implements WebExceptionHandler {",
                " \tpublic Mono<Void> handle(ServerWebExchange exchange, Throwable ex) {",
                "-\t\tHttpStatus status = resolveHttpStatus(ex);",
                "+\t\tHttpStatus status = resolveStatus(ex);",
                " \t\tif (status != null && exchange.getResponse().setStatusCode(status)) {",
                "@@ -66,4 +59,26 @@ public class ResponseStatusExceptionHandler implements WebExceptionHandler {",
                "+\tprivate String buildMessage(ServerHttpRequest request, Throwable ex) {",
                "+\t\treturn \"Failed to handle request [\" + request.getMethod() + \" \" + request.getURI() + \"]: \" + ex.getMessage();",
                "+\t}",
                "+",
                "+\t@Nullable",
                "+\tprivate HttpStatus resolveStatus(Throwable ex) {",
                "+\t\tHttpStatus status = determineStatus(ex);",
                "+\t\tif (status == null) {",
                "+\t\t\tThrowable cause = ex.getCause();",
                "+\t\t\tif (cause != null) {",
                "+\t\t\t\tstatus = resolveStatus(cause);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn status;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Determine the HTTP status implied by the given exception.",
                "+\t * @param ex the exception to introspect",
                "+\t * @return the associated HTTP status, if any",
                "+\t * @since 5.0.5",
                "+\t */",
                " \t@Nullable",
                "-\tprivate HttpStatus resolveHttpStatus(Throwable ex) {",
                "+\tprotected HttpStatus determineStatus(Throwable ex) {",
                " \t\tif (ex instanceof ResponseStatusException) {",
                "@@ -71,9 +86,2 @@ public class ResponseStatusExceptionHandler implements WebExceptionHandler {",
                " \t\t}",
                "-\t\tResponseStatus status = AnnotatedElementUtils.findMergedAnnotation(ex.getClass(), ResponseStatus.class);",
                "-\t\tif (status != null) {",
                "-\t\t\treturn status.code();",
                "-\t\t}",
                "-\t\tif (ex.getCause() != null) {",
                "-\t\t\treturn resolveHttpStatus(ex.getCause());",
                "-\t\t}",
                " \t\treturn null;",
                "@@ -81,7 +89,2 @@ public class ResponseStatusExceptionHandler implements WebExceptionHandler {",
                "-\tprivate String buildMessage(ServerHttpRequest request, Throwable ex) {",
                "-\t\treturn \"Failed to handle request [\" + request.getMethod() + \" \"",
                "-\t\t\t\t+ request.getURI() + \"]: \" + ex.getMessage();",
                "-\t}",
                "-",
                "-}",
                "\\ No newline at end of file",
                "+}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/config/WebFluxConfigurationSupport.java b/spring-webflux/src/main/java/org/springframework/web/reactive/config/WebFluxConfigurationSupport.java",
                "index 5715552b37..c636d929a2 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/config/WebFluxConfigurationSupport.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/WebFluxConfigurationSupport.java",
                "@@ -54,2 +54,3 @@ import org.springframework.web.reactive.function.server.support.ServerResponseRe",
                " import org.springframework.web.reactive.handler.AbstractHandlerMapping;",
                "+import org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler;",
                " import org.springframework.web.reactive.result.SimpleHandlerAdapter;",
                "@@ -64,3 +65,2 @@ import org.springframework.web.server.ServerWebExchange;",
                " import org.springframework.web.server.WebExceptionHandler;",
                "-import org.springframework.web.server.handler.ResponseStatusExceptionHandler;",
                " import org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver;",
                "@@ -110,3 +110,3 @@ public class WebFluxConfigurationSupport implements ApplicationContextAware {",
                " \tpublic WebExceptionHandler responseStatusExceptionHandler() {",
                "-\t\treturn new ResponseStatusExceptionHandler();",
                "+\t\treturn new WebFluxResponseStatusExceptionHandler();",
                " \t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultHandlerStrategiesBuilder.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultHandlerStrategiesBuilder.java",
                "index 697425cb4c..824ad3855a 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultHandlerStrategiesBuilder.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultHandlerStrategiesBuilder.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -27,2 +27,3 @@ import org.springframework.http.codec.ServerCodecConfigurer;",
                " import org.springframework.util.Assert;",
                "+import org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler;",
                " import org.springframework.web.reactive.result.view.ViewResolver;",
                "@@ -30,3 +31,2 @@ import org.springframework.web.server.WebExceptionHandler;",
                " import org.springframework.web.server.WebFilter;",
                "-import org.springframework.web.server.handler.ResponseStatusExceptionHandler;",
                " import org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver;",
                "@@ -60,3 +60,3 @@ class DefaultHandlerStrategiesBuilder implements HandlerStrategies.Builder {",
                " \t\tthis.codecConfigurer.registerDefaults(true);",
                "-\t\tthis.exceptionHandlers.add(new ResponseStatusExceptionHandler());",
                "+\t\tthis.exceptionHandlers.add(new WebFluxResponseStatusExceptionHandler());",
                " \t\tthis.localeContextResolver = new AcceptHeaderLocaleContextResolver();",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/handler/WebFluxResponseStatusExceptionHandler.java b/spring-webflux/src/main/java/org/springframework/web/reactive/handler/WebFluxResponseStatusExceptionHandler.java",
                "new file mode 100644",
                "index 0000000000..2bc38d9fd8",
                "--- /dev/null",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/handler/WebFluxResponseStatusExceptionHandler.java",
                "@@ -0,0 +1,54 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.web.reactive.handler;",
                "+",
                "+import org.springframework.core.annotation.AnnotatedElementUtils;",
                "+import org.springframework.http.HttpStatus;",
                "+import org.springframework.lang.Nullable;",
                "+import org.springframework.web.bind.annotation.ResponseStatus;",
                "+import org.springframework.web.server.handler.ResponseStatusExceptionHandler;",
                "+",
                "+/**",
                "+ * Common WebFlux exception handler that detects instances of",
                "+ * {@link org.springframework.web.server.ResponseStatusException}",
                "+ * (inherited from the base class) as well as exceptions annotated with",
                "+ * {@link ResponseStatus @ResponseStatus} by determining the HTTP status",
                "+ * for them and updating the status of the response accordingly.",
                "+ *",
                "+ * <p>If the response is already committed, the error remains unresolved",
                "+ * and is propagated.",
                "+ *",
                "+ * @author Juergen Hoeller",
                "+ * @author Rossen Stoyanchev",
                "+ * @since 5.0.5",
                "+ */",
                "+public class WebFluxResponseStatusExceptionHandler extends ResponseStatusExceptionHandler {",
                "+",
                "+\t@Override",
                "+\t@Nullable",
                "+\tprotected HttpStatus determineStatus(Throwable ex) {",
                "+\t\tHttpStatus status = super.determineStatus(ex);",
                "+\t\tif (status == null) {",
                "+\t\t\tResponseStatus ann = AnnotatedElementUtils.findMergedAnnotation(ex.getClass(), ResponseStatus.class);",
                "+\t\t\tif (ann != null) {",
                "+\t\t\t\tstatus = ann.code();",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn status;",
                "+\t}",
                "+",
                "+}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/config/WebFluxConfigurationSupport.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultHandlerStrategiesBuilder.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/handler/WebFluxResponseStatusExceptionHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: serve",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: serve",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "224d52e03286e868c5361bb205f641918a7a7e33",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522183996,
            "hunks": 22,
            "message": "Refine RequestedContentTypeResolver contract Consistently return \"*/*\" if no media types were requested rather than an empty list. Existing code has to check for both in any case to see if nothing was requested. Issue: SPR-16624",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/FixedContentTypeResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/FixedContentTypeResolver.java",
                "index e834c14288..95019daf0f 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/FixedContentTypeResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/FixedContentTypeResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -25,2 +25,3 @@ import org.apache.commons.logging.LogFactory;",
                " import org.springframework.http.MediaType;",
                "+import org.springframework.util.Assert;",
                " import org.springframework.web.server.ServerWebExchange;",
                "@@ -40,3 +41,3 @@ public class FixedContentTypeResolver implements RequestedContentTypeResolver {",
                "-\tprivate final List<MediaType> mediaTypes;",
                "+\tprivate final List<MediaType> contentTypes;",
                "@@ -56,4 +57,5 @@ public class FixedContentTypeResolver implements RequestedContentTypeResolver {",
                " \t */",
                "-\tpublic FixedContentTypeResolver(List<MediaType> mediaTypes) {",
                "-\t\tthis.mediaTypes = Collections.unmodifiableList(mediaTypes);",
                "+\tpublic FixedContentTypeResolver(List<MediaType> contentTypes) {",
                "+\t\tAssert.notNull(contentTypes, \"'contentTypes' must not be null\");",
                "+\t\tthis.contentTypes = Collections.unmodifiableList(contentTypes);",
                " \t}",
                "@@ -65,3 +67,3 @@ public class FixedContentTypeResolver implements RequestedContentTypeResolver {",
                " \tpublic List<MediaType> getContentTypes() {",
                "-\t\treturn this.mediaTypes;",
                "+\t\treturn this.contentTypes;",
                " \t}",
                "@@ -72,5 +74,5 @@ public class FixedContentTypeResolver implements RequestedContentTypeResolver {",
                " \t\tif (logger.isDebugEnabled()) {",
                "-\t\t\tlogger.debug(\"Requested media types: \" + this.mediaTypes);",
                "+\t\t\tlogger.debug(\"Requested media types: \" + this.contentTypes);",
                " \t\t}",
                "-\t\treturn this.mediaTypes;",
                "+\t\treturn this.contentTypes;",
                " \t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/HeaderContentTypeResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/HeaderContentTypeResolver.java",
                "index 58d10e85a8..25ea29048a 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/HeaderContentTypeResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/HeaderContentTypeResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -21,2 +21,3 @@ import org.springframework.http.InvalidMediaTypeException;",
                " import org.springframework.http.MediaType;",
                "+import org.springframework.util.CollectionUtils;",
                " import org.springframework.web.server.NotAcceptableStatusException;",
                "@@ -37,3 +38,3 @@ public class HeaderContentTypeResolver implements RequestedContentTypeResolver {",
                " \t\t\tMediaType.sortBySpecificityAndQuality(mediaTypes);",
                "-\t\t\treturn mediaTypes;",
                "+\t\t\treturn !CollectionUtils.isEmpty(mediaTypes) ? mediaTypes : MEDIA_TYPE_ALL_LIST;",
                " \t\t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/ParameterContentTypeResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/ParameterContentTypeResolver.java",
                "index 29a71761f3..82e34ed9cf 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/ParameterContentTypeResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/ParameterContentTypeResolver.java",
                "@@ -74,3 +74,3 @@ public class ParameterContentTypeResolver implements RequestedContentTypeResolve",
                " \t\tif (!StringUtils.hasText(key)) {",
                "-\t\t\treturn Collections.emptyList();",
                "+\t\t\treturn MEDIA_TYPE_ALL_LIST;",
                " \t\t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolver.java",
                "index d4479708c6..0cfeb1ca96 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,2 +18,3 @@ package org.springframework.web.reactive.accept;",
                "+import java.util.Collections;",
                " import java.util.List;",
                "@@ -35,2 +36,10 @@ public interface RequestedContentTypeResolver {",
                "+\t/**",
                "+\t * A singleton list with {@link MediaType#ALL} that is returned from",
                "+\t * {@link #resolveMediaTypes} when no specific media types are requested.",
                "+\t * @since 5.0.5",
                "+\t */",
                "+\tList<MediaType> MEDIA_TYPE_ALL_LIST = Collections.singletonList(MediaType.ALL);",
                "+",
                "+",
                " \t/**",
                "@@ -39,3 +48,4 @@ public interface RequestedContentTypeResolver {",
                " \t * @param exchange the current exchange",
                "-\t * @return the requested media types or an empty list",
                "+\t * @return the requested media types, or {@link #MEDIA_TYPE_ALL_LIST} if none",
                "+\t * were requested.",
                " \t * @throws NotAcceptableStatusException if the requested media type is invalid",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder.java b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder.java",
                "index 8b0d7cd584..aa27e928a4 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder.java",
                "@@ -97,9 +97,9 @@ public class RequestedContentTypeResolverBuilder {",
                " \t\t\tfor (RequestedContentTypeResolver resolver : resolvers) {",
                "-\t\t\t\tList<MediaType> type = resolver.resolveMediaTypes(exchange);",
                "-\t\t\t\tif (type.isEmpty() || (type.size() == 1 && type.contains(MediaType.ALL))) {",
                "+\t\t\t\tList<MediaType> mediaTypes = resolver.resolveMediaTypes(exchange);",
                "+\t\t\t\tif (mediaTypes.equals(RequestedContentTypeResolver.MEDIA_TYPE_ALL_LIST)) {",
                " \t\t\t\t\tcontinue;",
                " \t\t\t\t}",
                "-\t\t\t\treturn type;",
                "+\t\t\t\treturn mediaTypes;",
                " \t\t\t}",
                "-\t\t\treturn Collections.emptyList();",
                "+\t\t\treturn RequestedContentTypeResolver.MEDIA_TYPE_ALL_LIST;",
                " \t\t};",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/HandlerResultHandlerSupport.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/HandlerResultHandlerSupport.java",
                "index 5f36840ffb..506a1ff201 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/HandlerResultHandlerSupport.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/HandlerResultHandlerSupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,3 +19,2 @@ package org.springframework.web.reactive.result;",
                " import java.util.ArrayList;",
                "-import java.util.Collections;",
                " import java.util.Comparator;",
                "@@ -151,4 +150,3 @@ public abstract class HandlerResultHandlerSupport implements Ordered {",
                " \tprivate List<MediaType> getAcceptableTypes(ServerWebExchange exchange) {",
                "-\t\tList<MediaType> mediaTypes = getContentTypeResolver().resolveMediaTypes(exchange);",
                "-\t\treturn (mediaTypes.isEmpty() ? Collections.singletonList(MediaType.ALL) : mediaTypes);",
                "+\t\treturn getContentTypeResolver().resolveMediaTypes(exchange);",
                " \t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java",
                "index b9a799a189..147d83eacc 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java",
                "@@ -240,7 +240,4 @@ public final class ProducesRequestCondition extends AbstractRequestCondition<Pro",
                "-\tprivate List<MediaType> getAcceptedMediaTypes(ServerWebExchange exchange)",
                "-\t\t\tthrows NotAcceptableStatusException {",
                "-",
                "-\t\tList<MediaType> mediaTypes = this.contentTypeResolver.resolveMediaTypes(exchange);",
                "-\t\treturn mediaTypes.isEmpty() ? Collections.singletonList(MediaType.ALL) : mediaTypes;",
                "+\tprivate List<MediaType> getAcceptedMediaTypes(ServerWebExchange exchange) throws NotAcceptableStatusException {",
                "+\t\treturn this.contentTypeResolver.resolveMediaTypes(exchange);",
                " \t}"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/accept/FixedContentTypeResolver.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/accept/HeaderContentTypeResolver.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/accept/ParameterContentTypeResolver.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolver.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/HandlerResultHandlerSupport.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: request",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f9df8c738a4eb9fff292f58a82be7ba09e1c3097",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521580250,
            "hunks": 2,
            "message": "Avoid inifinite recursion in UndertowServerHttpRequest Undertow does not provide a way to check if data is available to read but instead we have to try to read and see if any data is returned. This makes it impossible to implement checkOnDataAvailable without trying to read and that can lead to infinite recursion like this: ... UndertowServerHttpRequest$RequestBodyPublisher.checkOnDataAvailable(UndertowServerHttpRequest.java:156) AbstractListenerReadPublisher.changeToDemandState(AbstractListenerReadPublisher.java:177) AbstractListenerReadPublisher.access$900(AbstractListenerReadPublisher.java:47) AbstractListenerReadPublisher$State$4.onDataAvailable(AbstractListenerReadPublisher.java:319) AbstractListenerReadPublisher.onDataAvailable(AbstractListenerReadPublisher.java:85) UndertowServerHttpRequest$RequestBodyPublisher.checkOnDataAvailable(UndertowServerHttpRequest.java:156) This commit prevent the call to checkOnDataAvailable() when switching states from READING->DEMAND which implies we exited the readAndPublish loop because there was no more data to read. Issue: SPR-16545",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractListenerReadPublisher.java b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractListenerReadPublisher.java",
                "index 0389e4cf72..e83dc84cfc 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractListenerReadPublisher.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractListenerReadPublisher.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -176,3 +176,8 @@ public abstract class AbstractListenerReadPublisher<T> implements Publisher<T> {",
                " \t\tif (changeState(oldState, State.DEMAND)) {",
                "-\t\t\tcheckOnDataAvailable();",
                "+\t\t\t// Protect from infinite recursion in Undertow, where we can't check if data",
                "+\t\t\t// is available, so all we can do is to try to read.",
                "+\t\t\t// Generally, no need to check if we just came out of readAndPublish()...",
                "+\t\t\tif (!oldState.equals(State.READING)) {",
                "+\t\t\t\tcheckOnDataAvailable();",
                "+\t\t\t}",
                " \t\t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/server/reactive/AbstractListenerReadPublisher.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: serve, lead, request",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: serve",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f3994467c4e1094f5229d05c5679550f956cba8e",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522182738,
            "hunks": 20,
            "message": "Refine ContentNegotiationStrategy contract Consistently return \"*/*\" if no media types were requested rather than an empty list. Existing code has to check for both in any case to see if nothing was requested. Issue: SPR-16624",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/accept/AbstractMappingContentNegotiationStrategy.java b/spring-web/src/main/java/org/springframework/web/accept/AbstractMappingContentNegotiationStrategy.java",
                "index 1ebfe6bae0..045e90297f 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/accept/AbstractMappingContentNegotiationStrategy.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/accept/AbstractMappingContentNegotiationStrategy.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -124,3 +124,3 @@ public abstract class AbstractMappingContentNegotiationStrategy extends MappingM",
                " \t\t}",
                "-\t\treturn Collections.emptyList();",
                "+\t\treturn MEDIA_TYPE_ALL_LIST;",
                " \t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManager.java b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManager.java",
                "index 3b910adcb8..1213161bc7 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManager.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManager.java",
                "@@ -47,5 +47,2 @@ public class ContentNegotiationManager implements ContentNegotiationStrategy, Me",
                "-\tprivate static final List<MediaType> MEDIA_TYPE_ALL = Collections.singletonList(MediaType.ALL);",
                "-",
                "-",
                " \tprivate final List<ContentNegotiationStrategy> strategies = new ArrayList<>();",
                "@@ -127,3 +124,3 @@ public class ContentNegotiationManager implements ContentNegotiationStrategy, Me",
                " \t\t\tList<MediaType> mediaTypes = strategy.resolveMediaTypes(request);",
                "-\t\t\tif (mediaTypes.isEmpty() || mediaTypes.equals(MEDIA_TYPE_ALL)) {",
                "+\t\t\tif (mediaTypes.equals(MEDIA_TYPE_ALL_LIST)) {",
                " \t\t\t\tcontinue;",
                "@@ -132,3 +129,3 @@ public class ContentNegotiationManager implements ContentNegotiationStrategy, Me",
                " \t\t}",
                "-\t\treturn Collections.emptyList();",
                "+\t\treturn MEDIA_TYPE_ALL_LIST;",
                " \t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationStrategy.java b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationStrategy.java",
                "index 6f998e73c4..b84569419d 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationStrategy.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationStrategy.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,2 +18,3 @@ package org.springframework.web.accept;",
                "+import java.util.Collections;",
                " import java.util.List;",
                "@@ -33,2 +34,10 @@ public interface ContentNegotiationStrategy {",
                "+\t/**",
                "+\t * A singleton list with {@link MediaType#ALL} that is returned from",
                "+\t * {@link #resolveMediaTypes} when no specific media types are requested.",
                "+\t * @since 5.0.5",
                "+\t */",
                "+\tList<MediaType> MEDIA_TYPE_ALL_LIST = Collections.singletonList(MediaType.ALL);",
                "+",
                "+",
                " \t/**",
                "@@ -37,3 +46,4 @@ public interface ContentNegotiationStrategy {",
                " \t * @param webRequest the current request",
                "-\t * @return the requested media types or an empty list (never {@code null})",
                "+\t * @return the requested media types, or {@link #MEDIA_TYPE_ALL_LIST} if none",
                "+\t * were requested.",
                " \t * @throws HttpMediaTypeNotAcceptableException if the requested media",
                "diff --git a/spring-web/src/main/java/org/springframework/web/accept/HeaderContentNegotiationStrategy.java b/spring-web/src/main/java/org/springframework/web/accept/HeaderContentNegotiationStrategy.java",
                "index c758ea4bbe..96dd2ba536 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/accept/HeaderContentNegotiationStrategy.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/accept/HeaderContentNegotiationStrategy.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,3 +19,2 @@ package org.springframework.web.accept;",
                " import java.util.Arrays;",
                "-import java.util.Collections;",
                " import java.util.List;",
                "@@ -25,2 +24,3 @@ import org.springframework.http.InvalidMediaTypeException;",
                " import org.springframework.http.MediaType;",
                "+import org.springframework.util.CollectionUtils;",
                " import org.springframework.web.HttpMediaTypeNotAcceptableException;",
                "@@ -47,3 +47,3 @@ public class HeaderContentNegotiationStrategy implements ContentNegotiationStrat",
                " \t\tif (headerValueArray == null) {",
                "-\t\t\treturn Collections.emptyList();",
                "+\t\t\treturn MEDIA_TYPE_ALL_LIST;",
                " \t\t}",
                "@@ -54,3 +54,3 @@ public class HeaderContentNegotiationStrategy implements ContentNegotiationStrat",
                " \t\t\tMediaType.sortBySpecificityAndQuality(mediaTypes);",
                "-\t\t\treturn mediaTypes;",
                "+\t\t\treturn !CollectionUtils.isEmpty(mediaTypes) ? mediaTypes : MEDIA_TYPE_ALL_LIST;",
                " \t\t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.java",
                "index 660b36106d..df84690ad4 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.java",
                "@@ -261,4 +261,3 @@ public final class ProducesRequestCondition extends AbstractRequestCondition<Pro",
                " \tprivate List<MediaType> getAcceptedMediaTypes(HttpServletRequest request) throws HttpMediaTypeNotAcceptableException {",
                "-\t\tList<MediaType> mediaTypes = this.contentNegotiationManager.resolveMediaTypes(new ServletWebRequest(request));",
                "-\t\treturn mediaTypes.isEmpty() ? Collections.singletonList(MediaType.ALL) : mediaTypes;",
                "+\t\treturn this.contentNegotiationManager.resolveMediaTypes(new ServletWebRequest(request));",
                " \t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java",
                "index 36adce100e..807affee65 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -367,4 +367,3 @@ public abstract class AbstractMessageConverterMethodProcessor extends AbstractMe",
                "-\t\tList<MediaType> types = this.contentNegotiationManager.resolveMediaTypes(new ServletWebRequest(request));",
                "-\t\treturn (types.isEmpty() ? Collections.singletonList(MediaType.ALL) : types);",
                "+\t\treturn this.contentNegotiationManager.resolveMediaTypes(new ServletWebRequest(request));",
                " \t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java",
                "index 2c555203cc..d8bfc12916 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -255,7 +255,3 @@ public class ContentNegotiatingViewResolver extends WebApplicationObjectSupport",
                " \t\t\tServletWebRequest webRequest = new ServletWebRequest(request);",
                "-",
                " \t\t\tList<MediaType> acceptableMediaTypes = this.contentNegotiationManager.resolveMediaTypes(webRequest);",
                "-\t\t\tacceptableMediaTypes = (!acceptableMediaTypes.isEmpty() ? acceptableMediaTypes :",
                "-\t\t\t\t\tCollections.singletonList(MediaType.ALL));",
                "-",
                " \t\t\tList<MediaType> producibleMediaTypes = getProducibleMediaTypes(request);"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/accept/AbstractMappingContentNegotiationStrategy.java",
                "spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManager.java",
                "spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationStrategy.java",
                "spring-web/src/main/java/org/springframework/web/accept/HeaderContentNegotiationStrategy.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: request",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "0af847c01c5e2e181fd1215e2e2450b189286ba6",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521845870,
            "hunks": 14,
            "message": "ServerSentEventHttpMessageReader internal refactoring Eliminate use of .block() which Reactor now flags as illegal on schedulers where that's not expected.",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/codec/ServerSentEventHttpMessageReader.java b/spring-web/src/main/java/org/springframework/http/codec/ServerSentEventHttpMessageReader.java",
                "index 6567a252c7..b41910f103 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/codec/ServerSentEventHttpMessageReader.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/codec/ServerSentEventHttpMessageReader.java",
                "@@ -26,2 +26,3 @@ import java.util.Map;",
                " import java.util.function.IntPredicate;",
                "+import java.util.stream.Collectors;",
                "@@ -42,4 +43,2 @@ import org.springframework.lang.Nullable;",
                "-import static java.util.stream.Collectors.joining;",
                "-",
                " /**",
                "@@ -122,5 +121,6 @@ public class ServerSentEventHttpMessageReader implements HttpMessageReader<Objec",
                " \t\t\t\t.concatMap(rawLines -> {",
                "-\t\t\t\t\tString[] lines = rawLines.stream().collect(joining()).split(\"\\\\r?\\\\n\");",
                "-\t\t\t\t\tServerSentEvent<Object> event = buildEvent(lines, valueType, hints);",
                "-\t\t\t\t\treturn (shouldWrap ? Mono.just(event) : Mono.justOrEmpty(event.data()));",
                "+\t\t\t\t\tString[] lines = rawLines.stream().collect(Collectors.joining()).split(\"\\\\r?\\\\n\");",
                "+\t\t\t\t\treturn buildEvent(lines, valueType, hints)",
                "+\t\t\t\t\t\t\t.filter(event -> shouldWrap || event.data() != null)",
                "+\t\t\t\t\t\t\t.map(event -> shouldWrap ? event : event.data());",
                " \t\t\t\t})",
                "@@ -146,3 +146,3 @@ public class ServerSentEventHttpMessageReader implements HttpMessageReader<Objec",
                "-\tprivate ServerSentEvent<Object> buildEvent(String[] lines, ResolvableType valueType,",
                "+\tprivate Mono<ServerSentEvent<Object>> buildEvent(String[] lines, ResolvableType valueType,",
                " \t\t\tMap<String, Object> hints) {",
                "@@ -150,4 +150,4 @@ public class ServerSentEventHttpMessageReader implements HttpMessageReader<Objec",
                " \t\tServerSentEvent.Builder<Object> sseBuilder = ServerSentEvent.builder();",
                "-\t\tStringBuilder mutableData = new StringBuilder();",
                "-\t\tStringBuilder mutableComment = new StringBuilder();",
                "+\t\tStringBuilder data = null;",
                "+\t\tStringBuilder comment = null;",
                "@@ -161,3 +161,4 @@ public class ServerSentEventHttpMessageReader implements HttpMessageReader<Objec",
                " \t\t\telse if (line.startsWith(\"data:\")) {",
                "-\t\t\t\tmutableData.append(line.substring(5)).append(\"\\n\");",
                "+\t\t\t\tdata = (data != null ? data : new StringBuilder());",
                "+\t\t\t\tdata.append(line.substring(5)).append(\"\\n\");",
                " \t\t\t}",
                "@@ -167,20 +168,23 @@ public class ServerSentEventHttpMessageReader implements HttpMessageReader<Objec",
                " \t\t\telse if (line.startsWith(\":\")) {",
                "-\t\t\t\tmutableComment.append(line.substring(1)).append(\"\\n\");",
                "+\t\t\t\tcomment = (comment != null ? comment : new StringBuilder());",
                "+\t\t\t\tcomment.append(line.substring(1)).append(\"\\n\");",
                " \t\t\t}",
                " \t\t}",
                "-\t\tif (mutableData.length() > 0) {",
                "-\t\t\tString data = mutableData.toString();",
                "-\t\t\tsseBuilder.data(decodeData(data, valueType, hints));",
                "+\t\tif (comment != null) {",
                "+\t\t\tsseBuilder.comment(comment.toString().substring(0, comment.length() - 1));",
                "+\t\t}",
                "+\t\tif (data != null) {",
                "+\t\t\treturn decodeData(data.toString(), valueType, hints).map(decodedData -> {",
                "+\t\t\t\tsseBuilder.data(decodedData);",
                "+\t\t\t\treturn sseBuilder.build();",
                "+\t\t\t});",
                " \t\t}",
                "-\t\tif (mutableComment.length() > 0) {",
                "-\t\t\tString comment = mutableComment.toString();",
                "-\t\t\tsseBuilder.comment(comment.substring(0, comment.length() - 1));",
                "+\t\telse {",
                "+\t\t\treturn Mono.just(sseBuilder.build());",
                " \t\t}",
                "-\t\treturn sseBuilder.build();",
                " \t}",
                "-\t@Nullable",
                "-\tprivate Object decodeData(String data, ResolvableType dataType, Map<String, Object> hints) {",
                "+\tprivate Mono<?> decodeData(String data, ResolvableType dataType, Map<String, Object> hints) {",
                " \t\tif (String.class == dataType.resolve()) {",
                "-\t\t\treturn data.substring(0, data.length() - 1);",
                "+\t\t\treturn Mono.just(data.substring(0, data.length() - 1));",
                " \t\t}",
                "@@ -188,3 +192,3 @@ public class ServerSentEventHttpMessageReader implements HttpMessageReader<Objec",
                " \t\tif (this.decoder == null) {",
                "-\t\t\treturn Flux.error(new CodecException(\"No SSE decoder configured and the data is not String.\"));",
                "+\t\t\treturn Mono.error(new CodecException(\"No SSE decoder configured and the data is not String.\"));",
                " \t\t}",
                "@@ -193,6 +197,3 @@ public class ServerSentEventHttpMessageReader implements HttpMessageReader<Objec",
                " \t\tMono<DataBuffer> input = Mono.just(bufferFactory.wrap(bytes));",
                "-",
                "-\t\treturn this.decoder",
                "-\t\t\t\t.decodeToMono(input, dataType, MediaType.TEXT_EVENT_STREAM, hints)",
                "-\t\t\t\t.block(Duration.ZERO);",
                "+\t\treturn this.decoder.decodeToMono(input, dataType, MediaType.TEXT_EVENT_STREAM, hints);",
                " \t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/codec/ServerSentEventHttpMessageReader.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: serve",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: serve",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d3a0a8e0078df5f152d9e5f802683614a0018182",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521714971,
            "hunks": 21,
            "message": "Use Collection.removeIf() where possible (#1747) Use Collection.removeIf() where possible Issue: SPR-16622",
            "diff": [
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.java b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.java",
                "index e339e716b4..03ec6dd127 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,3 +19,2 @@ package org.springframework.aop.framework.autoproxy.target;",
                " import java.util.HashMap;",
                "-import java.util.Iterator;",
                " import java.util.Map;",
                "@@ -33,3 +32,2 @@ import org.springframework.beans.factory.DisposableBean;",
                " import org.springframework.beans.factory.config.BeanDefinition;",
                "-import org.springframework.beans.factory.config.BeanPostProcessor;",
                " import org.springframework.beans.factory.config.ConfigurableBeanFactory;",
                "@@ -152,7 +150,4 @@ public abstract class AbstractBeanFactoryBasedTargetSourceCreator",
                " \t\t// since those are only meant to apply to beans defined in the original factory.",
                "-\t\tfor (Iterator<BeanPostProcessor> it = internalBeanFactory.getBeanPostProcessors().iterator(); it.hasNext();) {",
                "-\t\t\tif (it.next() instanceof AopInfrastructureBean) {",
                "-\t\t\t\tit.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tinternalBeanFactory.getBeanPostProcessors().removeIf(beanPostProcessor ->",
                "+\t\t\t\tbeanPostProcessor instanceof AopInfrastructureBean);",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/CachedIntrospectionResults.java b/spring-beans/src/main/java/org/springframework/beans/CachedIntrospectionResults.java",
                "index ef74f0dd37..8656d9e702 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/CachedIntrospectionResults.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/CachedIntrospectionResults.java",
                "@@ -23,3 +23,2 @@ import java.beans.PropertyDescriptor;",
                " import java.util.Collections;",
                "-import java.util.Iterator;",
                " import java.util.LinkedHashMap;",
                "@@ -152,20 +151,8 @@ public class CachedIntrospectionResults {",
                " \tpublic static void clearClassLoader(@Nullable ClassLoader classLoader) {",
                "-\t\tfor (Iterator<ClassLoader> it = acceptedClassLoaders.iterator(); it.hasNext();) {",
                "-\t\t\tClassLoader registeredLoader = it.next();",
                "-\t\t\tif (isUnderneathClassLoader(registeredLoader, classLoader)) {",
                "-\t\t\t\tit.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "-\t\tfor (Iterator<Class<?>> it = strongClassCache.keySet().iterator(); it.hasNext();) {",
                "-\t\t\tClass<?> beanClass = it.next();",
                "-\t\t\tif (isUnderneathClassLoader(beanClass.getClassLoader(), classLoader)) {",
                "-\t\t\t\tit.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "-\t\tfor (Iterator<Class<?>> it = softClassCache.keySet().iterator(); it.hasNext();) {",
                "-\t\t\tClass<?> beanClass = it.next();",
                "-\t\t\tif (isUnderneathClassLoader(beanClass.getClassLoader(), classLoader)) {",
                "-\t\t\t\tit.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tacceptedClassLoaders.removeIf(registeredLoader ->",
                "+\t\t\t\tisUnderneathClassLoader(registeredLoader, classLoader));",
                "+\t\tstrongClassCache.keySet().removeIf(beanClass ->",
                "+\t\t\t\tisUnderneathClassLoader(beanClass.getClassLoader(), classLoader));",
                "+\t\tsoftClassCache.keySet().removeIf(beanClass ->",
                "+\t\t\t\tisUnderneathClassLoader(beanClass.getClassLoader(), classLoader));",
                " \t}",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "index 07c87795e5..6f5a392c6a 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "@@ -29,3 +29,2 @@ import java.util.HashMap;",
                " import java.util.HashSet;",
                "-import java.util.Iterator;",
                " import java.util.LinkedHashMap;",
                "@@ -1340,8 +1339,3 @@ public abstract class AbstractBeanFactory extends FactoryBeanRegistrySupport imp",
                " \tpublic void clearMetadataCache() {",
                "-\t\tIterator<String> mergedBeans = this.mergedBeanDefinitions.keySet().iterator();",
                "-\t\twhile (mergedBeans.hasNext()) {",
                "-\t\t\tif (!isBeanEligibleForMetadataCaching(mergedBeans.next())) {",
                "-\t\t\t\tmergedBeans.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tthis.mergedBeanDefinitions.keySet().removeIf(bean -> !isBeanEligibleForMetadataCaching(bean));",
                " \t}",
                "diff --git a/spring-context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java b/spring-context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java",
                "index 0e379c8ebf..b21093fb4b 100644",
                "--- a/spring-context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java",
                "+++ b/spring-context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,3 +19,2 @@ package org.springframework.scripting.support;",
                " import java.util.HashMap;",
                "-import java.util.Iterator;",
                " import java.util.Map;",
                "@@ -41,3 +40,2 @@ import org.springframework.beans.factory.FactoryBean;",
                " import org.springframework.beans.factory.config.BeanDefinition;",
                "-import org.springframework.beans.factory.config.BeanPostProcessor;",
                " import org.springframework.beans.factory.config.ConfigurableBeanFactory;",
                "@@ -227,7 +225,4 @@ public class ScriptFactoryPostProcessor extends InstantiationAwareBeanPostProces",
                " \t\t// since those are only meant to apply to beans defined in the original factory.",
                "-\t\tfor (Iterator<BeanPostProcessor> it = this.scriptBeanFactory.getBeanPostProcessors().iterator(); it.hasNext();) {",
                "-\t\t\tif (it.next() instanceof AopInfrastructureBean) {",
                "-\t\t\t\tit.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tthis.scriptBeanFactory.getBeanPostProcessors().removeIf(beanPostProcessor ->",
                "+\t\t\t\tbeanPostProcessor instanceof AopInfrastructureBean);",
                " \t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java",
                "index e7744e3e77..7d943d44c6 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -23,3 +23,2 @@ import java.util.HashMap;",
                " import java.util.HashSet;",
                "-import java.util.Iterator;",
                " import java.util.Map;",
                "@@ -177,9 +176,3 @@ public class MultiServerUserRegistry implements SimpUserRegistry, SmartApplicati",
                " \t\tlong now = System.currentTimeMillis();",
                "-\t\tIterator<Map.Entry<String, UserRegistrySnapshot>> iterator = this.remoteRegistries.entrySet().iterator();",
                "-\t\twhile (iterator.hasNext()) {",
                "-\t\t\tMap.Entry<String, UserRegistrySnapshot> entry = iterator.next();",
                "-\t\t\tif (entry.getValue().isExpired(now)) {",
                "-\t\t\t\titerator.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tthis.remoteRegistries.entrySet().removeIf(entry -> entry.getValue().isExpired(now));",
                " \t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ConsumesRequestCondition.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ConsumesRequestCondition.java",
                "index f187441794..fc190243da 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ConsumesRequestCondition.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ConsumesRequestCondition.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -21,3 +21,2 @@ import java.util.Collection;",
                " import java.util.Collections;",
                "-import java.util.Iterator;",
                " import java.util.LinkedHashSet;",
                "@@ -170,8 +169,3 @@ public final class ConsumesRequestCondition extends AbstractRequestCondition<Con",
                " \t\tSet<ConsumeMediaTypeExpression> result = new LinkedHashSet<>(expressions);",
                "-\t\tfor (Iterator<ConsumeMediaTypeExpression> iterator = result.iterator(); iterator.hasNext();) {",
                "-\t\t\tConsumeMediaTypeExpression expression = iterator.next();",
                "-\t\t\tif (!expression.match(exchange)) {",
                "-\t\t\t\titerator.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tresult.removeIf(expression -> !expression.match(exchange));",
                " \t\treturn (result.isEmpty()) ? null : new ConsumesRequestCondition(result);",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java",
                "index 4e28666f63..b9a799a189 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -21,3 +21,2 @@ import java.util.Collection;",
                " import java.util.Collections;",
                "-import java.util.Iterator;",
                " import java.util.LinkedHashSet;",
                "@@ -194,8 +193,3 @@ public final class ProducesRequestCondition extends AbstractRequestCondition<Pro",
                " \t\tSet<ProduceMediaTypeExpression> result = new LinkedHashSet<>(expressions);",
                "-\t\tfor (Iterator<ProduceMediaTypeExpression> iterator = result.iterator(); iterator.hasNext();) {",
                "-\t\t\tProduceMediaTypeExpression expression = iterator.next();",
                "-\t\t\tif (!expression.match(exchange)) {",
                "-\t\t\t\titerator.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tresult.removeIf(expression -> !expression.match(exchange));",
                " \t\treturn (result.isEmpty()) ? null : new ProducesRequestCondition(result, this.contentTypeResolver);"
            ],
            "changed_files": [
                "spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.java",
                "spring-beans/src/main/java/org/springframework/beans/CachedIntrospectionResults.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "spring-context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ConsumesRequestCondition.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1747": "Use Collection.removeIf() where possible [SPR-16622] #21163"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: serve, user, request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1747",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6393e5ce0cfb6e5502e7415f29e1ea73b363f2a2",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522448444,
            "hunks": 42,
            "message": "Consistent Ordered.LOWEST_PRECEDENCE declarations for default order",
            "diff": [
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/framework/ProxyProcessorSupport.java b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyProcessorSupport.java",
                "index 1bcb797896..71cf05e634 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/framework/ProxyProcessorSupport.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyProcessorSupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -54,5 +54,5 @@ public class ProxyProcessorSupport extends ProxyConfig implements Ordered, BeanC",
                " \t/**",
                "-\t * Set the ordering which will apply to this class's implementation",
                "-\t * of Ordered, used when applying multiple processors.",
                "-\t * <p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered.",
                "+\t * Set the ordering which will apply to this processor's implementation",
                "+\t * of {@link Ordered}, used when applying multiple processors.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                " \t * @param order the ordering value",
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/support/DefaultIntroductionAdvisor.java b/spring-aop/src/main/java/org/springframework/aop/support/DefaultIntroductionAdvisor.java",
                "index 3b4896273f..b6ad61c482 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/support/DefaultIntroductionAdvisor.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/support/DefaultIntroductionAdvisor.java",
                "@@ -48,3 +48,3 @@ public class DefaultIntroductionAdvisor implements IntroductionAdvisor, ClassFil",
                "-\tprivate int order = Integer.MAX_VALUE;",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE;",
                "@@ -121,3 +121,2 @@ public class DefaultIntroductionAdvisor implements IntroductionAdvisor, ClassFil",
                "-",
                " \tpublic void setOrder(int order) {",
                "@@ -131,3 +130,2 @@ public class DefaultIntroductionAdvisor implements IntroductionAdvisor, ClassFil",
                "-",
                " \t@Override",
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.java b/spring-aop/src/main/java/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.java",
                "index ecbc42397b..70970388ac 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -38,6 +38,6 @@ public abstract class StaticMethodMatcherPointcutAdvisor extends StaticMethodMat",
                "-\tprivate int order = Integer.MAX_VALUE;",
                "-",
                " \tprivate Advice advice = EMPTY_ADVICE;",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE;",
                "+",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/config/ResourceHandlerRegistry.java b/spring-webflux/src/main/java/org/springframework/web/reactive/config/ResourceHandlerRegistry.java",
                "index 3ca0bb3bdf..3d9ae6f595 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/config/ResourceHandlerRegistry.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/ResourceHandlerRegistry.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -25,2 +25,3 @@ import java.util.Map;",
                " import org.springframework.beans.factory.BeanInitializationException;",
                "+import org.springframework.core.Ordered;",
                " import org.springframework.core.io.ResourceLoader;",
                "@@ -58,3 +59,3 @@ public class ResourceHandlerRegistry {",
                "-\tprivate int order = Integer.MAX_VALUE -1;",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE -1;",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/handler/AbstractHandlerMapping.java b/spring-webflux/src/main/java/org/springframework/web/reactive/handler/AbstractHandlerMapping.java",
                "index cae5ea8e48..2783640711 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/handler/AbstractHandlerMapping.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/handler/AbstractHandlerMapping.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -51,4 +51,2 @@ public abstract class AbstractHandlerMapping extends ApplicationObjectSupport im",
                "-\tprivate int order = Integer.MAX_VALUE;  // default: same as non-Ordered",
                "-",
                " \tprivate final PathPatternParser patternParser;",
                "@@ -59,2 +57,4 @@ public abstract class AbstractHandlerMapping extends ApplicationObjectSupport im",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE;  // default: same as non-Ordered",
                "+",
                "@@ -65,15 +65,2 @@ public abstract class AbstractHandlerMapping extends ApplicationObjectSupport im",
                "-\t/**",
                "-\t * Specify the order value for this HandlerMapping bean.",
                "-\t * <p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered.",
                "-\t * @see org.springframework.core.Ordered#getOrder()",
                "-\t */",
                "-\tpublic final void setOrder(int order) {",
                "-\t\tthis.order = order;",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic final int getOrder() {",
                "-\t\treturn this.order;",
                "-\t}",
                "@@ -142,2 +129,16 @@ public abstract class AbstractHandlerMapping extends ApplicationObjectSupport im",
                "+\t/**",
                "+\t * Specify the order value for this HandlerMapping bean.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                "+\t * @see org.springframework.core.Ordered#getOrder()",
                "+\t */",
                "+\tpublic void setOrder(int order) {",
                "+\t\tthis.order = order;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic int getOrder() {",
                "+\t\treturn this.order;",
                "+\t}",
                "+",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "index bd621ae75f..b6a92f9e3f 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "@@ -43,3 +43,3 @@ public abstract class ViewResolverSupport implements Ordered {",
                "-\tprivate int order = Integer.MAX_VALUE;",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE;",
                "@@ -86,5 +86,6 @@ public abstract class ViewResolverSupport implements Ordered {",
                "-",
                " \t/**",
                "-\t * Set the order in which this {@link ViewResolver} is evaluated.",
                "+\t * Specify the order value for this ViewResolver bean.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                "+\t * @see org.springframework.core.Ordered#getOrder()",
                " \t */",
                "@@ -94,5 +95,2 @@ public abstract class ViewResolverSupport implements Ordered {",
                "-\t/**",
                "-\t * Return the order in which this {@link ViewResolver} is evaluated.",
                "-\t */",
                " \t@Override",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistry.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistry.java",
                "index 2b7f35e1f4..f30598dfa5 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistry.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistry.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -27,2 +27,3 @@ import org.springframework.beans.factory.BeanInitializationException;",
                " import org.springframework.context.ApplicationContext;",
                "+import org.springframework.core.Ordered;",
                " import org.springframework.lang.Nullable;",
                "@@ -67,3 +68,3 @@ public class ResourceHandlerRegistry {",
                "-\tprivate int order = Integer.MAX_VALUE -1;",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE - 1;",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java",
                "index 45389c38a6..8f05d0cccb 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java",
                "@@ -69,4 +69,2 @@ public abstract class AbstractHandlerMapping extends WebApplicationObjectSupport",
                "-\tprivate int order = Integer.MAX_VALUE;  // default: same as non-Ordered",
                "-",
                " \t@Nullable",
                "@@ -86,16 +84,4 @@ public abstract class AbstractHandlerMapping extends WebApplicationObjectSupport",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE;  // default: same as non-Ordered",
                "-\t/**",
                "-\t * Specify the order value for this HandlerMapping bean.",
                "-\t * <p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered.",
                "-\t * @see org.springframework.core.Ordered#getOrder()",
                "-\t */",
                "-\tpublic final void setOrder(int order) {",
                "-\t  this.order = order;",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic final int getOrder() {",
                "-\t  return this.order;",
                "-\t}",
                "@@ -233,2 +219,16 @@ public abstract class AbstractHandlerMapping extends WebApplicationObjectSupport",
                "+\t/**",
                "+\t * Specify the order value for this HandlerMapping bean.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                "+\t * @see org.springframework.core.Ordered#getOrder()",
                "+\t */",
                "+\tpublic void setOrder(int order) {",
                "+\t\tthis.order = order;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic int getOrder() {",
                "+\t\treturn this.order;",
                "+\t}",
                "+",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.java",
                "index 3fc9eba11e..0b4388be72 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -48,3 +48,3 @@ public abstract class AbstractHandlerMethodAdapter extends WebContentGenerator i",
                " \t * Specify the order value for this HandlerAdapter bean.",
                "-\t * <p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                " \t * @see org.springframework.core.Ordered#getOrder()",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/BeanNameViewResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/BeanNameViewResolver.java",
                "index 13312ff532..a645f34c64 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/BeanNameViewResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/BeanNameViewResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -56,5 +56,10 @@ public class BeanNameViewResolver extends WebApplicationObjectSupport implements",
                "-\tprivate int order = Integer.MAX_VALUE;  // default: same as non-Ordered",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE;  // default: same as non-Ordered",
                "+\t/**",
                "+\t * Specify the order value for this ViewResolver bean.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                "+\t * @see org.springframework.core.Ordered#getOrder()",
                "+\t */",
                " \tpublic void setOrder(int order) {",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java",
                "index fe8cca9d3f..792a67d22b 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -69,4 +69,2 @@ public class ResourceBundleViewResolver extends AbstractCachingViewResolver",
                "-\tprivate int order = Integer.MAX_VALUE;  // default: same as non-Ordered",
                "-",
                " \tprivate String[] basenames = new String[] {DEFAULT_BASENAME};",
                "@@ -87,11 +85,4 @@ public class ResourceBundleViewResolver extends AbstractCachingViewResolver",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE;  // default: same as non-Ordered",
                "-\tpublic void setOrder(int order) {",
                "-\t\tthis.order = order;",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic int getOrder() {",
                "-\t\treturn this.order;",
                "-\t}",
                "@@ -178,2 +169,16 @@ public class ResourceBundleViewResolver extends AbstractCachingViewResolver",
                "+\t/**",
                "+\t * Specify the order value for this ViewResolver bean.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                "+\t * @see org.springframework.core.Ordered#getOrder()",
                "+\t */",
                "+\tpublic void setOrder(int order) {",
                "+\t\tthis.order = order;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic int getOrder() {",
                "+\t\treturn this.order;",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/UrlBasedViewResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/UrlBasedViewResolver.java",
                "index 70c3cf48ec..8b19ea0eea 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/UrlBasedViewResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/UrlBasedViewResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -139,3 +139,3 @@ public class UrlBasedViewResolver extends AbstractCachingViewResolver implements",
                "-\tprivate int order = Integer.MAX_VALUE;",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE;",
                "@@ -425,4 +425,5 @@ public class UrlBasedViewResolver extends AbstractCachingViewResolver implements",
                " \t/**",
                "-\t * Set the order in which this {@link org.springframework.web.servlet.ViewResolver}",
                "-\t * is evaluated.",
                "+\t * Specify the order value for this ViewResolver bean.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                "+\t * @see org.springframework.core.Ordered#getOrder()",
                " \t */",
                "@@ -432,6 +433,2 @@ public class UrlBasedViewResolver extends AbstractCachingViewResolver implements",
                "-\t/**",
                "-\t * Return the order in which this {@link org.springframework.web.servlet.ViewResolver}",
                "-\t * is evaluated.",
                "-\t */",
                " \t@Override",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/XmlViewResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/XmlViewResolver.java",
                "index 36a4444082..1c9d2d53bc 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/XmlViewResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/XmlViewResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -64,4 +64,2 @@ public class XmlViewResolver extends AbstractCachingViewResolver",
                "-\tprivate int order = Integer.MAX_VALUE;  // default: same as non-Ordered",
                "-",
                " \t@Nullable",
                "@@ -72,11 +70,4 @@ public class XmlViewResolver extends AbstractCachingViewResolver",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE;  // default: same as non-Ordered",
                "-\tpublic void setOrder(int order) {",
                "-\t\tthis.order = order;",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic int getOrder() {",
                "-\t\treturn this.order;",
                "-\t}",
                "@@ -91,2 +82,16 @@ public class XmlViewResolver extends AbstractCachingViewResolver",
                "+\t/**",
                "+\t * Specify the order value for this ViewResolver bean.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                "+\t * @see org.springframework.core.Ordered#getOrder()",
                "+\t */",
                "+\tpublic void setOrder(int order) {",
                "+\t\tthis.order = order;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic int getOrder() {",
                "+\t\treturn this.order;",
                "+\t}",
                "+",
                " \t/**"
            ],
            "changed_files": [
                "spring-aop/src/main/java/org/springframework/aop/framework/ProxyProcessorSupport.java",
                "spring-aop/src/main/java/org/springframework/aop/support/DefaultIntroductionAdvisor.java",
                "spring-aop/src/main/java/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/config/ResourceHandlerRegistry.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/handler/AbstractHandlerMapping.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistry.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/BeanNameViewResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/UrlBasedViewResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/XmlViewResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "1cbc353dd1ee9db38490fa9a862c8a1673db595c"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f4813f5b4c2ac3dbae6ab8a1d097c5310e1b41a8",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522307598,
            "hunks": 0,
            "message": "Merge pull request #1759 from igor-suhorukov * pr/1759:   Nested \"enum\"s should not be declared static",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1759": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1759",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "dd96c873e392a8afc31f0762d90edef914aadf04",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522354261,
            "hunks": 15,
            "message": "Improve docs on forwarded headers Issue: SPR-16660",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java",
                "index 76d49fb894..5efafcb77e 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -83,2 +83,9 @@ public @interface CrossOrigin {",
                " \t * <p>By default all origins are allowed.",
                "+\t * <p><strong>Note:</strong> CORS checks use values from \"Forwarded\"",
                "+\t * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+\t * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+\t * if present, in order to reflect the client-originated address.",
                "+\t * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+\t * central place whether to extract and use, or to discard such headers.",
                "+\t * See the Spring Framework reference for more on this filter.",
                " \t * @see #value",
                "diff --git a/spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java b/spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java",
                "index 6b39369d67..5478bb6656 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -147,2 +147,9 @@ public class CorsConfiguration {",
                " \t * <p>By default this is not set.",
                "+\t * <p><strong>Note:</strong> CORS checks use values from \"Forwarded\"",
                "+\t * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+\t * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+\t * if present, in order to reflect the client-originated address.",
                "+\t * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+\t * central place whether to extract and use, or to discard such headers.",
                "+\t * See the Spring Framework reference for more on this filter.",
                " \t */",
                "diff --git a/spring-web/src/main/java/org/springframework/web/cors/reactive/CorsUtils.java b/spring-web/src/main/java/org/springframework/web/cors/reactive/CorsUtils.java",
                "index 073409a0d6..23380447ed 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/cors/reactive/CorsUtils.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/cors/reactive/CorsUtils.java",
                "@@ -56,2 +56,9 @@ public abstract class CorsUtils {",
                " \t * of a cross-origin request",
                "+\t * <p><strong>Note:</strong> this method uses values from \"Forwarded\"",
                "+\t * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+\t * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+\t * if present, in order to reflect the client-originated address.",
                "+\t * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+\t * central place whether to extract and use, or to discard such headers.",
                "+\t * See the Spring Framework reference for more on this filter.",
                " \t */",
                "diff --git a/spring-web/src/main/java/org/springframework/web/util/WebUtils.java b/spring-web/src/main/java/org/springframework/web/util/WebUtils.java",
                "index 3a390245fa..6af42f4546 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/util/WebUtils.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/util/WebUtils.java",
                "@@ -679,2 +679,9 @@ public abstract class WebUtils {",
                " \t * An empty list means only same origin is allowed.",
                "+\t * <p><strong>Note:</strong> this method may use values from \"Forwarded\"",
                "+\t * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+\t * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+\t * if present, in order to reflect the client-originated address.",
                "+\t * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+\t * central place whether to extract and use, or to discard such headers.",
                "+\t * See the Spring Framework reference for more on this filter.",
                " \t * @return {@code true} if the request origin is valid, {@code false} otherwise",
                "@@ -703,2 +710,9 @@ public abstract class WebUtils {",
                " \t * @code X-Forwarded-Port} headers.",
                "+\t * <p><strong>Note:</strong> this method uses values from \"Forwarded\"",
                "+\t * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+\t * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+\t * if present, in order to reflect the client-originated address.",
                "+\t * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+\t * central place whether to extract and use, or to discard such headers.",
                "+\t * See the Spring Framework reference for more on this filter.",
                " \t * @return {@code true} if the request is a same-origin one, {@code false} in case",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/config/CorsRegistration.java b/spring-webflux/src/main/java/org/springframework/web/reactive/config/CorsRegistration.java",
                "index e70119c7fd..0c4d6cc94c 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/config/CorsRegistration.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/CorsRegistration.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -51,2 +51,9 @@ public class CorsRegistration {",
                " \t * <p>By default all origins are allowed.",
                "+\t * <p><strong>Note:</strong> CORS checks use values from \"Forwarded\"",
                "+\t * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+\t * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+\t * if present, in order to reflect the client-originated address.",
                "+\t * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+\t * central place whether to extract and use, or to discard such headers.",
                "+\t * See the Spring Framework reference for more on this filter.",
                " \t */",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/CorsRegistration.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/CorsRegistration.java",
                "index db1b192e38..429836ef2a 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/CorsRegistration.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/CorsRegistration.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -53,2 +53,9 @@ public class CorsRegistration {",
                " \t * <p>By default, all origins are allowed.",
                "+\t * <p><strong>Note:</strong> CORS checks use values from \"Forwarded\"",
                "+\t * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+\t * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+\t * if present, in order to reflect the client-originated address.",
                "+\t * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+\t * central place whether to extract and use, or to discard such headers.",
                "+\t * See the Spring Framework reference for more on this filter.",
                " \t */",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "index 6ab89eccbb..f217e911b8 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -85,10 +85,9 @@ import org.springframework.web.util.UriComponentsBuilder;",
                "  *",
                "- * <p><strong>Note:</strong> This class extracts and uses values from the headers",
                "- * \"Forwarded\" (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "- * or \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" if",
                "- * \"Forwarded\" is not found, in order to reflect the client-originated protocol",
                "- * and address. As an alternative consider using the",
                "- * {@link org.springframework.web.filter.ForwardedHeaderFilter} to have such",
                "- * headers extracted once and removed, or removed only (without being used).",
                "- * See the reference for further information including security considerations.",
                "+ * <p><strong>Note:</strong> This class uses values from \"Forwarded\"",
                "+ * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+ * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+ * if present, in order to reflect the client-originated protocol and address.",
                "+ * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+ * central place whether to extract and use, or to discard such headers.",
                "+ * See the Spring Framework reference for more on this filter.",
                "  *",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java",
                "index 17ac0343a9..8f50db6319 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java",
                "@@ -38,10 +38,9 @@ import org.springframework.web.util.UrlPathHelper;",
                "  *",
                "- * <p><strong>Note:</strong> This class extracts and uses values from the headers",
                "- * \"Forwarded\" (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "- * or \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" if",
                "- * \"Forwarded\" is not found, in order to reflect the client-originated protocol",
                "- * and address. As an alternative consider using the",
                "- * {@link org.springframework.web.filter.ForwardedHeaderFilter} to have such",
                "- * headers extracted once and removed, or removed only (without being used).",
                "- * See the reference for further information including security considerations.",
                "+ * <p><strong>Note:</strong> This class uses values from \"Forwarded\"",
                "+ * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+ * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+ * if present, in order to reflect the client-originated protocol and address.",
                "+ * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+ * central place whether to extract and use, or to discard such headers.",
                "+ * See the Spring Framework reference for more on this filter.",
                "  *",
                "diff --git a/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc.xsd b/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc.xsd",
                "index 071ecae722..df49cfe09a 100644",
                "--- a/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc.xsd",
                "+++ b/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc.xsd",
                "@@ -1333,2 +1333,8 @@",
                " \tThe special value \"*\" allows all domains (default).",
                "+",
                "+\tNote that CORS checks use values from \"Forwarded\" (RFC 7239), \"X-Forwarded-Host\",",
                "+\t\"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers, if present, in order to reflect",
                "+\tthe client-originated address. Consider using the ForwardedHeaderFilter in order to",
                "+\tchoose from a central place whether to extract and use such headers, or whether to",
                "+\tdiscard them. See the Spring Framework reference for more on this filter.",
                " \t\t\t\t\t\t\t\t]]></xsd:documentation>"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java",
                "spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java",
                "spring-web/src/main/java/org/springframework/web/cors/reactive/CorsUtils.java",
                "spring-web/src/main/java/org/springframework/web/util/WebUtils.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/config/CorsRegistration.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/CorsRegistration.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java",
                "spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc.xsd"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "de4da5ea4e2de8ba4964d03c389aa47368d773b9"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "573f1d77f285ba34253d98a9ed056e0bb4bba219",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522786245,
            "hunks": 1,
            "message": "Next Development Version",
            "diff": [
                "diff --git a/gradle.properties b/gradle.properties",
                "index 297fc945e3..fd5d15a4d2 100644",
                "--- a/gradle.properties",
                "+++ b/gradle.properties",
                "@@ -1 +1 @@",
                "-version=4.3.15.BUILD-SNAPSHOT",
                "+version=4.3.16.BUILD-SNAPSHOT"
            ],
            "changed_files": [
                "gradle.properties"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "4967dd887dc3c3cacdf619824a00280cd6701a71"
                ]
            ],
            "tags": [
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b1048975d2966b5c5ab3315403c4e5f0c736bc4d",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522431341,
            "hunks": 2,
            "message": "Minor updates based on PR#1058 The original repo no longer exists: https://github.com/spring-projects/spring-framework/pull/1058",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java",
                "index 4b02317bd0..71fd4a7a1e 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java",
                "@@ -230,3 +230,5 @@ public final class PatternsRequestCondition extends AbstractRequestCondition<Pat",
                " \t\t}",
                "-\t\tmatches.sort(this.pathMatcher.getPatternComparator(lookupPath));",
                "+\t\tif (matches.size() > 1) {",
                "+\t\t\tmatches.sort(this.pathMatcher.getPatternComparator(lookupPath));",
                "+\t\t}",
                " \t\treturn matches;",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/SseEmitter.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/SseEmitter.java",
                "index ec1d5ea3bf..df665ce73b 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/SseEmitter.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/SseEmitter.java",
                "@@ -164,3 +164,3 @@ public class SseEmitter extends ResponseBodyEmitter {",
                " \t\t/**",
                "-\t\t * Add an SSE \"event\" line.",
                "+\t\t * Add an SSE \"retry\" line.",
                " \t\t */"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/SseEmitter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1058": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1058",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "10cb2ccaefa2736000ae94155ce357c1f2a6590e",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522103105,
            "hunks": 12,
            "message": "Avoid triggering lazy resolution in MultipartResolver.cleanupMultipart Issue: SPR-16640",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartResolver.java b/spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartResolver.java",
                "index af75af7795..18a7627bda 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartResolver.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -35,2 +35,3 @@ import org.springframework.web.multipart.MultipartHttpServletRequest;",
                " import org.springframework.web.multipart.MultipartResolver;",
                "+import org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest;",
                " import org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest;",
                "@@ -190,7 +191,10 @@ public class CommonsMultipartResolver extends CommonsFileUploadSupport",
                " \tpublic void cleanupMultipart(MultipartHttpServletRequest request) {",
                "-\t\ttry {",
                "-\t\t\tcleanupFileItems(request.getMultiFileMap());",
                "-\t\t}",
                "-\t\tcatch (Throwable ex) {",
                "-\t\t\tlogger.warn(\"Failed to perform multipart cleanup for servlet request\", ex);",
                "+\t\tif (!(request instanceof AbstractMultipartHttpServletRequest) ||",
                "+\t\t\t\t((AbstractMultipartHttpServletRequest) request).isResolved()) {",
                "+\t\t\ttry {",
                "+\t\t\t\tcleanupFileItems(request.getMultiFileMap());",
                "+\t\t\t}",
                "+\t\t\tcatch (Throwable ex) {",
                "+\t\t\t\tlogger.warn(\"Failed to perform multipart cleanup for servlet request\", ex);",
                "+\t\t\t}",
                " \t\t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.java b/spring-web/src/main/java/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.java",
                "index e94dca671c..58010cc4d8 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -110,2 +110,14 @@ public abstract class AbstractMultipartHttpServletRequest extends HttpServletReq",
                "+\t/**",
                "+\t * Determine whether the underlying multipart request has been resolved.",
                "+\t * @return {@code true} when eagerly initialized or lazily triggered,",
                "+\t * {@code false} in case of a lazy-resolution request that got aborted",
                "+\t * before any parameters or multipart files have been accessed",
                "+\t * @since 4.3.15",
                "+\t * @see #getMultipartFiles()",
                "+\t */",
                "+\tpublic boolean isResolved() {",
                "+\t\treturn (this.multipartFiles != null);",
                "+\t}",
                "+",
                "diff --git a/spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java",
                "index 9915190677..fa6ae7dbda 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -54,2 +54,3 @@ import org.springframework.web.multipart.MultipartFile;",
                "  * @since 3.1",
                "+ * @see StandardServletMultipartResolver",
                "  */",
                "@@ -77,5 +78,6 @@ public class StandardMultipartHttpServletRequest extends AbstractMultipartHttpSe",
                " \t * @throws MultipartException if an immediate parsing attempt failed",
                "+\t * @since 3.2.9",
                " \t */",
                "-\tpublic StandardMultipartHttpServletRequest(HttpServletRequest request,",
                "-\t\t\tboolean lazyParsing) throws MultipartException {",
                "+\tpublic StandardMultipartHttpServletRequest(HttpServletRequest request, boolean lazyParsing)",
                "+\t\t\tthrows MultipartException {",
                "diff --git a/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java",
                "index 0ac3326d2c..34d40edb19 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java",
                "@@ -73,2 +73,3 @@ public class StandardServletMultipartResolver implements MultipartResolver {",
                " \t * once the application attempts to obtain multipart files or parameters.",
                "+\t * @since 3.2.9",
                " \t */",
                "@@ -96,13 +97,16 @@ public class StandardServletMultipartResolver implements MultipartResolver {",
                " \tpublic void cleanupMultipart(MultipartHttpServletRequest request) {",
                "-\t\t// To be on the safe side: explicitly delete the parts,",
                "-\t\t// but only actual file parts (for Resin compatibility)",
                "-\t\ttry {",
                "-\t\t\tfor (Part part : request.getParts()) {",
                "-\t\t\t\tif (request.getFile(part.getName()) != null) {",
                "-\t\t\t\t\tpart.delete();",
                "+\t\tif (!(request instanceof AbstractMultipartHttpServletRequest) ||",
                "+\t\t\t\t((AbstractMultipartHttpServletRequest) request).isResolved()) {",
                "+\t\t\t// To be on the safe side: explicitly delete the parts,",
                "+\t\t\t// but only actual file parts (for Resin compatibility)",
                "+\t\t\ttry {",
                "+\t\t\t\tfor (Part part : request.getParts()) {",
                "+\t\t\t\t\tif (request.getFile(part.getName()) != null) {",
                "+\t\t\t\t\t\tpart.delete();",
                "+\t\t\t\t\t}",
                " \t\t\t\t}",
                " \t\t\t}",
                "-\t\t}",
                "-\t\tcatch (Throwable ex) {",
                "-\t\t\tLogFactory.getLog(getClass()).warn(\"Failed to perform cleanup of multipart items\", ex);",
                "+\t\t\tcatch (Throwable ex) {",
                "+\t\t\t\tLogFactory.getLog(getClass()).warn(\"Failed to perform cleanup of multipart items\", ex);",
                "+\t\t\t}",
                " \t\t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartResolver.java",
                "spring-web/src/main/java/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.java",
                "spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java",
                "spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "c1cb0311aa495e3b2cc9b3ec326c8db0b0768e10"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: request",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e02ff3a0da50744b0980d5d665fd242eedea7675",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521856350,
            "hunks": 3,
            "message": "MimeTypeUtils uses SecureRandom The prevailing current wisdom is to use the default constructor for secure and let it pick the best algorithm for the OS. On Java 8 (Oracle), Linux this results in \"NativePRNG\" which uses /dev/random (potentially blocking) for the initial seed, and /dev/urandom (non-blocking) for subsequent calls to nextInt. Issue: SPR-16635",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "index 5b3a7a0f2b..6cf7e00107 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -20,2 +20,3 @@ import java.nio.charset.Charset;",
                " import java.nio.charset.UnsupportedCharsetException;",
                "+import java.security.SecureRandom;",
                " import java.util.ArrayList;",
                "@@ -48,3 +49,3 @@ public abstract class MimeTypeUtils {",
                "-\tprivate static final Random RND = new Random();",
                "+\tprivate static final Random RND = new SecureRandom();"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "ab2410c754b67902f002bfcc0c3895bd7772d39f"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "SEC_KEYWORDS_IN_MESSAGE",
                    "message": "The commit message contains some security-related keywords: secure",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "28ea718d2d62a43bd54a5795f5c511284508df15",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522531051,
            "hunks": 17,
            "message": "Build setup allows for JDK 10 as source/test target compatibility Includes upgrade to Groovy 2.4.15 and HtmlUnit 2.30. Issue: SPR-16390",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 05d84c74bb..87e262c85c 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -45,3 +45,3 @@ configure(allprojects) { project ->",
                " \text.freemarkerVersion    = \"2.3.27-incubating\"",
                "-\text.groovyVersion        = \"2.4.14\"",
                "+\text.groovyVersion        = \"2.4.15\"",
                " \text.hsqldbVersion        = \"2.4.0\"",
                "@@ -115,3 +115,3 @@ configure(allprojects) { project ->",
                " \tcompileJava {",
                "-\t\tsourceCompatibility = 1.8",
                "+\t\tsourceCompatibility = 1.8  // can be switched to 10 for testing",
                " \t\ttargetCompatibility = 1.8",
                "@@ -121,3 +121,3 @@ configure(allprojects) { project ->",
                " \tcompileTestJava {",
                "-\t\tsourceCompatibility = 1.8",
                "+\t\tsourceCompatibility = 1.8  // can be switched to 10 for testing",
                " \t\ttargetCompatibility = 1.8",
                "diff --git a/spring-aspects/spring-aspects.gradle b/spring-aspects/spring-aspects.gradle",
                "index aa05384ce9..2203096d78 100644",
                "--- a/spring-aspects/spring-aspects.gradle",
                "+++ b/spring-aspects/spring-aspects.gradle",
                "@@ -12,7 +12,3 @@ configurations {",
                "-// exclude spring-aspects as a module within IDEA until IDEA-64446 is resolved",
                "-tasks.getByName(\"idea\").onlyIf { false }",
                "-tasks.getByName(\"ideaModule\").onlyIf { false }",
                "-",
                "-compileJava  {",
                "+compileJava {",
                " \tactions = []",
                "@@ -21,3 +17,2 @@ compileJava  {",
                " \tdef outputDir = project.sourceSets.main.java.outputDir",
                "-",
                " \tinputs.files(project.sourceSets.main.allSource + project.sourceSets.main.compileClasspath)",
                "@@ -25,4 +20,4 @@ compileJava  {",
                "-\text.sourceCompatibility = project(\":spring-core\").compileJava.sourceCompatibility",
                "-\text.targetCompatibility = project(\":spring-core\").compileJava.targetCompatibility",
                "+\tsourceCompatibility = 1.8  // fixed even when general compatibility level set to e.g. 10",
                "+\ttargetCompatibility = 1.8",
                "@@ -51,3 +46,3 @@ compileJava  {",
                "-compileTestJava  {",
                "+compileTestJava {",
                " \tactions = []",
                "@@ -57,3 +52,2 @@ compileTestJava  {",
                " \tdef outputDir = project.sourceSets.test.java.outputDir",
                "-",
                " \tinputs.files(project.sourceSets.test.allSource + project.sourceSets.test.compileClasspath)",
                "@@ -61,4 +55,4 @@ compileTestJava  {",
                "-\text.sourceCompatibility = project(\":spring-core\").compileTestJava.sourceCompatibility",
                "-\text.targetCompatibility = project(\":spring-core\").compileTestJava.targetCompatibility",
                "+\tsourceCompatibility = 1.8  // fixed even when general compatibility level set to e.g. 10",
                "+\ttargetCompatibility = 1.8",
                "diff --git a/spring-context-support/spring-context-support.gradle b/spring-context-support/spring-context-support.gradle",
                "index 84fd61f5ab..b69b27e9e9 100644",
                "--- a/spring-context-support/spring-context-support.gradle",
                "+++ b/spring-context-support/spring-context-support.gradle",
                "@@ -19,2 +19,3 @@ dependencies {",
                " \ttestCompile(\"org.hibernate:hibernate-validator:6.0.9.Final\")",
                "+\ttestCompile(\"javax.annotation:javax.annotation-api:1.3.2\")",
                " \ttestRuntime(\"org.ehcache:jcache:1.0.1\")",
                "@@ -22,3 +23,2 @@ dependencies {",
                " \ttestRuntime(\"org.glassfish:javax.el:3.0.1-b08\")",
                "-\ttestRuntime(\"javax.annotation:javax.annotation-api:1.3.2\")",
                " \ttestRuntime(\"com.sun.mail:javax.mail:1.6.1\")",
                "diff --git a/spring-test/spring-test.gradle b/spring-test/spring-test.gradle",
                "index d2cd0964a9..f921f589a7 100644",
                "--- a/spring-test/spring-test.gradle",
                "+++ b/spring-test/spring-test.gradle",
                "@@ -44,6 +44,6 @@ dependencies {",
                " \t}",
                "-\toptional(\"net.sourceforge.htmlunit:htmlunit:2.29\") {",
                "+\toptional(\"net.sourceforge.htmlunit:htmlunit:2.30\") {",
                " \t\texclude group: \"commons-logging\", module: \"commons-logging\"",
                " \t}",
                "-\toptional(\"org.seleniumhq.selenium:htmlunit-driver:2.29.3\") {",
                "+\toptional(\"org.seleniumhq.selenium:htmlunit-driver:2.30.0\") {",
                " \t\texclude group: \"commons-logging\", module: \"commons-logging\"",
                "@@ -62,2 +62,3 @@ dependencies {",
                " \ttestCompile(project(\":spring-oxm\"))",
                "+\ttestCompile(\"javax.annotation:javax.annotation-api:1.3.2\")",
                " \ttestCompile(\"javax.cache:cache-api:1.1.0\")",
                "@@ -84,2 +85,3 @@ dependencies {",
                " \t// so that we can run JUnit 4 tests in IntelliJ IDEA.",
                "+\ttestCompile('de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1')",
                " \ttestRuntime(\"org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}\")",
                "@@ -87,4 +89,2 @@ dependencies {",
                " \ttestRuntime(\"org.junit.vintage:junit-vintage-engine:${junitVintageVersion}\")",
                "-\ttestCompile('de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1')",
                "-\ttestRuntime(\"javax.annotation:javax.annotation-api:1.3.2\")",
                " \ttestRuntime(\"org.glassfish:javax.el:3.0.1-b08\")",
                "diff --git a/spring-web/spring-web.gradle b/spring-web/spring-web.gradle",
                "index e03cd9ccae..cbe034d1b9 100644",
                "--- a/spring-web/spring-web.gradle",
                "+++ b/spring-web/spring-web.gradle",
                "@@ -31,2 +31,3 @@ dependencies {",
                " \toptional(\"javax.xml.ws:jaxws-api:2.3.0\")",
                "+\toptional(\"org.glassfish.main:javax.jws:4.0-b33\")",
                " \toptional(\"io.reactivex:rxjava:${rxjavaVersion}\")"
            ],
            "changed_files": [
                "build.gradle",
                "spring-aspects/spring-aspects.gradle",
                "spring-context-support/spring-context-support.gradle",
                "spring-test/spring-test.gradle",
                "spring-web/spring-web.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: allow",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f00afe3247128c74c52a4f323d7c7e18c46ceefe",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521822983,
            "hunks": 10,
            "message": "Use (Concurrent)Map.computeIfAbsent for lazy nested collection creation",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/xml/SimpleNamespaceContext.java b/spring-core/src/main/java/org/springframework/util/xml/SimpleNamespaceContext.java",
                "index 8d94ed7e9e..d0498abcea 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/xml/SimpleNamespaceContext.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/xml/SimpleNamespaceContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -125,7 +125,4 @@ public class SimpleNamespaceContext implements NamespaceContext {",
                " \t\t\tthis.prefixToNamespaceUri.put(prefix, namespaceUri);",
                "-\t\t\tSet<String> prefixes = this.namespaceUriToPrefixes.get(namespaceUri);",
                "-\t\t\tif (prefixes == null) {",
                "-\t\t\t\tprefixes = new LinkedHashSet<>();",
                "-\t\t\t\tthis.namespaceUriToPrefixes.put(namespaceUri, prefixes);",
                "-\t\t\t}",
                "+\t\t\tSet<String> prefixes =",
                "+\t\t\t\t\tthis.namespaceUriToPrefixes.computeIfAbsent(namespaceUri, k -> new LinkedHashSet<>());",
                " \t\t\tprefixes.add(prefix);",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java b/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java",
                "index 2426c0d0b9..1c3dd8fe6d 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java",
                "@@ -28,2 +28,4 @@ import java.util.List;",
                " import java.util.Map;",
                "+import java.util.concurrent.ConcurrentHashMap;",
                "+import java.util.concurrent.ConcurrentMap;",
                " import javax.jms.Connection;",
                "@@ -88,3 +90,3 @@ public class CachingConnectionFactory extends SingleConnectionFactory {",
                "-\tprivate final Map<Integer, LinkedList<Session>> cachedSessions = new HashMap<>();",
                "+\tprivate final ConcurrentMap<Integer, LinkedList<Session>> cachedSessions = new ConcurrentHashMap<>();",
                "@@ -210,10 +212,3 @@ public class CachingConnectionFactory extends SingleConnectionFactory {",
                "-\t\tLinkedList<Session> sessionList;",
                "-\t\tsynchronized (this.cachedSessions) {",
                "-\t\t\tsessionList = this.cachedSessions.get(mode);",
                "-\t\t\tif (sessionList == null) {",
                "-\t\t\t\tsessionList = new LinkedList<>();",
                "-\t\t\t\tthis.cachedSessions.put(mode, sessionList);",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tLinkedList<Session> sessionList = this.cachedSessions.computeIfAbsent(mode, k -> new LinkedList<>());",
                " \t\tSession session = null;",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/connection/JmsResourceHolder.java b/spring-jms/src/main/java/org/springframework/jms/connection/JmsResourceHolder.java",
                "index f38945eb82..5a09a0db85 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/connection/JmsResourceHolder.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/connection/JmsResourceHolder.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -141,7 +141,3 @@ public class JmsResourceHolder extends ResourceHolderSupport {",
                " \t\t\tif (connection != null) {",
                "-\t\t\t\tList<Session> sessions = this.sessionsPerConnection.get(connection);",
                "-\t\t\t\tif (sessions == null) {",
                "-\t\t\t\t\tsessions = new LinkedList<>();",
                "-\t\t\t\t\tthis.sessionsPerConnection.put(connection, sessions);",
                "-\t\t\t\t}",
                "+\t\t\t\tList<Session> sessions = this.sessionsPerConnection.computeIfAbsent(connection, k -> new LinkedList<>());",
                " \t\t\t\tsessions.add(session);",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java b/spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java",
                "index 3049f07c15..4b83ee76e2 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -186,7 +186,3 @@ public class NativeMessageHeaderAccessor extends MessageHeaderAccessor {",
                " \t\t}",
                "-\t\tList<String> values = nativeHeaders.get(name);",
                "-\t\tif (values == null) {",
                "-\t\t\tvalues = new LinkedList<>();",
                "-\t\t\tnativeHeaders.put(name, values);",
                "-\t\t}",
                "+\t\tList<String> values = nativeHeaders.computeIfAbsent(name, k -> new LinkedList<>());",
                " \t\tvalues.add(value);",
                "@@ -199,4 +195,3 @@ public class NativeMessageHeaderAccessor extends MessageHeaderAccessor {",
                " \t\t}",
                "-\t\theaders.forEach((key, values) ->",
                "-\t\t\t\tvalues.forEach(value -> addNativeHeader(key, value)));",
                "+\t\theaders.forEach((key, values) -> values.forEach(value -> addNativeHeader(key, value)));",
                " \t}"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/xml/SimpleNamespaceContext.java",
                "spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java",
                "spring-jms/src/main/java/org/springframework/jms/connection/JmsResourceHolder.java",
                "spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "eeeb0a65460b826b95c119791a3990e4836e78f1",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520582595,
            "hunks": 11,
            "message": "Consistent result synchronization in WebAsyncManager Issue: SPR-16571 (cherry picked from commit cf74b1b)",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java b/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java",
                "index 92fcb48a63..6bcbbdcc4f 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -52,2 +52,3 @@ import org.springframework.web.util.UrlPathHelper;",
                "  * @author Rossen Stoyanchev",
                "+ * @author Juergen Hoeller",
                "  * @since 3.2",
                "@@ -77,5 +78,5 @@ public final class WebAsyncManager {",
                "-\tprivate Object concurrentResult = RESULT_NONE;",
                "+\tprivate volatile Object concurrentResult = RESULT_NONE;",
                "-\tprivate Object[] concurrentResultContext;",
                "+\tprivate volatile Object[] concurrentResultContext;",
                "@@ -135,3 +136,3 @@ public final class WebAsyncManager {",
                " \tpublic boolean isConcurrentHandlingStarted() {",
                "-\t\treturn ((this.asyncWebRequest != null) && this.asyncWebRequest.isAsyncStarted());",
                "+\t\treturn (this.asyncWebRequest != null && this.asyncWebRequest.isAsyncStarted());",
                " \t}",
                "@@ -167,3 +168,3 @@ public final class WebAsyncManager {",
                " \t * @param key the key",
                "-\t * @return the interceptor registered under that key or {@code null}",
                "+\t * @return the interceptor registered under that key, or {@code null} if none",
                " \t */",
                "@@ -176,3 +177,3 @@ public final class WebAsyncManager {",
                " \t * @param key the key",
                "-\t * @return the interceptor registered under that key or {@code null}",
                "+\t * @return the interceptor registered under that key, or {@code null} if none",
                " \t */",
                "@@ -235,4 +236,6 @@ public final class WebAsyncManager {",
                " \tpublic void clearConcurrentResult() {",
                "-\t\tthis.concurrentResult = RESULT_NONE;",
                "-\t\tthis.concurrentResultContext = null;",
                "+\t\tsynchronized (WebAsyncManager.this) {",
                "+\t\t\tthis.concurrentResult = RESULT_NONE;",
                "+\t\t\tthis.concurrentResultContext = null;",
                "+\t\t}",
                " \t}",
                "@@ -267,3 +270,5 @@ public final class WebAsyncManager {",
                " \t */",
                "-\tpublic void startCallableProcessing(final WebAsyncTask<?> webAsyncTask, Object... processingContext) throws Exception {",
                "+\tpublic void startCallableProcessing(final WebAsyncTask<?> webAsyncTask, Object... processingContext)",
                "+\t\t\tthrows Exception {",
                "+",
                " \t\tAssert.notNull(webAsyncTask, \"WebAsyncTask must not be null\");",
                "@@ -348,3 +353,3 @@ public final class WebAsyncManager {",
                " \t\tsynchronized (WebAsyncManager.this) {",
                "-\t\t\tif (hasConcurrentResult()) {",
                "+\t\t\tif (this.concurrentResult != RESULT_NONE) {",
                " \t\t\t\treturn;",
                "@@ -363,3 +368,2 @@ public final class WebAsyncManager {",
                " \t\t}",
                "-",
                " \t\tthis.asyncWebRequest.dispatch();",
                "@@ -447,4 +451,6 @@ public final class WebAsyncManager {",
                " \tprivate void startAsyncProcessing(Object[] processingContext) {",
                "-\t\tclearConcurrentResult();",
                "-\t\tthis.concurrentResultContext = processingContext;",
                "+\t\tsynchronized (WebAsyncManager.this) {",
                "+\t\t\tthis.concurrentResult = RESULT_NONE;",
                "+\t\t\tthis.concurrentResultContext = processingContext;",
                "+\t\t}",
                " \t\tthis.asyncWebRequest.startAsync();"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: request",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "89932891ec67df1f716e65f09826f2647baf2f17",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522786232,
            "hunks": 1,
            "message": "Release version 4.3.15.RELEASE",
            "diff": [
                "diff --git a/gradle.properties b/gradle.properties",
                "index 297fc945e3..53eb3c998f 100644",
                "--- a/gradle.properties",
                "+++ b/gradle.properties",
                "@@ -1 +1 @@",
                "-version=4.3.15.BUILD-SNAPSHOT",
                "+version=4.3.15.RELEASE"
            ],
            "changed_files": [
                "gradle.properties"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "4b9bc50fd057bb20278dc137820159f600cce324",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522786276,
            "hunks": 1,
            "message": "Release version 5.0.5.RELEASE",
            "diff": [
                "diff --git a/gradle.properties b/gradle.properties",
                "index 06a57c112d..750bef1dd9 100644",
                "--- a/gradle.properties",
                "+++ b/gradle.properties",
                "@@ -1 +1 @@",
                "-version=5.0.5.BUILD-SNAPSHOT",
                "+version=5.0.5.RELEASE"
            ],
            "changed_files": [
                "gradle.properties"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "8a9321652d45b6a524921e2cc5988696495ecaaa",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522530428,
            "hunks": 4,
            "message": "Refined javadoc",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java",
                "index f9783feaf8..a0dc4417a2 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java",
                "@@ -91,3 +91,3 @@ public class ResourceBundleViewResolver extends AbstractCachingViewResolver",
                " \t * The default is \"views\".",
                "-\t * <p>{@code ResourceBundle} supports different suffixes. For example,",
                "+\t * <p>{@code ResourceBundle} supports different locale suffixes. For example,",
                " \t * a base name of \"views\" might map to {@code ResourceBundle} files",
                "@@ -109,9 +109,8 @@ public class ResourceBundleViewResolver extends AbstractCachingViewResolver",
                " \t * conventions. The default is a single basename \"views\".",
                "-\t * <p>{@code ResourceBundle} supports different suffixes. For example,",
                "+\t * <p>{@code ResourceBundle} supports different locale suffixes. For example,",
                " \t * a base name of \"views\" might map to {@code ResourceBundle} files",
                " \t * \"views\", \"views_en_au\" and \"views_de\".",
                "-\t * <p>The associated resource bundles will be checked sequentially",
                "-\t * when resolving a message code. Note that message definitions in a",
                "-\t * <i>previous</i> resource bundle will override ones in a later bundle,",
                "-\t * due to the sequential lookup.",
                "+\t * <p>The associated resource bundles will be checked sequentially when resolving",
                "+\t * a message code. Note that message definitions in a <i>previous</i> resource",
                "+\t * bundle will override ones in a later bundle, due to the sequential lookup.",
                " \t * <p>Note that ResourceBundle names are effectively classpath locations: As a",
                "@@ -122,2 +121,3 @@ public class ResourceBundleViewResolver extends AbstractCachingViewResolver",
                " \t * @see ResourceBundle#getBundle(String)",
                "+\t * @see ResourceBundle#getBundle(String, Locale)",
                " \t */"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "56774baa2a0a15711f3895bc9d5082b1e7351dab",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522849424,
            "hunks": 4,
            "message": "Use Gradle 4.6's built-in support for the JUnit Platform Gradle 4.6 provides built-in support for the JUnit Platform within the standard `test` task. This commit configures a custom `testJUnitJupiter` test task for executing JUnit Jupiter tests directly on the JUnit Platform instead of indirectly on JUnit 4 via @RunWith(JUnitPlatform.class). This switch provides for better integration with Gradle's test reporting and paves the way for a possible transition to the JUnit Platform in the future. Issue: SPR-16672",
            "diff": [
                "diff --git a/spring-test/spring-test.gradle b/spring-test/spring-test.gradle",
                "index f921f589a7..0a0602bb5d 100644",
                "--- a/spring-test/spring-test.gradle",
                "+++ b/spring-test/spring-test.gradle",
                "@@ -105,11 +105,23 @@ task testNG(type: Test) {",
                "+task testJUnitJupiter(type: Test) {",
                "+\tdescription = 'Runs JUnit Jupiter tests.'",
                "+\tuseJUnitPlatform {",
                "+\t\tincludeEngines 'junit-jupiter'",
                "+\t\texcludeTags 'failing-test-case'",
                "+\t}",
                "+\tfilter {",
                "+\t\tincludeTestsMatching \"org.springframework.test.context.junit.jupiter.*\"",
                "+\t}",
                "+\treports.junitXml.destination = file(\"$buildDir/test-results\")",
                "+\t// Java Util Logging for the JUnit Platform.",
                "+\t// systemProperty('java.util.logging.manager', 'org.apache.logging.log4j.jul.LogManager')",
                "+}",
                "+",
                " test {",
                " \tdescription = 'Runs JUnit tests.'",
                "-\tdependsOn testNG",
                "+\tdependsOn testJUnitJupiter, testNG",
                " \tuseJUnit()",
                " \tscanForTestClasses = false",
                "-\tinclude(['**/*Tests.class', '**/*Test.class', '**/SpringJUnitJupiterTestSuite.class'])",
                "-\texclude(['**/testng/**/*.*'])",
                "-\t// Java Util Logging for JUnit 5.",
                "-\t// systemProperty('java.util.logging.manager', 'org.apache.logging.log4j.jul.LogManager')",
                "+\tinclude(['**/*Tests.class', '**/*Test.class'])",
                "+\texclude(['**/testng/**/*.*', '**/jupiter/**/*.*'])",
                " \treports.junitXml.destination = file(\"$buildDir/test-results\")",
                "@@ -120,3 +132,3 @@ task aggregateTestReports(type: TestReport) {",
                " \tdestinationDir = test.reports.html.destination",
                "-\treportOn test, testNG",
                "+\treportOn test, testJUnitJupiter, testNG",
                " }"
            ],
            "changed_files": [
                "spring-test/spring-test.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: configure",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "8651b8d4c1b09d3bb75bb0cf56791970a72751d8",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521464221,
            "hunks": 1,
            "message": "Show use of RequestEntity rather than HttpEntity Issue: SPR-16608",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java",
                "index 993a1b55f1..a9bc98c296 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java",
                "@@ -91,5 +91,3 @@ import org.springframework.web.util.UriTemplateHandler;",
                "  *",
                "- * <p>For each HTTP method there are three variants: two accept a URI template string",
                "- * and URI variables (array or map) while a third accepts a {@link URI}.",
                "- * Note that for URI templates it is assumed encoding is necessary, e.g.",
                "+ * <p><strong>Note:</strong> For URI templates it is assumed encoding is necessary, e.g.",
                "  * {@code restTemplate.getForObject(\"http://example.com/hotel list\")} becomes"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/client/RestTemplate.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "bc07a54075f540240791311e1276222450589802",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522530510,
            "hunks": 5,
            "message": "Clear AnnotationUtils cache after context refresh (along with others) Issue: SPR-16675",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java b/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java",
                "index a265d32168..4ec03e7680 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -68,2 +68,3 @@ import org.springframework.context.weaving.LoadTimeWeaverAwareProcessor;",
                " import org.springframework.core.ResolvableType;",
                "+import org.springframework.core.annotation.AnnotationUtils;",
                " import org.springframework.core.convert.ConversionService;",
                "@@ -902,6 +903,8 @@ public abstract class AbstractApplicationContext extends DefaultResourceLoader",
                " \t/**",
                "-\t * Reset Spring's common core caches, in particular the {@link ReflectionUtils},",
                "-\t * {@link ResolvableType} and {@link CachedIntrospectionResults} caches.",
                "+\t * Reset Spring's common reflection metadata caches, in particular the",
                "+\t * {@link ReflectionUtils}, {@link AnnotationUtils}, {@link ResolvableType}",
                "+\t * and {@link CachedIntrospectionResults} caches.",
                " \t * @since 4.2",
                " \t * @see ReflectionUtils#clearCache()",
                "+\t * @see AnnotationUtils#clearCache()",
                " \t * @see ResolvableType#clearCache()",
                "@@ -911,2 +914,3 @@ public abstract class AbstractApplicationContext extends DefaultResourceLoader",
                " \t\tReflectionUtils.clearCache();",
                "+\t\tAnnotationUtils.clearCache();",
                " \t\tResolvableType.clearCache();"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: application",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d553ddc5b3a657adebad04d9f3c7d466fbdd7b05",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522360217,
            "hunks": 50,
            "message": "Nullability refinements (based on IntelliJ IDEA 2018.1 introspection) Issue: SPR-15756",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java",
                "index 5819471ee8..f9712f4af2 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java",
                "@@ -369,5 +369,5 @@ public abstract class BeanUtils {",
                " \t\tAssert.notNull(clazz, \"Class must not be null\");",
                "-\t\tint firstParen = signature.indexOf('(');",
                "-\t\tint lastParen = signature.indexOf(')');",
                "-\t\tif (firstParen > -1 && lastParen == -1) {",
                "+\t\tint startParen = signature.indexOf('(');",
                "+\t\tint endParen = signature.indexOf(')');",
                "+\t\tif (startParen > -1 && endParen == -1) {",
                " \t\t\tthrow new IllegalArgumentException(\"Invalid method signature '\" + signature +",
                "@@ -375,3 +375,3 @@ public abstract class BeanUtils {",
                " \t\t}",
                "-\t\telse if (lastParen > -1 && firstParen == -1) {",
                "+\t\telse if (startParen == -1 && endParen > -1) {",
                " \t\t\tthrow new IllegalArgumentException(\"Invalid method signature '\" + signature +",
                "@@ -379,3 +379,3 @@ public abstract class BeanUtils {",
                " \t\t}",
                "-\t\telse if (firstParen == -1 && lastParen == -1) {",
                "+\t\telse if (startParen == -1) {",
                " \t\t\treturn findMethodWithMinimalParameters(clazz, signature);",
                "@@ -383,5 +383,5 @@ public abstract class BeanUtils {",
                " \t\telse {",
                "-\t\t\tString methodName = signature.substring(0, firstParen);",
                "+\t\t\tString methodName = signature.substring(0, startParen);",
                " \t\t\tString[] parameterTypeNames =",
                "-\t\t\t\t\tStringUtils.commaDelimitedListToStringArray(signature.substring(firstParen + 1, lastParen));",
                "+\t\t\t\t\tStringUtils.commaDelimitedListToStringArray(signature.substring(startParen + 1, endParen));",
                " \t\t\tClass<?>[] parameterTypes = new Class<?>[parameterTypeNames.length];",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/wiring/BeanConfigurerSupport.java b/spring-beans/src/main/java/org/springframework/beans/factory/wiring/BeanConfigurerSupport.java",
                "index 601b06b34a..22944cf04c 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/wiring/BeanConfigurerSupport.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/wiring/BeanConfigurerSupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -146,7 +146,8 @@ public class BeanConfigurerSupport implements BeanFactoryAware, InitializingBean",
                " \t\ttry {",
                "-\t\t\tif (bwi.indicatesAutowiring() || (bwi.isDefaultBeanName() && bwi.getBeanName() != null &&",
                "-\t\t\t\t\t!beanFactory.containsBean(bwi.getBeanName()))) {",
                "+\t\t\tString beanName = bwi.getBeanName();",
                "+\t\t\tif (bwi.indicatesAutowiring() || (bwi.isDefaultBeanName() && beanName != null &&",
                "+\t\t\t\t\t!beanFactory.containsBean(beanName))) {",
                " \t\t\t\t// Perform autowiring (also applying standard factory / post-processor callbacks).",
                " \t\t\t\tbeanFactory.autowireBeanProperties(beanInstance, bwi.getAutowireMode(), bwi.getDependencyCheck());",
                "-\t\t\t\tbeanFactory.initializeBean(beanInstance, bwi.getBeanName());",
                "+\t\t\t\tbeanFactory.initializeBean(beanInstance, (beanName != null ? beanName : \"\"));",
                " \t\t\t}",
                "@@ -154,3 +155,3 @@ public class BeanConfigurerSupport implements BeanFactoryAware, InitializingBean",
                " \t\t\t\t// Perform explicit wiring based on the specified bean definition.",
                "-\t\t\t\tbeanFactory.configureBean(beanInstance, bwi.getBeanName());",
                "+\t\t\t\tbeanFactory.configureBean(beanInstance, (beanName != null ? beanName : \"\"));",
                " \t\t\t}",
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "index 71790901d9..2d3bb969dc 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "@@ -590,3 +590,3 @@ class ConfigurationClassParser {",
                " \tprivate void processImports(ConfigurationClass configClass, SourceClass currentSourceClass,",
                "-\t\t\tCollection<SourceClass> importCandidates, boolean checkForCircularImports) throws IOException {",
                "+\t\t\tCollection<SourceClass> importCandidates, boolean checkForCircularImports) {",
                "@@ -1035,5 +1035,5 @@ class ConfigurationClassParser {",
                " \t\t\t\t\t\"Illegal attempt by @Configuration class '%s' to import class '%s' as '%s' is \" +",
                "-\t\t\t\t\t\"already present in the current import stack %s\", importStack.peek().getSimpleName(),",
                "+\t\t\t\t\t\"already present in the current import stack %s\", importStack.element().getSimpleName(),",
                " \t\t\t\t\tattemptedImport.getSimpleName(), attemptedImport.getSimpleName(), importStack),",
                "-\t\t\t\t\tnew Location(importStack.peek().getResource(), attemptedImport.getMetadata()));",
                "+\t\t\t\t\tnew Location(importStack.element().getResource(), attemptedImport.getMetadata()));",
                " \t\t}",
                "diff --git a/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java b/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "index 2d38c021b6..f0cb18e4df 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "@@ -368,3 +368,3 @@ public class ApplicationListenerMethodAdapter implements GenericApplicationListe",
                " \t\t\t}",
                "-\t\t\tif (declaredEventType.getRawClass().isInstance(event)) {",
                "+\t\t\tif (eventClass != null && eventClass.isInstance(event)) {",
                " \t\t\t\treturn declaredEventType;",
                "diff --git a/spring-core/src/main/java/org/springframework/util/ClassUtils.java b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "index c0023dacad..33bf4bbf3c 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "@@ -211,10 +211,2 @@ public abstract class ClassUtils {",
                "-\t/**",
                "-\t * Determine if the supplied class is an <em>inner class</em>.",
                "-\t * @return {@code true} if the supplied class is an inner class",
                "-\t */",
                "-\tpublic static boolean isInnerClass(Class<?> clazz) {",
                "-\t\treturn clazz != null && clazz.isMemberClass() && !Modifier.isStatic(clazz.getModifiers());",
                "-\t}",
                "-",
                " \t/**",
                "@@ -385,2 +377,13 @@ public abstract class ClassUtils {",
                "+\t/**",
                "+\t * Determine if the supplied class is an <em>inner class</em>,",
                "+\t * i.e. a non-static member of an enclosing class.",
                "+\t * @return {@code true} if the supplied class is an inner class",
                "+\t * @since 5.0.5",
                "+\t * @see Class#isMemberClass()",
                "+\t */",
                "+\tpublic static boolean isInnerClass(Class<?> clazz) {",
                "+\t\treturn (clazz.isMemberClass() && !Modifier.isStatic(clazz.getModifiers()));",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java b/spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java",
                "index 6f7aba4772..3c581db9e8 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -138,4 +138,5 @@ public class ListenableFutureCallbackRegistry<T> {",
                " \t\t\tthis.result = result;",
                "-\t\t\twhile (!this.successCallbacks.isEmpty()) {",
                "-\t\t\t\tnotifySuccess(this.successCallbacks.poll());",
                "+\t\t\tSuccessCallback<? super T> callback;",
                "+\t\t\twhile ((callback = this.successCallbacks.poll()) != null) {",
                "+\t\t\t\tnotifySuccess(callback);",
                " \t\t\t}",
                "@@ -153,4 +154,5 @@ public class ListenableFutureCallbackRegistry<T> {",
                " \t\t\tthis.result = ex;",
                "-\t\t\twhile (!this.failureCallbacks.isEmpty()) {",
                "-\t\t\t\tnotifyFailure(this.failureCallbacks.poll());",
                "+\t\t\tFailureCallback callback;",
                "+\t\t\twhile ((callback = this.failureCallbacks.poll()) != null) {",
                "+\t\t\t\tnotifyFailure(callback);",
                " \t\t\t}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java b/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "index 66b232c88d..934f15a05a 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "@@ -60,3 +60,3 @@ public class CodeFlow implements Opcodes {",
                " \t */",
                "-\tprivate final Deque<ArrayList<String>> compilationScopes;",
                "+\tprivate final Deque<List<String>> compilationScopes;",
                "@@ -130,3 +130,3 @@ public class CodeFlow implements Opcodes {",
                " \t\tif (descriptor != null) {",
                "-\t\t\tthis.compilationScopes.peek().add(descriptor);",
                "+\t\t\tthis.compilationScopes.element().add(descriptor);",
                " \t\t}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ExpressionState.java b/spring-expression/src/main/java/org/springframework/expression/spel/ExpressionState.java",
                "index 3f244d4142..42f2e3d336 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ExpressionState.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ExpressionState.java",
                "@@ -108,3 +108,3 @@ public class ExpressionState {",
                " \t\t}",
                "-\t\treturn this.contextObjects.peek();",
                "+\t\treturn this.contextObjects.element();",
                " \t}",
                "@@ -138,3 +138,3 @@ public class ExpressionState {",
                " \t\t}",
                "-\t\treturn this.scopeRootObjects.peek();",
                "+\t\treturn this.scopeRootObjects.element();",
                " \t}",
                "@@ -159,4 +159,4 @@ public class ExpressionState {",
                " \tpublic Object convertValue(Object value, TypeDescriptor targetTypeDescriptor) throws EvaluationException {",
                "-\t\tObject result = this.relatedContext.getTypeConverter().convertValue(value,",
                "-\t\t\t\tTypeDescriptor.forObject(value), targetTypeDescriptor);",
                "+\t\tObject result = this.relatedContext.getTypeConverter().convertValue(",
                "+\t\t\t\tvalue, TypeDescriptor.forObject(value), targetTypeDescriptor);",
                " \t\tif (result == null) {",
                "@@ -174,3 +174,4 @@ public class ExpressionState {",
                " \t\tObject val = value.getValue();",
                "-\t\treturn this.relatedContext.getTypeConverter().convertValue(val, TypeDescriptor.forObject(val), targetTypeDescriptor);",
                "+\t\treturn this.relatedContext.getTypeConverter().convertValue(",
                "+\t\t\t\tval, TypeDescriptor.forObject(val), targetTypeDescriptor);",
                " \t}",
                "@@ -201,3 +202,3 @@ public class ExpressionState {",
                " \tpublic void setLocalVariable(String name, Object value) {",
                "-\t\tinitVariableScopes().peek().setVariable(name, value);",
                "+\t\tinitVariableScopes().element().setVariable(name, value);",
                " \t}",
                "@@ -214,6 +215,6 @@ public class ExpressionState {",
                "-\tprivate LinkedList<VariableScope> initVariableScopes() {",
                "+\tprivate Deque<VariableScope> initVariableScopes() {",
                " \t\tif (this.variableScopes == null) {",
                " \t\t\tthis.variableScopes = new LinkedList<>();",
                "-\t\t\t// top level empty variable scope",
                "+\t\t\t// top-level empty variable scope",
                " \t\t\tthis.variableScopes.add(new VariableScope());",
                "@@ -223,3 +224,3 @@ public class ExpressionState {",
                "-\tprivate ArrayDeque<TypedValue> initScopeRootObjects() {",
                "+\tprivate Deque<TypedValue> initScopeRootObjects() {",
                " \t\tif (this.scopeRootObjects == null) {",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ast/ValueRef.java b/spring-expression/src/main/java/org/springframework/expression/spel/ast/ValueRef.java",
                "index 85f47c4dfb..702f0e5c6a 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ast/ValueRef.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/ValueRef.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -60,3 +60,3 @@ public interface ValueRef {",
                " \t */",
                "-\tstatic class NullValueRef implements ValueRef {",
                "+\tclass NullValueRef implements ValueRef {",
                "@@ -87,3 +87,3 @@ public interface ValueRef {",
                " \t */",
                "-\tstatic class TypedValueHolderValueRef implements ValueRef {",
                "+\tclass TypedValueHolderValueRef implements ValueRef {",
                "@@ -93,3 +93,3 @@ public interface ValueRef {",
                "-\t\tpublic TypedValueHolderValueRef(TypedValue typedValue,SpelNodeImpl node) {",
                "+\t\tpublic TypedValueHolderValueRef(TypedValue typedValue, SpelNodeImpl node) {",
                " \t\t\tthis.typedValue = typedValue;",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java b/spring-jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java",
                "index db1388326a..7fc7767412 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -270,12 +270,9 @@ abstract class AbstractListenerContainerParser implements BeanDefinitionParser {",
                " \t\tString replyDestinationType = containerEle.getAttribute(RESPONSE_DESTINATION_TYPE_ATTRIBUTE);",
                "-\t\tif (DESTINATION_TYPE_TOPIC.equals(replyDestinationType)) {",
                "-\t\t\treplyPubSubDomain = true;",
                "-\t\t}",
                "-\t\telse if (DESTINATION_TYPE_QUEUE.equals(replyDestinationType)) {",
                "-\t\t\treplyPubSubDomain = false;",
                "+\t\tif (!StringUtils.hasText(replyDestinationType)) {",
                "+\t\t\treplyPubSubDomain = pubSubDomain;  // the default: same value as pubSubDomain",
                " \t\t}",
                "-\t\telse if (!StringUtils.hasText(replyDestinationType)) {",
                "-\t\t\treplyPubSubDomain = pubSubDomain; // the default: same value as pubSubDomain",
                "+\t\telse if (DESTINATION_TYPE_TOPIC.equals(replyDestinationType)) {",
                "+\t\t\treplyPubSubDomain = true;",
                " \t\t}",
                "-\t\telse if (StringUtils.hasText(replyDestinationType)) {",
                "+\t\telse if (!DESTINATION_TYPE_QUEUE.equals(replyDestinationType)) {",
                " \t\t\tparserContext.getReaderContext().error(\"Invalid listener container 'response-destination-type': only \" +",
                "diff --git a/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java b/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java",
                "index 841de69fa9..b2108b471f 100644",
                "--- a/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java",
                "+++ b/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -211,2 +211,3 @@ public class SimpleNamingContext implements Context {",
                " \t@Override",
                "+\t@Nullable",
                " \tpublic Object addToEnvironment(String propName, Object propVal) {",
                "diff --git a/spring-web/src/main/java/org/springframework/http/codec/xml/Jaxb2XmlDecoder.java b/spring-web/src/main/java/org/springframework/http/codec/xml/Jaxb2XmlDecoder.java",
                "index 90ed50eaf0..a51802eb40 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/codec/xml/Jaxb2XmlDecoder.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/codec/xml/Jaxb2XmlDecoder.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -224,2 +224,3 @@ public class Jaxb2XmlDecoder extends AbstractDecoder<Object> {",
                " \t\t\tif (this.elementDepth > this.barrier) {",
                "+\t\t\t\tAssert.state(this.events != null, \"No XMLEvent List\");",
                " \t\t\t\tthis.events.add(event);",
                "@@ -230,2 +231,3 @@ public class Jaxb2XmlDecoder extends AbstractDecoder<Object> {",
                " \t\t\t\t\tthis.barrier = Integer.MAX_VALUE;",
                "+\t\t\t\t\tAssert.state(this.events != null, \"No XMLEvent List\");",
                " \t\t\t\t\treturn Mono.just(this.events);",
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/DefaultPathContainer.java b/spring-web/src/main/java/org/springframework/http/server/DefaultPathContainer.java",
                "index 5a715d1fb1..e97418f818 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/DefaultPathContainer.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/DefaultPathContainer.java",
                "@@ -182,5 +182,5 @@ class DefaultPathContainer implements PathContainer {",
                "-\t\tAssert.isTrue(fromIndex < toIndex, () -> \"fromIndex: \" + fromIndex + \" should be < toIndex \" + toIndex);",
                " \t\tAssert.isTrue(fromIndex >= 0 && fromIndex < elements.size(), () -> \"Invalid fromIndex: \" + fromIndex);",
                " \t\tAssert.isTrue(toIndex >= 0 && toIndex <= elements.size(), () -> \"Invalid toIndex: \" + toIndex);",
                "+\t\tAssert.isTrue(fromIndex < toIndex, () -> \"fromIndex: \" + fromIndex + \" should be < toIndex \" + toIndex);",
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java b/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java",
                "index 7d93e21374..52abd5e5d0 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java",
                "@@ -111,5 +111,3 @@ class UndertowServerHttpResponse extends AbstractListenerServerHttpResponse impl",
                " \t\t\t\tMono.defer(() -> {",
                "-\t\t\t\t\tFileChannel source = null;",
                "-\t\t\t\t\ttry {",
                "-\t\t\t\t\t\tsource = FileChannel.open(file.toPath(), StandardOpenOption.READ);",
                "+\t\t\t\t\ttry (FileChannel source = FileChannel.open(file.toPath(), StandardOpenOption.READ)) {",
                " \t\t\t\t\t\tStreamSinkChannel destination = this.exchange.getResponseChannel();",
                "@@ -121,13 +119,2 @@ class UndertowServerHttpResponse extends AbstractListenerServerHttpResponse impl",
                " \t\t\t\t\t}",
                "-\t\t\t\t\tfinally {",
                "-\t\t\t\t\t\tif (source != null) {",
                "-\t\t\t\t\t\t\ttry {",
                "-\t\t\t\t\t\t\t\tsource.close();",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\tcatch (IOException ex) {",
                "-\t\t\t\t\t\t\t\t// ignore",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t}",
                "-\t\t\t\t\t}",
                "-",
                " \t\t\t\t}));",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "index 4cda6ab082..5841b899a9 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -85,3 +85,3 @@ public abstract class AbstractView implements View, ApplicationContextAware {",
                " \t */",
                "-\tpublic void setSupportedMediaTypes(@Nullable List<MediaType> supportedMediaTypes) {",
                "+\tpublic void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {",
                " \t\tAssert.notEmpty(supportedMediaTypes, \"MediaType List must not be empty\");",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "index 637303983d..bd621ae75f 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -25,3 +25,2 @@ import org.springframework.core.Ordered;",
                " import org.springframework.http.MediaType;",
                "-import org.springframework.lang.Nullable;",
                " import org.springframework.util.Assert;",
                "@@ -56,3 +55,3 @@ public abstract class ViewResolverSupport implements Ordered {",
                " \t */",
                "-\tpublic void setSupportedMediaTypes(@Nullable List<MediaType> supportedMediaTypes) {",
                "+\tpublic void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {",
                " \t\tAssert.notEmpty(supportedMediaTypes, \"MediaType List must not be empty\");"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/BeanUtils.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/wiring/BeanConfigurerSupport.java",
                "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ExpressionState.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ast/ValueRef.java",
                "spring-jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java",
                "spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java",
                "spring-web/src/main/java/org/springframework/http/codec/xml/Jaxb2XmlDecoder.java",
                "spring-web/src/main/java/org/springframework/http/server/DefaultPathContainer.java",
                "spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: serve, application, configure",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "aba882af4c4f7d2ec6e0b859dbffc1bcf65e000c",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522843494,
            "hunks": 15,
            "message": "Clean up warnings in spring-webmvc",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java",
                "index 8c71b36346..3aa4f2d7b9 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java",
                "@@ -756,2 +756,3 @@ public abstract class AbstractHandlerMethodMapping<T> extends AbstractHandlerMap",
                "+\t\t@SuppressWarnings(\"unused\")",
                " \t\tpublic void handle() {",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java",
                "index 382377ea99..6ff9c0e625 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java",
                "@@ -449,2 +449,3 @@ public abstract class RequestMappingInfoHandlerMapping extends AbstractHandlerMe",
                "+\t\t@SuppressWarnings(\"unused\")",
                " \t\tpublic HttpHeaders handle() {",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java",
                "index a378765f02..9081bae65b 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -289,3 +289,3 @@ public abstract class AbstractMessageConverterMethodArgumentResolver implements",
                " \t\tif (parameter.getParameterType() == Optional.class) {",
                "-\t\t\tif (arg == null || (arg instanceof Collection && ((Collection) arg).isEmpty()) ||",
                "+\t\t\tif (arg == null || (arg instanceof Collection && ((Collection<?>) arg).isEmpty()) ||",
                " \t\t\t\t\t(arg instanceof Object[] && ((Object[]) arg).length == 0)) {",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java",
                "index 807affee65..b9712d8b72 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java",
                "@@ -192,3 +192,3 @@ public abstract class AbstractMessageConverterMethodProcessor extends AbstractMe",
                " \t\t}",
                "-\t\t",
                "+",
                " \t\tif (isResourceType(value, returnType)) {",
                "@@ -264,3 +264,3 @@ public abstract class AbstractMessageConverterMethodProcessor extends AbstractMe",
                " \t\t\t\t\t\tconverter.canWrite(valueType, selectedMediaType)) {",
                "-\t\t\t\t\toutputValue = (T) getAdvice().beforeBodyWrite(outputValue, returnType, selectedMediaType,",
                "+\t\t\t\t\toutputValue = getAdvice().beforeBodyWrite(outputValue, returnType, selectedMediaType,",
                " \t\t\t\t\t\t\t(Class<? extends HttpMessageConverter<?>>) converter.getClass(),",
                "@@ -323,3 +323,3 @@ public abstract class AbstractMessageConverterMethodProcessor extends AbstractMe",
                " \t */",
                "-\t@SuppressWarnings({\"unchecked\", \"unused\"})",
                "+\t@SuppressWarnings(\"unused\")",
                " \tprotected List<MediaType> getProducibleMediaTypes(HttpServletRequest request, Class<?> valueClass) {",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitterReturnValueHandler.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitterReturnValueHandler.java",
                "index d361090cc8..0f96b85169 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitterReturnValueHandler.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitterReturnValueHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -115,2 +115,3 @@ public class ResponseBodyEmitterReturnValueHandler implements HandlerMethodRetur",
                " \t@Override",
                "+\t@SuppressWarnings(\"resource\")",
                " \tpublic void handleReturnValue(@Nullable Object returnValue, MethodParameter returnType,",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/StreamingResponseBodyReturnValueHandler.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/StreamingResponseBodyReturnValueHandler.java",
                "index 92e076a1fc..46c259233c 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/StreamingResponseBodyReturnValueHandler.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/StreamingResponseBodyReturnValueHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -59,2 +59,3 @@ public class StreamingResponseBodyReturnValueHandler implements HandlerMethodRet",
                " \t@Override",
                "+\t@SuppressWarnings(\"resource\")",
                " \tpublic void handleReturnValue(@Nullable Object returnValue, MethodParameter returnType,",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/AppCacheManifestTransformer.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/AppCacheManifestTransformer.java",
                "index ce45ccac55..2777e13639 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/AppCacheManifestTransformer.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/AppCacheManifestTransformer.java",
                "@@ -120,2 +120,3 @@ public class AppCacheManifestTransformer extends ResourceTransformerSupport {",
                "+\t\t@SuppressWarnings(\"resource\")",
                " \t\tScanner scanner = new Scanner(content);",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlProvider.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlProvider.java",
                "index 5b37280f69..53b828b945 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlProvider.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlProvider.java",
                "@@ -19,3 +19,2 @@ package org.springframework.web.servlet.resource;",
                " import java.util.ArrayList;",
                "-import java.util.Collections;",
                " import java.util.Comparator;",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/xml/MarshallingView.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/xml/MarshallingView.java",
                "index 83ab402e41..94a65b2826 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/xml/MarshallingView.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/xml/MarshallingView.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -167,3 +167,3 @@ public class MarshallingView extends AbstractView {",
                " \t\tif (value instanceof JAXBElement) {",
                "-\t\t\tclassToCheck = ((JAXBElement) value).getDeclaredType();",
                "+\t\t\tclassToCheck = ((JAXBElement<?>) value).getDeclaredType();",
                " \t\t}"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodArgumentResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitterReturnValueHandler.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/StreamingResponseBodyReturnValueHandler.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/AppCacheManifestTransformer.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlProvider.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/xml/MarshallingView.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource, request",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "8f525f07e9dd6a34463d43546c22cb95afd0429b",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1511143254,
            "hunks": 1,
            "message": "Fix typos, formatting and escaping in reference Note: Some symbol combinations (including <=) serve as textual symbol replacements in AsciiDoc. http://asciidoctor.org/docs/asciidoc-syntax-quick-reference/#text-replacement",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/annotation/Lookup.java b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/Lookup.java",
                "index 64c4f990ac..c035171411 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/annotation/Lookup.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/Lookup.java",
                "@@ -48,3 +48,3 @@ import java.lang.annotation.Target;",
                "  * beans returned from {@code @Bean} methods in configuration classes; you'll have",
                "- * to resort to {@code @Inject Provider&lt;TargetBean&gt;} or the like instead.",
                "+ * to resort to {@code @Inject Provider<TargetBean>} or the like instead.",
                "  *"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/factory/annotation/Lookup.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: serve",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "53d01392d70daef1d198e6563fd8f96d0d0166a0",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522331102,
            "hunks": 5,
            "message": "Workaround for inner class constructor parameter annotation bug in javac Issue: SPR-16652",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/MethodParameter.java b/spring-core/src/main/java/org/springframework/core/MethodParameter.java",
                "index 1a6dda592d..b8116804ea 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/MethodParameter.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/MethodParameter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -24,2 +24,3 @@ import java.lang.reflect.Member;",
                " import java.lang.reflect.Method;",
                "+import java.lang.reflect.Modifier;",
                " import java.lang.reflect.Parameter;",
                "@@ -59,2 +60,4 @@ public class MethodParameter {",
                "+\tprivate static final Annotation[] EMPTY_ANNOTATION_ARRAY = new Annotation[0];",
                "+",
                " \tprivate final Executable executable;",
                "@@ -516,7 +519,16 @@ public class MethodParameter {",
                " \t\t\tAnnotation[][] annotationArray = this.executable.getParameterAnnotations();",
                "-\t\t\tif (this.parameterIndex >= 0 && this.parameterIndex < annotationArray.length) {",
                "-\t\t\t\tparamAnns = adaptAnnotationArray(annotationArray[this.parameterIndex]);",
                "+\t\t\tint index = this.parameterIndex;",
                "+\t\t\tif (this.executable instanceof Constructor &&",
                "+\t\t\t\t\tthis.executable.getDeclaringClass().isMemberClass() &&",
                "+\t\t\t\t\t!Modifier.isStatic(this.executable.getDeclaringClass().getModifiers()) &&",
                "+\t\t\t\t\tannotationArray.length == this.executable.getParameterCount() - 1) {",
                "+\t\t\t\t// Bug in javac in JDK <9: annotation array excludes enclosing instance parameter",
                "+\t\t\t\t// for inner classes, so access it with the actual parameter index lowered by 1",
                "+\t\t\t\tindex = this.parameterIndex - 1;",
                "+\t\t\t}",
                "+\t\t\tif (index >= 0 && index < annotationArray.length) {",
                "+\t\t\t\tparamAnns = adaptAnnotationArray(annotationArray[index]);",
                " \t\t\t}",
                " \t\t\telse {",
                "-\t\t\t\tparamAnns = new Annotation[0];",
                "+\t\t\t\tparamAnns = EMPTY_ANNOTATION_ARRAY;",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/MethodParameter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "5f6b04251e1643d7ba22fcff708fcf196a36dcc6"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f2478cf8cfd4d8b59eadb195d22d1287ee744692",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521822728,
            "hunks": 1,
            "message": "Contextual BeanCreationException in case of depending on a missing bean Issue: SPR-16628 (cherry picked from commit 937cd48)",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "index c147765e16..9e0044c0ee 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "@@ -295,3 +295,9 @@ public abstract class AbstractBeanFactory extends FactoryBeanRegistrySupport imp",
                " \t\t\t\t\t\tregisterDependentBean(dep, beanName);",
                "-\t\t\t\t\t\tgetBean(dep);",
                "+\t\t\t\t\t\ttry {",
                "+\t\t\t\t\t\t\tgetBean(dep);",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t\tcatch (NoSuchBeanDefinitionException ex) {",
                "+\t\t\t\t\t\t\tthrow new BeanCreationException(mbd.getResourceDescription(), beanName,",
                "+\t\t\t\t\t\t\t\t\t\"'\" + beanName + \"' depends on missing bean '\" + dep + \"'\", ex);",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "937cd48fcb3675daed5a65a9b4de5c7fcb56cb9b"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "301ba014278855681681e3bc1371bbd10a0d4489",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521457455,
            "hunks": 55,
            "message": "CallMetaDataContext handles 'procedureColumnResult' as return parameter Issue: SPR-16611 (cherry picked from commit b7c4238)",
            "diff": [
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java",
                "index ab96ef62ce..64ddd6ca48 100755",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java",
                "@@ -44,3 +44,4 @@ import org.springframework.util.StringUtils;",
                " /**",
                "- * Class to manage context metadata used for the configuration and execution of the call.",
                "+ * Class to manage context meta-data used for the configuration",
                "+ * and execution of a stored procedure call.",
                "  *",
                "@@ -83,3 +84,3 @@ public class CallMetaDataContext {",
                "-\t// Should we access call parameter meta data info or not",
                "+\t// Should we access call parameter meta-data info or not",
                " \tprivate boolean accessCallParameterMetaData = true;",
                "@@ -89,3 +90,3 @@ public class CallMetaDataContext {",
                "-\t// The provider of call meta data",
                "+\t// The provider of call meta-data",
                " \tprivate CallMetaDataProvider metaDataProvider;",
                "@@ -206,3 +207,3 @@ public class CallMetaDataContext {",
                " \t/**",
                "-\t * Specify whether call parameter metadata should be accessed.",
                "+\t * Specify whether call parameter meta-data should be accessed.",
                " \t */",
                "@@ -213,3 +214,3 @@ public class CallMetaDataContext {",
                " \t/**",
                "-\t * Check whether call parameter metadata should be accessed.",
                "+\t * Check whether call parameter meta-data should be accessed.",
                " \t */",
                "@@ -237,4 +238,4 @@ public class CallMetaDataContext {",
                " \t/**",
                "-\t * Initialize this class with metadata from the database.",
                "-\t * @param dataSource the DataSource used to retrieve metadata",
                "+\t * Initialize this class with meta-data from the database.",
                "+\t * @param dataSource the DataSource used to retrieve meta-data",
                " \t */",
                "@@ -260,3 +261,4 @@ public class CallMetaDataContext {",
                " \t\t\telse {",
                "-\t\t\t\tthrow new InvalidDataAccessApiUsageException(\"Return of a ResultSet from a stored procedure is not supported.\");",
                "+\t\t\t\tthrow new InvalidDataAccessApiUsageException(",
                "+\t\t\t\t\t\t\"Return of a ResultSet from a stored procedure is not supported\");",
                " \t\t\t}",
                "@@ -277,3 +279,3 @@ public class CallMetaDataContext {",
                " \t\t\t}",
                "-\t\t\treturn (this.outParameterNames.size() > 0 ? this.outParameterNames.get(0) : null);",
                "+\t\t\treturn (!this.outParameterNames.isEmpty() ? this.outParameterNames.get(0) : null);",
                " \t\t}",
                "@@ -289,4 +291,4 @@ public class CallMetaDataContext {",
                " \t/**",
                "-\t * Process the list of parameters provided, and if procedure column metadata is used,",
                "-\t * the parameters will be matched against the metadata information and any missing",
                "+\t * Process the list of parameters provided, and if procedure column meta-data is used,",
                "+\t * the parameters will be matched against the meta-data information and any missing",
                " \t * ones will be automatically included.",
                "@@ -299,3 +301,3 @@ public class CallMetaDataContext {",
                " \t/**",
                "-\t * Reconcile the provided parameters with available metadata and add new ones where appropriate.",
                "+\t * Reconcile the provided parameters with available meta-data and add new ones where appropriate.",
                " \t */",
                "@@ -308,5 +310,5 @@ public class CallMetaDataContext {",
                "-\t\t// Get the names of the meta data parameters",
                "+\t\t// Get the names of the meta-data parameters",
                " \t\tfor (CallParameterMetaData meta : this.metaDataProvider.getCallParameterMetaData()) {",
                "-\t\t\tif (meta.getParameterType() != DatabaseMetaData.procedureColumnReturn) {",
                "+\t\t\tif (!meta.isReturnParameter()) {",
                " \t\t\t\tmetaDataParamNames.add(meta.getParameterName().toLowerCase());",
                "@@ -330,11 +332,8 @@ public class CallMetaDataContext {",
                " \t\t\t\t\toutParamNames.add(paramName);",
                "-\t\t\t\t\tif (isFunction() && !metaDataParamNames.contains(paramNameToMatch)) {",
                "-\t\t\t\t\t\tif (!returnDeclared) {",
                "-\t\t\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\t\t\t\tlogger.debug(\"Using declared out parameter '\" + paramName +",
                "-\t\t\t\t\t\t\t\t\t\t\"' for function return value\");",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\tsetFunctionReturnName(paramName);",
                "-\t\t\t\t\t\t\treturnDeclared = true;",
                "+\t\t\t\t\tif (isFunction() && !metaDataParamNames.contains(paramNameToMatch) && !returnDeclared) {",
                "+\t\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "+\t\t\t\t\t\t\tlogger.debug(\"Using declared out parameter '\" + paramName + \"' for function return value\");",
                " \t\t\t\t\t\t}",
                "+\t\t\t\t\t\tsetFunctionReturnName(paramName);",
                "+\t\t\t\t\t\treturnDeclared = true;",
                " \t\t\t\t\t}",
                "@@ -347,3 +346,2 @@ public class CallMetaDataContext {",
                " \t\tworkParams.addAll(declaredReturnParams);",
                "-",
                " \t\tif (!this.metaDataProvider.isProcedureColumnMetaDataUsed()) {",
                "@@ -365,8 +363,7 @@ public class CallMetaDataContext {",
                " \t\t\tString paramNameToUse = this.metaDataProvider.parameterNameToUse(meta.getParameterName());",
                "-\t\t\tif (declaredParams.containsKey(paramNameToCheck) ||",
                "-\t\t\t\t\t(meta.getParameterType() == DatabaseMetaData.procedureColumnReturn && returnDeclared)) {",
                "+\t\t\tif (declaredParams.containsKey(paramNameToCheck) || (meta.isReturnParameter() && returnDeclared)) {",
                " \t\t\t\tSqlParameter param;",
                "-\t\t\t\tif (meta.getParameterType() == DatabaseMetaData.procedureColumnReturn) {",
                "+\t\t\t\tif (meta.isReturnParameter()) {",
                " \t\t\t\t\tparam = declaredParams.get(getFunctionReturnName());",
                "-\t\t\t\t\tif (param == null && getOutParameterNames().size() > 0) {",
                "+\t\t\t\t\tif (param == null && !getOutParameterNames().isEmpty()) {",
                " \t\t\t\t\t\tparam = declaredParams.get(getOutParameterNames().get(0).toLowerCase());",
                "@@ -394,3 +391,4 @@ public class CallMetaDataContext {",
                " \t\t\telse {",
                "-\t\t\t\tif (meta.getParameterType() == DatabaseMetaData.procedureColumnReturn) {",
                "+\t\t\t\tif (meta.isReturnParameter()) {",
                "+\t\t\t\t\t// DatabaseMetaData.procedureColumnReturn or possibly procedureColumnResult",
                " \t\t\t\t\tif (!isFunction() && !isReturnValueRequired() &&",
                "@@ -398,3 +396,3 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\t\t\tlogger.debug(\"Bypassing metadata return parameter for '\" + meta.getParameterName() + \"'\");",
                "+\t\t\t\t\t\t\tlogger.debug(\"Bypassing meta-data return parameter for '\" + meta.getParameterName() + \"'\");",
                " \t\t\t\t\t\t}",
                "@@ -402,4 +400,4 @@ public class CallMetaDataContext {",
                " \t\t\t\t\telse {",
                "-\t\t\t\t\t\tString returnNameToUse =(StringUtils.hasLength(meta.getParameterName()) ?",
                "-\t\t\t\t\t\t\t\tparamNameToUse : getFunctionReturnName());",
                "+\t\t\t\t\t\tString returnNameToUse =",
                "+\t\t\t\t\t\t\t\t(StringUtils.hasLength(meta.getParameterName()) ? paramNameToUse : getFunctionReturnName());",
                " \t\t\t\t\t\tworkParams.add(this.metaDataProvider.createDefaultOutParameter(returnNameToUse, meta));",
                "@@ -410,3 +408,3 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\t\t\tlogger.debug(\"Added metadata return parameter for '\" + returnNameToUse + \"'\");",
                "+\t\t\t\t\t\t\tlogger.debug(\"Added meta-data return parameter for '\" + returnNameToUse + \"'\");",
                " \t\t\t\t\t\t}",
                "@@ -419,3 +417,3 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\t\t\tlogger.debug(\"Added metadata out parameter for '\" + paramNameToUse + \"'\");",
                "+\t\t\t\t\t\t\tlogger.debug(\"Added meta-data out parameter for '\" + paramNameToUse + \"'\");",
                " \t\t\t\t\t\t}",
                "@@ -426,3 +424,3 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\t\t\tlogger.debug(\"Added metadata in out parameter for '\" + paramNameToUse + \"'\");",
                "+\t\t\t\t\t\t\tlogger.debug(\"Added meta-data in-out parameter for '\" + paramNameToUse + \"'\");",
                " \t\t\t\t\t\t}",
                "@@ -434,3 +432,3 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\t\t\t\tlogger.debug(\"Added metadata in parameter for '\" + paramNameToUse + \"'\");",
                "+\t\t\t\t\t\t\t\tlogger.debug(\"Added meta-data in parameter for '\" + paramNameToUse + \"'\");",
                " \t\t\t\t\t\t\t}",
                "@@ -458,3 +456,3 @@ public class CallMetaDataContext {",
                " \t\t// For parameter source lookups we need to provide case-insensitive lookup support",
                "-\t\t// since the database metadata is not necessarily providing case sensitive parameter names.",
                "+\t\t// since the database meta-data is not necessarily providing case sensitive parameter names.",
                " \t\tMap<String, String> caseInsensitiveParameterNames =",
                "@@ -473,3 +471,4 @@ public class CallMetaDataContext {",
                " \t\t\t\t\tif (parameterSource.hasValue(parameterName)) {",
                "-\t\t\t\t\t\tmatchedParameters.put(parameterName, SqlParameterSourceUtils.getTypedValue(parameterSource, parameterName));",
                "+\t\t\t\t\t\tmatchedParameters.put(parameterName,",
                "+\t\t\t\t\t\t\t\tSqlParameterSourceUtils.getTypedValue(parameterSource, parameterName));",
                " \t\t\t\t\t}",
                "@@ -478,3 +477,4 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\tif (parameterSource.hasValue(lowerCaseName)) {",
                "-\t\t\t\t\t\t\tmatchedParameters.put(parameterName, SqlParameterSourceUtils.getTypedValue(parameterSource, lowerCaseName));",
                "+\t\t\t\t\t\t\tmatchedParameters.put(parameterName,",
                "+\t\t\t\t\t\t\t\t\tSqlParameterSourceUtils.getTypedValue(parameterSource, lowerCaseName));",
                " \t\t\t\t\t\t}",
                "@@ -483,3 +483,4 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\t\tif (parameterSource.hasValue(englishLowerCaseName)) {",
                "-\t\t\t\t\t\t\t\tmatchedParameters.put(parameterName, SqlParameterSourceUtils.getTypedValue(parameterSource, englishLowerCaseName));",
                "+\t\t\t\t\t\t\t\tmatchedParameters.put(parameterName,",
                "+\t\t\t\t\t\t\t\t\t\tSqlParameterSourceUtils.getTypedValue(parameterSource, englishLowerCaseName));",
                " \t\t\t\t\t\t\t}",
                "@@ -488,3 +489,4 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\t\t\tif (parameterSource.hasValue(propertyName)) {",
                "-\t\t\t\t\t\t\t\t\tmatchedParameters.put(parameterName, SqlParameterSourceUtils.getTypedValue(parameterSource, propertyName));",
                "+\t\t\t\t\t\t\t\t\tmatchedParameters.put(parameterName,",
                "+\t\t\t\t\t\t\t\t\t\t\tSqlParameterSourceUtils.getTypedValue(parameterSource, propertyName));",
                " \t\t\t\t\t\t\t\t}",
                "@@ -493,7 +495,9 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\t\t\t\t\tString sourceName = caseInsensitiveParameterNames.get(lowerCaseName);",
                "-\t\t\t\t\t\t\t\t\t\tmatchedParameters.put(parameterName, SqlParameterSourceUtils.getTypedValue(parameterSource, sourceName));",
                "+\t\t\t\t\t\t\t\t\t\tmatchedParameters.put(parameterName,",
                "+\t\t\t\t\t\t\t\t\t\t\t\tSqlParameterSourceUtils.getTypedValue(parameterSource, sourceName));",
                " \t\t\t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t\t\t\telse {",
                "-\t\t\t\t\t\t\t\t\t\tlogger.warn(\"Unable to locate the corresponding parameter value for '\" + parameterName +",
                "-\t\t\t\t\t\t\t\t\t\t\t\t\"' within the parameter values provided: \" + caseInsensitiveParameterNames.values());",
                "+\t\t\t\t\t\t\t\t\t\tlogger.warn(\"Unable to locate the corresponding parameter value for '\" +",
                "+\t\t\t\t\t\t\t\t\t\t\t\tparameterName + \"' within the parameter values provided: \" +",
                "+\t\t\t\t\t\t\t\t\t\t\t\tcaseInsensitiveParameterNames.values());",
                " \t\t\t\t\t\t\t\t\t}",
                "@@ -523,2 +527,3 @@ public class CallMetaDataContext {",
                " \t\t}",
                "+",
                " \t\tMap<String, String> callParameterNames = new HashMap<String, String>(this.callParameters.size());",
                "@@ -533,2 +538,3 @@ public class CallMetaDataContext {",
                " \t\t}",
                "+",
                " \t\tMap<String, Object> matchedParameters = new HashMap<String, Object>(inParameters.size());",
                "@@ -541,7 +547,7 @@ public class CallMetaDataContext {",
                " \t\t\t\t\tif (value instanceof SqlParameterValue) {",
                "-\t\t\t\t\t\tvalue = ((SqlParameterValue)value).getValue();",
                "+\t\t\t\t\t\tvalue = ((SqlParameterValue) value).getValue();",
                " \t\t\t\t\t}",
                " \t\t\t\t\tif (value != null) {",
                "-\t\t\t\t\t\tlogger.debug(\"Unable to locate the corresponding IN or IN-OUT parameter for \\\"\" + parameterName +",
                "-\t\t\t\t\t\t\t\t\"\\\" in the parameters used: \" + callParameterNames.keySet());",
                "+\t\t\t\t\t\tlogger.debug(\"Unable to locate the corresponding IN or IN-OUT parameter for \\\"\" +",
                "+\t\t\t\t\t\t\t\tparameterName + \"\\\" in the parameters used: \" + callParameterNames.keySet());",
                " \t\t\t\t\t}",
                "@@ -553,2 +559,3 @@ public class CallMetaDataContext {",
                " \t\t}",
                "+",
                " \t\tif (matchedParameters.size() < callParameterNames.size()) {",
                "@@ -563,2 +570,3 @@ public class CallMetaDataContext {",
                " \t\t}",
                "+",
                " \t\tif (logger.isDebugEnabled()) {",
                "@@ -583,3 +591,3 @@ public class CallMetaDataContext {",
                " \t/**",
                "-\t * Build the call string based on configuration and metadata information.",
                "+\t * Build the call string based on configuration and meta-data information.",
                " \t * @return the call string to be used",
                "@@ -587,3 +595,3 @@ public class CallMetaDataContext {",
                " \tpublic String createCallString() {",
                "-\t\tString callString;",
                "+\t\tStringBuilder callString;",
                " \t\tint parameterCount = 0;",
                "@@ -603,8 +611,9 @@ public class CallMetaDataContext {",
                " \t\t}",
                "+",
                " \t\tString procedureNameToUse = this.metaDataProvider.procedureNameToUse(getProcedureName());",
                " \t\tif (isFunction() || isReturnValueRequired()) {",
                "-\t\t\tcallString = \"{? = call \" +",
                "-\t\t\t\t\t(StringUtils.hasLength(catalogNameToUse) ? catalogNameToUse + \".\" : \"\") +",
                "-\t\t\t\t\t(StringUtils.hasLength(schemaNameToUse) ? schemaNameToUse + \".\" : \"\") +",
                "-\t\t\t\t\tprocedureNameToUse + \"(\";",
                "+\t\t\tcallString = new StringBuilder().append(\"{? = call \").",
                "+\t\t\t\t\tappend(StringUtils.hasLength(catalogNameToUse) ? catalogNameToUse + \".\" : \"\").",
                "+\t\t\t\t\tappend(StringUtils.hasLength(schemaNameToUse) ? schemaNameToUse + \".\" : \"\").",
                "+\t\t\t\t\tappend(procedureNameToUse).append(\"(\");",
                " \t\t\tparameterCount = -1;",
                "@@ -612,14 +621,15 @@ public class CallMetaDataContext {",
                " \t\telse {",
                "-\t\t\tcallString = \"{call \" +",
                "-\t\t\t\t\t(StringUtils.hasLength(catalogNameToUse) ? catalogNameToUse + \".\" : \"\") +",
                "-\t\t\t\t\t(StringUtils.hasLength(schemaNameToUse) ? schemaNameToUse + \".\" : \"\") +",
                "-\t\t\t\t\tprocedureNameToUse + \"(\";",
                "+\t\t\tcallString = new StringBuilder().append(\"{call \").",
                "+\t\t\t\t\tappend(StringUtils.hasLength(catalogNameToUse) ? catalogNameToUse + \".\" : \"\").",
                "+\t\t\t\t\tappend(StringUtils.hasLength(schemaNameToUse) ? schemaNameToUse + \".\" : \"\").",
                "+\t\t\t\t\tappend(procedureNameToUse).append(\"(\");",
                " \t\t}",
                "+",
                " \t\tfor (SqlParameter parameter : this.callParameters) {",
                "-\t\t\tif (!(parameter.isResultsParameter())) {",
                "+\t\t\tif (!parameter.isResultsParameter()) {",
                " \t\t\t\tif (parameterCount > 0) {",
                "-\t\t\t\t\tcallString += \", \";",
                "+\t\t\t\t\tcallString.append(\", \");",
                " \t\t\t\t}",
                " \t\t\t\tif (parameterCount >= 0) {",
                "-\t\t\t\t\tcallString += createParameterBinding(parameter);",
                "+\t\t\t\t\tcallString.append(createParameterBinding(parameter));",
                " \t\t\t\t}",
                "@@ -628,5 +638,5 @@ public class CallMetaDataContext {",
                " \t\t}",
                "-\t\tcallString += \")}\";",
                "+\t\tcallString.append(\")}\");",
                "-\t\treturn callString;",
                "+\t\treturn callString.toString();",
                " \t}",
                "@@ -640,8 +650,3 @@ public class CallMetaDataContext {",
                " \tprotected String createParameterBinding(SqlParameter parameter) {",
                "-\t\tif (isNamedBinding()) {",
                "-\t\t\treturn parameter.getName() + \" => ?\";",
                "-\t\t}",
                "-\t\telse {",
                "-\t\t\treturn \"?\";",
                "-\t\t}",
                "+\t\treturn (isNamedBinding() ? parameter.getName() + \" => ?\" : \"?\");",
                " \t}",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallParameterMetaData.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallParameterMetaData.java",
                "index a10b05cfd1..eeb3e23b52 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallParameterMetaData.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallParameterMetaData.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,6 +18,9 @@ package org.springframework.jdbc.core.metadata;",
                "+import java.sql.DatabaseMetaData;",
                "+",
                " /**",
                "- * Holder of metadata for a specific parameter that is used for call processing.",
                "+ * Holder of meta-data for a specific parameter that is used for call processing.",
                "  *",
                "  * @author Thomas Risberg",
                "+ * @author Juergen Hoeller",
                "  * @since 2.5",
                "@@ -41,3 +44,5 @@ public class CallParameterMetaData {",
                " \t */",
                "-\tpublic CallParameterMetaData(String columnName, int columnType, int sqlType, String typeName, boolean nullable) {",
                "+\tpublic CallParameterMetaData(",
                "+\t\t\tString columnName, int columnType, int sqlType, String typeName, boolean nullable) {",
                "+",
                " \t\tthis.parameterName = columnName;",
                "@@ -64,2 +69,13 @@ public class CallParameterMetaData {",
                "+\t/**",
                "+\t * Determine whether the declared parameter qualifies as a 'return' parameter",
                "+\t * for our purposes: type {@link DatabaseMetaData#procedureColumnReturn} or",
                "+\t * {@link DatabaseMetaData#procedureColumnResult}.",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tpublic boolean isReturnParameter() {",
                "+\t\treturn (this.parameterType == DatabaseMetaData.procedureColumnReturn ||",
                "+\t\t\t\tthis.parameterType == DatabaseMetaData.procedureColumnResult);",
                "+\t}",
                "+",
                " \t/**"
            ],
            "changed_files": [
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallParameterMetaData.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "b7c423813db7921b726b493b97357eb01d527dd1"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e8c656d2bc67f47e39fed08e7195ea077578c49e",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522354580,
            "hunks": 3,
            "message": "Reject invalid forwarded headers Issue: SPR-16660",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java",
                "index 388aee0d3f..3fc4271386 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java",
                "@@ -679,32 +679,39 @@ public class UriComponentsBuilder implements Cloneable {",
                " \tUriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {",
                "-\t\tString forwardedHeader = headers.getFirst(\"Forwarded\");",
                "-\t\tif (StringUtils.hasText(forwardedHeader)) {",
                "-\t\t\tString forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, \",\")[0];",
                "-\t\t\tMatcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse);",
                "-\t\t\tif (matcher.find()) {",
                "-\t\t\t\tscheme(matcher.group(1).trim());",
                "-\t\t\t\tport(null);",
                "-\t\t\t}",
                "-\t\t\tmatcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse);",
                "-\t\t\tif (matcher.find()) {",
                "-\t\t\t\tadaptForwardedHost(matcher.group(1).trim());",
                "-\t\t\t}",
                "-\t\t}",
                "-\t\telse {",
                "-\t\t\tString protocolHeader = headers.getFirst(\"X-Forwarded-Proto\");",
                "-\t\t\tif (StringUtils.hasText(protocolHeader)) {",
                "-\t\t\t\tscheme(StringUtils.tokenizeToStringArray(protocolHeader, \",\")[0]);",
                "-\t\t\t\tport(null);",
                "+\t\ttry {",
                "+\t\t\tString forwardedHeader = headers.getFirst(\"Forwarded\");",
                "+\t\t\tif (StringUtils.hasText(forwardedHeader)) {",
                "+\t\t\t\tString forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, \",\")[0];",
                "+\t\t\t\tMatcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse);",
                "+\t\t\t\tif (matcher.find()) {",
                "+\t\t\t\t\tscheme(matcher.group(1).trim());",
                "+\t\t\t\t\tport(null);",
                "+\t\t\t\t}",
                "+\t\t\t\tmatcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse);",
                "+\t\t\t\tif (matcher.find()) {",
                "+\t\t\t\t\tadaptForwardedHost(matcher.group(1).trim());",
                "+\t\t\t\t}",
                " \t\t\t}",
                "+\t\t\telse {",
                "+\t\t\t\tString protocolHeader = headers.getFirst(\"X-Forwarded-Proto\");",
                "+\t\t\t\tif (StringUtils.hasText(protocolHeader)) {",
                "+\t\t\t\t\tscheme(StringUtils.tokenizeToStringArray(protocolHeader, \",\")[0]);",
                "+\t\t\t\t\tport(null);",
                "+\t\t\t\t}",
                "-\t\t\tString hostHeader = headers.getFirst(\"X-Forwarded-Host\");",
                "-\t\t\tif (StringUtils.hasText(hostHeader)) {",
                "-\t\t\t\tadaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, \",\")[0]);",
                "-\t\t\t}",
                "+\t\t\t\tString hostHeader = headers.getFirst(\"X-Forwarded-Host\");",
                "+\t\t\t\tif (StringUtils.hasText(hostHeader)) {",
                "+\t\t\t\t\tadaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, \",\")[0]);",
                "+\t\t\t\t}",
                "-\t\t\tString portHeader = headers.getFirst(\"X-Forwarded-Port\");",
                "-\t\t\tif (StringUtils.hasText(portHeader)) {",
                "-\t\t\t\tport(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, \",\")[0]));",
                "+\t\t\t\tString portHeader = headers.getFirst(\"X-Forwarded-Port\");",
                "+\t\t\t\tif (StringUtils.hasText(portHeader)) {",
                "+\t\t\t\t\tport(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, \",\")[0]));",
                "+\t\t\t\t}",
                " \t\t\t}",
                " \t\t}",
                "+\t\tcatch (NumberFormatException ex) {",
                "+\t\t\tthrow new IllegalArgumentException(\"Failed to parse a port from \\\"forwarded\\\"-type headers. \" +",
                "+\t\t\t\t\t\"If not behind a trusted proxy, consider using ForwardedHeaderFilter \" +",
                "+\t\t\t\t\t\"with the removeOnly=true. Request headers: \" + headers);",
                "+\t\t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "a546cf0a3bf1ef29407da5083ce24882a46dd1d7"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "be1aaa06e77a388482a997acd4997a3119e1f1e6",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522832629,
            "hunks": 1,
            "message": "Cleanup settings.gradle pluginManagement configuration",
            "diff": [
                "diff --git a/settings.gradle b/settings.gradle",
                "index ed1b9e9abd..3f17c52cf9 100644",
                "--- a/settings.gradle",
                "+++ b/settings.gradle",
                "@@ -1,20 +1 @@",
                "-/*",
                "-pluginManagement {",
                "-\trepositories {",
                "-\t\tmaven {",
                "-\t\t\turl \"https://dl.bintray.com/kotlin/kotlin-eap-1.1\"",
                "-\t\t}",
                "-\t\tgradlePluginPortal()",
                "-\t}",
                "-}",
                "-*/",
                "-",
                "-// Workaround for https://github.com/Kotlin/dokka/issues/146",
                "-pluginManagement {",
                "-\trepositories {",
                "-\t\tjcenter()",
                "-\t\tgradlePluginPortal()",
                "-\t}",
                "-}",
                "-",
                " include \"spring-aop\""
            ],
            "changed_files": [
                "settings.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f1727bfbdb9c08d510247871fc3e2611ef7be1bf"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "88a17a4b10a110eee9c30585999a275ccffa3c17",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521562905,
            "hunks": 8,
            "message": "Reactor2TcpClient constructor with address supplier Issue: SPR-12452",
            "diff": [
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java",
                "index 835467729e..376a2b0760 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -22,2 +22,3 @@ import org.springframework.messaging.SubscribableChannel;",
                " import org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler;",
                "+import org.springframework.messaging.tcp.TcpOperations;",
                " import org.springframework.util.Assert;",
                "@@ -53,2 +54,5 @@ public class StompBrokerRelayRegistration extends AbstractBrokerRegistration {",
                "+\t@Nullable",
                "+\tprivate TcpOperations<byte[]> tcpClient;",
                "+",
                " \tprivate boolean autoStartup = true;",
                "@@ -168,2 +172,14 @@ public class StompBrokerRelayRegistration extends AbstractBrokerRegistration {",
                "+\t/**",
                "+\t * Configure a TCP client for managing TCP connections to the STOMP broker.",
                "+\t * <p>By default {@code ReactorNettyTcpClient} is used.",
                "+\t * <p><strong>Note:</strong> when this property is used, any",
                "+\t * {@link #setRelayHost(String) host} or {@link #setRelayPort(int) port}",
                "+\t * specified are effectively ignored.",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tpublic void setTcpClient(TcpOperations<byte[]> tcpClient) {",
                "+\t\tthis.tcpClient = tcpClient;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -241,2 +257,5 @@ public class StompBrokerRelayRegistration extends AbstractBrokerRegistration {",
                " \t\t}",
                "+\t\tif (this.tcpClient != null) {",
                "+\t\t\thandler.setTcpClient(this.tcpClient);",
                "+\t\t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                "index ff0733356f..7a3b28c231 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -342,2 +342,5 @@ public class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler",
                " \t * <p>By default {@link ReactorNettyTcpClient} is used.",
                "+\t * <p><strong>Note:</strong> when this property is used, any",
                "+\t * {@link #setRelayHost(String) host} or {@link #setRelayPort(int) port}",
                "+\t * specified are effectively ignored.",
                " \t */",
                "@@ -615,4 +618,4 @@ public class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler",
                " \t\tprotected void handleTcpConnectionFailure(String error, @Nullable Throwable ex) {",
                "-\t\t\tif (logger.isErrorEnabled()) {",
                "-\t\t\t\tlogger.error(\"TCP connection failure in session \" + this.sessionId + \": \" + error, ex);",
                "+\t\t\tif (logger.isWarnEnabled()) {",
                "+\t\t\t\tlogger.warn(\"TCP connection failure in session \" + this.sessionId + \": \" + error, ex);",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "d512cca3fde8759490abdc7222f54cb096a8097a"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2c7efbb9d09f46691c905467e5a192f79acfa55b",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521457491,
            "hunks": 27,
            "message": "Deprecate TableMetaDataContext.getSimulationQueryForGetGeneratedKey",
            "diff": [
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                "index f5743e06bf..10823a73b1 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                "@@ -38,3 +38,3 @@ import org.springframework.util.Assert;",
                " /**",
                "- * Class to manage context metadata used for the configuration",
                "+ * Class to manage context meta-data used for the configuration",
                "  * and execution of operations on a database table.",
                "@@ -65,9 +65,9 @@ public class TableMetaDataContext {",
                "-\t// Should we access insert parameter meta data info or not",
                "+\t// Should we access insert parameter meta-data info or not",
                " \tprivate boolean accessTableColumnMetaData = true;",
                "-\t// Should we override default for including synonyms for meta data lookups",
                "+\t// Should we override default for including synonyms for meta-data lookups",
                " \tprivate boolean overrideIncludeSynonymsDefault = false;",
                "-\t// The provider of table meta data",
                "+\t// The provider of table meta-data",
                " \t@Nullable",
                "@@ -125,3 +125,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Specify whether we should access table column meta data.",
                "+\t * Specify whether we should access table column meta-data.",
                " \t */",
                "@@ -132,3 +132,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Are we accessing table meta data?",
                "+\t * Are we accessing table meta-data?",
                " \t */",
                "@@ -162,3 +162,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Process the current meta data with the provided configuration options.",
                "+\t * Process the current meta-data with the provided configuration options.",
                " \t * @param dataSource the DataSource being used",
                "@@ -178,3 +178,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Compare columns created from metadata with declared columns and return a reconciled list.",
                "+\t * Compare columns created from meta-data with declared columns and return a reconciled list.",
                " \t * @param declaredColumns declared column names",
                "@@ -209,3 +209,3 @@ public class TableMetaDataContext {",
                " \t\t// For parameter source lookups we need to provide case-insensitive lookup support since the",
                "-\t\t// database metadata is not necessarily providing case-sensitive column names",
                "+\t\t// database meta-data is not necessarily providing case-sensitive column names",
                " \t\tMap<String, String> caseInsensitiveParameterNames =",
                "@@ -259,3 +259,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Build the insert string based on configuration and metadata information",
                "+\t * Build the insert string based on configuration and meta-data information",
                " \t * @return the insert string to be used",
                "@@ -307,3 +307,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Build the array of {@link java.sql.Types} based on configuration and metadata information",
                "+\t * Build the array of {@link java.sql.Types} based on configuration and meta-data information.",
                " \t * @return the array of types to be used",
                "@@ -313,4 +313,3 @@ public class TableMetaDataContext {",
                " \t\tList<TableParameterMetaData> parameters = obtainMetaDataProvider().getTableParameterMetaData();",
                "-\t\tMap<String, TableParameterMetaData> parameterMap =",
                "-\t\t\t\tnew LinkedHashMap<>(parameters.size());",
                "+\t\tMap<String, TableParameterMetaData> parameterMap = new LinkedHashMap<>(parameters.size());",
                " \t\tfor (TableParameterMetaData tpmd : parameters) {",
                "@@ -339,3 +338,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Does this database support the JDBC 3.0 feature of retrieving generated keys",
                "+\t * Does this database support the JDBC 3.0 feature of retrieving generated keys:",
                " \t * {@link java.sql.DatabaseMetaData#supportsGetGeneratedKeys()}?",
                "@@ -348,3 +347,3 @@ public class TableMetaDataContext {",
                " \t * Does this database support simple query to retrieve generated keys",
                "-\t * when the JDBC 3.0 feature is not supported.",
                "+\t * when the JDBC 3.0 feature is not supported:",
                " \t * {@link java.sql.DatabaseMetaData#supportsGetGeneratedKeys()}?",
                "@@ -356,8 +355,17 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Does this database support simple query to retrieve generated keys",
                "-\t * when the JDBC 3.0 feature is not supported.",
                "-\t * {@link java.sql.DatabaseMetaData#supportsGetGeneratedKeys()}?",
                "+\t * @deprecated as of 4.3.15, in favor of {@link #getSimpleQueryForGetGeneratedKey}",
                " \t */",
                "+\t@Deprecated",
                " \t@Nullable",
                " \tpublic String getSimulationQueryForGetGeneratedKey(String tableName, String keyColumnName) {",
                "+\t\treturn getSimpleQueryForGetGeneratedKey(tableName, keyColumnName);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Does this database support a simple query to retrieve generated keys",
                "+\t * when the JDBC 3.0 feature is not supported:",
                "+\t * {@link java.sql.DatabaseMetaData#supportsGetGeneratedKeys()}?",
                "+\t */",
                "+\t@Nullable",
                "+\tpublic String getSimpleQueryForGetGeneratedKey(String tableName, String keyColumnName) {",
                " \t\treturn obtainMetaDataProvider().getSimpleQueryForGetGeneratedKey(tableName, keyColumnName);",
                "@@ -366,3 +374,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Is a column name String array for retrieving generated keys supported?",
                "+\t * Is a column name String array for retrieving generated keys supported:",
                " \t * {@link java.sql.Connection#createStruct(String, Object[])}?",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java",
                "index b772898c0b..70b8055b0a 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java",
                "@@ -52,4 +52,5 @@ import org.springframework.util.Assert;",
                "  * Abstract class to provide base functionality for easy inserts",
                "- * based on configuration options and database metadata.",
                "- * This class provides the base SPI for {@link SimpleJdbcInsert}.",
                "+ * based on configuration options and database meta-data.",
                "+ *",
                "+ * <p>This class provides the base SPI for {@link SimpleJdbcInsert}.",
                "  *",
                "@@ -67,3 +68,3 @@ public abstract class AbstractJdbcInsert {",
                "-\t/** Context used to retrieve and manage database metadata */",
                "+\t/** Context used to retrieve and manage database meta-data */",
                " \tprivate final TableMetaDataContext tableMetaDataContext = new TableMetaDataContext();",
                "@@ -206,3 +207,3 @@ public abstract class AbstractJdbcInsert {",
                " \t/**",
                "-\t * Specify whether the parameter metadata for the call should be used.",
                "+\t * Specify whether the parameter meta-data for the call should be used.",
                " \t * The default is {@code true}.",
                "@@ -241,3 +242,3 @@ public abstract class AbstractJdbcInsert {",
                " \t/**",
                "-\t * Compile this JdbcInsert using provided parameters and meta data plus other settings.",
                "+\t * Compile this JdbcInsert using provided parameters and meta-data plus other settings.",
                " \t * This finalizes the configuration for this object and subsequent attempts to compile are",
                "@@ -317,3 +318,3 @@ public abstract class AbstractJdbcInsert {",
                " \t\t\tthrow new InvalidDataAccessApiUsageException(",
                "-\t\t\t\t\t\"Configuration can't be altered once the class has been compiled or used\");",
                "+\t\t\t\t\t\"Configuration cannot be altered once the class has been compiled or used\");",
                " \t\t}",
                "@@ -455,5 +456,5 @@ public abstract class AbstractJdbcInsert {",
                " \t\t\tAssert.state(getTableName() != null, \"No table name set\");",
                "-\t\t\tfinal String keyQuery = this.tableMetaDataContext.getSimulationQueryForGetGeneratedKey(",
                "+\t\t\tfinal String keyQuery = this.tableMetaDataContext.getSimpleQueryForGetGeneratedKey(",
                " \t\t\t\t\tgetTableName(), getGeneratedKeyNames()[0]);",
                "-\t\t\tAssert.state(keyQuery != null, \"Query for simulating get generated keys can't be null\");",
                "+\t\t\tAssert.state(keyQuery != null, \"Query for simulating get generated keys must not be null\");",
                "@@ -604,3 +605,3 @@ public abstract class AbstractJdbcInsert {",
                " \t * Match the provided in parameter values with registered parameters and parameters",
                "-\t * defined via metadata processing.",
                "+\t * defined via meta-data processing.",
                " \t * @param parameterSource the parameter values provided as a {@link SqlParameterSource}",
                "@@ -614,3 +615,3 @@ public abstract class AbstractJdbcInsert {",
                " \t * Match the provided in parameter values with registered parameters and parameters",
                "-\t * defined via metadata processing.",
                "+\t * defined via meta-data processing.",
                " \t * @param args the parameter values provided in a Map"
            ],
            "changed_files": [
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "0e7e49bab0786b4acf1cef159a966c47c80809c7"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5629fa2c9f94ed43aedfd87181164fcbc154fffc",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522359833,
            "hunks": 2,
            "message": "Pass type name into PreparedStatement.setNull in case of Types.OTHER Issue: SPR-16669 (cherry picked from commit 9a722b4)",
            "diff": [
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java",
                "index 14c2c94e7e..557e8bcf64 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -249,3 +249,3 @@ public abstract class StatementCreatorUtils {",
                " \tprivate static void setNull(PreparedStatement ps, int paramIndex, int sqlType, String typeName) throws SQLException {",
                "-\t\tif (sqlType == SqlTypeValue.TYPE_UNKNOWN || sqlType == Types.OTHER) {",
                "+\t\tif (sqlType == SqlTypeValue.TYPE_UNKNOWN || (sqlType == Types.OTHER && typeName == null)) {",
                " \t\t\tboolean useSetObject = false;"
            ],
            "changed_files": [
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "9a722b4558ca7985fb54a06ff76e3934abe898cb"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e00384a6fd4bde8f009b78e11895a64c89d51b95",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522192749,
            "hunks": 1,
            "message": "MimeTypeUtils trims parameter names / values Issue: SPR-16630",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "index 98a0c59caf..6212a210ea 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "@@ -227,4 +227,4 @@ public abstract class MimeTypeUtils {",
                " \t\t\t\tif (eqIndex >= 0) {",
                "-\t\t\t\t\tString attribute = parameter.substring(0, eqIndex);",
                "-\t\t\t\t\tString value = parameter.substring(eqIndex + 1, parameter.length());",
                "+\t\t\t\t\tString attribute = parameter.substring(0, eqIndex).trim();",
                "+\t\t\t\t\tString value = parameter.substring(eqIndex + 1, parameter.length()).trim();",
                " \t\t\t\t\tparameters.put(attribute, value);"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "71126faae06e6a0727a0c02d685518ab6e43254d"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "82cb5dbf2ba238e0f962e4323c21321afa556471",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522295853,
            "hunks": 1,
            "message": "NamedParameterUtils.parseSqlStatement should parse :{x} style parameter correctly In my opinion, we should parse \":{x}\" style parameter as \"x\" is parameter using \"NamedParameterUtils.parseSqlStatement\", so the condition \"j - i > 2\" is the correct condition, not \"j - i > 3\", because if \"i\" is the index of \":\" in \":{x}\", and \"j\" is the index of \"}\" in \":{x}\",  \"j - i == 3\" is true. Also add a test case for SPR-16663.",
            "diff": [
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java",
                "index b3b91cb3f0..211ee1ff63 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java",
                "@@ -132,3 +132,3 @@ public abstract class NamedParameterUtils {",
                " \t\t\t\t\t}",
                "-\t\t\t\t\tif (j - i > 3) {",
                "+\t\t\t\t\tif (j - i > 2) {",
                " \t\t\t\t\t\tparameter = sql.substring(i + 2, j);"
            ],
            "changed_files": [
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f3dd22da5b6a40922dca8a41f400281239152490"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "64f304c33376dff829c14b15fd3ab8bf1f2ae2cb",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522337593,
            "hunks": 43,
            "message": "Consistent references to primitive types (in alphabetical order) (cherry picked from commit 08dad4e)",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/convert/TypeDescriptor.java b/spring-core/src/main/java/org/springframework/core/convert/TypeDescriptor.java",
                "index 593687efa8..03374f757f 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/convert/TypeDescriptor.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/convert/TypeDescriptor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -56,3 +56,3 @@ public class TypeDescriptor implements Serializable {",
                "-\tprivate static final Map<Class<?>, TypeDescriptor> commonTypesCache = new HashMap<Class<?>, TypeDescriptor>(18);",
                "+\tprivate static final Map<Class<?>, TypeDescriptor> commonTypesCache = new HashMap<Class<?>, TypeDescriptor>(32);",
                "@@ -60,4 +60,4 @@ public class TypeDescriptor implements Serializable {",
                " \t\t\tboolean.class, Boolean.class, byte.class, Byte.class, char.class, Character.class,",
                "-\t\t\tdouble.class, Double.class, int.class, Integer.class, long.class, Long.class,",
                "-\t\t\tfloat.class, Float.class, short.class, Short.class, String.class, Object.class};",
                "+\t\t\tdouble.class, Double.class, float.class, Float.class, int.class, Integer.class,",
                "+\t\t\tlong.class, Long.class, short.class, Short.class, String.class, Object.class};",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java b/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "index c52f28d717..7f860b49cf 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "@@ -471,11 +471,8 @@ public class CodeFlow implements Opcodes {",
                " \t\tif (clazz.isPrimitive()) {",
                "-\t\t\tif (clazz == Void.TYPE) {",
                "-\t\t\t\tsb.append('V');",
                "-\t\t\t}",
                "-\t\t\telse if (clazz == Integer.TYPE) {",
                "-\t\t\t\tsb.append('I');",
                "-\t\t\t}",
                "-\t\t\telse if (clazz == Boolean.TYPE) {",
                "+\t\t\tif (clazz == Boolean.TYPE) {",
                " \t\t\t\tsb.append('Z');",
                " \t\t\t}",
                "+\t\t\telse if (clazz == Byte.TYPE) {",
                "+\t\t\t\tsb.append('B');",
                "+\t\t\t}",
                " \t\t\telse if (clazz == Character.TYPE) {",
                "@@ -483,5 +480,2 @@ public class CodeFlow implements Opcodes {",
                " \t\t\t}",
                "-\t\t\telse if (clazz == Long.TYPE) {",
                "-\t\t\t\tsb.append('J');",
                "-\t\t\t}",
                " \t\t\telse if (clazz == Double.TYPE) {",
                "@@ -492,4 +486,7 @@ public class CodeFlow implements Opcodes {",
                " \t\t\t}",
                "-\t\t\telse if (clazz == Byte.TYPE) {",
                "-\t\t\t\tsb.append('B');",
                "+\t\t\telse if (clazz == Integer.TYPE) {",
                "+\t\t\t\tsb.append('I');",
                "+\t\t\t}",
                "+\t\t\telse if (clazz == Long.TYPE) {",
                "+\t\t\t\tsb.append('J');",
                " \t\t\t}",
                "@@ -498,2 +495,5 @@ public class CodeFlow implements Opcodes {",
                " \t\t\t}",
                "+\t\t\telse if (clazz == Void.TYPE) {",
                "+\t\t\t\tsb.append('V');",
                "+\t\t\t}",
                " \t\t}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java b/spring-expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java",
                "index 526dc26712..68a1f44340 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -294,5 +294,2 @@ public class ConstructorReference extends SpelNodeImpl {",
                " \t\t\t}",
                "-\t\t\telse if (arrayTypeCode == TypeCode.INT) {",
                "-\t\t\t\tpopulateIntArray(state, newArray, typeConverter, initializer);",
                "-\t\t\t}",
                " \t\t\telse if (arrayTypeCode == TypeCode.BOOLEAN) {",
                "@@ -300,2 +297,5 @@ public class ConstructorReference extends SpelNodeImpl {",
                " \t\t\t}",
                "+\t\t\telse if (arrayTypeCode == TypeCode.BYTE) {",
                "+\t\t\t\tpopulateByteArray(state, newArray, typeConverter, initializer);",
                "+\t\t\t}",
                " \t\t\telse if (arrayTypeCode == TypeCode.CHAR) {",
                "@@ -303,8 +303,2 @@ public class ConstructorReference extends SpelNodeImpl {",
                " \t\t\t}",
                "-\t\t\telse if (arrayTypeCode == TypeCode.LONG) {",
                "-\t\t\t\tpopulateLongArray(state, newArray, typeConverter, initializer);",
                "-\t\t\t}",
                "-\t\t\telse if (arrayTypeCode == TypeCode.SHORT) {",
                "-\t\t\t\tpopulateShortArray(state, newArray, typeConverter, initializer);",
                "-\t\t\t}",
                " \t\t\telse if (arrayTypeCode == TypeCode.DOUBLE) {",
                "@@ -315,4 +309,10 @@ public class ConstructorReference extends SpelNodeImpl {",
                " \t\t\t}",
                "-\t\t\telse if (arrayTypeCode == TypeCode.BYTE) {",
                "-\t\t\t\tpopulateByteArray(state, newArray, typeConverter, initializer);",
                "+\t\t\telse if (arrayTypeCode == TypeCode.INT) {",
                "+\t\t\t\tpopulateIntArray(state, newArray, typeConverter, initializer);",
                "+\t\t\t}",
                "+\t\t\telse if (arrayTypeCode == TypeCode.LONG) {",
                "+\t\t\t\tpopulateLongArray(state, newArray, typeConverter, initializer);",
                "+\t\t\t}",
                "+\t\t\telse if (arrayTypeCode == TypeCode.SHORT) {",
                "+\t\t\t\tpopulateShortArray(state, newArray, typeConverter, initializer);",
                " \t\t\t}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java b/spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                "index 7507a0f26e..243111b555 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                "@@ -321,3 +321,18 @@ public class Indexer extends SpelNodeImpl {",
                "-\t\tif (arrayComponentType == Double.TYPE) {",
                "+\t\tif (arrayComponentType == Boolean.TYPE) {",
                "+\t\t\tboolean[] array = (boolean[]) ctx;",
                "+\t\t\tcheckAccess(array.length, idx);",
                "+\t\t\tarray[idx] = convertValue(converter, newValue, Boolean.class);",
                "+\t\t}",
                "+\t\telse if (arrayComponentType == Byte.TYPE) {",
                "+\t\t\tbyte[] array = (byte[]) ctx;",
                "+\t\t\tcheckAccess(array.length, idx);",
                "+\t\t\tarray[idx] = convertValue(converter, newValue, Byte.class);",
                "+\t\t}",
                "+\t\telse if (arrayComponentType == Character.TYPE) {",
                "+\t\t\tchar[] array = (char[]) ctx;",
                "+\t\t\tcheckAccess(array.length, idx);",
                "+\t\t\tarray[idx] = convertValue(converter, newValue, Character.class);",
                "+\t\t}",
                "+\t\telse if (arrayComponentType == Double.TYPE) {",
                " \t\t\tdouble[] array = (double[]) ctx;",
                "@@ -331,7 +346,2 @@ public class Indexer extends SpelNodeImpl {",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Long.TYPE) {",
                "-\t\t\tlong[] array = (long[]) ctx;",
                "-\t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tarray[idx] = convertValue(converter, newValue, Long.class);",
                "-\t\t}",
                " \t\telse if (arrayComponentType == Integer.TYPE) {",
                "@@ -341,2 +351,7 @@ public class Indexer extends SpelNodeImpl {",
                " \t\t}",
                "+\t\telse if (arrayComponentType == Long.TYPE) {",
                "+\t\t\tlong[] array = (long[]) ctx;",
                "+\t\t\tcheckAccess(array.length, idx);",
                "+\t\t\tarray[idx] = convertValue(converter, newValue, Long.class);",
                "+\t\t}",
                " \t\telse if (arrayComponentType == Short.TYPE) {",
                "@@ -346,17 +361,2 @@ public class Indexer extends SpelNodeImpl {",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Byte.TYPE) {",
                "-\t\t\tbyte[] array = (byte[]) ctx;",
                "-\t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tarray[idx] = convertValue(converter, newValue, Byte.class);",
                "-\t\t}",
                "-\t\telse if (arrayComponentType == Character.TYPE) {",
                "-\t\t\tchar[] array = (char[]) ctx;",
                "-\t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tarray[idx] = convertValue(converter, newValue, Character.class);",
                "-\t\t}",
                "-\t\telse if (arrayComponentType == Boolean.TYPE) {",
                "-\t\t\tboolean[] array = (boolean[]) ctx;",
                "-\t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tarray[idx] = convertValue(converter, newValue, Boolean.class);",
                "-\t\t}",
                " \t\telse {",
                "@@ -370,48 +370,48 @@ public class Indexer extends SpelNodeImpl {",
                " \t\tClass<?> arrayComponentType = ctx.getClass().getComponentType();",
                "-\t\tif (arrayComponentType == Double.TYPE) {",
                "-\t\t\tdouble[] array = (double[]) ctx;",
                "+\t\tif (arrayComponentType == Boolean.TYPE) {",
                "+\t\t\tboolean[] array = (boolean[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"D\";",
                "+\t\t\tthis.exitTypeDescriptor = \"Z\";",
                " \t\t\treturn array[idx];",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Float.TYPE) {",
                "-\t\t\tfloat[] array = (float[]) ctx;",
                "+\t\telse if (arrayComponentType == Byte.TYPE) {",
                "+\t\t\tbyte[] array = (byte[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"F\";",
                "+\t\t\tthis.exitTypeDescriptor = \"B\";",
                " \t\t\treturn array[idx];",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Long.TYPE) {",
                "-\t\t\tlong[] array = (long[]) ctx;",
                "+\t\telse if (arrayComponentType == Character.TYPE) {",
                "+\t\t\tchar[] array = (char[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"J\";",
                "+\t\t\tthis.exitTypeDescriptor = \"C\";",
                " \t\t\treturn array[idx];",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Integer.TYPE) {",
                "-\t\t\tint[] array = (int[]) ctx;",
                "+\t\telse if (arrayComponentType == Double.TYPE) {",
                "+\t\t\tdouble[] array = (double[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"I\";",
                "+\t\t\tthis.exitTypeDescriptor = \"D\";",
                " \t\t\treturn array[idx];",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Short.TYPE) {",
                "-\t\t\tshort[] array = (short[]) ctx;",
                "+\t\telse if (arrayComponentType == Float.TYPE) {",
                "+\t\t\tfloat[] array = (float[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"S\";",
                "+\t\t\tthis.exitTypeDescriptor = \"F\";",
                " \t\t\treturn array[idx];",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Byte.TYPE) {",
                "-\t\t\tbyte[] array = (byte[]) ctx;",
                "+\t\telse if (arrayComponentType == Integer.TYPE) {",
                "+\t\t\tint[] array = (int[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"B\";",
                "+\t\t\tthis.exitTypeDescriptor = \"I\";",
                " \t\t\treturn array[idx];",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Character.TYPE) {",
                "-\t\t\tchar[] array = (char[]) ctx;",
                "+\t\telse if (arrayComponentType == Long.TYPE) {",
                "+\t\t\tlong[] array = (long[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"C\";",
                "+\t\t\tthis.exitTypeDescriptor = \"J\";",
                " \t\t\treturn array[idx];",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Boolean.TYPE) {",
                "-\t\t\tboolean[] array = (boolean[]) ctx;",
                "+\t\telse if (arrayComponentType == Short.TYPE) {",
                "+\t\t\tshort[] array = (short[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"Z\";",
                "+\t\t\tthis.exitTypeDescriptor = \"S\";",
                " \t\t\treturn array[idx];",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeCode.java b/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeCode.java",
                "index fe785b1a39..2595365508 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeCode.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeCode.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -34,3 +34,5 @@ public enum TypeCode {",
                "-\tSHORT(Short.TYPE),",
                "+\tDOUBLE(Double.TYPE),",
                "+",
                "+\tFLOAT(Float.TYPE),",
                "@@ -40,5 +42,3 @@ public enum TypeCode {",
                "-\tFLOAT(Float.TYPE),",
                "-",
                "-\tDOUBLE(Double.TYPE);",
                "+\tSHORT(Short.TYPE);",
                "@@ -66,3 +66,3 @@ public enum TypeCode {",
                " \t\t}",
                "-\t\treturn TypeCode.OBJECT;",
                "+\t\treturn OBJECT;",
                " \t}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeReference.java b/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeReference.java",
                "index ad25bc4223..0ba17de87c 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeReference.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeReference.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -100,6 +100,3 @@ public class TypeReference extends SpelNodeImpl {",
                " \t\tif (this.type.isPrimitive()) {",
                "-\t\t\tif (this.type == Integer.TYPE) {",
                "-\t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Integer\", \"TYPE\", \"Ljava/lang/Class;\");",
                "-\t\t\t}",
                "-\t\t\telse if (this.type == Boolean.TYPE) {",
                "+\t\t\tif (this.type == Boolean.TYPE) {",
                " \t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Boolean\", \"TYPE\", \"Ljava/lang/Class;\");",
                "@@ -109,4 +106,4 @@ public class TypeReference extends SpelNodeImpl {",
                " \t\t\t}",
                "-\t\t\telse if (this.type == Short.TYPE) {",
                "-\t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Short\", \"TYPE\", \"Ljava/lang/Class;\");",
                "+\t\t\telse if (this.type == Character.TYPE) {",
                "+\t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Character\", \"TYPE\", \"Ljava/lang/Class;\");",
                " \t\t\t}",
                "@@ -115,5 +112,2 @@ public class TypeReference extends SpelNodeImpl {",
                " \t\t\t}",
                "-\t\t\telse if (this.type == Character.TYPE) {",
                "-\t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Character\", \"TYPE\", \"Ljava/lang/Class;\");",
                "-\t\t\t}",
                " \t\t\telse if (this.type == Float.TYPE) {",
                "@@ -121,2 +115,5 @@ public class TypeReference extends SpelNodeImpl {",
                " \t\t\t}",
                "+\t\t\telse if (this.type == Integer.TYPE) {",
                "+\t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Integer\", \"TYPE\", \"Ljava/lang/Class;\");",
                "+\t\t\t}",
                " \t\t\telse if (this.type == Long.TYPE) {",
                "@@ -124,5 +121,5 @@ public class TypeReference extends SpelNodeImpl {",
                " \t\t\t}",
                "-\t\t\telse if (this.type == Boolean.TYPE) {",
                "-\t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Boolean\", \"TYPE\", \"Ljava/lang/Class;\");",
                "-\t        }",
                "+\t\t\telse if (this.type == Short.TYPE) {",
                "+\t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Short\", \"TYPE\", \"Ljava/lang/Class;\");",
                "+\t\t\t}",
                " \t\t}"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/convert/TypeDescriptor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeCode.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeReference.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "08dad4e3aca7072feafb9d32860e77c5325ddf0a"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3ac46da22f9605aa45f104f0fa1d889d5d4c9d88",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522330950,
            "hunks": 1,
            "message": "Correct description for doWithLocalFields Issue: SPR-16658",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/ReflectionUtils.java b/spring-core/src/main/java/org/springframework/util/ReflectionUtils.java",
                "index 853694d059..a4c7fdc2d9 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/ReflectionUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/ReflectionUtils.java",
                "@@ -681,4 +681,3 @@ public abstract class ReflectionUtils {",
                " \t/**",
                "-\t * Invoke the given callback on all fields in the target class, going up the",
                "-\t * class hierarchy to get all declared fields.",
                "+\t * Invoke the given callback on all locally declared fields in the given class.",
                " \t * @param clazz the target class to analyze"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/ReflectionUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "618cb6155c073df24263f28103c3e130526c1931"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1cc513d7db1ae20a1cd25a798b875bb7fabb231f",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522359844,
            "hunks": 10,
            "message": "Consistent to/cc/bcc array handling and revised hashCode without text Issue: SPR-16671",
            "diff": [
                "diff --git a/spring-context-support/src/main/java/org/springframework/mail/SimpleMailMessage.java b/spring-context-support/src/main/java/org/springframework/mail/SimpleMailMessage.java",
                "index 3b224a47b1..0d876549d3 100644",
                "--- a/spring-context-support/src/main/java/org/springframework/mail/SimpleMailMessage.java",
                "+++ b/spring-context-support/src/main/java/org/springframework/mail/SimpleMailMessage.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -85,11 +85,5 @@ public class SimpleMailMessage implements MailMessage, Serializable {",
                " \t\tthis.replyTo = original.getReplyTo();",
                "-\t\tif (original.getTo() != null) {",
                "-\t\t\tthis.to = copy(original.getTo());",
                "-\t\t}",
                "-\t\tif (original.getCc() != null) {",
                "-\t\t\tthis.cc = copy(original.getCc());",
                "-\t\t}",
                "-\t\tif (original.getBcc() != null) {",
                "-\t\t\tthis.bcc = copy(original.getBcc());",
                "-\t\t}",
                "+\t\tthis.to = copyOrNull(original.getTo());",
                "+\t\tthis.cc = copyOrNull(original.getCc());",
                "+\t\tthis.bcc = copyOrNull(original.getBcc());",
                " \t\tthis.sentDate = original.getSentDate();",
                "@@ -201,3 +195,3 @@ public class SimpleMailMessage implements MailMessage, Serializable {",
                " \tpublic void copyTo(MailMessage target) {",
                "-\t\tAssert.notNull(target, \"'target' message argument must not be null\");",
                "+\t\tAssert.notNull(target, \"'target' MailMessage must not be null\");",
                " \t\tif (getFrom() != null) {",
                "@@ -209,9 +203,9 @@ public class SimpleMailMessage implements MailMessage, Serializable {",
                " \t\tif (getTo() != null) {",
                "-\t\t\ttarget.setTo(getTo());",
                "+\t\t\ttarget.setTo(copy(getTo()));",
                " \t\t}",
                " \t\tif (getCc() != null) {",
                "-\t\t\ttarget.setCc(getCc());",
                "+\t\t\ttarget.setCc(copy(getCc()));",
                " \t\t}",
                " \t\tif (getBcc() != null) {",
                "-\t\t\ttarget.setBcc(getBcc());",
                "+\t\t\ttarget.setBcc(copy(getBcc()));",
                " \t\t}",
                "@@ -229,16 +223,2 @@ public class SimpleMailMessage implements MailMessage, Serializable {",
                "-\t@Override",
                "-\tpublic String toString() {",
                "-\t\tStringBuilder sb = new StringBuilder(\"SimpleMailMessage: \");",
                "-\t\tsb.append(\"from=\").append(this.from).append(\"; \");",
                "-\t\tsb.append(\"replyTo=\").append(this.replyTo).append(\"; \");",
                "-\t\tsb.append(\"to=\").append(StringUtils.arrayToCommaDelimitedString(this.to)).append(\"; \");",
                "-\t\tsb.append(\"cc=\").append(StringUtils.arrayToCommaDelimitedString(this.cc)).append(\"; \");",
                "-\t\tsb.append(\"bcc=\").append(StringUtils.arrayToCommaDelimitedString(this.bcc)).append(\"; \");",
                "-\t\tsb.append(\"sentDate=\").append(this.sentDate).append(\"; \");",
                "-\t\tsb.append(\"subject=\").append(this.subject).append(\"; \");",
                "-\t\tsb.append(\"text=\").append(this.text);",
                "-\t\treturn sb.toString();",
                "-\t}",
                "-",
                " \t@Override",
                "@@ -254,5 +234,5 @@ public class SimpleMailMessage implements MailMessage, Serializable {",
                " \t\t\t\tObjectUtils.nullSafeEquals(this.replyTo, otherMessage.replyTo) &&",
                "-\t\t\t\tjava.util.Arrays.equals(this.to, otherMessage.to) &&",
                "-\t\t\t\tjava.util.Arrays.equals(this.cc, otherMessage.cc) &&",
                "-\t\t\t\tjava.util.Arrays.equals(this.bcc, otherMessage.bcc) &&",
                "+\t\t\t\tObjectUtils.nullSafeEquals(this.to, otherMessage.to) &&",
                "+\t\t\t\tObjectUtils.nullSafeEquals(this.cc, otherMessage.cc) &&",
                "+\t\t\t\tObjectUtils.nullSafeEquals(this.bcc, otherMessage.bcc) &&",
                " \t\t\t\tObjectUtils.nullSafeEquals(this.sentDate, otherMessage.sentDate) &&",
                "@@ -264,16 +244,9 @@ public class SimpleMailMessage implements MailMessage, Serializable {",
                " \tpublic int hashCode() {",
                "-\t\tint hashCode = (this.from == null ? 0 : this.from.hashCode());",
                "-\t\thashCode = 29 * hashCode + (this.replyTo == null ? 0 : this.replyTo.hashCode());",
                "-\t\tfor (int i = 0; this.to != null && i < this.to.length; i++) {",
                "-\t\t\thashCode = 29 * hashCode + (this.to == null ? 0 : this.to[i].hashCode());",
                "-\t\t}",
                "-\t\tfor (int i = 0; this.cc != null && i < this.cc.length; i++) {",
                "-\t\t\thashCode = 29 * hashCode + (this.cc == null ? 0 : this.cc[i].hashCode());",
                "-\t\t}",
                "-\t\tfor (int i = 0; this.bcc != null && i < this.bcc.length; i++) {",
                "-\t\t\thashCode = 29 * hashCode + (this.bcc == null ? 0 : this.bcc[i].hashCode());",
                "-\t\t}",
                "-\t\thashCode = 29 * hashCode + (this.sentDate == null ? 0 : this.sentDate.hashCode());",
                "-\t\thashCode = 29 * hashCode + (this.subject == null ? 0 : this.subject.hashCode());",
                "-\t\thashCode = 29 * hashCode + (this.text == null ? 0 : this.text.hashCode());",
                "+\t\tint hashCode = ObjectUtils.nullSafeHashCode(this.from);",
                "+\t\thashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.replyTo);",
                "+\t\thashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.to);",
                "+\t\thashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.cc);",
                "+\t\thashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.bcc);",
                "+\t\thashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.sentDate);",
                "+\t\thashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.subject);",
                " \t\treturn hashCode;",
                "@@ -281,2 +254,24 @@ public class SimpleMailMessage implements MailMessage, Serializable {",
                "+\t@Override",
                "+\tpublic String toString() {",
                "+\t\tStringBuilder sb = new StringBuilder(\"SimpleMailMessage: \");",
                "+\t\tsb.append(\"from=\").append(this.from).append(\"; \");",
                "+\t\tsb.append(\"replyTo=\").append(this.replyTo).append(\"; \");",
                "+\t\tsb.append(\"to=\").append(StringUtils.arrayToCommaDelimitedString(this.to)).append(\"; \");",
                "+\t\tsb.append(\"cc=\").append(StringUtils.arrayToCommaDelimitedString(this.cc)).append(\"; \");",
                "+\t\tsb.append(\"bcc=\").append(StringUtils.arrayToCommaDelimitedString(this.bcc)).append(\"; \");",
                "+\t\tsb.append(\"sentDate=\").append(this.sentDate).append(\"; \");",
                "+\t\tsb.append(\"subject=\").append(this.subject).append(\"; \");",
                "+\t\tsb.append(\"text=\").append(this.text);",
                "+\t\treturn sb.toString();",
                "+\t}",
                "+",
                "+",
                "+\t@Nullable",
                "+\tprivate static String[] copyOrNull(@Nullable String[] state) {",
                "+\t\tif (state == null) {",
                "+\t\t\treturn null;",
                "+\t\t}",
                "+\t\treturn copy(state);",
                "+\t}"
            ],
            "changed_files": [
                "spring-context-support/src/main/java/org/springframework/mail/SimpleMailMessage.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "4cf179535908846e918ab2bfeb3f49a2b82398e2"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "986d219391d2e1312cccd08ea51f4a4fb5058020",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522362391,
            "hunks": 12,
            "message": "Replaces rather than prepend contextPath Issue: SPR-16650",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java",
                "index 8ea7004d7c..8bf1125f67 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java",
                "@@ -83,2 +83,6 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t * and \"X-Forwarded-*\" headers if found. See class-level docs.",
                "+\t *",
                "+\t * <p>As of 4.3.15, this method replaces the contextPath with the value",
                "+\t * of \"X-Forwarded-Prefix\" rather than prepending, thus aligning with",
                "+\t * {@code ForwardedHeaderFiller}.",
                " \t */",
                "@@ -86,3 +90,4 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t\tServletUriComponentsBuilder builder = initFromRequest(request);",
                "-\t\tbuilder.replacePath(prependForwardedPrefix(request, request.getContextPath()));",
                "+\t\tString forwardedPrefix = getForwardedPrefix(request);",
                "+\t\tbuilder.replacePath(forwardedPrefix != null ? forwardedPrefix : request.getContextPath());",
                " \t\treturn builder;",
                "@@ -100,2 +105,6 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t * and \"X-Forwarded-*\" headers if found. See class-level docs.",
                "+\t *",
                "+\t * <p>As of 4.3.15, this method replaces the contextPath with the value",
                "+\t * of \"X-Forwarded-Prefix\" rather than prepending, thus aligning with",
                "+\t * {@code ForwardedHeaderFiller}.",
                " \t */",
                "@@ -115,2 +124,6 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t * and \"X-Forwarded-*\" headers if found. See class-level docs.",
                "+\t *",
                "+\t * <p>As of 4.3.15, this method replaces the contextPath with the value",
                "+\t * of \"X-Forwarded-Prefix\" rather than prepending, thus aligning with",
                "+\t * {@code ForwardedHeaderFiller}.",
                " \t */",
                "@@ -118,3 +131,3 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t\tServletUriComponentsBuilder builder = initFromRequest(request);",
                "-\t\tbuilder.initPath(prependForwardedPrefix(request, request.getRequestURI()));",
                "+\t\tbuilder.initPath(getRequestUriWithForwardedPrefix(request));",
                " \t\treturn builder;",
                "@@ -128,2 +141,6 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t * and \"X-Forwarded-*\" headers if found. See class-level docs.",
                "+\t *",
                "+\t * <p>As of 4.3.15, this method replaces the contextPath with the value",
                "+\t * of \"X-Forwarded-Prefix\" rather than prepending, thus aligning with",
                "+\t * {@code ForwardedHeaderFiller}.",
                " \t */",
                "@@ -131,3 +148,3 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t\tServletUriComponentsBuilder builder = initFromRequest(request);",
                "-\t\tbuilder.initPath(prependForwardedPrefix(request, request.getRequestURI()));",
                "+\t\tbuilder.initPath(getRequestUriWithForwardedPrefix(request));",
                " \t\tbuilder.query(request.getQueryString());",
                "@@ -155,3 +172,3 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                "-\tprivate static String prependForwardedPrefix(HttpServletRequest request, String path) {",
                "+\tprivate static String getForwardedPrefix(HttpServletRequest request) {",
                " \t\tString prefix = null;",
                "@@ -165,3 +182,18 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t\tif (prefix != null) {",
                "-\t\t\tpath = prefix + path;",
                "+\t\t\twhile (prefix.endsWith(\"/\")) {",
                "+\t\t\t\tprefix = prefix.substring(0, prefix.length() - 1);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn prefix;",
                "+\t}",
                "+",
                "+\tprivate static String getRequestUriWithForwardedPrefix(HttpServletRequest request) {",
                "+\t\tString path = request.getRequestURI();",
                "+\t\tString forwardedPrefix = getForwardedPrefix(request);",
                "+\t\tif (forwardedPrefix != null) {",
                "+\t\t\tString contextPath = request.getContextPath();",
                "+\t\t\tif (!StringUtils.isEmpty(contextPath) && !contextPath.equals(\"/\") && path.startsWith(contextPath)) {",
                "+\t\t\t\tpath = path.substring(contextPath.length());",
                "+\t\t\t}",
                "+\t\t\tpath = forwardedPrefix + path;",
                " \t\t}",
                "@@ -179,2 +211,6 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t * and \"X-Forwarded-*\" headers if found. See class-level docs.",
                "+\t *",
                "+\t * <p>As of 4.3.15, this method replaces the contextPath with the value",
                "+\t * of \"X-Forwarded-Prefix\" rather than prepending, thus aligning with",
                "+\t * {@code ForwardedHeaderFiller}.",
                " \t */",
                "@@ -201,2 +237,6 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t * and \"X-Forwarded-*\" headers if found. See class-level docs.",
                "+\t *",
                "+\t * <p>As of 4.3.15, this method replaces the contextPath with the value",
                "+\t * of \"X-Forwarded-Prefix\" rather than prepending, thus aligning with",
                "+\t * {@code ForwardedHeaderFiller}.",
                " \t */",
                "@@ -212,2 +252,6 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t * and \"X-Forwarded-*\" headers if found. See class-level docs.",
                "+\t *",
                "+\t * <p>As of 4.3.15, this method replaces the contextPath with the value",
                "+\t * of \"X-Forwarded-Prefix\" rather than prepending, thus aligning with",
                "+\t * {@code ForwardedHeaderFiller}.",
                " \t */"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "240d6f52c90fac68146bd38cea79ea6e099c6a00"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8d2f64fe2dd799ce7c4aa0a184b4acba1c5eaa43",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522305836,
            "hunks": 1,
            "message": "Nested \"enum\"s should not be declared static Closes gh-1759",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java",
                "index a21670dc21..212d8a3af1 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java",
                "@@ -375,3 +375,3 @@ public class ReflectionHelper {",
                "-\tstatic enum ArgumentsMatchKind {",
                "+\tenum ArgumentsMatchKind {"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1759": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1759",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "40d5e7cc80c3376cc0c3cd5cfaf89253e17d2ba6",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522770189,
            "hunks": 2,
            "message": "Upgrade to AspectJ 1.9 GA Issue: SPR-16686",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index f7e354b271..66d2d8d989 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -141,4 +141,2 @@ configure(allprojects) { project ->",
                " \t\tmaven { url \"https://repo.spring.io/libs-release\" }",
                "-\t\tmaven { url \"https://repo.spring.io/milestone\" }  // for AspectJ 1.9 beta",
                "-\t\tmaven { url \"https://repo.spring.io/snapshot\" }  // for Reactor",
                " \t}",
                "diff --git a/spring-aspects/spring-aspects.gradle b/spring-aspects/spring-aspects.gradle",
                "index 269b0a8f20..6422ff52f2 100644",
                "--- a/spring-aspects/spring-aspects.gradle",
                "+++ b/spring-aspects/spring-aspects.gradle",
                "@@ -82,4 +82,4 @@ dependencies {",
                " \taspects(project(\":spring-orm\"))",
                "-\tajc(\"org.aspectj:aspectjtools:1.9.0.RC2\")  // for JDK 9+ build compatibility",
                "-\trt(\"org.aspectj:aspectjrt:1.9.0.RC2\")  // for JDK 9+ build compatibility",
                "+\tajc(\"org.aspectj:aspectjtools:1.9.0\")  // for JDK 9+ build compatibility",
                "+\trt(\"org.aspectj:aspectjrt:1.9.0\")  // for JDK 9+ build compatibility",
                " \tcompile(\"org.aspectj:aspectjweaver:${aspectjVersion}\")  // for Maven POM exposure"
            ],
            "changed_files": [
                "build.gradle",
                "spring-aspects/spring-aspects.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4454ffd2b103b939a890ea7330bf192a32eec622",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522509464,
            "hunks": 3,
            "message": "Replace remaining use of block operator",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "index fe6057cf03..216ecf7a0c 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -23,2 +23,4 @@ import java.util.stream.Collectors;",
                "+import reactor.core.publisher.MonoProcessor;",
                "+",
                " import org.springframework.core.DefaultParameterNameDiscoverer;",
                "@@ -100,4 +102,17 @@ public class SyncInvocableHandlerMethod extends HandlerMethod {",
                "-\t\t// This will not block with only sync resolvers allowed",
                "-\t\treturn this.delegate.invoke(exchange, bindingContext, providedArgs).block();",
                "+\t\tMonoProcessor<HandlerResult> processor = MonoProcessor.create();",
                "+\t\tthis.delegate.invoke(exchange, bindingContext, providedArgs).subscribeWith(processor);",
                "+",
                "+\t\tif (processor.isTerminated()) {",
                "+\t\t\tThrowable error = processor.getError();",
                "+\t\t\tif (error != null) {",
                "+\t\t\t\tthrow (RuntimeException) error;",
                "+\t\t\t}",
                "+\t\t\treturn processor.peek();",
                "+\t\t}",
                "+\t\telse {",
                "+\t\t\t// Should never happen...",
                "+\t\t\tthrow new IllegalStateException(",
                "+\t\t\t\t\t\"SyncInvocableHandlerMethod should have completed synchronously.\");",
                "+\t\t}",
                " \t}"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7c28152c1337a6f08f170df587441cc8e0a729d5",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522338325,
            "hunks": 4,
            "message": "Introduce ClassUtils.isInnerClass() utility method",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/MethodParameter.java b/spring-core/src/main/java/org/springframework/core/MethodParameter.java",
                "index b8116804ea..317aae575e 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/MethodParameter.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/MethodParameter.java",
                "@@ -24,3 +24,2 @@ import java.lang.reflect.Member;",
                " import java.lang.reflect.Method;",
                "-import java.lang.reflect.Modifier;",
                " import java.lang.reflect.Parameter;",
                "@@ -40,2 +39,3 @@ import org.springframework.lang.Nullable;",
                " import org.springframework.util.Assert;",
                "+import org.springframework.util.ClassUtils;",
                "@@ -521,4 +521,3 @@ public class MethodParameter {",
                " \t\t\tif (this.executable instanceof Constructor &&",
                "-\t\t\t\t\tthis.executable.getDeclaringClass().isMemberClass() &&",
                "-\t\t\t\t\t!Modifier.isStatic(this.executable.getDeclaringClass().getModifiers()) &&",
                "+\t\t\t\t\tClassUtils.isInnerClass(this.executable.getDeclaringClass()) &&",
                " \t\t\t\t\tannotationArray.length == this.executable.getParameterCount() - 1) {",
                "diff --git a/spring-core/src/main/java/org/springframework/util/ClassUtils.java b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "index 788678682b..c0023dacad 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "@@ -211,2 +211,10 @@ public abstract class ClassUtils {",
                "+\t/**",
                "+\t * Determine if the supplied class is an <em>inner class</em>.",
                "+\t * @return {@code true} if the supplied class is an inner class",
                "+\t */",
                "+\tpublic static boolean isInnerClass(Class<?> clazz) {",
                "+\t\treturn clazz != null && clazz.isMemberClass() && !Modifier.isStatic(clazz.getModifiers());",
                "+\t}",
                "+",
                " \t/**"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/MethodParameter.java",
                "spring-core/src/main/java/org/springframework/util/ClassUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "e6020ed3777fe5d99e0c9333185f7f5ad143b9c9",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522272157,
            "hunks": 5,
            "message": "avoid unnecessary autoboxing",
            "diff": [
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java b/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java",
                "index 56b6358ccb..7276ec7843 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java",
                "@@ -84,3 +84,3 @@ public abstract class AopNamespaceUtils {",
                " \t\tif (sourceElement != null) {",
                "-\t\t\tboolean proxyTargetClass = Boolean.valueOf(sourceElement.getAttribute(PROXY_TARGET_CLASS_ATTRIBUTE));",
                "+\t\t\tboolean proxyTargetClass = Boolean.parseBoolean(sourceElement.getAttribute(PROXY_TARGET_CLASS_ATTRIBUTE));",
                " \t\t\tif (proxyTargetClass) {",
                "@@ -88,3 +88,3 @@ public abstract class AopNamespaceUtils {",
                " \t\t\t}",
                "-\t\t\tboolean exposeProxy = Boolean.valueOf(sourceElement.getAttribute(EXPOSE_PROXY_ATTRIBUTE));",
                "+\t\t\tboolean exposeProxy = Boolean.parseBoolean(sourceElement.getAttribute(EXPOSE_PROXY_ATTRIBUTE));",
                " \t\t\tif (exposeProxy) {",
                "diff --git a/spring-context/src/main/java/org/springframework/scheduling/support/CronSequenceGenerator.java b/spring-context/src/main/java/org/springframework/scheduling/support/CronSequenceGenerator.java",
                "index a2a73b6112..6fcd8ed625 100644",
                "--- a/spring-context/src/main/java/org/springframework/scheduling/support/CronSequenceGenerator.java",
                "+++ b/spring-context/src/main/java/org/springframework/scheduling/support/CronSequenceGenerator.java",
                "@@ -354,3 +354,3 @@ public class CronSequenceGenerator {",
                " \t\t\t\t}",
                "-\t\t\t\tint delta = Integer.valueOf(split[1]);",
                "+\t\t\t\tint delta = Integer.parseInt(split[1]);",
                " \t\t\t\tif (delta <= 0) {",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java",
                "index 5c27570615..50bc3c5d6b 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java",
                "@@ -78,3 +78,3 @@ class ViewControllerBeanDefinitionParser implements BeanDefinitionParser {",
                " \t\tif (element.hasAttribute(\"status-code\")) {",
                "-\t\t\tint statusValue = Integer.valueOf(element.getAttribute(\"status-code\"));",
                "+\t\t\tint statusValue = Integer.parseInt(element.getAttribute(\"status-code\"));",
                " \t\t\tstatusCode = HttpStatus.valueOf(statusValue);",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/WebContentInterceptor.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/WebContentInterceptor.java",
                "index f97d2bb6ac..d599ec52dc 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/WebContentInterceptor.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/WebContentInterceptor.java",
                "@@ -123,3 +123,3 @@ public class WebContentInterceptor extends WebContentGenerator implements Handle",
                " \t\t\tString path = (String) propNames.nextElement();",
                "-\t\t\tint cacheSeconds = Integer.valueOf(cacheMappings.getProperty(path));",
                "+\t\t\tint cacheSeconds = Integer.parseInt(cacheMappings.getProperty(path));",
                " \t\t\tthis.cacheMappings.put(path, cacheSeconds);"
            ],
            "changed_files": [
                "spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java",
                "spring-context/src/main/java/org/springframework/scheduling/support/CronSequenceGenerator.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/WebContentInterceptor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "30b63a71bdcf8f91b1ef050e5a35687883d03e27",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522340863,
            "hunks": 2,
            "message": "Switch to Bismuth snapshots",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 58a877532c..94d792f150 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -55,3 +55,3 @@ configure(allprojects) { project ->",
                " \text.nettyVersion         = \"4.1.22.Final\"",
                "-\text.reactorVersion       = \"Bismuth-SR7\"",
                "+\text.reactorVersion       = \"Bismuth-BUILD-SNAPSHOT\"",
                " \text.rxjavaVersion        = \"1.3.7\"",
                "@@ -142,2 +142,3 @@ configure(allprojects) { project ->",
                " \t\tmaven { url \"https://repo.spring.io/milestone\" }  // for AspectJ 1.9 beta",
                "+\t\tmaven { url \"https://repo.spring.io/snapshot\" }  // for Reactor",
                " \t}"
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1fbd38c2d8a3feebe53d6b29427571f55a6475d6",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522518881,
            "hunks": 1,
            "message": "Upgrade to Groovy 2.4.15",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 3fbabecd4f..9e16e5a46e 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -42,3 +42,3 @@ configure(allprojects) { project ->",
                " \text.freemarkerVersion    = \"2.3.23\"",
                "-\text.groovyVersion        = \"2.4.14\"",
                "+\text.groovyVersion        = \"2.4.15\"",
                " \text.gsonVersion          = \"2.8.2\""
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "51c57d77d90981d266dc94054ebe27e3f77890a1",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521738567,
            "hunks": 46,
            "message": "SimpleEvaluationContext with dedicated factory methods for common cases Aligned with DataBindingPropertyAccessor and shown in ref doc examples. Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java b/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java",
                "index f8a723429f..b2fa91ec64 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -59,3 +59,3 @@ public enum SpelMessage {",
                " \tPROPERTY_OR_FIELD_NOT_READABLE(Kind.ERROR, 1008,",
                "-\t\t\t\"Property or field ''{0}'' cannot be found on object of type ''{1}'' - maybe not public?\"),",
                "+\t\t\t\"Property or field ''{0}'' cannot be found on object of type ''{1}'' - maybe not public or not valid?\"),",
                "@@ -65,3 +65,3 @@ public enum SpelMessage {",
                " \tPROPERTY_OR_FIELD_NOT_WRITABLE(Kind.ERROR, 1010,",
                "-\t\t\t\"Property or field ''{0}'' cannot be set on object of type ''{1}'' - maybe not public?\"),",
                "+\t\t\t\"Property or field ''{0}'' cannot be set on object of type ''{1}'' - maybe not public or not writable?\"),",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "index 2deb173993..8ee7ec946d 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "@@ -24,8 +24,8 @@ import java.lang.reflect.Method;",
                "  *",
                "- * <p>A property can be accessed through a public getter method (when being read)",
                "+ * <p>A property can be referenced through a public getter method (when being read)",
                "  * or a public setter method (when being written), and also as a public field.",
                "  *",
                "- * <p>This accessor is explicitly designed for user-level property evaluation",
                "- * and does not resolve technical properties on {@code java.lang.Object}.",
                "- * For more resolution power, choose {@link ReflectivePropertyAccessor} instead.",
                "+ * <p>This accessor is explicitly designed for user-declared properties and does not",
                "+ * resolve technical properties on {@code java.lang.Object} or {@code java.lang.Class}.",
                "+ * For unrestricted resolution, choose {@link ReflectivePropertyAccessor} instead.",
                "  *",
                "@@ -51,4 +51,5 @@ public class DataBindingPropertyAccessor extends ReflectivePropertyAccessor {",
                " \t@Override",
                "-\tprotected boolean isCandidateForProperty(Method method) {",
                "-\t\treturn (method.getDeclaringClass() != Object.class);",
                "+\tprotected boolean isCandidateForProperty(Method method, Class<?> targetClass) {",
                "+\t\tClass<?> clazz = method.getDeclaringClass();",
                "+\t\treturn (clazz != Object.class && clazz != Class.class && !ClassLoader.class.isAssignableFrom(targetClass));",
                " \t}",
                "@@ -57,3 +58,3 @@ public class DataBindingPropertyAccessor extends ReflectivePropertyAccessor {",
                " \t/**",
                "-\t * Create a new data-binding property accessor for read-only access.",
                "+\t * Create a new data-binding property accessor for read-only operations.",
                " \t */",
                "@@ -64,3 +65,3 @@ public class DataBindingPropertyAccessor extends ReflectivePropertyAccessor {",
                " \t/**",
                "-\t * Create a new data-binding property accessor for read-write access.",
                "+\t * Create a new data-binding property accessor for read-write operations.",
                " \t */",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "index c8ad58abdc..41eb0ed7bc 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "@@ -50,3 +50,3 @@ import org.springframework.util.StringUtils;",
                "  *",
                "- * <p>A property can be accessed through a public getter method (when being read)",
                "+ * <p>A property can be referenced through a public getter method (when being read)",
                "  * or a public setter method (when being written), and also as a public field.",
                "@@ -411,3 +411,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tfor (Method method : methods) {",
                "-\t\t\t\tif (isCandidateForProperty(method) && method.getName().equals(prefix + methodSuffix) &&",
                "+\t\t\t\tif (isCandidateForProperty(method, clazz) && method.getName().equals(prefix + methodSuffix) &&",
                " \t\t\t\t\t\tmethod.getParameterCount() == numberOfParams &&",
                "@@ -427,5 +427,6 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t * @param method the Method to evaluate",
                "+\t * @param targetClass the concrete target class that is being introspected",
                " \t * @since 4.3.15",
                " \t */",
                "-\tprotected boolean isCandidateForProperty(Method method) {",
                "+\tprotected boolean isCandidateForProperty(Method method, Class<?> targetClass) {",
                " \t\treturn true;",
                "@@ -520,4 +521,4 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "-\t\tClass<?> type = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "-\t\tif (type.isArray()) {",
                "+\t\tClass<?> clazz = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "+\t\tif (clazz.isArray()) {",
                " \t\t\treturn this;",
                "@@ -525,3 +526,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "-\t\tPropertyCacheKey cacheKey = new PropertyCacheKey(type, name, target instanceof Class);",
                "+\t\tPropertyCacheKey cacheKey = new PropertyCacheKey(clazz, name, target instanceof Class);",
                " \t\tInvokerPair invocationTarget = this.readerCache.get(cacheKey);",
                "@@ -531,3 +532,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tif (method == null) {",
                "-\t\t\t\tmethod = findGetterForProperty(name, type, target);",
                "+\t\t\t\tmethod = findGetterForProperty(name, clazz, target);",
                " \t\t\t\tif (method != null) {",
                "@@ -538,3 +539,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t}",
                "-\t\t\tif (method != null && isCandidateForProperty(method)) {",
                "+\t\t\tif (method != null) {",
                " \t\t\t\treturn new OptimalPropertyAccessor(invocationTarget);",
                "@@ -546,3 +547,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tif (field == null) {",
                "-\t\t\t\tfield = findField(name, type, target instanceof Class);",
                "+\t\t\t\tfield = findField(name, clazz, target instanceof Class);",
                " \t\t\t\tif (field != null) {",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "index 03a543a1ae..20272c18e0 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "@@ -18,3 +18,2 @@ package org.springframework.expression.spel.support;",
                "-import java.util.ArrayList;",
                " import java.util.Arrays;",
                "@@ -25,2 +24,3 @@ import java.util.Map;",
                "+import org.springframework.core.convert.ConversionService;",
                " import org.springframework.expression.BeanResolver;",
                "@@ -43,30 +43,38 @@ import org.springframework.lang.Nullable;",
                "  *",
                "- * <p>In many cases, the full extent of the SpEL language is not",
                "- * required and should be meaningfully restricted. Examples include but are not",
                "- * limited to data binding expressions, property-based filters, and others. To",
                "- * that effect, {@code SimpleEvaluationContext} is tailored to support only a",
                "- * subset of the SpEL language syntax, e.g. excluding references to Java types,",
                "- * constructors, and bean references.",
                "+ * <p>In many cases, the full extent of the SpEL language is not required and",
                "+ * should be meaningfully restricted. Examples include but are not limited to",
                "+ * data binding expressions, property-based filters, and others. To that effect,",
                "+ * {@code SimpleEvaluationContext} is tailored to support only a subset of the",
                "+ * SpEL language syntax, e.g. excluding references to Java types, constructors,",
                "+ * and bean references.",
                "  *",
                "  * <p>When creating {@code SimpleEvaluationContext} you need to choose the level",
                "- * of support you need to deal with properties and methods in SpEL expressions.",
                "- * By default, {@link SimpleEvaluationContext#create()} enables only read access",
                "- * to properties via {@link DataBindingPropertyAccessor}. Alternatively, use",
                "- * {@link SimpleEvaluationContext#builder()} to configure the exact level of",
                "- * support needed, targeting one of, or some combination of the following:",
                "+ * of support you need to deal with properties and methods in SpEL expressions:",
                "  * <ul>",
                "- * <li>Custom {@code PropertyAccessor} only (no reflection).</li>",
                "- * <li>Data binding properties for read-only access.</li>",
                "- * <li>Data binding properties for read and write.</li>",
                "+ * <li>Custom {@code PropertyAccessor} only (no reflection)</li>",
                "+ * <li>Data binding properties for read-only access</li>",
                "+ * <li>Data binding properties for read and write</li>",
                "  * </ul>",
                "  *",
                "- * <p>Note that {@code SimpleEvaluationContext} cannot be configured with a",
                "- * default root object. Instead it is meant to be created once and used",
                "- * repeatedly through method variants on",
                "- * {@link org.springframework.expression.Expression Expression} that accept",
                "- * both an {@code EvaluationContext} and a root object.",
                "+ * <p>Conveniently, {@link SimpleEvaluationContext#forReadOnlyDataBinding()}",
                "+ * enables read access to properties via {@link DataBindingPropertyAccessor};",
                "+ * same for {@link SimpleEvaluationContext#forReadWriteDataBinding()} when",
                "+ * write access is needed as well. Alternatively, configure custom accessors",
                "+ * via {@link SimpleEvaluationContext#forPropertyAccessors}.",
                "+ *",
                "+ * <p>Note that {@code SimpleEvaluationContext} cannot be configured with",
                "+ * a default root object. Instead it is meant to be created once and used",
                "+ * repeatedly through {@code getValue} calls on a pre-compiled",
                "+ * {@link org.springframework.expression.Expression} with both an",
                "+ * {@code EvaluationContext} and a root object as arguments",
                "+ *",
                "+ * <p>For more flexibility, consider {@link StandardEvaluationContext} instead.",
                "  *",
                "  * @author Rossen Stoyanchev",
                "+ * @author Juergen Hoeller",
                "  * @since 4.3.15",
                "+ * @see #forReadOnlyDataBinding()",
                "+ * @see #forReadWriteDataBinding()",
                "  * @see StandardEvaluationContext",
                "+ * @see StandardTypeConverter",
                "  * @see DataBindingPropertyAccessor",
                "@@ -82,6 +90,2 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\tprivate final List<ConstructorResolver> constructorResolvers = Collections.emptyList();",
                "-",
                "-\tprivate final List<MethodResolver> methodResolvers = Collections.emptyList();",
                "-",
                " \tprivate final TypeConverter typeConverter;",
                "@@ -96,4 +100,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tprivate SimpleEvaluationContext(List<PropertyAccessor> accessors, @Nullable TypeConverter converter) {",
                "-\t\tthis.propertyAccessors = Collections.unmodifiableList(new ArrayList<>(accessors));",
                "-\t\tthis.typeConverter = converter != null ? converter : new StandardTypeConverter();",
                "+\t\tthis.propertyAccessors = accessors;",
                "+\t\tthis.typeConverter = (converter != null ? converter : new StandardTypeConverter());",
                " \t}",
                "@@ -124,3 +128,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tpublic List<ConstructorResolver> getConstructorResolvers() {",
                "-\t\treturn this.constructorResolvers;",
                "+\t\treturn Collections.emptyList();",
                " \t}",
                "@@ -132,3 +136,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tpublic List<MethodResolver> getMethodResolvers() {",
                "-\t\treturn this.methodResolvers;",
                "+\t\treturn Collections.emptyList();",
                " \t}",
                "@@ -172,3 +176,2 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-",
                " \t/**",
                "@@ -194,14 +197,18 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * Create a {@code SimpleEvaluationContext} with read-only access to",
                "+\t * Create a {@code SimpleEvaluationContext} for the specified",
                "+\t * {@link PropertyAccessor} delegates.",
                "+\t * @see ReflectivePropertyAccessor",
                "+\t * @see DataBindingPropertyAccessor",
                "+\t */",
                "+\tpublic static Builder forPropertyAccessors(PropertyAccessor... accessors) {",
                "+\t\treturn new Builder(accessors);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a {@code SimpleEvaluationContext} for read-only access to",
                " \t * public properties via {@link DataBindingPropertyAccessor}.",
                "-\t * <p>Effectively, a shortcut for:",
                "-\t * <pre class=\"code\">",
                "-\t * SimpleEvaluationContext context = SimpleEvaluationContext.builder()",
                "-\t *         .dataBindingPropertyAccessor(true)",
                "-\t *         .build();",
                "-\t * </pre>",
                "-\t * @see #builder()",
                "+\t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                " \t */",
                "-\tpublic static SimpleEvaluationContext create() {",
                "-\t\treturn new Builder().dataBindingPropertyAccessor(true).build();",
                "+\tpublic static Builder forReadOnlyDataBinding() {",
                "+\t\treturn new Builder(DataBindingPropertyAccessor.forReadOnlyAccess());",
                " \t}",
                "@@ -209,7 +216,8 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * Return a builder to create a {@code SimpleEvaluationContext}.",
                "-\t * @see #create()",
                "+\t * Create a {@code SimpleEvaluationContext} for read-write access to",
                "+\t * public properties via {@link DataBindingPropertyAccessor}.",
                "+\t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                " \t */",
                "-\tpublic static Builder builder() {",
                "-\t\treturn new Builder();",
                "+\tpublic static Builder forReadWriteDataBinding() {",
                "+\t\treturn new Builder(DataBindingPropertyAccessor.forReadWriteAccess());",
                " \t}",
                "@@ -222,3 +230,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\t\tprivate final List<PropertyAccessor> propertyAccessors = new ArrayList<>();",
                "+\t\tprivate final List<PropertyAccessor> propertyAccessors;",
                "@@ -227,14 +235,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-",
                "-\t\t/**",
                "-\t\t * Enable access to public properties for data binding purposes.",
                "-\t\t * <p>Effectively, a shortcut for",
                "-\t\t * {@code propertyAccessor(new DataBindingPropertyAccessor(boolean))}.",
                "-\t\t * @param readOnlyAccess whether to read-only access to properties,",
                "-\t\t * {@code \"true\"}, or read and write, {@code \"false\"}.",
                "-\t\t */",
                "-\t\tpublic Builder dataBindingPropertyAccessor(boolean readOnlyAccess) {",
                "-\t\t\treturn propertyAccessor(readOnlyAccess ?",
                "-\t\t\t\t\tDataBindingPropertyAccessor.forReadOnlyAccess() :",
                "-\t\t\t\t\tDataBindingPropertyAccessor.forReadWriteAccess());",
                "+\t\tpublic Builder(PropertyAccessor... accessors) {",
                "+\t\t\tthis.propertyAccessors = Arrays.asList(accessors);",
                " \t\t}",
                "@@ -242,7 +240,11 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\t/**",
                "-\t\t * Register a custom accessor for properties in expressions.",
                "-\t\t * <p>By default, the builder does not enable property access.",
                "+\t\t * Register a custom {@link TypeConverter}.",
                "+\t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "+\t\t * {@link org.springframework.core.convert.support.DefaultConversionService}",
                "+\t\t * is used.",
                "+\t\t * @see #withConversionService",
                "+\t\t * @see StandardTypeConverter#StandardTypeConverter()",
                " \t\t */",
                "-\t\tpublic Builder propertyAccessor(PropertyAccessor... accessors) {",
                "-\t\t\tthis.propertyAccessors.addAll(Arrays.asList(accessors));",
                "+\t\tpublic Builder withTypeConverter(TypeConverter converter) {",
                "+\t\t\tthis.typeConverter = converter;",
                " \t\t\treturn this;",
                "@@ -251,7 +253,11 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\t/**",
                "-\t\t * Register a custom {@link TypeConverter}.",
                "-\t\t * <p>By default {@link StandardTypeConverter} is used.",
                "+\t\t * Register a custom {@link ConversionService}.",
                "+\t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "+\t\t * {@link org.springframework.core.convert.support.DefaultConversionService}",
                "+\t\t * is used.",
                "+\t\t * @see #withTypeConverter",
                "+\t\t * @see StandardTypeConverter#StandardTypeConverter(ConversionService)",
                " \t\t */",
                "-\t\tpublic Builder typeConverter(TypeConverter converter) {",
                "-\t\t\tthis.typeConverter = converter;",
                "+\t\tpublic Builder withConversionService(ConversionService conversionService) {",
                "+\t\t\tthis.typeConverter = new StandardTypeConverter(conversionService);",
                " \t\t\treturn this;",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardTypeConverter.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardTypeConverter.java",
                "index fce9643b65..77ff16342e 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardTypeConverter.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardTypeConverter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -44,2 +44,3 @@ public class StandardTypeConverter implements TypeConverter {",
                " \t * Create a StandardTypeConverter for the default ConversionService.",
                "+\t * @see DefaultConversionService#getSharedInstance()",
                " \t */",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "index ae9c6b7414..18c9a9169e 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "@@ -66,6 +66,5 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                "-\t/** Static evaluation context to re-use */",
                "-\tprivate static SimpleEvaluationContext evaluationContext = SimpleEvaluationContext.builder()",
                "-\t\t\t.propertyAccessor(new SimpMessageHeaderPropertyAccessor()).build();",
                "-",
                "+\t/** Static evaluation context to reuse */",
                "+\tprivate static EvaluationContext messageEvalContext =",
                "+\t\t\tSimpleEvaluationContext.forPropertyAccessors(new SimpMessageHeaderPropertyAccessor()).build();",
                "@@ -215,3 +214,3 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t\t\ttry {",
                "-\t\t\t\t\tif (Boolean.TRUE.equals(expression.getValue(evaluationContext, message, Boolean.class))) {",
                "+\t\t\t\t\tif (Boolean.TRUE.equals(expression.getValue(messageEvalContext, message, Boolean.class))) {",
                " \t\t\t\t\t\tresult.add(sessionId, subId);"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/StandardTypeConverter.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "71cacff8c2f83884c31d9fd5ea2d67e4e1bb5a7f",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522837766,
            "hunks": 1,
            "message": "Upgrade to JUnit Jupiter 5.1 Issue: SPR-16408",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 66d2d8d989..cd4b629afc 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -49,5 +49,5 @@ configure(allprojects) { project ->",
                " \text.jettyVersion         = \"9.4.9.v20180320\"",
                "-\text.junitJupiterVersion  = \"5.0.3\"",
                "-\text.junitPlatformVersion = \"1.0.3\"",
                "-\text.junitVintageVersion  = \"4.12.3\"",
                "+\text.junitJupiterVersion  = \"5.1.0\"",
                "+\text.junitPlatformVersion = \"1.1.0\"",
                "+\text.junitVintageVersion  = \"5.1.0\"",
                " \text.kotlinVersion        = \"1.2.31\""
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c072c6deb5697a0ffc862f8ed80aac13d20d6c50",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522163223,
            "hunks": 9,
            "message": "Refined javadoc for SimpleEvaluationContext and its builder features Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "index 265588a61a..a1f9251c11 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "@@ -29,3 +29,2 @@ import org.springframework.expression.ConstructorResolver;",
                " import org.springframework.expression.EvaluationContext;",
                "-import org.springframework.expression.Expression;",
                " import org.springframework.expression.MethodResolver;",
                "@@ -66,11 +65,13 @@ import org.springframework.lang.Nullable;",
                "  * write access is needed as well. Alternatively, configure custom accessors",
                "- * via {@link SimpleEvaluationContext#forPropertyAccessors}.",
                "+ * via {@link SimpleEvaluationContext#forPropertyAccessors}, and potentially",
                "+ * activate method resolution and/or a type converter through the builder.",
                "  *",
                "- * <p>Note that {@code SimpleEvaluationContext} cannot be configured with",
                "- * a default root object. Instead it is meant to be created once and used",
                "- * repeatedly through {@code getValue} calls on a pre-compiled",
                "+ * <p>Note that {@code SimpleEvaluationContext} is typically not configured",
                "+ * with a default root object. Instead it is meant to be created once and",
                "+ * used repeatedly through {@code getValue} calls on a pre-compiled",
                "  * {@link org.springframework.expression.Expression} with both an",
                "- * {@code EvaluationContext} and a root object as arguments",
                "+ * {@code EvaluationContext} and a root object as arguments:",
                "+ * {@link org.springframework.expression.Expression#getValue(EvaluationContext, Object)}.",
                "  *",
                "- * <p>For more flexibility, in particular for internal configuration",
                "+ * <p>For more power and flexibility, in particular for internal configuration",
                "  * scenarios, consider using {@link StandardEvaluationContext} instead.",
                "@@ -330,4 +331,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\t * <p>Default is none, expecting an object argument at evaluation time.",
                "-\t\t * @see Expression#getValue(EvaluationContext)",
                "-\t\t * @see Expression#getValue(EvaluationContext, Object)",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext)",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext, Object)",
                " \t\t */",
                "@@ -341,4 +342,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\t * <p>Default is none, expecting an object argument at evaluation time.",
                "-\t\t * @see Expression#getValue(EvaluationContext)",
                "-\t\t * @see Expression#getValue(EvaluationContext, Object)",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext)",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext, Object)",
                " \t\t */",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "index abfd18313c..c8cbac7ef0 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "@@ -40,7 +40,10 @@ import org.springframework.util.Assert;",
                " /**",
                "- * A highly configurable {@link EvaluationContext} implementation.",
                "- *",
                "- * <p>This context uses standard implementations of all applicable strategies,",
                "+ * A powerful and highly configurable {@link EvaluationContext} implementation.",
                "+ * This context uses standard implementations of all applicable strategies,",
                "  * based on reflection to resolve properties, methods and fields.",
                "  *",
                "+ * <p>For a simpler builder-style context variant for data-binding purposes,",
                "+ * consider using {@link SimpleEvaluationContext} instead which allows for",
                "+ * opting into several SpEL features as needed by specific evaluation cases.",
                "+ *",
                "  * @author Andy Clement"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5d54adfb9a3582d1d89f5979c514601fe787685b",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522508639,
            "hunks": 46,
            "message": "Selective backport of annotation retrieval refinements (from 5.0.5) In particular AnnotationTypeFilter's ignoring of standard Java interfaces, AnnotationUtils.clearCache() and a few extra common classes in ClassUtils. Issue: SPR-16667 Issue: SPR-16675",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "index 294d765c1c..e26b1e23ff 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -419,3 +419,4 @@ class ConfigurationClassEnhancer {",
                " \t\tpublic boolean isMatch(Method candidateMethod) {",
                "-\t\t\treturn BeanAnnotationHelper.isBeanAnnotated(candidateMethod);",
                "+\t\t\treturn (candidateMethod.getDeclaringClass() != Object.class &&",
                "+\t\t\t\t\tBeanAnnotationHelper.isBeanAnnotated(candidateMethod));",
                " \t\t}",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "index 01fec3f0d4..75f42f02de 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "@@ -31,2 +31,3 @@ import org.springframework.core.BridgeMethodResolver;",
                " import org.springframework.util.Assert;",
                "+import org.springframework.util.CollectionUtils;",
                " import org.springframework.util.LinkedMultiValueMap;",
                "@@ -242,3 +243,2 @@ public class AnnotatedElementUtils {",
                " \t\t\tsearchWithGetSemantics(element, annotationType, annotationName, new SimpleAnnotationProcessor<Boolean>() {",
                "-",
                " \t\t\t\t@Override",
                "@@ -272,3 +272,2 @@ public class AnnotatedElementUtils {",
                " \t\t}",
                "-",
                " \t\treturn Boolean.TRUE.equals(searchWithGetSemantics(element, annotationType, null, alwaysTrueAnnotationProcessor));",
                "@@ -617,3 +616,2 @@ public class AnnotatedElementUtils {",
                " \t\t}",
                "-",
                " \t\treturn Boolean.TRUE.equals(searchWithFindSemantics(element, annotationType, null, alwaysTrueAnnotationProcessor));",
                "@@ -875,4 +873,4 @@ public class AnnotatedElementUtils {",
                " \t */",
                "-\tprivate static <T> T searchWithGetSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType,",
                "-\t\t\tString annotationName, Processor<T> processor) {",
                "+\tprivate static <T> T searchWithGetSemantics(AnnotatedElement element,",
                "+\t\t\tClass<? extends Annotation> annotationType, String annotationName, Processor<T> processor) {",
                "@@ -895,8 +893,9 @@ public class AnnotatedElementUtils {",
                " \t */",
                "-\tprivate static <T> T searchWithGetSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType,",
                "-\t\t\tString annotationName, Class<? extends Annotation> containerType, Processor<T> processor) {",
                "+\tprivate static <T> T searchWithGetSemantics(AnnotatedElement element,",
                "+\t\t\tClass<? extends Annotation> annotationType, String annotationName,",
                "+\t\t\tClass<? extends Annotation> containerType, Processor<T> processor) {",
                " \t\ttry {",
                "-\t\t\treturn searchWithGetSemantics(element, annotationType, annotationName, containerType, processor,",
                "-\t\t\t\t\tnew HashSet<AnnotatedElement>(), 0);",
                "+\t\t\treturn searchWithGetSemantics(element, annotationType, annotationName,",
                "+\t\t\t\t\tcontainerType, processor, new HashSet<AnnotatedElement>(), 0);",
                " \t\t}",
                "@@ -925,4 +924,5 @@ public class AnnotatedElementUtils {",
                " \t */",
                "-\tprivate static <T> T searchWithGetSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType,",
                "-\t\t\tString annotationName, Class<? extends Annotation> containerType, Processor<T> processor,",
                "+\tprivate static <T> T searchWithGetSemantics(AnnotatedElement element,",
                "+\t\t\tClass<? extends Annotation> annotationType, String annotationName,",
                "+\t\t\tClass<? extends Annotation> containerType, Processor<T> processor,",
                " \t\t\tSet<AnnotatedElement> visited, int metaDepth) {",
                "@@ -941,3 +941,3 @@ public class AnnotatedElementUtils {",
                "-\t\t\t\tif (element instanceof Class) { // otherwise getAnnotations doesn't return anything new",
                "+\t\t\t\tif (element instanceof Class) {  // otherwise getAnnotations does not return anything new",
                " \t\t\t\t\tList<Annotation> inheritedAnnotations = new ArrayList<Annotation>();",
                "@@ -988,5 +988,5 @@ public class AnnotatedElementUtils {",
                " \tprivate static <T> T searchWithGetSemanticsInAnnotations(AnnotatedElement element,",
                "-\t\t\tList<Annotation> annotations, Class<? extends Annotation> annotationType, String annotationName,",
                "-\t\t\tClass<? extends Annotation> containerType, Processor<T> processor, Set<AnnotatedElement> visited,",
                "-\t\t\tint metaDepth) {",
                "+\t\t\tList<Annotation> annotations, Class<? extends Annotation> annotationType,",
                "+\t\t\tString annotationName, Class<? extends Annotation> containerType,",
                "+\t\t\tProcessor<T> processor, Set<AnnotatedElement> visited, int metaDepth) {",
                "@@ -1056,3 +1056,4 @@ public class AnnotatedElementUtils {",
                " \t */",
                "-\tprivate static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType,",
                "+\tprivate static <T> T searchWithFindSemantics(AnnotatedElement element,",
                "+\t\t\tClass<? extends Annotation> annotationType,",
                " \t\t\tString annotationName, Processor<T> processor) {",
                "@@ -1076,4 +1077,5 @@ public class AnnotatedElementUtils {",
                " \t */",
                "-\tprivate static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType,",
                "-\t\t\tString annotationName, Class<? extends Annotation> containerType, Processor<T> processor) {",
                "+\tprivate static <T> T searchWithFindSemantics(AnnotatedElement element,",
                "+\t\t\tClass<? extends Annotation> annotationType, String annotationName,",
                "+\t\t\tClass<? extends Annotation> containerType, Processor<T> processor) {",
                "@@ -1085,4 +1087,4 @@ public class AnnotatedElementUtils {",
                " \t\ttry {",
                "-\t\t\treturn searchWithFindSemantics(",
                "-\t\t\t\t\telement, annotationType, annotationName, containerType, processor, new HashSet<AnnotatedElement>(), 0);",
                "+\t\t\treturn searchWithFindSemantics(element, annotationType, annotationName,",
                "+\t\t\t\t\tcontainerType, processor, new HashSet<AnnotatedElement>(), 0);",
                " \t\t}",
                "@@ -1122,29 +1124,31 @@ public class AnnotatedElementUtils {",
                " \t\t\t\tAnnotation[] annotations = element.getDeclaredAnnotations();",
                "-\t\t\t\tList<T> aggregatedResults = (processor.aggregates() ? new ArrayList<T>() : null);",
                "-",
                "-\t\t\t\t// Search in local annotations",
                "-\t\t\t\tfor (Annotation annotation : annotations) {",
                "-\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "-\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "-\t\t\t\t\t\tif (currentAnnotationType == annotationType ||",
                "-\t\t\t\t\t\t\t\tcurrentAnnotationType.getName().equals(annotationName) ||",
                "-\t\t\t\t\t\t\t\tprocessor.alwaysProcesses()) {",
                "-\t\t\t\t\t\t\tT result = processor.process(element, annotation, metaDepth);",
                "-\t\t\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\t\t\tif (processor.aggregates() && metaDepth == 0) {",
                "-\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "-\t\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\t\telse {",
                "-\t\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\tif (annotations.length > 0) {",
                "+\t\t\t\t\tList<T> aggregatedResults = (processor.aggregates() ? new ArrayList<T>() : null);",
                "+",
                "+\t\t\t\t\t// Search in local annotations",
                "+\t\t\t\t\tfor (Annotation annotation : annotations) {",
                "+\t\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "+\t\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "+\t\t\t\t\t\t\tif (currentAnnotationType == annotationType ||",
                "+\t\t\t\t\t\t\t\t\tcurrentAnnotationType.getName().equals(annotationName) ||",
                "+\t\t\t\t\t\t\t\t\tprocessor.alwaysProcesses()) {",
                "+\t\t\t\t\t\t\t\tT result = processor.process(element, annotation, metaDepth);",
                "+\t\t\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\t\t\tif (aggregatedResults != null && metaDepth == 0) {",
                "+\t\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "+\t\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\t\telse {",
                "+\t\t\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t// Repeatable annotations in container?",
                "-\t\t\t\t\t\telse if (currentAnnotationType == containerType) {",
                "-\t\t\t\t\t\t\tfor (Annotation contained : getRawAnnotationsFromContainer(element, annotation)) {",
                "-\t\t\t\t\t\t\t\tT result = processor.process(element, contained, metaDepth);",
                "-\t\t\t\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\t\t\t\t// No need to post-process since repeatable annotations within a",
                "-\t\t\t\t\t\t\t\t\t// container cannot be composed annotations.",
                "-\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "+\t\t\t\t\t\t\t// Repeatable annotations in container?",
                "+\t\t\t\t\t\t\telse if (currentAnnotationType == containerType) {",
                "+\t\t\t\t\t\t\t\tfor (Annotation contained : getRawAnnotationsFromContainer(element, annotation)) {",
                "+\t\t\t\t\t\t\t\t\tT result = processor.process(element, contained, metaDepth);",
                "+\t\t\t\t\t\t\t\t\tif (aggregatedResults != null && result != null) {",
                "+\t\t\t\t\t\t\t\t\t\t// No need to post-process since repeatable annotations within a",
                "+\t\t\t\t\t\t\t\t\t\t// container cannot be composed annotations.",
                "+\t\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "+\t\t\t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t\t\t}",
                "@@ -1153,17 +1157,17 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t}",
                "-\t\t\t\t}",
                "-\t\t\t\t// Search in meta annotations on local annotations",
                "-\t\t\t\tfor (Annotation annotation : annotations) {",
                "-\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "-\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "-\t\t\t\t\t\tT result = searchWithFindSemantics(currentAnnotationType, annotationType, annotationName,",
                "-\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth + 1);",
                "-\t\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\t\tprocessor.postProcess(currentAnnotationType, annotation, result);",
                "-\t\t\t\t\t\t\tif (processor.aggregates() && metaDepth == 0) {",
                "-\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\telse {",
                "-\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t// Recursively search in meta-annotations",
                "+\t\t\t\t\tfor (Annotation annotation : annotations) {",
                "+\t\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "+\t\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "+\t\t\t\t\t\t\tT result = searchWithFindSemantics(currentAnnotationType, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth + 1);",
                "+\t\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\t\tprocessor.postProcess(currentAnnotationType, annotation, result);",
                "+\t\t\t\t\t\t\t\tif (aggregatedResults != null && metaDepth == 0) {",
                "+\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "+\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\telse {",
                "+\t\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t\t}",
                "@@ -1171,7 +1175,7 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t}",
                "-\t\t\t\t}",
                "-\t\t\t\tif (processor.aggregates()) {",
                "-\t\t\t\t\t// Prepend to support top-down ordering within class hierarchies",
                "-\t\t\t\t\tprocessor.getAggregatedResults().addAll(0, aggregatedResults);",
                "+\t\t\t\t\tif (!CollectionUtils.isEmpty(aggregatedResults)) {",
                "+\t\t\t\t\t\t// Prepend to support top-down ordering within class hierarchies",
                "+\t\t\t\t\t\tprocessor.getAggregatedResults().addAll(0, aggregatedResults);",
                "+\t\t\t\t\t}",
                " \t\t\t\t}",
                "@@ -1180,2 +1184,3 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tMethod method = (Method) element;",
                "+\t\t\t\t\tT result;",
                "@@ -1183,6 +1188,8 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tMethod resolvedMethod = BridgeMethodResolver.findBridgedMethod(method);",
                "-\t\t\t\t\tT result = searchWithFindSemantics(resolvedMethod, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "-\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\tif (resolvedMethod != method) {",
                "+\t\t\t\t\t\tresult = searchWithFindSemantics(resolvedMethod, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                "+\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}",
                "@@ -1191,6 +1198,8 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tClass<?>[] ifcs = method.getDeclaringClass().getInterfaces();",
                "-\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName, containerType, processor,",
                "-\t\t\t\t\t\t\tvisited, metaDepth, ifcs);",
                "-\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\tif (ifcs.length > 0) {",
                "+\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth, ifcs);",
                "+\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}",
                "@@ -1204,3 +1213,2 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t\t}",
                "-",
                " \t\t\t\t\t\ttry {",
                "@@ -1217,6 +1225,5 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t\t}",
                "-",
                " \t\t\t\t\t\t// Search on interfaces declared on superclass",
                "-\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName, containerType, processor,",
                "-\t\t\t\t\t\t\t\tvisited, metaDepth, clazz.getInterfaces());",
                "+\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth, clazz.getInterfaces());",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -1231,4 +1238,4 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tfor (Class<?> ifc : clazz.getInterfaces()) {",
                "-\t\t\t\t\t\tT result = searchWithFindSemantics(ifc, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "+\t\t\t\t\t\tT result = searchWithFindSemantics(ifc, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -1241,4 +1248,4 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tif (superclass != null && Object.class != superclass) {",
                "-\t\t\t\t\t\tT result = searchWithFindSemantics(superclass, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "+\t\t\t\t\t\tT result = searchWithFindSemantics(superclass, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                " \t\t\t\t\t\tif (result != null) {",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index ed091d85d6..971568dab0 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -147,3 +147,3 @@ public abstract class AnnotationUtils {",
                " \t * {@code find*()} methods instead.",
                "-\t * @param ann the Annotation to check",
                "+\t * @param annotation the Annotation to check",
                " \t * @param annotationType the annotation type to look for, both locally and as a meta-annotation",
                "@@ -153,7 +153,7 @@ public abstract class AnnotationUtils {",
                " \t@SuppressWarnings(\"unchecked\")",
                "-\tpublic static <A extends Annotation> A getAnnotation(Annotation ann, Class<A> annotationType) {",
                "-\t\tif (annotationType.isInstance(ann)) {",
                "-\t\t\treturn synthesizeAnnotation((A) ann);",
                "+\tpublic static <A extends Annotation> A getAnnotation(Annotation annotation, Class<A> annotationType) {",
                "+\t\tif (annotationType.isInstance(annotation)) {",
                "+\t\t\treturn synthesizeAnnotation((A) annotation);",
                " \t\t}",
                "-\t\tClass<? extends Annotation> annotatedElement = ann.annotationType();",
                "+\t\tClass<? extends Annotation> annotatedElement = annotation.annotationType();",
                " \t\ttry {",
                "@@ -570,3 +570,2 @@ public abstract class AnnotationUtils {",
                " \t\t\tresult = findAnnotation((AnnotatedElement) resolvedMethod, annotationType);",
                "-",
                " \t\t\tif (result == null) {",
                "@@ -605,6 +604,6 @@ public abstract class AnnotationUtils {",
                " \t\tA annotation = null;",
                "-\t\tfor (Class<?> iface : ifcs) {",
                "-\t\t\tif (isInterfaceWithAnnotatedMethods(iface)) {",
                "+\t\tfor (Class<?> ifc : ifcs) {",
                "+\t\t\tif (isInterfaceWithAnnotatedMethods(ifc)) {",
                " \t\t\t\ttry {",
                "-\t\t\t\t\tMethod equivalentMethod = iface.getMethod(method.getName(), method.getParameterTypes());",
                "+\t\t\t\t\tMethod equivalentMethod = ifc.getMethod(method.getName(), method.getParameterTypes());",
                " \t\t\t\t\tannotation = getAnnotation(equivalentMethod, annotationType);",
                "@@ -622,4 +621,4 @@ public abstract class AnnotationUtils {",
                "-\tstatic boolean isInterfaceWithAnnotatedMethods(Class<?> iface) {",
                "-\t\tBoolean found = annotatedInterfaceCache.get(iface);",
                "+\tstatic boolean isInterfaceWithAnnotatedMethods(Class<?> ifc) {",
                "+\t\tBoolean found = annotatedInterfaceCache.get(ifc);",
                " \t\tif (found != null) {",
                "@@ -628,3 +627,3 @@ public abstract class AnnotationUtils {",
                " \t\tfound = Boolean.FALSE;",
                "-\t\tfor (Method ifcMethod : iface.getMethods()) {",
                "+\t\tfor (Method ifcMethod : ifc.getMethods()) {",
                " \t\t\ttry {",
                "@@ -639,3 +638,3 @@ public abstract class AnnotationUtils {",
                " \t\t}",
                "-\t\tannotatedInterfaceCache.put(iface, found);",
                "+\t\tannotatedInterfaceCache.put(ifc, found);",
                " \t\treturn found;",
                "@@ -1288,3 +1287,2 @@ public abstract class AnnotationUtils {",
                " \t\t\t\tboolean valuePresent = (value != null && !(value instanceof DefaultValueHolder));",
                "-",
                " \t\t\t\tfor (String aliasedAttributeName : aliasMap.get(attributeName)) {",
                "@@ -1293,6 +1291,4 @@ public abstract class AnnotationUtils {",
                " \t\t\t\t\t}",
                "-",
                " \t\t\t\t\tObject aliasedValue = attributes.get(aliasedAttributeName);",
                " \t\t\t\t\tboolean aliasPresent = (aliasedValue != null && !(aliasedValue instanceof DefaultValueHolder));",
                "-",
                " \t\t\t\t\t// Something to validate or replace with an alias?",
                "@@ -1921,2 +1917,16 @@ public abstract class AnnotationUtils {",
                "+\t/**",
                "+\t * Clear the internal annotation metadata cache.",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tpublic static void clearCache() {",
                "+\t\tfindAnnotationCache.clear();",
                "+\t\tmetaPresentCache.clear();",
                "+\t\tannotatedInterfaceCache.clear();",
                "+\t\tsynthesizableCache.clear();",
                "+\t\tattributeAliasesCache.clear();",
                "+\t\tattributeMethodsCache.clear();",
                "+\t\taliasDescriptorCache.clear();",
                "+\t}",
                "+",
                "diff --git a/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java b/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "index 2b2faa4d05..9aaea29032 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -72,3 +72,5 @@ public class AnnotationTypeFilter extends AbstractTypeHierarchyTraversingFilter",
                " \t */",
                "-\tpublic AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {",
                "+\tpublic AnnotationTypeFilter(",
                "+\t\t\tClass<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {",
                "+",
                " \t\tsuper(annotationType.isAnnotationPresent(Inherited.class), considerInterfaces);",
                "@@ -101,2 +103,7 @@ public class AnnotationTypeFilter extends AbstractTypeHierarchyTraversingFilter",
                " \t\telse if (typeName.startsWith(\"java\")) {",
                "+\t\t\tif (!this.annotationType.getName().startsWith(\"java\")) {",
                "+\t\t\t\t// Standard Java types do not have non-standard annotations on them ->",
                "+\t\t\t\t// skip any load attempt, in particular for Java language interfaces.",
                "+\t\t\t\treturn false;",
                "+\t\t\t}",
                " \t\t\ttry {",
                "diff --git a/spring-core/src/main/java/org/springframework/util/ClassUtils.java b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "index 07481ed13b..89418ced65 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "@@ -114,3 +114,3 @@ public abstract class ClassUtils {",
                "-\t\tSet<Class<?>> primitiveTypes = new HashSet<Class<?>>(32);",
                "+\t\tSet<Class<?>> primitiveTypes = new HashSet<Class<?>>(64);",
                " \t\tprimitiveTypes.addAll(primitiveWrapperTypeMap.values());",
                "@@ -127,5 +127,6 @@ public abstract class ClassUtils {",
                " \t\tregisterCommonClasses(Number.class, Number[].class, String.class, String[].class,",
                "-\t\t\t\tObject.class, Object[].class, Class.class, Class[].class);",
                "+\t\t\t\tClass.class, Class[].class, Object.class, Object[].class);",
                " \t\tregisterCommonClasses(Throwable.class, Exception.class, RuntimeException.class,",
                " \t\t\t\tError.class, StackTraceElement.class, StackTraceElement[].class);",
                "+\t\tregisterCommonClasses(Enum.class, Iterable.class, Cloneable.class, Comparable.class);",
                " \t}"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "spring-core/src/main/java/org/springframework/util/ClassUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c60cefa3311bbb087591f16ebec822f6ba5018c5",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522102974,
            "hunks": 12,
            "message": "SimpleEvaluationContext.Builder withRootObject/withTypedRootObject Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "index fa379a47d5..265588a61a 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "@@ -25,2 +25,3 @@ import java.util.Map;",
                " import org.springframework.core.convert.ConversionService;",
                "+import org.springframework.core.convert.TypeDescriptor;",
                " import org.springframework.expression.BeanResolver;",
                "@@ -28,2 +29,3 @@ import org.springframework.expression.ConstructorResolver;",
                " import org.springframework.expression.EvaluationContext;",
                "+import org.springframework.expression.Expression;",
                " import org.springframework.expression.MethodResolver;",
                "@@ -92,2 +94,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "+\tprivate final TypedValue rootObject;",
                "+",
                " \tprivate final List<PropertyAccessor> propertyAccessors;",
                "@@ -106,3 +110,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tprivate SimpleEvaluationContext(List<PropertyAccessor> accessors, List<MethodResolver> resolvers,",
                "-\t\t\t@Nullable TypeConverter converter) {",
                "+\t\t\t@Nullable TypeConverter converter, @Nullable TypedValue rootObject) {",
                "@@ -111,2 +115,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\tthis.typeConverter = (converter != null ? converter : new StandardTypeConverter());",
                "+\t\tthis.rootObject = (rootObject != null ? rootObject : TypedValue.NULL);",
                " \t}",
                "@@ -115,7 +120,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * {@code SimpleEvaluationContext} cannot be configured with a root object.",
                "-\t * It is meant for repeated use with",
                "-\t * {@link org.springframework.expression.Expression Expression} method",
                "-\t * variants that accept both an {@code EvaluationContext} and a root object.",
                "-\t * @return Always returns {@link TypedValue#NULL}.",
                "+\t * Return the specified root object, if any.",
                " \t */",
                "@@ -123,3 +124,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tpublic TypedValue getRootObject() {",
                "-\t\treturn TypedValue.NULL;",
                "+\t\treturn this.rootObject;",
                " \t}",
                "@@ -264,2 +265,5 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "+\t\t@Nullable",
                "+\t\tprivate TypedValue rootObject;",
                "+",
                " \t\tpublic Builder(PropertyAccessor... accessors) {",
                "@@ -299,2 +303,14 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "+",
                "+\t\t/**",
                "+\t\t * Register a custom {@link ConversionService}.",
                "+\t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "+\t\t * {@link org.springframework.core.convert.support.DefaultConversionService} is used.",
                "+\t\t * @see #withTypeConverter",
                "+\t\t * @see StandardTypeConverter#StandardTypeConverter(ConversionService)",
                "+\t\t */",
                "+\t\tpublic Builder withConversionService(ConversionService conversionService) {",
                "+\t\t\tthis.typeConverter = new StandardTypeConverter(conversionService);",
                "+\t\t\treturn this;",
                "+\t\t}",
                " \t\t/**",
                "@@ -312,10 +328,20 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\t/**",
                "-\t\t * Register a custom {@link ConversionService}.",
                "-\t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "-\t\t * {@link org.springframework.core.convert.support.DefaultConversionService} is used.",
                "-\t\t * @see #withTypeConverter",
                "-\t\t * @see StandardTypeConverter#StandardTypeConverter(ConversionService)",
                "+\t\t * Specify a default root object to resolve against.",
                "+\t\t * <p>Default is none, expecting an object argument at evaluation time.",
                "+\t\t * @see Expression#getValue(EvaluationContext)",
                "+\t\t * @see Expression#getValue(EvaluationContext, Object)",
                " \t\t */",
                "-\t\tpublic Builder withConversionService(ConversionService conversionService) {",
                "-\t\t\tthis.typeConverter = new StandardTypeConverter(conversionService);",
                "+\t\tpublic Builder withRootObject(Object rootObject) {",
                "+\t\t\tthis.rootObject = new TypedValue(rootObject);",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Specify a typed root object to resolve against.",
                "+\t\t * <p>Default is none, expecting an object argument at evaluation time.",
                "+\t\t * @see Expression#getValue(EvaluationContext)",
                "+\t\t * @see Expression#getValue(EvaluationContext, Object)",
                "+\t\t */",
                "+\t\tpublic Builder withTypedRootObject(Object rootObject, TypeDescriptor typeDescriptor) {",
                "+\t\t\tthis.rootObject = new TypedValue(rootObject, typeDescriptor);",
                " \t\t\treturn this;",
                "@@ -324,3 +350,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\tpublic SimpleEvaluationContext build() {",
                "-\t\t\treturn new SimpleEvaluationContext(this.accessors, this.resolvers, this.typeConverter);",
                "+\t\t\treturn new SimpleEvaluationContext(this.accessors, this.resolvers, this.typeConverter, this.rootObject);",
                " \t\t}"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "65a8aa1c092b9259414de47ce3780fcbb4513211",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522192979,
            "hunks": 79,
            "message": "Backported DataBindingPropertyAccessor and DataBindingMethodResolver Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "index 9d509c6121..417f12586c 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2013 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -24,5 +24,5 @@ import java.util.List;",
                "  *",
                "- * <p>There is a default implementation of the EvaluationContext,",
                "- * {@link org.springframework.expression.spel.support.StandardEvaluationContext} that can",
                "- * be extended, rather than having to implement everything.",
                "+ * <p>There is a default implementation of this EvaluationContext interface:",
                "+ * {@link org.springframework.expression.spel.support.StandardEvaluationContext}",
                "+ * which can be extended, rather than having to implement everything manually.",
                "  *",
                "@@ -41,2 +41,7 @@ public interface EvaluationContext {",
                "+\t/**",
                "+\t * Return a list of accessors that will be asked in turn to read/write a property.",
                "+\t */",
                "+\tList<PropertyAccessor> getPropertyAccessors();",
                "+",
                " \t/**",
                "@@ -52,5 +57,5 @@ public interface EvaluationContext {",
                " \t/**",
                "-\t * Return a list of accessors that will be asked in turn to read/write a property.",
                "+\t * Return a bean resolver that can look up beans by name.",
                " \t */",
                "-\tList<PropertyAccessor> getPropertyAccessors();",
                "+\tBeanResolver getBeanResolver();",
                "@@ -78,7 +83,2 @@ public interface EvaluationContext {",
                "-\t/**",
                "-\t * Return a bean resolver that can look up beans by name.",
                "-\t */",
                "-\tBeanResolver getBeanResolver();",
                "-",
                " \t/**",
                "@@ -93,3 +93,3 @@ public interface EvaluationContext {",
                " \t * @param name variable to lookup",
                "-\t * @return the value of the variable",
                "+\t * @return the value of the variable, or {@code null} if not found",
                " \t */",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java",
                "new file mode 100644",
                "index 0000000000..d63e646839",
                "--- /dev/null",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java",
                "@@ -0,0 +1,74 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.expression.spel.support;",
                "+",
                "+import java.lang.reflect.Method;",
                "+import java.lang.reflect.Modifier;",
                "+import java.util.List;",
                "+",
                "+import org.springframework.core.convert.TypeDescriptor;",
                "+import org.springframework.expression.AccessException;",
                "+import org.springframework.expression.EvaluationContext;",
                "+import org.springframework.expression.MethodExecutor;",
                "+",
                "+/**",
                "+ * A {@link org.springframework.expression.MethodResolver} variant for data binding",
                "+ * purposes, using reflection to access instance methods on a given target object.",
                "+ *",
                "+ * <p>This accessor does not resolve static methods and also no technical methods",
                "+ * on {@code java.lang.Object} or {@code java.lang.Class}.",
                "+ * For unrestricted resolution, choose {@link ReflectiveMethodResolver} instead.",
                "+ *",
                "+ * @author Juergen Hoeller",
                "+ * @since 4.3.15",
                "+ * @see #forInstanceMethodInvocation()",
                "+ * @see DataBindingPropertyAccessor",
                "+ */",
                "+public class DataBindingMethodResolver extends ReflectiveMethodResolver {",
                "+",
                "+\tprivate DataBindingMethodResolver() {",
                "+\t\tsuper();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic MethodExecutor resolve(EvaluationContext context, Object targetObject, String name,",
                "+\t\t\tList<TypeDescriptor> argumentTypes) throws AccessException {",
                "+",
                "+\t\tif (targetObject instanceof Class) {",
                "+\t\t\tthrow new IllegalArgumentException(\"DataBindingMethodResolver does not support Class targets\");",
                "+\t\t}",
                "+\t\treturn super.resolve(context, targetObject, name, argumentTypes);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected boolean isCandidateForInvocation(Method method, Class<?> targetClass) {",
                "+\t\tif (Modifier.isStatic(method.getModifiers())) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                "+\t\tClass<?> clazz = method.getDeclaringClass();",
                "+\t\treturn (clazz != Object.class && clazz != Class.class && !ClassLoader.class.isAssignableFrom(targetClass));",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Create a new data-binding method resolver for instance method resolution.",
                "+\t */",
                "+\tpublic static DataBindingMethodResolver forInstanceMethodInvocation() {",
                "+\t\treturn new DataBindingMethodResolver();",
                "+\t}",
                "+",
                "+}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "new file mode 100644",
                "index 0000000000..8ee7ec946d",
                "--- /dev/null",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "@@ -0,0 +1,72 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.expression.spel.support;",
                "+",
                "+import java.lang.reflect.Method;",
                "+",
                "+/**",
                "+ * A {@link org.springframework.expression.PropertyAccessor} variant for data binding",
                "+ * purposes, using reflection to access properties for reading and possibly writing.",
                "+ *",
                "+ * <p>A property can be referenced through a public getter method (when being read)",
                "+ * or a public setter method (when being written), and also as a public field.",
                "+ *",
                "+ * <p>This accessor is explicitly designed for user-declared properties and does not",
                "+ * resolve technical properties on {@code java.lang.Object} or {@code java.lang.Class}.",
                "+ * For unrestricted resolution, choose {@link ReflectivePropertyAccessor} instead.",
                "+ *",
                "+ * @author Juergen Hoeller",
                "+ * @since 4.3.15",
                "+ * @see #forReadOnlyAccess()",
                "+ * @see #forReadWriteAccess()",
                "+ * @see SimpleEvaluationContext",
                "+ * @see StandardEvaluationContext",
                "+ * @see ReflectivePropertyAccessor",
                "+ */",
                "+public class DataBindingPropertyAccessor extends ReflectivePropertyAccessor {",
                "+",
                "+\t/**",
                "+\t * Create a new property accessor for reading and possibly also writing.",
                "+\t * @param allowWrite whether to also allow for write operations",
                "+\t * @see #canWrite",
                "+\t */",
                "+\tprivate DataBindingPropertyAccessor(boolean allowWrite) {",
                "+\t\tsuper(allowWrite);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected boolean isCandidateForProperty(Method method, Class<?> targetClass) {",
                "+\t\tClass<?> clazz = method.getDeclaringClass();",
                "+\t\treturn (clazz != Object.class && clazz != Class.class && !ClassLoader.class.isAssignableFrom(targetClass));",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Create a new data-binding property accessor for read-only operations.",
                "+\t */",
                "+\tpublic static DataBindingPropertyAccessor forReadOnlyAccess() {",
                "+\t\treturn new DataBindingPropertyAccessor(false);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a new data-binding property accessor for read-write operations.",
                "+\t */",
                "+\tpublic static DataBindingPropertyAccessor forReadWriteAccess() {",
                "+\t\treturn new DataBindingPropertyAccessor(true);",
                "+\t}",
                "+",
                "+}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "index fb512d86a0..b1cffa5d43 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -23,3 +23,2 @@ import java.util.ArrayList;",
                " import java.util.Arrays;",
                "-import java.util.Collection;",
                " import java.util.Collections;",
                "@@ -83,2 +82,8 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "+\t/**",
                "+\t * Register a filter for methods on the given type.",
                "+\t * @param type the type to filter on",
                "+\t * @param filter the corresponding method filter,",
                "+\t * or {@code null} to clear any filter for the given type",
                "+\t */",
                " \tpublic void registerMethodFilter(Class<?> type, MethodFilter filter) {",
                "@@ -95,3 +100,2 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "-",
                " \t/**",
                "@@ -221,3 +225,3 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "-\tprivate Collection<Method> getMethods(Class<?> type, Object targetObject) {",
                "+\tprivate Set<Method> getMethods(Class<?> type, Object targetObject) {",
                " \t\tif (targetObject instanceof Class) {",
                "@@ -239,3 +243,8 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                " \t\t\tfor (Class<?> ifc : type.getInterfaces()) {",
                "-\t\t\t\tresult.addAll(Arrays.asList(getMethods(ifc)));",
                "+\t\t\t\tMethod[] methods = getMethods(ifc);",
                "+\t\t\t\tfor (Method method : methods) {",
                "+\t\t\t\t\tif (isCandidateForInvocation(method, type)) {",
                "+\t\t\t\t\t\tresult.add(method);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                " \t\t\t}",
                "@@ -244,3 +253,10 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                " \t\telse {",
                "-\t\t\treturn Arrays.asList(getMethods(type));",
                "+\t\t\tSet<Method> result = new LinkedHashSet<Method>();",
                "+\t\t\tMethod[] methods = getMethods(type);",
                "+\t\t\tfor (Method method : methods) {",
                "+\t\t\t\tif (isCandidateForInvocation(method, type)) {",
                "+\t\t\t\t\tresult.add(method);",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\treturn result;",
                " \t\t}",
                "@@ -260,2 +276,15 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "+\t/**",
                "+\t * Determine whether the given {@code Method} is a candidate for method resolution",
                "+\t * on an instance of the given target class.",
                "+\t * <p>The default implementation considers any method as a candidate, even for",
                "+\t * static methods sand non-user-declared methods on the {@link Object} base class.",
                "+\t * @param method the Method to evaluate",
                "+\t * @param targetClass the concrete target class that is being introspected",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tprotected boolean isCandidateForInvocation(Method method, Class<?> targetClass) {",
                "+\t\treturn true;",
                "+\t}",
                "+",
                " }",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "index 8cb54e8f0a..0766dbbe47 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -46,6 +46,6 @@ import org.springframework.util.StringUtils;",
                " /**",
                "- * Simple {@link PropertyAccessor} that uses reflection to access properties",
                "- * for reading and writing.",
                "+ * A powerful {@link PropertyAccessor} that uses reflection to access properties",
                "+ * for reading and possibly also for writing.",
                "  *",
                "- * <p>A property can be accessed through a public getter method (when being read)",
                "+ * <p>A property can be referenced through a public getter method (when being read)",
                "  * or a public setter method (when being written), and also as a public field.",
                "@@ -56,2 +56,5 @@ import org.springframework.util.StringUtils;",
                "  * @since 3.0",
                "+ * @see StandardEvaluationContext",
                "+ * @see SimpleEvaluationContext",
                "+ * @see DataBindingPropertyAccessor",
                "  */",
                "@@ -64,3 +67,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \tstatic {",
                "-\t\tSet<Class<?>> booleanTypes = new HashSet<Class<?>>();",
                "+\t\tSet<Class<?>> booleanTypes = new HashSet<Class<?>>(4);",
                " \t\tbooleanTypes.add(Boolean.class);",
                "@@ -71,2 +74,4 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\tprivate final boolean allowWrite;",
                "+",
                " \tprivate final Map<PropertyCacheKey, InvokerPair> readerCache =",
                "@@ -83,2 +88,21 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\t/**",
                "+\t * Create a new property accessor for reading as well writing.",
                "+\t * @see #ReflectivePropertyAccessor(boolean)",
                "+\t */",
                "+\tpublic ReflectivePropertyAccessor() {",
                "+\t\tthis.allowWrite = true;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a new property accessor for reading and possibly writing.",
                "+\t * @param allowWrite whether to also allow for write operations",
                "+\t * @since 4.3.15",
                "+\t * @see #canWrite",
                "+\t */",
                "+\tpublic ReflectivePropertyAccessor(boolean allowWrite) {",
                "+\t\tthis.allowWrite = allowWrite;",
                "+\t}",
                "+",
                "+",
                " \t/**",
                "@@ -96,2 +120,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tClass<?> type = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "@@ -100,2 +125,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tPropertyCacheKey cacheKey = new PropertyCacheKey(type, name, target instanceof Class);",
                "@@ -104,2 +130,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tMethod method = findGetterForProperty(name, type, target);",
                "@@ -123,7 +150,4 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "-\t\treturn false;",
                "-\t}",
                "-\tpublic Member getLastReadInvokerPair() {",
                "-\t\treturn this.lastReadInvokerPair.member;",
                "+\t\treturn false;",
                " \t}",
                "@@ -146,3 +170,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\tInvokerPair invoker = this.readerCache.get(cacheKey);",
                "-\t\tlastReadInvokerPair = invoker;",
                "+\t\tthis.lastReadInvokerPair = invoker;",
                "@@ -153,3 +177,2 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t\tif (method != null) {",
                "-\t\t\t\t\t// TODO remove the duplication here between canRead and read",
                " \t\t\t\t\t// Treat it like a property...",
                "@@ -159,3 +182,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t\t\tinvoker = new InvokerPair(method, typeDescriptor);",
                "-\t\t\t\t\tlastReadInvokerPair = invoker;",
                "+\t\t\t\t\tthis.lastReadInvokerPair = invoker;",
                " \t\t\t\t\tthis.readerCache.put(cacheKey, invoker);",
                "@@ -181,3 +204,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t\t\tinvoker = new InvokerPair(field, new TypeDescriptor(field));",
                "-\t\t\t\t\tlastReadInvokerPair = invoker;",
                "+\t\t\t\t\tthis.lastReadInvokerPair = invoker;",
                " \t\t\t\t\tthis.readerCache.put(cacheKey, invoker);",
                "@@ -202,5 +225,6 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \tpublic boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException {",
                "-\t\tif (target == null) {",
                "+\t\tif (!this.allowWrite || target == null) {",
                " \t\t\treturn false;",
                " \t\t}",
                "+",
                " \t\tClass<?> type = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "@@ -210,2 +234,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tMethod method = findSetterForProperty(name, type, target);",
                "@@ -227,2 +252,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\treturn false;",
                "@@ -232,2 +258,7 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \tpublic void write(EvaluationContext context, Object target, String name, Object newValue) throws AccessException {",
                "+\t\tif (!this.allowWrite) {",
                "+\t\t\tthrow new AccessException(\"PropertyAccessor for property '\" + name +",
                "+\t\t\t\t\t\"' on target [\" + target + \"] does not allow write operations\");",
                "+\t\t}",
                "+",
                " \t\tif (target == null) {",
                "@@ -296,2 +327,12 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\t/**",
                "+\t * @deprecated as of 4.3.15 since it is not used within the framework anymore",
                "+\t */",
                "+\t@Deprecated",
                "+\tpublic Member getLastReadInvokerPair() {",
                "+\t\tInvokerPair lastReadInvoker = this.lastReadInvokerPair;",
                "+\t\treturn (lastReadInvoker != null ? lastReadInvoker.member : null);",
                "+\t}",
                "+",
                "+",
                " \tprivate TypeDescriptor getTypeDescriptor(EvaluationContext context, Object target, String name) {",
                "@@ -308,3 +349,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\tif (typeDescriptor == null) {",
                "-\t\t\t// attempt to populate the cache entry",
                "+\t\t\t// Attempt to populate the cache entry",
                " \t\t\ttry {",
                "@@ -318,3 +359,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tcatch (AccessException ex) {",
                "-\t\t\t\t// continue with null type descriptor",
                "+\t\t\t\t// Continue with null type descriptor",
                " \t\t\t}",
                "@@ -340,10 +381,2 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "-\tprivate Field findField(String name, Class<?> clazz, Object target) {",
                "-\t\tField field = findField(name, clazz, target instanceof Class);",
                "-\t\tif (field == null && target instanceof Class) {",
                "-\t\t\tfield = findField(name, target.getClass(), false);",
                "-\t\t}",
                "-\t\treturn field;",
                "-\t}",
                "-",
                " \t/**",
                "@@ -375,3 +408,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tfor (Method method : methods) {",
                "-\t\t\t\tif (method.getName().equals(prefix + methodSuffix) &&",
                "+\t\t\t\tif (isCandidateForProperty(method, clazz) && method.getName().equals(prefix + methodSuffix) &&",
                " \t\t\t\t\t\tmethod.getParameterTypes().length == numberOfParams &&",
                "@@ -384,3 +417,15 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\treturn null;",
                "+\t}",
                "+\t/**",
                "+\t * Determine whether the given {@code Method} is a candidate for property access",
                "+\t * on an instance of the given target class.",
                "+\t * <p>The default implementation considers any method as a candidate, even for",
                "+\t * non-user-declared properties on the {@link Object} base class.",
                "+\t * @param method the Method to evaluate",
                "+\t * @param targetClass the concrete target class that is being introspected",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tprotected boolean isCandidateForProperty(Method method, Class<?> targetClass) {",
                "+\t\treturn true;",
                " \t}",
                "@@ -388,3 +433,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t/**",
                "-\t * Returns class methods ordered with non bridge methods appearing higher.",
                "+\t * Return class methods ordered with non bridge methods appearing higher.",
                " \t */",
                "@@ -410,5 +455,5 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\tif (suffix.length() > 0 && Character.isUpperCase(suffix.charAt(0))) {",
                "-\t\t\treturn new String[] { suffix };",
                "+\t\t\treturn new String[] {suffix};",
                " \t\t}",
                "-\t\treturn new String[] { suffix, StringUtils.capitalize(suffix) };",
                "+\t\treturn new String[] {suffix, StringUtils.capitalize(suffix)};",
                " \t}",
                "@@ -426,2 +471,10 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\tprivate Field findField(String name, Class<?> clazz, Object target) {",
                "+\t\tField field = findField(name, clazz, target instanceof Class);",
                "+\t\tif (field == null && target instanceof Class) {",
                "+\t\t\tfield = findField(name, target.getClass(), false);",
                "+\t\t}",
                "+\t\treturn field;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -454,10 +507,14 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t/**",
                "-\t * Attempt to create an optimized property accessor tailored for a property of a particular name on",
                "-\t * a particular class. The general ReflectivePropertyAccessor will always work but is not optimal",
                "-\t * due to the need to lookup which reflective member (method/field) to use each time read() is called.",
                "-\t * This method will just return the ReflectivePropertyAccessor instance if it is unable to build",
                "-\t * something more optimal.",
                "+\t * Attempt to create an optimized property accessor tailored for a property of a",
                "+\t * particular name on a particular class. The general ReflectivePropertyAccessor",
                "+\t * will always work but is not optimal due to the need to lookup which reflective",
                "+\t * member (method/field) to use each time read() is called. This method will just",
                "+\t * return the ReflectivePropertyAccessor instance if it is unable to build a more",
                "+\t * optimal accessor.",
                "+\t * <p>Note: An optimal accessor is currently only usable for read attempts.",
                "+\t * Do not call this method if you need a read-write accessor.",
                "+\t * @see OptimalPropertyAccessor",
                " \t */",
                "-\tpublic PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, Object target, String name) {",
                "-\t\t// Don't be clever for arrays or null target",
                "+\tpublic PropertyAccessor createOptimalAccessor(EvaluationContext context, Object target, String name) {",
                "+\t\t// Don't be clever for arrays or a null target...",
                " \t\tif (target == null) {",
                "@@ -465,4 +522,4 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "-\t\tClass<?> type = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "-\t\tif (type.isArray()) {",
                "+\t\tClass<?> clazz = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "+\t\tif (clazz.isArray()) {",
                " \t\t\treturn this;",
                "@@ -470,3 +527,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "-\t\tPropertyCacheKey cacheKey = new PropertyCacheKey(type, name, target instanceof Class);",
                "+\t\tPropertyCacheKey cacheKey = new PropertyCacheKey(clazz, name, target instanceof Class);",
                " \t\tInvokerPair invocationTarget = this.readerCache.get(cacheKey);",
                "@@ -476,3 +533,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tif (method == null) {",
                "-\t\t\t\tmethod = findGetterForProperty(name, type, target);",
                "+\t\t\t\tmethod = findGetterForProperty(name, clazz, target);",
                " \t\t\t\tif (method != null) {",
                "@@ -491,3 +548,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tif (field == null) {",
                "-\t\t\t\tfield = findField(name, type, target instanceof Class);",
                "+\t\t\t\tfield = findField(name, clazz, target instanceof Class);",
                " \t\t\t\tif (field != null) {",
                "@@ -606,3 +663,2 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t}",
                "-",
                " \t\t\tClass<?> type = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "index 06f14cc8f0..f298b081b9 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "@@ -18,3 +18,3 @@ package org.springframework.expression.spel.support;",
                "-import java.util.ArrayList;",
                "+import java.util.Arrays;",
                " import java.util.Collections;",
                "@@ -24,2 +24,4 @@ import java.util.Map;",
                "+import org.springframework.core.convert.ConversionService;",
                "+import org.springframework.core.convert.TypeDescriptor;",
                " import org.springframework.expression.BeanResolver;",
                "@@ -40,20 +42,47 @@ import org.springframework.expression.spel.SpelMessage;",
                "  * A basic implementation of {@link EvaluationContext} that focuses on a subset",
                "- * of essential SpEL features and configuration options, and relies on default",
                "- * strategies otherwise.",
                "+ * of essential SpEL features and customization options, targeting simple",
                "+ * condition evaluation and in particular data binding scenarios.",
                "  *",
                "- * <p>In many cases, the full extent of the SpEL is not",
                "- * required and should be meaningfully restricted. Examples include but are not",
                "- * limited to data binding expressions, property-based filters, and others. To",
                "- * that effect, {@code SimpleEvaluationContext} supports only a subset of the",
                "- * SpEL language syntax that excludes references to Java types, constructors,",
                "+ * <p>In many cases, the full extent of the SpEL language is not required and",
                "+ * should be meaningfully restricted. Examples include but are not limited to",
                "+ * data binding expressions, property-based filters, and others. To that effect,",
                "+ * {@code SimpleEvaluationContext} is tailored to support only a subset of the",
                "+ * SpEL language syntax, e.g. excluding references to Java types, constructors,",
                "  * and bean references.",
                "  *",
                "- * <p>Note that {@code SimpleEvaluationContext} cannot be configured with a",
                "- * default root object. Instead it is meant to be created once and used",
                "- * repeatedly through method variants on",
                "- * {@link org.springframework.expression.Expression Expression} that accept",
                "- * both an {@code EvaluationContext} and a root object.",
                "+ * <p>When creating a {@code SimpleEvaluationContext} you need to choose the",
                "+ * level of support that you need for property access in SpEL expressions:",
                "+ * <ul>",
                "+ * <li>A custom {@code PropertyAccessor} (typically not reflection-based),",
                "+ * potentially combined with a {@link DataBindingPropertyAccessor}</li>",
                "+ * <li>Data binding properties for read-only access</li>",
                "+ * <li>Data binding properties for read and write</li>",
                "+ * </ul>",
                "+ *",
                "+ * <p>Conveniently, {@link SimpleEvaluationContext#forReadOnlyDataBinding()}",
                "+ * enables read access to properties via {@link DataBindingPropertyAccessor};",
                "+ * same for {@link SimpleEvaluationContext#forReadWriteDataBinding()} when",
                "+ * write access is needed as well. Alternatively, configure custom accessors",
                "+ * via {@link SimpleEvaluationContext#forPropertyAccessors}, and potentially",
                "+ * activate method resolution and/or a type converter through the builder.",
                "+ *",
                "+ * <p>Note that {@code SimpleEvaluationContext} is typically not configured",
                "+ * with a default root object. Instead it is meant to be created once and",
                "+ * used repeatedly through {@code getValue} calls on a pre-compiled",
                "+ * {@link org.springframework.expression.Expression} with both an",
                "+ * {@code EvaluationContext} and a root object as arguments:",
                "+ * {@link org.springframework.expression.Expression#getValue(EvaluationContext, Object)}.",
                "+ *",
                "+ * <p>For more power and flexibility, in particular for internal configuration",
                "+ * scenarios, consider using {@link StandardEvaluationContext} instead.",
                "  *",
                "  * @author Rossen Stoyanchev",
                "+ * @author Juergen Hoeller",
                "  * @since 4.3.15",
                "+ * @see #forPropertyAccessors",
                "+ * @see #forReadOnlyDataBinding()",
                "+ * @see #forReadWriteDataBinding()",
                "+ * @see StandardEvaluationContext",
                "+ * @see StandardTypeConverter",
                "+ * @see DataBindingPropertyAccessor",
                "  */",
                "@@ -62,3 +91,2 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tprivate static final TypeLocator typeNotFoundTypeLocator = new TypeLocator() {",
                "-",
                " \t\t@Override",
                "@@ -70,9 +98,7 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\tprivate final List<PropertyAccessor> propertyAccessors;",
                "+\tprivate final TypedValue rootObject;",
                "-\tprivate final List<ConstructorResolver> constructorResolvers =",
                "-\t\t\tCollections.<ConstructorResolver>singletonList(new ReflectiveConstructorResolver());",
                "+\tprivate final List<PropertyAccessor> propertyAccessors;",
                "-\tprivate final List<MethodResolver> methodResolvers =",
                "-\t\t\tCollections.<MethodResolver>singletonList(new ReflectiveMethodResolver());",
                "+\tprivate final List<MethodResolver> methodResolvers;",
                "@@ -87,18 +113,9 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\tpublic SimpleEvaluationContext() {",
                "-\t\tthis(null, null);",
                "-\t}",
                "-",
                "-\tpublic SimpleEvaluationContext(List<PropertyAccessor> accessors, TypeConverter converter) {",
                "-\t\tthis.propertyAccessors = initPropertyAccessors(accessors);",
                "-\t\tthis.typeConverter = converter != null ? converter : new StandardTypeConverter();",
                "-\t}",
                "-",
                "+\tprivate SimpleEvaluationContext(List<PropertyAccessor> accessors, List<MethodResolver> resolvers,",
                "+\t\t\tTypeConverter converter, TypedValue rootObject) {",
                "-\tprivate static List<PropertyAccessor> initPropertyAccessors(List<PropertyAccessor> accessors) {",
                "-\t\tif (accessors == null) {",
                "-\t\t\taccessors = new ArrayList<PropertyAccessor>(5);",
                "-\t\t\taccessors.add(new ReflectivePropertyAccessor());",
                "-\t\t}",
                "-\t\treturn accessors;",
                "+\t\tthis.propertyAccessors = accessors;",
                "+\t\tthis.methodResolvers = resolvers;",
                "+\t\tthis.typeConverter = (converter != null ? converter : new StandardTypeConverter());",
                "+\t\tthis.rootObject = (rootObject != null ? rootObject : TypedValue.NULL);",
                " \t}",
                "@@ -107,7 +124,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * {@code SimpleEvaluationContext} cannot be configured with a root object.",
                "-\t * It is meant for repeated use with",
                "-\t * {@link org.springframework.expression.Expression Expression} method",
                "-\t * variants that accept both an {@code EvaluationContext} and a root object.",
                "-\t * @return Always returns {@link TypedValue#NULL}.",
                "+\t * Return the specified root object, if any.",
                " \t */",
                "@@ -115,5 +128,9 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tpublic TypedValue getRootObject() {",
                "-\t\treturn TypedValue.NULL;",
                "+\t\treturn this.rootObject;",
                " \t}",
                "+\t/**",
                "+\t * Return the specified {@link PropertyAccessor} delegates, if any.",
                "+\t * @see #forPropertyAccessors",
                "+\t */",
                " \t@Override",
                "@@ -124,3 +141,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * Return a single {@link ReflectiveConstructorResolver}.",
                "+\t * Return an empty list, always, since this context does not support the",
                "+\t * use of type references.",
                " \t */",
                "@@ -128,3 +146,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tpublic List<ConstructorResolver> getConstructorResolvers() {",
                "-\t\treturn this.constructorResolvers;",
                "+\t\treturn Collections.emptyList();",
                " \t}",
                "@@ -132,3 +150,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * Return a single {@link ReflectiveMethodResolver}.",
                "+\t * Return the specified {@link MethodResolver} delegates, if any.",
                "+\t * @see Builder#withMethodResolvers",
                " \t */",
                "@@ -140,4 +159,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * {@code SimpleEvaluationContext} does not support use of bean references.",
                "-\t * @return Always returns {@code null}",
                "+\t * {@code SimpleEvaluationContext} does not support the use of bean references.",
                "+\t * @return always {@code null}",
                " \t */",
                "@@ -161,2 +180,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t * <p>By default this is {@link StandardTypeConverter}.",
                "+\t * @see Builder#withTypeConverter",
                "+\t * @see Builder#withConversionService",
                " \t */",
                "@@ -175,3 +196,2 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-",
                " \t/**",
                "@@ -194,2 +214,143 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "+",
                "+\t/**",
                "+\t * Create a {@code SimpleEvaluationContext} for the specified {@link PropertyAccessor}",
                "+\t * delegates: typically a custom {@code PropertyAccessor} specific to a use case",
                "+\t * (e.g. attribute resolution in a custom data structure), potentially combined with",
                "+\t * a {@link DataBindingPropertyAccessor} if property dereferences are needed as well.",
                "+\t * @param accessors the accessor delegates to use",
                "+\t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                "+\t * @see DataBindingPropertyAccessor#forReadWriteAccess()",
                "+\t */",
                "+\tpublic static Builder forPropertyAccessors(PropertyAccessor... accessors) {",
                "+\t\tfor (PropertyAccessor accessor : accessors) {",
                "+\t\t\tif (accessor.getClass() == ReflectivePropertyAccessor.class) {",
                "+\t\t\t\tthrow new IllegalArgumentException(\"SimpleEvaluationContext is not designed for use with a plain \" +",
                "+\t\t\t\t\t\t\"ReflectivePropertyAccessor. Consider using DataBindingPropertyAccessor or a custom subclass.\");",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn new Builder(accessors);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a {@code SimpleEvaluationContext} for read-only access to",
                "+\t * public properties via {@link DataBindingPropertyAccessor}.",
                "+\t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                "+\t * @see #forPropertyAccessors",
                "+\t */",
                "+\tpublic static Builder forReadOnlyDataBinding() {",
                "+\t\treturn new Builder(DataBindingPropertyAccessor.forReadOnlyAccess());",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a {@code SimpleEvaluationContext} for read-write access to",
                "+\t * public properties via {@link DataBindingPropertyAccessor}.",
                "+\t * @see DataBindingPropertyAccessor#forReadWriteAccess()",
                "+\t * @see #forPropertyAccessors",
                "+\t */",
                "+\tpublic static Builder forReadWriteDataBinding() {",
                "+\t\treturn new Builder(DataBindingPropertyAccessor.forReadWriteAccess());",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Builder for {@code SimpleEvaluationContext}.",
                "+\t */",
                "+\tpublic static class Builder {",
                "+",
                "+\t\tprivate final List<PropertyAccessor> accessors;",
                "+",
                "+\t\tprivate List<MethodResolver> resolvers = Collections.emptyList();",
                "+",
                "+\t\tprivate TypeConverter typeConverter;",
                "+",
                "+\t\tprivate TypedValue rootObject;",
                "+",
                "+\t\tpublic Builder(PropertyAccessor... accessors) {",
                "+\t\t\tthis.accessors = Arrays.asList(accessors);",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Register the specified {@link MethodResolver} delegates for",
                "+\t\t * a combination of property access and method resolution.",
                "+\t\t * @param resolvers the resolver delegates to use",
                "+\t\t * @see #withInstanceMethods()",
                "+\t\t * @see SimpleEvaluationContext#forPropertyAccessors",
                "+\t\t */",
                "+\t\tpublic Builder withMethodResolvers(MethodResolver... resolvers) {",
                "+\t\t\tfor (MethodResolver resolver : resolvers) {",
                "+\t\t\t\tif (resolver.getClass() == ReflectiveMethodResolver.class) {",
                "+\t\t\t\t\tthrow new IllegalArgumentException(\"SimpleEvaluationContext is not designed for use with a plain \" +",
                "+\t\t\t\t\t\t\t\"ReflectiveMethodResolver. Consider using DataBindingMethodResolver or a custom subclass.\");",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tthis.resolvers = Arrays.asList(resolvers);",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Register a {@link DataBindingMethodResolver} for instance method invocation purposes",
                "+\t\t * (i.e. not supporting static methods) in addition to the specified property accessors,",
                "+\t\t * typically in combination with a {@link DataBindingPropertyAccessor}.",
                "+\t\t * @see #withMethodResolvers",
                "+\t\t * @see SimpleEvaluationContext#forReadOnlyDataBinding()",
                "+\t\t * @see SimpleEvaluationContext#forReadWriteDataBinding()",
                "+\t\t */",
                "+\t\tpublic Builder withInstanceMethods() {",
                "+\t\t\tthis.resolvers = Collections.singletonList(",
                "+\t\t\t\t\t(MethodResolver) DataBindingMethodResolver.forInstanceMethodInvocation());",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+",
                "+\t\t/**",
                "+\t\t * Register a custom {@link ConversionService}.",
                "+\t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "+\t\t * {@link org.springframework.core.convert.support.DefaultConversionService} is used.",
                "+\t\t * @see #withTypeConverter",
                "+\t\t * @see StandardTypeConverter#StandardTypeConverter(ConversionService)",
                "+\t\t */",
                "+\t\tpublic Builder withConversionService(ConversionService conversionService) {",
                "+\t\t\tthis.typeConverter = new StandardTypeConverter(conversionService);",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+\t\t/**",
                "+\t\t * Register a custom {@link TypeConverter}.",
                "+\t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "+\t\t * {@link org.springframework.core.convert.support.DefaultConversionService} is used.",
                "+\t\t * @see #withConversionService",
                "+\t\t * @see StandardTypeConverter#StandardTypeConverter()",
                "+\t\t */",
                "+\t\tpublic Builder withTypeConverter(TypeConverter converter) {",
                "+\t\t\tthis.typeConverter = converter;",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Specify a default root object to resolve against.",
                "+\t\t * <p>Default is none, expecting an object argument at evaluation time.",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext)",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext, Object)",
                "+\t\t */",
                "+\t\tpublic Builder withRootObject(Object rootObject) {",
                "+\t\t\tthis.rootObject = new TypedValue(rootObject);",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Specify a typed root object to resolve against.",
                "+\t\t * <p>Default is none, expecting an object argument at evaluation time.",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext)",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext, Object)",
                "+\t\t */",
                "+\t\tpublic Builder withTypedRootObject(Object rootObject, TypeDescriptor typeDescriptor) {",
                "+\t\t\tthis.rootObject = new TypedValue(rootObject, typeDescriptor);",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\tpublic SimpleEvaluationContext build() {",
                "+\t\t\treturn new SimpleEvaluationContext(this.accessors, this.resolvers, this.typeConverter, this.rootObject);",
                "+\t\t}",
                "+\t}",
                "+",
                " }",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "index 6e95e7941d..78a7e91f95 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -39,5 +39,9 @@ import org.springframework.util.Assert;",
                " /**",
                "- * Provides a default EvaluationContext implementation.",
                "+ * A powerful and highly configurable {@link EvaluationContext} implementation.",
                "+ * This context uses standard implementations of all applicable strategies,",
                "+ * based on reflection to resolve properties, methods and fields.",
                "  *",
                "- * <p>To resolve properties/methods/fields this context uses a reflection mechanism.",
                "+ * <p>For a simpler builder-style context variant for data-binding purposes,",
                "+ * consider using {@link SimpleEvaluationContext} instead which allows for",
                "+ * opting into several SpEL features as needed by specific evaluation cases.",
                "  *",
                "@@ -73,2 +77,5 @@ public class StandardEvaluationContext implements EvaluationContext {",
                "+\t/**",
                "+\t * Create a {@code StandardEvaluationContext} with a null root object.",
                "+\t */",
                " \tpublic StandardEvaluationContext() {",
                "@@ -77,2 +84,7 @@ public class StandardEvaluationContext implements EvaluationContext {",
                "+\t/**",
                "+\t * Create a {@code StandardEvaluationContext} with the given root object.",
                "+\t * @param rootObject the root object to use",
                "+\t * @see #setRootObject",
                "+\t */",
                " \tpublic StandardEvaluationContext(Object rootObject) {"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3dff1b3f6e9589b4b33f0311e349c2bf694d89ea",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520857668,
            "hunks": 5,
            "message": "SimpleAliasRegistry fully synchronizes registerAlias and removeAlias Issue: SPR-16577 (cherry picked from commit 1b1a69a)",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java b/spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java",
                "index 16c73b5f41..fcfbd0f637 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -47,19 +47,21 @@ public class SimpleAliasRegistry implements AliasRegistry {",
                " \t\tAssert.hasText(alias, \"'alias' must not be empty\");",
                "-\t\tif (alias.equals(name)) {",
                "-\t\t\tthis.aliasMap.remove(alias);",
                "-\t\t}",
                "-\t\telse {",
                "-\t\t\tString registeredName = this.aliasMap.get(alias);",
                "-\t\t\tif (registeredName != null) {",
                "-\t\t\t\tif (registeredName.equals(name)) {",
                "-\t\t\t\t\t// An existing alias - no need to re-register",
                "-\t\t\t\t\treturn;",
                "-\t\t\t\t}",
                "-\t\t\t\tif (!allowAliasOverriding()) {",
                "-\t\t\t\t\tthrow new IllegalStateException(\"Cannot register alias '\" + alias + \"' for name '\" +",
                "-\t\t\t\t\t\t\tname + \"': It is already registered for name '\" + registeredName + \"'.\");",
                "+\t\tsynchronized (this.aliasMap) {",
                "+\t\t\tif (alias.equals(name)) {",
                "+\t\t\t\tthis.aliasMap.remove(alias);",
                "+\t\t\t}",
                "+\t\t\telse {",
                "+\t\t\t\tString registeredName = this.aliasMap.get(alias);",
                "+\t\t\t\tif (registeredName != null) {",
                "+\t\t\t\t\tif (registeredName.equals(name)) {",
                "+\t\t\t\t\t\t// An existing alias - no need to re-register",
                "+\t\t\t\t\t\treturn;",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\tif (!allowAliasOverriding()) {",
                "+\t\t\t\t\t\tthrow new IllegalStateException(\"Cannot register alias '\" + alias + \"' for name '\" +",
                "+\t\t\t\t\t\t\t\tname + \"': It is already registered for name '\" + registeredName + \"'.\");",
                "+\t\t\t\t\t}",
                " \t\t\t\t}",
                "+\t\t\t\tcheckForAliasCircle(name, alias);",
                "+\t\t\t\tthis.aliasMap.put(alias, name);",
                " \t\t\t}",
                "-\t\t\tcheckForAliasCircle(name, alias);",
                "-\t\t\tthis.aliasMap.put(alias, name);",
                " \t\t}",
                "@@ -94,5 +96,7 @@ public class SimpleAliasRegistry implements AliasRegistry {",
                " \tpublic void removeAlias(String alias) {",
                "-\t\tString name = this.aliasMap.remove(alias);",
                "-\t\tif (name == null) {",
                "-\t\t\tthrow new IllegalStateException(\"No alias '\" + alias + \"' registered\");",
                "+\t\tsynchronized (this.aliasMap) {",
                "+\t\t\tString name = this.aliasMap.remove(alias);",
                "+\t\t\tif (name == null) {",
                "+\t\t\t\tthrow new IllegalStateException(\"No alias '\" + alias + \"' registered\");",
                "+\t\t\t}",
                " \t\t}"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "9a27bc9b3e48fd2e119e8d437854c668b82ad186",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522164814,
            "hunks": 5,
            "message": "Upgrade to Jackson 2.9.5 and Hibernate Validator 6.0.9",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 1e15a0dc40..58a877532c 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -47,3 +47,3 @@ configure(allprojects) { project ->",
                " \text.hsqldbVersion        = \"2.4.0\"",
                "-\text.jackson2Version      = \"2.9.4\"",
                "+\text.jackson2Version      = \"2.9.5\"",
                " \text.jettyVersion         = \"9.4.9.v20180320\"",
                "diff --git a/spring-context-support/spring-context-support.gradle b/spring-context-support/spring-context-support.gradle",
                "index 76b668c342..84fd61f5ab 100644",
                "--- a/spring-context-support/spring-context-support.gradle",
                "+++ b/spring-context-support/spring-context-support.gradle",
                "@@ -18,3 +18,3 @@ dependencies {",
                " \ttestCompile(\"org.hsqldb:hsqldb:${hsqldbVersion}\")",
                "-\ttestCompile(\"org.hibernate:hibernate-validator:6.0.8.Final\")",
                "+\ttestCompile(\"org.hibernate:hibernate-validator:6.0.9.Final\")",
                " \ttestRuntime(\"org.ehcache:jcache:1.0.1\")",
                "diff --git a/spring-test/spring-test.gradle b/spring-test/spring-test.gradle",
                "index 14bbad3a92..d2cd0964a9 100644",
                "--- a/spring-test/spring-test.gradle",
                "+++ b/spring-test/spring-test.gradle",
                "@@ -67,3 +67,3 @@ dependencies {",
                " \ttestCompile(\"org.hibernate:hibernate-core:5.2.16.Final\")",
                "-\ttestCompile(\"org.hibernate:hibernate-validator:6.0.8.Final\")",
                "+\ttestCompile(\"org.hibernate:hibernate-validator:6.0.9.Final\")",
                " \t// Enable use of the JUnit Platform Runner",
                "diff --git a/spring-webflux/spring-webflux.gradle b/spring-webflux/spring-webflux.gradle",
                "index 7abe0f2c36..3fe439f9ce 100644",
                "--- a/spring-webflux/spring-webflux.gradle",
                "+++ b/spring-webflux/spring-webflux.gradle",
                "@@ -47,3 +47,3 @@ dependencies {",
                " \ttestCompile(\"javax.xml.bind:jaxb-api:2.3.0\")",
                "-\ttestCompile(\"org.hibernate:hibernate-validator:6.0.8.Final\")",
                "+\ttestCompile(\"org.hibernate:hibernate-validator:6.0.9.Final\")",
                " \ttestCompile \"io.reactivex.rxjava2:rxjava:${rxjava2Version}\"",
                "diff --git a/spring-webmvc/spring-webmvc.gradle b/spring-webmvc/spring-webmvc.gradle",
                "index 4cbec99a24..881ffc91a7 100644",
                "--- a/spring-webmvc/spring-webmvc.gradle",
                "+++ b/spring-webmvc/spring-webmvc.gradle",
                "@@ -56,3 +56,3 @@ dependencies {",
                " \t}",
                "-\ttestCompile(\"org.hibernate:hibernate-validator:6.0.8.Final\")",
                "+\ttestCompile(\"org.hibernate:hibernate-validator:6.0.9.Final\")",
                " \ttestCompile(\"org.apache.httpcomponents:httpclient:4.5.5\") {"
            ],
            "changed_files": [
                "build.gradle",
                "spring-context-support/spring-context-support.gradle",
                "spring-test/spring-test.gradle",
                "spring-webflux/spring-webflux.gradle",
                "spring-webmvc/spring-webmvc.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "26bb3a0893564ab2f17cf7ac9d6fa86593995dea",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521472808,
            "hunks": 2,
            "message": "Improve docs on enabling Servlet 3 multipart",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java",
                "index 15e9cc48eb..0ac3326d2c 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -43,2 +43,14 @@ import org.springframework.web.multipart.MultipartResolver;",
                "  *",
                "+ * <pre class=\"code\">",
                "+ * public class AppInitializer extends AbstractAnnotationConfigDispatcherServletInitializer {",
                "+ *\t// ...",
                "+ *\t&#064;Override",
                "+ *\tprotected void customizeRegistration(ServletRegistration.Dynamic registration) {",
                "+ *",
                "+ *\t\t// Optionally also set maxFileSize, maxRequestSize, fileSizeThreshold",
                "+ *\t\tregistration.setMultipartConfig(new MultipartConfigElement(\"/tmp\"));",
                "+ *\t}",
                "+ * }",
                "+ * </pre>",
                "+ *",
                "  * @author Juergen Hoeller"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "78681c6369425a878934780fb6efa4e5ea24bded",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522415978,
            "hunks": 7,
            "message": "JndiRmiServiceExporter still calls PortableRemoteObject when available Issue: SPR-16670",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiServiceExporter.java b/spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiServiceExporter.java",
                "index ee59076bc3..6b178e2f63 100644",
                "--- a/spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiServiceExporter.java",
                "+++ b/spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiServiceExporter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,3 +18,4 @@ package org.springframework.remoting.rmi;",
                "-import java.rmi.NoSuchObjectException;",
                "+import java.lang.reflect.InvocationTargetException;",
                "+import java.lang.reflect.Method;",
                " import java.rmi.Remote;",
                "@@ -27,2 +28,4 @@ import org.springframework.beans.factory.InitializingBean;",
                " import org.springframework.jndi.JndiTemplate;",
                "+import org.springframework.lang.Nullable;",
                "+import org.springframework.util.ReflectionUtils;",
                "@@ -68,2 +71,23 @@ public class JndiRmiServiceExporter extends RmiBasedExporter implements Initiali",
                "+\t@Nullable",
                "+\tprivate static Method exportObject;",
                "+",
                "+\t@Nullable",
                "+\tprivate static Method unexportObject;",
                "+",
                "+\tstatic {",
                "+\t\ttry {",
                "+\t\t\tClass<?> portableRemoteObject =",
                "+\t\t\t\t\tJndiRmiServiceExporter.class.getClassLoader().loadClass(\"javax.rmi.PortableRemoteObject\");",
                "+\t\t\texportObject = portableRemoteObject.getMethod(\"exportObject\", Remote.class);",
                "+\t\t\tunexportObject = portableRemoteObject.getMethod(\"unexportObject\", Remote.class);",
                "+\t\t}",
                "+\t\tcatch (Throwable ex) {",
                "+\t\t\t// java.corba module not available on JDK 9+",
                "+\t\t\texportObject = null;",
                "+\t\t\tunexportObject = null;",
                "+\t\t}",
                "+\t}",
                "+",
                "+",
                " \tprivate JndiTemplate jndiTemplate = new JndiTemplate();",
                "@@ -118,2 +142,3 @@ public class JndiRmiServiceExporter extends RmiBasedExporter implements Initiali",
                " \t\tthis.exportedObject = getObjectToExport();",
                "+\t\tinvokePortableRemoteObject(exportObject);",
                "@@ -138,3 +163,3 @@ public class JndiRmiServiceExporter extends RmiBasedExporter implements Initiali",
                " \t@Override",
                "-\tpublic void destroy() throws NamingException, NoSuchObjectException {",
                "+\tpublic void destroy() throws NamingException, RemoteException {",
                " \t\tif (logger.isInfoEnabled()) {",
                "@@ -143,2 +168,22 @@ public class JndiRmiServiceExporter extends RmiBasedExporter implements Initiali",
                " \t\tthis.jndiTemplate.unbind(this.jndiName);",
                "+\t\tinvokePortableRemoteObject(unexportObject);",
                "+\t}",
                "+",
                "+",
                "+\tprivate void invokePortableRemoteObject(@Nullable Method method) throws RemoteException {",
                "+\t\tif (method != null) {",
                "+\t\t\ttry {",
                "+\t\t\t\tmethod.invoke(null, this.exportedObject);",
                "+\t\t\t}",
                "+\t\t\tcatch (InvocationTargetException ex) {",
                "+\t\t\t\tThrowable targetEx = ex.getTargetException();",
                "+\t\t\t\tif (targetEx instanceof RemoteException) {",
                "+\t\t\t\t\tthrow (RemoteException) targetEx;",
                "+\t\t\t\t}",
                "+\t\t\t\tReflectionUtils.rethrowRuntimeException(targetEx);",
                "+\t\t\t}",
                "+\t\t\tcatch (Throwable ex) {",
                "+\t\t\t\tthrow new IllegalStateException(\"PortableRemoteObject invocation failed\", ex);",
                "+\t\t\t}",
                "+\t\t}",
                " \t}"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiServiceExporter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d232fffa63096811d2e157ef7a9057008ca60835",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1474197429,
            "hunks": 3,
            "message": "Use whenComplete since (null) return value not needed",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/concurrent/CompletableToListenableFutureAdapter.java b/spring-core/src/main/java/org/springframework/util/concurrent/CompletableToListenableFutureAdapter.java",
                "index c9b28a79a8..42910bf902 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/concurrent/CompletableToListenableFutureAdapter.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/concurrent/CompletableToListenableFutureAdapter.java",
                "@@ -23,2 +23,3 @@ import java.util.concurrent.TimeUnit;",
                " import java.util.concurrent.TimeoutException;",
                "+import java.util.function.BiConsumer;",
                "@@ -52,3 +53,3 @@ public class CompletableToListenableFutureAdapter<T> implements ListenableFuture",
                " \t\tthis.completableFuture = completableFuture;",
                "-\t\tthis.completableFuture.handle((result, ex) -> {",
                "+\t\tthis.completableFuture.whenComplete((result, ex) -> {",
                " \t\t\tif (ex != null) {",
                "@@ -59,3 +60,2 @@ public class CompletableToListenableFutureAdapter<T> implements ListenableFuture",
                " \t\t\t}",
                "-\t\t\treturn null;",
                " \t\t});"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/concurrent/CompletableToListenableFutureAdapter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "2c648379abc56f5ce5ad83f2522d63b24ad72ffb",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522843284,
            "hunks": 3,
            "message": "Delete dead code in spring-webmvc",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java",
                "index 43aefc9532..3175b8ffb4 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java",
                "@@ -29,3 +29,2 @@ import org.springframework.beans.factory.config.BeanDefinition;",
                " import org.springframework.beans.factory.config.BeanDefinitionHolder;",
                "-import org.springframework.beans.factory.config.BeanReference;",
                " import org.springframework.beans.factory.config.RuntimeBeanReference;",
                "@@ -62,3 +61,2 @@ import org.springframework.util.Assert;",
                " import org.springframework.util.ClassUtils;",
                "-import org.springframework.util.StringUtils;",
                " import org.springframework.util.xml.DomUtils;",
                "@@ -666,23 +664,2 @@ class AnnotationDrivenBeanDefinitionParser implements BeanDefinitionParser {",
                "-    private ManagedList<BeanReference> extractBeanRefSubElements(Element parentElement, ParserContext parserContext){",
                "-        ManagedList<BeanReference> list = new ManagedList<>();",
                "-        list.setSource(parserContext.extractSource(parentElement));",
                "-        for (Element refElement : DomUtils.getChildElementsByTagName(parentElement, \"ref\")) {",
                "-            BeanReference reference;",
                "-            if (StringUtils.hasText(\"bean\")) {",
                "-                reference = new RuntimeBeanReference(refElement.getAttribute(\"bean\"),false);",
                "-                list.add(reference);",
                "-            }",
                "-\t\t\telse if (StringUtils.hasText(\"parent\")){",
                "-                reference = new RuntimeBeanReference(refElement.getAttribute(\"parent\"),true);",
                "-                list.add(reference);",
                "-            }",
                "-\t\t\telse {",
                "-                parserContext.getReaderContext().error(\"'bean' or 'parent' attribute is required for <ref> element\",",
                "-                        parserContext.extractSource(parentElement));",
                "-            }",
                "-        }",
                "-        return list;",
                "-    }",
                "-"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/config/AnnotationDrivenBeanDefinitionParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4187e04b6976524580182206358b7f0cd911e816",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521686833,
            "hunks": 17,
            "message": "Backport doc change",
            "diff": [
                "diff --git a/src/asciidoc/core-expressions.adoc b/src/asciidoc/core-expressions.adoc",
                "index 3ac3a0e69c..8ae51a9688 100644",
                "--- a/src/asciidoc/core-expressions.adoc",
                "+++ b/src/asciidoc/core-expressions.adoc",
                "@@ -183,16 +183,12 @@ create a boolean condition:",
                " The interface `EvaluationContext` is used when evaluating an expression to resolve",
                "-properties, methods, fields, and to help perform type conversion. The out-of-the-box",
                "-implementations, `SimpleEvalutationContext` and `StandardEvaluationContext`, use",
                "-reflection to manipulate the object, caching `java.lang.reflect.Method`,",
                "-`java.lang.reflect.Field`, and `java.lang.reflect.Constructor` instances for increased",
                "-performance.",
                "-",
                "-`SimpleEvaluationContext` exposes a subset of essential SpEL language features and",
                "-configuration options. Certain categories of expressions, do not require the full extent",
                "-of the SpEL language syntax and arguably should be meaningfully restricted. Examples",
                "+properties, methods, fields, and to help perform type conversion. There are two",
                "+out-of-the-box implementations.",
                "+",
                "+* `SimpleEvaluationContext` -- exposes a subset of essential SpEL language features and",
                "+configuration options, for categories of expressions that do not require the full extent",
                "+of the SpEL language syntax and should be meaningfully restricted. Examples",
                " include but are not limited to data binding expressions, property-based filters, and",
                "-others. To effect, `SimpleEvaluationContext` supports a subset of the SpEL language syntax",
                "-that excludes references to Java types, constructors, and bean references.",
                "+others.",
                "-`StandardEvaluationContext` exposes the full set of SpEL language features and",
                "+* `StandardEvaluationContext` -- exposes the full set of SpEL language features and",
                " configuration options. You may use it to specify a default root object, and to configure",
                "@@ -200,2 +196,13 @@ every available evaluation-related strategy.",
                "+`SimpleEvaluationContext` is designed to support only a subset of the SpEL language syntax.",
                "+It excludes Java type references, constructors, and bean references. It also requires",
                "+explicit choosing the level of support for properties and methods in expressions.",
                "+By default, the `create()` static factory method enables only read access to properties.",
                "+You can also obtain a builder to configure the exact level of support needed, targeting",
                "+one of, or some combination of the following:",
                "+",
                "+. Custom {@code PropertyAccessor} only (no reflection).",
                "+. Data binding properties for read-only access.",
                "+. Data binding properties for read and write.",
                "+",
                "@@ -227,3 +234,3 @@ being placed in it. A simple example:",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext().create();",
                "@@ -604,3 +611,3 @@ arrays and lists are obtained using square bracket notation.",
                " \tExpressionParser parser = new SpelExpressionParser();",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                "@@ -887,3 +894,3 @@ done within a call to `setValue` but can also be done inside a call to `getValue",
                " \tInventor inventor = new Inventor();",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                "@@ -955,3 +962,3 @@ are set using the method setVariable on `EvaluationContext` implementations.",
                " \tInventor tesla = new Inventor(\"Nikola Tesla\", \"Serbian\");",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                " \tcontext.setVariable(\"newName\", \"Mike Tesla\");",
                "@@ -981,3 +988,3 @@ an expression are evaluated, #root always refers to the root.",
                " \tExpressionParser parser = new SpelExpressionParser();",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                " \tcontext.setVariable(\"primes\",primes);",
                "@@ -1003,3 +1010,3 @@ expression string. The function is registered through the `EvaluationContext`.",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                " \tcontext.setVariable(\"myFunction\", method);",
                "@@ -1030,3 +1037,3 @@ The above method can then be registered and used as follows:",
                " \tExpressionParser parser = new SpelExpressionParser();",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                "@@ -1051,3 +1058,3 @@ lookup beans from an expression using the (@) symbol.",
                " \tExpressionParser parser = new SpelExpressionParser();",
                "-\tStandardEvaluationContext context = new StandardEvaluationContext();",
                "+\tStandardEvaluationContext context = StandardEvaluationContext.create();",
                " \tcontext.setBeanResolver(new MyBeanResolver());",
                "@@ -1064,3 +1071,3 @@ To access a factory bean itself, the bean name should instead be prefixed with a",
                " \tExpressionParser parser = new SpelExpressionParser();",
                "-\tStandardEvaluationContext context = new StandardEvaluationContext();",
                "+\tStandardEvaluationContext context = StandardEvaluationContext.create();",
                " \tcontext.setBeanResolver(new MyBeanResolver());",
                "@@ -1142,3 +1149,3 @@ Here is a more complex example.",
                " \tInventor tesla = new Inventor(\"Nikola Tesla\", \"Serbian\");",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                "@@ -1174,3 +1181,3 @@ safe navigation operator will simply return null instead of throwing an exceptio",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                "@@ -1242,2 +1249,3 @@ first or the last value. To obtain the first entry matching the selection the sy",
                " === Collection Projection",
                "+",
                " Projection allows a collection to drive the evaluation of a sub-expression and the",
                "@@ -1264,2 +1272,3 @@ expression against each map entry.",
                " === Expression templating",
                "+",
                " Expression templates allow a mixing of literal text with one or more evaluation blocks.",
                "@@ -1309,2 +1318,3 @@ The definition of `TemplateParserContext` is shown below.",
                " == Classes used in the examples",
                "+",
                " Inventor.java"
            ],
            "changed_files": [
                "src/asciidoc/core-expressions.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "22a8a668c94381ec220eb526aae1bbcab87238d0",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522416703,
            "hunks": 3,
            "message": "AnnotationTypeFilter assumes no custom annotations on common Java types Issue: SPR-16667",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java b/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "index 7416f22662..664d477f9f 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -73,3 +73,5 @@ public class AnnotationTypeFilter extends AbstractTypeHierarchyTraversingFilter",
                " \t */",
                "-\tpublic AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {",
                "+\tpublic AnnotationTypeFilter(",
                "+\t\t\tClass<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {",
                "+",
                " \t\tsuper(annotationType.isAnnotationPresent(Inherited.class), considerInterfaces);",
                "@@ -113,2 +115,6 @@ public class AnnotationTypeFilter extends AbstractTypeHierarchyTraversingFilter",
                " \t\telse if (typeName.startsWith(\"java\")) {",
                "+\t\t\tif (!this.annotationType.getName().startsWith(\"java\")) {",
                "+\t\t\t\t// Standard Java classes don't have non-standard annotations on them.",
                "+\t\t\t\treturn false;",
                "+\t\t\t}",
                " \t\t\ttry {"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "2a9eaab6741055f05895985e3461ec26227dec8e",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522531940,
            "hunks": 6,
            "message": "Remove outdated declarations from spring-aspects build",
            "diff": [
                "diff --git a/spring-aspects/aspects.gradle b/spring-aspects/aspects.gradle",
                "index 2c68dff4da..78491cc0bd 100644",
                "--- a/spring-aspects/aspects.gradle",
                "+++ b/spring-aspects/aspects.gradle",
                "@@ -1,3 +1,2 @@",
                "-// redefine the compileJava and compileTestJava tasks in order to",
                "-// compile sources with ajc instead of javac",
                "+// Redefine the compileJava and compileTestJava tasks in order to compile sources with ajc instead of javac",
                "@@ -10,6 +9,2 @@ configurations {",
                "-// exclude spring-aspects as a module within IDEA until IDEA-64446 is resolved",
                "-tasks.getByName(\"idea\").onlyIf { false }",
                "-tasks.getByName(\"ideaModule\").onlyIf { false }",
                "-",
                " compileJava  {",
                "@@ -19,3 +14,2 @@ compileJava  {",
                " \tdef outputDir = project.sourceSets.main.output.classesDir",
                "-",
                " \tinputs.files(project.sourceSets.main.allSource + project.sourceSets.main.compileClasspath)",
                "@@ -23,5 +17,2 @@ compileJava  {",
                "-\text.sourceCompatibility = project(\":spring-core\").compileJava.sourceCompatibility",
                "-\text.targetCompatibility = project(\":spring-core\").compileJava.targetCompatibility",
                "-",
                " \tdoLast{",
                "@@ -55,3 +46,2 @@ compileTestJava  {",
                " \tdef outputDir = project.sourceSets.test.output.classesDir",
                "-",
                " \tinputs.files(project.sourceSets.test.allSource + project.sourceSets.test.compileClasspath)",
                "@@ -59,5 +49,2 @@ compileTestJava  {",
                "-\text.sourceCompatibility = project(\":spring-core\").compileTestJava.sourceCompatibility",
                "-\text.targetCompatibility = project(\":spring-core\").compileTestJava.targetCompatibility",
                "-",
                " \tdoLast{"
            ],
            "changed_files": [
                "spring-aspects/aspects.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "e0de9126ed8cf25cf141d3e66420da94e350708a",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521689398,
            "hunks": 12,
            "message": "Re-use EvaluationContext in DefaultSubscriptionRegistry Rather than create a new EvaluationContext instance per evaluation, we now create a statically shared instance, without the root object in it, and re-use it for all evalutations.",
            "diff": [
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "index 97f97c586a..ae9c6b7414 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -28,3 +28,2 @@ import java.util.concurrent.CopyOnWriteArraySet;",
                "-import org.springframework.expression.AccessException;",
                " import org.springframework.expression.EvaluationContext;",
                "@@ -36,3 +35,3 @@ import org.springframework.expression.spel.SpelEvaluationException;",
                " import org.springframework.expression.spel.standard.SpelExpressionParser;",
                "-import org.springframework.expression.spel.support.StandardEvaluationContext;",
                "+import org.springframework.expression.spel.support.SimpleEvaluationContext;",
                " import org.springframework.lang.Nullable;",
                "@@ -67,2 +66,7 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                "+\t/** Static evaluation context to re-use */",
                "+\tprivate static SimpleEvaluationContext evaluationContext = SimpleEvaluationContext.builder()",
                "+\t\t\t.propertyAccessor(new SimpMessageHeaderPropertyAccessor()).build();",
                "+",
                "+",
                "@@ -194,3 +198,2 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t}",
                "-\t\tEvaluationContext context = null;",
                " \t\tMultiValueMap<String, String> result = new LinkedMultiValueMap<>(allMatches.size());",
                "@@ -211,8 +214,4 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t\t\t}",
                "-\t\t\t\tif (context == null) {",
                "-\t\t\t\t\tcontext = new StandardEvaluationContext(message);",
                "-\t\t\t\t\tcontext.getPropertyAccessors().add(new SimpMessageHeaderPropertyAccessor());",
                "-\t\t\t\t}",
                " \t\t\t\ttry {",
                "-\t\t\t\t\tif (Boolean.TRUE.equals(expression.getValue(context, Boolean.class))) {",
                "+\t\t\t\t\tif (Boolean.TRUE.equals(expression.getValue(evaluationContext, message, Boolean.class))) {",
                " \t\t\t\t\t\tresult.add(sessionId, subId);",
                "@@ -535,3 +534,3 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\tpublic Class<?>[] getSpecificTargetClasses() {",
                "-\t\t\treturn new Class<?>[] {MessageHeaders.class};",
                "+\t\t\treturn new Class<?>[] {Message.class, MessageHeaders.class};",
                " \t\t}",
                "@@ -544,17 +543,25 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t@Override",
                "-\t\tpublic TypedValue read(EvaluationContext context, @Nullable Object target, String name) throws AccessException {",
                "-\t\t\tAssert.state(target instanceof MessageHeaders, \"No MessageHeaders\");",
                "-\t\t\tMessageHeaders headers = (MessageHeaders) target;",
                "-\t\t\tSimpMessageHeaderAccessor accessor =",
                "-\t\t\t\t\tMessageHeaderAccessor.getAccessor(headers, SimpMessageHeaderAccessor.class);",
                "-\t\t\tAssert.state(accessor != null, \"No SimpMessageHeaderAccessor\");",
                "+\t\tpublic TypedValue read(EvaluationContext context, @Nullable Object target, String name) {",
                " \t\t\tObject value;",
                "-\t\t\tif (\"destination\".equalsIgnoreCase(name)) {",
                "-\t\t\t\tvalue = accessor.getDestination();",
                "+\t\t\tif (target instanceof Message) {",
                "+\t\t\t\tvalue = name.equals(\"headers\") ? ((Message) target).getHeaders() : null;",
                " \t\t\t}",
                "-\t\t\telse {",
                "-\t\t\t\tvalue = accessor.getFirstNativeHeader(name);",
                "-\t\t\t\tif (value == null) {",
                "-\t\t\t\t\tvalue = headers.get(name);",
                "+\t\t\telse if (target instanceof MessageHeaders) {",
                "+\t\t\t\tMessageHeaders headers = (MessageHeaders) target;",
                "+\t\t\t\tSimpMessageHeaderAccessor accessor =",
                "+\t\t\t\t\t\tMessageHeaderAccessor.getAccessor(headers, SimpMessageHeaderAccessor.class);",
                "+\t\t\t\tAssert.state(accessor != null, \"No SimpMessageHeaderAccessor\");",
                "+\t\t\t\tif (\"destination\".equalsIgnoreCase(name)) {",
                "+\t\t\t\t\tvalue = accessor.getDestination();",
                " \t\t\t\t}",
                "+\t\t\t\telse {",
                "+\t\t\t\t\tvalue = accessor.getFirstNativeHeader(name);",
                "+\t\t\t\t\tif (value == null) {",
                "+\t\t\t\t\t\tvalue = headers.get(name);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\telse {",
                "+\t\t\t\t// Should never happen...",
                "+\t\t\t\tthrow new IllegalStateException(\"Expected Message or MessageHeaders.\");",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3b3f27d5ffc0f9ea9e7361a59a0acbf0c3b20d12",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522230163,
            "hunks": 5,
            "message": "DefaultResponseErrorHandler.hasError avoids exception for unknown status Issue: SPR-16604",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java b/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java",
                "index f4d032ef84..467a4767c1 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -49,8 +49,9 @@ public class DefaultResponseErrorHandler implements ResponseErrorHandler {",
                " \tpublic boolean hasError(ClientHttpResponse response) throws IOException {",
                "-\t\ttry {",
                "-\t\t\treturn hasError(getHttpStatusCode(response));",
                "-\t\t}",
                "-\t\tcatch (UnknownHttpStatusCodeException ex) {",
                "-\t\t\treturn false;",
                "+\t\tint rawStatusCode = response.getRawStatusCode();",
                "+\t\tfor (HttpStatus statusCode : HttpStatus.values()) {",
                "+\t\t\tif (statusCode.value() == rawStatusCode) {",
                "+\t\t\t\treturn hasError(statusCode);",
                "+\t\t\t}",
                " \t\t}",
                "+\t\treturn false;",
                " \t}",
                "@@ -89,3 +90,4 @@ public class DefaultResponseErrorHandler implements ResponseErrorHandler {",
                " \t\t\tdefault:",
                "-\t\t\t\tthrow new RestClientException(\"Unknown status code [\" + statusCode + \"]\");",
                "+\t\t\t\tthrow new UnknownHttpStatusCodeException(statusCode.value(), response.getStatusText(),",
                "+\t\t\t\t\t\tresponse.getHeaders(), getResponseBody(response), getCharset(response));",
                " \t\t}",
                "@@ -96,2 +98,3 @@ public class DefaultResponseErrorHandler implements ResponseErrorHandler {",
                " \t * Determine the HTTP status of the given response.",
                "+\t * <p>Note: Only called from {@link #handleError}, not from {@link #hasError}.",
                " \t * @param response the response to inspect"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "6158634d67eb6fee43adfff61aca9c98d35c0308",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521050030,
            "hunks": 12,
            "message": "Clarified repeatable PropertySource annotation vs use as meta-annotation Issue: SPR-16592 (cherry picked from commit c4e9ce8)",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java b/spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java",
                "index 764073b873..491ed14c97 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -289,8 +289,11 @@ public class AnnotationConfigUtils {",
                " \t@SuppressWarnings(\"unchecked\")",
                "-\tstatic Set<AnnotationAttributes> attributesForRepeatable(AnnotationMetadata metadata,",
                "-\t\t\tString containerClassName, String annotationClassName) {",
                "+\tstatic Set<AnnotationAttributes> attributesForRepeatable(",
                "+\t\t\tAnnotationMetadata metadata, String containerClassName, String annotationClassName) {",
                " \t\tSet<AnnotationAttributes> result = new LinkedHashSet<AnnotationAttributes>();",
                "+",
                "+\t\t// Direct annotation present?",
                " \t\taddAttributesIfNotNull(result, metadata.getAnnotationAttributes(annotationClassName, false));",
                "+\t\t// Container annotation present?",
                " \t\tMap<String, Object> container = metadata.getAnnotationAttributes(containerClassName, false);",
                "@@ -301,2 +304,4 @@ public class AnnotationConfigUtils {",
                " \t\t}",
                "+",
                "+\t\t// Return merged result",
                " \t\treturn Collections.unmodifiableSet(result);",
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java b/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java",
                "index e423711065..51ca200ebe 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -44,2 +44,3 @@ import org.springframework.core.io.support.PropertySourceFactory;",
                "  * public class AppConfig {",
                "+ *",
                "  *     &#064;Autowired",
                "@@ -55,4 +56,4 @@ import org.springframework.core.io.support.PropertySourceFactory;",
                "  *",
                "- * Notice that the {@code Environment} object is @{@link",
                "- * org.springframework.beans.factory.annotation.Autowired Autowired} into the",
                "+ * Notice that the {@code Environment} object is",
                "+ * {@link org.springframework.beans.factory.annotation.Autowired @Autowired} into the",
                "  * configuration class and then used when populating the {@code TestBean} object. Given",
                "@@ -81,2 +82,3 @@ import org.springframework.core.io.support.PropertySourceFactory;",
                "  * public class AppConfig {",
                "+ *",
                "  *     &#064;Autowired",
                "@@ -120,5 +122,5 @@ import org.springframework.core.io.support.PropertySourceFactory;",
                "  * with the application context.",
                "+ *",
                "  * <pre class=\"code\">",
                "- * AnnotationConfigApplicationContext ctx =",
                "- *     new AnnotationConfigApplicationContext();",
                "+ * AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();",
                "  * ctx.register(ConfigA.class);",
                "@@ -141,2 +143,8 @@ import org.springframework.core.io.support.PropertySourceFactory;",
                "  *",
                "+ * <p><b>NOTE: This annotation is repeatable according to Java 8 conventions.</b>",
                "+ * However, all such {@code @PropertySource} annotations need to be declared at the same",
                "+ * level: either directly on the configuration class or as meta-annotations within the",
                "+ * same custom annotation. Mixing of direct annotations and meta-annotations is not",
                "+ * recommended since direct annotations will effectively override meta-annotations.",
                "+ *",
                "  * @author Chris Beams"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java",
                "spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a989ea0867f36ddf1f0e58b71aade8a2500ffe7d",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521896356,
            "hunks": 26,
            "message": "Polish Synchronoss message reader Issue: SPR-16639",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader.java b/spring-web/src/main/java/org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader.java",
                "index 765918bc8c..8324c402d5 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader.java",
                "@@ -100,3 +100,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                " \t\treturn Mono.error(new UnsupportedOperationException(",
                "-\t\t\t\t\"This reader does not support reading a single element.\"));",
                "+\t\t\t\t\"Can't read a multipart request body into a single Part.\"));",
                " \t}",
                "@@ -105,4 +105,4 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                " \t/**",
                "-\t * Consume and feed input to the Synchronoss parser, then adapt parser",
                "-\t * output events to {@code Flux<Sink<Part>>}.",
                "+\t * Consume and feed input to the Synchronoss parser, then listen for parser",
                "+\t * output events and adapt to {@code Flux<Sink<Part>>}.",
                " \t */",
                "@@ -114,2 +114,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\tSynchronossPartGenerator(ReactiveHttpInputMessage inputMessage, DataBufferFactory factory) {",
                "@@ -119,2 +120,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\t@Override",
                "@@ -178,5 +180,6 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "-\t\tFluxSinkAdapterListener(FluxSink<Part> sink, DataBufferFactory bufferFactory, MultipartContext context) {",
                "+",
                "+\t\tFluxSinkAdapterListener(FluxSink<Part> sink, DataBufferFactory factory, MultipartContext context) {",
                " \t\t\tthis.sink = sink;",
                "-\t\t\tthis.bufferFactory = bufferFactory;",
                "+\t\t\tthis.bufferFactory = factory;",
                " \t\t\tthis.context = context;",
                "@@ -184,2 +187,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\t@Override",
                "@@ -194,3 +198,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                " \t\t\tif (filename != null) {",
                "-\t\t\t\treturn new SynchronossFilePart(httpHeaders, storage, this.bufferFactory, filename);",
                "+\t\t\t\treturn new SynchronossFilePart(httpHeaders, filename, storage, this.bufferFactory);",
                " \t\t\t}",
                "@@ -201,3 +205,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                " \t\t\telse {",
                "-\t\t\t\treturn new DefaultSynchronossPart(httpHeaders, storage, this.bufferFactory);",
                "+\t\t\t\treturn new SynchronossPart(httpHeaders, storage, this.bufferFactory);",
                " \t\t\t}",
                "@@ -231,2 +235,4 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+\t\tprivate final String name;",
                "+",
                " \t\tprivate final HttpHeaders headers;",
                "@@ -235,2 +241,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\tAbstractSynchronossPart(HttpHeaders headers, DataBufferFactory bufferFactory) {",
                "@@ -238,2 +245,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                " \t\t\tAssert.notNull(bufferFactory, \"'bufferFactory' is required\");",
                "+\t\t\tthis.name = MultipartUtils.getFieldName(headers);",
                " \t\t\tthis.headers = headers;",
                "@@ -242,5 +250,6 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\t@Override",
                " \t\tpublic String name() {",
                "-\t\t\treturn MultipartUtils.getFieldName(this.headers);",
                "+\t\t\treturn this.name;",
                " \t\t}",
                "@@ -252,3 +261,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "-\t\tprotected DataBufferFactory getBufferFactory() {",
                "+\t\tDataBufferFactory getBufferFactory() {",
                " \t\t\treturn this.bufferFactory;",
                "@@ -258,3 +267,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "-\tprivate static class DefaultSynchronossPart extends AbstractSynchronossPart {",
                "+\tprivate static class SynchronossPart extends AbstractSynchronossPart {",
                "@@ -262,3 +271,4 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "-\t\tDefaultSynchronossPart(HttpHeaders headers, StreamStorage storage, DataBufferFactory factory) {",
                "+",
                "+\t\tSynchronossPart(HttpHeaders headers, StreamStorage storage, DataBufferFactory factory) {",
                " \t\t\tsuper(headers, factory);",
                "@@ -268,6 +278,6 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\t@Override",
                " \t\tpublic Flux<DataBuffer> content() {",
                "-\t\t\treturn DataBufferUtils.readInputStream(this.storage::getInputStream, getBufferFactory(),",
                "-\t\t\t\t\t4096);",
                "+\t\t\treturn DataBufferUtils.readInputStream(getStorage()::getInputStream, getBufferFactory(), 4096);",
                " \t\t}",
                "@@ -280,3 +290,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "-\tprivate static class SynchronossFilePart extends DefaultSynchronossPart implements FilePart {",
                "+\tprivate static class SynchronossFilePart extends SynchronossPart implements FilePart {",
                "@@ -285,6 +295,8 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\tprivate final String filename;",
                "-\t\tpublic SynchronossFilePart(",
                "-\t\t\t\tHttpHeaders headers, StreamStorage storage, DataBufferFactory factory, String filename) {",
                "+",
                "+\t\tSynchronossFilePart(HttpHeaders headers, String filename, StreamStorage storage,",
                "+\t\t\t\tDataBufferFactory factory) {",
                "@@ -294,2 +306,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\t@Override",
                "@@ -344,2 +357,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\tSynchronossFormFieldPart(HttpHeaders headers, DataBufferFactory bufferFactory, String content) {",
                "@@ -349,2 +363,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\t@Override",
                "@@ -363,4 +378,4 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                " \t\tprivate Charset getCharset() {",
                "-\t\t\treturn Optional.ofNullable(MultipartUtils.getCharEncoding(headers()))",
                "-\t\t\t\t\t.map(Charset::forName).orElse(StandardCharsets.UTF_8);",
                "+\t\t\tString name = MultipartUtils.getCharEncoding(headers());",
                "+\t\t\treturn (name != null ? Charset.forName(name) : StandardCharsets.UTF_8);",
                " \t\t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "24aae2e104f9e8eb1f21e79959ab00cb7fdcc49f",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522103043,
            "hunks": 1,
            "message": "Defensive containsSingleton cache guard within getObjectFromFactoryBean Issue: SPR-16625",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "index 0d316be9c4..68c6fd0502 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "@@ -117,3 +117,5 @@ public abstract class FactoryBeanRegistrySupport extends DefaultSingletonBeanReg",
                " \t\t\t\t\t\t}",
                "-\t\t\t\t\t\tthis.factoryBeanObjectCache.put(beanName, object);",
                "+\t\t\t\t\t\tif (containsSingleton(beanName)) {",
                "+\t\t\t\t\t\t\tthis.factoryBeanObjectCache.put(beanName, object);",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7a8d41e5d6d4ac85d6d74d80c311800d78e0a721",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522410082,
            "hunks": 10,
            "message": "Extended set of common classes and language interfaces in ClassUtils Issue: SPR-16667",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/ClassUtils.java b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "index 33bf4bbf3c..52853dd19a 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "@@ -19,2 +19,3 @@ package org.springframework.util;",
                " import java.beans.Introspector;",
                "+import java.io.Closeable;",
                " import java.io.Externalizable;",
                "@@ -29,2 +30,3 @@ import java.util.Collection;",
                " import java.util.Collections;",
                "+import java.util.Enumeration;",
                " import java.util.HashMap;",
                "@@ -34,3 +36,5 @@ import java.util.Iterator;",
                " import java.util.LinkedHashSet;",
                "+import java.util.List;",
                " import java.util.Map;",
                "+import java.util.Optional;",
                " import java.util.Set;",
                "@@ -78,9 +82,2 @@ public abstract class ClassUtils {",
                "-\t/**",
                "-\t * Common Java language interfaces which are supposed to be ignored",
                "-\t * when searching for 'primary' user-level interfaces.",
                "-\t */",
                "-\tprivate static final Set<Class<?>> javaLanguageInterfaces = new HashSet<>(",
                "-\t\t\tArrays.asList(Serializable.class, Externalizable.class, Cloneable.class, Comparable.class));",
                "-",
                " \t/**",
                "@@ -104,6 +101,12 @@ public abstract class ClassUtils {",
                " \t/**",
                "-\t * Map with common \"java.lang\" class name as key and corresponding Class as value.",
                "+\t * Map with common Java language class name as key and corresponding Class as value.",
                " \t * Primarily for efficient deserialization of remote invocations.",
                " \t */",
                "-\tprivate static final Map<String, Class<?>> commonClassCache = new HashMap<>(32);",
                "+\tprivate static final Map<String, Class<?>> commonClassCache = new HashMap<>(64);",
                "+",
                "+\t/**",
                "+\t * Common Java language interfaces which are supposed to be ignored",
                "+\t * when searching for 'primary' user-level interfaces.",
                "+\t */",
                "+\tprivate static final Set<Class<?>> javaLanguageInterfaces;",
                "@@ -137,5 +140,12 @@ public abstract class ClassUtils {",
                " \t\tregisterCommonClasses(Number.class, Number[].class, String.class, String[].class,",
                "-\t\t\t\tObject.class, Object[].class, Class.class, Class[].class);",
                "+\t\t\t\tClass.class, Class[].class, Object.class, Object[].class);",
                " \t\tregisterCommonClasses(Throwable.class, Exception.class, RuntimeException.class,",
                " \t\t\t\tError.class, StackTraceElement.class, StackTraceElement[].class);",
                "+\t\tregisterCommonClasses(Enum.class, Iterable.class, Iterator.class, Enumeration.class,",
                "+\t\t\t\tCollection.class, List.class, Set.class, Map.class, Map.Entry.class, Optional.class);",
                "+",
                "+\t\tClass<?>[] javaLanguageInterfaceArray = {Serializable.class, Externalizable.class,",
                "+\t\t\t\tCloseable.class, AutoCloseable.class, Cloneable.class, Comparable.class};",
                "+\t\tregisterCommonClasses(javaLanguageInterfaceArray);",
                "+\t\tjavaLanguageInterfaces = new HashSet<>(Arrays.asList(javaLanguageInterfaceArray));",
                " \t}",
                "@@ -1237,6 +1247,6 @@ public abstract class ClassUtils {",
                " \t * Determine whether the given interface is a common Java language interface:",
                "-\t * {@link Serializable}, {@link Externalizable}, {@link Cloneable}, {@link Comparable}",
                "-\t * - all of which can be ignored when looking for 'primary' user-level interfaces.",
                "-\t * Common characteristics: no service-level operations, no bean property methods,",
                "-\t * no default methods.",
                "+\t * {@link Serializable}, {@link Externalizable}, {@link Closeable}, {@link AutoCloseable},",
                "+\t * {@link Cloneable}, {@link Comparable} - all of which can be ignored when looking",
                "+\t * for 'primary' user-level interfaces. Common characteristics: no service-level",
                "+\t * operations, no bean property methods, no default methods.",
                " \t * @param ifc the interface to check"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/ClassUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5d0700b9360399802bf929a0b7b845cb6bb73813",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522750863,
            "hunks": 1,
            "message": "AnnotationUtils.annotatedInterfaceCache available as deprecated field Issue: SPR-16675",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index 26ac630d24..ea3facd7c9 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -128,2 +128,5 @@ public abstract class AnnotationUtils {",
                "+\t@Deprecated  // just here for older tool versions trying to reflectively clear the cache",
                "+\tprivate static final Map<Class<?>, ?> annotatedInterfaceCache = annotatedBaseTypeCache;",
                "+",
                " \tprivate static final Map<Class<? extends Annotation>, Boolean> synthesizableCache ="
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "99399084a6b1960d152ee46aa59da5304a019439",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521459769,
            "hunks": 5,
            "message": "Consistent Future check (even if typically encountering RunnableFuture) Issue: SPR-16607",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java",
                "index 84f587e6bf..4f2c96e367 100644",
                "--- a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java",
                "+++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java",
                "@@ -19,2 +19,3 @@ package org.springframework.scheduling.concurrent;",
                " import java.util.concurrent.ExecutorService;",
                "+import java.util.concurrent.Future;",
                " import java.util.concurrent.RejectedExecutionHandler;",
                "@@ -34,5 +35,5 @@ import org.springframework.lang.Nullable;",
                " /**",
                "- * Base class for classes that are setting up a",
                "- * {@code java.util.concurrent.ExecutorService}",
                "- * (typically a {@link java.util.concurrent.ThreadPoolExecutor}).",
                "+ * Base class for setting up a {@link java.util.concurrent.ExecutorService}",
                "+ * (typically a {@link java.util.concurrent.ThreadPoolExecutor} or",
                "+ * {@link java.util.concurrent.ScheduledThreadPoolExecutor}).",
                "  * Defines common configuration settings and common lifecycle handling.",
                "@@ -44,2 +45,3 @@ import org.springframework.lang.Nullable;",
                "  * @see java.util.concurrent.ThreadPoolExecutor",
                "+ * @see java.util.concurrent.ScheduledThreadPoolExecutor",
                "  */",
                "@@ -223,3 +225,3 @@ public abstract class ExecutorConfigurationSupport extends CustomizableThreadFac",
                " \t * as returned from {@link ExecutorService#shutdownNow()}.",
                "-\t * @param task the task to cancel (potentially a {@link RunnableFuture})",
                "+\t * @param task the task to cancel (typically a {@link RunnableFuture})",
                " \t * @since 5.0.5",
                "@@ -229,4 +231,4 @@ public abstract class ExecutorConfigurationSupport extends CustomizableThreadFac",
                " \tprotected void cancelRemainingTask(Runnable task) {",
                "-\t\tif (task instanceof RunnableFuture) {",
                "-\t\t\t((RunnableFuture<?>) task).cancel(true);",
                "+\t\tif (task instanceof Future) {",
                "+\t\t\t((Future<?>) task).cancel(true);",
                " \t\t}"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3c1adf7f6af0dff9bda74f40dabe8cf428a62003",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521420322,
            "hunks": 17,
            "message": "ThreadPoolTaskExecutor/Scheduler cancels remaining Futures on shutdown Issue: SPR-16607",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java",
                "index 039353e645..84f587e6bf 100644",
                "--- a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java",
                "+++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -20,2 +20,3 @@ import java.util.concurrent.ExecutorService;",
                " import java.util.concurrent.RejectedExecutionHandler;",
                "+import java.util.concurrent.RunnableFuture;",
                " import java.util.concurrent.ThreadFactory;",
                "@@ -211,3 +212,5 @@ public abstract class ExecutorConfigurationSupport extends CustomizableThreadFac",
                " \t\t\telse {",
                "-\t\t\t\tthis.executor.shutdownNow();",
                "+\t\t\t\tfor (Runnable remainingTask : this.executor.shutdownNow()) {",
                "+\t\t\t\t\tcancelRemainingTask(remainingTask);",
                "+\t\t\t\t}",
                " \t\t\t}",
                "@@ -217,2 +220,16 @@ public abstract class ExecutorConfigurationSupport extends CustomizableThreadFac",
                "+\t/**",
                "+\t * Cancel the given remaining task which never commended execution,",
                "+\t * as returned from {@link ExecutorService#shutdownNow()}.",
                "+\t * @param task the task to cancel (potentially a {@link RunnableFuture})",
                "+\t * @since 5.0.5",
                "+\t * @see #shutdown()",
                "+\t * @see RunnableFuture#cancel(boolean)",
                "+\t */",
                "+\tprotected void cancelRemainingTask(Runnable task) {",
                "+\t\tif (task instanceof RunnableFuture) {",
                "+\t\t\t((RunnableFuture<?>) task).cancel(true);",
                "+\t\t}",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.java b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.java",
                "index 4837b68d90..6b04314f69 100644",
                "--- a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.java",
                "+++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,2 +18,3 @@ package org.springframework.scheduling.concurrent;",
                "+import java.util.Map;",
                " import java.util.concurrent.BlockingQueue;",
                "@@ -37,2 +38,3 @@ import org.springframework.scheduling.SchedulingTaskExecutor;",
                " import org.springframework.util.Assert;",
                "+import org.springframework.util.ConcurrentReferenceHashMap;",
                " import org.springframework.util.concurrent.ListenableFuture;",
                "@@ -92,2 +94,6 @@ public class ThreadPoolTaskExecutor extends ExecutorConfigurationSupport",
                "+\t// Runnable decorator to user-level FutureTask, if different",
                "+\tprivate final Map<Runnable, Object> decoratedTaskMap =",
                "+\t\t\tnew ConcurrentReferenceHashMap<>(16, ConcurrentReferenceHashMap.ReferenceType.WEAK);",
                "+",
                "@@ -219,3 +225,7 @@ public class ThreadPoolTaskExecutor extends ExecutorConfigurationSupport",
                " \t\t\t\tpublic void execute(Runnable command) {",
                "-\t\t\t\t\tsuper.execute(taskDecorator.decorate(command));",
                "+\t\t\t\t\tRunnable decorated = taskDecorator.decorate(command);",
                "+\t\t\t\t\tif (decorated != command) {",
                "+\t\t\t\t\t\tdecoratedTaskMap.put(decorated, command);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\tsuper.execute(decorated);",
                " \t\t\t\t}",
                "@@ -355,2 +365,12 @@ public class ThreadPoolTaskExecutor extends ExecutorConfigurationSupport",
                "+\t@Override",
                "+\tprotected void cancelRemainingTask(Runnable task) {",
                "+\t\tsuper.cancelRemainingTask(task);",
                "+\t\t// Cancel associated user-level Future handle as well",
                "+\t\tObject original = this.decoratedTaskMap.get(task);",
                "+\t\tif (original instanceof Future) {",
                "+\t\t\t((Future<?>) original).cancel(true);",
                "+\t\t}",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java",
                "index aeb6a97348..ccddbf96dd 100644",
                "--- a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java",
                "+++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,2 +19,3 @@ package org.springframework.scheduling.concurrent;",
                " import java.util.Date;",
                "+import java.util.Map;",
                " import java.util.concurrent.Callable;",
                "@@ -39,2 +40,3 @@ import org.springframework.scheduling.support.TaskUtils;",
                " import org.springframework.util.Assert;",
                "+import org.springframework.util.ConcurrentReferenceHashMap;",
                " import org.springframework.util.ErrorHandler;",
                "@@ -69,2 +71,6 @@ public class ThreadPoolTaskScheduler extends ExecutorConfigurationSupport",
                "+\t// Underlying ScheduledFutureTask to user-level ListenableFuture handle, if any",
                "+\tprivate final Map<Object, ListenableFuture<?>> listenableFutureMap =",
                "+\t\t\tnew ConcurrentReferenceHashMap<>(16, ConcurrentReferenceHashMap.ReferenceType.WEAK);",
                "+",
                "@@ -255,5 +261,5 @@ public class ThreadPoolTaskScheduler extends ExecutorConfigurationSupport",
                " \t\ttry {",
                "-\t\t\tListenableFutureTask<Object> future = new ListenableFutureTask<>(task, null);",
                "-\t\t\texecutor.execute(errorHandlingTask(future, false));",
                "-\t\t\treturn future;",
                "+\t\t\tListenableFutureTask<Object> listenableFuture = new ListenableFutureTask<>(task, null);",
                "+\t\t\texecuteAndTrack(executor, listenableFuture);",
                "+\t\t\treturn listenableFuture;",
                " \t\t}",
                "@@ -268,5 +274,5 @@ public class ThreadPoolTaskScheduler extends ExecutorConfigurationSupport",
                " \t\ttry {",
                "-\t\t\tListenableFutureTask<T> future = new ListenableFutureTask<>(task);",
                "-\t\t\texecutor.execute(errorHandlingTask(future, false));",
                "-\t\t\treturn future;",
                "+\t\t\tListenableFutureTask<T> listenableFuture = new ListenableFutureTask<>(task);",
                "+\t\t\texecuteAndTrack(executor, listenableFuture);",
                "+\t\t\treturn listenableFuture;",
                " \t\t}",
                "@@ -277,2 +283,19 @@ public class ThreadPoolTaskScheduler extends ExecutorConfigurationSupport",
                "+\tprivate void executeAndTrack(ExecutorService executor, ListenableFutureTask<?> listenableFuture) {",
                "+\t\tFuture<?> scheduledFuture = executor.submit(errorHandlingTask(listenableFuture, false));",
                "+\t\tthis.listenableFutureMap.put(scheduledFuture, listenableFuture);",
                "+\t\tlistenableFuture.addCallback(result -> listenableFutureMap.remove(scheduledFuture),",
                "+\t\t\t\tex -> listenableFutureMap.remove(scheduledFuture));",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected void cancelRemainingTask(Runnable task) {",
                "+\t\tsuper.cancelRemainingTask(task);",
                "+\t\t// Cancel associated user-level ListenableFuture handle as well",
                "+\t\tListenableFuture<?> listenableFuture = this.listenableFutureMap.get(task);",
                "+\t\tif (listenableFuture != null) {",
                "+\t\t\tlistenableFuture.cancel(true);",
                "+\t\t}",
                "+\t}",
                "+",
                " \t@Override"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java",
                "spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.java",
                "spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5fb4c8254f2c7ddf29c531d34960b3c2e0dcbb78",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522339010,
            "hunks": 1,
            "message": "Fix inclusion of license in jar",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 94d792f150..05d84c74bb 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -197,3 +197,3 @@ configure(subprojects - project(\":spring-build-src\")) { subproject ->",
                "-\t\tfrom(\"${rootProject.projectDir}/src/dist\") {",
                "+\t\tfrom(\"${rootProject.projectDir}/src/docs/dist\") {",
                " \t\t\tinclude \"license.txt\""
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "97735e4ffcc9039f67a4c6d97eb9cdc4260bd2d3",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522534026,
            "hunks": 2,
            "message": "Proper references to JDK 9+ (including JDK 10) in build comments",
            "diff": [
                "diff --git a/spring-aspects/spring-aspects.gradle b/spring-aspects/spring-aspects.gradle",
                "index 2203096d78..269b0a8f20 100644",
                "--- a/spring-aspects/spring-aspects.gradle",
                "+++ b/spring-aspects/spring-aspects.gradle",
                "@@ -2,4 +2,3 @@ description = \"Spring Aspects\"",
                "-// redefine the compileJava and compileTestJava tasks in order to",
                "-// compile sources with ajc instead of javac",
                "+// Redefine the compileJava and compileTestJava tasks in order to compile sources with ajc instead of javac",
                "@@ -83,4 +82,4 @@ dependencies {",
                " \taspects(project(\":spring-orm\"))",
                "-\tajc(\"org.aspectj:aspectjtools:1.9.0.RC2\")  // for JDK 9 build compatibility",
                "-\trt(\"org.aspectj:aspectjrt:1.9.0.RC2\")  // for JDK 9 build compatibility",
                "+\tajc(\"org.aspectj:aspectjtools:1.9.0.RC2\")  // for JDK 9+ build compatibility",
                "+\trt(\"org.aspectj:aspectjrt:1.9.0.RC2\")  // for JDK 9+ build compatibility",
                " \tcompile(\"org.aspectj:aspectjweaver:${aspectjVersion}\")  // for Maven POM exposure"
            ],
            "changed_files": [
                "spring-aspects/spring-aspects.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "129c05bcff4bcd99b3139577debb2391a1dfe099",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522501922,
            "hunks": 26,
            "message": "Comprehensively cache annotated methods for interfaces and superclasses Issue: SPR-16675",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "index 41b8303241..9e86e3f464 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "@@ -1052,13 +1052,44 @@ public class AnnotatedElementUtils {",
                " \t\t\t\tAnnotation[] annotations = element.getDeclaredAnnotations();",
                "-\t\t\t\tList<T> aggregatedResults = (processor.aggregates() ? new ArrayList<>() : null);",
                "-",
                "-\t\t\t\t// Search in local annotations",
                "-\t\t\t\tfor (Annotation annotation : annotations) {",
                "-\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "-\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "-\t\t\t\t\t\tif (currentAnnotationType == annotationType ||",
                "-\t\t\t\t\t\t\t\tcurrentAnnotationType.getName().equals(annotationName) ||",
                "-\t\t\t\t\t\t\t\tprocessor.alwaysProcesses()) {",
                "-\t\t\t\t\t\t\tT result = processor.process(element, annotation, metaDepth);",
                "+\t\t\t\tif (annotations.length > 0) {",
                "+\t\t\t\t\tList<T> aggregatedResults = (processor.aggregates() ? new ArrayList<>() : null);",
                "+",
                "+\t\t\t\t\t// Search in local annotations",
                "+\t\t\t\t\tfor (Annotation annotation : annotations) {",
                "+\t\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "+\t\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "+\t\t\t\t\t\t\tif (currentAnnotationType == annotationType ||",
                "+\t\t\t\t\t\t\t\t\tcurrentAnnotationType.getName().equals(annotationName) ||",
                "+\t\t\t\t\t\t\t\t\tprocessor.alwaysProcesses()) {",
                "+\t\t\t\t\t\t\t\tT result = processor.process(element, annotation, metaDepth);",
                "+\t\t\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\t\t\tif (aggregatedResults != null && metaDepth == 0) {",
                "+\t\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "+\t\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\t\telse {",
                "+\t\t\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t// Repeatable annotations in container?",
                "+\t\t\t\t\t\t\telse if (currentAnnotationType == containerType) {",
                "+\t\t\t\t\t\t\t\tfor (Annotation contained : getRawAnnotationsFromContainer(element, annotation)) {",
                "+\t\t\t\t\t\t\t\t\tT result = processor.process(element, contained, metaDepth);",
                "+\t\t\t\t\t\t\t\t\tif (aggregatedResults != null && result != null) {",
                "+\t\t\t\t\t\t\t\t\t\t// No need to post-process since repeatable annotations within a",
                "+\t\t\t\t\t\t\t\t\t\t// container cannot be composed annotations.",
                "+\t\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "+\t\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                "+",
                "+\t\t\t\t\t// Recursively search in meta-annotations",
                "+\t\t\t\t\tfor (Annotation annotation : annotations) {",
                "+\t\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "+\t\t\t\t\t\tif (hasSearchableMetaAnnotations(currentAnnotationType, annotationType, annotationName)) {",
                "+\t\t\t\t\t\t\tT result = searchWithFindSemantics(currentAnnotationType, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth + 1);",
                " \t\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\t\tprocessor.postProcess(currentAnnotationType, annotation, result);",
                " \t\t\t\t\t\t\t\tif (aggregatedResults != null && metaDepth == 0) {",
                "@@ -1071,31 +1102,7 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t\t}",
                "-\t\t\t\t\t\t// Repeatable annotations in container?",
                "-\t\t\t\t\t\telse if (currentAnnotationType == containerType) {",
                "-\t\t\t\t\t\t\tfor (Annotation contained : getRawAnnotationsFromContainer(element, annotation)) {",
                "-\t\t\t\t\t\t\t\tT result = processor.process(element, contained, metaDepth);",
                "-\t\t\t\t\t\t\t\tif (aggregatedResults != null && result != null) {",
                "-\t\t\t\t\t\t\t\t\t// No need to post-process since repeatable annotations within a",
                "-\t\t\t\t\t\t\t\t\t// container cannot be composed annotations.",
                "-\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "-\t\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t}",
                " \t\t\t\t\t}",
                "-\t\t\t\t}",
                "-\t\t\t\t// Recursively search in meta-annotations",
                "-\t\t\t\tfor (Annotation annotation : annotations) {",
                "-\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "-\t\t\t\t\tif (hasSearchableMetaAnnotations(currentAnnotationType, annotationType, annotationName)) {",
                "-\t\t\t\t\t\tT result = searchWithFindSemantics(currentAnnotationType, annotationType, annotationName,",
                "-\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth + 1);",
                "-\t\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\t\tprocessor.postProcess(currentAnnotationType, annotation, result);",
                "-\t\t\t\t\t\t\tif (aggregatedResults != null && metaDepth == 0) {",
                "-\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\telse {",
                "-\t\t\t\t\t\t\t\treturn result;",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t}",
                "+\t\t\t\t\tif (!CollectionUtils.isEmpty(aggregatedResults)) {",
                "+\t\t\t\t\t\t// Prepend to support top-down ordering within class hierarchies",
                "+\t\t\t\t\t\tprocessor.getAggregatedResults().addAll(0, aggregatedResults);",
                " \t\t\t\t\t}",
                "@@ -1103,7 +1110,2 @@ public class AnnotatedElementUtils {",
                "-\t\t\t\tif (!CollectionUtils.isEmpty(aggregatedResults)) {",
                "-\t\t\t\t\t// Prepend to support top-down ordering within class hierarchies",
                "-\t\t\t\t\tprocessor.getAggregatedResults().addAll(0, aggregatedResults);",
                "-\t\t\t\t}",
                "-",
                " \t\t\t\tif (element instanceof Method) {",
                "@@ -1125,4 +1127,4 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tif (ifcs.length > 0) {",
                "-\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\t\tprocessor, visited, metaDepth, ifcs);",
                "+\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth, ifcs);",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -1139,19 +1141,19 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t\t}",
                "-",
                "-\t\t\t\t\t\ttry {",
                "-\t\t\t\t\t\t\tMethod equivalentMethod = clazz.getDeclaredMethod(method.getName(), method.getParameterTypes());",
                "-\t\t\t\t\t\t\tMethod resolvedEquivalentMethod = BridgeMethodResolver.findBridgedMethod(equivalentMethod);",
                "-\t\t\t\t\t\t\tresult = searchWithFindSemantics(resolvedEquivalentMethod, annotationType, annotationName,",
                "-\t\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                "-\t\t\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\tSet<Method> annotatedMethods = AnnotationUtils.getAnnotatedMethodsInBaseType(clazz);",
                "+\t\t\t\t\t\tif (!annotatedMethods.isEmpty()) {",
                "+\t\t\t\t\t\t\tfor (Method annotatedMethod : annotatedMethods) {",
                "+\t\t\t\t\t\t\t\tif (annotatedMethod.getName().equals(method.getName()) &&",
                "+\t\t\t\t\t\t\t\t\t\tArrays.equals(annotatedMethod.getParameterTypes(), method.getParameterTypes())) {",
                "+\t\t\t\t\t\t\t\t\tMethod resolvedSuperMethod = BridgeMethodResolver.findBridgedMethod(annotatedMethod);",
                "+\t\t\t\t\t\t\t\t\tresult = searchWithFindSemantics(resolvedSuperMethod, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                "+\t\t\t\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t}",
                "-\t\t\t\t\t\tcatch (NoSuchMethodException ex) {",
                "-\t\t\t\t\t\t\t// No equivalent method found",
                "-\t\t\t\t\t\t}",
                "-",
                " \t\t\t\t\t\t// Search on interfaces declared on superclass",
                "-\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName, containerType, processor,",
                "-\t\t\t\t\t\t\t\tvisited, metaDepth, clazz.getInterfaces());",
                "+\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth, clazz.getInterfaces());",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -1166,4 +1168,4 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tfor (Class<?> ifc : clazz.getInterfaces()) {",
                "-\t\t\t\t\t\tT result = searchWithFindSemantics(ifc, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "+\t\t\t\t\t\tT result = searchWithFindSemantics(ifc, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -1176,4 +1178,4 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tif (superclass != null && Object.class != superclass) {",
                "-\t\t\t\t\t\tT result = searchWithFindSemantics(superclass, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "+\t\t\t\t\t\tT result = searchWithFindSemantics(superclass, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -1197,14 +1199,14 @@ public class AnnotatedElementUtils {",
                " \t\tfor (Class<?> ifc : ifcs) {",
                "-\t\t\tif (AnnotationUtils.isInterfaceWithAnnotatedMethods(ifc)) {",
                "-\t\t\t\ttry {",
                "-\t\t\t\t\tMethod equivalentMethod = ifc.getMethod(method.getName(), method.getParameterTypes());",
                "-\t\t\t\t\tT result = searchWithFindSemantics(equivalentMethod, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "-\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\treturn result;",
                "+\t\t\tSet<Method> annotatedMethods = AnnotationUtils.getAnnotatedMethodsInBaseType(ifc);",
                "+\t\t\tif (!annotatedMethods.isEmpty()) {",
                "+\t\t\t\tfor (Method annotatedMethod : annotatedMethods) {",
                "+\t\t\t\t\tif (annotatedMethod.getName().equals(method.getName()) &&",
                "+\t\t\t\t\t\t\tArrays.equals(annotatedMethod.getParameterTypes(), method.getParameterTypes())) {",
                "+\t\t\t\t\t\tT result = searchWithFindSemantics(annotatedMethod, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                "+\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}",
                " \t\t\t\t}",
                "-\t\t\t\tcatch (NoSuchMethodException ex) {",
                "-\t\t\t\t\t// Skip this interface - it doesn't have the method...",
                "-\t\t\t\t}",
                " \t\t\t}",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index 29b7d63c0a..238f11c407 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -28,2 +28,3 @@ import java.lang.reflect.Proxy;",
                " import java.util.ArrayList;",
                "+import java.util.Arrays;",
                " import java.util.Collections;",
                "@@ -124,3 +125,3 @@ public abstract class AnnotationUtils {",
                "-\tprivate static final Map<Class<?>, Boolean> annotatedInterfaceCache =",
                "+\tprivate static final Map<Class<?>, Set<Method>> annotatedBaseTypeCache =",
                " \t\t\tnew ConcurrentReferenceHashMap<>(256);",
                "@@ -541,3 +542,2 @@ public abstract class AnnotationUtils {",
                " \t\t\tresult = findAnnotation((AnnotatedElement) resolvedMethod, annotationType);",
                "-",
                " \t\t\tif (result == null) {",
                "@@ -576,14 +576,13 @@ public abstract class AnnotationUtils {",
                " \tprivate static <A extends Annotation> A searchOnInterfaces(Method method, Class<A> annotationType, Class<?>... ifcs) {",
                "-\t\tA annotation = null;",
                " \t\tfor (Class<?> ifc : ifcs) {",
                "-\t\t\tif (isInterfaceWithAnnotatedMethods(ifc)) {",
                "-\t\t\t\ttry {",
                "-\t\t\t\t\tMethod equivalentMethod = ifc.getMethod(method.getName(), method.getParameterTypes());",
                "-\t\t\t\t\tannotation = getAnnotation(equivalentMethod, annotationType);",
                "-\t\t\t\t}",
                "-\t\t\t\tcatch (NoSuchMethodException ex) {",
                "-\t\t\t\t\t// Skip this interface - it doesn't have the method...",
                "-\t\t\t\t}",
                "-\t\t\t\tif (annotation != null) {",
                "-\t\t\t\t\tbreak;",
                "+\t\t\tSet<Method> annotatedMethods = getAnnotatedMethodsInBaseType(ifc);",
                "+\t\t\tif (!annotatedMethods.isEmpty()) {",
                "+\t\t\t\tfor (Method annotatedMethod : annotatedMethods) {",
                "+\t\t\t\t\tif (annotatedMethod.getName().equals(method.getName()) &&",
                "+\t\t\t\t\t\t\tArrays.equals(annotatedMethod.getParameterTypes(), method.getParameterTypes())) {",
                "+\t\t\t\t\t\tA annotation = getAnnotation(annotatedMethod, annotationType);",
                "+\t\t\t\t\t\tif (annotation != null) {",
                "+\t\t\t\t\t\t\treturn annotation;",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                " \t\t\t\t}",
                "@@ -591,21 +590,22 @@ public abstract class AnnotationUtils {",
                " \t\t}",
                "-\t\treturn annotation;",
                "+\t\treturn null;",
                " \t}",
                "-\tstatic boolean isInterfaceWithAnnotatedMethods(Class<?> ifc) {",
                "-\t\tif (ClassUtils.isJavaLanguageInterface(ifc)) {",
                "-\t\t\treturn false;",
                "+\tstatic Set<Method> getAnnotatedMethodsInBaseType(Class<?> baseType) {",
                "+\t\tif (ClassUtils.isJavaLanguageInterface(baseType)) {",
                "+\t\t\treturn Collections.emptySet();",
                " \t\t}",
                "-\t\tBoolean found = annotatedInterfaceCache.get(ifc);",
                "-\t\tif (found != null) {",
                "-\t\t\treturn found;",
                "+\t\tSet<Method> annotatedMethods = annotatedBaseTypeCache.get(baseType);",
                "+\t\tif (annotatedMethods != null) {",
                "+\t\t\treturn annotatedMethods;",
                " \t\t}",
                "-\t\tfound = Boolean.FALSE;",
                "-\t\tfor (Method ifcMethod : ifc.getMethods()) {",
                "+\t\tMethod[] methods = (baseType.isInterface() ? baseType.getMethods() : baseType.getDeclaredMethods());",
                "+\t\tfor (Method baseMethod : methods) {",
                " \t\t\ttry {",
                "-\t\t\t\tAnnotation[] anns = ifcMethod.getAnnotations();",
                "-\t\t\t\tif (anns.length > 1 || (anns.length == 1 && anns[0].annotationType() != Nullable.class)) {",
                "-\t\t\t\t\tfound = Boolean.TRUE;",
                "-\t\t\t\t\tbreak;",
                "+\t\t\t\tif (hasSearchableAnnotations(baseMethod)) {",
                "+\t\t\t\t\tif (annotatedMethods == null) {",
                "+\t\t\t\t\t\tannotatedMethods = new HashSet<>();",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\tannotatedMethods.add(baseMethod);",
                " \t\t\t\t}",
                "@@ -613,7 +613,22 @@ public abstract class AnnotationUtils {",
                " \t\t\tcatch (Throwable ex) {",
                "-\t\t\t\thandleIntrospectionFailure(ifcMethod, ex);",
                "+\t\t\t\thandleIntrospectionFailure(baseMethod, ex);",
                " \t\t\t}",
                " \t\t}",
                "-\t\tannotatedInterfaceCache.put(ifc, found);",
                "-\t\treturn found;",
                "+\t\tif (annotatedMethods == null) {",
                "+\t\t\tannotatedMethods = Collections.emptySet();",
                "+\t\t}",
                "+\t\tannotatedBaseTypeCache.put(baseType, annotatedMethods);",
                "+\t\treturn annotatedMethods;",
                "+\t}",
                "+",
                "+\tprivate static boolean hasSearchableAnnotations(Method ifcMethod) {",
                "+\t\tAnnotation[] anns = ifcMethod.getAnnotations();",
                "+\t\tif (anns.length == 0) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                "+\t\tif (anns.length == 1) {",
                "+\t\t\tClass<?> annType = anns[0].annotationType();",
                "+\t\t\treturn (annType != Nullable.class && annType != Deprecated.class);",
                "+\t\t}",
                "+\t\treturn true;",
                " \t}",
                "@@ -1877,2 +1892,16 @@ public abstract class AnnotationUtils {",
                "+\t/**",
                "+\t * Clear the internal annotation metadata cache.",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tpublic static void clearCache() {",
                "+\t\tfindAnnotationCache.clear();",
                "+\t\tmetaPresentCache.clear();",
                "+\t\tannotatedBaseTypeCache.clear();",
                "+\t\tsynthesizableCache.clear();",
                "+\t\tattributeAliasesCache.clear();",
                "+\t\tattributeMethodsCache.clear();",
                "+\t\taliasDescriptorCache.clear();",
                "+\t}",
                "+"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b1295d0499b195b4f0c597e53d3b3eea272bb8b6",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520584785,
            "hunks": 3,
            "message": "TransactionTemplate equality for same transaction manager only Issue: SPR-16572 (cherry picked from commit df80614)",
            "diff": [
                "diff --git a/spring-tx/src/main/java/org/springframework/transaction/support/DefaultTransactionDefinition.java b/spring-tx/src/main/java/org/springframework/transaction/support/DefaultTransactionDefinition.java",
                "index 98788fdc29..6cf682abd2 100644",
                "--- a/spring-tx/src/main/java/org/springframework/transaction/support/DefaultTransactionDefinition.java",
                "+++ b/spring-tx/src/main/java/org/springframework/transaction/support/DefaultTransactionDefinition.java",
                "@@ -258,3 +258,3 @@ public class DefaultTransactionDefinition implements TransactionDefinition, Seri",
                " \tpublic boolean equals(Object other) {",
                "-\t\treturn (other instanceof TransactionDefinition && toString().equals(other.toString()));",
                "+\t\treturn (this == other || (other instanceof TransactionDefinition && toString().equals(other.toString())));",
                " \t}",
                "diff --git a/spring-tx/src/main/java/org/springframework/transaction/support/TransactionTemplate.java b/spring-tx/src/main/java/org/springframework/transaction/support/TransactionTemplate.java",
                "index b2fd8ce019..9afdf8aec9 100644",
                "--- a/spring-tx/src/main/java/org/springframework/transaction/support/TransactionTemplate.java",
                "+++ b/spring-tx/src/main/java/org/springframework/transaction/support/TransactionTemplate.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -180,2 +180,9 @@ public class TransactionTemplate extends DefaultTransactionDefinition",
                "+",
                "+\t@Override",
                "+\tpublic boolean equals(Object other) {",
                "+\t\treturn (this == other || (super.equals(other) && (!(other instanceof TransactionTemplate) ||",
                "+\t\t\t\tgetTransactionManager() == ((TransactionTemplate) other).getTransactionManager())));",
                "+\t}",
                "+",
                " }"
            ],
            "changed_files": [
                "spring-tx/src/main/java/org/springframework/transaction/support/DefaultTransactionDefinition.java",
                "spring-tx/src/main/java/org/springframework/transaction/support/TransactionTemplate.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d1a0b8d53f92ec410d51bdd89aee979107541bd4",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522227833,
            "hunks": 1,
            "message": "Clarify the format supported by @PropertySource Issue: SPR-16563",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java b/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java",
                "index 51ca200ebe..e2bf4129e7 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java",
                "@@ -175,4 +175,5 @@ public @interface PropertySource {",
                " \t * Indicate the resource location(s) of the properties file to be loaded.",
                "-\t * For example, {@code \"classpath:/com/myco/app.properties\"} or",
                "-\t * {@code \"file:/path/to/file\"}.",
                "+\t * <p>Both traditional and XML-based properties file formats are supported",
                "+\t * &mdash; for example, {@code \"classpath:/com/myco/app.properties\"}",
                "+\t * or {@code \"file:/path/to/file.xml\"}.",
                " \t * <p>Resource location wildcards (e.g. *&#42;/*.properties) are not permitted;"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "fdd756ce8a683927c058c4272cd0f2477fb29675",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521488394,
            "hunks": 1,
            "message": "Upgrade to Log4J 2.11",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index bc1b27238c..37d091da35 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -53,3 +53,3 @@ configure(allprojects) { project ->",
                " \text.kotlinVersion        = \"1.2.30\"",
                "-\text.log4jVersion         = \"2.10.0\"",
                "+\text.log4jVersion         = \"2.11.0\"",
                " \text.nettyVersion         = \"4.1.22.Final\""
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "19293b9847783cde9e202dde139fb29696ede703",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521211222,
            "hunks": 11,
            "message": "SimpleEvaluationContext builder Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "index 3bcbb6d83e..03a543a1ae 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "@@ -19,2 +19,3 @@ package org.springframework.expression.spel.support;",
                " import java.util.ArrayList;",
                "+import java.util.Arrays;",
                " import java.util.Collections;",
                "@@ -40,11 +41,22 @@ import org.springframework.lang.Nullable;",
                "  * A basic implementation of {@link EvaluationContext} that focuses on a subset",
                "- * of essential SpEL features and configuration options, and relies on default",
                "- * strategies otherwise.",
                "+ * of essential SpEL features and configuration options.",
                "  *",
                "- * <p>In many cases, the full extent of the SpEL is not",
                "+ * <p>In many cases, the full extent of the SpEL language is not",
                "  * required and should be meaningfully restricted. Examples include but are not",
                "  * limited to data binding expressions, property-based filters, and others. To",
                "- * that effect, {@code SimpleEvaluationContext} supports only a subset of the",
                "- * SpEL language syntax that excludes references to Java types, constructors,",
                "- * and bean references.",
                "+ * that effect, {@code SimpleEvaluationContext} is tailored to support only a",
                "+ * subset of the SpEL language syntax, e.g. excluding references to Java types,",
                "+ * constructors, and bean references.",
                "+ *",
                "+ * <p>When creating {@code SimpleEvaluationContext} you need to choose the level",
                "+ * of support you need to deal with properties and methods in SpEL expressions.",
                "+ * By default, {@link SimpleEvaluationContext#create()} enables only read access",
                "+ * to properties via {@link DataBindingPropertyAccessor}. Alternatively, use",
                "+ * {@link SimpleEvaluationContext#builder()} to configure the exact level of",
                "+ * support needed, targeting one of, or some combination of the following:",
                "+ * <ul>",
                "+ * <li>Custom {@code PropertyAccessor} only (no reflection).</li>",
                "+ * <li>Data binding properties for read-only access.</li>",
                "+ * <li>Data binding properties for read and write.</li>",
                "+ * </ul>",
                "  *",
                "@@ -58,2 +70,4 @@ import org.springframework.lang.Nullable;",
                "  * @since 4.3.15",
                "+ * @see StandardEvaluationContext",
                "+ * @see DataBindingPropertyAccessor",
                "  */",
                "@@ -68,7 +82,5 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\tprivate final List<ConstructorResolver> constructorResolvers =",
                "-\t\t\tCollections.singletonList(new ReflectiveConstructorResolver());",
                "+\tprivate final List<ConstructorResolver> constructorResolvers = Collections.emptyList();",
                "-\tprivate final List<MethodResolver> methodResolvers =",
                "-\t\t\tCollections.singletonList(new ReflectiveMethodResolver());",
                "+\tprivate final List<MethodResolver> methodResolvers = Collections.emptyList();",
                "@@ -83,8 +95,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\tpublic SimpleEvaluationContext() {",
                "-\t\tthis(null, null);",
                "-\t}",
                "-",
                "-\tpublic SimpleEvaluationContext(@Nullable List<PropertyAccessor> accessors, @Nullable TypeConverter converter) {",
                "-\t\tthis.propertyAccessors = initPropertyAccessors(accessors);",
                "+\tprivate SimpleEvaluationContext(List<PropertyAccessor> accessors, @Nullable TypeConverter converter) {",
                "+\t\tthis.propertyAccessors = Collections.unmodifiableList(new ArrayList<>(accessors));",
                " \t\tthis.typeConverter = converter != null ? converter : new StandardTypeConverter();",
                "@@ -93,11 +101,2 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\tprivate static List<PropertyAccessor> initPropertyAccessors(@Nullable List<PropertyAccessor> accessors) {",
                "-\t\tif (accessors == null) {",
                "-\t\t\taccessors = new ArrayList<>(5);",
                "-\t\t\taccessors.add(new ReflectivePropertyAccessor());",
                "-\t\t}",
                "-\t\treturn accessors;",
                "-\t}",
                "-",
                "-",
                " \t/**",
                "@@ -120,3 +119,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * Return a single {@link ReflectiveConstructorResolver}.",
                "+\t * Return an empty list, always, since this context does not support the",
                "+\t * use of type references.",
                " \t */",
                "@@ -192,2 +192,74 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "+",
                "+\t/**",
                "+\t * Create a {@code SimpleEvaluationContext} with read-only access to",
                "+\t * public properties via {@link DataBindingPropertyAccessor}.",
                "+\t * <p>Effectively, a shortcut for:",
                "+\t * <pre class=\"code\">",
                "+\t * SimpleEvaluationContext context = SimpleEvaluationContext.builder()",
                "+\t *         .dataBindingPropertyAccessor(true)",
                "+\t *         .build();",
                "+\t * </pre>",
                "+\t * @see #builder()",
                "+\t */",
                "+\tpublic static SimpleEvaluationContext create() {",
                "+\t\treturn new Builder().dataBindingPropertyAccessor(true).build();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Return a builder to create a {@code SimpleEvaluationContext}.",
                "+\t * @see #create()",
                "+\t */",
                "+\tpublic static Builder builder() {",
                "+\t\treturn new Builder();",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Builder for {@code SimpleEvaluationContext}.",
                "+\t */",
                "+\tpublic static class Builder {",
                "+",
                "+\t\tprivate final List<PropertyAccessor> propertyAccessors = new ArrayList<>();",
                "+",
                "+\t\t@Nullable",
                "+\t\tprivate TypeConverter typeConverter;",
                "+",
                "+",
                "+\t\t/**",
                "+\t\t * Enable access to public properties for data binding purposes.",
                "+\t\t * <p>Effectively, a shortcut for",
                "+\t\t * {@code propertyAccessor(new DataBindingPropertyAccessor(boolean))}.",
                "+\t\t * @param readOnlyAccess whether to read-only access to properties,",
                "+\t\t * {@code \"true\"}, or read and write, {@code \"false\"}.",
                "+\t\t */",
                "+\t\tpublic Builder dataBindingPropertyAccessor(boolean readOnlyAccess) {",
                "+\t\t\treturn propertyAccessor(readOnlyAccess ?",
                "+\t\t\t\t\tDataBindingPropertyAccessor.forReadOnlyAccess() :",
                "+\t\t\t\t\tDataBindingPropertyAccessor.forReadWriteAccess());",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Register a custom accessor for properties in expressions.",
                "+\t\t * <p>By default, the builder does not enable property access.",
                "+\t\t */",
                "+\t\tpublic Builder propertyAccessor(PropertyAccessor... accessors) {",
                "+\t\t\tthis.propertyAccessors.addAll(Arrays.asList(accessors));",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Register a custom {@link TypeConverter}.",
                "+\t\t * <p>By default {@link StandardTypeConverter} is used.",
                "+\t\t */",
                "+\t\tpublic Builder typeConverter(TypeConverter converter) {",
                "+\t\t\tthis.typeConverter = converter;",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\tpublic SimpleEvaluationContext build() {",
                "+\t\t\treturn new SimpleEvaluationContext(this.propertyAccessors, this.typeConverter);",
                "+\t\t}",
                "+\t}",
                "+",
                " }",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "index 421519627e..abfd18313c 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "@@ -49,2 +49,3 @@ import org.springframework.util.Assert;",
                "  * @since 3.0",
                "+ * @see SimpleEvaluationContext",
                "  * @see ReflectivePropertyAccessor"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ff377a383621e88ca3d164055da7c28746846ee2",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521817794,
            "hunks": 3,
            "message": "Minor typo in docs",
            "diff": [
                "diff --git a/src/asciidoc/core-expressions.adoc b/src/asciidoc/core-expressions.adoc",
                "index 8ae51a9688..bb68284dc0 100644",
                "--- a/src/asciidoc/core-expressions.adoc",
                "+++ b/src/asciidoc/core-expressions.adoc",
                "@@ -203,3 +203,3 @@ one of, or some combination of the following:",
                "-. Custom {@code PropertyAccessor} only (no reflection).",
                "+. Custom `PropertyAccessor` only (no reflection).",
                " . Data binding properties for read-only access.",
                "diff --git a/src/asciidoc/web-websocket.adoc b/src/asciidoc/web-websocket.adoc",
                "index 370407547e..46d36c5b30 100644",
                "--- a/src/asciidoc/web-websocket.adoc",
                "+++ b/src/asciidoc/web-websocket.adoc",
                "@@ -1470,3 +1470,3 @@ method with respect to mapping and input arguments. For example you can combine",
                " type-level `@MessageMapping` to express a shared destination prefix, and you can use the",
                "-same <<websocket-stomp-message-mapping,method arguments>> as on any @MessageMapping` method.",
                "+same <<websocket-stomp-message-mapping,method arguments>> as any @MessageMapping` method.",
                "@@ -1508,3 +1508,4 @@ itself, or through a method argument if you want to get access to the exception",
                " `@MessageExceptionHandler` methods support flexible method signatures and support the same",
                "-method argument types and return values as <<websocket-stomp-message-mapping>> methods.",
                "+method argument types and return values as",
                "+<<websocket-stomp-message-mapping,@MessageMapping>> methods."
            ],
            "changed_files": [
                "src/asciidoc/core-expressions.adoc",
                "src/asciidoc/web-websocket.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "666037ec5ccf768ebeba23604e3ac6c5235db033",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522580222,
            "hunks": 3,
            "message": "Pointcut checking directly against superclass in case of CGLIB subclass Issue: SPR-16675",
            "diff": [
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/support/AopUtils.java b/spring-aop/src/main/java/org/springframework/aop/support/AopUtils.java",
                "index f8974854a8..05e5327abe 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/support/AopUtils.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/support/AopUtils.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -239,3 +239,4 @@ public abstract class AopUtils {",
                " \t\tSet<Class<?>> classes = new LinkedHashSet<>(ClassUtils.getAllInterfacesForClassAsSet(targetClass));",
                "-\t\tclasses.add(targetClass);",
                "+\t\tClass<?> userClass = ClassUtils.getUserClass(targetClass);",
                "+\t\tclasses.add(userClass);",
                " \t\tfor (Class<?> clazz : classes) {",
                "@@ -244,4 +245,4 @@ public abstract class AopUtils {",
                " \t\t\t\tif ((introductionAwareMethodMatcher != null &&",
                "-\t\t\t\t\t\tintroductionAwareMethodMatcher.matches(method, targetClass, hasIntroductions)) ||",
                "-\t\t\t\t\t\tmethodMatcher.matches(method, targetClass)) {",
                "+\t\t\t\t\t\tintroductionAwareMethodMatcher.matches(method, userClass, hasIntroductions)) ||",
                "+\t\t\t\t\t\tmethodMatcher.matches(method, userClass)) {",
                " \t\t\t\t\treturn true;"
            ],
            "changed_files": [
                "spring-aop/src/main/java/org/springframework/aop/support/AopUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1bde920cce0eb6b7d0db60a604eb34d57747e1c7",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520529180,
            "hunks": 11,
            "message": "Quick access to volatile field (full synchronization only for lazy init) Issue: SPR-16570 (cherry picked from commit 50253f6)",
            "diff": [
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.java b/spring-aop/src/main/java/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.java",
                "index 3d0e9ae4f5..b070b628ea 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -62,3 +62,3 @@ public abstract class AbstractBeanFactoryBasedTargetSource implements TargetSour",
                " \t/** Class of the target */",
                "-\tprivate Class<?> targetClass;",
                "+\tprivate volatile Class<?> targetClass;",
                "@@ -122,17 +122,24 @@ public abstract class AbstractBeanFactoryBasedTargetSource implements TargetSour",
                " \t@Override",
                "-\tpublic synchronized Class<?> getTargetClass() {",
                "-\t\tif (this.targetClass == null && this.beanFactory != null) {",
                "-\t\t\t// Determine type of the target bean.",
                "-\t\t\tthis.targetClass = this.beanFactory.getType(this.targetBeanName);",
                "-\t\t\tif (this.targetClass == null) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Getting bean with name '\" + this.targetBeanName + \"' in order to determine type\");",
                "-\t\t\t\t}",
                "-\t\t\t\tObject beanInstance = this.beanFactory.getBean(this.targetBeanName);",
                "-\t\t\t\tif (beanInstance != null) {",
                "-\t\t\t\t\tthis.targetClass = beanInstance.getClass();",
                "+\tpublic Class<?> getTargetClass() {",
                "+\t\tClass<?> targetClass = this.targetClass;",
                "+\t\tif (targetClass != null) {",
                "+\t\t\treturn targetClass;",
                "+\t\t}",
                "+\t\tsynchronized (this) {",
                "+\t\t\t// Full check within synchronization, entering the BeanFactory interaction algorithm only once...",
                "+\t\t\ttargetClass = this.targetClass;",
                "+\t\t\tif (targetClass == null && this.beanFactory != null) {",
                "+\t\t\t\t// Determine type of the target bean.",
                "+\t\t\t\ttargetClass = this.beanFactory.getType(this.targetBeanName);",
                "+\t\t\t\tif (targetClass == null) {",
                "+\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\t\tlogger.trace(\"Getting bean with name '\" + this.targetBeanName + \"' for type determination\");",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\tObject beanInstance = this.beanFactory.getBean(this.targetBeanName);",
                "+\t\t\t\t\ttargetClass = beanInstance.getClass();",
                " \t\t\t\t}",
                "+\t\t\t\tthis.targetClass = targetClass;",
                " \t\t\t}",
                "+\t\t\treturn targetClass;",
                " \t\t}",
                "-\t\treturn this.targetClass;",
                " \t}",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcAccessor.java b/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcAccessor.java",
                "index f383a4d833..f43a447816 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcAccessor.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcAccessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2012 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -44,3 +44,3 @@ public abstract class JdbcAccessor implements InitializingBean {",
                "-\tprivate SQLExceptionTranslator exceptionTranslator;",
                "+\tprivate volatile SQLExceptionTranslator exceptionTranslator;",
                "@@ -94,13 +94,21 @@ public abstract class JdbcAccessor implements InitializingBean {",
                " \t */",
                "-\tpublic synchronized SQLExceptionTranslator getExceptionTranslator() {",
                "-\t\tif (this.exceptionTranslator == null) {",
                "-\t\t\tDataSource dataSource = getDataSource();",
                "-\t\t\tif (dataSource != null) {",
                "-\t\t\t\tthis.exceptionTranslator = new SQLErrorCodeSQLExceptionTranslator(dataSource);",
                "-\t\t\t}",
                "-\t\t\telse {",
                "-\t\t\t\tthis.exceptionTranslator = new SQLStateSQLExceptionTranslator();",
                "+\tpublic SQLExceptionTranslator getExceptionTranslator() {",
                "+\t\tSQLExceptionTranslator exceptionTranslator = this.exceptionTranslator;",
                "+\t\tif (exceptionTranslator != null) {",
                "+\t\t\treturn exceptionTranslator;",
                "+\t\t}",
                "+\t\tsynchronized (this) {",
                "+\t\t\texceptionTranslator = this.exceptionTranslator;",
                "+\t\t\tif (exceptionTranslator == null) {",
                "+\t\t\t\tDataSource dataSource = getDataSource();",
                "+\t\t\t\tif (dataSource != null) {",
                "+\t\t\t\t\texceptionTranslator = new SQLErrorCodeSQLExceptionTranslator(dataSource);",
                "+\t\t\t\t}",
                "+\t\t\t\telse {",
                "+\t\t\t\t\texceptionTranslator = new SQLStateSQLExceptionTranslator();",
                "+\t\t\t\t}",
                "+\t\t\t\tthis.exceptionTranslator = exceptionTranslator;",
                " \t\t\t}",
                "+\t\t\treturn exceptionTranslator;",
                " \t\t}",
                "-\t\treturn this.exceptionTranslator;",
                " \t}"
            ],
            "changed_files": [
                "spring-aop/src/main/java/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcAccessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c441d60d1d94e795c7672d55647809d1e3262575",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521906533,
            "hunks": 5,
            "message": "Upgrade to Kotlin 1.2.31 and RxJava 2.1.12 Includes H2 1.4.197 and Selenium HtmlUnit Driver 2.29.3 as well.",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index e436fc9b45..1e15a0dc40 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -16,3 +16,3 @@ plugins {",
                " \tid \"io.spring.dependency-management\" version \"1.0.3.RELEASE\" apply false",
                "-\tid \"org.jetbrains.kotlin.jvm\" version \"1.2.30\" apply false",
                "+\tid \"org.jetbrains.kotlin.jvm\" version \"1.2.31\" apply false",
                " \tid \"org.jetbrains.dokka\" version \"0.9.16\"",
                "@@ -52,3 +52,3 @@ configure(allprojects) { project ->",
                " \text.junitVintageVersion  = \"4.12.3\"",
                "-\text.kotlinVersion        = \"1.2.30\"",
                "+\text.kotlinVersion        = \"1.2.31\"",
                " \text.log4jVersion         = \"2.11.0\"",
                "@@ -58,3 +58,3 @@ configure(allprojects) { project ->",
                " \text.rxjavaAdapterVersion = \"1.2.1\"",
                "-\text.rxjava2Version       = \"2.1.11\"",
                "+\text.rxjava2Version       = \"2.1.12\"",
                " \text.slf4jVersion         = \"1.7.25\"\t // spring-jcl + consistent 3rd party deps",
                "diff --git a/spring-jdbc/spring-jdbc.gradle b/spring-jdbc/spring-jdbc.gradle",
                "index ece6bd4db5..1774490f36 100644",
                "--- a/spring-jdbc/spring-jdbc.gradle",
                "+++ b/spring-jdbc/spring-jdbc.gradle",
                "@@ -9,3 +9,3 @@ dependencies {",
                " \toptional(\"org.hsqldb:hsqldb:${hsqldbVersion}\")",
                "-\toptional(\"com.h2database:h2:1.4.196\")",
                "+\toptional(\"com.h2database:h2:1.4.197\")",
                " \toptional(\"org.apache.derby:derby:10.14.1.0\")",
                "diff --git a/spring-test/spring-test.gradle b/spring-test/spring-test.gradle",
                "index 9e98ed0bfb..14bbad3a92 100644",
                "--- a/spring-test/spring-test.gradle",
                "+++ b/spring-test/spring-test.gradle",
                "@@ -47,3 +47,3 @@ dependencies {",
                " \t}",
                "-\toptional(\"org.seleniumhq.selenium:htmlunit-driver:2.29.2\") {",
                "+\toptional(\"org.seleniumhq.selenium:htmlunit-driver:2.29.3\") {",
                " \t\texclude group: \"commons-logging\", module: \"commons-logging\""
            ],
            "changed_files": [
                "build.gradle",
                "spring-jdbc/spring-jdbc.gradle",
                "spring-test/spring-test.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4da27c2a734e89bd44f5fcadacdce9f1a830d396",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522448294,
            "hunks": 25,
            "message": "Avoid unnecessary introspection on methods and meta-annotations Issue: SPR-16667",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "index c10e3d98c1..cf5eac08aa 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -433,3 +433,4 @@ class ConfigurationClassEnhancer {",
                " \t\tpublic boolean isMatch(Method candidateMethod) {",
                "-\t\t\treturn BeanAnnotationHelper.isBeanAnnotated(candidateMethod);",
                "+\t\t\treturn (candidateMethod.getDeclaringClass() != Object.class &&",
                "+\t\t\t\t\tBeanAnnotationHelper.isBeanAnnotated(candidateMethod));",
                " \t\t}",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "index 0bd78ec559..41b8303241 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "@@ -32,2 +32,3 @@ import org.springframework.core.BridgeMethodResolver;",
                " import org.springframework.lang.Nullable;",
                "+import org.springframework.util.CollectionUtils;",
                " import org.springframework.util.LinkedMultiValueMap;",
                "@@ -234,3 +235,2 @@ public class AnnotatedElementUtils {",
                " \t\t\tsearchWithGetSemantics(element, annotationType, annotationName, new SimpleAnnotationProcessor<Boolean>() {",
                "-",
                " \t\t\t\t@Override",
                "@@ -952,3 +952,3 @@ public class AnnotatedElementUtils {",
                " \t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "-\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "+\t\t\tif (hasSearchableMetaAnnotations(currentAnnotationType, annotationType, annotationName)) {",
                " \t\t\t\tT result = searchWithGetSemantics(currentAnnotationType, annotationType,",
                "@@ -1085,6 +1085,6 @@ public class AnnotatedElementUtils {",
                "-\t\t\t\t// Search in meta annotations on local annotations",
                "+\t\t\t\t// Recursively search in meta-annotations",
                " \t\t\t\tfor (Annotation annotation : annotations) {",
                " \t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "-\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "+\t\t\t\t\tif (hasSearchableMetaAnnotations(currentAnnotationType, annotationType, annotationName)) {",
                " \t\t\t\t\t\tT result = searchWithFindSemantics(currentAnnotationType, annotationType, annotationName,",
                "@@ -1103,3 +1103,3 @@ public class AnnotatedElementUtils {",
                "-\t\t\t\tif (aggregatedResults != null) {",
                "+\t\t\t\tif (!CollectionUtils.isEmpty(aggregatedResults)) {",
                " \t\t\t\t\t// Prepend to support top-down ordering within class hierarchies",
                "@@ -1110,2 +1110,3 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tMethod method = (Method) element;",
                "+\t\t\t\t\tT result;",
                "@@ -1113,6 +1114,8 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tMethod resolvedMethod = BridgeMethodResolver.findBridgedMethod(method);",
                "-\t\t\t\t\tT result = searchWithFindSemantics(resolvedMethod, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "-\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\tif (resolvedMethod != method) {",
                "+\t\t\t\t\t\tresult = searchWithFindSemantics(resolvedMethod, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                "+\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}",
                "@@ -1121,6 +1124,8 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tClass<?>[] ifcs = method.getDeclaringClass().getInterfaces();",
                "-\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName, containerType, processor,",
                "-\t\t\t\t\t\t\tvisited, metaDepth, ifcs);",
                "-\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\tif (ifcs.length > 0) {",
                "+\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName, containerType,",
                "+\t\t\t\t\t\t\t\tprocessor, visited, metaDepth, ifcs);",
                "+\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}",
                "@@ -1191,6 +1196,6 @@ public class AnnotatedElementUtils {",
                "-\t\tfor (Class<?> iface : ifcs) {",
                "-\t\t\tif (AnnotationUtils.isInterfaceWithAnnotatedMethods(iface)) {",
                "+\t\tfor (Class<?> ifc : ifcs) {",
                "+\t\t\tif (AnnotationUtils.isInterfaceWithAnnotatedMethods(ifc)) {",
                " \t\t\t\ttry {",
                "-\t\t\t\t\tMethod equivalentMethod = iface.getMethod(method.getName(), method.getParameterTypes());",
                "+\t\t\t\t\tMethod equivalentMethod = ifc.getMethod(method.getName(), method.getParameterTypes());",
                " \t\t\t\t\tT result = searchWithFindSemantics(equivalentMethod, annotationType, annotationName, containerType,",
                "@@ -1210,2 +1215,22 @@ public class AnnotatedElementUtils {",
                "+\t/**",
                "+\t * Determine whether the current annotation type is generally expected to have",
                "+\t * meta-annotations of the specified annotation type that we're searching for,",
                "+\t * explicitly excluding some common cases that would never deliver any results.",
                "+\t */",
                "+\tprivate static boolean hasSearchableMetaAnnotations(Class<? extends Annotation> currentAnnotationType,",
                "+\t\t\t@Nullable Class<?> annotationType, @Nullable String annotationName) {",
                "+",
                "+\t\tif (AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                "+\t\tif (currentAnnotationType == Nullable.class || currentAnnotationType.getName().startsWith(\"java\")) {",
                "+\t\t\t// @Nullable and standard Java annotations are only meant to have standard Java meta-annotations",
                "+\t\t\t// -> not worth searching otherwise.",
                "+\t\t\treturn ((annotationType != null && annotationType.getName().startsWith(\"java\")) ||",
                "+\t\t\t\t\t(annotationName != null && annotationName.startsWith(\"java\")));",
                "+\t\t}",
                "+\t\treturn true;",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index 2c296bbd5f..29b7d63c0a 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -42,2 +42,3 @@ import org.springframework.lang.Nullable;",
                " import org.springframework.util.Assert;",
                "+import org.springframework.util.ClassUtils;",
                " import org.springframework.util.ConcurrentReferenceHashMap;",
                "@@ -149,3 +150,3 @@ public abstract class AnnotationUtils {",
                " \t * {@code find*()} methods instead.",
                "-\t * @param ann the Annotation to check",
                "+\t * @param annotation the Annotation to check",
                " \t * @param annotationType the annotation type to look for, both locally and as a meta-annotation",
                "@@ -156,7 +157,7 @@ public abstract class AnnotationUtils {",
                " \t@Nullable",
                "-\tpublic static <A extends Annotation> A getAnnotation(Annotation ann, Class<A> annotationType) {",
                "-\t\tif (annotationType.isInstance(ann)) {",
                "-\t\t\treturn synthesizeAnnotation((A) ann);",
                "+\tpublic static <A extends Annotation> A getAnnotation(Annotation annotation, Class<A> annotationType) {",
                "+\t\tif (annotationType.isInstance(annotation)) {",
                "+\t\t\treturn synthesizeAnnotation((A) annotation);",
                " \t\t}",
                "-\t\tClass<? extends Annotation> annotatedElement = ann.annotationType();",
                "+\t\tClass<? extends Annotation> annotatedElement = annotation.annotationType();",
                " \t\ttry {",
                "@@ -576,6 +577,6 @@ public abstract class AnnotationUtils {",
                " \t\tA annotation = null;",
                "-\t\tfor (Class<?> iface : ifcs) {",
                "-\t\t\tif (isInterfaceWithAnnotatedMethods(iface)) {",
                "+\t\tfor (Class<?> ifc : ifcs) {",
                "+\t\t\tif (isInterfaceWithAnnotatedMethods(ifc)) {",
                " \t\t\t\ttry {",
                "-\t\t\t\t\tMethod equivalentMethod = iface.getMethod(method.getName(), method.getParameterTypes());",
                "+\t\t\t\t\tMethod equivalentMethod = ifc.getMethod(method.getName(), method.getParameterTypes());",
                " \t\t\t\t\tannotation = getAnnotation(equivalentMethod, annotationType);",
                "@@ -593,4 +594,8 @@ public abstract class AnnotationUtils {",
                "-\tstatic boolean isInterfaceWithAnnotatedMethods(Class<?> iface) {",
                "-\t\tBoolean found = annotatedInterfaceCache.get(iface);",
                "+\tstatic boolean isInterfaceWithAnnotatedMethods(Class<?> ifc) {",
                "+\t\tif (ClassUtils.isJavaLanguageInterface(ifc)) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                "+",
                "+\t\tBoolean found = annotatedInterfaceCache.get(ifc);",
                " \t\tif (found != null) {",
                "@@ -599,5 +604,6 @@ public abstract class AnnotationUtils {",
                " \t\tfound = Boolean.FALSE;",
                "-\t\tfor (Method ifcMethod : iface.getMethods()) {",
                "+\t\tfor (Method ifcMethod : ifc.getMethods()) {",
                " \t\t\ttry {",
                "-\t\t\t\tif (ifcMethod.getAnnotations().length > 0) {",
                "+\t\t\t\tAnnotation[] anns = ifcMethod.getAnnotations();",
                "+\t\t\t\tif (anns.length > 1 || (anns.length == 1 && anns[0].annotationType() != Nullable.class)) {",
                " \t\t\t\t\tfound = Boolean.TRUE;",
                "@@ -610,3 +616,3 @@ public abstract class AnnotationUtils {",
                " \t\t}",
                "-\t\tannotatedInterfaceCache.put(iface, found);",
                "+\t\tannotatedInterfaceCache.put(ifc, found);",
                " \t\treturn found;",
                "diff --git a/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java b/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "index 664d477f9f..e69facab99 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "@@ -116,3 +116,4 @@ public class AnnotationTypeFilter extends AbstractTypeHierarchyTraversingFilter",
                " \t\t\tif (!this.annotationType.getName().startsWith(\"java\")) {",
                "-\t\t\t\t// Standard Java classes don't have non-standard annotations on them.",
                "+\t\t\t\t// Standard Java types do not have non-standard annotations on them ->",
                "+\t\t\t\t// skip any load attempt, in particular for Java language interfaces.",
                " \t\t\t\treturn false;"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8d5587fe4f938c51b68dffa3370840b2bda19d54",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521905451,
            "hunks": 12,
            "message": "Consistent thread-safe iteration in DefaultSingletonBeanRegistry Issue: SPR-16620",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "index b66e24b0ad..8f3b6f8782 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "@@ -386,12 +386,8 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \tpublic void registerContainedBean(String containedBeanName, String containingBeanName) {",
                "-\t\t// A quick check for an existing entry upfront, avoiding synchronization...",
                "-\t\tSet<String> containedBeans = this.containedBeanMap.get(containingBeanName);",
                "-\t\tif (containedBeans != null && containedBeans.contains(containedBeanName)) {",
                "-\t\t\treturn;",
                "-\t\t}",
                "-",
                "-\t\t// No entry yet -> fully synchronized manipulation of the containedBeans Set",
                " \t\tsynchronized (this.containedBeanMap) {",
                "-\t\t\tcontainedBeans = this.containedBeanMap.computeIfAbsent(containingBeanName, k -> new LinkedHashSet<>(8));",
                "-\t\t\tcontainedBeans.add(containedBeanName);",
                "+\t\t\tSet<String> containedBeans =",
                "+\t\t\t\t\tthis.containedBeanMap.computeIfAbsent(containingBeanName, k -> new LinkedHashSet<>(8));",
                "+\t\t\tif (!containedBeans.add(containedBeanName)) {",
                "+\t\t\t\treturn;",
                "+\t\t\t}",
                " \t\t}",
                "@@ -407,14 +403,12 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \tpublic void registerDependentBean(String beanName, String dependentBeanName) {",
                "-\t\t// A quick check for an existing entry upfront, avoiding synchronization...",
                " \t\tString canonicalName = canonicalName(beanName);",
                "-\t\tSet<String> dependentBeans = this.dependentBeanMap.get(canonicalName);",
                "-\t\tif (dependentBeans != null && dependentBeans.contains(dependentBeanName)) {",
                "-\t\t\treturn;",
                "-\t\t}",
                "-\t\t// No entry yet -> fully synchronized manipulation of the dependentBeans Set",
                " \t\tsynchronized (this.dependentBeanMap) {",
                "-\t\t\tdependentBeans = this.dependentBeanMap.computeIfAbsent(canonicalName, k -> new LinkedHashSet<>(8));",
                "-\t\t\tdependentBeans.add(dependentBeanName);",
                "+\t\t\tSet<String> dependentBeans =",
                "+\t\t\t\t\tthis.dependentBeanMap.computeIfAbsent(canonicalName, k -> new LinkedHashSet<>(8));",
                "+\t\t\tif (!dependentBeans.add(dependentBeanName)) {",
                "+\t\t\t\treturn;",
                "+\t\t\t}",
                " \t\t}",
                "+",
                " \t\tsynchronized (this.dependenciesForBeanMap) {",
                "@@ -434,3 +428,5 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \tprotected boolean isDependent(String beanName, String dependentBeanName) {",
                "-\t\treturn isDependent(beanName, dependentBeanName, null);",
                "+\t\tsynchronized (this.dependentBeanMap) {",
                "+\t\t\treturn isDependent(beanName, dependentBeanName, null);",
                "+\t\t}",
                " \t}",
                "@@ -479,3 +475,5 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t}",
                "-\t\treturn StringUtils.toStringArray(dependentBeans);",
                "+\t\tsynchronized (this.dependentBeanMap) {",
                "+\t\t\treturn StringUtils.toStringArray(dependentBeans);",
                "+\t\t}",
                " \t}",
                "@@ -493,3 +491,5 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t}",
                "-\t\treturn StringUtils.toStringArray(dependenciesForBean);",
                "+\t\tsynchronized (this.dependenciesForBeanMap) {",
                "+\t\t\treturn StringUtils.toStringArray(dependenciesForBean);",
                "+\t\t}",
                " \t}",
                "@@ -559,3 +559,7 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t// Trigger destruction of dependent beans first...",
                "-\t\tSet<String> dependencies = this.dependentBeanMap.remove(beanName);",
                "+\t\tSet<String> dependencies;",
                "+\t\tsynchronized (this.dependentBeanMap) {",
                "+\t\t\t// Within full synchronization in order to guarantee a disconnected Set",
                "+\t\t\tdependencies = this.dependentBeanMap.remove(beanName);",
                "+\t\t}",
                " \t\tif (dependencies != null) {",
                "@@ -580,3 +584,7 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t// Trigger destruction of contained beans...",
                "-\t\tSet<String> containedBeans = this.containedBeanMap.remove(beanName);",
                "+\t\tSet<String> containedBeans;",
                "+\t\tsynchronized (this.containedBeanMap) {",
                "+\t\t\t// Within full synchronization in order to guarantee a disconnected Set",
                "+\t\t\tcontainedBeans = this.containedBeanMap.remove(beanName);",
                "+\t\t}",
                " \t\tif (containedBeans != null) {",
                "diff --git a/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java",
                "index 38713f4e24..bfb7fa8bbf 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java",
                "@@ -169,3 +169,3 @@ public class DefaultLifecycleProcessor implements LifecycleProcessor, BeanFactor",
                " \t\tLifecycle bean = lifecycleBeans.remove(beanName);",
                "-\t\tif (bean != null && !this.equals(bean)) {",
                "+\t\tif (bean != null && bean != this) {",
                " \t\t\tString[] dependenciesForBean = getBeanFactory().getDependenciesForBean(beanName);"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "17c16eaa9efac10d04db8c61146c2c93dcdd2ee1",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522377661,
            "hunks": 4,
            "message": "Upgrade to Gradle 4.6 Issue: SPR-16475",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index cd4b629afc..0a2bf09846 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -285,3 +285,3 @@ configure(rootProject) {",
                " \t\tdescription = \"Generates gradlew[.bat] scripts\"",
                "-\t\tgradleVersion = '4.4.1'",
                "+\t\tgradleVersion = '4.6'",
                "diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar",
                "index 01b8bf6b1f..f6b961fd5a 100644",
                "Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ",
                "diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties",
                "index 2c2bbe5f9a..bf3de21830 100644",
                "--- a/gradle/wrapper/gradle-wrapper.properties",
                "+++ b/gradle/wrapper/gradle-wrapper.properties",
                "@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME",
                " distributionPath=wrapper/dists",
                "+distributionUrl=https\\://services.gradle.org/distributions/gradle-4.6-bin.zip",
                " zipStoreBase=GRADLE_USER_HOME",
                " zipStorePath=wrapper/dists",
                "-distributionUrl=https\\://services.gradle.org/distributions/gradle-4.4.1-bin.zip",
                "diff --git a/spring-beans/spring-beans.gradle b/spring-beans/spring-beans.gradle",
                "index ceb20fb7f8..a93a798118 100644",
                "--- a/spring-beans/spring-beans.gradle",
                "+++ b/spring-beans/spring-beans.gradle",
                "@@ -29,3 +29,4 @@ compileGroovy {",
                " // We need to redefine dependencies to break task cycles.",
                "-compileGroovy.dependsOn = compileGroovy.taskDependencies.values - 'compileJava'",
                "+def deps = compileGroovy.taskDependencies.immutableValues + compileGroovy.taskDependencies.mutableValues",
                "+compileGroovy.dependsOn = deps - 'compileJava'",
                " compileKotlin.dependsOn(compileGroovy)"
            ],
            "changed_files": [
                "build.gradle",
                "gradle/wrapper/gradle-wrapper.jar",
                "gradle/wrapper/gradle-wrapper.properties",
                "spring-beans/spring-beans.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7be4193933783d7fbc12660fb603c5192615cefa",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522763112,
            "hunks": 1,
            "message": "Upgrade to Reactor Bismuth-SR8",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 8da0638858..f7e354b271 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -55,3 +55,3 @@ configure(allprojects) { project ->",
                " \text.nettyVersion         = \"4.1.22.Final\"",
                "-\text.reactorVersion       = \"Bismuth-BUILD-SNAPSHOT\"",
                "+\text.reactorVersion       = \"Bismuth-SR8\"",
                " \text.rxjavaVersion        = \"1.3.8\""
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "93abe0e94bfff05d18a0cd2466cec3eafdb0991c",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522358077,
            "hunks": 5,
            "message": "All branches in a conditional structure should not have exactly the same implementation",
            "diff": [
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java",
                "index be38c90a81..37e9a596a8 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java",
                "@@ -387,6 +387,4 @@ public abstract class AbstractAspectJAdvice implements Advice, AspectJPrecedence",
                " \t\tClass<?>[] parameterTypes = this.aspectJAdviceMethod.getParameterTypes();",
                "-\t\tif (maybeBindJoinPoint(parameterTypes[0]) || maybeBindProceedingJoinPoint(parameterTypes[0])) {",
                "-\t\t\tnumUnboundArgs--;",
                "-\t\t}",
                "-\t\telse if (maybeBindJoinPointStaticPart(parameterTypes[0])) {",
                "+\t\tif (maybeBindJoinPoint(parameterTypes[0]) || maybeBindProceedingJoinPoint(parameterTypes[0]) ||",
                "+\t\t\t\tmaybeBindJoinPointStaticPart(parameterTypes[0])) {",
                " \t\t\tnumUnboundArgs--;",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java b/spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java",
                "index c04615b936..64593ad7fa 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java",
                "@@ -287,7 +287,3 @@ public class MutablePropertyValues implements PropertyValues, Serializable {",
                " \t\t\tPropertyValue pvOld = old.getPropertyValue(newPv.getName());",
                "-\t\t\tif (pvOld == null) {",
                "-\t\t\t\tchanges.addPropertyValue(newPv);",
                "-\t\t\t}",
                "-\t\t\telse if (!pvOld.equals(newPv)) {",
                "-\t\t\t\t// it's changed",
                "+\t\t\tif (pvOld == null || !pvOld.equals(newPv)) {",
                " \t\t\t\tchanges.addPropertyValue(newPv);",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java",
                "index 1fb3c223c2..e9435b8349 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java",
                "@@ -411,8 +411,3 @@ public class GroovyBeanDefinitionReader extends AbstractBeanDefinitionReader imp",
                " \tprivate boolean addDeferredProperty(String property, Object newValue) {",
                "-\t\tif (newValue instanceof List) {",
                "-\t\t\tthis.deferredProperties.put(this.currentBeanDefinition.getBeanName() + '.' + property,",
                "-\t\t\t\t\tnew DeferredProperty(this.currentBeanDefinition, property, newValue));",
                "-\t\t\treturn true;",
                "-\t\t}",
                "-\t\telse if (newValue instanceof Map) {",
                "+\t\tif (newValue instanceof List || newValue instanceof Map) {",
                " \t\t\tthis.deferredProperties.put(this.currentBeanDefinition.getBeanName() + '.' + property,",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "index 21ff6f82d6..c7d76480ef 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "@@ -349,6 +349,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\ttry {",
                "-\t\t\t\tif (canRead(context, target, name)) {",
                "-\t\t\t\t\ttypeDescriptor = this.typeDescriptorCache.get(cacheKey);",
                "-\t\t\t\t}",
                "-\t\t\t\telse if (canWrite(context, target, name)) {",
                "+\t\t\t\tif (canRead(context, target, name) || canWrite(context, target, name)) {",
                " \t\t\t\t\ttypeDescriptor = this.typeDescriptorCache.get(cacheKey);",
                "diff --git a/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "index 833da5b73b..8243e1dd4a 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "@@ -270,6 +270,3 @@ public class UrlPathHelper {",
                " \t\t\t}",
                "-\t\t\tif (c1 == c2) {",
                "-\t\t\t\tcontinue;",
                "-\t\t\t}",
                "-\t\t\telse if (ignoreCase && (Character.toLowerCase(c1) == Character.toLowerCase(c2))) {",
                "+\t\t\tif (c1 == c2 || ignoreCase && (Character.toLowerCase(c1) == Character.toLowerCase(c2))) {",
                " \t\t\t\tcontinue;"
            ],
            "changed_files": [
                "spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java",
                "spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "aa0face9a1c7d0160a5e64e5b5d70bedbfb065e0",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522761505,
            "hunks": 2,
            "message": "Upgrade to RxJava 1.3.8 and Rhino 1.7.9",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 87e262c85c..8da0638858 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -56,3 +56,3 @@ configure(allprojects) { project ->",
                " \text.reactorVersion       = \"Bismuth-BUILD-SNAPSHOT\"",
                "-\text.rxjavaVersion        = \"1.3.7\"",
                "+\text.rxjavaVersion        = \"1.3.8\"",
                " \text.rxjavaAdapterVersion = \"1.2.1\"",
                "diff --git a/spring-webmvc/spring-webmvc.gradle b/spring-webmvc/spring-webmvc.gradle",
                "index 881ffc91a7..40974834fa 100644",
                "--- a/spring-webmvc/spring-webmvc.gradle",
                "+++ b/spring-webmvc/spring-webmvc.gradle",
                "@@ -63,3 +63,3 @@ dependencies {",
                " \ttestCompile(\"joda-time:joda-time:2.9.9\")",
                "-\ttestCompile(\"org.mozilla:rhino:1.7.8\")",
                "+\ttestCompile(\"org.mozilla:rhino:1.7.9\")",
                " \ttestCompile(\"dom4j:dom4j:1.6.1\") {"
            ],
            "changed_files": [
                "build.gradle",
                "spring-webmvc/spring-webmvc.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e69",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520878300,
            "hunks": 13,
            "message": "Modify SpEL code gen to take account of null safe refs With this change the code generation for method and property references is modified to include branching logic in the case of null safe dereferencing (?.). This is complicated by the possible usage of primitives on the left hand side of the dereference. To cope with this case primitives are promoted to boxed types when this situation occurs enabling null to be passed as a possible result. Issue: SPR-16489",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java b/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "index 7f860b49cf..33e77e7791 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "@@ -1005,2 +1005,17 @@ public class CodeFlow implements Opcodes {",
                "+\tpublic static String toBoxedDescriptor(String primitiveDescriptor) {",
                "+\t\tswitch (primitiveDescriptor.charAt(0)) {",
                "+\t\t\tcase 'I': return \"Ljava/lang/Integer\";",
                "+\t\t\tcase 'J': return \"Ljava/lang/Long\";",
                "+\t\t\tcase 'F': return \"Ljava/lang/Float\";",
                "+\t\t\tcase 'D': return \"Ljava/lang/Double\";",
                "+\t\t\tcase 'B': return \"Ljava/lang/Byte\";",
                "+\t\t\tcase 'C': return \"Ljava/lang/Character\";",
                "+\t\t\tcase 'S': return \"Ljava/lang/Short\";",
                "+\t\t\tcase 'Z': return \"Ljava/lang/Boolean\";",
                "+\t\t\tdefault:",
                "+\t\t\t\tthrow new IllegalArgumentException(\"Unexpected non primitive descriptor \"+primitiveDescriptor);",
                "+\t\t}\t",
                "+\t}",
                "+",
                " }",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java b/spring-expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java",
                "index eec56219e8..e1045ec95d 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java",
                "@@ -26,2 +26,3 @@ import java.util.List;",
                "+import org.springframework.asm.Label;",
                " import org.springframework.asm.MethodVisitor;",
                "@@ -55,2 +56,4 @@ public class MethodReference extends SpelNodeImpl {",
                "+\tprivate String originalPrimitiveExitTypeDescriptor = null;",
                "+",
                " \tprivate volatile CachedMethodExecutor cachedExecutor;",
                "@@ -235,3 +238,10 @@ public class MethodReference extends SpelNodeImpl {",
                " \t\t\tMethod method = ((ReflectiveMethodExecutor) executorToCheck.get()).getMethod();",
                "-\t\t\tthis.exitTypeDescriptor = CodeFlow.toDescriptor(method.getReturnType());",
                "+\t\t\tString descriptor = CodeFlow.toDescriptor(method.getReturnType());",
                "+\t\t\tif (this.nullSafe && CodeFlow.isPrimitive(descriptor)) {",
                "+\t\t\t\toriginalPrimitiveExitTypeDescriptor = descriptor;",
                "+\t\t\t\tthis.exitTypeDescriptor = CodeFlow.toBoxedDescriptor(descriptor);",
                "+\t\t\t}",
                "+\t\t\telse {",
                "+\t\t\t\tthis.exitTypeDescriptor = descriptor;",
                "+\t\t\t}",
                " \t\t}",
                "@@ -295,13 +305,19 @@ public class MethodReference extends SpelNodeImpl {",
                "-\t\tif (descriptor == null) {",
                "-\t\t\tif (!isStaticMethod) {",
                "-\t\t\t\t// Nothing on the stack but something is needed",
                "-\t\t\t\tcf.loadTarget(mv);",
                "-\t\t\t}",
                "+\t\tLabel skipIfNull = null;",
                "+\t\tif (descriptor == null && !isStaticMethod) {",
                "+\t\t\t// Nothing on the stack but something is needed",
                "+\t\t\tcf.loadTarget(mv);",
                " \t\t}",
                "-\t\telse {",
                "-\t\t\tif (isStaticMethod) {",
                "-\t\t\t\t// Something on the stack when nothing is needed",
                "-\t\t\t\tmv.visitInsn(POP);",
                "-\t\t\t}",
                "+\t\tif ((descriptor != null || !isStaticMethod) && nullSafe) {",
                "+\t\t\tmv.visitInsn(DUP);",
                "+\t\t\tskipIfNull = new Label();",
                "+\t\t\tLabel continueLabel = new Label();",
                "+\t\t\tmv.visitJumpInsn(IFNONNULL,continueLabel);",
                "+\t\t\tCodeFlow.insertCheckCast(mv, this.exitTypeDescriptor);",
                "+\t\t\tmv.visitJumpInsn(GOTO, skipIfNull);",
                "+\t\t\tmv.visitLabel(continueLabel);",
                "+\t\t}",
                "+\t\tif (descriptor != null && isStaticMethod) {",
                "+\t\t\t// Something on the stack when nothing is needed",
                "+\t\t\tmv.visitInsn(POP);",
                " \t\t}",
                "@@ -325,2 +341,10 @@ public class MethodReference extends SpelNodeImpl {",
                " \t\tcf.pushDescriptor(this.exitTypeDescriptor);",
                "+\t\tif (originalPrimitiveExitTypeDescriptor != null) {",
                "+\t\t\t// The output of the accessor will be a primitive but from the block above it might be null,",
                "+\t\t\t// so to have a 'common stack' element at skipIfNull target we need to box the primitive",
                "+\t\t\tCodeFlow.insertBoxIfNecessary(mv, originalPrimitiveExitTypeDescriptor);",
                "+\t\t}",
                "+\t\tif (skipIfNull != null) {",
                "+\t\t\tmv.visitLabel(skipIfNull);",
                "+\t\t}",
                " \t}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ast/PropertyOrFieldReference.java b/spring-expression/src/main/java/org/springframework/expression/spel/ast/PropertyOrFieldReference.java",
                "index ec908dfefc..646cb7d915 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ast/PropertyOrFieldReference.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/PropertyOrFieldReference.java",
                "@@ -23,2 +23,3 @@ import java.util.Map;",
                "+import org.springframework.asm.Label;",
                " import org.springframework.asm.MethodVisitor;",
                "@@ -49,2 +50,4 @@ public class PropertyOrFieldReference extends SpelNodeImpl {",
                "+\tprivate String originalPrimitiveExitTypeDescriptor = null;",
                "+",
                " \tprivate final String name;",
                "@@ -85,3 +88,3 @@ public class PropertyOrFieldReference extends SpelNodeImpl {",
                " \t\t\tCompilablePropertyAccessor accessor = (CompilablePropertyAccessor) accessorToUse;",
                "-\t\t\tthis.exitTypeDescriptor = CodeFlow.toDescriptor(accessor.getPropertyType());",
                "+\t\t\tsetExitTypeDescriptor(CodeFlow.toDescriptor(accessor.getPropertyType()));",
                " \t\t}",
                "@@ -352,4 +355,36 @@ public class PropertyOrFieldReference extends SpelNodeImpl {",
                " \t\t}",
                "+\t\tLabel skipIfNull = null;",
                "+\t\tif (nullSafe) {",
                "+\t\t\tmv.visitInsn(DUP);",
                "+\t\t\tskipIfNull = new Label();",
                "+\t\t\tLabel continueLabel = new Label();",
                "+\t\t\tmv.visitJumpInsn(IFNONNULL,continueLabel);",
                "+\t\t\tCodeFlow.insertCheckCast(mv, this.exitTypeDescriptor);",
                "+\t\t\tmv.visitJumpInsn(GOTO, skipIfNull);",
                "+\t\t\tmv.visitLabel(continueLabel);",
                "+\t\t}",
                " \t\t((CompilablePropertyAccessor) accessorToUse).generateCode(this.name, mv, cf);",
                " \t\tcf.pushDescriptor(this.exitTypeDescriptor);",
                "+\t\tif (originalPrimitiveExitTypeDescriptor != null) {",
                "+\t\t\t// The output of the accessor is a primitive but from the block above it might be null,",
                "+\t\t\t// so to have a common stack element type at skipIfNull target it is necessary",
                "+\t\t\t// to box the primitive",
                "+\t\t\tCodeFlow.insertBoxIfNecessary(mv, originalPrimitiveExitTypeDescriptor);",
                "+\t\t}",
                "+\t\tif (skipIfNull != null) {",
                "+\t\t\tmv.visitLabel(skipIfNull);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\tvoid setExitTypeDescriptor(String descriptor) {",
                "+\t\t// If this property or field access would return a primitive - and yet",
                "+\t\t// it is also marked null safe - then the exit type descriptor must be",
                "+\t\t// promoted to the box type to allow a null value to be passed on",
                "+\t\tif (this.nullSafe && CodeFlow.isPrimitive(descriptor)) {",
                "+\t\t\tthis.originalPrimitiveExitTypeDescriptor = descriptor;",
                "+\t\t\tthis.exitTypeDescriptor = CodeFlow.toBoxedDescriptor(descriptor);",
                "+\t\t}",
                "+\t\telse {",
                "+\t\t\tthis.exitTypeDescriptor = descriptor;",
                "+\t\t}",
                " \t}",
                "@@ -381,4 +416,3 @@ public class PropertyOrFieldReference extends SpelNodeImpl {",
                " \t\t\tif (accessorToUse instanceof CompilablePropertyAccessor) {",
                "-\t\t\t\tthis.ref.exitTypeDescriptor =",
                "-\t\t\t\t\t\tCodeFlow.toDescriptor(((CompilablePropertyAccessor) accessorToUse).getPropertyType());",
                "+\t\t\t\tthis.ref.setExitTypeDescriptor(CodeFlow.toDescriptor(((CompilablePropertyAccessor) accessorToUse).getPropertyType()));",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ast/PropertyOrFieldReference.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b2f900e518eeb5aabf57a6deb8f267256af7b22b",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521823015,
            "hunks": 3,
            "message": "Upgrade to Hibernate ORM 5.2.16 and 5.1.13",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index e1a5e1c836..e436fc9b45 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -275,3 +275,3 @@ configure(rootProject) {",
                " \t\ttestCompile(\"org.hsqldb:hsqldb:${hsqldbVersion}\")",
                "-\t\ttestCompile(\"org.hibernate:hibernate-core:5.1.12.Final\")",
                "+\t\ttestCompile(\"org.hibernate:hibernate-core:5.1.13.Final\")",
                " \t}",
                "diff --git a/spring-orm/spring-orm.gradle b/spring-orm/spring-orm.gradle",
                "index ec5b2762cd..23e4b1ea83 100644",
                "--- a/spring-orm/spring-orm.gradle",
                "+++ b/spring-orm/spring-orm.gradle",
                "@@ -11,3 +11,3 @@ dependencies {",
                " \toptional(\"org.eclipse.persistence:org.eclipse.persistence.jpa:2.7.1\")",
                "-\toptional(\"org.hibernate:hibernate-core:5.2.15.Final\")",
                "+\toptional(\"org.hibernate:hibernate-core:5.2.16.Final\")",
                " \toptional(\"javax.servlet:javax.servlet-api:3.1.0\")",
                "diff --git a/spring-test/spring-test.gradle b/spring-test/spring-test.gradle",
                "index 01fec0ba99..9e98ed0bfb 100644",
                "--- a/spring-test/spring-test.gradle",
                "+++ b/spring-test/spring-test.gradle",
                "@@ -66,3 +66,3 @@ dependencies {",
                " \ttestCompile(\"javax.mail:javax.mail-api:1.6.1\")",
                "-\ttestCompile(\"org.hibernate:hibernate-core:5.2.15.Final\")",
                "+\ttestCompile(\"org.hibernate:hibernate-core:5.2.16.Final\")",
                " \ttestCompile(\"org.hibernate:hibernate-validator:6.0.8.Final\")"
            ],
            "changed_files": [
                "build.gradle",
                "spring-orm/spring-orm.gradle",
                "spring-test/spring-test.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b5511645b896034756861a8d6c3e45ad6fead602",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521673386,
            "hunks": 10,
            "message": "DataBindingPropertyAccessor with factory methods (forReadOnlyAccess etc) Includes configurable write support at ReflectivePropertyAccessor level. Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "new file mode 100644",
                "index 0000000000..2deb173993",
                "--- /dev/null",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "@@ -0,0 +1,71 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.expression.spel.support;",
                "+",
                "+import java.lang.reflect.Method;",
                "+",
                "+/**",
                "+ * A {@link org.springframework.expression.PropertyAccessor} variant for data binding",
                "+ * purposes, using reflection to access properties for reading and possibly writing.",
                "+ *",
                "+ * <p>A property can be accessed through a public getter method (when being read)",
                "+ * or a public setter method (when being written), and also as a public field.",
                "+ *",
                "+ * <p>This accessor is explicitly designed for user-level property evaluation",
                "+ * and does not resolve technical properties on {@code java.lang.Object}.",
                "+ * For more resolution power, choose {@link ReflectivePropertyAccessor} instead.",
                "+ *",
                "+ * @author Juergen Hoeller",
                "+ * @since 4.3.15",
                "+ * @see #forReadOnlyAccess()",
                "+ * @see #forReadWriteAccess()",
                "+ * @see SimpleEvaluationContext",
                "+ * @see StandardEvaluationContext",
                "+ * @see ReflectivePropertyAccessor",
                "+ */",
                "+public class DataBindingPropertyAccessor extends ReflectivePropertyAccessor {",
                "+",
                "+\t/**",
                "+\t * Create a new property accessor for reading and possibly also writing.",
                "+\t * @param allowWrite whether to also allow for write operations",
                "+\t * @see #canWrite",
                "+\t */",
                "+\tprivate DataBindingPropertyAccessor(boolean allowWrite) {",
                "+\t\tsuper(allowWrite);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected boolean isCandidateForProperty(Method method) {",
                "+\t\treturn (method.getDeclaringClass() != Object.class);",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Create a new data-binding property accessor for read-only access.",
                "+\t */",
                "+\tpublic static DataBindingPropertyAccessor forReadOnlyAccess() {",
                "+\t\treturn new DataBindingPropertyAccessor(false);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a new data-binding property accessor for read-write access.",
                "+\t */",
                "+\tpublic static DataBindingPropertyAccessor forReadWriteAccess() {",
                "+\t\treturn new DataBindingPropertyAccessor(true);",
                "+\t}",
                "+",
                "+}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "index 3bf6cdf135..c8ad58abdc 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "@@ -48,3 +48,3 @@ import org.springframework.util.StringUtils;",
                "  * A powerful {@link PropertyAccessor} that uses reflection to access properties",
                "- * for reading and writing.",
                "+ * for reading and possibly also for writing.",
                "  *",
                "@@ -59,3 +59,3 @@ import org.springframework.util.StringUtils;",
                "  * @see SimpleEvaluationContext",
                "- * @see SimplePropertyAccessor",
                "+ * @see DataBindingPropertyAccessor",
                "  */",
                "@@ -75,2 +75,4 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\tprivate final boolean allowWrite;",
                "+",
                " \tprivate final Map<PropertyCacheKey, InvokerPair> readerCache = new ConcurrentHashMap<>(64);",
                "@@ -85,2 +87,21 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\t/**",
                "+\t * Create a new property accessor for reading as well writing.",
                "+\t * @see #ReflectivePropertyAccessor(boolean)",
                "+\t */",
                "+\tpublic ReflectivePropertyAccessor() {",
                "+\t\tthis.allowWrite = true;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a new property accessor for reading and possibly writing.",
                "+\t * @param allowWrite whether to also allow for write operations",
                "+\t * @since 4.3.15",
                "+\t * @see #canWrite",
                "+\t */",
                "+\tpublic ReflectivePropertyAccessor(boolean allowWrite) {",
                "+\t\tthis.allowWrite = allowWrite;",
                "+\t}",
                "+",
                "+",
                " \t/**",
                "@@ -202,3 +223,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \tpublic boolean canWrite(EvaluationContext context, @Nullable Object target, String name) throws AccessException {",
                "-\t\tif (target == null) {",
                "+\t\tif (!this.allowWrite || target == null) {",
                " \t\t\treturn false;",
                "@@ -237,2 +258,7 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\t\tif (!this.allowWrite) {",
                "+\t\t\tthrow new AccessException(\"PropertyAccessor for property '\" + name +",
                "+\t\t\t\t\t\"' on target [\" + target + \"] does not allow write operations\");",
                "+\t\t}",
                "+",
                " \t\tAssert.state(target != null, \"Target must not be null\");",
                "@@ -479,10 +505,14 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t/**",
                "-\t * Attempt to create an optimized property accessor tailored for a property of a particular name on",
                "-\t * a particular class. The general ReflectivePropertyAccessor will always work but is not optimal",
                "-\t * due to the need to lookup which reflective member (method/field) to use each time read() is called.",
                "-\t * This method will just return the ReflectivePropertyAccessor instance if it is unable to build",
                "-\t * something more optimal.",
                "+\t * Attempt to create an optimized property accessor tailored for a property of a",
                "+\t * particular name on a particular class. The general ReflectivePropertyAccessor",
                "+\t * will always work but is not optimal due to the need to lookup which reflective",
                "+\t * member (method/field) to use each time read() is called. This method will just",
                "+\t * return the ReflectivePropertyAccessor instance if it is unable to build a more",
                "+\t * optimal accessor.",
                "+\t * <p>Note: An optimal accessor is currently only usable for read attempts.",
                "+\t * Do not call this method if you need a read-write accessor.",
                "+\t * @see OptimalPropertyAccessor",
                " \t */",
                " \tpublic PropertyAccessor createOptimalAccessor(EvaluationContext context, @Nullable Object target, String name) {",
                "-\t\t// Don't be clever for arrays or null target",
                "+\t\t// Don't be clever for arrays or a null target...",
                " \t\tif (target == null) {",
                "@@ -508,3 +538,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t}",
                "-\t\t\tif (method != null) {",
                "+\t\t\tif (method != null && isCandidateForProperty(method)) {",
                " \t\t\t\treturn new OptimalPropertyAccessor(invocationTarget);"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "6102715b8d7cc87f490000da519fe7f085cb5393",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522716161,
            "hunks": 17,
            "message": "Consistent treatment of proxy classes and interfaces for introspection Issue: SPR-16675 Issue: SPR-16677",
            "diff": [
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/support/AopUtils.java b/spring-aop/src/main/java/org/springframework/aop/support/AopUtils.java",
                "index 05e5327abe..a6f87f573e 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/support/AopUtils.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/support/AopUtils.java",
                "@@ -194,3 +194,5 @@ public abstract class AopUtils {",
                " \tpublic static Method getMostSpecificMethod(Method method, @Nullable Class<?> targetClass) {",
                "-\t\tMethod resolvedMethod = ClassUtils.getMostSpecificMethod(method, targetClass);",
                "+\t\tClass<?> specificTargetClass = (targetClass != null && !Proxy.isProxyClass(targetClass) ?",
                "+\t\t\t\tClassUtils.getUserClass(targetClass) : null);",
                "+\t\tMethod resolvedMethod = ClassUtils.getMostSpecificMethod(method, specificTargetClass);",
                " \t\t// If we are dealing with method with generic parameters, find the original method.",
                "@@ -238,5 +240,8 @@ public abstract class AopUtils {",
                "-\t\tSet<Class<?>> classes = new LinkedHashSet<>(ClassUtils.getAllInterfacesForClassAsSet(targetClass));",
                "-\t\tClass<?> userClass = ClassUtils.getUserClass(targetClass);",
                "-\t\tclasses.add(userClass);",
                "+\t\tSet<Class<?>> classes = new LinkedHashSet<>();",
                "+\t\tif (!Proxy.isProxyClass(targetClass)) {",
                "+\t\t\tclasses.add(ClassUtils.getUserClass(targetClass));",
                "+\t\t}",
                "+\t\tclasses.addAll(ClassUtils.getAllInterfacesForClassAsSet(targetClass));",
                "+",
                " \t\tfor (Class<?> clazz : classes) {",
                "@@ -245,4 +250,4 @@ public abstract class AopUtils {",
                " \t\t\t\tif ((introductionAwareMethodMatcher != null &&",
                "-\t\t\t\t\t\tintroductionAwareMethodMatcher.matches(method, userClass, hasIntroductions)) ||",
                "-\t\t\t\t\t\tmethodMatcher.matches(method, userClass)) {",
                "+\t\t\t\t\t\tintroductionAwareMethodMatcher.matches(method, targetClass, hasIntroductions)) ||",
                "+\t\t\t\t\t\tmethodMatcher.matches(method, targetClass)) {",
                " \t\t\t\t\treturn true;",
                "diff --git a/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractFallbackJCacheOperationSource.java b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractFallbackJCacheOperationSource.java",
                "index 56233656e1..3ca53b2aeb 100644",
                "--- a/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractFallbackJCacheOperationSource.java",
                "+++ b/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractFallbackJCacheOperationSource.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -26,6 +26,5 @@ import org.apache.commons.logging.LogFactory;",
                "-import org.springframework.core.BridgeMethodResolver;",
                "+import org.springframework.aop.support.AopUtils;",
                " import org.springframework.core.MethodClassKey;",
                " import org.springframework.lang.Nullable;",
                "-import org.springframework.util.ClassUtils;",
                "@@ -89,5 +88,3 @@ public abstract class AbstractFallbackJCacheOperationSource implements JCacheOpe",
                " \t\t// If the target class is null, the method will be unchanged.",
                "-\t\tMethod specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass);",
                "-\t\t// If we are dealing with method with generic parameters, find the original method.",
                "-\t\tspecificMethod = BridgeMethodResolver.findBridgedMethod(specificMethod);",
                "+\t\tMethod specificMethod = AopUtils.getMostSpecificMethod(method, targetClass);",
                "diff --git a/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.java b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.java",
                "index aaf09ab849..4b5cb59614 100644",
                "--- a/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.java",
                "+++ b/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -28,3 +28,3 @@ import org.apache.commons.logging.LogFactory;",
                "-import org.springframework.core.BridgeMethodResolver;",
                "+import org.springframework.aop.support.AopUtils;",
                " import org.springframework.core.MethodClassKey;",
                "@@ -133,5 +133,3 @@ public abstract class AbstractFallbackCacheOperationSource implements CacheOpera",
                " \t\t// If the target class is null, the method will be unchanged.",
                "-\t\tMethod specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass);",
                "-\t\t// If we are dealing with method with generic parameters, find the original method.",
                "-\t\tspecificMethod = BridgeMethodResolver.findBridgedMethod(specificMethod);",
                "+\t\tMethod specificMethod = AopUtils.getMostSpecificMethod(method, targetClass);",
                "diff --git a/spring-core/src/main/java/org/springframework/core/MethodIntrospector.java b/spring-core/src/main/java/org/springframework/core/MethodIntrospector.java",
                "index d220814653..be7ea23a9a 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/MethodIntrospector.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/MethodIntrospector.java",
                "@@ -20,3 +20,2 @@ import java.lang.reflect.Method;",
                " import java.lang.reflect.Proxy;",
                "-import java.util.Collections;",
                " import java.util.LinkedHashMap;",
                "@@ -60,6 +59,6 @@ public abstract class MethodIntrospector {",
                " \t\tif (!Proxy.isProxyClass(targetType)) {",
                "-\t\t\thandlerTypes.add(targetType);",
                "-\t\t\tspecificHandlerType = targetType;",
                "+\t\t\tspecificHandlerType = ClassUtils.getUserClass(targetType);",
                "+\t\t\thandlerTypes.add(specificHandlerType);",
                " \t\t}",
                "-\t\tCollections.addAll(handlerTypes, targetType.getInterfaces());",
                "+\t\thandlerTypes.addAll(ClassUtils.getAllInterfacesForClassAsSet(targetType));",
                "diff --git a/spring-tx/src/main/java/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.java b/spring-tx/src/main/java/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.java",
                "index 7846f6f2d7..f9360ee5cf 100644",
                "--- a/spring-tx/src/main/java/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.java",
                "+++ b/spring-tx/src/main/java/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -26,3 +26,3 @@ import org.apache.commons.logging.LogFactory;",
                "-import org.springframework.core.BridgeMethodResolver;",
                "+import org.springframework.aop.support.AopUtils;",
                " import org.springframework.core.MethodClassKey;",
                "@@ -150,9 +150,5 @@ public abstract class AbstractFallbackTransactionAttributeSource implements Tran",
                "-\t\t// Ignore CGLIB subclasses - introspect the actual user class.",
                "-\t\tClass<?> userClass = (targetClass != null ? ClassUtils.getUserClass(targetClass) : null);",
                " \t\t// The method may be on an interface, but we need attributes from the target class.",
                " \t\t// If the target class is null, the method will be unchanged.",
                "-\t\tMethod specificMethod = ClassUtils.getMostSpecificMethod(method, userClass);",
                "-\t\t// If we are dealing with method with generic parameters, find the original method.",
                "-\t\tspecificMethod = BridgeMethodResolver.findBridgedMethod(specificMethod);",
                "+\t\tMethod specificMethod = AopUtils.getMostSpecificMethod(method, targetClass);"
            ],
            "changed_files": [
                "spring-aop/src/main/java/org/springframework/aop/support/AopUtils.java",
                "spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractFallbackJCacheOperationSource.java",
                "spring-context/src/main/java/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.java",
                "spring-core/src/main/java/org/springframework/core/MethodIntrospector.java",
                "spring-tx/src/main/java/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "6e1cac9145385c9b9dbcefbeec46b1a86985bc19",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522192896,
            "hunks": 7,
            "message": "AcceptHeaderLocaleResolver keeps language match among supported locales Issue: SPR-16599",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java",
                "index 9984b65b80..1755549171 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java",
                "@@ -99,6 +99,7 @@ public class AcceptHeaderLocaleResolver implements LocaleResolver {",
                " \t\tLocale requestLocale = request.getLocale();",
                "-\t\tif (isSupportedLocale(requestLocale)) {",
                "+\t\tList<Locale> supportedLocales = getSupportedLocales();",
                "+\t\tif (supportedLocales.isEmpty() || supportedLocales.contains(requestLocale)) {",
                " \t\t\treturn requestLocale;",
                " \t\t}",
                "-\t\tLocale supportedLocale = findSupportedLocale(request);",
                "+\t\tLocale supportedLocale = findSupportedLocale(request, supportedLocales);",
                " \t\tif (supportedLocale != null) {",
                "@@ -109,10 +110,4 @@ public class AcceptHeaderLocaleResolver implements LocaleResolver {",
                "-\tprivate boolean isSupportedLocale(Locale locale) {",
                "-\t\tList<Locale> supportedLocales = getSupportedLocales();",
                "-\t\treturn (supportedLocales.isEmpty() || supportedLocales.contains(locale));",
                "-\t}",
                "-",
                "-\tprivate Locale findSupportedLocale(HttpServletRequest request) {",
                "+\tprivate Locale findSupportedLocale(HttpServletRequest request, List<Locale> supportedLocales) {",
                " \t\tEnumeration<Locale> requestLocales = request.getLocales();",
                "-\t\tList<Locale> supported = getSupportedLocales();",
                " \t\tLocale languageMatch = null;",
                "@@ -120,5 +115,7 @@ public class AcceptHeaderLocaleResolver implements LocaleResolver {",
                " \t\t\tLocale locale = requestLocales.nextElement();",
                "-\t\t\tif (supported.contains(locale)) {",
                "-\t\t\t\t// Full match: typically language + country",
                "-\t\t\t\treturn locale;",
                "+\t\t\tif (supportedLocales.contains(locale)) {",
                "+\t\t\t\tif (languageMatch == null || languageMatch.getLanguage().equals(locale.getLanguage())) {",
                "+\t\t\t\t\t// Full match: language + country, possibly narrowed from earlier language-only match",
                "+\t\t\t\t\treturn locale;",
                "+\t\t\t\t}",
                " \t\t\t}",
                "@@ -126,3 +123,3 @@ public class AcceptHeaderLocaleResolver implements LocaleResolver {",
                " \t\t\t\t// Let's try to find a language-only match as a fallback",
                "-\t\t\t\tfor (Locale candidate : supported) {",
                "+\t\t\t\tfor (Locale candidate : supportedLocales) {",
                " \t\t\t\t\tif (!StringUtils.hasLength(candidate.getCountry()) &&",
                "@@ -130,2 +127,3 @@ public class AcceptHeaderLocaleResolver implements LocaleResolver {",
                " \t\t\t\t\t\tlanguageMatch = candidate;",
                "+\t\t\t\t\t\tbreak;",
                " \t\t\t\t\t}"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4d2d88914295e0ad2aea13bd702514327cce12c3",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522789623,
            "hunks": 1,
            "message": "Initiate 5.0.x branch",
            "diff": [
                "diff --git a/gradle.properties b/gradle.properties",
                "index 750bef1dd9..46019fa20f 100644",
                "--- a/gradle.properties",
                "+++ b/gradle.properties",
                "@@ -1 +1 @@",
                "-version=5.0.5.RELEASE",
                "+version=5.0.6.BUILD-SNAPSHOT"
            ],
            "changed_files": [
                "gradle.properties"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a8688880b1c3e4030a90bb53221e30df445bace1",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521738629,
            "hunks": 3,
            "message": "Upgrade to RxJava 2.1.11 and 1.3.7 as well as Jetty 9.4.9",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 37d091da35..e1a5e1c836 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -48,3 +48,3 @@ configure(allprojects) { project ->",
                " \text.jackson2Version      = \"2.9.4\"",
                "-\text.jettyVersion         = \"9.4.8.v20171121\"",
                "+\text.jettyVersion         = \"9.4.9.v20180320\"",
                " \text.junitJupiterVersion  = \"5.0.3\"",
                "@@ -56,5 +56,5 @@ configure(allprojects) { project ->",
                " \text.reactorVersion       = \"Bismuth-SR7\"",
                "-\text.rxjavaVersion        = \"1.3.6\"",
                "+\text.rxjavaVersion        = \"1.3.7\"",
                " \text.rxjavaAdapterVersion = \"1.2.1\"",
                "-\text.rxjava2Version       = \"2.1.10\"",
                "+\text.rxjava2Version       = \"2.1.11\"",
                " \text.slf4jVersion         = \"1.7.25\"\t // spring-jcl + consistent 3rd party deps"
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a6fd9a77251e046b592c5672e81b67bf4695721a",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522917003,
            "hunks": 2,
            "message": "Upgrade to FreeMarker 2.3.28 and Netty 4.1.23",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 0a2bf09846..db1e135374 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -44,3 +44,3 @@ configure(allprojects) { project ->",
                " \text.aspectjVersion       = \"1.8.13\"",
                "-\text.freemarkerVersion    = \"2.3.27-incubating\"",
                "+\text.freemarkerVersion    = \"2.3.28\"",
                " \text.groovyVersion        = \"2.4.15\"",
                "@@ -54,3 +54,3 @@ configure(allprojects) { project ->",
                " \text.log4jVersion         = \"2.11.0\"",
                "-\text.nettyVersion         = \"4.1.22.Final\"",
                "+\text.nettyVersion         = \"4.1.23.Final\"",
                " \text.reactorVersion       = \"Bismuth-SR8\""
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1b83f129a23a71e3c4176d71faf9a1ce980a47c2",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521764527,
            "hunks": 1,
            "message": "ReactorNettyTcpClient uses elastic pool Issue: SPR-16626",
            "diff": [
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java",
                "index c37837494a..99dccd316d 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java",
                "@@ -141,3 +141,3 @@ public class ReactorNettyTcpClient<P> implements TcpOperations<P> {",
                " \t\t\tif (!builder.isPoolDisabled()) {",
                "-\t\t\t\tthis.poolResources = PoolResources.fixed(\"tcp-client-pool\");",
                "+\t\t\t\tthis.poolResources = PoolResources.elastic(\"tcp-client-pool\");",
                " \t\t\t\tbuilder.poolResources(this.poolResources);"
            ],
            "changed_files": [
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "729d0d27968176e2d0b4ff00dfec334219210f61",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521858066,
            "hunks": 9,
            "message": "Property handling of Void.class in WebClient retrieve() Issue: SPR-16636",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java",
                "index d59600eb84..fe61b4eaee 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java",
                "@@ -44,3 +44,2 @@ import org.springframework.http.MediaType;",
                " import org.springframework.http.client.reactive.ClientHttpRequest;",
                "-import org.springframework.http.client.reactive.ClientHttpResponse;",
                " import org.springframework.lang.Nullable;",
                "@@ -51,3 +50,2 @@ import org.springframework.util.MimeType;",
                " import org.springframework.util.MultiValueMap;",
                "-import org.springframework.web.reactive.function.BodyExtractor;",
                " import org.springframework.web.reactive.function.BodyExtractors;",
                "@@ -407,4 +405,5 @@ class DefaultWebClient implements WebClient {",
                " \t\tpublic <T> Mono<T> bodyToMono(Class<T> bodyType) {",
                "+\t\t\t// Use bodyToMono (vs BodyExtractors) to ensure proper handling of Void.class...",
                " \t\t\treturn this.responseMono.flatMap(",
                "-\t\t\t\t\tresponse -> bodyToPublisher(response, BodyExtractors.toMono(bodyType),",
                "+\t\t\t\t\tresponse -> bodyToPublisher(response, response.bodyToMono(bodyType),",
                " \t\t\t\t\t\t\tthis::monoThrowableToMono));",
                "@@ -416,3 +415,3 @@ class DefaultWebClient implements WebClient {",
                " \t\t\treturn this.responseMono.flatMap(",
                "-\t\t\t\t\tresponse -> bodyToPublisher(response, BodyExtractors.toMono(typeReference),",
                "+\t\t\t\t\tresponse -> bodyToPublisher(response, response.bodyToMono(typeReference),",
                " \t\t\t\t\t\t\tthis::monoThrowableToMono));",
                "@@ -427,3 +426,3 @@ class DefaultWebClient implements WebClient {",
                " \t\t\treturn this.responseMono.flatMapMany(",
                "-\t\t\t\t\tresponse -> bodyToPublisher(response, BodyExtractors.toFlux(elementType),",
                "+\t\t\t\t\tresponse -> bodyToPublisher(response, response.bodyToFlux(elementType),",
                " \t\t\t\t\t\t\tthis::monoThrowableToFlux));",
                "@@ -434,3 +433,3 @@ class DefaultWebClient implements WebClient {",
                " \t\t\treturn this.responseMono.flatMapMany(",
                "-\t\t\t\t\tresponse -> bodyToPublisher(response, BodyExtractors.toFlux(typeReference),",
                "+\t\t\t\t\tresponse -> bodyToPublisher(response, response.bodyToFlux(typeReference),",
                " \t\t\t\t\t\t\tthis::monoThrowableToFlux));",
                "@@ -443,4 +442,3 @@ class DefaultWebClient implements WebClient {",
                " \t\tprivate <T extends Publisher<?>> T bodyToPublisher(ClientResponse response,",
                "-\t\t\t\tBodyExtractor<T, ? super ClientHttpResponse> extractor,",
                "-\t\t\t\tFunction<Mono<? extends Throwable>, T> errorFunction) {",
                "+\t\t\t\tT bodyPublisher, Function<Mono<? extends Throwable>, T> errorFunction) {",
                "@@ -451,3 +449,3 @@ class DefaultWebClient implements WebClient {",
                " \t\t\t\t\t.map(errorFunction::apply)",
                "-\t\t\t\t\t.orElse(response.body(extractor));",
                "+\t\t\t\t\t.orElse(bodyPublisher);",
                " \t\t}"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8d8bb04783804898279c5a65754e829562959070",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521044224,
            "hunks": 8,
            "message": "ConcurrentReferenceHashMap properly handles getOrDefault for null values Issue: SPR-16584 (cherry picked from commit 356ef45)",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java b/spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java",
                "index 17127f2eeb..cee33acdf9 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -225,4 +225,3 @@ public class ConcurrentReferenceHashMap<K, V> extends AbstractMap<K, V> implemen",
                " \tpublic V get(Object key) {",
                "-\t\tReference<K, V> reference = getReference(key, Restructure.WHEN_NECESSARY);",
                "-\t\tEntry<K, V> entry = (reference != null ? reference.get() : null);",
                "+\t\tEntry<K, V> entry = getEntryIfAvailable(key);",
                " \t\treturn (entry != null ? entry.getValue() : null);",
                "@@ -230,6 +229,11 @@ public class ConcurrentReferenceHashMap<K, V> extends AbstractMap<K, V> implemen",
                "+\t@Override",
                "+\tpublic V getOrDefault(Object key, V defaultValue) {",
                "+\t\tEntry<K, V> entry = getEntryIfAvailable(key);",
                "+\t\treturn (entry != null ? entry.getValue() : defaultValue);",
                "+\t}",
                "+",
                " \t@Override",
                " \tpublic boolean containsKey(Object key) {",
                "-\t\tReference<K, V> reference = getReference(key, Restructure.WHEN_NECESSARY);",
                "-\t\tEntry<K, V> entry = (reference != null ? reference.get() : null);",
                "+\t\tEntry<K, V> entry = getEntryIfAvailable(key);",
                " \t\treturn (entry != null && ObjectUtils.nullSafeEquals(entry.getKey(), key));",
                "@@ -237,2 +241,7 @@ public class ConcurrentReferenceHashMap<K, V> extends AbstractMap<K, V> implemen",
                "+\tprivate Entry<K, V> getEntryIfAvailable(Object key) {",
                "+\t\tReference<K, V> reference = getReference(key, Restructure.WHEN_NECESSARY);",
                "+\t\treturn (reference != null ? reference.get() : null);",
                "+\t}",
                "+",
                " \t/**",
                "@@ -584,9 +593,10 @@ public class ConcurrentReferenceHashMap<K, V> extends AbstractMap<K, V> implemen",
                " \t\tprivate Reference<K, V> findInChain(Reference<K, V> reference, Object key, int hash) {",
                "-\t\t\twhile (reference != null) {",
                "-\t\t\t\tif (reference.getHash() == hash) {",
                "-\t\t\t\t\tEntry<K, V> entry = reference.get();",
                "+\t\t\tReference<K, V> currRef = reference;",
                "+\t\t\twhile (currRef != null) {",
                "+\t\t\t\tif (currRef.getHash() == hash) {",
                "+\t\t\t\t\tEntry<K, V> entry = currRef.get();",
                " \t\t\t\t\tif (entry != null) {",
                " \t\t\t\t\t\tK entryKey = entry.getKey();",
                "-\t\t\t\t\t\tif (entryKey == key || entryKey.equals(key)) {",
                "-\t\t\t\t\t\t\treturn reference;",
                "+\t\t\t\t\t\tif (ObjectUtils.nullSafeEquals(entryKey, key)) {",
                "+\t\t\t\t\t\t\treturn currRef;",
                " \t\t\t\t\t\t}",
                "@@ -594,3 +604,3 @@ public class ConcurrentReferenceHashMap<K, V> extends AbstractMap<K, V> implemen",
                " \t\t\t\t}",
                "-\t\t\t\treference = reference.getNext();",
                "+\t\t\t\tcurrRef = currRef.getNext();",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7cafa6764ce12191bd824da06b88729dffc20e69",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522192859,
            "hunks": 18,
            "message": "Validate declared annotations before deciding between reflection and ASM Issue: SPR-16564",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "index d10fb2bb29..b6af650b19 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -20,2 +20,3 @@ import java.io.FileNotFoundException;",
                " import java.io.IOException;",
                "+import java.lang.annotation.Annotation;",
                " import java.net.UnknownHostException;",
                "@@ -55,2 +56,3 @@ import org.springframework.core.annotation.AnnotationAttributes;",
                " import org.springframework.core.annotation.AnnotationAwareOrderComparator;",
                "+import org.springframework.core.annotation.AnnotationUtils;",
                " import org.springframework.core.env.CompositePropertySource;",
                "@@ -658,4 +660,7 @@ class ConfigurationClassParser {",
                " \t\ttry {",
                "-\t\t\t// Sanity test that we can read annotations, if not fall back to ASM",
                "-\t\t\tclassType.getAnnotations();",
                "+\t\t\t// Sanity test that we can reflectively read annotations,",
                "+\t\t\t// including Class attributes; if not -> fall back to ASM",
                "+\t\t\tfor (Annotation ann : classType.getAnnotations()) {",
                "+\t\t\t\tAnnotationUtils.validateAnnotation(ann);",
                "+\t\t\t}",
                " \t\t\treturn new SourceClass(classType);",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "index d83747fee8..01fec3f0d4 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -61,6 +61,5 @@ import org.springframework.util.MultiValueMap;",
                "  * <p><strong>Get semantics</strong> are limited to searching for annotations",
                "- * that are either <em>present</em> on an {@code AnnotatedElement} (i.e.,",
                "- * declared locally or {@linkplain java.lang.annotation.Inherited inherited})",
                "- * or declared within the annotation hierarchy <em>above</em> the",
                "- * {@code AnnotatedElement}.",
                "+ * that are either <em>present</em> on an {@code AnnotatedElement} (i.e. declared",
                "+ * locally or {@linkplain java.lang.annotation.Inherited inherited}) or declared",
                "+ * within the annotation hierarchy <em>above</em> the {@code AnnotatedElement}.",
                "  *",
                "@@ -78,10 +77,9 @@ import org.springframework.util.MultiValueMap;",
                "  * <h3>Support for {@code @Inherited}</h3>",
                "- * <p>Methods following <em>get semantics</em> will honor the contract of",
                "- * Java's {@link java.lang.annotation.Inherited @Inherited} annotation except",
                "- * that locally declared annotations (including custom composed annotations)",
                "- * will be favored over inherited annotations. In contrast, methods following",
                "- * <em>find semantics</em> will completely ignore the presence of",
                "- * {@code @Inherited} since the <em>find</em> search algorithm manually",
                "- * traverses type and method hierarchies and thereby implicitly supports",
                "- * annotation inheritance without the need for {@code @Inherited}.",
                "+ * <p>Methods following <em>get semantics</em> will honor the contract of Java's",
                "+ * {@link java.lang.annotation.Inherited @Inherited} annotation except that locally",
                "+ * declared annotations (including custom composed annotations) will be favored over",
                "+ * inherited annotations. In contrast, methods following <em>find semantics</em>",
                "+ * will completely ignore the presence of {@code @Inherited} since the <em>find</em>",
                "+ * search algorithm manually traverses type and method hierarchies and thereby",
                "+ * implicitly supports annotation inheritance without a need for {@code @Inherited}.",
                "  *",
                "@@ -875,3 +873,3 @@ public class AnnotatedElementUtils {",
                " \t * @param processor the processor to delegate to",
                "-\t * @return the result of the processor, potentially {@code null}",
                "+\t * @return the result of the processor (potentially {@code null})",
                " \t */",
                "@@ -894,3 +892,3 @@ public class AnnotatedElementUtils {",
                " \t * @param processor the processor to delegate to",
                "-\t * @return the result of the processor, potentially {@code null}",
                "+\t * @return the result of the processor (potentially {@code null})",
                " \t * @since 4.3",
                "@@ -925,3 +923,3 @@ public class AnnotatedElementUtils {",
                " \t * @param metaDepth the meta-depth of the annotation",
                "-\t * @return the result of the processor, potentially {@code null}",
                "+\t * @return the result of the processor (potentially {@code null})",
                " \t */",
                "@@ -986,3 +984,3 @@ public class AnnotatedElementUtils {",
                " \t * @param metaDepth the meta-depth of the annotation",
                "-\t * @return the result of the processor, potentially {@code null}",
                "+\t * @return the result of the processor (potentially {@code null})",
                " \t * @since 4.2",
                "@@ -1055,3 +1053,3 @@ public class AnnotatedElementUtils {",
                " \t * @param processor the processor to delegate to",
                "-\t * @return the result of the processor, potentially {@code null}",
                "+\t * @return the result of the processor (potentially {@code null})",
                " \t * @since 4.2",
                "@@ -1075,3 +1073,3 @@ public class AnnotatedElementUtils {",
                " \t * @param processor the processor to delegate to",
                "-\t * @return the result of the processor, potentially {@code null}",
                "+\t * @return the result of the processor (potentially {@code null})",
                " \t * @since 4.3",
                "@@ -1111,3 +1109,3 @@ public class AnnotatedElementUtils {",
                " \t * @param metaDepth the meta-depth of the annotation",
                "-\t * @return the result of the processor, potentially {@code null}",
                "+\t * @return the result of the processor (potentially {@code null})",
                " \t * @since 4.2",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index 5e19db4649..ed091d85d6 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -934,2 +934,28 @@ public abstract class AnnotationUtils {",
                "+\t/**",
                "+\t * Check the declared attributes of the given annotation, in particular covering",
                "+\t * Google App Engine's late arrival of {@code TypeNotPresentExceptionProxy} for",
                "+\t * {@code Class} values (instead of early {@code Class.getAnnotations() failure}.",
                "+\t * <p>This method not failing indicates that {@link #getAnnotationAttributes(Annotation)}",
                "+\t * won't failure either (when attempted later on).",
                "+\t * @param annotation the annotation to validate",
                "+\t * @throws IllegalStateException if a declared {@code Class} attribute could not be read",
                "+\t * @since 4.3.15",
                "+\t * @see Class#getAnnotations()",
                "+\t * @see #getAnnotationAttributes(Annotation)",
                "+\t */",
                "+\tpublic static void validateAnnotation(Annotation annotation) {",
                "+\t\tfor (Method method : getAttributeMethods(annotation.annotationType())) {",
                "+\t\t\tClass<?> returnType = method.getReturnType();",
                "+\t\t\tif (returnType == Class.class || returnType == Class[].class) {",
                "+\t\t\t\ttry {",
                "+\t\t\t\t\tmethod.invoke(annotation);",
                "+\t\t\t\t}",
                "+\t\t\t\tcatch (Throwable ex) {",
                "+\t\t\t\t\tthrow new IllegalStateException(\"Could not obtain annotation attribute value for \" + method, ex);",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t}",
                "+",
                " \t/**",
                "@@ -1884,3 +1910,3 @@ public abstract class AnnotationUtils {",
                " \t\t\tif (loggerToUse.isDebugEnabled()) {",
                "-\t\t\t\tloggerToUse.debug(\"Failed to meta-introspect annotation [\" + element + \"]: \" + ex);",
                "+\t\t\t\tloggerToUse.debug(\"Failed to meta-introspect annotation \" + element + \": \" + ex);",
                " \t\t\t}",
                "@@ -1890,3 +1916,3 @@ public abstract class AnnotationUtils {",
                " \t\t\tif (loggerToUse.isInfoEnabled()) {",
                "-\t\t\t\tloggerToUse.info(\"Failed to introspect annotations on [\" + element + \"]: \" + ex);",
                "+\t\t\t\tloggerToUse.info(\"Failed to introspect annotations on \" + element + \": \" + ex);",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8d8e218b52274055d7b1854f3363c8c8c4bd71f2",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521822873,
            "hunks": 10,
            "message": "Consistent FactoryBean cache visibility in concurrent creation scenarios Issue: SPR-16625 Issue: SPR-16627",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "index 41589161ab..feeb34d188 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "@@ -929,2 +929,6 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                " \t\t\t}",
                "+\t\t\tObject beanInstance = getSingleton(beanName, false);",
                "+\t\t\tif (beanInstance instanceof FactoryBean) {",
                "+\t\t\t\treturn (FactoryBean<?>) beanInstance;",
                "+\t\t\t}",
                " \t\t\tif (isSingletonCurrentlyInCreation(beanName) ||",
                "@@ -934,3 +938,3 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                "-\t\t\tObject instance = null;",
                "+\t\t\tObject instance;",
                " \t\t\ttry {",
                "@@ -1847,4 +1851,17 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                " \tprotected void removeSingleton(String beanName) {",
                "-\t\tsuper.removeSingleton(beanName);",
                "-\t\tthis.factoryBeanInstanceCache.remove(beanName);",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.removeSingleton(beanName);",
                "+\t\t\tthis.factoryBeanInstanceCache.remove(beanName);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Overridden to clear FactoryBean instance cache as well.",
                "+\t */",
                "+\t@Override",
                "+\tprotected void clearSingletonCache() {",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.clearSingletonCache();",
                "+\t\t\tthis.factoryBeanInstanceCache.clear();",
                "+\t\t}",
                " \t}",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "index ee0296cfa6..b66e24b0ad 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "@@ -394,7 +394,3 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\tsynchronized (this.containedBeanMap) {",
                "-\t\t\tcontainedBeans = this.containedBeanMap.get(containingBeanName);",
                "-\t\t\tif (containedBeans == null) {",
                "-\t\t\t\tcontainedBeans = new LinkedHashSet<>(8);",
                "-\t\t\t\tthis.containedBeanMap.put(containingBeanName, containedBeans);",
                "-\t\t\t}",
                "+\t\t\tcontainedBeans = this.containedBeanMap.computeIfAbsent(containingBeanName, k -> new LinkedHashSet<>(8));",
                " \t\t\tcontainedBeans.add(containedBeanName);",
                "@@ -420,7 +416,3 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\tsynchronized (this.dependentBeanMap) {",
                "-\t\t\tdependentBeans = this.dependentBeanMap.get(canonicalName);",
                "-\t\t\tif (dependentBeans == null) {",
                "-\t\t\t\tdependentBeans = new LinkedHashSet<>(8);",
                "-\t\t\t\tthis.dependentBeanMap.put(canonicalName, dependentBeans);",
                "-\t\t\t}",
                "+\t\t\tdependentBeans = this.dependentBeanMap.computeIfAbsent(canonicalName, k -> new LinkedHashSet<>(8));",
                " \t\t\tdependentBeans.add(dependentBeanName);",
                "@@ -428,7 +420,4 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\tsynchronized (this.dependenciesForBeanMap) {",
                "-\t\t\tSet<String> dependenciesForBean = this.dependenciesForBeanMap.get(dependentBeanName);",
                "-\t\t\tif (dependenciesForBean == null) {",
                "-\t\t\t\tdependenciesForBean = new LinkedHashSet<>(8);",
                "-\t\t\t\tthis.dependenciesForBeanMap.put(dependentBeanName, dependenciesForBean);",
                "-\t\t\t}",
                "+\t\t\tSet<String> dependenciesForBean =",
                "+\t\t\t\t\tthis.dependenciesForBeanMap.computeIfAbsent(dependentBeanName, k -> new LinkedHashSet<>(8));",
                " \t\t\tdependenciesForBean.add(canonicalName);",
                "@@ -527,2 +516,10 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                "+\t\tclearSingletonCache();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Clear all cached singleton instances in this registry.",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tprotected void clearSingletonCache() {",
                " \t\tsynchronized (this.singletonObjects) {",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "index e12080fffd..0d316be9c4 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -216,4 +216,6 @@ public abstract class FactoryBeanRegistrySupport extends DefaultSingletonBeanReg",
                " \tprotected void removeSingleton(String beanName) {",
                "-\t\tsuper.removeSingleton(beanName);",
                "-\t\tthis.factoryBeanObjectCache.remove(beanName);",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.removeSingleton(beanName);",
                "+\t\t\tthis.factoryBeanObjectCache.remove(beanName);",
                "+\t\t}",
                " \t}",
                "@@ -224,5 +226,7 @@ public abstract class FactoryBeanRegistrySupport extends DefaultSingletonBeanReg",
                " \t@Override",
                "-\tpublic void destroySingletons() {",
                "-\t\tsuper.destroySingletons();",
                "-\t\tthis.factoryBeanObjectCache.clear();",
                "+\tprotected void clearSingletonCache() {",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.clearSingletonCache();",
                "+\t\t\tthis.factoryBeanObjectCache.clear();",
                "+\t\t}",
                " \t}"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "59189e59577b272d27c2e7b5b1a6fb68e4f93d91",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522193030,
            "hunks": 23,
            "message": "Backported core container concurrency refinements Issue: SPR-16620 Issue: SPR-16625 Issue: SPR-16627",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "index 3c8eeacf2c..00adea84c9 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -910,2 +910,6 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                " \t\t\t}",
                "+\t\t\tObject beanInstance = getSingleton(beanName, false);",
                "+\t\t\tif (beanInstance instanceof FactoryBean) {",
                "+\t\t\t\treturn (FactoryBean<?>) beanInstance;",
                "+\t\t\t}",
                " \t\t\tif (isSingletonCurrentlyInCreation(beanName) ||",
                "@@ -915,3 +919,3 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                "-\t\t\tObject instance = null;",
                "+\t\t\tObject instance;",
                " \t\t\ttry {",
                "@@ -1486,2 +1490,6 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                "+\t\tif (System.getSecurityManager() != null && bw instanceof BeanWrapperImpl) {",
                "+\t\t\t((BeanWrapperImpl) bw).setSecurityContext(getAccessControlContext());",
                "+\t\t}",
                "+",
                " \t\tMutablePropertyValues mpvs = null;",
                "@@ -1489,8 +1497,2 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                "-\t\tif (System.getSecurityManager() != null) {",
                "-\t\t\tif (bw instanceof BeanWrapperImpl) {",
                "-\t\t\t\t((BeanWrapperImpl) bw).setSecurityContext(getAccessControlContext());",
                "-\t\t\t}",
                "-\t\t}",
                "-",
                " \t\tif (pvs instanceof MutablePropertyValues) {",
                "@@ -1630,3 +1632,2 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                " \t\t}",
                "-",
                " \t\tif (mbd == null || !mbd.isSynthetic()) {",
                "@@ -1782,4 +1783,17 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                " \tprotected void removeSingleton(String beanName) {",
                "-\t\tsuper.removeSingleton(beanName);",
                "-\t\tthis.factoryBeanInstanceCache.remove(beanName);",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.removeSingleton(beanName);",
                "+\t\t\tthis.factoryBeanInstanceCache.remove(beanName);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Overridden to clear FactoryBean instance cache as well.",
                "+\t */",
                "+\t@Override",
                "+\tprotected void clearSingletonCache() {",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.clearSingletonCache();",
                "+\t\t\tthis.factoryBeanInstanceCache.clear();",
                "+\t\t}",
                " \t}",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "index 5952878552..c40dc7bac4 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "@@ -388,11 +388,4 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \tpublic void registerContainedBean(String containedBeanName, String containingBeanName) {",
                "-\t\t// A quick check for an existing entry upfront, avoiding synchronization...",
                "-\t\tSet<String> containedBeans = this.containedBeanMap.get(containingBeanName);",
                "-\t\tif (containedBeans != null && containedBeans.contains(containedBeanName)) {",
                "-\t\t\treturn;",
                "-\t\t}",
                "-",
                "-\t\t// No entry yet -> fully synchronized manipulation of the containedBeans Set",
                " \t\tsynchronized (this.containedBeanMap) {",
                "-\t\t\tcontainedBeans = this.containedBeanMap.get(containingBeanName);",
                "+\t\t\tSet<String> containedBeans = this.containedBeanMap.get(containingBeanName);",
                " \t\t\tif (containedBeans == null) {",
                "@@ -413,12 +406,6 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \tpublic void registerDependentBean(String beanName, String dependentBeanName) {",
                "-\t\t// A quick check for an existing entry upfront, avoiding synchronization...",
                " \t\tString canonicalName = canonicalName(beanName);",
                "-\t\tSet<String> dependentBeans = this.dependentBeanMap.get(canonicalName);",
                "-\t\tif (dependentBeans != null && dependentBeans.contains(dependentBeanName)) {",
                "-\t\t\treturn;",
                "-\t\t}",
                "-\t\t// No entry yet -> fully synchronized manipulation of the dependentBeans Set",
                " \t\tsynchronized (this.dependentBeanMap) {",
                "-\t\t\tdependentBeans = this.dependentBeanMap.get(canonicalName);",
                "+\t\t\tSet<String> dependentBeans = this.dependentBeanMap.get(canonicalName);",
                " \t\t\tif (dependentBeans == null) {",
                "@@ -447,3 +434,5 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \tprotected boolean isDependent(String beanName, String dependentBeanName) {",
                "-\t\treturn isDependent(beanName, dependentBeanName, null);",
                "+\t\tsynchronized (this.dependentBeanMap) {",
                "+\t\t\treturn isDependent(beanName, dependentBeanName, null);",
                "+\t\t}",
                " \t}",
                "@@ -492,3 +481,5 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t}",
                "-\t\treturn StringUtils.toStringArray(dependentBeans);",
                "+\t\tsynchronized (this.dependentBeanMap) {",
                "+\t\t\treturn StringUtils.toStringArray(dependentBeans);",
                "+\t\t}",
                " \t}",
                "@@ -506,3 +497,5 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t}",
                "-\t\treturn StringUtils.toStringArray(dependenciesForBean);",
                "+\t\tsynchronized (this.dependenciesForBeanMap) {",
                "+\t\t\treturn StringUtils.toStringArray(dependenciesForBean);",
                "+\t\t}",
                " \t}",
                "@@ -529,2 +522,10 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                "+\t\tclearSingletonCache();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Clear all cached singleton instances in this registry.",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tprotected void clearSingletonCache() {",
                " \t\tsynchronized (this.singletonObjects) {",
                "@@ -564,3 +565,7 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t// Trigger destruction of dependent beans first...",
                "-\t\tSet<String> dependencies = this.dependentBeanMap.remove(beanName);",
                "+\t\tSet<String> dependencies;",
                "+\t\tsynchronized (this.dependentBeanMap) {",
                "+\t\t\t// Within full synchronization in order to guarantee a disconnected Set",
                "+\t\t\tdependencies = this.dependentBeanMap.remove(beanName);",
                "+\t\t}",
                " \t\tif (dependencies != null) {",
                "@@ -585,3 +590,7 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t// Trigger destruction of contained beans...",
                "-\t\tSet<String> containedBeans = this.containedBeanMap.remove(beanName);",
                "+\t\tSet<String> containedBeans;",
                "+\t\tsynchronized (this.containedBeanMap) {",
                "+\t\t\t// Within full synchronization in order to guarantee a disconnected Set",
                "+\t\t\tcontainedBeans = this.containedBeanMap.remove(beanName);",
                "+\t\t}",
                " \t\tif (containedBeans != null) {",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "index 1170486bee..b2177c7051 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -119,3 +119,5 @@ public abstract class FactoryBeanRegistrySupport extends DefaultSingletonBeanReg",
                " \t\t\t\t\t\t}",
                "-\t\t\t\t\t\tthis.factoryBeanObjectCache.put(beanName, (object != null ? object : NULL_OBJECT));",
                "+\t\t\t\t\t\tif (containsSingleton(beanName)) {",
                "+\t\t\t\t\t\t\tthis.factoryBeanObjectCache.put(beanName, (object != null ? object : NULL_OBJECT));",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}",
                "@@ -220,4 +222,6 @@ public abstract class FactoryBeanRegistrySupport extends DefaultSingletonBeanReg",
                " \tprotected void removeSingleton(String beanName) {",
                "-\t\tsuper.removeSingleton(beanName);",
                "-\t\tthis.factoryBeanObjectCache.remove(beanName);",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.removeSingleton(beanName);",
                "+\t\t\tthis.factoryBeanObjectCache.remove(beanName);",
                "+\t\t}",
                " \t}",
                "@@ -228,5 +232,7 @@ public abstract class FactoryBeanRegistrySupport extends DefaultSingletonBeanReg",
                " \t@Override",
                "-\tpublic void destroySingletons() {",
                "-\t\tsuper.destroySingletons();",
                "-\t\tthis.factoryBeanObjectCache.clear();",
                "+\tprotected void clearSingletonCache() {",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.clearSingletonCache();",
                "+\t\t\tthis.factoryBeanObjectCache.clear();",
                "+\t\t}",
                " \t}",
                "diff --git a/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java",
                "index 0b7761a850..99e130a75c 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java",
                "@@ -161,3 +161,3 @@ public class DefaultLifecycleProcessor implements LifecycleProcessor, BeanFactor",
                " \t\tLifecycle bean = lifecycleBeans.remove(beanName);",
                "-\t\tif (bean != null && !this.equals(bean)) {",
                "+\t\tif (bean != null && bean != this) {",
                " \t\t\tString[] dependenciesForBean = this.beanFactory.getDependenciesForBean(beanName);"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "38dcd179d5c2ad7630310cba292e80471b000d5f",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521822561,
            "hunks": 11,
            "message": "Guidance of which PropertyAccessors to use with SimpleEvaluationContext Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "index 20272c18e0..672f103ac0 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "@@ -41,3 +41,4 @@ import org.springframework.lang.Nullable;",
                "  * A basic implementation of {@link EvaluationContext} that focuses on a subset",
                "- * of essential SpEL features and configuration options.",
                "+ * of essential SpEL features and customization options, targeting simple",
                "+ * condition evaluation and in particular data binding scenarios.",
                "  *",
                "@@ -50,6 +51,7 @@ import org.springframework.lang.Nullable;",
                "  *",
                "- * <p>When creating {@code SimpleEvaluationContext} you need to choose the level",
                "- * of support you need to deal with properties and methods in SpEL expressions:",
                "+ * <p>When creating a {@code SimpleEvaluationContext} you need to choose the",
                "+ * level of support that you need for property access in SpEL expressions:",
                "  * <ul>",
                "- * <li>Custom {@code PropertyAccessor} only (no reflection)</li>",
                "+ * <li>A custom {@code PropertyAccessor} (typically not reflection-based),",
                "+ * potentially combined with a {@link DataBindingPropertyAccessor}</li>",
                "  * <li>Data binding properties for read-only access</li>",
                "@@ -70,3 +72,4 @@ import org.springframework.lang.Nullable;",
                "  *",
                "- * <p>For more flexibility, consider {@link StandardEvaluationContext} instead.",
                "+ * <p>For more flexibility, in particular for internal configuration",
                "+ * scenarios, consider using {@link StandardEvaluationContext} instead.",
                "  *",
                "@@ -75,2 +78,3 @@ import org.springframework.lang.Nullable;",
                "  * @since 4.3.15",
                "+ * @see #forPropertyAccessors",
                "  * @see #forReadOnlyDataBinding()",
                "@@ -197,8 +201,16 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * Create a {@code SimpleEvaluationContext} for the specified",
                "-\t * {@link PropertyAccessor} delegates.",
                "-\t * @see ReflectivePropertyAccessor",
                "-\t * @see DataBindingPropertyAccessor",
                "+\t * Create a {@code SimpleEvaluationContext} for the specified {@link PropertyAccessor}",
                "+\t * delegates: typically a custom {@code PropertyAccessor} specific to a use case",
                "+\t * (e.g. attribute resolution in a custom data structure), potentially combined with",
                "+\t * a {@link DataBindingPropertyAccessor} if property dereferences are needed as well.",
                "+\t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                "+\t * @see DataBindingPropertyAccessor#forReadWriteAccess()",
                " \t */",
                " \tpublic static Builder forPropertyAccessors(PropertyAccessor... accessors) {",
                "+\t\tfor (PropertyAccessor accessor : accessors) {",
                "+\t\t\tif (accessor.getClass() == ReflectivePropertyAccessor.class) {",
                "+\t\t\t\tthrow new IllegalArgumentException(\"SimpleEvaluationContext is not designed for use with a plain \" +",
                "+\t\t\t\t\t\t\"ReflectivePropertyAccessor. Consider using DataBindingPropertyAccessor or a custom subclass.\");",
                "+\t\t\t}",
                "+\t\t}",
                " \t\treturn new Builder(accessors);",
                "@@ -210,2 +222,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                "+\t * @see #forPropertyAccessors",
                " \t */",
                "@@ -218,3 +231,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t * public properties via {@link DataBindingPropertyAccessor}.",
                "-\t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                "+\t * @see DataBindingPropertyAccessor#forReadWriteAccess()",
                "+\t * @see #forPropertyAccessors",
                " \t */",
                "@@ -242,4 +256,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "-\t\t * {@link org.springframework.core.convert.support.DefaultConversionService}",
                "-\t\t * is used.",
                "+\t\t * {@link org.springframework.core.convert.support.DefaultConversionService} is used.",
                " \t\t * @see #withConversionService",
                "@@ -255,4 +268,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "-\t\t * {@link org.springframework.core.convert.support.DefaultConversionService}",
                "-\t\t * is used.",
                "+\t\t * {@link org.springframework.core.convert.support.DefaultConversionService} is used.",
                " \t\t * @see #withTypeConverter"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ab96bb54280544fb060ecad6d80bf39617b28dc7",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522356820,
            "hunks": 2,
            "message": "Remove redundant check",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "index 516c1e06a3..4cda6ab082 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "@@ -88,5 +88,3 @@ public abstract class AbstractView implements View, ApplicationContextAware {",
                " \t\tthis.mediaTypes.clear();",
                "-\t\tif (supportedMediaTypes != null) {",
                "-\t\t\tthis.mediaTypes.addAll(supportedMediaTypes);",
                "-\t\t}",
                "+\t\tthis.mediaTypes.addAll(supportedMediaTypes);",
                " \t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "index e8ed8636a1..637303983d 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "@@ -59,5 +59,3 @@ public abstract class ViewResolverSupport implements Ordered {",
                " \t\tthis.mediaTypes.clear();",
                "-\t\tif (supportedMediaTypes != null) {",
                "-\t\t\tthis.mediaTypes.addAll(supportedMediaTypes);",
                "-\t\t}",
                "+\t\tthis.mediaTypes.addAll(supportedMediaTypes);",
                " \t}"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "9128226da45eb40f8d65ab495965a1a734f0a2e5",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521905437,
            "hunks": 29,
            "message": "SimpleEvaluationContext.Builder withMethodResolvers/withInstanceMethods Includes DataBindingMethodResolver as ReflectiveMethodResolver subclass. Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "index a0bf5dd411..3c44feef7a 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -43,2 +43,7 @@ public interface EvaluationContext {",
                "+\t/**",
                "+\t * Return a list of accessors that will be asked in turn to read/write a property.",
                "+\t */",
                "+\tList<PropertyAccessor> getPropertyAccessors();",
                "+",
                " \t/**",
                "@@ -54,5 +59,6 @@ public interface EvaluationContext {",
                " \t/**",
                "-\t * Return a list of accessors that will be asked in turn to read/write a property.",
                "+\t * Return a bean resolver that can look up beans by name.",
                " \t */",
                "-\tList<PropertyAccessor> getPropertyAccessors();",
                "+\t@Nullable",
                "+\tBeanResolver getBeanResolver();",
                "@@ -80,8 +86,2 @@ public interface EvaluationContext {",
                "-\t/**",
                "-\t * Return a bean resolver that can look up beans by name.",
                "-\t */",
                "-\t@Nullable",
                "-\tBeanResolver getBeanResolver();",
                "-",
                " \t/**",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java",
                "new file mode 100644",
                "index 0000000000..c5db421c6d",
                "--- /dev/null",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java",
                "@@ -0,0 +1,76 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.expression.spel.support;",
                "+",
                "+import java.lang.reflect.Method;",
                "+import java.lang.reflect.Modifier;",
                "+import java.util.List;",
                "+",
                "+import org.springframework.core.convert.TypeDescriptor;",
                "+import org.springframework.expression.AccessException;",
                "+import org.springframework.expression.EvaluationContext;",
                "+import org.springframework.expression.MethodExecutor;",
                "+import org.springframework.lang.Nullable;",
                "+",
                "+/**",
                "+ * A {@link org.springframework.expression.MethodResolver} variant for data binding",
                "+ * purposes, using reflection to access instance methods on a given target object.",
                "+ *",
                "+ * <p>This accessor does not resolve static methods and also no technical methods",
                "+ * on {@code java.lang.Object} or {@code java.lang.Class}.",
                "+ * For unrestricted resolution, choose {@link ReflectiveMethodResolver} instead.",
                "+ *",
                "+ * @author Juergen Hoeller",
                "+ * @since 4.3.15",
                "+ * @see #forInstanceMethodInvocation()",
                "+ * @see DataBindingPropertyAccessor",
                "+ */",
                "+public class DataBindingMethodResolver extends ReflectiveMethodResolver {",
                "+",
                "+\tprivate DataBindingMethodResolver() {",
                "+\t\tsuper();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\t@Nullable",
                "+\tpublic MethodExecutor resolve(EvaluationContext context, Object targetObject, String name,",
                "+\t\t\tList<TypeDescriptor> argumentTypes) throws AccessException {",
                "+",
                "+\t\tif (targetObject instanceof Class) {",
                "+\t\t\tthrow new IllegalArgumentException(\"DataBindingMethodResolver does not support Class targets\");",
                "+\t\t}",
                "+\t\treturn super.resolve(context, targetObject, name, argumentTypes);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected boolean isCandidateForInvocation(Method method, Class<?> targetClass) {",
                "+\t\tif (Modifier.isStatic(method.getModifiers())) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                "+\t\tClass<?> clazz = method.getDeclaringClass();",
                "+\t\treturn (clazz != Object.class && clazz != Class.class && !ClassLoader.class.isAssignableFrom(targetClass));",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Create a new data-binding method resolver for instance method resolution.",
                "+\t */",
                "+\tpublic static DataBindingMethodResolver forInstanceMethodInvocation() {",
                "+\t\treturn new DataBindingMethodResolver();",
                "+\t}",
                "+",
                "+}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "index df7860a5fd..1d65b310db 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "@@ -22,4 +22,2 @@ import java.lang.reflect.Proxy;",
                " import java.util.ArrayList;",
                "-import java.util.Arrays;",
                "-import java.util.Collection;",
                " import java.util.Collections;",
                "@@ -84,2 +82,8 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "+\t/**",
                "+\t * Register a filter for methods on the given type.",
                "+\t * @param type the type to filter on",
                "+\t * @param filter the corresponding method filter,",
                "+\t * or {@code null} to clear any filter for the given type",
                "+\t */",
                " \tpublic void registerMethodFilter(Class<?> type, @Nullable MethodFilter filter) {",
                "@@ -96,3 +100,2 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "-",
                " \t/**",
                "@@ -114,3 +117,3 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                " \t\t\tClass<?> type = (targetObject instanceof Class ? (Class<?>) targetObject : targetObject.getClass());",
                "-\t\t\tList<Method> methods = new ArrayList<>(getMethods(type, targetObject));",
                "+\t\t\tArrayList<Method> methods = new ArrayList<>(getMethods(type, targetObject));",
                "@@ -120,3 +123,3 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                " \t\t\t\tList<Method> filtered = filter.filter(methods);",
                "-\t\t\t\tmethods = (filtered instanceof ArrayList ? filtered : new ArrayList<>(filtered));",
                "+\t\t\t\tmethods = (filtered instanceof ArrayList ? (ArrayList<Method>) filtered : new ArrayList<>(filtered));",
                " \t\t\t}",
                "@@ -128,3 +131,3 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                " \t\t\t\t\tint m2pl = m2.getParameterCount();",
                "-\t\t\t\t\t// varargs methods go last",
                "+\t\t\t\t\t// vararg methods go last",
                " \t\t\t\t\tif (m1pl == m2pl) {",
                "@@ -220,3 +223,3 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "-\tprivate Collection<Method> getMethods(Class<?> type, Object targetObject) {",
                "+\tprivate Set<Method> getMethods(Class<?> type, Object targetObject) {",
                " \t\tif (targetObject instanceof Class) {",
                "@@ -238,3 +241,8 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                " \t\t\tfor (Class<?> ifc : type.getInterfaces()) {",
                "-\t\t\t\tCollections.addAll(result, getMethods(ifc));",
                "+\t\t\t\tMethod[] methods = getMethods(ifc);",
                "+\t\t\t\tfor (Method method : methods) {",
                "+\t\t\t\t\tif (isCandidateForInvocation(method, type)) {",
                "+\t\t\t\t\t\tresult.add(method);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                " \t\t\t}",
                "@@ -243,3 +251,10 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                " \t\telse {",
                "-\t\t\treturn Arrays.asList(getMethods(type));",
                "+\t\t\tSet<Method> result = new LinkedHashSet<>();",
                "+\t\t\tMethod[] methods = getMethods(type);",
                "+\t\t\tfor (Method method : methods) {",
                "+\t\t\t\tif (isCandidateForInvocation(method, type)) {",
                "+\t\t\t\t\tresult.add(method);",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\treturn result;",
                " \t\t}",
                "@@ -259,2 +274,15 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "+\t/**",
                "+\t * Determine whether the given {@code Method} is a candidate for method resolution",
                "+\t * on an instance of the given target class.",
                "+\t * <p>The default implementation considers any method as a candidate, even for",
                "+\t * static methods sand non-user-declared methods on the {@link Object} base class.",
                "+\t * @param method the Method to evaluate",
                "+\t * @param targetClass the concrete target class that is being introspected",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tprotected boolean isCandidateForInvocation(Method method, Class<?> targetClass) {",
                "+\t\treturn true;",
                "+\t}",
                "+",
                " }",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "index 41eb0ed7bc..21ff6f82d6 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "@@ -423,3 +423,4 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t/**",
                "-\t * Determine whether the given {@code Method} is a candidate for property access.",
                "+\t * Determine whether the given {@code Method} is a candidate for property access",
                "+\t * on an instance of the given target class.",
                " \t * <p>The default implementation considers any method as a candidate, even for",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "index 672f103ac0..fa379a47d5 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "@@ -94,2 +94,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "+\tprivate final List<MethodResolver> methodResolvers;",
                "+",
                " \tprivate final TypeConverter typeConverter;",
                "@@ -103,4 +105,7 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\tprivate SimpleEvaluationContext(List<PropertyAccessor> accessors, @Nullable TypeConverter converter) {",
                "+\tprivate SimpleEvaluationContext(List<PropertyAccessor> accessors, List<MethodResolver> resolvers,",
                "+\t\t\t@Nullable TypeConverter converter) {",
                "+",
                " \t\tthis.propertyAccessors = accessors;",
                "+\t\tthis.methodResolvers = resolvers;",
                " \t\tthis.typeConverter = (converter != null ? converter : new StandardTypeConverter());",
                "@@ -121,2 +126,6 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "+\t/**",
                "+\t * Return the specified {@link PropertyAccessor} delegates, if any.",
                "+\t * @see #forPropertyAccessors",
                "+\t */",
                " \t@Override",
                "@@ -136,3 +145,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * Return a single {@link ReflectiveMethodResolver}.",
                "+\t * Return the specified {@link MethodResolver} delegates, if any.",
                "+\t * @see Builder#withMethodResolvers",
                " \t */",
                "@@ -140,3 +150,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tpublic List<MethodResolver> getMethodResolvers() {",
                "-\t\treturn Collections.emptyList();",
                "+\t\treturn this.methodResolvers;",
                " \t}",
                "@@ -144,4 +154,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * {@code SimpleEvaluationContext} does not support use of bean references.",
                "-\t * @return Always returns {@code null}",
                "+\t * {@code SimpleEvaluationContext} does not support the use of bean references.",
                "+\t * @return always {@code null}",
                " \t */",
                "@@ -166,2 +176,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t * <p>By default this is {@link StandardTypeConverter}.",
                "+\t * @see Builder#withTypeConverter",
                "+\t * @see Builder#withConversionService",
                " \t */",
                "@@ -205,2 +217,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t * a {@link DataBindingPropertyAccessor} if property dereferences are needed as well.",
                "+\t * @param accessors the accessor delegates to use",
                " \t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                "@@ -244,3 +257,5 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\t\tprivate final List<PropertyAccessor> propertyAccessors;",
                "+\t\tprivate final List<PropertyAccessor> accessors;",
                "+",
                "+\t\tprivate List<MethodResolver> resolvers = Collections.emptyList();",
                "@@ -250,3 +265,34 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\tpublic Builder(PropertyAccessor... accessors) {",
                "-\t\t\tthis.propertyAccessors = Arrays.asList(accessors);",
                "+\t\t\tthis.accessors = Arrays.asList(accessors);",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Register the specified {@link MethodResolver} delegates for",
                "+\t\t * a combination of property access and method resolution.",
                "+\t\t * @param resolvers the resolver delegates to use",
                "+\t\t * @see #withInstanceMethods()",
                "+\t\t * @see SimpleEvaluationContext#forPropertyAccessors",
                "+\t\t */",
                "+\t\tpublic Builder withMethodResolvers(MethodResolver... resolvers) {",
                "+\t\t\tfor (MethodResolver resolver : resolvers) {",
                "+\t\t\t\tif (resolver.getClass() == ReflectiveMethodResolver.class) {",
                "+\t\t\t\t\tthrow new IllegalArgumentException(\"SimpleEvaluationContext is not designed for use with a plain \" +",
                "+\t\t\t\t\t\t\t\"ReflectiveMethodResolver. Consider using DataBindingMethodResolver or a custom subclass.\");",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tthis.resolvers = Arrays.asList(resolvers);",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Register a {@link DataBindingMethodResolver} for instance method invocation purposes",
                "+\t\t * (i.e. not supporting static methods) in addition to the specified property accessors,",
                "+\t\t * typically in combination with a {@link DataBindingPropertyAccessor}.",
                "+\t\t * @see #withMethodResolvers",
                "+\t\t * @see SimpleEvaluationContext#forReadOnlyDataBinding()",
                "+\t\t * @see SimpleEvaluationContext#forReadWriteDataBinding()",
                "+\t\t */",
                "+\t\tpublic Builder withInstanceMethods() {",
                "+\t\t\tthis.resolvers = Collections.singletonList(DataBindingMethodResolver.forInstanceMethodInvocation());",
                "+\t\t\treturn this;",
                " \t\t}",
                "@@ -278,3 +324,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\tpublic SimpleEvaluationContext build() {",
                "-\t\t\treturn new SimpleEvaluationContext(this.propertyAccessors, this.typeConverter);",
                "+\t\t\treturn new SimpleEvaluationContext(this.accessors, this.resolvers, this.typeConverter);",
                " \t\t}"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "881817678fafb7ace42264242cb90a733ec310b8",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521222540,
            "hunks": 12,
            "message": "Scope annotation in class hierarchies vs XML bean definition inheritance Issue: SPR-16602 (cherry picked from commit 914b247)",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/Scope.java b/spring-context/src/main/java/org/springframework/context/annotation/Scope.java",
                "index b0daf8c0ce..cf64e8acd5 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/Scope.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/Scope.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -37,2 +37,8 @@ import org.springframework.core.annotation.AliasFor;",
                "  *",
                "+ * <p><b>NOTE:</b> {@code @Scope} annotations are only introspected on the",
                "+ * concrete bean class (for annotated components) or the factory method",
                "+ * (for {@code @Bean} methods). In contrast to XML bean definitions,",
                "+ * there is no notion of bean definition inheritance, and inheritance",
                "+ * hierarchies at the class level are irrelevant for metadata purposes.",
                "+ *",
                "  * <p>In this context, <em>scope</em> means the lifecycle of an instance,",
                "diff --git a/src/asciidoc/core-beans.adoc b/src/asciidoc/core-beans.adoc",
                "index 0f367cb711..a2b044842d 100644",
                "--- a/src/asciidoc/core-beans.adoc",
                "+++ b/src/asciidoc/core-beans.adoc",
                "@@ -308,19 +308,19 @@ Typically, such configuration will live in a \".groovy\" file with a structure as",
                " ----",
                "-    beans {",
                "-        dataSource(BasicDataSource) {",
                "-            driverClassName = \"org.hsqldb.jdbcDriver\"",
                "-            url = \"jdbc:hsqldb:mem:grailsDB\"",
                "-            username = \"sa\"",
                "-            password = \"\"",
                "-            settings = [mynew:\"setting\"]",
                "-        }",
                "-        sessionFactory(SessionFactory) {",
                "-            dataSource = dataSource",
                "-        }",
                "-        myService(MyService) {",
                "-            nestedBean = { AnotherBean bean ->",
                "-                dataSource = dataSource",
                "-            }",
                "-        }",
                "-    }",
                "+\tbeans {",
                "+\t\tdataSource(BasicDataSource) {",
                "+\t\t\tdriverClassName = \"org.hsqldb.jdbcDriver\"",
                "+\t\t\turl = \"jdbc:hsqldb:mem:grailsDB\"",
                "+\t\t\tusername = \"sa\"",
                "+\t\t\tpassword = \"\"",
                "+\t\t\tsettings = [mynew:\"setting\"]",
                "+\t\t}",
                "+\t\tsessionFactory(SessionFactory) {",
                "+\t\t\tdataSource = dataSource",
                "+\t\t}",
                "+\t\tmyService(MyService) {",
                "+\t\t\tnestedBean = { AnotherBean bean ->",
                "+\t\t\t\tdataSource = dataSource",
                "+\t\t\t}",
                "+\t\t}",
                "+\t}",
                " ----",
                "@@ -4471,3 +4471,3 @@ Your target beans can implement the `org.springframework.core.Ordered` interface",
                " the `@Order` or standard `@Priority` annotation if you want items in the array or list",
                "-to be sorted into a specific order. Otherwise their order will follow the registration",
                "+to be sorted in a specific order. Otherwise their order will follow the registration",
                " order of the corresponding target bean definitions in the container.",
                "@@ -4476,3 +4476,3 @@ The `@Order` annotation may be declared at target class level but also on `@Bean",
                " potentially being very individual per bean definition (in case of multiple definitions",
                "-with the same bean class). `@Order` values may influence priorities at injection points",
                "+with the same bean class). `@Order` values may influence priorities at injection points,",
                " but please be aware that they do not influence singleton startup order which is an",
                "@@ -4481,3 +4481,3 @@ orthogonal concern determined by dependency relationships and `@DependsOn` decla",
                " Note that the standard `javax.annotation.Priority` annotation is not available at the",
                "-`@Bean` level since it cannot be declared on methods. Its semantics can be modelled",
                "+`@Bean` level since it cannot be declared on methods. Its semantics can be modeled",
                " through `@Order` values in combination with `@Primary` on a single bean per type.",
                "@@ -5733,6 +5733,6 @@ corresponding bean definition.",
                "-If such an annotation contains no _name_ `value` or for any other detected component (such",
                "-as those discovered by custom filters), the default bean name generator returns the",
                "-uncapitalized non-qualified class name. For example, if the following two components",
                "-were detected, the names would be `myMovieLister` and `movieFinderImpl`:",
                "+If such an annotation contains no _name_ `value` or for any other detected component",
                "+(such as those discovered by custom filters), the default bean name generator returns",
                "+the uncapitalized non-qualified class name. For example, if the following component",
                "+classes were detected, the names would be `myMovieLister` and `movieFinderImpl`:",
                "@@ -5795,4 +5795,4 @@ As with Spring-managed components in general, the default and most common scope",
                " autodetected components is `singleton`. However, sometimes you need a different scope",
                "-which can be specified via the `@Scope` annotation. Simply provide the name of the scope",
                "-within the annotation:",
                "+which can be specified via the `@Scope` annotation. Simply provide the name of the",
                "+scope within the annotation:",
                "@@ -5808,4 +5808,15 @@ within the annotation:",
                "-For details on web-specific scopes, see <<beans-factory-scopes-other>>.",
                "+[NOTE]",
                "+====",
                "+`@Scope` annotations are only introspected on the concrete bean class (for annotated",
                "+components) or the factory method (for `@Bean` methods). In contrast to XML bean",
                "+definitions, there is no notion of bean definition inheritance, and inheritance",
                "+hierarchies at the class level are irrelevant for metadata purposes.",
                "+====",
                "+For details on web-specific scopes such as \"request\"/\"session\" in a Spring context,",
                "+see <<beans-factory-scopes-other>>. Like the pre-built annotations for those scopes,",
                "+you may also compose your own scoping annotations using Spring's meta-annotation",
                "+approach: e.g. a custom annotation meta-annotated with `@Scope(\"prototype\")`,",
                "+possibly also declaring a custom scoped-proxy mode.",
                "@@ -5834,4 +5845,3 @@ fully-qualified class name when configuring the scanner:",
                " \t<beans>",
                "-\t\t<context:component-scan base-package=\"org.example\"",
                "-\t\t\t\tscope-resolver=\"org.example.MyScopeResolver\" />",
                "+\t\t<context:component-scan base-package=\"org.example\" scope-resolver=\"org.example.MyScopeResolver\"/>",
                " \t</beans>",
                "@@ -5859,4 +5869,3 @@ the following configuration will result in standard JDK dynamic proxies:",
                " \t<beans>",
                "-\t\t<context:component-scan base-package=\"org.example\"",
                "-\t\t\tscoped-proxy=\"interfaces\" />",
                "+\t\t<context:component-scan base-package=\"org.example\" scoped-proxy=\"interfaces\"/>",
                " \t</beans>",
                "@@ -7978,2 +7987,11 @@ as a default. If no default is specified and a property cannot be resolved, an",
                "+[NOTE]",
                "+====",
                "+The `@PropertySource` annotation is repeatable according to Java 8 conventions.",
                "+However, all such `@PropertySource` annotations need to be declared at the same",
                "+level: either directly on the configuration class or as meta-annotations within the",
                "+same custom annotation. Mixing of direct annotations and meta-annotations is not",
                "+recommended since direct annotations will effectively override meta-annotations.",
                "+====",
                "+"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/Scope.java",
                "src/asciidoc/core-beans.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4d0adc7d95fb0e5694d5d4406362dc51b87659a3",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522230538,
            "hunks": 1,
            "message": "Upgrade to Tomcat 8.5.29",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 899486b915..3fbabecd4f 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -77,3 +77,3 @@ configure(allprojects) { project ->",
                " \text.tiles3Version        = \"3.0.7\"",
                "-\text.tomcatVersion        = \"8.5.28\"",
                "+\text.tomcatVersion        = \"8.5.29\"",
                " \text.tyrusVersion         = \"1.3.5\"  // constrained by WebLogic 12.1.3 support"
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1fd5935afab55a25776e8d5561e197e864086ef1",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521630400,
            "hunks": 30,
            "message": "SimplePropertyAccessor with configurable write support Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "index 9eb242c093..3bf6cdf135 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -47,3 +47,3 @@ import org.springframework.util.StringUtils;",
                " /**",
                "- * Simple {@link PropertyAccessor} that uses reflection to access properties",
                "+ * A powerful {@link PropertyAccessor} that uses reflection to access properties",
                "  * for reading and writing.",
                "@@ -57,2 +57,5 @@ import org.springframework.util.StringUtils;",
                "  * @since 3.0",
                "+ * @see StandardEvaluationContext",
                "+ * @see SimpleEvaluationContext",
                "+ * @see SimplePropertyAccessor",
                "  */",
                "@@ -65,3 +68,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \tstatic {",
                "-\t\tSet<Class<?>> booleanTypes = new HashSet<>();",
                "+\t\tSet<Class<?>> booleanTypes = new HashSet<>(4);",
                " \t\tbooleanTypes.add(Boolean.class);",
                "@@ -79,3 +82,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t@Nullable",
                "-\tprivate InvokerPair lastReadInvokerPair;",
                "+\tprivate volatile InvokerPair lastReadInvokerPair;",
                "@@ -96,2 +99,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tClass<?> type = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "@@ -100,2 +104,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tPropertyCacheKey cacheKey = new PropertyCacheKey(type, name, target instanceof Class);",
                "@@ -104,2 +109,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tMethod method = findGetterForProperty(name, type, target);",
                "@@ -123,9 +129,4 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "-\t\treturn false;",
                "-\t}",
                "-\t@Nullable",
                "-\tpublic Member getLastReadInvokerPair() {",
                "-\t\tInvokerPair lastReadInvoker = this.lastReadInvokerPair;",
                "-\t\treturn (lastReadInvoker != null ? lastReadInvoker.member : null);",
                "+\t\treturn false;",
                " \t}",
                "@@ -146,3 +147,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\tInvokerPair invoker = this.readerCache.get(cacheKey);",
                "-\t\tlastReadInvokerPair = invoker;",
                "+\t\tthis.lastReadInvokerPair = invoker;",
                "@@ -153,3 +154,2 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t\tif (method != null) {",
                "-\t\t\t\t\t// TODO remove the duplication here between canRead and read",
                " \t\t\t\t\t// Treat it like a property...",
                "@@ -159,3 +159,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t\t\tinvoker = new InvokerPair(method, typeDescriptor);",
                "-\t\t\t\t\tlastReadInvokerPair = invoker;",
                "+\t\t\t\t\tthis.lastReadInvokerPair = invoker;",
                " \t\t\t\t\tthis.readerCache.put(cacheKey, invoker);",
                "@@ -181,3 +181,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t\t\tinvoker = new InvokerPair(field, new TypeDescriptor(field));",
                "-\t\t\t\t\tlastReadInvokerPair = invoker;",
                "+\t\t\t\t\tthis.lastReadInvokerPair = invoker;",
                " \t\t\t\t\tthis.readerCache.put(cacheKey, invoker);",
                "@@ -205,2 +205,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tClass<?> type = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "@@ -210,2 +211,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tMethod method = findSetterForProperty(name, type, target);",
                "@@ -227,2 +229,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\treturn false;",
                "@@ -248,2 +251,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tPropertyCacheKey cacheKey = new PropertyCacheKey(type, name, target instanceof Class);",
                "@@ -296,2 +300,13 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\t/**",
                "+\t * @deprecated as of 4.3.15 since it is not used within the framework anymore",
                "+\t */",
                "+\t@Deprecated",
                "+\t@Nullable",
                "+\tpublic Member getLastReadInvokerPair() {",
                "+\t\tInvokerPair lastReadInvoker = this.lastReadInvokerPair;",
                "+\t\treturn (lastReadInvoker != null ? lastReadInvoker.member : null);",
                "+\t}",
                "+",
                "+",
                " \t@Nullable",
                "@@ -306,3 +321,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\tif (typeDescriptor == null) {",
                "-\t\t\t// attempt to populate the cache entry",
                "+\t\t\t// Attempt to populate the cache entry",
                " \t\t\ttry {",
                "@@ -316,3 +331,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tcatch (AccessException ex) {",
                "-\t\t\t\t// continue with null type descriptor",
                "+\t\t\t\t// Continue with null type descriptor",
                " \t\t\t}",
                "@@ -340,11 +355,2 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "-\t@Nullable",
                "-\tprivate Field findField(String name, Class<?> clazz, Object target) {",
                "-\t\tField field = findField(name, clazz, target instanceof Class);",
                "-\t\tif (field == null && target instanceof Class) {",
                "-\t\t\tfield = findField(name, target.getClass(), false);",
                "-\t\t}",
                "-\t\treturn field;",
                "-\t}",
                "-",
                " \t/**",
                "@@ -379,3 +385,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tfor (Method method : methods) {",
                "-\t\t\t\tif (method.getName().equals(prefix + methodSuffix) &&",
                "+\t\t\t\tif (isCandidateForProperty(method) && method.getName().equals(prefix + methodSuffix) &&",
                " \t\t\t\t\t\tmethod.getParameterCount() == numberOfParams &&",
                "@@ -388,3 +394,13 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\treturn null;",
                "+\t}",
                "+\t/**",
                "+\t * Determine whether the given {@code Method} is a candidate for property access.",
                "+\t * <p>The default implementation considers any method as a candidate, even for",
                "+\t * non-user-declared properties on the {@link Object} base class.",
                "+\t * @param method the Method to evaluate",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tprotected boolean isCandidateForProperty(Method method) {",
                "+\t\treturn true;",
                " \t}",
                "@@ -392,3 +408,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t/**",
                "-\t * Returns class methods ordered with non bridge methods appearing higher.",
                "+\t * Return class methods ordered with non bridge methods appearing higher.",
                " \t */",
                "@@ -396,3 +412,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\tMethod[] methods = clazz.getMethods();",
                "-\t\tArrays.sort(methods, (o1, o2) -> (o1.isBridge() == o2.isBridge()) ? 0 : (o1.isBridge() ? 1 : -1));",
                "+\t\tArrays.sort(methods, (o1, o2) -> (o1.isBridge() == o2.isBridge() ? 0 : (o1.isBridge() ? 1 : -1)));",
                " \t\treturn methods;",
                "@@ -409,5 +425,5 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\tif (suffix.length() > 0 && Character.isUpperCase(suffix.charAt(0))) {",
                "-\t\t\treturn new String[] { suffix };",
                "+\t\t\treturn new String[] {suffix};",
                " \t\t}",
                "-\t\treturn new String[] { suffix, StringUtils.capitalize(suffix) };",
                "+\t\treturn new String[] {suffix, StringUtils.capitalize(suffix)};",
                " \t}",
                "@@ -425,2 +441,11 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\t@Nullable",
                "+\tprivate Field findField(String name, Class<?> clazz, Object target) {",
                "+\t\tField field = findField(name, clazz, target instanceof Class);",
                "+\t\tif (field == null && target instanceof Class) {",
                "+\t\t\tfield = findField(name, target.getClass(), false);",
                "+\t\t}",
                "+\t\treturn field;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -460,3 +485,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t */",
                "-\tpublic PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, @Nullable Object target, String name) {",
                "+\tpublic PropertyAccessor createOptimalAccessor(EvaluationContext context, @Nullable Object target, String name) {",
                " \t\t// Don't be clever for arrays or null target",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimplePropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimplePropertyAccessor.java",
                "new file mode 100644",
                "index 0000000000..bf8bc70019",
                "--- /dev/null",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimplePropertyAccessor.java",
                "@@ -0,0 +1,86 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.expression.spel.support;",
                "+",
                "+import java.lang.reflect.Method;",
                "+",
                "+import org.springframework.expression.AccessException;",
                "+import org.springframework.expression.EvaluationContext;",
                "+import org.springframework.lang.Nullable;",
                "+",
                "+/**",
                "+ * A simple {@link org.springframework.expression.PropertyAccessor} variant that",
                "+ * uses reflection to access properties for reading and possibly also writing.",
                "+ *",
                "+ * <p>A property can be accessed through a public getter method (when being read)",
                "+ * or a public setter method (when being written), and also as a public field.",
                "+ *",
                "+ * <p>This accessor is explicitly designed for user-level property evaluation",
                "+ * and does not resolve technical properties on {@code java.lang.Object}.",
                "+ * For more resolution power, choose {@link ReflectivePropertyAccessor} instead.",
                "+ *",
                "+ * @author Juergen Hoeller",
                "+ * @since 4.3.15",
                "+ * @see SimpleEvaluationContext",
                "+ * @see StandardEvaluationContext",
                "+ * @see ReflectivePropertyAccessor",
                "+ */",
                "+public class SimplePropertyAccessor extends ReflectivePropertyAccessor {",
                "+",
                "+\tprivate final boolean allowWrite;",
                "+",
                "+",
                "+\t/**",
                "+\t * Create a new property accessor for reading as well writing.",
                "+\t * @see #SimplePropertyAccessor(boolean)",
                "+\t */",
                "+\tpublic SimplePropertyAccessor() {",
                "+\t\tthis.allowWrite = true;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a new property accessor for reading and possibly also writing.",
                "+\t * @param allowWrite whether to also allow for write operations",
                "+\t * @see #canWrite",
                "+\t */",
                "+\tpublic SimplePropertyAccessor(boolean allowWrite) {",
                "+\t\tthis.allowWrite = allowWrite;",
                "+\t}",
                "+",
                "+",
                "+\t@Override",
                "+\tpublic boolean canWrite(EvaluationContext context, @Nullable Object target, String name) throws AccessException {",
                "+\t\treturn (this.allowWrite && super.canWrite(context, target, name));",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic void write(EvaluationContext context, @Nullable Object target, String name, @Nullable Object newValue)",
                "+\t\t\tthrows AccessException {",
                "+",
                "+\t\tif (!this.allowWrite) {",
                "+\t\t\tthrow new AccessException(\"PropertyAccessor for property '\" + name +",
                "+\t\t\t\t\t\"' on target [\" + target + \"] does not allow write operations\");",
                "+\t\t}",
                "+\t\tsuper.write(context, target, name, newValue);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected boolean isCandidateForProperty(Method method) {",
                "+\t\treturn (method.getDeclaringClass() != Object.class);",
                "+\t}",
                "+",
                "+}"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimplePropertyAccessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        }
    ]
}
