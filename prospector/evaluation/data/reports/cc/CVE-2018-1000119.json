{
    "advisory_record": {
        "cve_id": "CVE-2018-1000119",
        "description": "Sinatra rack-protection versions 1.5.4 and 2.0.0.rc3 and earlier contains a timing attack vulnerability in the CSRF token checking that can result in signatures can be exposed. This attack appear to be exploitable via network connectivity to the ruby application. This vulnerability appears to have been fixed in 1.5.5 and 2.0.0.",
        "reserved_timestamp": 1520380800,
        "published_timestamp": 1520431200,
        "updated_timestamp": 1532685421,
        "repository_url": null,
        "references": {
            "": 151,
            "https://access.redhat.com/support/": 10,
            "commit::8aa6c42ef724f93ae309fb7c5668e19ad547eceb": 9,
            "https://access.redhat.com/downloads/": 8,
            "https://access.redhat.com/errata/": 6,
            "https://access.redhat.com/labs/": 6,
            "https://access.redhat.com/security/security-updates/#/cve": 5,
            "https://access.redhat.com/errata/RHSA-2018:1060": 4,
            "https://snyk.io/vuln/SNYK-RUBY-SINATRA-20470": 4,
            "https://snyk.io/vuln/SNYK-RUBY-RACKPROTECTION-20395": 4,
            "https://access.redhat.com/management/": 4,
            "https://access.redhat.com/": 4,
            "https://access.redhat.com/documentation": 4,
            "https://access.redhat.com/product-life-cycles/": 4,
            "https://access.redhat.com/security": 4,
            "https://access.redhat.com/security/security-updates/#/security-advisories": 4,
            "https://access.redhat.com/support/contact/": 4,
            "https://status.redhat.com": 4,
            "commit::6b58c229609a5b6556a6cfb0d955a3676ad43a26": 3,
            "https://access.redhat.com/products/red-hat-enterprise-linux/": 3,
            "https://access.redhat.com/products/red-hat-openshift-container-platform": 3,
            "https://access.redhat.com/products/red-hat-ansible-automation-platform/": 3,
            "https://access.redhat.com/products/": 3,
            "https://github.com/sinatra/rack-protection/pull/98": 2,
            "https://www.debian.org/security/2018/dsa-4247": 2,
            "https://access.redhat.com/security/updates/classification/": 2,
            "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax": 2,
            "commit::9d5de415304903c17417c915e3999959beba2398": 2,
            "https://github.com/advisories/GHSA-688c-3x49-6rqj": 2,
            "https://access.redhat.com/downloads/content/package-browser": 2,
            "https://catalog.redhat.com/software/containers/explore/": 2,
            "https://access.redhat.com/articles/1202803": 2,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Solution": 2,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Article": 2,
            "https://access.redhat.com/documentation/en/red_hat_enterprise_linux": 2,
            "https://access.redhat.com/documentation/en/openshift_container_platform": 2,
            "https://access.redhat.com/documentation/en/red_hat_ansible_automation_platform": 2,
            "https://access.redhat.com/documentation/": 2,
            "https://access.redhat.com/security/": 2,
            "https://access.redhat.com/security/vulnerabilities": 2,
            "https://access.redhat.com/security/data": 2,
            "https://access.redhat.com/security/security-updates/#/security-labs": 2,
            "https://access.redhat.com/security/updates/backporting/": 2,
            "https://access.redhat.com/support/cases/": 2,
            "https://access.redhat.com/support/cases/#/troubleshoot": 2,
            "https://access.redhat.com/community": 2,
            "https://access.redhat.com/community/": 2,
            "https://access.redhat.com/discussions/": 2,
            "https://access.redhat.com/announcements/": 2,
            "https://access.redhat.com/accelerators/": 2,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html": 2,
            "https://cloud.redhat.com/insights": 2,
            "https://access.redhat.com/changeLanguage?language=en": 2,
            "https://access.redhat.com/changeLanguage?language=ko": 2,
            "https://access.redhat.com/changeLanguage?language=ja": 2,
            "https://access.redhat.com/changeLanguage?language=zh_CN": 2,
            "https://redhat.com/en": 2,
            "https://twitter.com/RedHat": 2,
            "https://access.redhat.com/management": 2,
            "https://access.redhat.com/support": 2,
            "https://access.redhat.com/support/customer-service": 2,
            "https://access.redhat.com/articles/33844": 2,
            "https://access.redhat.com/help/login_assistance": 2,
            "https://www.redhat.com/en/trust": 2,
            "https://www.redhat.com/en/about/browser-support": 2,
            "https://www.redhat.com/en/about/digital-accessibility": 2,
            "https://access.redhat.com/recognition/": 2,
            "https://access.redhat.com/help/colophon/": 2,
            "https://www.redhat.com/": 2,
            "http://developers.redhat.com/": 2,
            "https://connect.redhat.com/": 2,
            "https://cloud.redhat.com/": 2,
            "https://access.redhat.com/subscription-value": 2,
            "https://www.redhat.com/about/": 2,
            "http://jobs.redhat.com": 2,
            "https://redhat.com/en/about/company": 2,
            "https://redhat.com/en/jobs": 2,
            "https://redhat.com/en/events": 2,
            "https://redhat.com/en/about/office-locations": 2,
            "https://redhat.com/en/contact": 2,
            "https://redhat.com/en/blog": 2,
            "https://redhat.com/en/about/our-culture/diversity-equity-inclusion": 2,
            "https://coolstuff.redhat.com/": 2,
            "https://www.redhat.com/en/summit": 2,
            "https://redhat.com/en/about/privacy-policy": 2,
            "https://redhat.com/en/about/terms-use": 2,
            "https://redhat.com/en/about/all-policies-guidelines": 2,
            "https://redhat.com/en/about/digital-accessibility": 2,
            "https://github.com/features/actions": 1,
            "https://github.com/features/packages": 1,
            "https://github.com/features/security": 1,
            "https://github.com/features/codespaces": 1,
            "https://github.com/features/copilot": 1,
            "https://github.com/features/code-review": 1,
            "https://github.com/features/issues": 1,
            "https://github.com/features/discussions": 1,
            "https://github.com/features": 1,
            "https://docs.github.com": 1,
            "https://skills.github.com": 1,
            "https://github.blog": 1,
            "https://github.com/enterprise": 1,
            "https://github.com/team": 1,
            "https://github.com/enterprise/startups": 1,
            "https://github.com/solutions/industries/healthcare": 1,
            "https://github.com/solutions/industries/financial-services": 1,
            "https://github.com/solutions/industries/manufacturing": 1,
            "https://github.com/solutions/ci-cd": 1,
            "https://github.com/solutions/devops": 1,
            "https://github.com/solutions/devsecops": 1,
            "https://resources.github.com/learn/pathways": 1,
            "https://resources.github.com": 1,
            "https://github.com/customer-stories": 1,
            "https://partner.github.com": 1,
            "https://github.com/readme": 1,
            "https://github.com/topics": 1,
            "https://github.com/trending": 1,
            "https://github.com/collections": 1,
            "https://github.com/enterprise/advanced-security": 1,
            "https://github.com/pricing": 1,
            "https://github.co/hiddenchars": 1,
            "https://github.com/zzak": 1,
            "https://github.com/kytrinyx": 1,
            "https://github.com/sinatra/rack-protection/pull/87": 1,
            "https://github.com/jeltz": 1,
            "commit::d8068e872b0f19ef9de25265552cb1b835270901": 1,
            "commit::06f1b5d1bb00d81ebbad25414fb74f5bb9397c2f": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-1000119": 1,
            "https://cve.mitre.org": 1,
            "https://github.com/cveproject/cvelist/": 1,
            "https://github.com/CVEProject/cvelist/blob/master/2018/1000xxx/CVE-2018-1000119.json": 1,
            "https://github.com/CVEProject/cvelist/pull/342": 1,
            "https://github.com": 1,
            "https://docs.github.com/site-policy/github-terms/github-terms-of-service": 1,
            "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement": 1,
            "https://github.com/security": 1,
            "https://www.githubstatus.com/": 1,
            "https://docs.github.com/": 1,
            "https://support.github.com?tags=dotcom-footer": 1,
            "https://access.redhat.com/changeLanguage?language=fr": 1,
            "https://access.redhat.com/products/red-hat-satellite/": 1,
            "https://access.redhat.com/products/red-hat-subscription-management/": 1,
            "https://access.redhat.com/products/red-hat-insights/": 1,
            "https://access.redhat.com/products/red-hat-openstack-platform/": 1,
            "https://access.redhat.com/products/red-hat-openshift-container-platform/": 1,
            "https://access.redhat.com/products/red-hat-openshift-ai/": 1,
            "https://access.redhat.com/products/openshift-dedicated-red-hat/": 1,
            "https://access.redhat.com/products/red-hat-advanced-cluster-security-for-kubernetes/": 1,
            "https://access.redhat.com/products/red-hat-advanced-cluster-management-for-kubernetes/": 1,
            "https://access.redhat.com/products/red-hat-quay/": 1,
            "https://access.redhat.com/products/red-hat-openshift-dev-spaces": 1,
            "https://access.redhat.com/products/red-hat-openshift-service-aws": 1,
            "https://access.redhat.com/products/red-hat-storage/": 1,
            "https://access.redhat.com/products/red-hat-hyperconverged-infrastructure/": 1,
            "https://access.redhat.com/products/red-hat-ceph-storage/": 1,
            "https://access.redhat.com/products/red-hat-openshift-data-foundation": 1,
            "https://access.redhat.com/products/red-hat-runtimes/": 1,
            "https://access.redhat.com/products/red-hat-jboss-enterprise-application-platform/": 1,
            "https://access.redhat.com/products/red-hat-data-grid/": 1,
            "https://access.redhat.com/products/red-hat-jboss-web-server/": 1,
            "https://access.redhat.com/products/red-hat-build-of-keycloak/": 1,
            "https://access.redhat.com/products/spring-boot/": 1,
            "https://access.redhat.com/products/nodejs/": 1,
            "https://access.redhat.com/products/quarkus/": 1,
            "https://access.redhat.com/products/red-hat-application-foundations/": 1,
            "https://access.redhat.com/products/red-hat-fuse/": 1,
            "https://access.redhat.com/products/red-hat-amq/": 1,
            "https://access.redhat.com/products/red-hat-3scale/": 1,
            "https://console.redhat.com/insights/patch/advisories/RHSA-2018:1060": 1,
            "https://access.redhat.com/articles/11258": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1534027": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1550243": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1557366": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1079.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1086.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1000119.html": 1,
            "https://access.redhat.com/security/updates/classification/#important": 1,
            "https://access.redhat.com/security/team/contact/": 1,
            "https://www.first.org/cvss/user-guide": 1,
            "https://access.redhat.com/security/cve/CVE-2019-9213": 1,
            "https://access.redhat.com/security/cve/CVE-2019-18634": 1,
            "https://access.redhat.com/security/cve/CVE-2020-11023": 1,
            "https://access.redhat.com/security/cve/CVE-2019-15031": 1,
            "https://access.redhat.com/security/cve/CVE-2018-1125": 1,
            "https://access.redhat.com/security/cve/CVE-2020-14060": 1,
            "https://nvd.nist.gov/vuln-metrics/cvss": 1,
            "https://access.redhat.com/site/security/team/contact/": 1
        },
        "affected_products": [
            "n/a"
        ],
        "versions": {
            "status": "affected",
            "version": "n/a"
        },
        "files": [
            "rack-protection",
            "CSRF"
        ],
        "keywords": [
            "checking",
            "connectivity",
            "rack",
            "signature",
            "network",
            "appear",
            "expose",
            "result",
            "version",
            "timing",
            "application",
            "contain",
            "ruby",
            "token",
            "csrf",
            "vulnerability",
            "sinatra",
            "attack",
            "protection"
        ],
        "files_extension": [],
        "has_fixing_commit": true
    },
    "commits": [
        {
            "commit_id": "06f1b5d1bb00d81ebbad25414fb74f5bb9397c2f",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1520433940,
            "hunks": 2,
            "message": "Use secure_compare when checking CSRF token Since string comparisions may return early we want to use a constant time comparsion function to protect the CSRF token against timing attacks. Rack::Utils provides a such function. Fixes CVE-2018-1000119",
            "diff": [
                "diff --git a/lib/rack/protection/authenticity_token.rb b/lib/rack/protection/authenticity_token.rb",
                "index e4524e4..03db6b6 100644",
                "--- a/lib/rack/protection/authenticity_token.rb",
                "+++ b/lib/rack/protection/authenticity_token.rb",
                "@@ -25,4 +25,4 @@ module Rack",
                "         safe?(env) ||",
                "-          env['HTTP_X_CSRF_TOKEN'] == token ||",
                "-          Request.new(env).params[options[:authenticity_param]] == token",
                "+          secure_compare(env['HTTP_X_CSRF_TOKEN'].to_s, token) ||",
                "+          secure_compare(Request.new(env).params[options[:authenticity_param]].to_s, token)",
                "       end",
                "diff --git a/lib/rack/protection/base.rb b/lib/rack/protection/base.rb",
                "index fe6ab37..33de831 100755",
                "--- a/lib/rack/protection/base.rb",
                "+++ b/lib/rack/protection/base.rb",
                "@@ -112,2 +112,26 @@ module Rack",
                "+      # The implementations of secure_compare and bytesize are taken from",
                "+      # Rack::Utils to be able to support rack older than XXXX.",
                "+      def secure_compare(a, b)",
                "+        return false unless bytesize(a) == bytesize(b)",
                "+",
                "+        l = a.unpack(\"C*\")",
                "+",
                "+        r, i = 0, -1",
                "+        b.each_byte { |v| r |= v ^ l[i+=1] }",
                "+        r == 0",
                "+      end",
                "+",
                "+      # Return the bytesize of String; uses String#size under Ruby 1.8 and",
                "+      # String#bytesize under 1.9.",
                "+      if ''.respond_to?(:bytesize)",
                "+        def bytesize(string)",
                "+          string.bytesize",
                "+        end",
                "+      else",
                "+        def bytesize(string)",
                "+          string.size",
                "+        end",
                "+      end",
                "+",
                "       alias default_reaction deny"
            ],
            "changed_files": [
                "lib/rack/protection/authenticity_token.rb",
                "lib/rack/protection/base.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [
                "CVE-2018-1000119"
            ],
            "twins": [
                [
                    "no-tag",
                    "d8068e872b0f19ef9de25265552cb1b835270901"
                ]
            ],
            "tags": [
                "v1.5.5"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 1 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "VULN_ID_IN_MESSAGE",
                    "message": "The commit message mentions the vulnerability ID",
                    "relevance": 64
                },
                {
                    "id": "RELEVANT_WORDS_IN_MESSAGE",
                    "message": "The commit message contains some relevant words: CSRF",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: CSRF",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: checking, timing, token, csrf, attack",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: token",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7e723a74763bb83989d1249cdceb9cceb2ee6f01",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1470036731,
            "hunks": 2,
            "message": "Document `:origin_whitelist` option for HttpOrigin and pointer from JsonCsrf closes #63",
            "diff": [
                "diff --git a/lib/rack/protection/http_origin.rb b/lib/rack/protection/http_origin.rb",
                "index 7b1507f..e47bdd0 100644",
                "--- a/lib/rack/protection/http_origin.rb",
                "+++ b/lib/rack/protection/http_origin.rb",
                "@@ -12,3 +12,8 @@ module Rack",
                "     # does not match default or whitelisted URIs.",
                "-    # The :allow_if option can also be set to a proc to use custom allow/deny logic.",
                "+    #",
                "+    # If you want to whitelist a specific domain, you can pass in as the `:origin_whitelist` option:",
                "+    #",
                "+    #     use Rack::Protection, origin_whitelist: [\"http://localhost:3000\", \"http://127.0.01:3000\"]",
                "+    #",
                "+    # The `:allow_if` option can also be set to a proc to use custom allow/deny logic.",
                "     class HttpOrigin < Base",
                "diff --git a/lib/rack/protection/json_csrf.rb b/lib/rack/protection/json_csrf.rb",
                "index d1a8949..a80aeb9 100644",
                "--- a/lib/rack/protection/json_csrf.rb",
                "+++ b/lib/rack/protection/json_csrf.rb",
                "@@ -12,2 +12,5 @@ module Rack",
                "     # even on GET requests if the content type is JSON.",
                "+    #",
                "+    # Uses HttpOrigin to determine if requests are safe, please refer to the",
                "+    # documentation for more.",
                "     class JsonCsrf < Base"
            ],
            "changed_files": [
                "lib/rack/protection/http_origin.rb",
                "lib/rack/protection/json_csrf.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "63": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: lib/rack/protection/json_csrf.rb",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: csrf",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: csrf",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 63",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ae5b2cd7f9e0c301b1ff4340d74628592de8fdca",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1465088045,
            "hunks": 3,
            "message": "Add allow_if to authenticity token",
            "diff": [
                "diff --git a/lib/rack/protection/authenticity_token.rb b/lib/rack/protection/authenticity_token.rb",
                "index e4524e4..e7a0adc 100644",
                "--- a/lib/rack/protection/authenticity_token.rb",
                "+++ b/lib/rack/protection/authenticity_token.rb",
                "@@ -19,3 +19,4 @@ module Rack",
                "     class AuthenticityToken < Base",
                "-      default_options :authenticity_param => 'authenticity_token'",
                "+      default_options :authenticity_param => 'authenticity_token',",
                "+                      :allow_if => nil",
                "@@ -24,5 +25,7 @@ module Rack",
                "         token   = session[:csrf] ||= session['_csrf_token'] || random_string",
                "+",
                "         safe?(env) ||",
                "           env['HTTP_X_CSRF_TOKEN'] == token ||",
                "-          Request.new(env).params[options[:authenticity_param]] == token",
                "+          Request.new(env).params[options[:authenticity_param]] == token ||",
                "+          ( options[:allow_if] && options[:allow_if].call(env) )",
                "       end"
            ],
            "changed_files": [
                "lib/rack/protection/authenticity_token.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: CSRF",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: token",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: token",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f6ce66fe542d832ec557f5235de900c66065d85d",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469534755,
            "hunks": 1,
            "message": "Fix spec from #78 rspec syntax",
            "diff": [
                "diff --git a/spec/lib/rack/protection/json_csrf_spec.rb b/spec/lib/rack/protection/json_csrf_spec.rb",
                "index 48d1f7b..ad2485f 100644",
                "--- a/spec/lib/rack/protection/json_csrf_spec.rb",
                "+++ b/spec/lib/rack/protection/json_csrf_spec.rb",
                "@@ -44,3 +44,3 @@ describe Rack::Protection::JsonCsrf do",
                "-      DummyAppWithBody.body.should be_closed",
                "+      expect(DummyAppWithBody.body).to be_closed",
                "     end"
            ],
            "changed_files": [
                "spec/lib/rack/protection/json_csrf_spec.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "78": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spec/lib/rack/protection/json_csrf_spec.rb",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: csrf",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 78",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "82e72ba26744ba4d5d2e35950ca03b18f3ad7fc3",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469522258,
            "hunks": 2,
            "message": "Add `:without_session` option to skip session based protection This includes: * Rack::Protection::SessionHijacking * Rack::Protection::RemoteToken Closes #47",
            "diff": [
                "diff --git a/lib/rack/protection.rb b/lib/rack/protection.rb",
                "index 23424a0..b758621 100644",
                "--- a/lib/rack/protection.rb",
                "+++ b/lib/rack/protection.rb",
                "@@ -25,2 +25,7 @@ module Rack",
                "       use_these = Array options[:use]",
                "+",
                "+      if options.fetch(:without_session, false)",
                "+        except += [:session_hijacking, :remote_token]",
                "+      end",
                "+",
                "       Rack::Builder.new do",
                "diff --git a/spec/lib/rack/protection/protection_spec.rb b/spec/lib/rack/protection/protection_spec.rb",
                "index 35bd0ca..a9afda2 100644",
                "--- a/spec/lib/rack/protection/protection_spec.rb",
                "+++ b/spec/lib/rack/protection/protection_spec.rb",
                "@@ -102,2 +102,26 @@ describe Rack::Protection do",
                "   end",
                "+",
                "+  describe \"new\" do",
                "+    it 'should allow disable session protection' do",
                "+      mock_app do",
                "+        use Rack::Protection, :without_session => true",
                "+        run DummyApp",
                "+      end",
                "+",
                "+      session = {:foo => :bar}",
                "+      get '/', {}, 'rack.session' => session, 'HTTP_USER_AGENT' => 'a'",
                "+      get '/', {}, 'rack.session' => session, 'HTTP_USER_AGENT' => 'b'",
                "+      expect(session[:foo]).to eq :bar",
                "+    end",
                "+",
                "+    it 'should allow disable CSRF protection' do",
                "+      mock_app do",
                "+        use Rack::Protection, :without_session => true",
                "+        run DummyApp",
                "+      end",
                "+",
                "+      post('/', {}, 'HTTP_REFERER' => 'http://example.com/foo', 'HTTP_HOST' => 'example.org')",
                "+      expect(last_response).to be_ok",
                "+    end",
                "+  end",
                " end"
            ],
            "changed_files": [
                "lib/rack/protection.rb",
                "spec/lib/rack/protection/protection_spec.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "47": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: CSRF",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: token",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 47",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a81e964e840c064c1a37b0dd165d7d5d8d5759bc",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1520434862,
            "hunks": 2,
            "message": "bump version to 1.5.5",
            "diff": [
                "diff --git a/lib/rack/protection/version.rb b/lib/rack/protection/version.rb",
                "index c2cf18a..abdb1a5 100644",
                "--- a/lib/rack/protection/version.rb",
                "+++ b/lib/rack/protection/version.rb",
                "@@ -6,3 +6,3 @@ module Rack",
                "-    SIGNATURE = [1, 5, 4]",
                "+    SIGNATURE = [1, 5, 5]",
                "     VERSION   = SIGNATURE.join('.')",
                "diff --git a/rack-protection.gemspec b/rack-protection.gemspec",
                "index b9f6c88..d10f027 100644",
                "--- a/rack-protection.gemspec",
                "+++ b/rack-protection.gemspec",
                "@@ -4,3 +4,3 @@ Gem::Specification.new do |s|",
                "   s.name        = \"rack-protection\"",
                "-  s.version     = \"1.5.4\"",
                "+  s.version     = \"1.5.5\"",
                "   s.description = \"You should use protection!\""
            ],
            "changed_files": [
                "lib/rack/protection/version.rb",
                "rack-protection.gemspec"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.5.5"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d32ac0ab369f282662aa8c1d1cad3e365be279c7",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469433424,
            "hunks": 17,
            "message": "Bump version for developing 2.0.0 alpha Updated gemspec task to only add maintainers emails, probably not everyone wants their email publicly listed just for submitting a patch. Also replaced the file selection to manual, which leaves out spec files from the gem package.",
            "diff": [
                "diff --git a/Rakefile b/Rakefile",
                "index b642a1a..bbdc3ef 100644",
                "--- a/Rakefile",
                "+++ b/Rakefile",
                "@@ -21,9 +21,6 @@ task 'rack-protection.gemspec' do",
                "     :authors => `git shortlog -sn`.force_encoding('utf-8').scan(/[^\\d\\s].*/),",
                "-    :email   => `git shortlog -sne`.force_encoding('utf-8').scan(/[^<]+@[^>]+/),",
                "-    :files   => `git ls-files`.force_encoding('utf-8').split(\"\\n\").reject { |f| f =~ /^(\\.|Gemfile)/ }",
                "+    :email   => [\"mail@zzak.io\", \"konstantin.haase@gmail.com\"],",
                "+    :files   => %w(License README.md Rakefile Gemfile rack-protection.gemspec) + Dir['lib/**/*']",
                "   }",
                "-  # double email :(",
                "-  fields[:email].delete(\"konstantin.haase@gmail.com\")",
                "-",
                "   # insert data",
                "diff --git a/lib/rack/protection/version.rb b/lib/rack/protection/version.rb",
                "index dba6c9b..38ed2c9 100644",
                "--- a/lib/rack/protection/version.rb",
                "+++ b/lib/rack/protection/version.rb",
                "@@ -6,3 +6,3 @@ module Rack",
                "-    SIGNATURE = [1, 5, 3]",
                "+    SIGNATURE = [2, 0, 0]",
                "     VERSION   = SIGNATURE.join('.')",
                "diff --git a/rack-protection.gemspec b/rack-protection.gemspec",
                "index 4e04239..fa63982 100644",
                "--- a/rack-protection.gemspec",
                "+++ b/rack-protection.gemspec",
                "@@ -4,3 +4,3 @@ Gem::Specification.new do |s|",
                "   s.name        = \"rack-protection\"",
                "-  s.version     = \"1.5.3\"",
                "+  s.version     = \"2.0.0\"",
                "   s.description = \"You should use protection!\"",
                "@@ -13,5 +13,6 @@ Gem::Specification.new do |s|",
                "     \"Konstantin Haase\",",
                "+    \"Maurizio De Santis\",",
                "     \"Alex Rodionov\",",
                "-    \"Patrick Ellis\",",
                "     \"Jason Staten\",",
                "+    \"Patrick Ellis\",",
                "     \"ITO Nobuaki\",",
                "@@ -19,2 +20,10 @@ Gem::Specification.new do |s|",
                "     \"Matteo Centenaro\",",
                "+    \"Akzhan Abdulin\",",
                "+    \"Alan deLevie\",",
                "+    \"Bj\\u{f8}rge N\\u{e6}ss\",",
                "+    \"Chris Heald\",",
                "+    \"Chris Mytton\",",
                "+    \"Corey Ward\",",
                "+    \"Dario Cravero\",",
                "+    \"David Kellum\",",
                "     \"Egor Homakov\",",
                "@@ -23,2 +32,4 @@ Gem::Specification.new do |s|",
                "     \"Igor Bochkariov\",",
                "+    \"Josef Stribny\",",
                "+    \"Katrina Owen\",",
                "     \"Mael Clerambault\",",
                "@@ -32,10 +43,5 @@ Gem::Specification.new do |s|",
                "     \"Vipul A M\",",
                "-    \"Akzhan Abdulin\",",
                "-    \"brookemckim\",",
                "-    \"Bj\\u{f8}rge N\\u{e6}ss\",",
                "-    \"Chris Heald\",",
                "-    \"Chris Mytton\",",
                "-    \"Corey Ward\",",
                "-    \"Dario Cravero\",",
                "-    \"David Kellum\"",
                "+    \"Zachary Scott\",",
                "+    \"ashley williams\",",
                "+    \"brookemckim\"",
                "   ]",
                "@@ -44,30 +50,4 @@ Gem::Specification.new do |s|",
                "   s.email = [",
                "-    \"konstantin.mailinglists@googlemail.com\",",
                "-    \"p0deje@gmail.com\",",
                "-    \"jstaten07@gmail.com\",",
                "-    \"patrick@soundcloud.com\",",
                "-    \"jeff.welling@gmail.com\",",
                "-    \"bugant@gmail.com\",",
                "-    \"daydream.trippers@gmail.com\",",
                "-    \"florian.gilcher@asquera.de\",",
                "-    \"developer@fojasaur.us\",",
                "-    \"ujifgc@gmail.com\",",
                "-    \"mael@clerambault.fr\",",
                "-    \"martin.mauch@gmail.com\",",
                "-    \"rennex@iki.fi\",",
                "-    \"kaz.july.7@gmail.com\",",
                "-    \"s.savulchik@gmail.com\",",
                "-    \"steve.agalloco@gmail.com\",",
                "-    \"toby.net.info.mail+git@gmail.com\",",
                "-    \"dev+narwen+rkh@rkh.im\",",
                "-    \"vipulnsward@gmail.com\",",
                "-    \"akzhan.abdulin@gmail.com\",",
                "-    \"brooke@digitalocean.com\",",
                "-    \"bjoerge@bengler.no\",",
                "-    \"cheald@gmail.com\",",
                "-    \"self@hecticjeff.net\",",
                "-    \"coreyward@me.com\",",
                "-    \"dario@uxtemple.com\",",
                "-    \"dek-oss@gravitext.com\",",
                "-    \"homakov@gmail.com\"",
                "+    \"mail@zzak.io\",",
                "+    \"konstantin.haase@gmail.com\"",
                "   ]",
                "@@ -79,34 +59,22 @@ Gem::Specification.new do |s|",
                "     \"Rakefile\",",
                "-    \"lib/rack-protection.rb\",",
                "-    \"lib/rack/protection.rb\",",
                "-    \"lib/rack/protection/authenticity_token.rb\",",
                "-    \"lib/rack/protection/base.rb\",",
                "+    \"Gemfile\",",
                "+    \"rack-protection.gemspec\",",
                "+    \"lib/rack\",",
                "+    \"lib/rack/protection\",",
                "     \"lib/rack/protection/escaped_params.rb\",",
                "-    \"lib/rack/protection/form_token.rb\",",
                "-    \"lib/rack/protection/frame_options.rb\",",
                "-    \"lib/rack/protection/http_origin.rb\",",
                "-    \"lib/rack/protection/ip_spoofing.rb\",",
                "-    \"lib/rack/protection/json_csrf.rb\",",
                "-    \"lib/rack/protection/path_traversal.rb\",",
                "     \"lib/rack/protection/remote_referrer.rb\",",
                "-    \"lib/rack/protection/remote_token.rb\",",
                "+    \"lib/rack/protection/ip_spoofing.rb\",",
                "+    \"lib/rack/protection/base.rb\",",
                "     \"lib/rack/protection/session_hijacking.rb\",",
                "+    \"lib/rack/protection/authenticity_token.rb\",",
                "     \"lib/rack/protection/version.rb\",",
                "+    \"lib/rack/protection/path_traversal.rb\",",
                "+    \"lib/rack/protection/form_token.rb\",",
                "+    \"lib/rack/protection/json_csrf.rb\",",
                "+    \"lib/rack/protection/http_origin.rb\",",
                "+    \"lib/rack/protection/frame_options.rb\",",
                "     \"lib/rack/protection/xss_header.rb\",",
                "-    \"rack-protection.gemspec\",",
                "-    \"spec/authenticity_token_spec.rb\",",
                "-    \"spec/base_spec.rb\",",
                "-    \"spec/escaped_params_spec.rb\",",
                "-    \"spec/form_token_spec.rb\",",
                "-    \"spec/frame_options_spec.rb\",",
                "-    \"spec/http_origin_spec.rb\",",
                "-    \"spec/ip_spoofing_spec.rb\",",
                "-    \"spec/json_csrf_spec.rb\",",
                "-    \"spec/path_traversal_spec.rb\",",
                "-    \"spec/protection_spec.rb\",",
                "-    \"spec/remote_referrer_spec.rb\",",
                "-    \"spec/remote_token_spec.rb\",",
                "-    \"spec/session_hijacking_spec.rb\",",
                "-    \"spec/spec_helper.rb\",",
                "-    \"spec/xss_header_spec.rb\"",
                "+    \"lib/rack/protection/remote_token.rb\",",
                "+    \"lib/rack/protection.rb\",",
                "+    \"lib/rack-protection.rb\"",
                "   ]"
            ],
            "changed_files": [
                "Rakefile",
                "lib/rack/protection/version.rb",
                "rack-protection.gemspec"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "1483719fcb445e91392a409ec4f2e01b4c12efee",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469614393,
            "hunks": 1,
            "message": "Merge branch 'allow-if' of https://github.com/nathanstitt/rack-protection into nathanstitt-allow-if",
            "diff": [
                "diff --cc lib/rack/protection/authenticity_token.rb",
                "index ad2ab9c,e7a0adc..74fc43b",
                "--- a/lib/rack/protection/authenticity_token.rb",
                "+++ b/lib/rack/protection/authenticity_token.rb",
                "@@@ -25,4 -27,5 +27,5 @@@ module Rac",
                "          safe?(env) ||",
                " -          env['HTTP_X_CSRF_TOKEN'] == token ||",
                " -          Request.new(env).params[options[:authenticity_param]] == token ||",
                " +          secure_compare(env['HTTP_X_CSRF_TOKEN'], token) ||",
                "-           secure_compare(Request.new(env).params[options[:authenticity_param]], token)",
                "++          secure_compare(Request.new(env).params[options[:authenticity_param]], token) ||",
                "+           ( options[:allow_if] && options[:allow_if].call(env) )",
                "        end"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: CSRF",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "0bf1125abde23f35ca50ac50224d97588f26df47",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469514138,
            "hunks": 0,
            "message": "Merge pull request #75 from mkristian/content-security-policy added content security policies",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "75": "content-type-security header #72"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "SEC_KEYWORDS_IN_MESSAGE",
                    "message": "The commit message contains some security-related keywords: security",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 75",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9731b3e8f9554c1ea5f7fe9e04d10a9912f68454",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469917379,
            "hunks": 4,
            "message": "Add cookie tossing protection Mitigate malicious session cookies set on a subdomain from being read by the parent domain.",
            "diff": [
                "diff --git a/lib/rack/protection.rb b/lib/rack/protection.rb",
                "index 7b4ff68..7565a9d 100644",
                "--- a/lib/rack/protection.rb",
                "+++ b/lib/rack/protection.rb",
                "@@ -7,2 +7,3 @@ module Rack",
                "     autoload :Base,                  'rack/protection/base'",
                "+    autoload :CookieTossing,         'rack/protection/cookie_tossing'",
                "     autoload :ContentSecurityPolicy, 'rack/protection/content_security_policy'",
                "@@ -33,2 +34,3 @@ module Rack",
                "         use ::Rack::Protection::AuthenticityToken,     options if use_these.include? :authenticity_token",
                "+        use ::Rack::Protection::CookieTossing,         options if use_these.include? :cookie_tossing",
                "         use ::Rack::Protection::ContentSecurityPolicy, options if use_these.include? :content_security_policy",
                "diff --git a/lib/rack/protection/cookie_tossing.rb b/lib/rack/protection/cookie_tossing.rb",
                "new file mode 100644",
                "index 0000000..6846129",
                "--- /dev/null",
                "+++ b/lib/rack/protection/cookie_tossing.rb",
                "@@ -0,0 +1,73 @@",
                "+require 'rack/protection'",
                "+require 'pathname'",
                "+",
                "+module Rack",
                "+  module Protection",
                "+    ##",
                "+    # Prevented attack::   Cookie Tossing",
                "+    # Supported browsers:: all",
                "+    # More infos::         https://github.com/blog/1466-yummy-cookies-across-domains",
                "+    #",
                "+    # Does not accept HTTP requests if the HTTP_COOKIE header contains more than one",
                "+    # session cookie. This does not protect against a cookie overflow attack.",
                "+    #",
                "+    # Options:",
                "+    #",
                "+    # session_key:: The name of the session cookie (default: 'rack.session')",
                "+    class CookieTossing < Base",
                "+      default_reaction :deny",
                "+",
                "+      def call(env)",
                "+        status, headers, body = super",
                "+        response = Rack::Response.new(body, status, headers)",
                "+        request = Rack::Request.new(env)",
                "+        remove_bad_cookies(request, response)",
                "+        response.finish",
                "+      end",
                "+",
                "+      def accepts?(env)",
                "+        cookie_header = env['HTTP_COOKIE']",
                "+        cookies = Rack::Utils.parse_query(cookie_header, ';,') { |s| s }",
                "+        cookies.each do |k, v|",
                "+          if k == session_key && Array(v).size > 1",
                "+            bad_cookies << k",
                "+          elsif k != session_key && Rack::Utils.unescape(k) == session_key",
                "+            bad_cookies << k",
                "+          end",
                "+        end",
                "+        bad_cookies.empty?",
                "+      end",
                "+",
                "+      def remove_bad_cookies(request, response)",
                "+        bad_cookies.each do |name|",
                "+          cookie_paths(request.path).each { |path| response.set_cookie name, empty_cookie(request.host, path) }",
                "+        end",
                "+      end",
                "+",
                "+      def redirect(env)",
                "+        request = Request.new(env)",
                "+        warn env, \"attack prevented by #{self.class}\"",
                "+        [302, {'Content-Type' => 'text/html', 'Location' => request.path}, []]",
                "+      end",
                "+",
                "+      def bad_cookies",
                "+        @bad_cookies ||= []",
                "+      end",
                "+",
                "+      def cookie_paths(path)",
                "+        path = '/' if path.to_s.empty?",
                "+        paths = []",
                "+        Pathname.new(path).descend { |p| paths << p.to_s }",
                "+        paths",
                "+      end",
                "+",
                "+      def empty_cookie(host, path)",
                "+        {:value => '', :domain => host, :path => path, :expires => Time.at(0)}",
                "+      end",
                "+",
                "+      def session_key",
                "+        @session_key ||= options[:session_key]",
                "+      end",
                "+    end",
                "+  end",
                "+end",
                "diff --git a/spec/lib/rack/protection/cookie_tossing_spec.rb b/spec/lib/rack/protection/cookie_tossing_spec.rb",
                "new file mode 100644",
                "index 0000000..af46ffc",
                "--- /dev/null",
                "+++ b/spec/lib/rack/protection/cookie_tossing_spec.rb",
                "@@ -0,0 +1,74 @@",
                "+describe Rack::Protection::CookieTossing do",
                "+  it_behaves_like \"any rack application\"",
                "+",
                "+  context 'with default reaction' do",
                "+    before(:each) do",
                "+      mock_app do",
                "+        use Rack::Protection::CookieTossing",
                "+        run DummyApp",
                "+      end",
                "+    end",
                "+",
                "+    it 'accepts requests with a single session cookie' do",
                "+      get '/', {}, 'HTTP_COOKIE' => 'rack.session=SESSION_TOKEN'",
                "+      expect(last_response).to be_ok",
                "+    end",
                "+",
                "+    it 'denies requests with duplicate session cookies' do",
                "+      get '/', {}, 'HTTP_COOKIE' => 'rack.session=EVIL_SESSION_TOKEN; rack.session=SESSION_TOKEN'",
                "+      expect(last_response).not_to be_ok",
                "+    end",
                "+",
                "+    it 'denies requests with sneaky encoded session cookies' do",
                "+      get '/', {}, 'HTTP_COOKIE' => 'rack.session=EVIL_SESSION_TOKEN; rack.%73ession=SESSION_TOKEN'",
                "+      expect(last_response).not_to be_ok",
                "+    end",
                "+",
                "+    it 'adds the correct Set-Cookie header' do",
                "+      get '/some/path', {}, 'HTTP_COOKIE' => 'rack.%73ession=EVIL_SESSION_TOKEN; rack.session=EVIL_SESSION_TOKEN; rack.session=SESSION_TOKEN'",
                "+",
                "+      expected_header = <<-END.chomp",
                "+rack.%2573ession=; domain=example.org; path=/; expires=Thu, 01 Jan 1970 00:00:00 -0000",
                "+rack.%2573ession=; domain=example.org; path=/some; expires=Thu, 01 Jan 1970 00:00:00 -0000",
                "+rack.%2573ession=; domain=example.org; path=/some/path; expires=Thu, 01 Jan 1970 00:00:00 -0000",
                "+rack.session=; domain=example.org; path=/; expires=Thu, 01 Jan 1970 00:00:00 -0000",
                "+rack.session=; domain=example.org; path=/some; expires=Thu, 01 Jan 1970 00:00:00 -0000",
                "+rack.session=; domain=example.org; path=/some/path; expires=Thu, 01 Jan 1970 00:00:00 -0000",
                "+END",
                "+      expect(last_response.headers['Set-Cookie']).to eq(expected_header)",
                "+    end",
                "+  end",
                "+",
                "+  context 'with redirect reaction' do",
                "+    before(:each) do",
                "+      mock_app do",
                "+        use Rack::Protection::CookieTossing, :reaction => :redirect",
                "+        run DummyApp",
                "+      end",
                "+    end",
                "+",
                "+    it 'redirects requests with duplicate session cookies' do",
                "+      get '/', {}, 'HTTP_COOKIE' => 'rack.session=EVIL_SESSION_TOKEN; rack.session=SESSION_TOKEN'",
                "+      expect(last_response).to be_redirect",
                "+      expect(last_response.location).to eq('/')",
                "+    end",
                "+",
                "+    it 'redirects requests with sneaky encoded session cookies' do",
                "+      get '/path', {}, 'HTTP_COOKIE' => 'rack.%73ession=EVIL_SESSION_TOKEN; rack.session=SESSION_TOKEN'",
                "+      expect(last_response).to be_redirect",
                "+      expect(last_response.location).to eq('/path')",
                "+    end",
                "+  end",
                "+",
                "+  context 'with custom session key' do",
                "+    it 'denies requests with duplicate session cookies' do",
                "+      mock_app do",
                "+        use Rack::Protection::CookieTossing, :session_key => '_session'",
                "+        run DummyApp",
                "+      end",
                "+",
                "+      get '/', {}, 'HTTP_COOKIE' => '_session=EVIL_SESSION_TOKEN; _session=SESSION_TOKEN'",
                "+      expect(last_response).not_to be_ok",
                "+    end",
                "+  end",
                "+end"
            ],
            "changed_files": [
                "lib/rack/protection.rb",
                "lib/rack/protection/cookie_tossing.rb",
                "spec/lib/rack/protection/cookie_tossing_spec.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "SEC_KEYWORDS_IN_MESSAGE",
                    "message": "The commit message contains some security-related keywords: malicious",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "4b3dc577e7708c298b5ace31c1d19b5acde3cb66",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1453117235,
            "hunks": 4,
            "message": "Add Strict Transport Security protection",
            "diff": [
                "diff --git a/lib/rack/protection.rb b/lib/rack/protection.rb",
                "index 604e749..1887119 100644",
                "--- a/lib/rack/protection.rb",
                "+++ b/lib/rack/protection.rb",
                "@@ -18,2 +18,3 @@ module Rack",
                "     autoload :XSSHeader,         'rack/protection/xss_header'",
                "+    autoload :StrictTransport,   'rack/protection/strict_transport'",
                "@@ -27,2 +28,3 @@ module Rack",
                "         use ::Rack::Protection::FormToken,        options if use_these.include? :form_token",
                "+        use ::Rack::Protection::StrictTransport,  options if use_these.include? :strict_transport",
                "         use ::Rack::Protection::FrameOptions,     options unless except.include? :frame_options",
                "diff --git a/lib/rack/protection/strict_transport.rb b/lib/rack/protection/strict_transport.rb",
                "new file mode 100644",
                "index 0000000..fd54cfb",
                "--- /dev/null",
                "+++ b/lib/rack/protection/strict_transport.rb",
                "@@ -0,0 +1,37 @@",
                "+require 'rack/protection'",
                "+",
                "+module Rack",
                "+  module Protection",
                "+    ##",
                "+    # Prevented attack::   Protects against against protocol downgrade attacks and cookie hijacking.",
                "+    # Supported browsers:: all",
                "+    # More infos::         https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security",
                "+    #",
                "+    # browser will prevent any communications from being sent over HTTP",
                "+    # to the specified domain and will instead send all communications over HTTPS.",
                "+    # It also prevents HTTPS click through prompts on browsers.",
                "+    #",
                "+    # Options:",
                "+    #",
                "+    # max_age:: How long future requests to the domain should go over HTTPS; specified in seconds",
                "+    # include_subdomains:: If all present and future subdomains will be HTTPS",
                "+",
                "+    class StrictTransport < Base",
                "+      default_options :max_age => 31_536_000, :include_subdomains => false",
                "+",
                "+      def strict_transport",
                "+        @strict_transport ||= begin",
                "+          strict_transport = 'max-age=' + options[:max_age].to_s",
                "+          strict_transport += '; includeSubDomains' if options[:include_subdomains]",
                "+          strict_transport.to_str",
                "+        end",
                "+      end",
                "+",
                "+      def call(env)",
                "+        status, headers, body = @app.call(env)",
                "+        headers['Strict-Transport-Security'] ||= strict_transport",
                "+        [status, headers, body]",
                "+      end",
                "+    end",
                "+  end",
                "+end",
                "diff --git a/spec/lib/rack/protection/strict_transport_spec.rb b/spec/lib/rack/protection/strict_transport_spec.rb",
                "new file mode 100644",
                "index 0000000..dbb4fde",
                "--- /dev/null",
                "+++ b/spec/lib/rack/protection/strict_transport_spec.rb",
                "@@ -0,0 +1,25 @@",
                "+describe Rack::Protection::StrictTransport do",
                "+  it_behaves_like \"any rack application\"",
                "+",
                "+  it 'should set the Strict-Transport-Security header' do",
                "+    expect(get('/', {}, 'wants' => 'text/html').headers[\"Strict-Transport-Security\"]).to eq(\"max-age=31536000\")",
                "+  end",
                "+",
                "+  it 'should allow changing the max-age option' do",
                "+    mock_app do",
                "+      use Rack::Protection::StrictTransport, :max_age => 16_070_400",
                "+      run DummyApp",
                "+    end",
                "+",
                "+    expect(get('/', {}, 'wants' => 'text/html').headers[\"Strict-Transport-Security\"]).to eq(\"max-age=16070400\")",
                "+  end",
                "+",
                "+  it 'should allow switching on the include_subdomains option' do",
                "+    mock_app do",
                "+      use Rack::Protection::StrictTransport, :include_subdomains => true",
                "+      run DummyApp",
                "+    end",
                "+",
                "+    expect(get('/', {}, 'wants' => 'text/html').headers[\"Strict-Transport-Security\"]).to eq(\"max-age=31536000; includeSubDomains\")",
                "+  end",
                "+end"
            ],
            "changed_files": [
                "lib/rack/protection.rb",
                "lib/rack/protection/strict_transport.rb",
                "spec/lib/rack/protection/strict_transport_spec.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "SEC_KEYWORDS_IN_MESSAGE",
                    "message": "The commit message contains some security-related keywords: security",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f3279cfab3dbb09818f8daba26f70bf0ce4bd419",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469534699,
            "hunks": 0,
            "message": "Merge branch 'finnlabs-fix/csrf_missing_close'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: csrf",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "2f4f1c657997fafde8323e187b3fc7f799aa5477",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469534666,
            "hunks": 0,
            "message": "Merge branch 'fix/csrf_missing_close' of https://github.com/finnlabs/rack-protection into finnlabs-fix/csrf_missing_close",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: csrf",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "4716bc20c606fcf09080afe93a013f67b10c6821",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469680612,
            "hunks": 1,
            "message": "Document Chrome is also supported by XSSHeader [ci skip] Closes #48",
            "diff": [
                "diff --git a/lib/rack/protection/xss_header.rb b/lib/rack/protection/xss_header.rb",
                "index 6bb1486..eb6f92f 100644",
                "--- a/lib/rack/protection/xss_header.rb",
                "+++ b/lib/rack/protection/xss_header.rb",
                "@@ -6,3 +6,3 @@ module Rack",
                "     # Prevented attack::   Non-permanent XSS",
                "-    # Supported browsers:: Internet Explorer 8 and later",
                "+    # Supported browsers:: Internet Explorer 8+ and Chrome",
                "     # More infos::         http://blogs.msdn.com/b/ie/archive/2008/07/01/ie8-security-part-iv-the-xss-filter.aspx"
            ],
            "changed_files": [
                "lib/rack/protection/xss_header.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "48": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 48",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bce9100cf9e95776cfcccf884aaf5523a4aab1c5",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469536164,
            "hunks": 0,
            "message": "Merge pull request #99 from droppedoncaprica/tempFileFix Fix Tempfile reference being returned as nil",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "99": "Fix Tempfile reference being returned as nil chicisimo/rack-protection#1 Dont remove tempfile params, warn when dropping params #91"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 99",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "729059ba862f9e3775e13bb1f17813fd6840d314",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469937053,
            "hunks": 0,
            "message": "Merge pull request #113 from jkowens/cookie_tossing Add cookie tossing protection",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "113": "Rack::Protection::CookieTossing test fail with Rack 3.1.3 sinatra/sinatra#2017"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 113",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f8d8ee2eb72f707d17b07c48bc55a8906978ea5d",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1445382542,
            "hunks": 0,
            "message": "Merge pull request #102 from adelevie/patch-1 Update README.md",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "102": "Consider changing the repo description #101"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 102",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b561ee250f165af50094dc8389d403540c74d94c",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1470016822,
            "hunks": 0,
            "message": "Merge pull request #114 from jkowens/cookie_tossing Remove extra calls to method that determines cookie paths",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "114": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 114",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8d4f9d488d0591ac7b360d9137b94f8d68901f16",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469749862,
            "hunks": 4,
            "message": "Turn off CSP by default /cc mperham/sidekiq#3070 Sorry for breaking stuff, Mike :bow: :bow: :bow: :bow: :bow: :bow: :bow:",
            "diff": [
                "diff --git a/lib/rack/protection.rb b/lib/rack/protection.rb",
                "index b758621..7b4ff68 100644",
                "--- a/lib/rack/protection.rb",
                "+++ b/lib/rack/protection.rb",
                "@@ -31,7 +31,10 @@ module Rack",
                "       Rack::Builder.new do",
                "-        use ::Rack::Protection::RemoteReferrer,        options if use_these.include? :remote_referrer",
                "+        # Off by default, unless added",
                "         use ::Rack::Protection::AuthenticityToken,     options if use_these.include? :authenticity_token",
                "+        use ::Rack::Protection::ContentSecurityPolicy, options if use_these.include? :content_security_policy",
                "         use ::Rack::Protection::FormToken,             options if use_these.include? :form_token",
                "+        use ::Rack::Protection::RemoteReferrer,        options if use_these.include? :remote_referrer",
                "         use ::Rack::Protection::StrictTransport,       options if use_these.include? :strict_transport",
                "-        use ::Rack::Protection::ContentSecurityPolicy, options unless except.include? :content_security_policy",
                "+",
                "+        # On by default, unless skipped",
                "         use ::Rack::Protection::FrameOptions,          options unless except.include? :frame_options"
            ],
            "changed_files": [
                "lib/rack/protection.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "3070": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 3070",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f504033e281dbc7c59cc0ffb6924fe85a68211fc",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469515316,
            "hunks": 5,
            "message": "Update rspec syntax from #75",
            "diff": [
                "diff --git a/spec/content_security_policy_spec.rb b/spec/content_security_policy_spec.rb",
                "index 491c899..57d43c2 100644",
                "--- a/spec/content_security_policy_spec.rb",
                "+++ b/spec/content_security_policy_spec.rb",
                "@@ -6,3 +6,5 @@ describe Rack::Protection::ContentSecurityPolicy do",
                "   it 'should set the Content Security Policy' do",
                "-    get('/', {}, 'wants' => 'text/html').headers[\"Content-Security-Policy\"].should == \"default-src none; script-src self; connect-src self; style-src self\"",
                "+    expect(",
                "+      get('/', {}, 'wants' => 'text/html').headers[\"Content-Security-Policy\"]",
                "+    ).to eq(\"default-src none; script-src self; connect-src self; style-src self\")",
                "   end",
                "@@ -11,4 +13,4 @@ describe Rack::Protection::ContentSecurityPolicy do",
                "     headers = get('/', {}, 'wants' => 'text/foo').headers",
                "-    headers[\"Content-Security-Policy\"].should be_nil",
                "-    headers[\"Content-Security-Policy-Report-Only\"].should be_nil",
                "+    expect(headers[\"Content-Security-Policy\"]).to be_nil",
                "+    expect(headers[\"Content-Security-Policy-Report-Only\"]).to be_nil",
                "   end",
                "@@ -23,4 +25,4 @@ describe Rack::Protection::ContentSecurityPolicy do",
                "     headers = get('/', {}, 'wants' => 'text/html').headers",
                "-    headers[\"Content-Security-Policy\"].should == \"default-src none; script-src https://cdn.mybank.net; connect-src https://api.mybank.com; font-src https://cdn.mybank.net; frame-src self; media-src https://cdn.mybank.net; style-src https://cdn.mybank.net; object-src https://cdn.mybank.net; report-uri /my_amazing_csp_report_parser; sandbox allow-scripts\"",
                "-    headers[\"Content-Security-Policy-Report-Only\"].should be_nil",
                "+    expect(headers[\"Content-Security-Policy\"]).to eq(\"default-src none; script-src https://cdn.mybank.net; connect-src https://api.mybank.com; font-src https://cdn.mybank.net; frame-src self; media-src https://cdn.mybank.net; style-src https://cdn.mybank.net; object-src https://cdn.mybank.net; report-uri /my_amazing_csp_report_parser; sandbox allow-scripts\")",
                "+    expect(headers[\"Content-Security-Policy-Report-Only\"]).to be_nil",
                "   end",
                "@@ -35,4 +37,4 @@ describe Rack::Protection::ContentSecurityPolicy do",
                "     headers = get('/', {}, 'wants' => 'text/html').headers",
                "-    headers[\"Content-Security-Policy\"].should be_nil",
                "-    headers[\"Content-Security-Policy-Report-Only\"].should == \"default-src none; script-src self; connect-src self; style-src self; report-uri /my_amazing_csp_report_parser\"",
                "+    expect(headers[\"Content-Security-Policy\"]).to be_nil",
                "+    expect(headers[\"Content-Security-Policy-Report-Only\"]).to eq(\"default-src none; script-src self; connect-src self; style-src self; report-uri /my_amazing_csp_report_parser\")",
                "   end",
                "@@ -41,3 +43,3 @@ describe Rack::Protection::ContentSecurityPolicy do",
                "     mock_app with_headers(\"Content-Security-Policy\" => \"default-src: none\")",
                "-    get('/', {}, 'wants' => 'text/html').headers[\"Content-Security-Policy\"].should == \"default-src: none\"",
                "+    expect(get('/', {}, 'wants' => 'text/html').headers[\"Content-Security-Policy\"]).to eq(\"default-src: none\")",
                "   end"
            ],
            "changed_files": [
                "spec/content_security_policy_spec.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "75": "content-type-security header #72"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 75",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2e0ce238de207d964409720a7cf9edb9a2dbec4c",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469749797,
            "hunks": 0,
            "message": "Merge pull request #112 from jamesdabbs/master Enclose CSP self in quotes",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "112": "Fix CSP errors on Sinatra / Rack 2 sidekiq/sidekiq#3079"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 112",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4b482b7934ea354b2cec963cb7aa1302a1967ae4",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1443649910,
            "hunks": 3,
            "message": "Fix Tempfile reference being returned as nil This PR fixes the issue of files being uploaded from users having the params[:file][:tempfile] being returned as `nil`, rather than an instance of Tempfile like it should be. PR fixes #90, and shamelessly stolen from #91.",
            "diff": [
                "diff --git a/lib/rack/protection/escaped_params.rb b/lib/rack/protection/escaped_params.rb",
                "index 3283dec..6706d10 100644",
                "--- a/lib/rack/protection/escaped_params.rb",
                "+++ b/lib/rack/protection/escaped_params.rb",
                "@@ -2,2 +2,3 @@ require 'rack/protection'",
                " require 'rack/utils'",
                "+require 'tempfile'",
                "@@ -68,2 +69,3 @@ module Rack",
                "         when String then escape_string(object)",
                "+        when Tempfile then object",
                "         else nil",
                "diff --git a/spec/lib/rack/protection/escaped_params_spec.rb b/spec/lib/rack/protection/escaped_params_spec.rb",
                "index 40989d8..4134dc6 100644",
                "--- a/spec/lib/rack/protection/escaped_params_spec.rb",
                "+++ b/spec/lib/rack/protection/escaped_params_spec.rb",
                "@@ -39,2 +39,22 @@ describe Rack::Protection::EscapedParams do",
                "     end",
                "+",
                "+    it 'leaves TempFiles untouched' do",
                "+      mock_app do |env|",
                "+        request = Rack::Request.new(env)",
                "+        [200, {'Content-Type' => 'text/plain'}, [request.params['file'][:filename] + \"\\n\" + \\",
                "+                                                 request.params['file'][:tempfile].read + \"\\n\" + \\",
                "+                                                 request.params['other']]]",
                "+      end",
                "+",
                "+      temp_file = File.open('_escaped_params_tmp_file', 'w')",
                "+      begin",
                "+        temp_file.write('hello world')",
                "+        temp_file.close",
                "+",
                "+        post '/', :file => Rack::Test::UploadedFile.new(temp_file.path), :other => '<bar>'",
                "+        expect(body).to eq(\"_escaped_params_tmp_file\\nhello world\\n&lt;bar&gt;\")",
                "+      ensure",
                "+        File.unlink(temp_file.path)",
                "+      end",
                "+    end",
                "   end"
            ],
            "changed_files": [
                "lib/rack/protection/escaped_params.rb",
                "spec/lib/rack/protection/escaped_params_spec.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "90": "Dont remove tempfile params, warn when dropping params #91 Account born-in-makuhari/emaki#17 Fix Tempfile reference being returned as nil #99",
                "91": "Fix Tempfile reference being returned as nil #99"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 90, 91",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d1e8e13f6877e5ec885e18c664aa2344c4dd1698",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469736353,
            "hunks": 3,
            "message": "Enclose CSP self in quotes per https://developer.mozilla.org/en-US/docs/Web/Security/CSP/CSP_policy_directives, the quotes are required (see mpheram/sidekiq#3070)",
            "diff": [
                "diff --git a/lib/rack/protection/content_security_policy.rb b/lib/rack/protection/content_security_policy.rb",
                "index b25c643..62284fd 100644",
                "--- a/lib/rack/protection/content_security_policy.rb",
                "+++ b/lib/rack/protection/content_security_policy.rb",
                "@@ -46,3 +46,3 @@ module Rack",
                "     class ContentSecurityPolicy < Base",
                "-      default_options :default_src => :none, :script_src => :self, :img_src => :self, :style_src => :self, :connect_src => :self, :report_only => false",
                "+      default_options :default_src => :none, :script_src => \"'self'\", :img_src => \"'self'\", :style_src => \"'self'\", :connect_src => \"'self'\", :report_only => false",
                "diff --git a/spec/lib/rack/protection/content_security_policy_spec.rb b/spec/lib/rack/protection/content_security_policy_spec.rb",
                "index 3e8ad9b..e219134 100644",
                "--- a/spec/lib/rack/protection/content_security_policy_spec.rb",
                "+++ b/spec/lib/rack/protection/content_security_policy_spec.rb",
                "@@ -6,3 +6,3 @@ describe Rack::Protection::ContentSecurityPolicy do",
                "       get('/', {}, 'wants' => 'text/html').headers[\"Content-Security-Policy\"]",
                "-    ).to eq(\"default-src none; script-src self; connect-src self; img-src self; style-src self\")",
                "+    ).to eq(\"default-src none; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self'\")",
                "   end",
                "@@ -36,3 +36,3 @@ describe Rack::Protection::ContentSecurityPolicy do",
                "     expect(headers[\"Content-Security-Policy\"]).to be_nil",
                "-    expect(headers[\"Content-Security-Policy-Report-Only\"]).to eq(\"default-src none; script-src self; connect-src self; img-src self; style-src self; report-uri /my_amazing_csp_report_parser\")",
                "+    expect(headers[\"Content-Security-Policy-Report-Only\"]).to eq(\"default-src none; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self'; report-uri /my_amazing_csp_report_parser\")",
                "   end"
            ],
            "changed_files": [
                "lib/rack/protection/content_security_policy.rb",
                "spec/lib/rack/protection/content_security_policy_spec.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "3070": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 3070",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e52fd13d5c944412132a29f4f90e8225f5014286",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469594378,
            "hunks": 0,
            "message": "Merge pull request #111 from jamesdabbs/master Add img-src CSP directive",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "111": "Fix CSP errors on Sinatra / Rack 2 sidekiq/sidekiq#3079"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 111",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "787daac721a2ce6bd79644522ceb3ec99377b912",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469515418,
            "hunks": 1,
            "message": "Move spec from #75 under spec dir naming convention",
            "diff": [
                "diff --git a/spec/lib/rack/protection/content_security_policy_spec.rb b/spec/lib/rack/protection/content_security_policy_spec.rb",
                "new file mode 100644",
                "index 0000000..57d43c2",
                "--- /dev/null",
                "+++ b/spec/lib/rack/protection/content_security_policy_spec.rb",
                "@@ -0,0 +1,46 @@",
                "+require File.expand_path('../spec_helper.rb', __FILE__)",
                "+",
                "+describe Rack::Protection::ContentSecurityPolicy do",
                "+  it_behaves_like \"any rack application\"",
                "+",
                "+  it 'should set the Content Security Policy' do",
                "+    expect(",
                "+      get('/', {}, 'wants' => 'text/html').headers[\"Content-Security-Policy\"]",
                "+    ).to eq(\"default-src none; script-src self; connect-src self; style-src self\")",
                "+  end",
                "+",
                "+  it 'should not set the Content Security Policy for other content types' do",
                "+    headers = get('/', {}, 'wants' => 'text/foo').headers",
                "+    expect(headers[\"Content-Security-Policy\"]).to be_nil",
                "+    expect(headers[\"Content-Security-Policy-Report-Only\"]).to be_nil",
                "+  end",
                "+",
                "+  it 'should allow changing the protection settings' do",
                "+    mock_app do",
                "+      use Rack::Protection::ContentSecurityPolicy, :default_src => 'none', :script_src => 'https://cdn.mybank.net', :style_src => 'https://cdn.mybank.net', :img_src => 'https://cdn.mybank.net', :connect_src => 'https://api.mybank.com', :frame_src => 'self', :font_src => 'https://cdn.mybank.net', :object_src => 'https://cdn.mybank.net', :media_src => 'https://cdn.mybank.net', :report_uri => '/my_amazing_csp_report_parser', :sandbox => 'allow-scripts'",
                "+",
                "+      run DummyApp",
                "+    end",
                "+",
                "+    headers = get('/', {}, 'wants' => 'text/html').headers",
                "+    expect(headers[\"Content-Security-Policy\"]).to eq(\"default-src none; script-src https://cdn.mybank.net; connect-src https://api.mybank.com; font-src https://cdn.mybank.net; frame-src self; media-src https://cdn.mybank.net; style-src https://cdn.mybank.net; object-src https://cdn.mybank.net; report-uri /my_amazing_csp_report_parser; sandbox allow-scripts\")",
                "+    expect(headers[\"Content-Security-Policy-Report-Only\"]).to be_nil",
                "+  end",
                "+",
                "+  it 'should allow changing report only' do",
                "+    # I have no clue what other modes are available",
                "+    mock_app do",
                "+      use Rack::Protection::ContentSecurityPolicy, :report_uri => '/my_amazing_csp_report_parser', :report_only => true",
                "+      run DummyApp",
                "+    end",
                "+",
                "+    headers = get('/', {}, 'wants' => 'text/html').headers",
                "+    expect(headers[\"Content-Security-Policy\"]).to be_nil",
                "+    expect(headers[\"Content-Security-Policy-Report-Only\"]).to eq(\"default-src none; script-src self; connect-src self; style-src self; report-uri /my_amazing_csp_report_parser\")",
                "+  end",
                "+",
                "+  it 'should not override the header if already set' do",
                "+    mock_app with_headers(\"Content-Security-Policy\" => \"default-src: none\")",
                "+    expect(get('/', {}, 'wants' => 'text/html').headers[\"Content-Security-Policy\"]).to eq(\"default-src: none\")",
                "+  end",
                "+end"
            ],
            "changed_files": [
                "spec/lib/rack/protection/content_security_policy_spec.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "75": "content-type-security header #72"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 75",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "53e11cfbd8d4e99ceefa2e10d32fee227b5bd472",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469996698,
            "hunks": 2,
            "message": "Remove extra calls to method that determines cookie paths",
            "diff": [
                "diff --git a/lib/rack/protection/cookie_tossing.rb b/lib/rack/protection/cookie_tossing.rb",
                "index 6846129..10614d5 100644",
                "--- a/lib/rack/protection/cookie_tossing.rb",
                "+++ b/lib/rack/protection/cookie_tossing.rb",
                "@@ -41,4 +41,6 @@ module Rack",
                "       def remove_bad_cookies(request, response)",
                "+        return if bad_cookies.empty?",
                "+        paths = cookie_paths(request.path)",
                "         bad_cookies.each do |name|",
                "-          cookie_paths(request.path).each { |path| response.set_cookie name, empty_cookie(request.host, path) }",
                "+          paths.each { |path| response.set_cookie name, empty_cookie(request.host, path) }",
                "         end"
            ],
            "changed_files": [
                "lib/rack/protection/cookie_tossing.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "eb76f95df5ce5714f081257e43306ddd6ccfafc1",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469515152,
            "hunks": 2,
            "message": "Merge branch 'master' of https://github.com/reevoo/rack-protection into reevoo-master",
            "diff": [
                "diff --cc lib/rack/protection.rb",
                "index 6b8ab9d,1887119..23424a0",
                "--- a/lib/rack/protection.rb",
                "+++ b/lib/rack/protection.rb",
                "@@@ -5,16 -5,16 +5,17 @@@ module Rac",
                "    module Protection",
                " -    autoload :AuthenticityToken, 'rack/protection/authenticity_token'",
                " -    autoload :Base,              'rack/protection/base'",
                " -    autoload :EscapedParams,     'rack/protection/escaped_params'",
                " -    autoload :FormToken,         'rack/protection/form_token'",
                " -    autoload :FrameOptions,      'rack/protection/frame_options'",
                " -    autoload :HttpOrigin,        'rack/protection/http_origin'",
                " -    autoload :IPSpoofing,        'rack/protection/ip_spoofing'",
                " -    autoload :JsonCsrf,          'rack/protection/json_csrf'",
                " -    autoload :PathTraversal,     'rack/protection/path_traversal'",
                " -    autoload :RemoteReferrer,    'rack/protection/remote_referrer'",
                " -    autoload :RemoteToken,       'rack/protection/remote_token'",
                " -    autoload :SessionHijacking,  'rack/protection/session_hijacking'",
                " -    autoload :XSSHeader,         'rack/protection/xss_header'",
                " -    autoload :StrictTransport,   'rack/protection/strict_transport'",
                " +    autoload :AuthenticityToken,     'rack/protection/authenticity_token'",
                " +    autoload :Base,                  'rack/protection/base'",
                " +    autoload :ContentSecurityPolicy, 'rack/protection/content_security_policy'",
                " +    autoload :EscapedParams,         'rack/protection/escaped_params'",
                " +    autoload :FormToken,             'rack/protection/form_token'",
                " +    autoload :FrameOptions,          'rack/protection/frame_options'",
                " +    autoload :HttpOrigin,            'rack/protection/http_origin'",
                " +    autoload :IPSpoofing,            'rack/protection/ip_spoofing'",
                " +    autoload :JsonCsrf,              'rack/protection/json_csrf'",
                " +    autoload :PathTraversal,         'rack/protection/path_traversal'",
                " +    autoload :RemoteReferrer,        'rack/protection/remote_referrer'",
                " +    autoload :RemoteToken,           'rack/protection/remote_token'",
                " +    autoload :SessionHijacking,      'rack/protection/session_hijacking'",
                "++    autoload :StrictTransport,       'rack/protection/strict_transport'",
                " +    autoload :XSSHeader,             'rack/protection/xss_header'",
                "@@@ -25,14 -25,14 +26,15 @@@",
                "        Rack::Builder.new do",
                " -        use ::Rack::Protection::RemoteReferrer,   options if use_these.include? :remote_referrer",
                " -        use ::Rack::Protection::AuthenticityToken,options if use_these.include? :authenticity_token",
                " -        use ::Rack::Protection::FormToken,        options if use_these.include? :form_token",
                " -        use ::Rack::Protection::StrictTransport,  options if use_these.include? :strict_transport",
                " -        use ::Rack::Protection::FrameOptions,     options unless except.include? :frame_options",
                " -        use ::Rack::Protection::HttpOrigin,       options unless except.include? :http_origin",
                " -        use ::Rack::Protection::IPSpoofing,       options unless except.include? :ip_spoofing",
                " -        use ::Rack::Protection::JsonCsrf,         options unless except.include? :json_csrf",
                " -        use ::Rack::Protection::PathTraversal,    options unless except.include? :path_traversal",
                " -        use ::Rack::Protection::RemoteToken,      options unless except.include? :remote_token",
                " -        use ::Rack::Protection::SessionHijacking, options unless except.include? :session_hijacking",
                " -        use ::Rack::Protection::XSSHeader,        options unless except.include? :xss_header",
                " +        use ::Rack::Protection::RemoteReferrer,        options if use_these.include? :remote_referrer",
                " +        use ::Rack::Protection::AuthenticityToken,     options if use_these.include? :authenticity_token",
                " +        use ::Rack::Protection::FormToken,             options if use_these.include? :form_token",
                "++        use ::Rack::Protection::StrictTransport,       options if use_these.include? :strict_transport",
                " +        use ::Rack::Protection::ContentSecurityPolicy, options unless except.include? :content_security_policy",
                " +        use ::Rack::Protection::FrameOptions,          options unless except.include? :frame_options",
                " +        use ::Rack::Protection::HttpOrigin,            options unless except.include? :http_origin",
                " +        use ::Rack::Protection::IPSpoofing,            options unless except.include? :ip_spoofing",
                " +        use ::Rack::Protection::JsonCsrf,              options unless except.include? :json_csrf",
                " +        use ::Rack::Protection::PathTraversal,         options unless except.include? :path_traversal",
                " +        use ::Rack::Protection::RemoteToken,           options unless except.include? :remote_token",
                " +        use ::Rack::Protection::SessionHijacking,      options unless except.include? :session_hijacking",
                " +        use ::Rack::Protection::XSSHeader,             options unless except.include? :xss_header",
                "          run app"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "de284c075f7ebd1ba691c220d8eed903edfffb89",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469515156,
            "hunks": 0,
            "message": "Merge branch 'reevoo-master'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "b1b8829d56f045a0f77efd8970d5ceb93fea05a5",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469568957,
            "hunks": 3,
            "message": "Include img-src in expected test output Again, I'm assuming this is the intent, as `should allow changing ...` does try to change img-src",
            "diff": [
                "diff --git a/spec/lib/rack/protection/content_security_policy_spec.rb b/spec/lib/rack/protection/content_security_policy_spec.rb",
                "index 9dbad44..3e8ad9b 100644",
                "--- a/spec/lib/rack/protection/content_security_policy_spec.rb",
                "+++ b/spec/lib/rack/protection/content_security_policy_spec.rb",
                "@@ -6,3 +6,3 @@ describe Rack::Protection::ContentSecurityPolicy do",
                "       get('/', {}, 'wants' => 'text/html').headers[\"Content-Security-Policy\"]",
                "-    ).to eq(\"default-src none; script-src self; connect-src self; style-src self\")",
                "+    ).to eq(\"default-src none; script-src self; connect-src self; img-src self; style-src self\")",
                "   end",
                "@@ -23,3 +23,3 @@ describe Rack::Protection::ContentSecurityPolicy do",
                "     headers = get('/', {}, 'wants' => 'text/html').headers",
                "-    expect(headers[\"Content-Security-Policy\"]).to eq(\"default-src none; script-src https://cdn.mybank.net; connect-src https://api.mybank.com; font-src https://cdn.mybank.net; frame-src self; media-src https://cdn.mybank.net; style-src https://cdn.mybank.net; object-src https://cdn.mybank.net; report-uri /my_amazing_csp_report_parser; sandbox allow-scripts\")",
                "+    expect(headers[\"Content-Security-Policy\"]).to eq(\"default-src none; script-src https://cdn.mybank.net; connect-src https://api.mybank.com; font-src https://cdn.mybank.net; frame-src self; img-src https://cdn.mybank.net; media-src https://cdn.mybank.net; style-src https://cdn.mybank.net; object-src https://cdn.mybank.net; report-uri /my_amazing_csp_report_parser; sandbox allow-scripts\")",
                "     expect(headers[\"Content-Security-Policy-Report-Only\"]).to be_nil",
                "@@ -36,3 +36,3 @@ describe Rack::Protection::ContentSecurityPolicy do",
                "     expect(headers[\"Content-Security-Policy\"]).to be_nil",
                "-    expect(headers[\"Content-Security-Policy-Report-Only\"]).to eq(\"default-src none; script-src self; connect-src self; style-src self; report-uri /my_amazing_csp_report_parser\")",
                "+    expect(headers[\"Content-Security-Policy-Report-Only\"]).to eq(\"default-src none; script-src self; connect-src self; img-src self; style-src self; report-uri /my_amazing_csp_report_parser\")",
                "   end"
            ],
            "changed_files": [
                "spec/lib/rack/protection/content_security_policy_spec.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "c39ddfeb08832c96e161187b0c83feae79ce7cdc",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1465079585,
            "hunks": 1,
            "message": "document allow_if option",
            "diff": [
                "diff --git a/lib/rack/protection/http_origin.rb b/lib/rack/protection/http_origin.rb",
                "index 24c0ce1..7b1507f 100644",
                "--- a/lib/rack/protection/http_origin.rb",
                "+++ b/lib/rack/protection/http_origin.rb",
                "@@ -12,2 +12,3 @@ module Rack",
                "     # does not match default or whitelisted URIs.",
                "+    # The :allow_if option can also be set to a proc to use custom allow/deny logic.",
                "     class HttpOrigin < Base"
            ],
            "changed_files": [
                "lib/rack/protection/http_origin.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "d3f7dba5c4076371ab3ef917fdc2cf7179354273",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1464553507,
            "hunks": 3,
            "message": ":allow_if configuration for custom accept/reject",
            "diff": [
                "diff --git a/lib/rack/protection/http_origin.rb b/lib/rack/protection/http_origin.rb",
                "index 4eb9e4d..24c0ce1 100644",
                "--- a/lib/rack/protection/http_origin.rb",
                "+++ b/lib/rack/protection/http_origin.rb",
                "@@ -15,2 +15,3 @@ module Rack",
                "       default_reaction :deny",
                "+      default_options :allow_if => nil",
                "@@ -26,2 +27,3 @@ module Rack",
                "         return true if base_url(env) == origin",
                "+        return true if options[:allow_if] && options[:allow_if].call(env)",
                "         Array(options[:origin_whitelist]).include? origin",
                "diff --git a/spec/lib/rack/protection/http_origin_spec.rb b/spec/lib/rack/protection/http_origin_spec.rb",
                "index 531ebd8..35342cd 100644",
                "--- a/spec/lib/rack/protection/http_origin_spec.rb",
                "+++ b/spec/lib/rack/protection/http_origin_spec.rb",
                "@@ -22,2 +22,12 @@ describe Rack::Protection::HttpOrigin do",
                "+  %w(GET HEAD POST PUT DELETE).each do |method|",
                "+    it \"accepts #{method} requests when allow_if is true\" do",
                "+      mock_app do",
                "+        use Rack::Protection::HttpOrigin, :allow_if => lambda{|env| true }",
                "+        run DummyApp",
                "+      end",
                "+      expect(send(method.downcase, '/', {}, 'HTTP_ORIGIN' => 'http://any.domain.com')).to be_ok",
                "+    end",
                "+  end",
                "+",
                "   %w(POST PUT DELETE).each do |method|"
            ],
            "changed_files": [
                "lib/rack/protection/http_origin.rb",
                "spec/lib/rack/protection/http_origin_spec.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "6b3613653985c3ca7b1524e0efd5db015e51d346",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1464623083,
            "hunks": 1,
            "message": "test ENV in block",
            "diff": [
                "diff --git a/spec/lib/rack/protection/http_origin_spec.rb b/spec/lib/rack/protection/http_origin_spec.rb",
                "index 35342cd..3b05fb4 100644",
                "--- a/spec/lib/rack/protection/http_origin_spec.rb",
                "+++ b/spec/lib/rack/protection/http_origin_spec.rb",
                "@@ -25,3 +25,3 @@ describe Rack::Protection::HttpOrigin do",
                "       mock_app do",
                "-        use Rack::Protection::HttpOrigin, :allow_if => lambda{|env| true }",
                "+        use Rack::Protection::HttpOrigin, :allow_if => lambda{|env| env.has_key?('HTTP_ORIGIN') }",
                "         run DummyApp"
            ],
            "changed_files": [
                "spec/lib/rack/protection/http_origin_spec.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "0978cea87352f42a4621904c29715648e3ca60ed",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469749852,
            "hunks": 1,
            "message": ":nail_care:",
            "diff": [
                "diff --git a/lib/rack/protection/content_security_policy.rb b/lib/rack/protection/content_security_policy.rb",
                "index 62284fd..c5f194b 100644",
                "--- a/lib/rack/protection/content_security_policy.rb",
                "+++ b/lib/rack/protection/content_security_policy.rb",
                "@@ -53,3 +53,3 @@ module Rack",
                "           \"#{k.to_s.sub(/_/, '-')} #{options[k]}\" if options.key?(k)",
                "-        end.compact.join('; ')        ",
                "+        end.compact.join('; ')",
                "       end"
            ],
            "changed_files": [
                "lib/rack/protection/content_security_policy.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "4b7feccd35a7910c2eb6671a33c893eb63bbd3e1",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469594316,
            "hunks": 99,
            "message": "Create gh-pages branch via GitHub",
            "diff": [
                "diff --git a/index.html b/index.html",
                "index bd8e113..58e30a4 100644",
                "--- a/index.html",
                "+++ b/index.html",
                "@@ -1,42 +1,23 @@",
                "-<!doctype html>",
                "-<html>",
                "+<!DOCTYPE html>",
                "+<html lang=\"en-us\">",
                "   <head>",
                "-    <meta charset=\"utf-8\">",
                "-    <meta http-equiv=\"X-UA-Compatible\" content=\"chrome=1\">",
                "-    <title>rack-protection by rkh</title>",
                "-    <link rel=\"stylesheet\" href=\"stylesheets/styles.css\">",
                "-    <link rel=\"stylesheet\" href=\"stylesheets/pygment_trac.css\">",
                "-    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\"></script>",
                "-    <script src=\"javascripts/respond.js\"></script>",
                "-    <!--[if lt IE 9]>",
                "-      <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>",
                "-    <![endif]-->",
                "-    <!--[if lt IE 8]>",
                "-    <link rel=\"stylesheet\" href=\"stylesheets/ie.css\">",
                "-    <![endif]-->",
                "-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\">",
                "-",
                "+    <meta charset=\"UTF-8\">",
                "+    <title>Rack::Protection by sinatra</title>",
                "+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">",
                "+    <link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheets/normalize.css\" media=\"screen\">",
                "+    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>",
                "+    <link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheets/stylesheet.css\" media=\"screen\">",
                "+    <link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheets/github-light.css\" media=\"screen\">",
                "   </head>",
                "   <body>",
                "-      <div id=\"header\">",
                "-        <nav>",
                "-          <li class=\"fork\"><a href=\"https://github.com/rkh/rack-protection\">View On GitHub</a></li>",
                "-          <li class=\"downloads\"><a href=\"https://github.com/rkh/rack-protection/zipball/master\">ZIP</a></li>",
                "-          <li class=\"downloads\"><a href=\"https://github.com/rkh/rack-protection/tarball/master\">TAR</a></li>",
                "-          <li class=\"title\">DOWNLOADS</li>",
                "-        </nav>",
                "-      </div><!-- end header -->",
                "-",
                "-    <div class=\"wrapper\">",
                "-",
                "-      <section>",
                "-        <div id=\"title\">",
                "-          <h1>rack-protection</h1>",
                "-          <p>You should use protection!</p>",
                "-          <hr>",
                "-          <span class=\"credits left\">Project maintained by <a href=\"https://github.com/rkh\">rkh</a></span>",
                "-          <span class=\"credits right\">Hosted on GitHub Pages &mdash; Theme by <a href=\"http://twitter.com/#!/michigangraham\">mattgraham</a></span>",
                "-        </div>",
                "-",
                "-        <p>You should use protection!</p>",
                "+    <section class=\"page-header\">",
                "+      <h1 class=\"project-name\">Rack::Protection</h1>",
                "+      <h2 class=\"project-tagline\">Protect against typical web attacks, works with all Rack apps, including Rails.</h2>",
                "+      <a href=\"https://github.com/sinatra/rack-protection\" class=\"btn\">View on GitHub</a>",
                "+      <a href=\"https://github.com/sinatra/rack-protection/zipball/master\" class=\"btn\">Download .zip</a>",
                "+      <a href=\"https://github.com/sinatra/rack-protection/tarball/master\" class=\"btn\">Download .tar.gz</a>",
                "+    </section>",
                "+",
                "+    <section class=\"main-content\">",
                "+      <p><a href=\"http://travis-ci.org/sinatra/rack-protection\"><img src=\"https://secure.travis-ci.org/sinatra/rack-protection.png\" alt=\"Build Status\"></a></p>",
                "@@ -45,3 +26,4 @@ Should work for all Rack apps, including Rails.</p>",
                "-<h1>Usage</h1>",
                "+<h1>",
                "+<a id=\"usage\" class=\"anchor\" href=\"#usage\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Usage</h1>",
                "@@ -49,7 +31,6 @@ Should work for all Rack apps, including Rails.</p>",
                "-<div class=\"highlight\"><pre><span class=\"c1\"># config.ru</span>",
                "-<span class=\"nb\">require</span> <span class=\"s1\">'rack/protection'</span>",
                "-<span class=\"n\">use</span> <span class=\"no\">Rack</span><span class=\"o\">::</span><span class=\"no\">Protection</span>",
                "-<span class=\"n\">run</span> <span class=\"no\">MyApp</span>",
                "-</pre></div>",
                "+<div class=\"highlight highlight-source-ruby\"><pre><span class=\"pl-c\"># config.ru</span>",
                "+<span class=\"pl-k\">require</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>rack/protection<span class=\"pl-pds\">'</span></span>",
                "+use <span class=\"pl-c1\">Rack</span>::<span class=\"pl-c1\">Protection</span>",
                "+run <span class=\"pl-c1\">MyApp</span></pre></div>",
                "@@ -57,7 +38,6 @@ Should work for all Rack apps, including Rails.</p>",
                "-<div class=\"highlight\"><pre><span class=\"c1\"># config.ru</span>",
                "-<span class=\"nb\">require</span> <span class=\"s1\">'rack/protection'</span>",
                "-<span class=\"n\">use</span> <span class=\"no\">Rack</span><span class=\"o\">::</span><span class=\"no\">Protection</span><span class=\"p\">,</span> <span class=\"ss\">:except</span> <span class=\"o\">=&gt;</span> <span class=\"ss\">:path_traversal</span>",
                "-<span class=\"n\">run</span> <span class=\"no\">MyApp</span>",
                "-</pre></div>",
                "+<div class=\"highlight highlight-source-ruby\"><pre><span class=\"pl-c\"># config.ru</span>",
                "+<span class=\"pl-k\">require</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>rack/protection<span class=\"pl-pds\">'</span></span>",
                "+use <span class=\"pl-c1\">Rack</span>::<span class=\"pl-c1\">Protection</span>, <span class=\"pl-c1\">:except</span> =&gt; <span class=\"pl-c1\">:path_traversal</span>",
                "+run <span class=\"pl-c1\">MyApp</span></pre></div>",
                "@@ -65,11 +45,12 @@ Should work for all Rack apps, including Rails.</p>",
                "-<div class=\"highlight\"><pre><span class=\"c1\"># config.ru</span>",
                "-<span class=\"nb\">require</span> <span class=\"s1\">'rack/protection'</span>",
                "-<span class=\"n\">use</span> <span class=\"no\">Rack</span><span class=\"o\">::</span><span class=\"no\">Protection</span><span class=\"o\">::</span><span class=\"no\">AuthenticityToken</span>",
                "-<span class=\"n\">run</span> <span class=\"no\">MyApp</span>",
                "-</pre></div>",
                "+<div class=\"highlight highlight-source-ruby\"><pre><span class=\"pl-c\"># config.ru</span>",
                "+<span class=\"pl-k\">require</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>rack/protection<span class=\"pl-pds\">'</span></span>",
                "+use <span class=\"pl-c1\">Rack</span>::<span class=\"pl-c1\">Protection</span>::<span class=\"pl-c1\">AuthenticityToken</span>",
                "+run <span class=\"pl-c1\">MyApp</span></pre></div>",
                "-<h1>Prevented Attacks</h1>",
                "+<h1>",
                "+<a id=\"prevented-attacks\" class=\"anchor\" href=\"#prevented-attacks\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Prevented Attacks</h1>",
                "-<h2>Cross Site Request Forgery</h2>",
                "+<h2>",
                "+<a id=\"cross-site-request-forgery\" class=\"anchor\" href=\"#cross-site-request-forgery\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Cross Site Request Forgery</h2>",
                "@@ -87,3 +68,6 @@ Should work for all Rack apps, including Rails.</p>",
                " <li><code>Rack::Protection::HttpOrigin</code></li>",
                "-</ul><h2>Cross Site Scripting</h2>",
                "+</ul>",
                "+",
                "+<h2>",
                "+<a id=\"cross-site-scripting\" class=\"anchor\" href=\"#cross-site-scripting\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Cross Site Scripting</h2>",
                "@@ -95,4 +79,8 @@ Should work for all Rack apps, including Rails.</p>",
                " <li>",
                "-<code>Rack::Protection::XssHeader</code> (Internet Explorer only)</li>",
                "-</ul><h2>Clickjacking</h2>",
                "+<code>Rack::Protection::XSSHeader</code> (Internet Explorer only)</li>",
                "+<li><code>Rack::Protection::ContentSecurityPolicy</code></li>",
                "+</ul>",
                "+",
                "+<h2>",
                "+<a id=\"clickjacking\" class=\"anchor\" href=\"#clickjacking\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Clickjacking</h2>",
                "@@ -102,3 +90,6 @@ Should work for all Rack apps, including Rails.</p>",
                " <li><code>Rack::Protection::FrameOptions</code></li>",
                "-</ul><h2>Directory Traversal</h2>",
                "+</ul>",
                "+",
                "+<h2>",
                "+<a id=\"directory-traversal\" class=\"anchor\" href=\"#directory-traversal\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Directory Traversal</h2>",
                "@@ -108,3 +99,6 @@ Should work for all Rack apps, including Rails.</p>",
                " <li><code>Rack::Protection::PathTraversal</code></li>",
                "-</ul><h2>Session Hijacking</h2>",
                "+</ul>",
                "+",
                "+<h2>",
                "+<a id=\"session-hijacking\" class=\"anchor\" href=\"#session-hijacking\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Session Hijacking</h2>",
                "@@ -114,3 +108,6 @@ Should work for all Rack apps, including Rails.</p>",
                " <li><code>Rack::Protection::SessionHijacking</code></li>",
                "-</ul><h2>IP Spoofing</h2>",
                "+</ul>",
                "+",
                "+<h2>",
                "+<a id=\"ip-spoofing\" class=\"anchor\" href=\"#ip-spoofing\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>IP Spoofing</h2>",
                "@@ -120,3 +117,16 @@ Should work for all Rack apps, including Rails.</p>",
                " <li><code>Rack::Protection::IPSpoofing</code></li>",
                "-</ul><h1>Installation</h1>",
                "+</ul>",
                "+",
                "+<h2>",
                "+<a id=\"helps-to-protect-against-protocol-downgrade-attacks-and-cookie-hijacking\" class=\"anchor\" href=\"#helps-to-protect-against-protocol-downgrade-attacks-and-cookie-hijacking\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Helps to protect against protocol downgrade attacks and cookie hijacking</h2>",
                "+",
                "+<p>Prevented by:</p>",
                "+",
                "+<ul>",
                "+<li>",
                "+<code>Rack::Protection::StrictTransport</code> (not included by <code>use Rack::Protection</code>)</li>",
                "+</ul>",
                "+",
                "+<h1>",
                "+<a id=\"installation\" class=\"anchor\" href=\"#installation\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Installation</h1>",
                "@@ -124,8 +134,23 @@ Should work for all Rack apps, including Rails.</p>",
                " </code></pre>",
                "-      </section>",
                "-    </div>",
                "-    <!--[if !IE]><script>fixScale(document);</script><![endif]-->",
                "-    ",
                "+<h1>",
                "+<a id=\"instrumentation\" class=\"anchor\" href=\"#instrumentation\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Instrumentation</h1>",
                "+",
                "+<p>Instrumentation is enabled by passing in an instrumenter as an option.</p>",
                "+",
                "+<pre><code>use Rack::Protection, instrumenter: ActiveSupport::Notifications",
                "+</code></pre>",
                "+",
                "+<p>The instrumenter is passed a namespace (String) and environment (Hash). The namespace is 'rack.protection' and the attack type can be obtained from the environment key 'rack.protection.attack'.</p>",
                "+",
                "+      <footer class=\"site-footer\">",
                "+        <span class=\"site-footer-owner\"><a href=\"https://github.com/sinatra/rack-protection\">Rack::Protection</a> is maintained by <a href=\"https://github.com/sinatra\">sinatra</a>.</span>",
                "+",
                "+        <span class=\"site-footer-credits\">This page was generated by <a href=\"https://pages.github.com\">GitHub Pages</a> using the <a href=\"https://github.com/jasonlong/cayman-theme\">Cayman theme</a> by <a href=\"https://twitter.com/jasonlong\">Jason Long</a>.</span>",
                "+      </footer>",
                "+",
                "+    </section>",
                "+",
                "+  ",
                "   </body>",
                "-</html>",
                "\\ No newline at end of file",
                "+</html>",
                "diff --git a/params.json b/params.json",
                "index 4724672..327e02f 100644",
                "--- a/params.json",
                "+++ b/params.json",
                "@@ -1 +1,7 @@",
                "-{\"note\":\"Don't delete this file! It's used internally to help with page regeneration.\",\"name\":\"rack-protection\",\"tagline\":\"You should use protection!\",\"body\":\"You should use protection!\\r\\n\\r\\nThis gem protects against typical web attacks.\\r\\nShould work for all Rack apps, including Rails.\\r\\n\\r\\n# Usage\\r\\n\\r\\nUse all protections you probably want to use:\\r\\n\\r\\n``` ruby\\r\\n# config.ru\\r\\nrequire 'rack/protection'\\r\\nuse Rack::Protection\\r\\nrun MyApp\\r\\n```\\r\\n\\r\\nSkip a single protection middleware:\\r\\n\\r\\n``` ruby\\r\\n# config.ru\\r\\nrequire 'rack/protection'\\r\\nuse Rack::Protection, :except => :path_traversal\\r\\nrun MyApp\\r\\n```\\r\\n\\r\\nUse a single protection middleware:\\r\\n\\r\\n``` ruby\\r\\n# config.ru\\r\\nrequire 'rack/protection'\\r\\nuse Rack::Protection::AuthenticityToken\\r\\nrun MyApp\\r\\n```\\r\\n\\r\\n# Prevented Attacks\\r\\n\\r\\n## Cross Site Request Forgery\\r\\n\\r\\nPrevented by:\\r\\n\\r\\n* `Rack::Protection::AuthenticityToken` (not included by `use Rack::Protection`)\\r\\n* `Rack::Protection::FormToken` (not included by `use Rack::Protection`)\\r\\n* `Rack::Protection::JsonCsrf`\\r\\n* `Rack::Protection::RemoteReferrer` (not included by `use Rack::Protection`)\\r\\n* `Rack::Protection::RemoteToken`\\r\\n* `Rack::Protection::HttpOrigin`\\r\\n\\r\\n## Cross Site Scripting\\r\\n\\r\\nPrevented by:\\r\\n\\r\\n* `Rack::Protection::EscapedParams` (not included by `use Rack::Protection`)\\r\\n* `Rack::Protection::XssHeader` (Internet Explorer only)\\r\\n\\r\\n## Clickjacking\\r\\n\\r\\nPrevented by:\\r\\n\\r\\n* `Rack::Protection::FrameOptions`\\r\\n\\r\\n## Directory Traversal\\r\\n\\r\\nPrevented by:\\r\\n\\r\\n* `Rack::Protection::PathTraversal`\\r\\n\\r\\n## Session Hijacking\\r\\n\\r\\nPrevented by:\\r\\n\\r\\n* `Rack::Protection::SessionHijacking`\\r\\n\\r\\n## IP Spoofing\\r\\n\\r\\nPrevented by:\\r\\n\\r\\n* `Rack::Protection::IPSpoofing`\\r\\n\\r\\n# Installation\\r\\n\\r\\n    gem install rack-protection\\r\\n\\r\\n\",\"google\":\"\"}",
                "\\ No newline at end of file",
                "+{",
                "+  \"name\": \"Rack::Protection\",",
                "+  \"tagline\": \"Protect against typical web attacks, works with all Rack apps, including Rails.\",",
                "+  \"body\": \"[![Build Status](https://secure.travis-ci.org/sinatra/rack-protection.png)](http://travis-ci.org/sinatra/rack-protection)\\r\\n\\r\\nThis gem protects against typical web attacks.\\r\\nShould work for all Rack apps, including Rails.\\r\\n\\r\\n# Usage\\r\\n\\r\\nUse all protections you probably want to use:\\r\\n\\r\\n``` ruby\\r\\n# config.ru\\r\\nrequire 'rack/protection'\\r\\nuse Rack::Protection\\r\\nrun MyApp\\r\\n```\\r\\n\\r\\nSkip a single protection middleware:\\r\\n\\r\\n``` ruby\\r\\n# config.ru\\r\\nrequire 'rack/protection'\\r\\nuse Rack::Protection, :except => :path_traversal\\r\\nrun MyApp\\r\\n```\\r\\n\\r\\nUse a single protection middleware:\\r\\n\\r\\n``` ruby\\r\\n# config.ru\\r\\nrequire 'rack/protection'\\r\\nuse Rack::Protection::AuthenticityToken\\r\\nrun MyApp\\r\\n```\\r\\n\\r\\n# Prevented Attacks\\r\\n\\r\\n## Cross Site Request Forgery\\r\\n\\r\\nPrevented by:\\r\\n\\r\\n* `Rack::Protection::AuthenticityToken` (not included by `use Rack::Protection`)\\r\\n* `Rack::Protection::FormToken` (not included by `use Rack::Protection`)\\r\\n* `Rack::Protection::JsonCsrf`\\r\\n* `Rack::Protection::RemoteReferrer` (not included by `use Rack::Protection`)\\r\\n* `Rack::Protection::RemoteToken`\\r\\n* `Rack::Protection::HttpOrigin`\\r\\n\\r\\n## Cross Site Scripting\\r\\n\\r\\nPrevented by:\\r\\n\\r\\n* `Rack::Protection::EscapedParams` (not included by `use Rack::Protection`)\\r\\n* `Rack::Protection::XSSHeader` (Internet Explorer only)\\r\\n* `Rack::Protection::ContentSecurityPolicy`\\r\\n\\r\\n## Clickjacking\\r\\n\\r\\nPrevented by:\\r\\n\\r\\n* `Rack::Protection::FrameOptions`\\r\\n\\r\\n## Directory Traversal\\r\\n\\r\\nPrevented by:\\r\\n\\r\\n* `Rack::Protection::PathTraversal`\\r\\n\\r\\n## Session Hijacking\\r\\n\\r\\nPrevented by:\\r\\n\\r\\n* `Rack::Protection::SessionHijacking`\\r\\n\\r\\n## IP Spoofing\\r\\n\\r\\nPrevented by:\\r\\n\\r\\n* `Rack::Protection::IPSpoofing`\\r\\n\\r\\n## Helps to protect against protocol downgrade attacks and cookie hijacking\\r\\n\\r\\nPrevented by:\\r\\n\\r\\n* `Rack::Protection::StrictTransport` (not included by `use Rack::Protection`)\\r\\n\\r\\n# Installation\\r\\n\\r\\n    gem install rack-protection\\r\\n\\r\\n# Instrumentation\\r\\n\\r\\nInstrumentation is enabled by passing in an instrumenter as an option.\\r\\n```\\r\\nuse Rack::Protection, instrumenter: ActiveSupport::Notifications\\r\\n```\\r\\n\\r\\nThe instrumenter is passed a namespace (String) and environment (Hash). The namespace is 'rack.protection' and the attack type can be obtained from the environment key 'rack.protection.attack'.\\r\\n\",",
                "+  \"google\": \"\",",
                "+  \"note\": \"Don't delete this file! It's used internally to help with page regeneration.\"",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/stylesheets/github-light.css b/stylesheets/github-light.css",
                "new file mode 100644",
                "index 0000000..0c6b24d",
                "--- /dev/null",
                "+++ b/stylesheets/github-light.css",
                "@@ -0,0 +1,124 @@",
                "+/*",
                "+The MIT License (MIT)",
                "+",
                "+Copyright (c) 2016 GitHub, Inc.",
                "+",
                "+Permission is hereby granted, free of charge, to any person obtaining a copy",
                "+of this software and associated documentation files (the \"Software\"), to deal",
                "+in the Software without restriction, including without limitation the rights",
                "+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",
                "+copies of the Software, and to permit persons to whom the Software is",
                "+furnished to do so, subject to the following conditions:",
                "+",
                "+The above copyright notice and this permission notice shall be included in all",
                "+copies or substantial portions of the Software.",
                "+",
                "+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",
                "+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",
                "+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE",
                "+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",
                "+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",
                "+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE",
                "+SOFTWARE.",
                "+",
                "+*/",
                "+",
                "+.pl-c /* comment */ {",
                "+  color: #969896;",
                "+}",
                "+",
                "+.pl-c1 /* constant, variable.other.constant, support, meta.property-name, support.constant, support.variable, meta.module-reference, markup.raw, meta.diff.header */,",
                "+.pl-s .pl-v /* string variable */ {",
                "+  color: #0086b3;",
                "+}",
                "+",
                "+.pl-e /* entity */,",
                "+.pl-en /* entity.name */ {",
                "+  color: #795da3;",
                "+}",
                "+",
                "+.pl-smi /* variable.parameter.function, storage.modifier.package, storage.modifier.import, storage.type.java, variable.other */,",
                "+.pl-s .pl-s1 /* string source */ {",
                "+  color: #333;",
                "+}",
                "+",
                "+.pl-ent /* entity.name.tag */ {",
                "+  color: #63a35c;",
                "+}",
                "+",
                "+.pl-k /* keyword, storage, storage.type */ {",
                "+  color: #a71d5d;",
                "+}",
                "+",
                "+.pl-s /* string */,",
                "+.pl-pds /* punctuation.definition.string, string.regexp.character-class */,",
                "+.pl-s .pl-pse .pl-s1 /* string punctuation.section.embedded source */,",
                "+.pl-sr /* string.regexp */,",
                "+.pl-sr .pl-cce /* string.regexp constant.character.escape */,",
                "+.pl-sr .pl-sre /* string.regexp source.ruby.embedded */,",
                "+.pl-sr .pl-sra /* string.regexp string.regexp.arbitrary-repitition */ {",
                "+  color: #183691;",
                "+}",
                "+",
                "+.pl-v /* variable */ {",
                "+  color: #ed6a43;",
                "+}",
                "+",
                "+.pl-id /* invalid.deprecated */ {",
                "+  color: #b52a1d;",
                "+}",
                "+",
                "+.pl-ii /* invalid.illegal */ {",
                "+  color: #f8f8f8;",
                "+  background-color: #b52a1d;",
                "+}",
                "+",
                "+.pl-sr .pl-cce /* string.regexp constant.character.escape */ {",
                "+  font-weight: bold;",
                "+  color: #63a35c;",
                "+}",
                "+",
                "+.pl-ml /* markup.list */ {",
                "+  color: #693a17;",
                "+}",
                "+",
                "+.pl-mh /* markup.heading */,",
                "+.pl-mh .pl-en /* markup.heading entity.name */,",
                "+.pl-ms /* meta.separator */ {",
                "+  font-weight: bold;",
                "+  color: #1d3e81;",
                "+}",
                "+",
                "+.pl-mq /* markup.quote */ {",
                "+  color: #008080;",
                "+}",
                "+",
                "+.pl-mi /* markup.italic */ {",
                "+  font-style: italic;",
                "+  color: #333;",
                "+}",
                "+",
                "+.pl-mb /* markup.bold */ {",
                "+  font-weight: bold;",
                "+  color: #333;",
                "+}",
                "+",
                "+.pl-md /* markup.deleted, meta.diff.header.from-file */ {",
                "+  color: #bd2c00;",
                "+  background-color: #ffecec;",
                "+}",
                "+",
                "+.pl-mi1 /* markup.inserted, meta.diff.header.to-file */ {",
                "+  color: #55a532;",
                "+  background-color: #eaffea;",
                "+}",
                "+",
                "+.pl-mdr /* meta.diff.range */ {",
                "+  font-weight: bold;",
                "+  color: #795da3;",
                "+}",
                "+",
                "+.pl-mo /* meta.output */ {",
                "+  color: #1d3e81;",
                "+}",
                "+",
                "diff --git a/stylesheets/normalize.css b/stylesheets/normalize.css",
                "index bc2ba93..30366a6 100644",
                "--- a/stylesheets/normalize.css",
                "+++ b/stylesheets/normalize.css",
                "@@ -1,8 +1,33 @@",
                "-/* normalize.css 2012-02-07T12:37 UTC - http://github.com/necolas/normalize.css */",
                "-/* =============================================================================",
                "-   HTML5 display definitions",
                "+/*! normalize.css v3.0.2 | MIT License | git.io/normalize */",
                "+",
                "+/**",
                "+ * 1. Set default font family to sans-serif.",
                "+ * 2. Prevent iOS text size adjust after orientation change, without disabling",
                "+ *    user zoom.",
                "+ */",
                "+",
                "+html {",
                "+  font-family: sans-serif; /* 1 */",
                "+  -ms-text-size-adjust: 100%; /* 2 */",
                "+  -webkit-text-size-adjust: 100%; /* 2 */",
                "+}",
                "+",
                "+/**",
                "+ * Remove default margin.",
                "+ */",
                "+",
                "+body {",
                "+  margin: 0;",
                "+}",
                "+",
                "+/* HTML5 display definitions",
                "    ========================================================================== */",
                "-/*",
                "- * Corrects block display not defined in IE6/7/8/9 & FF3",
                "+",
                "+/**",
                "+ * Correct `block` display not defined for any HTML5 element in IE 8/9.",
                "+ * Correct `block` display not defined for `details` or `summary` in IE 10/11",
                "+ * and Firefox.",
                "+ * Correct `block` display not defined for `main` in IE 11.",
                "  */",
                "+",
                " article,",
                "@@ -15,2 +40,4 @@ header,",
                " hgroup,",
                "+main,",
                "+menu,",
                " nav,",
                "@@ -21,25 +48,32 @@ summary {",
                "-/*",
                "- * Corrects inline-block display not defined in IE6/7/8/9 & FF3",
                "+/**",
                "+ * 1. Correct `inline-block` display not defined in IE 8/9.",
                "+ * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.",
                "  */",
                "+",
                " audio,",
                " canvas,",
                "+progress,",
                " video {",
                "-  display: inline-block;",
                "-  *display: inline;",
                "-  *zoom: 1;",
                "+  display: inline-block; /* 1 */",
                "+  vertical-align: baseline; /* 2 */",
                " }",
                "-/*",
                "- * Prevents modern browsers from displaying 'audio' without controls",
                "+/**",
                "+ * Prevent modern browsers from displaying `audio` without controls.",
                "+ * Remove excess height in iOS 5 devices.",
                "  */",
                "+",
                " audio:not([controls]) {",
                "   display: none;",
                "+  height: 0;",
                " }",
                "-/*",
                "- * Addresses styling for 'hidden' attribute not present in IE7/8/9, FF3, S4",
                "- * Known issue: no IE6 support",
                "+/**",
                "+ * Address `[hidden]` styling not present in IE 8/9/10.",
                "+ * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.",
                "  */",
                "-[hidden] {",
                "+",
                "+[hidden],",
                "+template {",
                "   display: none;",
                "@@ -47,54 +81,19 @@ audio:not([controls]) {",
                "-/* =============================================================================",
                "-   Base",
                "+/* Links",
                "    ========================================================================== */",
                "-/*",
                "- * 1. Corrects text resizing oddly in IE6/7 when body font-size is set using em units",
                "- *    http://clagnut.com/blog/348/#c790",
                "- * 2. Prevents iOS text size adjust after orientation change, without disabling user zoom",
                "- *    www.456bereastreet.com/archive/201012/controlling_text_size_in_safari_for_ios_without_disabling_user_zoom/",
                "- */",
                "-html {",
                "-  font-size: 100%;",
                "-  /* 1 */",
                "-  -webkit-text-size-adjust: 100%;",
                "-  /* 2 */",
                "-  -ms-text-size-adjust: 100%;",
                "-  /* 2 */",
                "-}",
                "-/*",
                "- * Addresses font-family inconsistency between 'textarea' and other form elements.",
                "+/**",
                "+ * Remove the gray background color from active links in IE 10.",
                "  */",
                "-html,",
                "-button,",
                "-input,",
                "-select,",
                "-textarea {",
                "-  font-family: sans-serif;",
                "-}",
                "-/*",
                "- * Addresses margins handled incorrectly in IE6/7",
                "- */",
                "-body {",
                "-  margin: 0;",
                "+a {",
                "+  background-color: transparent;",
                " }",
                "-/* =============================================================================",
                "-   Links",
                "-   ========================================================================== */",
                "-/*",
                "- * Addresses outline displayed oddly in Chrome",
                "+/**",
                "+ * Improve readability when focused and also mouse hovered in all browsers.",
                "  */",
                "-a:focus {",
                "-  outline: thin dotted;",
                "-}",
                "-/*",
                "- * Improves readability when focused and also mouse hovered in all browsers",
                "- * people.opera.com/patrickl/experiments/keyboard/test",
                "- */",
                "-a:hover,",
                "-a:active {",
                "+a:active,",
                "+a:hover {",
                "   outline: 0;",
                "@@ -102,42 +101,9 @@ a:active {",
                "-/* =============================================================================",
                "-   Typography",
                "+/* Text-level semantics",
                "    ========================================================================== */",
                "-/*",
                "- * Addresses font sizes and margins set differently in IE6/7",
                "- * Addresses font sizes within 'section' and 'article' in FF4+, Chrome, S5",
                "- */",
                "-h1 {",
                "-  font-size: 2em;",
                "-  margin: 0.67em 0;",
                "-}",
                "-h2 {",
                "-  font-size: 1.5em;",
                "-  margin: 0.83em 0;",
                "-}",
                "-",
                "-h3 {",
                "-  font-size: 1.17em;",
                "-  margin: 1em 0;",
                "-}",
                "-",
                "-h4 {",
                "-  font-size: 1em;",
                "-  margin: 1.33em 0;",
                "-}",
                "-",
                "-h5 {",
                "-  font-size: 0.83em;",
                "-  margin: 1.67em 0;",
                "-}",
                "-",
                "-h6 {",
                "-  font-size: 0.75em;",
                "-  margin: 2.33em 0;",
                "-}",
                "-",
                "-/*",
                "- * Addresses styling not present in IE7/8/9, S5, Chrome",
                "+/**",
                "+ * Address styling not present in IE 8/9/10/11, Safari, and Chrome.",
                "  */",
                "+",
                " abbr[title] {",
                "@@ -146,5 +112,6 @@ abbr[title] {",
                "-/*",
                "- * Addresses style set to 'bolder' in FF3+, S4/5, Chrome",
                "-*/",
                "+/**",
                "+ * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.",
                "+ */",
                "+",
                " b,",
                "@@ -154,9 +121,6 @@ strong {",
                "-blockquote {",
                "-  margin: 1em 40px;",
                "-}",
                "-",
                "-/*",
                "- * Addresses styling not present in S5, Chrome",
                "+/**",
                "+ * Address styling not present in Safari and Chrome.",
                "  */",
                "+",
                " dfn {",
                "@@ -165,55 +129,33 @@ dfn {",
                "-/*",
                "- * Addresses styling not present in IE6/7/8/9",
                "+/**",
                "+ * Address variable `h1` font-size and margin within `section` and `article`",
                "+ * contexts in Firefox 4+, Safari, and Chrome.",
                "  */",
                "-mark {",
                "-  background: #ff0;",
                "-  color: #000;",
                "-}",
                "-/*",
                "- * Addresses margins set differently in IE6/7",
                "- */",
                "-p,",
                "-pre {",
                "-  margin: 1em 0;",
                "+h1 {",
                "+  font-size: 2em;",
                "+  margin: 0.67em 0;",
                " }",
                "-/*",
                "- * Corrects font family set oddly in IE6, S4/5, Chrome",
                "- * en.wikipedia.org/wiki/User:Davidgothberg/Test59",
                "+/**",
                "+ * Address styling not present in IE 8/9.",
                "  */",
                "-pre,",
                "-code,",
                "-kbd,",
                "-samp {",
                "-  font-family: monospace, serif;",
                "-  _font-family: 'courier new', monospace;",
                "-  font-size: 1em;",
                "-}",
                "-/*",
                "- * 1. Addresses CSS quotes not supported in IE6/7",
                "- * 2. Addresses quote property not supported in S4",
                "- */",
                "-/* 1 */",
                "-q {",
                "-  quotes: none;",
                "+mark {",
                "+  background: #ff0;",
                "+  color: #000;",
                " }",
                "-/* 2 */",
                "-q:before,",
                "-q:after {",
                "-  content: '';",
                "-  content: none;",
                "-}",
                "+/**",
                "+ * Address inconsistent and variable font size in all browsers.",
                "+ */",
                " small {",
                "-  font-size: 75%;",
                "+  font-size: 80%;",
                " }",
                "-/*",
                "- * Prevents sub and sup affecting line-height in all browsers",
                "- * gist.github.com/413930",
                "+/**",
                "+ * Prevent `sub` and `sup` affecting `line-height` in all browsers.",
                "  */",
                "+",
                " sub,",
                "@@ -234,55 +176,17 @@ sub {",
                "-/* =============================================================================",
                "-   Lists",
                "+/* Embedded content",
                "    ========================================================================== */",
                "-/*",
                "- * Addresses margins set differently in IE6/7",
                "- */",
                "-dl,",
                "-menu,",
                "-ol,",
                "-ul {",
                "-  margin: 1em 0;",
                "-}",
                "-dd {",
                "-  margin: 0 0 0 40px;",
                "-}",
                "-",
                "-/*",
                "- * Addresses paddings set differently in IE6/7",
                "+/**",
                "+ * Remove border when inside `a` element in IE 8/9/10.",
                "  */",
                "-menu,",
                "-ol,",
                "-ul {",
                "-  padding: 0 0 0 40px;",
                "-}",
                "-/*",
                "- * Corrects list images handled incorrectly in IE7",
                "- */",
                "-nav ul,",
                "-nav ol {",
                "-  list-style: none;",
                "-  list-style-image: none;",
                "-}",
                "-",
                "-/* =============================================================================",
                "-   Embedded content",
                "-   ========================================================================== */",
                "-/*",
                "- * 1. Removes border when inside 'a' element in IE6/7/8/9, FF3",
                "- * 2. Improves image quality when scaled in IE7",
                "- *    code.flickr.com/blog/2008/11/12/on-ui-quality-the-little-things-client-side-image-resizing/",
                "- */",
                " img {",
                "   border: 0;",
                "-  /* 1 */",
                "-  -ms-interpolation-mode: bicubic;",
                "-  /* 2 */",
                " }",
                "-/*",
                "- * Corrects overflow displayed oddly in IE9",
                "+/**",
                "+ * Correct overflow not hidden in IE 9/10/11.",
                "  */",
                "+",
                " svg:not(:root) {",
                "@@ -291,97 +195,109 @@ svg:not(:root) {",
                "-/* =============================================================================",
                "-   Figures",
                "+/* Grouping content",
                "    ========================================================================== */",
                "-/*",
                "- * Addresses margin not present in IE6/7/8/9, S5, O11",
                "+",
                "+/**",
                "+ * Address margin not present in IE 8/9 and Safari.",
                "  */",
                "+",
                " figure {",
                "-  margin: 0;",
                "+  margin: 1em 40px;",
                " }",
                "-/* =============================================================================",
                "-   Forms",
                "-   ========================================================================== */",
                "-/*",
                "- * Corrects margin displayed oddly in IE6/7",
                "+/**",
                "+ * Address differences between Firefox and other browsers.",
                "  */",
                "-form {",
                "-  margin: 0;",
                "+",
                "+hr {",
                "+  box-sizing: content-box;",
                "+  height: 0;",
                " }",
                "-/*",
                "- * Define consistent border, margin, and padding",
                "+/**",
                "+ * Contain overflow in all browsers.",
                "  */",
                "-fieldset {",
                "-  border: 1px solid #c0c0c0;",
                "-  margin: 0 2px;",
                "-  padding: 0.35em 0.625em 0.75em;",
                "+",
                "+pre {",
                "+  overflow: auto;",
                " }",
                "-/*",
                "- * 1. Corrects color not being inherited in IE6/7/8/9",
                "- * 2. Corrects text not wrapping in FF3 ",
                "- * 3. Corrects alignment displayed oddly in IE6/7",
                "+/**",
                "+ * Address odd `em`-unit font size rendering in all browsers.",
                "  */",
                "-legend {",
                "-  border: 0;",
                "-  /* 1 */",
                "-  padding: 0;",
                "-  white-space: normal;",
                "-  /* 2 */",
                "-  *margin-left: -7px;",
                "-  /* 3 */",
                "+",
                "+code,",
                "+kbd,",
                "+pre,",
                "+samp {",
                "+  font-family: monospace, monospace;",
                "+  font-size: 1em;",
                " }",
                "-/*",
                "- * 1. Corrects font size not being inherited in all browsers",
                "- * 2. Addresses margins set differently in IE6/7, FF3+, S5, Chrome",
                "- * 3. Improves appearance and consistency in all browsers",
                "+/* Forms",
                "+   ========================================================================== */",
                "+",
                "+/**",
                "+ * Known limitation: by default, Chrome and Safari on OS X allow very limited",
                "+ * styling of `select`, unless a `border` property is set.",
                "  */",
                "+",
                "+/**",
                "+ * 1. Correct color not being inherited.",
                "+ *    Known issue: affects color of disabled elements.",
                "+ * 2. Correct font properties not being inherited.",
                "+ * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.",
                "+ */",
                "+",
                " button,",
                " input,",
                "+optgroup,",
                " select,",
                " textarea {",
                "-  font-size: 100%;",
                "-  /* 1 */",
                "-  margin: 0;",
                "-  /* 2 */",
                "-  vertical-align: baseline;",
                "-  /* 3 */",
                "-  *vertical-align: middle;",
                "-  /* 3 */",
                "+  color: inherit; /* 1 */",
                "+  font: inherit; /* 2 */",
                "+  margin: 0; /* 3 */",
                "+}",
                "+",
                "+/**",
                "+ * Address `overflow` set to `hidden` in IE 8/9/10/11.",
                "+ */",
                "+",
                "+button {",
                "+  overflow: visible;",
                " }",
                "-/*",
                "- * Addresses FF3/4 setting line-height on 'input' using !important in the UA stylesheet",
                "+/**",
                "+ * Address inconsistent `text-transform` inheritance for `button` and `select`.",
                "+ * All other form control elements do not inherit `text-transform` values.",
                "+ * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.",
                "+ * Correct `select` style inheritance in Firefox.",
                "  */",
                "+",
                " button,",
                "-input {",
                "-  line-height: normal;",
                "-  /* 1 */",
                "+select {",
                "+  text-transform: none;",
                " }",
                "-/*",
                "- * 1. Improves usability and consistency of cursor style between image-type 'input' and others",
                "- * 2. Corrects inability to style clickable 'input' types in iOS",
                "- * 3. Removes inner spacing in IE7 without affecting normal text inputs",
                "- *    Known issue: inner spacing remains in IE6",
                "+/**",
                "+ * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`",
                "+ *    and `video` controls.",
                "+ * 2. Correct inability to style clickable `input` types in iOS.",
                "+ * 3. Improve usability and consistency of cursor style between image-type",
                "+ *    `input` and others.",
                "  */",
                "+",
                " button,",
                "-input[type=\"button\"],",
                "+html input[type=\"button\"], /* 1 */",
                " input[type=\"reset\"],",
                " input[type=\"submit\"] {",
                "-  cursor: pointer;",
                "-  /* 1 */",
                "-  -webkit-appearance: button;",
                "-  /* 2 */",
                "-  *overflow: visible;",
                "-  /* 3 */",
                "+  -webkit-appearance: button; /* 2 */",
                "+  cursor: pointer; /* 3 */",
                " }",
                "-/*",
                "- * Re-set default cursor for disabled elements",
                "+/**",
                "+ * Re-set default cursor for disabled elements.",
                "  */",
                "+",
                " button[disabled],",
                "-input[disabled] {",
                "+html input[disabled] {",
                "   cursor: default;",
                "@@ -389,30 +305,54 @@ input[disabled] {",
                "-/*",
                "- * 1. Addresses box sizing set to content-box in IE8/9",
                "- * 2. Removes excess padding in IE8/9",
                "- * 3. Removes excess padding in IE7",
                "-      Known issue: excess padding remains in IE6",
                "+/**",
                "+ * Remove inner padding and border in Firefox 4+.",
                "  */",
                "+",
                "+button::-moz-focus-inner,",
                "+input::-moz-focus-inner {",
                "+  border: 0;",
                "+  padding: 0;",
                "+}",
                "+",
                "+/**",
                "+ * Address Firefox 4+ setting `line-height` on `input` using `!important` in",
                "+ * the UA stylesheet.",
                "+ */",
                "+",
                "+input {",
                "+  line-height: normal;",
                "+}",
                "+",
                "+/**",
                "+ * It's recommended that you don't attempt to style these elements.",
                "+ * Firefox's implementation doesn't respect box-sizing, padding, or width.",
                "+ *",
                "+ * 1. Address box sizing set to `content-box` in IE 8/9/10.",
                "+ * 2. Remove excess padding in IE 8/9/10.",
                "+ */",
                "+",
                " input[type=\"checkbox\"],",
                " input[type=\"radio\"] {",
                "-  box-sizing: border-box;",
                "-  /* 1 */",
                "-  padding: 0;",
                "-  /* 2 */",
                "-  *height: 13px;",
                "-  /* 3 */",
                "-  *width: 13px;",
                "-  /* 3 */",
                "+  box-sizing: border-box; /* 1 */",
                "+  padding: 0; /* 2 */",
                "+}",
                "+",
                "+/**",
                "+ * Fix the cursor style for Chrome's increment/decrement buttons. For certain",
                "+ * `font-size` values of the `input`, it causes the cursor style of the",
                "+ * decrement button to change from `default` to `text`.",
                "+ */",
                "+",
                "+input[type=\"number\"]::-webkit-inner-spin-button,",
                "+input[type=\"number\"]::-webkit-outer-spin-button {",
                "+  height: auto;",
                " }",
                "-/*",
                "- * 1. Addresses appearance set to searchfield in S5, Chrome",
                "- * 2. Addresses box-sizing set to border-box in S5, Chrome (include -moz to future-proof)",
                "+/**",
                "+ * 1. Address `appearance` set to `searchfield` in Safari and Chrome.",
                "+ * 2. Address `box-sizing` set to `border-box` in Safari and Chrome",
                "+ *    (include `-moz` to future-proof).",
                "  */",
                "+",
                " input[type=\"search\"] {",
                "-  -webkit-appearance: textfield;",
                "-  /* 1 */",
                "-  -moz-box-sizing: content-box;",
                "-  -webkit-box-sizing: content-box;",
                "-  /* 2 */",
                "+  -webkit-appearance: textfield; /* 1 */ /* 2 */",
                "   box-sizing: content-box;",
                "@@ -420,7 +360,10 @@ input[type=\"search\"] {",
                "-/*",
                "- * Removes inner padding and search cancel button in S5, Chrome on OS X",
                "+/**",
                "+ * Remove inner padding and search cancel button in Safari and Chrome on OS X.",
                "+ * Safari (but not Chrome) clips the cancel button when the search input has",
                "+ * padding (and `textfield` appearance).",
                "  */",
                "-input[type=\"search\"]::-webkit-search-decoration,",
                "-input[type=\"search\"]::-webkit-search-cancel-button {",
                "+",
                "+input[type=\"search\"]::-webkit-search-cancel-button,",
                "+input[type=\"search\"]::-webkit-search-decoration {",
                "   -webkit-appearance: none;",
                "@@ -428,29 +371,46 @@ input[type=\"search\"]::-webkit-search-cancel-button {",
                "-/*",
                "- * Removes inner padding and border in FF3+",
                "- * www.sitepen.com/blog/2008/05/14/the-devils-in-the-details-fixing-dojos-toolbar-buttons/",
                "+/**",
                "+ * Define consistent border, margin, and padding.",
                "  */",
                "-button::-moz-focus-inner,",
                "-input::-moz-focus-inner {",
                "-  border: 0;",
                "-  padding: 0;",
                "+",
                "+fieldset {",
                "+  border: 1px solid #c0c0c0;",
                "+  margin: 0 2px;",
                "+  padding: 0.35em 0.625em 0.75em;",
                "+}",
                "+",
                "+/**",
                "+ * 1. Correct `color` not being inherited in IE 8/9/10/11.",
                "+ * 2. Remove padding so people aren't caught out if they zero out fieldsets.",
                "+ */",
                "+",
                "+legend {",
                "+  border: 0; /* 1 */",
                "+  padding: 0; /* 2 */",
                " }",
                "-/*",
                "- * 1. Removes default vertical scrollbar in IE6/7/8/9",
                "- * 2. Improves readability and alignment in all browsers",
                "+/**",
                "+ * Remove default vertical scrollbar in IE 8/9/10/11.",
                "  */",
                "+",
                " textarea {",
                "   overflow: auto;",
                "-  /* 1 */",
                "-  vertical-align: top;",
                "-  /* 2 */",
                " }",
                "-/* =============================================================================",
                "-   Tables",
                "+/**",
                "+ * Don't inherit the `font-weight` (applied by a rule above).",
                "+ * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.",
                "+ */",
                "+",
                "+optgroup {",
                "+  font-weight: bold;",
                "+}",
                "+",
                "+/* Tables",
                "    ========================================================================== */",
                "-/*",
                "- * Remove most spacing between table cells",
                "+",
                "+/**",
                "+ * Remove most spacing between table cells.",
                "  */",
                "+",
                " table {",
                "@@ -459 +419,6 @@ table {",
                " }",
                "+",
                "+td,",
                "+th {",
                "+  padding: 0;",
                "+}",
                "diff --git a/stylesheets/stylesheet.css b/stylesheets/stylesheet.css",
                "new file mode 100644",
                "index 0000000..b5f20c2",
                "--- /dev/null",
                "+++ b/stylesheets/stylesheet.css",
                "@@ -0,0 +1,245 @@",
                "+* {",
                "+  box-sizing: border-box; }",
                "+",
                "+body {",
                "+  padding: 0;",
                "+  margin: 0;",
                "+  font-family: \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;",
                "+  font-size: 16px;",
                "+  line-height: 1.5;",
                "+  color: #606c71; }",
                "+",
                "+a {",
                "+  color: #1e6bb8;",
                "+  text-decoration: none; }",
                "+  a:hover {",
                "+    text-decoration: underline; }",
                "+",
                "+.btn {",
                "+  display: inline-block;",
                "+  margin-bottom: 1rem;",
                "+  color: rgba(255, 255, 255, 0.7);",
                "+  background-color: rgba(255, 255, 255, 0.08);",
                "+  border-color: rgba(255, 255, 255, 0.2);",
                "+  border-style: solid;",
                "+  border-width: 1px;",
                "+  border-radius: 0.3rem;",
                "+  transition: color 0.2s, background-color 0.2s, border-color 0.2s; }",
                "+  .btn + .btn {",
                "+    margin-left: 1rem; }",
                "+",
                "+.btn:hover {",
                "+  color: rgba(255, 255, 255, 0.8);",
                "+  text-decoration: none;",
                "+  background-color: rgba(255, 255, 255, 0.2);",
                "+  border-color: rgba(255, 255, 255, 0.3); }",
                "+",
                "+@media screen and (min-width: 64em) {",
                "+  .btn {",
                "+    padding: 0.75rem 1rem; } }",
                "+",
                "+@media screen and (min-width: 42em) and (max-width: 64em) {",
                "+  .btn {",
                "+    padding: 0.6rem 0.9rem;",
                "+    font-size: 0.9rem; } }",
                "+",
                "+@media screen and (max-width: 42em) {",
                "+  .btn {",
                "+    display: block;",
                "+    width: 100%;",
                "+    padding: 0.75rem;",
                "+    font-size: 0.9rem; }",
                "+    .btn + .btn {",
                "+      margin-top: 1rem;",
                "+      margin-left: 0; } }",
                "+",
                "+.page-header {",
                "+  color: #fff;",
                "+  text-align: center;",
                "+  background-color: #159957;",
                "+  background-image: linear-gradient(120deg, #155799, #159957); }",
                "+",
                "+@media screen and (min-width: 64em) {",
                "+  .page-header {",
                "+    padding: 5rem 6rem; } }",
                "+",
                "+@media screen and (min-width: 42em) and (max-width: 64em) {",
                "+  .page-header {",
                "+    padding: 3rem 4rem; } }",
                "+",
                "+@media screen and (max-width: 42em) {",
                "+  .page-header {",
                "+    padding: 2rem 1rem; } }",
                "+",
                "+.project-name {",
                "+  margin-top: 0;",
                "+  margin-bottom: 0.1rem; }",
                "+",
                "+@media screen and (min-width: 64em) {",
                "+  .project-name {",
                "+    font-size: 3.25rem; } }",
                "+",
                "+@media screen and (min-width: 42em) and (max-width: 64em) {",
                "+  .project-name {",
                "+    font-size: 2.25rem; } }",
                "+",
                "+@media screen and (max-width: 42em) {",
                "+  .project-name {",
                "+    font-size: 1.75rem; } }",
                "+",
                "+.project-tagline {",
                "+  margin-bottom: 2rem;",
                "+  font-weight: normal;",
                "+  opacity: 0.7; }",
                "+",
                "+@media screen and (min-width: 64em) {",
                "+  .project-tagline {",
                "+    font-size: 1.25rem; } }",
                "+",
                "+@media screen and (min-width: 42em) and (max-width: 64em) {",
                "+  .project-tagline {",
                "+    font-size: 1.15rem; } }",
                "+",
                "+@media screen and (max-width: 42em) {",
                "+  .project-tagline {",
                "+    font-size: 1rem; } }",
                "+",
                "+.main-content :first-child {",
                "+  margin-top: 0; }",
                "+.main-content img {",
                "+  max-width: 100%; }",
                "+.main-content h1, .main-content h2, .main-content h3, .main-content h4, .main-content h5, .main-content h6 {",
                "+  margin-top: 2rem;",
                "+  margin-bottom: 1rem;",
                "+  font-weight: normal;",
                "+  color: #159957; }",
                "+.main-content p {",
                "+  margin-bottom: 1em; }",
                "+.main-content code {",
                "+  padding: 2px 4px;",
                "+  font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace;",
                "+  font-size: 0.9rem;",
                "+  color: #383e41;",
                "+  background-color: #f3f6fa;",
                "+  border-radius: 0.3rem; }",
                "+.main-content pre {",
                "+  padding: 0.8rem;",
                "+  margin-top: 0;",
                "+  margin-bottom: 1rem;",
                "+  font: 1rem Consolas, \"Liberation Mono\", Menlo, Courier, monospace;",
                "+  color: #567482;",
                "+  word-wrap: normal;",
                "+  background-color: #f3f6fa;",
                "+  border: solid 1px #dce6f0;",
                "+  border-radius: 0.3rem; }",
                "+  .main-content pre > code {",
                "+    padding: 0;",
                "+    margin: 0;",
                "+    font-size: 0.9rem;",
                "+    color: #567482;",
                "+    word-break: normal;",
                "+    white-space: pre;",
                "+    background: transparent;",
                "+    border: 0; }",
                "+.main-content .highlight {",
                "+  margin-bottom: 1rem; }",
                "+  .main-content .highlight pre {",
                "+    margin-bottom: 0;",
                "+    word-break: normal; }",
                "+.main-content .highlight pre, .main-content pre {",
                "+  padding: 0.8rem;",
                "+  overflow: auto;",
                "+  font-size: 0.9rem;",
                "+  line-height: 1.45;",
                "+  border-radius: 0.3rem; }",
                "+.main-content pre code, .main-content pre tt {",
                "+  display: inline;",
                "+  max-width: initial;",
                "+  padding: 0;",
                "+  margin: 0;",
                "+  overflow: initial;",
                "+  line-height: inherit;",
                "+  word-wrap: normal;",
                "+  background-color: transparent;",
                "+  border: 0; }",
                "+  .main-content pre code:before, .main-content pre code:after, .main-content pre tt:before, .main-content pre tt:after {",
                "+    content: normal; }",
                "+.main-content ul, .main-content ol {",
                "+  margin-top: 0; }",
                "+.main-content blockquote {",
                "+  padding: 0 1rem;",
                "+  margin-left: 0;",
                "+  color: #819198;",
                "+  border-left: 0.3rem solid #dce6f0; }",
                "+  .main-content blockquote > :first-child {",
                "+    margin-top: 0; }",
                "+  .main-content blockquote > :last-child {",
                "+    margin-bottom: 0; }",
                "+.main-content table {",
                "+  display: block;",
                "+  width: 100%;",
                "+  overflow: auto;",
                "+  word-break: normal;",
                "+  word-break: keep-all; }",
                "+  .main-content table th {",
                "+    font-weight: bold; }",
                "+  .main-content table th, .main-content table td {",
                "+    padding: 0.5rem 1rem;",
                "+    border: 1px solid #e9ebec; }",
                "+.main-content dl {",
                "+  padding: 0; }",
                "+  .main-content dl dt {",
                "+    padding: 0;",
                "+    margin-top: 1rem;",
                "+    font-size: 1rem;",
                "+    font-weight: bold; }",
                "+  .main-content dl dd {",
                "+    padding: 0;",
                "+    margin-bottom: 1rem; }",
                "+.main-content hr {",
                "+  height: 2px;",
                "+  padding: 0;",
                "+  margin: 1rem 0;",
                "+  background-color: #eff0f1;",
                "+  border: 0; }",
                "+",
                "+@media screen and (min-width: 64em) {",
                "+  .main-content {",
                "+    max-width: 64rem;",
                "+    padding: 2rem 6rem;",
                "+    margin: 0 auto;",
                "+    font-size: 1.1rem; } }",
                "+",
                "+@media screen and (min-width: 42em) and (max-width: 64em) {",
                "+  .main-content {",
                "+    padding: 2rem 4rem;",
                "+    font-size: 1.1rem; } }",
                "+",
                "+@media screen and (max-width: 42em) {",
                "+  .main-content {",
                "+    padding: 2rem 1rem;",
                "+    font-size: 1rem; } }",
                "+",
                "+.site-footer {",
                "+  padding-top: 2rem;",
                "+  margin-top: 2rem;",
                "+  border-top: solid 1px #eff0f1; }",
                "+",
                "+.site-footer-owner {",
                "+  display: block;",
                "+  font-weight: bold; }",
                "+",
                "+.site-footer-credits {",
                "+  color: #819198; }",
                "+",
                "+@media screen and (min-width: 64em) {",
                "+  .site-footer {",
                "+    font-size: 1rem; } }",
                "+",
                "+@media screen and (min-width: 42em) and (max-width: 64em) {",
                "+  .site-footer {",
                "+    font-size: 1rem; } }",
                "+",
                "+@media screen and (max-width: 42em) {",
                "+  .site-footer {",
                "+    font-size: 0.9rem; } }"
            ],
            "changed_files": [
                "index.html",
                "params.json",
                "stylesheets/github-light.css",
                "stylesheets/normalize.css",
                "stylesheets/stylesheet.css"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "1075b8a9b08e72bf2a8c8997a4d3408b482af96e",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469567855,
            "hunks": 1,
            "message": "Add img-src CSP directive It's in the list of defaults; I'm assuming it's just an oversight that it isn't in the list of allowed KEYs",
            "diff": [
                "diff --git a/lib/rack/protection/content_security_policy.rb b/lib/rack/protection/content_security_policy.rb",
                "index fc53e33..b25c643 100644",
                "--- a/lib/rack/protection/content_security_policy.rb",
                "+++ b/lib/rack/protection/content_security_policy.rb",
                "@@ -48,3 +48,3 @@ module Rack",
                "-      KEYS = [:default_src, :script_src, :connect_src, :font_src, :frame_src, :media_src, :style_src, :object_src, :report_uri, :sandbox]",
                "+      KEYS = [:default_src, :script_src, :connect_src, :font_src, :frame_src, :img_src, :media_src, :style_src, :object_src, :report_uri, :sandbox]"
            ],
            "changed_files": [
                "lib/rack/protection/content_security_policy.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "13cfcccc0403072e70caf92b04d3a8d0bc174f89",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469594418,
            "hunks": 0,
            "message": "Merge branch 'master' of github.com:sinatra/rack-protection",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "8b4ea69e496bd647169d63672a5407ed364016a3",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469435218,
            "hunks": 6,
            "message": "Update CI matrix to match current support by Sinatra Also test with sinatra master until release",
            "diff": [
                "diff --git a/.travis.yml b/.travis.yml",
                "index bbc6afc..34791ae 100644",
                "--- a/.travis.yml",
                "+++ b/.travis.yml",
                "@@ -1,16 +1,34 @@",
                " ---",
                "+language: ruby",
                "+",
                "+dist: trusty",
                "+sudo: true",
                "+",
                "+before_install:",
                "+  - rvm get head",
                "+  - gem install bundler",
                "+",
                "+rvm:",
                "+  - 2.2.4",
                "+  - 2.3.1",
                "+  - ruby-head",
                "+  - rbx",
                "+  - jruby-9.1.0.0",
                "+  - jruby-head",
                "+",
                " matrix:",
                "-  exclude: [{}]",
                "   include:",
                "-    - { rvm: 1.8.7,         env: rack=1.1.3  }",
                "-    - { rvm: 1.9.2,         env: rack=stable }",
                "-    - { rvm: 1.9.3,         env: rack=1.1.3  }",
                "-    - { rvm: 1.9.3,         env: rack=stable }",
                "-    - { rvm: 1.9.3,         env: rack=master }",
                "-    - { rvm: rbx,           env: rack=stable }",
                "-    - { rvm: jruby,         env: rack=stable }",
                "-    - { rvm: jruby-head,    env: rack=stable }",
                "+    - { rvm: 2.3.1,         env: rack=stable }",
                "+    - { rvm: 2.3.1,         env: rack=master }",
                "+    - { rvm: jruby-head,    env: rack=master }",
                "     - { rvm: ruby-head,     env: rack=master }",
                "   allow_failures:",
                "+    - env: rack=master",
                "+    - rvm: jruby-head",
                "     - rvm: ruby-head",
                "     - rvm: rbx",
                "+",
                "+notifications:",
                "+  recipients:",
                "+    - mail@zzak.io",
                "+  slack: sinatrarb:LQGhUfGYcqRgRzwKea0bqUhY",
                "diff --git a/Gemfile b/Gemfile",
                "index 144db9d..9c7d697 100644",
                "--- a/Gemfile",
                "+++ b/Gemfile",
                "@@ -10,2 +10,9 @@ gem 'rack', rack_version",
                "+sinatra_version = ENV['sinatra'].to_s",
                "+sinatra_version = nil if sinatra_version.empty? or sinatra_version == 'stable'",
                "+sinatra_version = {:github => 'sinatra/sinatra'} if sinatra_version == 'master'",
                "+# TODO: Remove once sinatra 2.0 is released",
                "+sinatra_version = {:github => 'sinatra/sinatra'}",
                "+gem 'sinatra', sinatra_version",
                "+",
                " gemspec"
            ],
            "changed_files": [
                ".travis.yml",
                "Gemfile"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "d21ab6a29a4d7fa6d45ffa68d113e83b19671281",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469614406,
            "hunks": 0,
            "message": "Merge branch 'nathanstitt-allow-if'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "5081fa950d661bd0aada9fa4b8dcfe9186ee8377",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469536122,
            "hunks": 0,
            "message": "Merge branch 'tempFileFix' of https://github.com/droppedoncaprica/rack-protection into droppedoncaprica/tempFileFix",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "cc19dafb0c6266c2927e629688464c9992efedf8",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469435759,
            "hunks": 1,
            "message": "I guess rvm started failing the build once sudo was enabled",
            "diff": [
                "diff --git a/.travis.yml b/.travis.yml",
                "index 34791ae..19181f0 100644",
                "--- a/.travis.yml",
                "+++ b/.travis.yml",
                "@@ -4,3 +4,3 @@ language: ruby",
                " dist: trusty",
                "-sudo: true",
                "+sudo: false"
            ],
            "changed_files": [
                ".travis.yml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "a28079d66b3be4f11a0a2b0d8a288d8ce4b589b2",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469536148,
            "hunks": 0,
            "message": "Merge branch 'droppedoncaprica/tempFileFix'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "92e7c2d41d4fd6078a4467549ecf858f16be8ad1",
            "repository": "https://github.com/sinatra/rack-protection",
            "timestamp": 1469520073,
            "hunks": 1,
            "message": "oops",
            "diff": [
                "diff --git a/spec/lib/rack/protection/content_security_policy_spec.rb b/spec/lib/rack/protection/content_security_policy_spec.rb",
                "index 57d43c2..9dbad44 100644",
                "--- a/spec/lib/rack/protection/content_security_policy_spec.rb",
                "+++ b/spec/lib/rack/protection/content_security_policy_spec.rb",
                "@@ -1,3 +1 @@",
                "-require File.expand_path('../spec_helper.rb', __FILE__)",
                "-",
                " describe Rack::Protection::ContentSecurityPolicy do"
            ],
            "changed_files": [
                "spec/lib/rack/protection/content_security_policy_spec.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        }
    ]
}
