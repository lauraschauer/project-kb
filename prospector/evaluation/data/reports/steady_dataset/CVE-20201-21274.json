{
    "advisory_record": {
        "cve_id": "CVE-2021-21274",
        "description": "Synapse is a Matrix reference homeserver written in python (pypi package matrix-synapse). Matrix is an ecosystem for open federated Instant Messaging and VoIP. In Synapse before version 1.25.0, a malicious homeserver could redirect requests to their .well-known file to a large file. This can lead to a denial of service attack where homeservers will consume significantly more resources when requesting the .well-known file of a malicious homeserver. This affects any server which accepts federation requests from untrusted servers. Issue is resolved in version 1.25.0. As a workaround the `federation_domain_whitelist` setting can be used to restrict the homeservers communicated with over federation.",
        "reserved_timestamp": 1608595200,
        "published_timestamp": 1614360316,
        "updated_timestamp": 1627869983,
        "repository_url": null,
        "references": {
            "": 475,
            "commit::ff5c4da1289cb5e097902b3e55b771be342c29d6": 7,
            "https://github.com/matrix-org/synapse/security/advisories/GHSA-2hwx-mjrm-v3g8": 6,
            "https://github.com/matrix-org/synapse/pull/8950": 6,
            "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax": 6,
            "https://github.com/features/actions": 3,
            "https://github.com/features/packages": 3,
            "https://github.com/features/security": 3,
            "https://github.com/features/codespaces": 3,
            "https://github.com/features/copilot": 3,
            "https://github.com/features/code-review": 3,
            "https://github.com/features/issues": 3,
            "https://github.com/features/discussions": 3,
            "https://github.com/features": 3,
            "https://docs.github.com": 3,
            "https://skills.github.com": 3,
            "https://github.blog": 3,
            "https://github.com/enterprise": 3,
            "https://github.com/team": 3,
            "https://github.com/enterprise/startups": 3,
            "https://github.com/solutions/industries/healthcare": 3,
            "https://github.com/solutions/industries/financial-services": 3,
            "https://github.com/solutions/industries/manufacturing": 3,
            "https://github.com/solutions/ci-cd": 3,
            "https://github.com/solutions/devops": 3,
            "https://github.com/solutions/devsecops": 3,
            "https://resources.github.com/learn/pathways": 3,
            "https://resources.github.com": 3,
            "https://github.com/customer-stories": 3,
            "https://partner.github.com": 3,
            "https://github.com/readme": 3,
            "https://github.com/topics": 3,
            "https://github.com/trending": 3,
            "https://github.com/collections": 3,
            "https://github.com/enterprise/advanced-security": 3,
            "https://github.com/pricing": 3,
            "https://github.com": 3,
            "https://docs.github.com/site-policy/github-terms/github-terms-of-service": 3,
            "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement": 3,
            "https://github.com/security": 3,
            "https://www.githubstatus.com/": 3,
            "https://docs.github.com/": 3,
            "https://support.github.com?tags=dotcom-footer": 3,
            "https://github.com/matrix-org/synapse/tree/master/docs/admin_api/purge_room.md": 3,
            "https://github.com/matrix-org/synapse/tree/master/docs/admin_api/shutdown_room.md": 3,
            "https://github.com/matrix-org/synapse/tree/master/docs/admin_api/rooms.md#delete-room-api": 3,
            "https://github.com/dklimpel": 3,
            "https://github.com/edwargix": 3,
            "commit::9389a88816ddb1eeb70f927da804b921aba0facb": 3,
            "https://docs.github.com/articles/managing-disruptive-comments/#hiding-a-comment": 3,
            "https://github.com/matrix-org/synapse/pull/8756": 3,
            "https://github.com/matrix-org/synapse/pull/8853": 3,
            "https://github.com/matrix-org/synapse/pull/8874": 3,
            "https://github.com/matrix-org/synapse/pull/8886": 3,
            "https://github.com/matrix-org/synapse/pull/8887": 3,
            "https://github.com/matrix-org/synapse/pull/8890": 3,
            "https://github.com/matrix-org/synapse/pull/8897": 3,
            "https://github.com/matrix-org/synapse/pull/8900": 3,
            "https://github.com/matrix-org/synapse/pull/8911": 3,
            "https://github.com/matrix-org/synapse/pull/8938": 3,
            "https://github.com/matrix-org/synapse/pull/8941": 3,
            "https://github.com/matrix-org/synapse/pull/8942": 3,
            "https://github.com/matrix-org/synapse/pull/8951": 3,
            "https://github.com/matrix-org/synapse/pull/8930": 3,
            "https://github.com/matrix-org/synapse/pull/8931": 3,
            "https://github.com/matrix-org/synapse/pull/8821": 3,
            "https://github.com/matrix-org/synapse/pull/8870": 3,
            "https://github.com/matrix-org/synapse/pull/8954": 3,
            "https://github.com/matrix-org/synapse/pull/8970": 3,
            "https://github.com/matrix-org/synapse/pull/8994": 3,
            "https://github.com/matrix-org/synapse/pull/8827": 3,
            "https://github.com/matrix-org/synapse/pull/8837": 3,
            "https://github.com/matrix-org/synapse/pull/8858": 3,
            "https://github.com/matrix-org/synapse/pull/8862": 3,
            "https://github.com/matrix-org/synapse/pull/8865": 3,
            "https://github.com/matrix-org/synapse/pull/8867": 3,
            "https://github.com/matrix-org/synapse/pull/8872": 3,
            "https://github.com/matrix-org/synapse/pull/8883": 3,
            "https://github.com/matrix-org/synapse/pull/8918": 3,
            "https://github.com/matrix-org/synapse/pull/8920": 3,
            "https://github.com/matrix-org/synapse/pull/8921": 3,
            "https://github.com/matrix-org/synapse/pull/8933": 3,
            "https://github.com/matrix-org/synapse/pull/8964": 3,
            "https://github.com/matrix-org/synapse/pull/8937": 3,
            "https://github.com/matrix-org/synapse/pull/8945": 3,
            "https://github.com/matrix-org/synapse/pull/8959": 3,
            "https://github.com/matrix-org/synapse/pull/8962": 3,
            "https://github.com/matrix-org/synapse/pull/8965": 3,
            "https://github.com/matrix-org/synapse/pull/8971": 3,
            "https://github.com/matrix-org/synapse/pull/8975": 3,
            "https://github.com/matrix-org/synapse/pull/8977": 3,
            "https://github.com/matrix-org/synapse/pull/8802": 3,
            "https://github.com/matrix-org/synapse/pull/8839": 3,
            "https://github.com/matrix-org/synapse/pull/8873": 3,
            "https://github.com/matrix-org/synapse/pull/8891": 3,
            "https://github.com/matrix-org/synapse/pull/8987": 3,
            "https://github.com/matrix-org/synapse/pull/8992": 3,
            "https://github.com/matrix-org/synapse/pull/9002": 3,
            "https://github.com/matrix-org/synapse/pull/8829": 3,
            "https://github.com/matrix-org/synapse/pull/8856": 3,
            "https://github.com/matrix-org/synapse/pull/8958": 3,
            "https://github.com/matrix-org/synapse/pull/8861": 3,
            "https://github.com/matrix-org/synapse/pull/8864": 3,
            "https://github.com/matrix-org/synapse/pull/8879": 3,
            "https://github.com/matrix-org/synapse/pull/8880": 3,
            "https://github.com/matrix-org/synapse/pull/8882": 3,
            "https://github.com/matrix-org/synapse/pull/8901": 3,
            "https://github.com/matrix-org/synapse/pull/8940": 3,
            "https://github.com/matrix-org/synapse/pull/8943": 3,
            "https://github.com/matrix-org/synapse/pull/9020": 3,
            "https://github.com/matrix-org/synapse/pull/8881": 3,
            "https://github.com/matrix-org/synapse/pull/8905": 3,
            "https://github.com/matrix-org/synapse/pull/8906": 3,
            "https://github.com/matrix-org/synapse/pull/8909": 3,
            "https://github.com/matrix-org/synapse/pull/8916": 3,
            "https://github.com/matrix-org/synapse/pull/8935": 3,
            "https://github.com/matrix-org/synapse/pull/8929": 3,
            "https://github.com/matrix-org/synapse/pull/8946": 3,
            "https://github.com/matrix-org/synapse/pull/8952": 3,
            "https://github.com/matrix-org/synapse/pull/8963": 3,
            "https://github.com/matrix-org/synapse/pull/8973": 3,
            "https://github.com/matrix-org/synapse/pull/8976": 3,
            "https://github.com/matrix-org/synapse/pull/8979": 3,
            "https://github.com/matrix-org/synapse/pull/8980": 3,
            "https://github.com/matrix-org/synapse/pull/8986": 3,
            "https://github.com/matrix-org/synapse/pull/8998": 3,
            "https://github.com/matrix-org/synapse/pull/8999": 3,
            "https://github.com/matrix-org/synapse/releases/tag/v1.25.0": 2,
            "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/TNNAJOZNMVMXM6AS7RFFKB4QLUJ4IFEY/": 2,
            "https://endoflife.date/": 2,
            "https://endoflife.date/python": 2,
            "https://endoflife.date/postgresql": 2,
            "https://github.com/Bubu": 2,
            "https://github.com/fossterer": 2,
            "https://github.com/matrix-org/synapse/pull/9108": 1,
            "https://github.com/matrix-org/synapse/issues/9084": 1,
            "https://github.com/matrix-org/synapse/issues/8756": 1,
            "https://github.com/matrix-org/synapse/issues/8853": 1,
            "https://github.com/matrix-org/synapse/issues/8874": 1,
            "https://github.com/matrix-org/synapse/issues/8886": 1,
            "https://github.com/matrix-org/synapse/issues/8887": 1,
            "https://github.com/matrix-org/synapse/issues/8890": 1,
            "https://github.com/matrix-org/synapse/issues/8897": 1,
            "https://github.com/matrix-org/synapse/issues/8900": 1,
            "https://github.com/matrix-org/synapse/issues/8911": 1,
            "https://github.com/matrix-org/synapse/issues/8938": 1,
            "https://github.com/matrix-org/synapse/issues/8941": 1,
            "https://github.com/matrix-org/synapse/issues/8942": 1,
            "https://github.com/matrix-org/synapse/issues/8951": 1,
            "https://github.com/matrix-org/synapse/issues/8930": 1,
            "https://github.com/matrix-org/synapse/issues/8931": 1,
            "https://github.com/matrix-org/synapse/issues/8821": 1,
            "https://github.com/matrix-org/synapse/issues/8870": 1,
            "https://github.com/matrix-org/synapse/issues/8954": 1,
            "https://github.com/matrix-org/synapse/issues/8970": 1,
            "https://github.com/matrix-org/synapse/issues/8994": 1,
            "https://github.com/matrix-org/synapse/issues/8827": 1,
            "https://github.com/matrix-org/synapse/issues/8837": 1,
            "https://github.com/matrix-org/synapse/issues/8858": 1,
            "https://github.com/matrix-org/synapse/issues/8862": 1,
            "https://github.com/matrix-org/synapse/issues/8865": 1,
            "https://github.com/matrix-org/synapse/issues/8867": 1,
            "https://github.com/matrix-org/synapse/issues/8872": 1,
            "https://github.com/matrix-org/synapse/issues/8883": 1,
            "https://github.com/matrix-org/synapse/issues/8918": 1,
            "https://github.com/matrix-org/synapse/issues/8920": 1,
            "https://github.com/matrix-org/synapse/issues/8921": 1,
            "https://github.com/matrix-org/synapse/issues/8933": 1,
            "https://github.com/matrix-org/synapse/issues/8964": 1,
            "https://github.com/matrix-org/synapse/issues/8937": 1,
            "https://github.com/matrix-org/synapse/issues/8945": 1,
            "https://github.com/matrix-org/synapse/issues/8959": 1,
            "https://github.com/matrix-org/synapse/issues/8962": 1,
            "https://github.com/matrix-org/synapse/issues/8965": 1,
            "https://github.com/matrix-org/synapse/issues/8971": 1,
            "https://github.com/matrix-org/synapse/issues/8975": 1,
            "https://github.com/matrix-org/synapse/issues/8977": 1,
            "https://github.com/matrix-org/synapse/issues/8802": 1,
            "https://github.com/matrix-org/synapse/issues/8839": 1,
            "https://github.com/matrix-org/synapse/issues/8873": 1,
            "https://github.com/matrix-org/synapse/issues/8891": 1,
            "https://github.com/matrix-org/synapse/issues/8987": 1,
            "https://github.com/matrix-org/synapse/issues/8992": 1,
            "https://github.com/matrix-org/synapse/issues/9002": 1,
            "https://github.com/matrix-org/synapse/issues/8829": 1,
            "https://github.com/matrix-org/synapse/issues/8856": 1,
            "https://github.com/matrix-org/synapse/issues/8958": 1,
            "https://github.com/matrix-org/synapse/issues/8861": 1,
            "https://github.com/matrix-org/synapse/issues/8864": 1,
            "https://github.com/matrix-org/synapse/issues/8879": 1,
            "https://github.com/matrix-org/synapse/issues/8880": 1,
            "https://github.com/matrix-org/synapse/issues/8882": 1,
            "https://github.com/matrix-org/synapse/issues/8901": 1,
            "https://github.com/matrix-org/synapse/issues/8940": 1,
            "https://github.com/matrix-org/synapse/issues/8943": 1,
            "https://github.com/matrix-org/synapse/issues/9020": 1,
            "https://github.com/matrix-org/synapse/issues/8881": 1,
            "https://github.com/matrix-org/synapse/issues/8905": 1,
            "https://github.com/matrix-org/synapse/issues/8906": 1,
            "https://github.com/matrix-org/synapse/issues/8909": 1,
            "https://github.com/matrix-org/synapse/issues/8916": 1,
            "https://github.com/matrix-org/synapse/issues/8935": 1,
            "https://github.com/matrix-org/synapse/issues/8929": 1,
            "https://github.com/matrix-org/synapse/issues/8946": 1,
            "https://github.com/matrix-org/synapse/issues/8950": 1,
            "https://github.com/matrix-org/synapse/issues/8952": 1,
            "https://github.com/matrix-org/synapse/issues/8963": 1,
            "https://github.com/matrix-org/synapse/issues/8973": 1,
            "https://github.com/matrix-org/synapse/issues/8976": 1,
            "https://github.com/matrix-org/synapse/issues/8979": 1,
            "https://github.com/matrix-org/synapse/issues/8980": 1,
            "https://github.com/matrix-org/synapse/issues/8986": 1,
            "https://github.com/matrix-org/synapse/issues/8998": 1,
            "https://github.com/matrix-org/synapse/issues/8999": 1,
            "https://github.co/hiddenchars": 1,
            "https://github.com/matrix-org/synapse/pull/8950#event-4122091867": 1,
            "https://github.com/matrix-org/synapse/pull/9084": 1,
            "https://pagure.io/fedora-infrastructure/issue/12043": 1,
            "https://github.com/matrix-org/synapse": 1,
            "https://github.com/matrix-": 1,
            "https://fedoraproject.org/wiki/Fedora_35_Mass_Rebuild": 1,
            "https://pagure.io/fesco/issue/2583": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1910740": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1918426": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1934603": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1934606": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1944136": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1944139": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1949110": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1949112": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1958801": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1959542": 1,
            "http://dnf.readthedocs.io/en/latest/command_ref.html#upgrade-command-label": 1,
            "https://fedoraproject.org/keys": 1,
            "http://hyperkitty.readthedocs.org": 1
        },
        "affected_products": [
            "Messaging",
            "python",
            "synapse",
            "VoIP",
            "Instant",
            "Matrix"
        ],
        "versions": {
            "status": "affected",
            "version": ">=0.99.0, < 1.25.0"
        },
        "files": [
            "well-known",
            "VoIP",
            "federation_domain_whitelist",
            "matrix-synapse"
        ],
        "keywords": [
            "redirect",
            "federate",
            "service",
            "request",
            "synapse",
            "messaging",
            "federation",
            "setting",
            "denial",
            "know",
            "resource",
            "issue",
            "python",
            "matrix",
            "file",
            "lead",
            "write",
            "attack",
            "version",
            "ecosystem",
            "pypi",
            "voip",
            "restrict",
            "homeserver",
            "consume",
            "workaround",
            "instant",
            "reference",
            "accept",
            "package",
            "affect",
            "resolve",
            "server",
            "communicate"
        ],
        "files_extension": [],
        "has_fixing_commit": true
    },
    "commits": [
        {
            "commit_id": "ff5c4da1289cb5e097902b3e55b771be342c29d6",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608157524,
            "hunks": 23,
            "message": "Add a maximum size for well-known lookups. (#8950)",
            "diff": [
                "diff --git a/changelog.d/8950.misc b/changelog.d/8950.misc",
                "new file mode 100644",
                "index 000000000..42e0335af",
                "--- /dev/null",
                "+++ b/changelog.d/8950.misc",
                "@@ -0,0 +1 @@",
                "+Add a maximum size of 50 kilobytes to .well-known lookups.",
                "diff --git a/synapse/http/client.py b/synapse/http/client.py",
                "index df7730078..29f40ddf5 100644",
                "--- a/synapse/http/client.py",
                "+++ b/synapse/http/client.py",
                "@@ -722,7 +722,10 @@ class SimpleHttpClient:",
                "             length = await make_deferred_yieldable(",
                "-                readBodyToFile(response, output_stream, max_size)",
                "+                read_body_with_max_size(response, output_stream, max_size)",
                "+            )",
                "+        except BodyExceededMaxSize:",
                "+            SynapseError(",
                "+                502,",
                "+                \"Requested file is too large > %r bytes\" % (max_size,),",
                "+                Codes.TOO_LARGE,",
                "             )",
                "-        except SynapseError:",
                "-            # This can happen e.g. because the body is too large.",
                "-            raise",
                "         except Exception as e:",
                "@@ -750,3 +753,7 @@ def _timeout_to_request_timed_out_error(f: Failure):",
                "-class _ReadBodyToFileProtocol(protocol.Protocol):",
                "+class BodyExceededMaxSize(Exception):",
                "+    \"\"\"The maximum allowed size of the HTTP body was exceeded.\"\"\"",
                "+",
                "+",
                "+class _ReadBodyWithMaxSizeProtocol(protocol.Protocol):",
                "     def __init__(",
                "@@ -763,9 +770,3 @@ class _ReadBodyToFileProtocol(protocol.Protocol):",
                "         if self.max_size is not None and self.length >= self.max_size:",
                "-            self.deferred.errback(",
                "-                SynapseError(",
                "-                    502,",
                "-                    \"Requested file is too large > %r bytes\" % (self.max_size,),",
                "-                    Codes.TOO_LARGE,",
                "-                )",
                "-            )",
                "+            self.deferred.errback(BodyExceededMaxSize())",
                "             self.deferred = defer.Deferred()",
                "@@ -784,3 +785,3 @@ class _ReadBodyToFileProtocol(protocol.Protocol):",
                "-def readBodyToFile(",
                "+def read_body_with_max_size(",
                "     response: IResponse, stream: BinaryIO, max_size: Optional[int]",
                "@@ -790,2 +791,5 @@ def readBodyToFile(",
                "+    If the maximum file size is reached, the returned Deferred will resolve to a",
                "+    Failure with a BodyExceededMaxSize exception.",
                "+",
                "     Args:",
                "@@ -800,3 +804,3 @@ def readBodyToFile(",
                "     d = defer.Deferred()",
                "-    response.deliverBody(_ReadBodyToFileProtocol(stream, d, max_size))",
                "+    response.deliverBody(_ReadBodyWithMaxSizeProtocol(stream, d, max_size))",
                "     return d",
                "diff --git a/synapse/http/federation/well_known_resolver.py b/synapse/http/federation/well_known_resolver.py",
                "index 5e08ef166..b3b6dbcab 100644",
                "--- a/synapse/http/federation/well_known_resolver.py",
                "+++ b/synapse/http/federation/well_known_resolver.py",
                "@@ -17,2 +17,3 @@ import random",
                " import time",
                "+from io import BytesIO",
                " from typing import Callable, Dict, Optional, Tuple",
                "@@ -23,3 +24,3 @@ from twisted.internet import defer",
                " from twisted.internet.interfaces import IReactorTime",
                "-from twisted.web.client import RedirectAgent, readBody",
                "+from twisted.web.client import RedirectAgent",
                " from twisted.web.http import stringToDatetime",
                "@@ -28,2 +29,3 @@ from twisted.web.iweb import IAgent, IResponse",
                "+from synapse.http.client import BodyExceededMaxSize, read_body_with_max_size",
                " from synapse.logging.context import make_deferred_yieldable",
                "@@ -55,2 +57,5 @@ WELL_KNOWN_MIN_CACHE_PERIOD = 5 * 60",
                "+# The maximum size (in bytes) to allow a well-known file to be.",
                "+WELL_KNOWN_MAX_SIZE = 50 * 1024  # 50 KiB",
                "+",
                " # Attempt to refetch a cached well-known N% of the TTL before it expires.",
                "@@ -231,2 +236,5 @@ class WellKnownResolver:",
                "+        Raises:",
                "+            _FetchWellKnownFailure if we fail to lookup a result",
                "+",
                "         Returns:",
                "@@ -252,3 +260,7 @@ class WellKnownResolver:",
                "                 )",
                "-                body = await make_deferred_yieldable(readBody(response))",
                "+                body_stream = BytesIO()",
                "+                await make_deferred_yieldable(",
                "+                    read_body_with_max_size(response, body_stream, WELL_KNOWN_MAX_SIZE)",
                "+                )",
                "+                body = body_stream.getvalue()",
                "@@ -261,2 +273,11 @@ class WellKnownResolver:",
                "                 raise",
                "+            except BodyExceededMaxSize:",
                "+                # If the well-known file was too large, do not keep attempting",
                "+                # to download it, but consider it a temporary error.",
                "+                logger.warning(",
                "+                    \"Requested .well-known file for %s is too large > %r bytes\",",
                "+                    server_name.decode(\"ascii\"),",
                "+                    WELL_KNOWN_MAX_SIZE,",
                "+                )",
                "+                raise _FetchWellKnownFailure(temporary=True)",
                "             except Exception as e:",
                "diff --git a/synapse/http/matrixfederationclient.py b/synapse/http/matrixfederationclient.py",
                "index c96299472..b261e078c 100644",
                "--- a/synapse/http/matrixfederationclient.py",
                "+++ b/synapse/http/matrixfederationclient.py",
                "@@ -39,2 +39,3 @@ import synapse.util.retryutils",
                " from synapse.api.errors import (",
                "+    Codes,",
                "     FederationDeniedError,",
                "@@ -42,2 +43,3 @@ from synapse.api.errors import (",
                "     RequestSendFailed,",
                "+    SynapseError,",
                " )",
                "@@ -47,4 +49,5 @@ from synapse.http.client import (",
                "     BlacklistingReactorWrapper,",
                "+    BodyExceededMaxSize,",
                "     encode_query_args,",
                "-    readBodyToFile,",
                "+    read_body_with_max_size,",
                " )",
                "@@ -977,5 +980,11 @@ class MatrixFederationHttpClient:",
                "         try:",
                "-            d = readBodyToFile(response, output_stream, max_size)",
                "+            d = read_body_with_max_size(response, output_stream, max_size)",
                "             d.addTimeout(self.default_timeout, self.reactor)",
                "             length = await make_deferred_yieldable(d)",
                "+        except BodyExceededMaxSize:",
                "+            msg = \"Requested file is too large > %r bytes\" % (max_size,)",
                "+            logger.warning(",
                "+                \"{%s} [%s] %s\", request.txn_id, request.destination, msg,",
                "+            )",
                "+            SynapseError(502, msg, Codes.TOO_LARGE)",
                "         except Exception as e:",
                "diff --git a/tests/http/federation/test_matrix_federation_agent.py b/tests/http/federation/test_matrix_federation_agent.py",
                "index 626acdcaa..4e51839d0 100644",
                "--- a/tests/http/federation/test_matrix_federation_agent.py",
                "+++ b/tests/http/federation/test_matrix_federation_agent.py",
                "@@ -38,2 +38,3 @@ from synapse.http.federation.srv_resolver import Server",
                " from synapse.http.federation.well_known_resolver import (",
                "+    WELL_KNOWN_MAX_SIZE,",
                "     WellKnownResolver,",
                "@@ -1109,2 +1110,28 @@ class MatrixFederationAgentTests(unittest.TestCase):",
                "+    def test_well_known_too_large(self):",
                "+        \"\"\"A well-known query that returns a result which is too large should be rejected.\"\"\"",
                "+        self.reactor.lookups[\"testserv\"] = \"1.2.3.4\"",
                "+",
                "+        fetch_d = defer.ensureDeferred(",
                "+            self.well_known_resolver.get_well_known(b\"testserv\")",
                "+        )",
                "+",
                "+        # there should be an attempt to connect on port 443 for the .well-known",
                "+        clients = self.reactor.tcpClients",
                "+        self.assertEqual(len(clients), 1)",
                "+        (host, port, client_factory, _timeout, _bindAddress) = clients.pop(0)",
                "+        self.assertEqual(host, \"1.2.3.4\")",
                "+        self.assertEqual(port, 443)",
                "+",
                "+        self._handle_well_known_connection(",
                "+            client_factory,",
                "+            expected_sni=b\"testserv\",",
                "+            response_headers={b\"Cache-Control\": b\"max-age=1000\"},",
                "+            content=b'{ \"m.server\": \"' + (b\"a\" * WELL_KNOWN_MAX_SIZE) + b'\" }',",
                "+        )",
                "+",
                "+        # The result is sucessful, but disabled delegation.",
                "+        r = self.successResultOf(fetch_d)",
                "+        self.assertIsNone(r.delegated_server)",
                "+",
                "     def test_srv_fallbacks(self):"
            ],
            "changed_files": [
                "changelog.d/8950.misc",
                "synapse/http/client.py",
                "synapse/http/federation/well_known_resolver.py",
                "synapse/http/matrixfederationclient.py",
                "tests/http/federation/test_matrix_federation_agent.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8950": "UnboundLocalError raised when response body exceeds max size #9132 MSC2499: Fixes for Well-known URIs matrix-org/matrix-spec-proposals#2499"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IS_SECURITY_RELEVANT",
                    "message": "",
                    "relevance": 32
                },
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8950, 8950",
                    "relevance": 32
                },
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 7 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "RELEVANT_WORDS_IN_MESSAGE",
                    "message": "The commit message contains some relevant words: well-known",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: well-known",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: know",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resolve, federation, know",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8950",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "344ab0b53abc0291d79882f8bdc1a853f7495ed4",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607540166,
            "hunks": 27,
            "message": "Default to blacklisting reserved IP ranges and add a whitelist. (#8870) This defaults `ip_range_blacklist` to reserved IP ranges and also adds an `ip_range_whitelist` setting to override it.",
            "diff": [
                "diff --git a/changelog.d/8821.bugfix b/changelog.d/8821.bugfix",
                "index 8ddfbf31c..39f53174a 100644",
                "--- a/changelog.d/8821.bugfix",
                "+++ b/changelog.d/8821.bugfix",
                "@@ -1 +1 @@",
                "-Apply the `federation_ip_range_blacklist` to push and key revocation requests.",
                "+Apply an IP range blacklist to push and key revocation requests.",
                "diff --git a/changelog.d/8870.bugfix b/changelog.d/8870.bugfix",
                "new file mode 100644",
                "index 000000000..39f53174a",
                "--- /dev/null",
                "+++ b/changelog.d/8870.bugfix",
                "@@ -0,0 +1 @@",
                "+Apply an IP range blacklist to push and key revocation requests.",
                "diff --git a/docs/sample_config.yaml b/docs/sample_config.yaml",
                "index 68c8f4f0e..f196781c1 100644",
                "--- a/docs/sample_config.yaml",
                "+++ b/docs/sample_config.yaml",
                "@@ -146,2 +146,31 @@ pid_file: DATADIR/homeserver.pid",
                "+# Prevent outgoing requests from being sent to the following blacklisted IP address",
                "+# CIDR ranges. If this option is not specified then it defaults to private IP",
                "+# address ranges (see the example below).",
                "+#",
                "+# The blacklist applies to the outbound requests for federation, identity servers,",
                "+# push servers, and for checking key validity for third-party invite events.",
                "+#",
                "+# (0.0.0.0 and :: are always blacklisted, whether or not they are explicitly",
                "+# listed here, since they correspond to unroutable addresses.)",
                "+#",
                "+# This option replaces federation_ip_range_blacklist in Synapse v1.25.0.",
                "+#",
                "+#ip_range_blacklist:",
                "+#  - '127.0.0.0/8'",
                "+#  - '10.0.0.0/8'",
                "+#  - '172.16.0.0/12'",
                "+#  - '192.168.0.0/16'",
                "+#  - '100.64.0.0/10'",
                "+#  - '192.0.0.0/24'",
                "+#  - '169.254.0.0/16'",
                "+#  - '198.18.0.0/15'",
                "+#  - '192.0.2.0/24'",
                "+#  - '198.51.100.0/24'",
                "+#  - '203.0.113.0/24'",
                "+#  - '224.0.0.0/4'",
                "+#  - '::1/128'",
                "+#  - 'fe80::/10'",
                "+#  - 'fc00::/7'",
                "+",
                " # List of ports that Synapse should listen on, their purpose and their",
                "@@ -644,24 +673,13 @@ acme:",
                "-# Prevent outgoing requests from being sent to the following blacklisted IP address",
                "-# CIDR ranges. If this option is not specified, or specified with an empty list,",
                "-# no IP range blacklist will be enforced.",
                "+# List of IP address CIDR ranges that should be allowed for federation,",
                "+# identity servers, push servers, and for checking key validity for",
                "+# third-party invite events. This is useful for specifying exceptions to",
                "+# wide-ranging blacklisted target IP ranges - e.g. for communication with",
                "+# a push server only visible in your network.",
                " #",
                "-# The blacklist applies to the outbound requests for federation, identity servers,",
                "-# push servers, and for checking key validitity for third-party invite events.",
                "-#",
                "-# (0.0.0.0 and :: are always blacklisted, whether or not they are explicitly",
                "-# listed here, since they correspond to unroutable addresses.)",
                "-#",
                "-# This option replaces federation_ip_range_blacklist in Synapse v1.24.0.",
                "+# This whitelist overrides ip_range_blacklist and defaults to an empty",
                "+# list.",
                " #",
                "-ip_range_blacklist:",
                "-  - '127.0.0.0/8'",
                "-  - '10.0.0.0/8'",
                "-  - '172.16.0.0/12'",
                "-  - '192.168.0.0/16'",
                "-  - '100.64.0.0/10'",
                "-  - '169.254.0.0/16'",
                "-  - '::1/128'",
                "-  - 'fe80::/64'",
                "-  - 'fc00::/7'",
                "+#ip_range_whitelist:",
                "+#   - '192.168.1.1'",
                "@@ -957,5 +975,11 @@ media_store_path: \"DATADIR/media_store\"",
                " #  - '100.64.0.0/10'",
                "+#  - '192.0.0.0/24'",
                " #  - '169.254.0.0/16'",
                "+#  - '198.18.0.0/15'",
                "+#  - '192.0.2.0/24'",
                "+#  - '198.51.100.0/24'",
                "+#  - '203.0.113.0/24'",
                "+#  - '224.0.0.0/4'",
                " #  - '::1/128'",
                "-#  - 'fe80::/64'",
                "+#  - 'fe80::/10'",
                " #  - 'fc00::/7'",
                "diff --git a/synapse/config/federation.py b/synapse/config/federation.py",
                "index 27ccf61c3..a03a419e2 100644",
                "--- a/synapse/config/federation.py",
                "+++ b/synapse/config/federation.py",
                "@@ -14,8 +14,5 @@",
                " # limitations under the License.",
                "-",
                " from typing import Optional",
                "-from netaddr import IPSet",
                "-",
                "-from synapse.config._base import Config, ConfigError",
                "+from synapse.config._base import Config",
                " from synapse.config._util import validate_config",
                "@@ -38,27 +35,2 @@ class FederationConfig(Config):",
                "-        ip_range_blacklist = config.get(\"ip_range_blacklist\", [])",
                "-",
                "-        # Attempt to create an IPSet from the given ranges",
                "-        try:",
                "-            self.ip_range_blacklist = IPSet(ip_range_blacklist)",
                "-        except Exception as e:",
                "-            raise ConfigError(\"Invalid range(s) provided in ip_range_blacklist: %s\" % e)",
                "-        # Always blacklist 0.0.0.0, ::",
                "-        self.ip_range_blacklist.update([\"0.0.0.0\", \"::\"])",
                "-",
                "-        # The federation_ip_range_blacklist is used for backwards-compatibility",
                "-        # and only applies to federation and identity servers. If it is not given,",
                "-        # default to ip_range_blacklist.",
                "-        federation_ip_range_blacklist = config.get(",
                "-            \"federation_ip_range_blacklist\", ip_range_blacklist",
                "-        )",
                "-        try:",
                "-            self.federation_ip_range_blacklist = IPSet(federation_ip_range_blacklist)",
                "-        except Exception as e:",
                "-            raise ConfigError(",
                "-                \"Invalid range(s) provided in federation_ip_range_blacklist: %s\" % e",
                "-            )",
                "-        # Always blacklist 0.0.0.0, ::",
                "-        self.federation_ip_range_blacklist.update([\"0.0.0.0\", \"::\"])",
                "-",
                "         federation_metrics_domains = config.get(\"federation_metrics_domains\") or []",
                "@@ -86,24 +58,13 @@ class FederationConfig(Config):",
                "-        # Prevent outgoing requests from being sent to the following blacklisted IP address",
                "-        # CIDR ranges. If this option is not specified, or specified with an empty list,",
                "-        # no IP range blacklist will be enforced.",
                "-        #",
                "-        # The blacklist applies to the outbound requests for federation, identity servers,",
                "-        # push servers, and for checking key validitity for third-party invite events.",
                "-        #",
                "-        # (0.0.0.0 and :: are always blacklisted, whether or not they are explicitly",
                "-        # listed here, since they correspond to unroutable addresses.)",
                "+        # List of IP address CIDR ranges that should be allowed for federation,",
                "+        # identity servers, push servers, and for checking key validity for",
                "+        # third-party invite events. This is useful for specifying exceptions to",
                "+        # wide-ranging blacklisted target IP ranges - e.g. for communication with",
                "+        # a push server only visible in your network.",
                "         #",
                "-        # This option replaces federation_ip_range_blacklist in Synapse v1.24.0.",
                "+        # This whitelist overrides ip_range_blacklist and defaults to an empty",
                "+        # list.",
                "         #",
                "-        ip_range_blacklist:",
                "-          - '127.0.0.0/8'",
                "-          - '10.0.0.0/8'",
                "-          - '172.16.0.0/12'",
                "-          - '192.168.0.0/16'",
                "-          - '100.64.0.0/10'",
                "-          - '169.254.0.0/16'",
                "-          - '::1/128'",
                "-          - 'fe80::/64'",
                "-          - 'fc00::/7'",
                "+        #ip_range_whitelist:",
                "+        #   - '192.168.1.1'",
                "diff --git a/synapse/config/repository.py b/synapse/config/repository.py",
                "index 17ce9145e..850ac3ebd 100644",
                "--- a/synapse/config/repository.py",
                "+++ b/synapse/config/repository.py",
                "@@ -19,2 +19,5 @@ from typing import Dict, List",
                "+from netaddr import IPSet",
                "+",
                "+from synapse.config.server import DEFAULT_IP_RANGE_BLACKLIST",
                " from synapse.python_dependencies import DependencyException, check_requirements",
                "@@ -186,5 +189,2 @@ class ContentRepositoryConfig(Config):",
                "-            # netaddr is a dependency for url_preview",
                "-            from netaddr import IPSet",
                "-",
                "             self.url_preview_ip_range_blacklist = IPSet(",
                "@@ -217,2 +217,6 @@ class ContentRepositoryConfig(Config):",
                "+        ip_range_blacklist = \"\\n\".join(",
                "+            \"        #  - '%s'\" % ip for ip in DEFAULT_IP_RANGE_BLACKLIST",
                "+        )",
                "+",
                "         return (",
                "@@ -287,11 +291,3 @@ class ContentRepositoryConfig(Config):",
                "         #url_preview_ip_range_blacklist:",
                "-        #  - '127.0.0.0/8'",
                "-        #  - '10.0.0.0/8'",
                "-        #  - '172.16.0.0/12'",
                "-        #  - '192.168.0.0/16'",
                "-        #  - '100.64.0.0/10'",
                "-        #  - '169.254.0.0/16'",
                "-        #  - '::1/128'",
                "-        #  - 'fe80::/64'",
                "-        #  - 'fc00::/7'",
                "+%(ip_range_blacklist)s",
                "diff --git a/synapse/config/server.py b/synapse/config/server.py",
                "index 85aa49c02..f3815e5ad 100644",
                "--- a/synapse/config/server.py",
                "+++ b/synapse/config/server.py",
                "@@ -25,2 +25,3 @@ import attr",
                " import yaml",
                "+from netaddr import IPSet",
                "@@ -41,2 +42,30 @@ DEFAULT_BIND_ADDRESSES = [\"::\", \"0.0.0.0\"]",
                "+DEFAULT_IP_RANGE_BLACKLIST = [",
                "+    # Localhost",
                "+    \"127.0.0.0/8\",",
                "+    # Private networks.",
                "+    \"10.0.0.0/8\",",
                "+    \"172.16.0.0/12\",",
                "+    \"192.168.0.0/16\",",
                "+    # Carrier grade NAT.",
                "+    \"100.64.0.0/10\",",
                "+    # Address registry.",
                "+    \"192.0.0.0/24\",",
                "+    # Link-local networks.",
                "+    \"169.254.0.0/16\",",
                "+    # Testing networks.",
                "+    \"198.18.0.0/15\",",
                "+    \"192.0.2.0/24\",",
                "+    \"198.51.100.0/24\",",
                "+    \"203.0.113.0/24\",",
                "+    # Multicast.",
                "+    \"224.0.0.0/4\",",
                "+    # Localhost",
                "+    \"::1/128\",",
                "+    # Link-local addresses.",
                "+    \"fe80::/10\",",
                "+    # Unique local addresses.",
                "+    \"fc00::/7\",",
                "+]",
                "+",
                " DEFAULT_ROOM_VERSION = \"6\"",
                "@@ -258,2 +287,34 @@ class ServerConfig(Config):",
                "+        ip_range_blacklist = config.get(",
                "+            \"ip_range_blacklist\", DEFAULT_IP_RANGE_BLACKLIST",
                "+        )",
                "+",
                "+        # Attempt to create an IPSet from the given ranges",
                "+        try:",
                "+            self.ip_range_blacklist = IPSet(ip_range_blacklist)",
                "+        except Exception as e:",
                "+            raise ConfigError(\"Invalid range(s) provided in ip_range_blacklist.\") from e",
                "+        # Always blacklist 0.0.0.0, ::",
                "+        self.ip_range_blacklist.update([\"0.0.0.0\", \"::\"])",
                "+",
                "+        try:",
                "+            self.ip_range_whitelist = IPSet(config.get(\"ip_range_whitelist\", ()))",
                "+        except Exception as e:",
                "+            raise ConfigError(\"Invalid range(s) provided in ip_range_whitelist.\") from e",
                "+",
                "+        # The federation_ip_range_blacklist is used for backwards-compatibility",
                "+        # and only applies to federation and identity servers. If it is not given,",
                "+        # default to ip_range_blacklist.",
                "+        federation_ip_range_blacklist = config.get(",
                "+            \"federation_ip_range_blacklist\", ip_range_blacklist",
                "+        )",
                "+        try:",
                "+            self.federation_ip_range_blacklist = IPSet(federation_ip_range_blacklist)",
                "+        except Exception as e:",
                "+            raise ConfigError(",
                "+                \"Invalid range(s) provided in federation_ip_range_blacklist.\"",
                "+            ) from e",
                "+        # Always blacklist 0.0.0.0, ::",
                "+        self.federation_ip_range_blacklist.update([\"0.0.0.0\", \"::\"])",
                "+",
                "         if self.public_baseurl is not None:",
                "@@ -563,2 +624,6 @@ class ServerConfig(Config):",
                "     ):",
                "+        ip_range_blacklist = \"\\n\".join(",
                "+            \"        #  - '%s'\" % ip for ip in DEFAULT_IP_RANGE_BLACKLIST",
                "+        )",
                "+",
                "         _, bind_port = parse_and_validate_server_name(server_name)",
                "@@ -754,2 +819,17 @@ class ServerConfig(Config):",
                "+        # Prevent outgoing requests from being sent to the following blacklisted IP address",
                "+        # CIDR ranges. If this option is not specified then it defaults to private IP",
                "+        # address ranges (see the example below).",
                "+        #",
                "+        # The blacklist applies to the outbound requests for federation, identity servers,",
                "+        # push servers, and for checking key validity for third-party invite events.",
                "+        #",
                "+        # (0.0.0.0 and :: are always blacklisted, whether or not they are explicitly",
                "+        # listed here, since they correspond to unroutable addresses.)",
                "+        #",
                "+        # This option replaces federation_ip_range_blacklist in Synapse v1.25.0.",
                "+        #",
                "+        #ip_range_blacklist:",
                "+%(ip_range_blacklist)s",
                "+",
                "         # List of ports that Synapse should listen on, their purpose and their",
                "diff --git a/synapse/server.py b/synapse/server.py",
                "index 9af759626..043810ad3 100644",
                "--- a/synapse/server.py",
                "+++ b/synapse/server.py",
                "@@ -372,3 +372,3 @@ class HomeServer(metaclass=abc.ABCMeta):",
                "         An HTTP client that uses configured HTTP(S) proxies and blacklists IPs",
                "-        based on the IP range blacklist.",
                "+        based on the IP range blacklist/whitelist.",
                "         \"\"\"",
                "@@ -376,2 +376,3 @@ class HomeServer(metaclass=abc.ABCMeta):",
                "             self,",
                "+            ip_whitelist=self.config.ip_range_whitelist,",
                "             ip_blacklist=self.config.ip_range_blacklist,",
                "diff --git a/tests/replication/test_multi_media_repo.py b/tests/replication/test_multi_media_repo.py",
                "index 48b574ccb..83afd9fd2 100644",
                "--- a/tests/replication/test_multi_media_repo.py",
                "+++ b/tests/replication/test_multi_media_repo.py",
                "@@ -50,3 +50,3 @@ class MediaRepoShardTestCase(BaseMultiWorkerStreamTestCase):",
                "-        self.reactor.lookups[\"example.com\"] = \"127.0.0.2\"",
                "+        self.reactor.lookups[\"example.com\"] = \"1.2.3.4\""
            ],
            "changed_files": [
                "changelog.d/8821.bugfix",
                "changelog.d/8870.bugfix",
                "docs/sample_config.yaml",
                "synapse/config/federation.py",
                "synapse/config/repository.py",
                "synapse/config/server.py",
                "synapse/server.py",
                "tests/replication/test_multi_media_repo.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8870": "Use an empty ip_range_blacklist to allow connecting to localhost. matrix-org/sytest#987 Fix the sample config location for the ip_range_whitelist setting. #8954 don't apply blacklist to proxy connections #9084 Convert blacklisted IPv4 addresses to compatible IPv6 addresses. #9240"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IS_SECURITY_RELEVANT",
                    "message": "",
                    "relevance": 32
                },
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8870, 8870",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: setting",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server, federation",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8870",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "44b7d4c6d6d5e8d78bd0154b407defea4a35aebd",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608147647,
            "hunks": 5,
            "message": "Fix the sample config location for the ip_range_whitelist setting. (#8954) Move it from the federation section to the server section to match ip_range_blacklist.",
            "diff": [
                "diff --git a/changelog.d/8954.feature b/changelog.d/8954.feature",
                "new file mode 100644",
                "index 000000000..39f53174a",
                "--- /dev/null",
                "+++ b/changelog.d/8954.feature",
                "@@ -0,0 +1 @@",
                "+Apply an IP range blacklist to push and key revocation requests.",
                "diff --git a/docs/sample_config.yaml b/docs/sample_config.yaml",
                "index f196781c1..75a01094d 100644",
                "--- a/docs/sample_config.yaml",
                "+++ b/docs/sample_config.yaml",
                "@@ -175,2 +175,14 @@ pid_file: DATADIR/homeserver.pid",
                "+# List of IP address CIDR ranges that should be allowed for federation,",
                "+# identity servers, push servers, and for checking key validity for",
                "+# third-party invite events. This is useful for specifying exceptions to",
                "+# wide-ranging blacklisted target IP ranges - e.g. for communication with",
                "+# a push server only visible in your network.",
                "+#",
                "+# This whitelist overrides ip_range_blacklist and defaults to an empty",
                "+# list.",
                "+#",
                "+#ip_range_whitelist:",
                "+#   - '192.168.1.1'",
                "+",
                " # List of ports that Synapse should listen on, their purpose and their",
                "@@ -673,14 +685,2 @@ acme:",
                "-# List of IP address CIDR ranges that should be allowed for federation,",
                "-# identity servers, push servers, and for checking key validity for",
                "-# third-party invite events. This is useful for specifying exceptions to",
                "-# wide-ranging blacklisted target IP ranges - e.g. for communication with",
                "-# a push server only visible in your network.",
                "-#",
                "-# This whitelist overrides ip_range_blacklist and defaults to an empty",
                "-# list.",
                "-#",
                "-#ip_range_whitelist:",
                "-#   - '192.168.1.1'",
                "-",
                " # Report prometheus metrics on the age of PDUs being sent to and received from",
                "diff --git a/synapse/config/federation.py b/synapse/config/federation.py",
                "index a03a419e2..9f3c57e6a 100644",
                "--- a/synapse/config/federation.py",
                "+++ b/synapse/config/federation.py",
                "@@ -58,14 +58,2 @@ class FederationConfig(Config):",
                "-        # List of IP address CIDR ranges that should be allowed for federation,",
                "-        # identity servers, push servers, and for checking key validity for",
                "-        # third-party invite events. This is useful for specifying exceptions to",
                "-        # wide-ranging blacklisted target IP ranges - e.g. for communication with",
                "-        # a push server only visible in your network.",
                "-        #",
                "-        # This whitelist overrides ip_range_blacklist and defaults to an empty",
                "-        # list.",
                "-        #",
                "-        #ip_range_whitelist:",
                "-        #   - '192.168.1.1'",
                "-",
                "         # Report prometheus metrics on the age of PDUs being sent to and received from",
                "diff --git a/synapse/config/server.py b/synapse/config/server.py",
                "index f3815e5ad..7242a4aa8 100644",
                "--- a/synapse/config/server.py",
                "+++ b/synapse/config/server.py",
                "@@ -834,2 +834,14 @@ class ServerConfig(Config):",
                "+        # List of IP address CIDR ranges that should be allowed for federation,",
                "+        # identity servers, push servers, and for checking key validity for",
                "+        # third-party invite events. This is useful for specifying exceptions to",
                "+        # wide-ranging blacklisted target IP ranges - e.g. for communication with",
                "+        # a push server only visible in your network.",
                "+        #",
                "+        # This whitelist overrides ip_range_blacklist and defaults to an empty",
                "+        # list.",
                "+        #",
                "+        #ip_range_whitelist:",
                "+        #   - '192.168.1.1'",
                "+",
                "         # List of ports that Synapse should listen on, their purpose and their"
            ],
            "changed_files": [
                "changelog.d/8954.feature",
                "docs/sample_config.yaml",
                "synapse/config/federation.py",
                "synapse/config/server.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8954": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IS_SECURITY_RELEVANT",
                    "message": "",
                    "relevance": 32
                },
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8954, 8954",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: server, setting, federation",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server, federation",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8954",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a8eceb01e59fcbddcea7d19031ed2392772e6d66",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607704411,
            "hunks": 20,
            "message": "Honour AS ratelimit settings for /login requests  (#8920) Fixes #8846.",
            "diff": [
                "diff --git a/changelog.d/8920.bugfix b/changelog.d/8920.bugfix",
                "new file mode 100644",
                "index 000000000..abcf186bd",
                "--- /dev/null",
                "+++ b/changelog.d/8920.bugfix",
                "@@ -0,0 +1 @@",
                "+Fix login API to not ratelimit application services that have ratelimiting disabled.",
                "diff --git a/synapse/api/auth.py b/synapse/api/auth.py",
                "index bfcaf68b2..1951f6e17 100644",
                "--- a/synapse/api/auth.py",
                "+++ b/synapse/api/auth.py",
                "@@ -33,3 +33,5 @@ from synapse.api.errors import (",
                " from synapse.api.room_versions import KNOWN_ROOM_VERSIONS",
                "+from synapse.appservice import ApplicationService",
                " from synapse.events import EventBase",
                "+from synapse.http.site import SynapseRequest",
                " from synapse.logging import opentracing as opentracing",
                "@@ -476,3 +478,3 @@ class Auth:",
                "-    def get_appservice_by_req(self, request):",
                "+    def get_appservice_by_req(self, request: SynapseRequest) -> ApplicationService:",
                "         token = self.get_access_token_from_request(request)",
                "diff --git a/synapse/handlers/auth.py b/synapse/handlers/auth.py",
                "index afae6d327..62f98dabc 100644",
                "--- a/synapse/handlers/auth.py",
                "+++ b/synapse/handlers/auth.py",
                "@@ -24,2 +24,3 @@ from typing import (",
                "     Any,",
                "+    Awaitable,",
                "     Callable,",
                "@@ -863,3 +864,3 @@ class AuthHandler(BaseHandler):",
                "         self, login_submission: Dict[str, Any], ratelimit: bool = False,",
                "-    ) -> Tuple[str, Optional[Callable[[Dict[str, str]], None]]]:",
                "+    ) -> Tuple[str, Optional[Callable[[Dict[str, str]], Awaitable[None]]]]:",
                "         \"\"\"Authenticates the user for the /login API",
                "@@ -1006,3 +1007,3 @@ class AuthHandler(BaseHandler):",
                "         self, username: str, login_submission: Dict[str, Any],",
                "-    ) -> Tuple[str, Optional[Callable[[Dict[str, str]], None]]]:",
                "+    ) -> Tuple[str, Optional[Callable[[Dict[str, str]], Awaitable[None]]]]:",
                "         \"\"\"Helper for validate_login",
                "@@ -1084,3 +1085,3 @@ class AuthHandler(BaseHandler):",
                "         self, medium: str, address: str, password: str",
                "-    ) -> Tuple[Optional[str], Optional[Callable[[Dict[str, str]], None]]]:",
                "+    ) -> Tuple[Optional[str], Optional[Callable[[Dict[str, str]], Awaitable[None]]]]:",
                "         \"\"\"Check if a password provider is able to validate a thirdparty login",
                "diff --git a/synapse/rest/client/v1/login.py b/synapse/rest/client/v1/login.py",
                "index d7ae14821..5f4c6703d 100644",
                "--- a/synapse/rest/client/v1/login.py",
                "+++ b/synapse/rest/client/v1/login.py",
                "@@ -16,3 +16,3 @@",
                " import logging",
                "-from typing import Awaitable, Callable, Dict, Optional",
                "+from typing import TYPE_CHECKING, Awaitable, Callable, Dict, Optional",
                "@@ -32,2 +32,5 @@ from synapse.types import JsonDict, UserID",
                "+if TYPE_CHECKING:",
                "+    from synapse.server import HomeServer",
                "+",
                " logger = logging.getLogger(__name__)",
                "@@ -44,3 +47,3 @@ class LoginRestServlet(RestServlet):",
                "-    def __init__(self, hs):",
                "+    def __init__(self, hs: \"HomeServer\"):",
                "         super().__init__()",
                "@@ -107,4 +110,2 @@ class LoginRestServlet(RestServlet):",
                "     async def on_POST(self, request: SynapseRequest):",
                "-        self._address_ratelimiter.ratelimit(request.getClientIP())",
                "-",
                "         login_submission = parse_json_object_from_request(request)",
                "@@ -114,2 +115,6 @@ class LoginRestServlet(RestServlet):",
                "                 appservice = self.auth.get_appservice_by_req(request)",
                "+",
                "+                if appservice.is_rate_limited():",
                "+                    self._address_ratelimiter.ratelimit(request.getClientIP())",
                "+",
                "                 result = await self._do_appservice_login(login_submission, appservice)",
                "@@ -119,6 +124,9 @@ class LoginRestServlet(RestServlet):",
                "             ):",
                "+                self._address_ratelimiter.ratelimit(request.getClientIP())",
                "                 result = await self._do_jwt_login(login_submission)",
                "             elif login_submission[\"type\"] == LoginRestServlet.TOKEN_TYPE:",
                "+                self._address_ratelimiter.ratelimit(request.getClientIP())",
                "                 result = await self._do_token_login(login_submission)",
                "             else:",
                "+                self._address_ratelimiter.ratelimit(request.getClientIP())",
                "                 result = await self._do_other_login(login_submission)",
                "@@ -161,3 +169,5 @@ class LoginRestServlet(RestServlet):",
                "-        return await self._complete_login(qualified_user_id, login_submission)",
                "+        return await self._complete_login(",
                "+            qualified_user_id, login_submission, ratelimit=appservice.is_rate_limited()",
                "+        )",
                "@@ -196,2 +206,3 @@ class LoginRestServlet(RestServlet):",
                "         create_non_existent_users: bool = False,",
                "+        ratelimit: bool = True,",
                "     ) -> Dict[str, str]:",
                "@@ -210,2 +221,3 @@ class LoginRestServlet(RestServlet):",
                "                 exist. Defaults to False.",
                "+            ratelimit: Whether to ratelimit the login request.",
                "@@ -218,3 +230,4 @@ class LoginRestServlet(RestServlet):",
                "         # necessarily know the user before now.",
                "-        self._account_ratelimiter.ratelimit(user_id.lower())",
                "+        if ratelimit:",
                "+            self._account_ratelimiter.ratelimit(user_id.lower())"
            ],
            "changed_files": [
                "changelog.d/8920.bugfix",
                "synapse/api/auth.py",
                "synapse/handlers/auth.py",
                "synapse/rest/client/v1/login.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8920": "",
                "8846": "Honour AS ratelimit settings for /login requests #8920"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IS_SECURITY_RELEVANT",
                    "message": "",
                    "relevance": 32
                },
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8920, 8920",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: setting, request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8920, 8846",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d781a81e692563c5785e3efd4aa2487696b9c995",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608305839,
            "hunks": 8,
            "message": "Allow server admin to get admin bit in rooms where local user is an admin (#8756) This adds an admin API that allows a server admin to get power in a room if a local user has power in a room. Will also invite the user if they're not in the room and its a private room. Can specify another user (rather than the admin user) to be granted power. Co-authored-by: Matthew Hodgson <matthew@matrix.org>",
            "diff": [
                "diff --git a/changelog.d/8756.feature b/changelog.d/8756.feature",
                "new file mode 100644",
                "index 000000000..03eb79fb0",
                "--- /dev/null",
                "+++ b/changelog.d/8756.feature",
                "@@ -0,0 +1 @@",
                "+Add admin API that lets server admins get power in rooms in which local users have power.",
                "diff --git a/synapse/rest/admin/__init__.py b/synapse/rest/admin/__init__.py",
                "index 55ddebb4f..6f7dc0650 100644",
                "--- a/synapse/rest/admin/__init__.py",
                "+++ b/synapse/rest/admin/__init__.py",
                "@@ -40,2 +40,3 @@ from synapse.rest.admin.rooms import (",
                "     ListRoomRestServlet,",
                "+    MakeRoomAdminRestServlet,",
                "     RoomMembersRestServlet,",
                "@@ -230,2 +231,3 @@ def register_servlets(hs, http_server):",
                "     PushersRestServlet(hs).register(http_server)",
                "+    MakeRoomAdminRestServlet(hs).register(http_server)",
                "diff --git a/synapse/rest/admin/rooms.py b/synapse/rest/admin/rooms.py",
                "index b902af802..ab7cc9102 100644",
                "--- a/synapse/rest/admin/rooms.py",
                "+++ b/synapse/rest/admin/rooms.py",
                "@@ -18,4 +18,4 @@ from typing import TYPE_CHECKING, List, Optional, Tuple",
                "-from synapse.api.constants import EventTypes, JoinRules",
                "-from synapse.api.errors import Codes, NotFoundError, SynapseError",
                "+from synapse.api.constants import EventTypes, JoinRules, Membership",
                "+from synapse.api.errors import AuthError, Codes, NotFoundError, SynapseError",
                " from synapse.http.servlet import (",
                "@@ -39,2 +39,3 @@ if TYPE_CHECKING:",
                "+",
                " logger = logging.getLogger(__name__)",
                "@@ -369 +370,132 @@ class JoinRoomAliasServlet(RestServlet):",
                "         return 200, {\"room_id\": room_id}",
                "+",
                "+",
                "+class MakeRoomAdminRestServlet(RestServlet):",
                "+    \"\"\"Allows a server admin to get power in a room if a local user has power in",
                "+    a room. Will also invite the user if they're not in the room and it's a",
                "+    private room. Can specify another user (rather than the admin user) to be",
                "+    granted power, e.g.:",
                "+",
                "+        POST/_synapse/admin/v1/rooms/<room_id_or_alias>/make_room_admin",
                "+        {",
                "+            \"user_id\": \"@foo:example.com\"",
                "+        }",
                "+    \"\"\"",
                "+",
                "+    PATTERNS = admin_patterns(\"/rooms/(?P<room_identifier>[^/]*)/make_room_admin\")",
                "+",
                "+    def __init__(self, hs: \"HomeServer\"):",
                "+        self.hs = hs",
                "+        self.auth = hs.get_auth()",
                "+        self.room_member_handler = hs.get_room_member_handler()",
                "+        self.event_creation_handler = hs.get_event_creation_handler()",
                "+        self.state_handler = hs.get_state_handler()",
                "+        self.is_mine_id = hs.is_mine_id",
                "+",
                "+    async def on_POST(self, request, room_identifier):",
                "+        requester = await self.auth.get_user_by_req(request)",
                "+        await assert_user_is_admin(self.auth, requester.user)",
                "+        content = parse_json_object_from_request(request, allow_empty_body=True)",
                "+",
                "+        # Resolve to a room ID, if necessary.",
                "+        if RoomID.is_valid(room_identifier):",
                "+            room_id = room_identifier",
                "+        elif RoomAlias.is_valid(room_identifier):",
                "+            room_alias = RoomAlias.from_string(room_identifier)",
                "+            room_id, _ = await self.room_member_handler.lookup_room_alias(room_alias)",
                "+            room_id = room_id.to_string()",
                "+        else:",
                "+            raise SynapseError(",
                "+                400, \"%s was not legal room ID or room alias\" % (room_identifier,)",
                "+            )",
                "+",
                "+        # Which user to grant room admin rights to.",
                "+        user_to_add = content.get(\"user_id\", requester.user.to_string())",
                "+",
                "+        # Figure out which local users currently have power in the room, if any.",
                "+        room_state = await self.state_handler.get_current_state(room_id)",
                "+        if not room_state:",
                "+            raise SynapseError(400, \"Server not in room\")",
                "+",
                "+        create_event = room_state[(EventTypes.Create, \"\")]",
                "+        power_levels = room_state.get((EventTypes.PowerLevels, \"\"))",
                "+",
                "+        if power_levels is not None:",
                "+            # We pick the local user with the highest power.",
                "+            user_power = power_levels.content.get(\"users\", {})",
                "+            admin_users = [",
                "+                user_id for user_id in user_power if self.is_mine_id(user_id)",
                "+            ]",
                "+            admin_users.sort(key=lambda user: user_power[user])",
                "+",
                "+            if not admin_users:",
                "+                raise SynapseError(400, \"No local admin user in room\")",
                "+",
                "+            admin_user_id = admin_users[-1]",
                "+",
                "+            pl_content = power_levels.content",
                "+        else:",
                "+            # If there is no power level events then the creator has rights.",
                "+            pl_content = {}",
                "+            admin_user_id = create_event.sender",
                "+            if not self.is_mine_id(admin_user_id):",
                "+                raise SynapseError(",
                "+                    400, \"No local admin user in room\",",
                "+                )",
                "+",
                "+        # Grant the user power equal to the room admin by attempting to send an",
                "+        # updated power level event.",
                "+        new_pl_content = dict(pl_content)",
                "+        new_pl_content[\"users\"] = dict(pl_content.get(\"users\", {}))",
                "+        new_pl_content[\"users\"][user_to_add] = new_pl_content[\"users\"][admin_user_id]",
                "+",
                "+        fake_requester = create_requester(",
                "+            admin_user_id, authenticated_entity=requester.authenticated_entity,",
                "+        )",
                "+",
                "+        try:",
                "+            await self.event_creation_handler.create_and_send_nonmember_event(",
                "+                fake_requester,",
                "+                event_dict={",
                "+                    \"content\": new_pl_content,",
                "+                    \"sender\": admin_user_id,",
                "+                    \"type\": EventTypes.PowerLevels,",
                "+                    \"state_key\": \"\",",
                "+                    \"room_id\": room_id,",
                "+                },",
                "+            )",
                "+        except AuthError:",
                "+            # The admin user we found turned out not to have enough power.",
                "+            raise SynapseError(",
                "+                400, \"No local admin user in room with power to update power levels.\"",
                "+            )",
                "+",
                "+        # Now we check if the user we're granting admin rights to is already in",
                "+        # the room. If not and it's not a public room we invite them.",
                "+        member_event = room_state.get((EventTypes.Member, user_to_add))",
                "+        is_joined = False",
                "+        if member_event:",
                "+            is_joined = member_event.content[\"membership\"] in (",
                "+                Membership.JOIN,",
                "+                Membership.INVITE,",
                "+            )",
                "+",
                "+        if is_joined:",
                "+            return 200, {}",
                "+",
                "+        join_rules = room_state.get((EventTypes.JoinRules, \"\"))",
                "+        is_public = False",
                "+        if join_rules:",
                "+            is_public = join_rules.content.get(\"join_rule\") == JoinRules.PUBLIC",
                "+",
                "+        if is_public:",
                "+            return 200, {}",
                "+",
                "+        await self.room_member_handler.update_membership(",
                "+            fake_requester,",
                "+            target=UserID.from_string(user_to_add),",
                "+            room_id=room_id,",
                "+            action=Membership.INVITE,",
                "+        )",
                "+",
                "+        return 200, {}",
                "diff --git a/tests/rest/admin/test_room.py b/tests/rest/admin/test_room.py",
                "index 014c30287..60a5fcecf 100644",
                "--- a/tests/rest/admin/test_room.py",
                "+++ b/tests/rest/admin/test_room.py",
                "@@ -22,2 +22,3 @@ from mock import Mock",
                " import synapse.rest.admin",
                "+from synapse.api.constants import EventTypes, Membership",
                " from synapse.api.errors import Codes",
                "@@ -1434,2 +1435,139 @@ class JoinAliasRoomTestCase(unittest.HomeserverTestCase):",
                "+class MakeRoomAdminTestCase(unittest.HomeserverTestCase):",
                "+    servlets = [",
                "+        synapse.rest.admin.register_servlets,",
                "+        room.register_servlets,",
                "+        login.register_servlets,",
                "+    ]",
                "+",
                "+    def prepare(self, reactor, clock, homeserver):",
                "+        self.admin_user = self.register_user(\"admin\", \"pass\", admin=True)",
                "+        self.admin_user_tok = self.login(\"admin\", \"pass\")",
                "+",
                "+        self.creator = self.register_user(\"creator\", \"test\")",
                "+        self.creator_tok = self.login(\"creator\", \"test\")",
                "+",
                "+        self.second_user_id = self.register_user(\"second\", \"test\")",
                "+        self.second_tok = self.login(\"second\", \"test\")",
                "+",
                "+        self.public_room_id = self.helper.create_room_as(",
                "+            self.creator, tok=self.creator_tok, is_public=True",
                "+        )",
                "+        self.url = \"/_synapse/admin/v1/rooms/{}/make_room_admin\".format(",
                "+            self.public_room_id",
                "+        )",
                "+",
                "+    def test_public_room(self):",
                "+        \"\"\"Test that getting admin in a public room works.",
                "+        \"\"\"",
                "+        room_id = self.helper.create_room_as(",
                "+            self.creator, tok=self.creator_tok, is_public=True",
                "+        )",
                "+",
                "+        channel = self.make_request(",
                "+            \"POST\",",
                "+            \"/_synapse/admin/v1/rooms/{}/make_room_admin\".format(room_id),",
                "+            content={},",
                "+            access_token=self.admin_user_tok,",
                "+        )",
                "+",
                "+        self.assertEqual(200, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "+",
                "+        # Now we test that we can join the room and ban a user.",
                "+        self.helper.join(room_id, self.admin_user, tok=self.admin_user_tok)",
                "+        self.helper.change_membership(",
                "+            room_id,",
                "+            self.admin_user,",
                "+            \"@test:test\",",
                "+            Membership.BAN,",
                "+            tok=self.admin_user_tok,",
                "+        )",
                "+",
                "+    def test_private_room(self):",
                "+        \"\"\"Test that getting admin in a private room works and we get invited.",
                "+        \"\"\"",
                "+        room_id = self.helper.create_room_as(",
                "+            self.creator, tok=self.creator_tok, is_public=False,",
                "+        )",
                "+",
                "+        channel = self.make_request(",
                "+            \"POST\",",
                "+            \"/_synapse/admin/v1/rooms/{}/make_room_admin\".format(room_id),",
                "+            content={},",
                "+            access_token=self.admin_user_tok,",
                "+        )",
                "+",
                "+        self.assertEqual(200, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "+",
                "+        # Now we test that we can join the room (we should have received an",
                "+        # invite) and can ban a user.",
                "+        self.helper.join(room_id, self.admin_user, tok=self.admin_user_tok)",
                "+        self.helper.change_membership(",
                "+            room_id,",
                "+            self.admin_user,",
                "+            \"@test:test\",",
                "+            Membership.BAN,",
                "+            tok=self.admin_user_tok,",
                "+        )",
                "+",
                "+    def test_other_user(self):",
                "+        \"\"\"Test that giving admin in a public room works to a non-admin user works.",
                "+        \"\"\"",
                "+        room_id = self.helper.create_room_as(",
                "+            self.creator, tok=self.creator_tok, is_public=True",
                "+        )",
                "+",
                "+        channel = self.make_request(",
                "+            \"POST\",",
                "+            \"/_synapse/admin/v1/rooms/{}/make_room_admin\".format(room_id),",
                "+            content={\"user_id\": self.second_user_id},",
                "+            access_token=self.admin_user_tok,",
                "+        )",
                "+",
                "+        self.assertEqual(200, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "+",
                "+        # Now we test that we can join the room and ban a user.",
                "+        self.helper.join(room_id, self.second_user_id, tok=self.second_tok)",
                "+        self.helper.change_membership(",
                "+            room_id,",
                "+            self.second_user_id,",
                "+            \"@test:test\",",
                "+            Membership.BAN,",
                "+            tok=self.second_tok,",
                "+        )",
                "+",
                "+    def test_not_enough_power(self):",
                "+        \"\"\"Test that we get a sensible error if there are no local room admins.",
                "+        \"\"\"",
                "+        room_id = self.helper.create_room_as(",
                "+            self.creator, tok=self.creator_tok, is_public=True",
                "+        )",
                "+",
                "+        # The creator drops admin rights in the room.",
                "+        pl = self.helper.get_state(",
                "+            room_id, EventTypes.PowerLevels, tok=self.creator_tok",
                "+        )",
                "+        pl[\"users\"][self.creator] = 0",
                "+        self.helper.send_state(",
                "+            room_id, EventTypes.PowerLevels, body=pl, tok=self.creator_tok",
                "+        )",
                "+",
                "+        channel = self.make_request(",
                "+            \"POST\",",
                "+            \"/_synapse/admin/v1/rooms/{}/make_room_admin\".format(room_id),",
                "+            content={},",
                "+            access_token=self.admin_user_tok,",
                "+        )",
                "+",
                "+        # We expect this to fail with a 400 as there are no room admins.",
                "+        #",
                "+        # (Note we assert the error message to ensure that it's not denied for",
                "+        # some other reason)",
                "+        self.assertEqual(400, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "+        self.assertEqual(",
                "+            channel.json_body[\"error\"],",
                "+            \"No local admin user in room with power to update power levels.\",",
                "+        )",
                "+",
                "+",
                " PURGE_TABLES = ["
            ],
            "changed_files": [
                "changelog.d/8756.feature",
                "synapse/rest/admin/__init__.py",
                "synapse/rest/admin/rooms.py",
                "tests/rest/admin/test_room.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8756": "admin-api: Don't Allow Admins to Invite Themselves Into Private Rooms #9027"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IS_SECURITY_RELEVANT",
                    "message": "",
                    "relevance": 32
                },
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8756, 8756",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: server",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8756",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1821f7cc265ab01cfee4055cfddb90563b61ce5b",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607604175,
            "hunks": 3,
            "message": "Fix buglet in DirectRenderJsonResource (#8897) this was using `canonical_json` without setting it, so when you used it as a standalone class, you would get exceptions.",
            "diff": [
                "diff --git a/changelog.d/8897.feature b/changelog.d/8897.feature",
                "new file mode 100644",
                "index 000000000..d450ef499",
                "--- /dev/null",
                "+++ b/changelog.d/8897.feature",
                "@@ -0,0 +1 @@",
                "+Add support for allowing users to pick their own user ID during a single-sign-on login.",
                "diff --git a/synapse/http/server.py b/synapse/http/server.py",
                "index 6a4e429a6..e464bfe6c 100644",
                "--- a/synapse/http/server.py",
                "+++ b/synapse/http/server.py",
                "@@ -277,2 +277,6 @@ class DirectServeJsonResource(_AsyncResource):",
                "+    def __init__(self, canonical_json=False, extract_context=False):",
                "+        super().__init__(extract_context)",
                "+        self.canonical_json = canonical_json",
                "+",
                "     def _send_response(",
                "@@ -320,5 +324,3 @@ class JsonResource(DirectServeJsonResource):",
                "     def __init__(self, hs, canonical_json=True, extract_context=False):",
                "-        super().__init__(extract_context)",
                "-",
                "-        self.canonical_json = canonical_json",
                "+        super().__init__(canonical_json, extract_context)",
                "         self.clock = hs.get_clock()"
            ],
            "changed_files": [
                "changelog.d/8897.feature",
                "synapse/http/server.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8897": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8897, 8897",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: setting, resource",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8897",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "28877fade90a5cfb3457c9e6c70924dbbe8af715",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608301186,
            "hunks": 43,
            "message": "Implement a username picker for synapse (#8942) The final part (for now) of my work to implement a username picker in synapse itself. The idea is that we allow `UsernameMappingProvider`s to return `localpart=None`, in which case, rather than redirecting the browser back to the client, we redirect to a username-picker resource, which allows the user to enter a username. We *then* complete the SSO flow (including doing the client permission checks). The static resources for the username picker itself (in  https://github.com/matrix-org/synapse/tree/rav/username_picker/synapse/res/username_picker) are essentially lifted wholesale from https://github.com/matrix-org/matrix-synapse-saml-mozilla/tree/master/matrix_synapse_saml_mozilla/res.  As the comment says, we might want to think about making them customisable, but that can be a follow-up.  Fixes #8876.",
            "diff": [
                "diff --git a/changelog.d/8942.feature b/changelog.d/8942.feature",
                "new file mode 100644",
                "index 000000000..d450ef499",
                "--- /dev/null",
                "+++ b/changelog.d/8942.feature",
                "@@ -0,0 +1 @@",
                "+Add support for allowing users to pick their own user ID during a single-sign-on login.",
                "diff --git a/docs/sample_config.yaml b/docs/sample_config.yaml",
                "index 549c581a9..077cb619c 100644",
                "--- a/docs/sample_config.yaml",
                "+++ b/docs/sample_config.yaml",
                "@@ -1827,5 +1827,6 @@ oidc_config:",
                "       #",
                "-      # This must be configured if using the default mapping provider.",
                "+      # If this is not set, the user will be prompted to choose their",
                "+      # own username.",
                "       #",
                "-      localpart_template: \"{{ user.preferred_username }}\"",
                "+      #localpart_template: \"{{ user.preferred_username }}\"",
                "diff --git a/synapse/app/homeserver.py b/synapse/app/homeserver.py",
                "index bbb740783..8d9b53be5 100644",
                "--- a/synapse/app/homeserver.py",
                "+++ b/synapse/app/homeserver.py",
                "@@ -65,2 +65,3 @@ from synapse.rest.health import HealthResource",
                " from synapse.rest.key.v2 import KeyApiV2Resource",
                "+from synapse.rest.synapse.client.pick_username import pick_username_resource",
                " from synapse.rest.well_known import WellKnownResource",
                "@@ -194,2 +195,3 @@ class SynapseHomeServer(HomeServer):",
                "                     \"/_synapse/admin\": AdminRestResource(self),",
                "+                    \"/_synapse/client/pick_username\": pick_username_resource(self),",
                "                 }",
                "diff --git a/synapse/config/oidc_config.py b/synapse/config/oidc_config.py",
                "index 1abf8ed40..4e3055282 100644",
                "--- a/synapse/config/oidc_config.py",
                "+++ b/synapse/config/oidc_config.py",
                "@@ -205,5 +205,6 @@ class OIDCConfig(Config):",
                "               #",
                "-              # This must be configured if using the default mapping provider.",
                "+              # If this is not set, the user will be prompted to choose their",
                "+              # own username.",
                "               #",
                "-              localpart_template: \"{{{{ user.preferred_username }}}}\"",
                "+              #localpart_template: \"{{{{ user.preferred_username }}}}\"",
                "diff --git a/synapse/handlers/oidc_handler.py b/synapse/handlers/oidc_handler.py",
                "index cbd11a138..709f8dfc1 100644",
                "--- a/synapse/handlers/oidc_handler.py",
                "+++ b/synapse/handlers/oidc_handler.py",
                "@@ -949,3 +949,3 @@ class OidcHandler(BaseHandler):",
                " UserAttributeDict = TypedDict(",
                "-    \"UserAttributeDict\", {\"localpart\": str, \"display_name\": Optional[str]}",
                "+    \"UserAttributeDict\", {\"localpart\": Optional[str], \"display_name\": Optional[str]}",
                " )",
                "@@ -1030,6 +1030,6 @@ env = Environment(finalize=jinja_finalize)",
                " class JinjaOidcMappingConfig:",
                "-    subject_claim = attr.ib()  # type: str",
                "-    localpart_template = attr.ib()  # type: Template",
                "-    display_name_template = attr.ib()  # type: Optional[Template]",
                "-    extra_attributes = attr.ib()  # type: Dict[str, Template]",
                "+    subject_claim = attr.ib(type=str)",
                "+    localpart_template = attr.ib(type=Optional[Template])",
                "+    display_name_template = attr.ib(type=Optional[Template])",
                "+    extra_attributes = attr.ib(type=Dict[str, Template])",
                "@@ -1049,14 +1049,10 @@ class JinjaOidcMappingProvider(OidcMappingProvider[JinjaOidcMappingConfig]):",
                "-        if \"localpart_template\" not in config:",
                "-            raise ConfigError(",
                "-                \"missing key: oidc_config.user_mapping_provider.config.localpart_template\"",
                "-            )",
                "-",
                "-        try:",
                "-            localpart_template = env.from_string(config[\"localpart_template\"])",
                "-        except Exception as e:",
                "-            raise ConfigError(",
                "-                \"invalid jinja template for oidc_config.user_mapping_provider.config.localpart_template: %r\"",
                "-                % (e,)",
                "-            )",
                "+        localpart_template = None  # type: Optional[Template]",
                "+        if \"localpart_template\" in config:",
                "+            try:",
                "+                localpart_template = env.from_string(config[\"localpart_template\"])",
                "+            except Exception as e:",
                "+                raise ConfigError(",
                "+                    \"invalid jinja template\", path=[\"localpart_template\"]",
                "+                ) from e",
                "@@ -1068,5 +1064,4 @@ class JinjaOidcMappingProvider(OidcMappingProvider[JinjaOidcMappingConfig]):",
                "                 raise ConfigError(",
                "-                    \"invalid jinja template for oidc_config.user_mapping_provider.config.display_name_template: %r\"",
                "-                    % (e,)",
                "-                )",
                "+                    \"invalid jinja template\", path=[\"display_name_template\"]",
                "+                ) from e",
                "@@ -1076,5 +1071,3 @@ class JinjaOidcMappingProvider(OidcMappingProvider[JinjaOidcMappingConfig]):",
                "             if not isinstance(extra_attributes_config, dict):",
                "-                raise ConfigError(",
                "-                    \"oidc_config.user_mapping_provider.config.extra_attributes must be a dict\"",
                "-                )",
                "+                raise ConfigError(\"must be a dict\", path=[\"extra_attributes\"])",
                "@@ -1085,5 +1078,4 @@ class JinjaOidcMappingProvider(OidcMappingProvider[JinjaOidcMappingConfig]):",
                "                     raise ConfigError(",
                "-                        \"invalid jinja template for oidc_config.user_mapping_provider.config.extra_attributes.%s: %r\"",
                "-                        % (key, e)",
                "-                    )",
                "+                        \"invalid jinja template\", path=[\"extra_attributes\", key]",
                "+                    ) from e",
                "@@ -1102,10 +1094,13 @@ class JinjaOidcMappingProvider(OidcMappingProvider[JinjaOidcMappingConfig]):",
                "     ) -> UserAttributeDict:",
                "-        localpart = self._config.localpart_template.render(user=userinfo).strip()",
                "+        localpart = None",
                "+",
                "+        if self._config.localpart_template:",
                "+            localpart = self._config.localpart_template.render(user=userinfo).strip()",
                "-        # Ensure only valid characters are included in the MXID.",
                "-        localpart = map_username_to_mxid_localpart(localpart)",
                "+            # Ensure only valid characters are included in the MXID.",
                "+            localpart = map_username_to_mxid_localpart(localpart)",
                "-        # Append suffix integer if last call to this function failed to produce",
                "-        # a usable mxid.",
                "-        localpart += str(failures) if failures else \"\"",
                "+            # Append suffix integer if last call to this function failed to produce",
                "+            # a usable mxid.",
                "+            localpart += str(failures) if failures else \"\"",
                "diff --git a/synapse/handlers/sso.py b/synapse/handlers/sso.py",
                "index f054b66a5..548b02211 100644",
                "--- a/synapse/handlers/sso.py",
                "+++ b/synapse/handlers/sso.py",
                "@@ -15,5 +15,6 @@",
                " import logging",
                "-from typing import TYPE_CHECKING, Awaitable, Callable, List, Optional",
                "+from typing import TYPE_CHECKING, Awaitable, Callable, Dict, List, Optional",
                " import attr",
                "+from typing_extensions import NoReturn",
                "@@ -21,3 +22,3 @@ from twisted.web.http import Request",
                "-from synapse.api.errors import RedirectException",
                "+from synapse.api.errors import RedirectException, SynapseError",
                " from synapse.http.server import respond_with_html",
                "@@ -26,2 +27,3 @@ from synapse.types import JsonDict, UserID, contains_invalid_mxid_characters",
                " from synapse.util.async_helpers import Linearizer",
                "+from synapse.util.stringutils import random_string",
                "@@ -42,3 +44,6 @@ class MappingException(Exception):",
                " class UserAttributes:",
                "-    localpart = attr.ib(type=str)",
                "+    # the localpart of the mxid that the mapper has assigned to the user.",
                "+    # if `None`, the mapper has not picked a userid, and the user should be prompted to",
                "+    # enter one.",
                "+    localpart = attr.ib(type=Optional[str])",
                "     display_name = attr.ib(type=Optional[str], default=None)",
                "@@ -47,2 +52,31 @@ class UserAttributes:",
                "+@attr.s(slots=True)",
                "+class UsernameMappingSession:",
                "+    \"\"\"Data we track about SSO sessions\"\"\"",
                "+",
                "+    # A unique identifier for this SSO provider, e.g.  \"oidc\" or \"saml\".",
                "+    auth_provider_id = attr.ib(type=str)",
                "+",
                "+    # user ID on the IdP server",
                "+    remote_user_id = attr.ib(type=str)",
                "+",
                "+    # attributes returned by the ID mapper",
                "+    display_name = attr.ib(type=Optional[str])",
                "+    emails = attr.ib(type=List[str])",
                "+",
                "+    # An optional dictionary of extra attributes to be provided to the client in the",
                "+    # login response.",
                "+    extra_login_attributes = attr.ib(type=Optional[JsonDict])",
                "+",
                "+    # where to redirect the client back to",
                "+    client_redirect_url = attr.ib(type=str)",
                "+",
                "+    # expiry time for the session, in milliseconds",
                "+    expiry_time_ms = attr.ib(type=int)",
                "+",
                "+",
                "+# the HTTP cookie used to track the mapping session id",
                "+USERNAME_MAPPING_SESSION_COOKIE_NAME = b\"username_mapping_session\"",
                "+",
                "+",
                " class SsoHandler:",
                "@@ -51,3 +85,7 @@ class SsoHandler:",
                "+    # the time a UsernameMappingSession remains valid for",
                "+    _MAPPING_SESSION_VALIDITY_PERIOD_MS = 15 * 60 * 1000",
                "+",
                "     def __init__(self, hs: \"HomeServer\"):",
                "+        self._clock = hs.get_clock()",
                "         self._store = hs.get_datastore()",
                "@@ -61,2 +99,5 @@ class SsoHandler:",
                "+        # a map from session id to session data",
                "+        self._username_mapping_sessions = {}  # type: Dict[str, UsernameMappingSession]",
                "+",
                "     def render_error(",
                "@@ -208,2 +249,14 @@ class SsoHandler:",
                "                 attributes = await self._call_attribute_mapper(sso_to_matrix_id_mapper)",
                "+",
                "+                if attributes.localpart is None:",
                "+                    # the mapper doesn't return a username. bail out with a redirect to",
                "+                    # the username picker.",
                "+                    await self._redirect_to_username_picker(",
                "+                        auth_provider_id,",
                "+                        remote_user_id,",
                "+                        attributes,",
                "+                        client_redirect_url,",
                "+                        extra_login_attributes,",
                "+                    )",
                "+",
                "                 user_id = await self._register_mapped_user(",
                "@@ -245,6 +298,4 @@ class SsoHandler:",
                "             if not attributes.localpart:",
                "-                raise MappingException(",
                "-                    \"Error parsing SSO response: SSO mapping provider plugin \"",
                "-                    \"did not return a localpart value\"",
                "-                )",
                "+                # the mapper has not picked a localpart",
                "+                return attributes",
                "@@ -263,2 +314,55 @@ class SsoHandler:",
                "+    async def _redirect_to_username_picker(",
                "+        self,",
                "+        auth_provider_id: str,",
                "+        remote_user_id: str,",
                "+        attributes: UserAttributes,",
                "+        client_redirect_url: str,",
                "+        extra_login_attributes: Optional[JsonDict],",
                "+    ) -> NoReturn:",
                "+        \"\"\"Creates a UsernameMappingSession and redirects the browser",
                "+",
                "+        Called if the user mapping provider doesn't return a localpart for a new user.",
                "+        Raises a RedirectException which redirects the browser to the username picker.",
                "+",
                "+        Args:",
                "+            auth_provider_id: A unique identifier for this SSO provider, e.g.",
                "+                \"oidc\" or \"saml\".",
                "+",
                "+            remote_user_id: The unique identifier from the SSO provider.",
                "+",
                "+            attributes: the user attributes returned by the user mapping provider.",
                "+",
                "+            client_redirect_url: The redirect URL passed in by the client, which we",
                "+                will eventually redirect back to.",
                "+",
                "+            extra_login_attributes: An optional dictionary of extra",
                "+                attributes to be provided to the client in the login response.",
                "+",
                "+        Raises:",
                "+            RedirectException",
                "+        \"\"\"",
                "+        session_id = random_string(16)",
                "+        now = self._clock.time_msec()",
                "+        session = UsernameMappingSession(",
                "+            auth_provider_id=auth_provider_id,",
                "+            remote_user_id=remote_user_id,",
                "+            display_name=attributes.display_name,",
                "+            emails=attributes.emails,",
                "+            client_redirect_url=client_redirect_url,",
                "+            expiry_time_ms=now + self._MAPPING_SESSION_VALIDITY_PERIOD_MS,",
                "+            extra_login_attributes=extra_login_attributes,",
                "+        )",
                "+",
                "+        self._username_mapping_sessions[session_id] = session",
                "+        logger.info(\"Recorded registration session id %s\", session_id)",
                "+",
                "+        # Set the cookie and redirect to the username picker",
                "+        e = RedirectException(b\"/_synapse/client/pick_username\")",
                "+        e.cookies.append(",
                "+            b\"%s=%s; path=/\"",
                "+            % (USERNAME_MAPPING_SESSION_COOKIE_NAME, session_id.encode(\"ascii\"))",
                "+        )",
                "+        raise e",
                "+",
                "     async def _register_mapped_user(",
                "@@ -271,5 +375,34 @@ class SsoHandler:",
                "     ) -> str:",
                "+        \"\"\"Register a new SSO user.",
                "+",
                "+        This is called once we have successfully mapped the remote user id onto a local",
                "+        user id, one way or another.",
                "+",
                "+        Args:",
                "+             attributes: user attributes returned by the user mapping provider,",
                "+                including a non-empty localpart.",
                "+",
                "+            auth_provider_id: A unique identifier for this SSO provider, e.g.",
                "+                \"oidc\" or \"saml\".",
                "+",
                "+            remote_user_id: The unique identifier from the SSO provider.",
                "+",
                "+            user_agent: The user-agent in the HTTP request (used for potential",
                "+                shadow-banning.)",
                "+",
                "+            ip_address: The IP address of the requester (used for potential",
                "+                shadow-banning.)",
                "+",
                "+        Raises:",
                "+            a MappingException if the localpart is invalid.",
                "+",
                "+            a SynapseError with code 400 and errcode Codes.USER_IN_USE if the localpart",
                "+            is already taken.",
                "+        \"\"\"",
                "+",
                "         # Since the localpart is provided via a potentially untrusted module,",
                "         # ensure the MXID is valid before registering.",
                "-        if contains_invalid_mxid_characters(attributes.localpart):",
                "+        if not attributes.localpart or contains_invalid_mxid_characters(",
                "+            attributes.localpart",
                "+        ):",
                "             raise MappingException(\"localpart is invalid: %s\" % (attributes.localpart,))",
                "@@ -328 +461,106 @@ class SsoHandler:",
                "         )",
                "+",
                "+    async def check_username_availability(",
                "+        self, localpart: str, session_id: str,",
                "+    ) -> bool:",
                "+        \"\"\"Handle an \"is username available\" callback check",
                "+",
                "+        Args:",
                "+            localpart: desired localpart",
                "+            session_id: the session id for the username picker",
                "+        Returns:",
                "+            True if the username is available",
                "+        Raises:",
                "+            SynapseError if the localpart is invalid or the session is unknown",
                "+        \"\"\"",
                "+",
                "+        # make sure that there is a valid mapping session, to stop people dictionary-",
                "+        # scanning for accounts",
                "+",
                "+        self._expire_old_sessions()",
                "+        session = self._username_mapping_sessions.get(session_id)",
                "+        if not session:",
                "+            logger.info(\"Couldn't find session id %s\", session_id)",
                "+            raise SynapseError(400, \"unknown session\")",
                "+",
                "+        logger.info(",
                "+            \"[session %s] Checking for availability of username %s\",",
                "+            session_id,",
                "+            localpart,",
                "+        )",
                "+",
                "+        if contains_invalid_mxid_characters(localpart):",
                "+            raise SynapseError(400, \"localpart is invalid: %s\" % (localpart,))",
                "+        user_id = UserID(localpart, self._server_name).to_string()",
                "+        user_infos = await self._store.get_users_by_id_case_insensitive(user_id)",
                "+",
                "+        logger.info(\"[session %s] users: %s\", session_id, user_infos)",
                "+        return not user_infos",
                "+",
                "+    async def handle_submit_username_request(",
                "+        self, request: SynapseRequest, localpart: str, session_id: str",
                "+    ) -> None:",
                "+        \"\"\"Handle a request to the username-picker 'submit' endpoint",
                "+",
                "+        Will serve an HTTP response to the request.",
                "+",
                "+        Args:",
                "+            request: HTTP request",
                "+            localpart: localpart requested by the user",
                "+            session_id: ID of the username mapping session, extracted from a cookie",
                "+        \"\"\"",
                "+        self._expire_old_sessions()",
                "+        session = self._username_mapping_sessions.get(session_id)",
                "+        if not session:",
                "+            logger.info(\"Couldn't find session id %s\", session_id)",
                "+            raise SynapseError(400, \"unknown session\")",
                "+",
                "+        logger.info(\"[session %s] Registering localpart %s\", session_id, localpart)",
                "+",
                "+        attributes = UserAttributes(",
                "+            localpart=localpart,",
                "+            display_name=session.display_name,",
                "+            emails=session.emails,",
                "+        )",
                "+",
                "+        # the following will raise a 400 error if the username has been taken in the",
                "+        # meantime.",
                "+        user_id = await self._register_mapped_user(",
                "+            attributes,",
                "+            session.auth_provider_id,",
                "+            session.remote_user_id,",
                "+            request.get_user_agent(\"\"),",
                "+            request.getClientIP(),",
                "+        )",
                "+",
                "+        logger.info(\"[session %s] Registered userid %s\", session_id, user_id)",
                "+",
                "+        # delete the mapping session and the cookie",
                "+        del self._username_mapping_sessions[session_id]",
                "+",
                "+        # delete the cookie",
                "+        request.addCookie(",
                "+            USERNAME_MAPPING_SESSION_COOKIE_NAME,",
                "+            b\"\",",
                "+            expires=b\"Thu, 01 Jan 1970 00:00:00 GMT\",",
                "+            path=b\"/\",",
                "+        )",
                "+",
                "+        await self._auth_handler.complete_sso_login(",
                "+            user_id,",
                "+            request,",
                "+            session.client_redirect_url,",
                "+            session.extra_login_attributes,",
                "+        )",
                "+",
                "+    def _expire_old_sessions(self):",
                "+        to_expire = []",
                "+        now = int(self._clock.time_msec())",
                "+",
                "+        for session_id, session in self._username_mapping_sessions.items():",
                "+            if session.expiry_time_ms <= now:",
                "+                to_expire.append(session_id)",
                "+",
                "+        for session_id in to_expire:",
                "+            logger.info(\"Expiring mapping session %s\", session_id)",
                "+            del self._username_mapping_sessions[session_id]",
                "diff --git a/synapse/res/username_picker/index.html b/synapse/res/username_picker/index.html",
                "new file mode 100644",
                "index 000000000..37ea8bb6d",
                "--- /dev/null",
                "+++ b/synapse/res/username_picker/index.html",
                "@@ -0,0 +1,19 @@",
                "+<!DOCTYPE html>",
                "+<html lang=\"en\">",
                "+  <head>",
                "+    <title>Synapse Login</title>",
                "+    <link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\" />",
                "+  </head>",
                "+  <body>",
                "+    <div class=\"card\">",
                "+      <form method=\"post\" class=\"form__input\" id=\"form\" action=\"submit\">",
                "+        <label for=\"field-username\">Please pick your username:</label>",
                "+        <input type=\"text\" name=\"username\" id=\"field-username\" autofocus=\"\">",
                "+        <input type=\"submit\" class=\"button button--full-width\" id=\"button-submit\" value=\"Submit\">",
                "+      </form>",
                "+      <!-- this is used for feedback -->",
                "+      <div role=alert class=\"tooltip hidden\" id=\"message\"></div>",
                "+      <script src=\"script.js\"></script>",
                "+    </div>",
                "+  </body>",
                "+</html>",
                "diff --git a/synapse/res/username_picker/script.js b/synapse/res/username_picker/script.js",
                "new file mode 100644",
                "index 000000000..416a7c6f4",
                "--- /dev/null",
                "+++ b/synapse/res/username_picker/script.js",
                "@@ -0,0 +1,95 @@",
                "+let inputField = document.getElementById(\"field-username\");",
                "+let inputForm = document.getElementById(\"form\");",
                "+let submitButton = document.getElementById(\"button-submit\");",
                "+let message = document.getElementById(\"message\");",
                "+",
                "+// Submit username and receive response",
                "+function showMessage(messageText) {",
                "+    // Unhide the message text",
                "+    message.classList.remove(\"hidden\");",
                "+",
                "+    message.textContent = messageText;",
                "+};",
                "+",
                "+function doSubmit() {",
                "+    showMessage(\"Success. Please wait a moment for your browser to redirect.\");",
                "+",
                "+    // remove the event handler before re-submitting the form.",
                "+    delete inputForm.onsubmit;",
                "+    inputForm.submit();",
                "+}",
                "+",
                "+function onResponse(response) {",
                "+    // Display message",
                "+    showMessage(response);",
                "+",
                "+    // Enable submit button and input field",
                "+    submitButton.classList.remove('button--disabled');",
                "+    submitButton.value = \"Submit\";",
                "+};",
                "+",
                "+let allowedUsernameCharacters = RegExp(\"[^a-z0-9\\\\.\\\\_\\\\=\\\\-\\\\/]\");",
                "+function usernameIsValid(username) {",
                "+    return !allowedUsernameCharacters.test(username);",
                "+}",
                "+let allowedCharactersString = \"lowercase letters, digits, ., _, -, /, =\";",
                "+",
                "+function buildQueryString(params) {",
                "+    return Object.keys(params)",
                "+        .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))",
                "+        .join('&');",
                "+}",
                "+",
                "+function submitUsername(username) {",
                "+    if(username.length == 0) {",
                "+        onResponse(\"Please enter a username.\");",
                "+        return;",
                "+    }",
                "+    if(!usernameIsValid(username)) {",
                "+        onResponse(\"Invalid username. Only the following characters are allowed: \" + allowedCharactersString);",
                "+        return;",
                "+    }",
                "+",
                "+    // if this browser doesn't support fetch, skip the availability check.",
                "+    if(!window.fetch) {",
                "+        doSubmit();",
                "+        return;",
                "+    }",
                "+",
                "+    let check_uri = 'check?' + buildQueryString({\"username\": username});",
                "+    fetch(check_uri, {",
                "+        // include the cookie",
                "+        \"credentials\": \"same-origin\",",
                "+    }).then((response) => {",
                "+        if(!response.ok) {",
                "+            // for non-200 responses, raise the body of the response as an exception",
                "+            return response.text().then((text) => { throw text; });",
                "+        } else {",
                "+            return response.json();",
                "+        }",
                "+    }).then((json) => {",
                "+        if(json.error) {",
                "+            throw json.error;",
                "+        } else if(json.available) {",
                "+            doSubmit();",
                "+        } else {",
                "+            onResponse(\"This username is not available, please choose another.\");",
                "+        }",
                "+    }).catch((err) => {",
                "+        onResponse(\"Error checking username availability: \" + err);",
                "+    });",
                "+}",
                "+",
                "+function clickSubmit() {",
                "+    event.preventDefault();",
                "+    if(submitButton.classList.contains('button--disabled')) { return; }",
                "+",
                "+    // Disable submit button and input field",
                "+    submitButton.classList.add('button--disabled');",
                "+",
                "+    // Submit username",
                "+    submitButton.value = \"Checking...\";",
                "+    submitUsername(inputField.value);",
                "+};",
                "+",
                "+inputForm.onsubmit = clickSubmit;",
                "diff --git a/synapse/res/username_picker/style.css b/synapse/res/username_picker/style.css",
                "new file mode 100644",
                "index 000000000..745bd4c68",
                "--- /dev/null",
                "+++ b/synapse/res/username_picker/style.css",
                "@@ -0,0 +1,27 @@",
                "+input[type=\"text\"] {",
                "+  font-size: 100%;",
                "+  background-color: #ededf0;",
                "+  border: 1px solid #fff;",
                "+  border-radius: .2em;",
                "+  padding: .5em .9em;",
                "+  display: block;",
                "+  width: 26em;",
                "+}",
                "+",
                "+.button--disabled {",
                "+  border-color: #fff;",
                "+  background-color: transparent;",
                "+  color: #000;",
                "+  text-transform: none;",
                "+}",
                "+",
                "+.hidden {",
                "+  display: none;",
                "+}",
                "+",
                "+.tooltip {",
                "+  background-color: #f9f9fa;",
                "+  padding: 1em;",
                "+  margin: 1em 0;",
                "+}",
                "+",
                "diff --git a/synapse/rest/synapse/client/pick_username.py b/synapse/rest/synapse/client/pick_username.py",
                "new file mode 100644",
                "index 000000000..d3b6803e6",
                "--- /dev/null",
                "+++ b/synapse/rest/synapse/client/pick_username.py",
                "@@ -0,0 +1,88 @@",
                "+# -*- coding: utf-8 -*-",
                "+# Copyright 2020 The Matrix.org Foundation C.I.C.",
                "+#",
                "+# Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+# you may not use this file except in compliance with the License.",
                "+# You may obtain a copy of the License at",
                "+#",
                "+#     http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing, software",
                "+# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+# See the License for the specific language governing permissions and",
                "+# limitations under the License.",
                "+from typing import TYPE_CHECKING",
                "+",
                "+import pkg_resources",
                "+",
                "+from twisted.web.http import Request",
                "+from twisted.web.resource import Resource",
                "+from twisted.web.static import File",
                "+",
                "+from synapse.api.errors import SynapseError",
                "+from synapse.handlers.sso import USERNAME_MAPPING_SESSION_COOKIE_NAME",
                "+from synapse.http.server import DirectServeHtmlResource, DirectServeJsonResource",
                "+from synapse.http.servlet import parse_string",
                "+from synapse.http.site import SynapseRequest",
                "+",
                "+if TYPE_CHECKING:",
                "+    from synapse.server import HomeServer",
                "+",
                "+",
                "+def pick_username_resource(hs: \"HomeServer\") -> Resource:",
                "+    \"\"\"Factory method to generate the username picker resource.",
                "+",
                "+    This resource gets mounted under /_synapse/client/pick_username. The top-level",
                "+    resource is just a File resource which serves up the static files in the resources",
                "+    \"res\" directory, but it has a couple of children:",
                "+",
                "+    * \"submit\", which does the mechanics of registering the new user, and redirects the",
                "+      browser back to the client URL",
                "+",
                "+    * \"check\": checks if a userid is free.",
                "+    \"\"\"",
                "+",
                "+    # XXX should we make this path customisable so that admins can restyle it?",
                "+    base_path = pkg_resources.resource_filename(\"synapse\", \"res/username_picker\")",
                "+",
                "+    res = File(base_path)",
                "+    res.putChild(b\"submit\", SubmitResource(hs))",
                "+    res.putChild(b\"check\", AvailabilityCheckResource(hs))",
                "+",
                "+    return res",
                "+",
                "+",
                "+class AvailabilityCheckResource(DirectServeJsonResource):",
                "+    def __init__(self, hs: \"HomeServer\"):",
                "+        super().__init__()",
                "+        self._sso_handler = hs.get_sso_handler()",
                "+",
                "+    async def _async_render_GET(self, request: Request):",
                "+        localpart = parse_string(request, \"username\", required=True)",
                "+",
                "+        session_id = request.getCookie(USERNAME_MAPPING_SESSION_COOKIE_NAME)",
                "+        if not session_id:",
                "+            raise SynapseError(code=400, msg=\"missing session_id\")",
                "+",
                "+        is_available = await self._sso_handler.check_username_availability(",
                "+            localpart, session_id.decode(\"ascii\", errors=\"replace\")",
                "+        )",
                "+        return 200, {\"available\": is_available}",
                "+",
                "+",
                "+class SubmitResource(DirectServeHtmlResource):",
                "+    def __init__(self, hs: \"HomeServer\"):",
                "+        super().__init__()",
                "+        self._sso_handler = hs.get_sso_handler()",
                "+",
                "+    async def _async_render_POST(self, request: SynapseRequest):",
                "+        localpart = parse_string(request, \"username\", required=True)",
                "+",
                "+        session_id = request.getCookie(USERNAME_MAPPING_SESSION_COOKIE_NAME)",
                "+        if not session_id:",
                "+            raise SynapseError(code=400, msg=\"missing session_id\")",
                "+",
                "+        await self._sso_handler.handle_submit_username_request(",
                "+            request, localpart, session_id.decode(\"ascii\", errors=\"replace\")",
                "+        )",
                "diff --git a/synapse/types.py b/synapse/types.py",
                "index 3ab6bdbe0..c7d4e9580 100644",
                "--- a/synapse/types.py",
                "+++ b/synapse/types.py",
                "@@ -351,3 +351,5 @@ NON_MXID_CHARACTER_PATTERN = re.compile(",
                "-def map_username_to_mxid_localpart(username, case_sensitive=False):",
                "+def map_username_to_mxid_localpart(",
                "+    username: Union[str, bytes], case_sensitive: bool = False",
                "+) -> str:",
                "     \"\"\"Map a username onto a string suitable for a MXID",
                "@@ -358,4 +360,4 @@ def map_username_to_mxid_localpart(username, case_sensitive=False):",
                "     Args:",
                "-        username (unicode|bytes): username to be mapped",
                "-        case_sensitive (bool): true if TEST and test should be mapped",
                "+        username: username to be mapped",
                "+        case_sensitive: true if TEST and test should be mapped",
                "             onto different mxids",
                "diff --git a/tests/handlers/test_oidc.py b/tests/handlers/test_oidc.py",
                "index c54f1c579..368d600b3 100644",
                "--- a/tests/handlers/test_oidc.py",
                "+++ b/tests/handlers/test_oidc.py",
                "@@ -15,3 +15,5 @@",
                " import json",
                "-from urllib.parse import parse_qs, urlparse",
                "+import re",
                "+from typing import Dict",
                "+from urllib.parse import parse_qs, urlencode, urlparse",
                "@@ -21,4 +23,9 @@ import pymacaroons",
                "+from twisted.web.resource import Resource",
                "+",
                "+from synapse.api.errors import RedirectException",
                " from synapse.handlers.oidc_handler import OidcError",
                " from synapse.handlers.sso import MappingException",
                "+from synapse.rest.client.v1 import login",
                "+from synapse.rest.synapse.client.pick_username import pick_username_resource",
                " from synapse.server import HomeServer",
                "@@ -795,2 +802,136 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "+    def test_empty_localpart(self):",
                "+        \"\"\"Attempts to map onto an empty localpart should be rejected.\"\"\"",
                "+        userinfo = {",
                "+            \"sub\": \"tester\",",
                "+            \"username\": \"\",",
                "+        }",
                "+        self.get_success(_make_callback_with_userinfo(self.hs, userinfo))",
                "+        self.assertRenderedError(\"mapping_error\", \"localpart is invalid: \")",
                "+",
                "+    @override_config(",
                "+        {",
                "+            \"oidc_config\": {",
                "+                \"user_mapping_provider\": {",
                "+                    \"config\": {\"localpart_template\": \"{{ user.username }}\"}",
                "+                }",
                "+            }",
                "+        }",
                "+    )",
                "+    def test_null_localpart(self):",
                "+        \"\"\"Mapping onto a null localpart via an empty OIDC attribute should be rejected\"\"\"",
                "+        userinfo = {",
                "+            \"sub\": \"tester\",",
                "+            \"username\": None,",
                "+        }",
                "+        self.get_success(_make_callback_with_userinfo(self.hs, userinfo))",
                "+        self.assertRenderedError(\"mapping_error\", \"localpart is invalid: \")",
                "+",
                "+",
                "+class UsernamePickerTestCase(HomeserverTestCase):",
                "+    servlets = [login.register_servlets]",
                "+",
                "+    def default_config(self):",
                "+        config = super().default_config()",
                "+        config[\"public_baseurl\"] = BASE_URL",
                "+        oidc_config = {",
                "+            \"enabled\": True,",
                "+            \"client_id\": CLIENT_ID,",
                "+            \"client_secret\": CLIENT_SECRET,",
                "+            \"issuer\": ISSUER,",
                "+            \"scopes\": SCOPES,",
                "+            \"user_mapping_provider\": {",
                "+                \"config\": {\"display_name_template\": \"{{ user.displayname }}\"}",
                "+            },",
                "+        }",
                "+",
                "+        # Update this config with what's in the default config so that",
                "+        # override_config works as expected.",
                "+        oidc_config.update(config.get(\"oidc_config\", {}))",
                "+        config[\"oidc_config\"] = oidc_config",
                "+",
                "+        # whitelist this client URI so we redirect straight to it rather than",
                "+        # serving a confirmation page",
                "+        config[\"sso\"] = {\"client_whitelist\": [\"https://whitelisted.client\"]}",
                "+        return config",
                "+",
                "+    def create_resource_dict(self) -> Dict[str, Resource]:",
                "+        d = super().create_resource_dict()",
                "+        d[\"/_synapse/client/pick_username\"] = pick_username_resource(self.hs)",
                "+        return d",
                "+",
                "+    def test_username_picker(self):",
                "+        \"\"\"Test the happy path of a username picker flow.\"\"\"",
                "+        client_redirect_url = \"https://whitelisted.client\"",
                "+",
                "+        # first of all, mock up an OIDC callback to the OidcHandler, which should",
                "+        # raise a RedirectException",
                "+        userinfo = {\"sub\": \"tester\", \"displayname\": \"Jonny\"}",
                "+        f = self.get_failure(",
                "+            _make_callback_with_userinfo(",
                "+                self.hs, userinfo, client_redirect_url=client_redirect_url",
                "+            ),",
                "+            RedirectException,",
                "+        )",
                "+",
                "+        # check the Location and cookies returned by the RedirectException",
                "+        self.assertEqual(f.value.location, b\"/_synapse/client/pick_username\")",
                "+        cookieheader = f.value.cookies[0]",
                "+        regex = re.compile(b\"^username_mapping_session=([a-zA-Z]+);\")",
                "+        m = regex.search(cookieheader)",
                "+        if not m:",
                "+            self.fail(\"cookie header %s does not match %s\" % (cookieheader, regex))",
                "+",
                "+        # introspect the sso handler a bit to check that the username mapping session",
                "+        # looks ok.",
                "+        session_id = m.group(1).decode(\"ascii\")",
                "+        username_mapping_sessions = self.hs.get_sso_handler()._username_mapping_sessions",
                "+        self.assertIn(",
                "+            session_id, username_mapping_sessions, \"session id not found in map\"",
                "+        )",
                "+        session = username_mapping_sessions[session_id]",
                "+        self.assertEqual(session.remote_user_id, \"tester\")",
                "+        self.assertEqual(session.display_name, \"Jonny\")",
                "+        self.assertEqual(session.client_redirect_url, client_redirect_url)",
                "+",
                "+        # the expiry time should be about 15 minutes away",
                "+        expected_expiry = self.clock.time_msec() + (15 * 60 * 1000)",
                "+        self.assertApproximates(session.expiry_time_ms, expected_expiry, tolerance=1000)",
                "+",
                "+        # Now, submit a username to the username picker, which should serve a redirect",
                "+        # back to the client",
                "+        submit_path = f.value.location + b\"/submit\"",
                "+        content = urlencode({b\"username\": b\"bobby\"}).encode(\"utf8\")",
                "+        chan = self.make_request(",
                "+            \"POST\",",
                "+            path=submit_path,",
                "+            content=content,",
                "+            content_is_form=True,",
                "+            custom_headers=[",
                "+                (\"Cookie\", cookieheader),",
                "+                # old versions of twisted don't do form-parsing without a valid",
                "+                # content-length header.",
                "+                (\"Content-Length\", str(len(content))),",
                "+            ],",
                "+        )",
                "+        self.assertEqual(chan.code, 302, chan.result)",
                "+        location_headers = chan.headers.getRawHeaders(\"Location\")",
                "+        # ensure that the returned location starts with the requested redirect URL",
                "+        self.assertEqual(",
                "+            location_headers[0][: len(client_redirect_url)], client_redirect_url",
                "+        )",
                "+",
                "+        # fish the login token out of the returned redirect uri",
                "+        parts = urlparse(location_headers[0])",
                "+        query = parse_qs(parts.query)",
                "+        login_token = query[\"loginToken\"][0]",
                "+",
                "+        # finally, submit the matrix login token to the login API, which gives us our",
                "+        # matrix access token, mxid, and device id.",
                "+        chan = self.make_request(",
                "+            \"POST\", \"/login\", content={\"type\": \"m.login.token\", \"token\": login_token},",
                "+        )",
                "+        self.assertEqual(chan.code, 200, chan.result)",
                "+        self.assertEqual(chan.json_body[\"user_id\"], \"@bobby:test\")",
                "+",
                "diff --git a/tests/unittest.py b/tests/unittest.py",
                "index 39e5e7b85..af7f752c5 100644",
                "--- a/tests/unittest.py",
                "+++ b/tests/unittest.py",
                "@@ -22,3 +22,3 @@ import logging",
                " import time",
                "-from typing import Dict, Optional, Type, TypeVar, Union",
                "+from typing import Dict, Iterable, Optional, Tuple, Type, TypeVar, Union",
                "@@ -385,2 +385,5 @@ class HomeserverTestCase(TestCase):",
                "         await_result: bool = True,",
                "+        custom_headers: Optional[",
                "+            Iterable[Tuple[Union[bytes, str], Union[bytes, str]]]",
                "+        ] = None,",
                "     ) -> FakeChannel:",
                "@@ -407,2 +410,4 @@ class HomeserverTestCase(TestCase):",
                "+            custom_headers: (name, value) pairs to add as request headers",
                "+",
                "         Returns:",
                "@@ -422,2 +427,3 @@ class HomeserverTestCase(TestCase):",
                "             await_result,",
                "+            custom_headers,",
                "         )"
            ],
            "changed_files": [
                "changelog.d/8942.feature",
                "docs/sample_config.yaml",
                "synapse/app/homeserver.py",
                "synapse/config/oidc_config.py",
                "synapse/handlers/oidc_handler.py",
                "synapse/handlers/sso.py",
                "synapse/res/username_picker/index.html",
                "synapse/res/username_picker/script.js",
                "synapse/res/username_picker/style.css",
                "synapse/rest/synapse/client/pick_username.py",
                "synapse/types.py",
                "tests/handlers/test_oidc.py",
                "tests/unittest.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8942": "Use username picker from synapse core matrix-org/matrix-synapse-saml-mozilla#12 Potential bug when using SAML and workers might result in \"Unsolicited response\" errors #7530",
                "8876": "Support multiple SSO identity providers during login/UIA flow #8927 Push login completion down into SsoHandler #8941 Implement a username picker for synapse #8942"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8942, 8942",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: redirect, resource",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: homeserver, server",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8942, 8876",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3ad699cc65dc55d4329a59a5f621ac4dadaa0fc5",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608130324,
            "hunks": 2,
            "message": "Fix generate_log_config script (#8952) It used to write an empty file if you gave it a -o arg.",
            "diff": [
                "diff --git a/changelog.d/8952.misc b/changelog.d/8952.misc",
                "new file mode 100644",
                "index 000000000..4c4a87464",
                "--- /dev/null",
                "+++ b/changelog.d/8952.misc",
                "@@ -0,0 +1 @@",
                "+Fix bug in `generate_log_config` script which made it write empty files.",
                "diff --git a/scripts/generate_log_config b/scripts/generate_log_config",
                "index b6957f48a..a13a5634a 100755",
                "--- a/scripts/generate_log_config",
                "+++ b/scripts/generate_log_config",
                "@@ -42,2 +42,4 @@ if __name__ == \"__main__\":",
                "     args = parser.parse_args()",
                "-    args.output_file.write(DEFAULT_LOG_CONFIG.substitute(log_file=args.log_file))",
                "+    out = args.output_file",
                "+    out.write(DEFAULT_LOG_CONFIG.substitute(log_file=args.log_file))",
                "+    out.flush()"
            ],
            "changed_files": [
                "changelog.d/8952.misc",
                "scripts/generate_log_config"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8952": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8952, 8952",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: write, file",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8952",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7a332850e6fea9585ac440a76a827e7a93663d89",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608130406,
            "hunks": 0,
            "message": "Merge pull request #8951 from matrix-org/rav/username_picker_2 More preparatory refactoring of the OidcHandler tests",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8951": "Implement a username picker for synapse #8942"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8951, 8951",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8951",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3e8292d48324d329c188d0125cdec4020ddc39ff",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607529792,
            "hunks": 0,
            "message": "Merge pull request #8906 from matrix-org/rav/fix_multiarch_builds Pin the docker version for multiarch builds",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8906": "Missing arm64 and armv7 docker builds #8907"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8906, 8906",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request, version",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8906",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4136255d3cd733d3b9997f3f23a837d76cec7aaf",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608294375,
            "hunks": 3,
            "message": "Ensure that a URL exists in the content during push. (#8965) This fixes an KeyError exception, after this PR the content is just considered unknown.",
            "diff": [
                "diff --git a/changelog.d/8965.bugfix b/changelog.d/8965.bugfix",
                "new file mode 100644",
                "index 000000000..cbccebddb",
                "--- /dev/null",
                "+++ b/changelog.d/8965.bugfix",
                "@@ -0,0 +1 @@",
                "+Fix a longstanding bug where a `m.image` event without a `url` would cause errors on push.",
                "diff --git a/synapse/push/mailer.py b/synapse/push/mailer.py",
                "index 9ff092e8b..4d875dcb9 100644",
                "--- a/synapse/push/mailer.py",
                "+++ b/synapse/push/mailer.py",
                "@@ -488,3 +488,7 @@ class Mailer:",
                "     ) -> None:",
                "-        messagevars[\"image_url\"] = event.content[\"url\"]",
                "+        \"\"\"",
                "+        Potentially add an image URL to the message variables.",
                "+        \"\"\"",
                "+        if \"url\" in event.content:",
                "+            messagevars[\"image_url\"] = event.content[\"url\"]",
                "diff --git a/synapse/res/templates/notif.html b/synapse/res/templates/notif.html",
                "index 6d76064d1..0aaef97df 100644",
                "--- a/synapse/res/templates/notif.html",
                "+++ b/synapse/res/templates/notif.html",
                "@@ -31,3 +31,3 @@",
                "                         {{ message.body_text_html }}",
                "-                    {%- elif message.msgtype == \"m.image\" %}",
                "+                    {%- elif message.msgtype == \"m.image\" and message.image_url %}",
                "                         <img src=\"{{ message.image_url|mxc_to_http(640, 480, scale) }}\" />"
            ],
            "changed_files": [
                "changelog.d/8965.bugfix",
                "synapse/push/mailer.py",
                "synapse/res/templates/notif.html"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8965": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8965, 8965",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: know",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8965",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1619802228033455ff6e5863c52556996b38e8c6",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607973587,
            "hunks": 22,
            "message": "Various clean-ups to the logging context code (#8935)",
            "diff": [
                "diff --git a/changelog.d/8916.misc b/changelog.d/8916.misc",
                "index c71ef480e..bf94135fd 100644",
                "--- a/changelog.d/8916.misc",
                "+++ b/changelog.d/8916.misc",
                "@@ -1 +1 @@",
                "-Improve structured logging tests.",
                "+Various clean-ups to the structured logging and logging context code.",
                "diff --git a/changelog.d/8935.misc b/changelog.d/8935.misc",
                "new file mode 100644",
                "index 000000000..bf94135fd",
                "--- /dev/null",
                "+++ b/changelog.d/8935.misc",
                "@@ -0,0 +1 @@",
                "+Various clean-ups to the structured logging and logging context code.",
                "diff --git a/synapse/config/logger.py b/synapse/config/logger.py",
                "index d4e887a3e..4df3f93c1 100644",
                "--- a/synapse/config/logger.py",
                "+++ b/synapse/config/logger.py",
                "@@ -208,3 +208,3 @@ def _setup_stdlib_logging(config, log_config_path, logBeginner: LogBeginner) ->",
                "-    log_context_filter = LoggingContextFilter(request=\"\")",
                "+    log_context_filter = LoggingContextFilter()",
                "     log_metadata_filter = MetadataFilter({\"server_name\": config.server_name})",
                "diff --git a/synapse/http/site.py b/synapse/http/site.py",
                "index 5f0581dc3..5a5790831 100644",
                "--- a/synapse/http/site.py",
                "+++ b/synapse/http/site.py",
                "@@ -130,4 +130,3 @@ class SynapseRequest(Request):",
                "         request_id = self.get_request_id()",
                "-        logcontext = self.logcontext = LoggingContext(request_id)",
                "-        logcontext.request = request_id",
                "+        self.logcontext = LoggingContext(request_id, request=request_id)",
                "diff --git a/synapse/logging/context.py b/synapse/logging/context.py",
                "index ca0c774cc..a507a83e9 100644",
                "--- a/synapse/logging/context.py",
                "+++ b/synapse/logging/context.py",
                "@@ -205,6 +205,2 @@ class _Sentinel:",
                "-    def copy_to_twisted_log_entry(self, record):",
                "-        record[\"request\"] = None",
                "-        record[\"scope\"] = None",
                "-",
                "     def start(self, rusage: \"Optional[resource._RUsage]\"):",
                "@@ -374,9 +370,2 @@ class LoggingContext:",
                "-    def copy_to_twisted_log_entry(self, record) -> None:",
                "-        \"\"\"",
                "-        Copy logging fields from this context to a Twisted log record.",
                "-        \"\"\"",
                "-        record[\"request\"] = self.request",
                "-        record[\"scope\"] = self.scope",
                "-",
                "     def start(self, rusage: \"Optional[resource._RUsage]\") -> None:",
                "@@ -544,9 +533,6 @@ class LoggingContextFilter(logging.Filter):",
                "     record.",
                "-    Args:",
                "-        **defaults: Default values to avoid formatters complaining about",
                "-            missing fields",
                "     \"\"\"",
                "-    def __init__(self, **defaults) -> None:",
                "-        self.defaults = defaults",
                "+    def __init__(self, request: str = \"\"):",
                "+        self._default_request = request",
                "@@ -558,4 +544,3 @@ class LoggingContextFilter(logging.Filter):",
                "         context = current_context()",
                "-        for key, value in self.defaults.items():",
                "-            setattr(record, key, value)",
                "+        record.request = self._default_request",
                "@@ -565,3 +550,4 @@ class LoggingContextFilter(logging.Filter):",
                "         if context is not None:",
                "-            context.copy_to(record)",
                "+            # Logging is interested in the request.",
                "+            record.request = context.request",
                "diff --git a/synapse/metrics/background_process_metrics.py b/synapse/metrics/background_process_metrics.py",
                "index 76b7decf2..70e0fa45d 100644",
                "--- a/synapse/metrics/background_process_metrics.py",
                "+++ b/synapse/metrics/background_process_metrics.py",
                "@@ -201,4 +201,3 @@ def run_as_background_process(desc: str, func, *args, bg_start_span=True, **kwar",
                "-        with BackgroundProcessLoggingContext(desc) as context:",
                "-            context.request = \"%s-%i\" % (desc, count)",
                "+        with BackgroundProcessLoggingContext(desc, \"%s-%i\" % (desc, count)) as context:",
                "             try:",
                "@@ -246,4 +245,4 @@ class BackgroundProcessLoggingContext(LoggingContext):",
                "-    def __init__(self, name: str):",
                "-        super().__init__(name)",
                "+    def __init__(self, name: str, request: Optional[str] = None):",
                "+        super().__init__(name, request=request)",
                "diff --git a/synapse/replication/tcp/protocol.py b/synapse/replication/tcp/protocol.py",
                "index a509e599c..804da994e 100644",
                "--- a/synapse/replication/tcp/protocol.py",
                "+++ b/synapse/replication/tcp/protocol.py",
                "@@ -174,4 +174,3 @@ class BaseReplicationStreamProtocol(LineOnlyReceiver):",
                "         ctx_name = \"replication-conn-%s\" % self.conn_id",
                "-        self._logging_context = BackgroundProcessLoggingContext(ctx_name)",
                "-        self._logging_context.request = ctx_name",
                "+        self._logging_context = BackgroundProcessLoggingContext(ctx_name, ctx_name)",
                "diff --git a/tests/handlers/test_federation.py b/tests/handlers/test_federation.py",
                "index d0452e149..0b24b89a2 100644",
                "--- a/tests/handlers/test_federation.py",
                "+++ b/tests/handlers/test_federation.py",
                "@@ -128,3 +128,3 @@ class FederationTestCase(unittest.HomeserverTestCase):",
                "-        with LoggingContext(request=\"send_rejected\"):",
                "+        with LoggingContext(\"send_rejected\"):",
                "             d = run_in_background(self.handler.on_receive_pdu, OTHER_SERVER, ev)",
                "@@ -180,3 +180,3 @@ class FederationTestCase(unittest.HomeserverTestCase):",
                "-        with LoggingContext(request=\"send_rejected\"):",
                "+        with LoggingContext(\"send_rejected\"):",
                "             d = run_in_background(self.handler.on_receive_pdu, OTHER_SERVER, ev)",
                "@@ -200,3 +200,3 @@ class FederationTestCase(unittest.HomeserverTestCase):",
                "         join_event.signatures[other_server] = {\"x\": \"y\"}",
                "-        with LoggingContext(request=\"send_join\"):",
                "+        with LoggingContext(\"send_join\"):",
                "             d = run_in_background(",
                "diff --git a/tests/logging/test_terse_json.py b/tests/logging/test_terse_json.py",
                "index f6e7e5fda..48a74e2ee 100644",
                "--- a/tests/logging/test_terse_json.py",
                "+++ b/tests/logging/test_terse_json.py",
                "@@ -119,7 +119,6 @@ class TerseJsonTestCase(LoggerCleanupMixin, TestCase):",
                "         handler.setFormatter(JsonFormatter())",
                "-        handler.addFilter(LoggingContextFilter(request=\"\"))",
                "+        handler.addFilter(LoggingContextFilter())",
                "         logger = self.get_logger(handler)",
                "-        with LoggingContext() as context_one:",
                "-            context_one.request = \"test\"",
                "+        with LoggingContext(request=\"test\"):",
                "             logger.info(\"Hello there, %s!\", \"wally\")",
                "@@ -134,3 +133,2 @@ class TerseJsonTestCase(LoggerCleanupMixin, TestCase):",
                "             \"request\",",
                "-            \"scope\",",
                "         ]",
                "@@ -139,2 +137 @@ class TerseJsonTestCase(LoggerCleanupMixin, TestCase):",
                "         self.assertEqual(log[\"request\"], \"test\")",
                "-        self.assertIsNone(log[\"scope\"])",
                "diff --git a/tests/test_federation.py b/tests/test_federation.py",
                "index fa45f8b3b..fc9aab32d 100644",
                "--- a/tests/test_federation.py",
                "+++ b/tests/test_federation.py",
                "@@ -136,3 +136,3 @@ class MessageAcceptTests(unittest.HomeserverTestCase):",
                "-        with LoggingContext(request=\"lying_event\"):",
                "+        with LoggingContext():",
                "             failure = self.get_failure(",
                "diff --git a/tests/test_utils/logging_setup.py b/tests/test_utils/logging_setup.py",
                "index fdfb840b6..52ae5c571 100644",
                "--- a/tests/test_utils/logging_setup.py",
                "+++ b/tests/test_utils/logging_setup.py",
                "@@ -50,3 +50,3 @@ def setup_logging():",
                "     handler.setFormatter(formatter)",
                "-    handler.addFilter(LoggingContextFilter(request=\"\"))",
                "+    handler.addFilter(LoggingContextFilter())",
                "     root_logger.addHandler(handler)"
            ],
            "changed_files": [
                "changelog.d/8916.misc",
                "changelog.d/8935.misc",
                "synapse/config/logger.py",
                "synapse/http/site.py",
                "synapse/logging/context.py",
                "synapse/metrics/background_process_metrics.py",
                "synapse/replication/tcp/protocol.py",
                "tests/handlers/test_federation.py",
                "tests/logging/test_terse_json.py",
                "tests/test_federation.py",
                "tests/test_utils/logging_setup.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8935": "Add type hints to the logging context code. #8939 Regression in log context tracking #9048"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8935, 8935",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: federation",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8935",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "56e00ca85e502247112a95ab8c452c83ab5fc4b0",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608307317,
            "hunks": 6,
            "message": "Send the location of the web client to the IS when inviting via 3PIDs. (#8930) Adds a new setting `email.invite_client_location` which, if defined, is passed to the identity server during invites.",
            "diff": [
                "diff --git a/changelog.d/8930.feature b/changelog.d/8930.feature",
                "new file mode 100644",
                "index 000000000..cb305b526",
                "--- /dev/null",
                "+++ b/changelog.d/8930.feature",
                "@@ -0,0 +1 @@",
                "+Add an `email.invite_client_location` configuration option to send a web client location to the invite endpoint on the identity server which allows customisation of the email template.",
                "diff --git a/docs/sample_config.yaml b/docs/sample_config.yaml",
                "index 077cb619c..0b4dd115f 100644",
                "--- a/docs/sample_config.yaml",
                "+++ b/docs/sample_config.yaml",
                "@@ -2151,2 +2151,8 @@ email:",
                "+  # The web client location to direct users to during an invite. This is passed",
                "+  # to the identity server as the org.matrix.web_client_location key. Defaults",
                "+  # to unset, giving no guidance to the identity server.",
                "+  #",
                "+  #invite_client_location: https://app.element.io",
                "+",
                "   # Directory in which Synapse will try to find the template files below.",
                "diff --git a/synapse/config/emailconfig.py b/synapse/config/emailconfig.py",
                "index 7c8b64d84..d4328c46b 100644",
                "--- a/synapse/config/emailconfig.py",
                "+++ b/synapse/config/emailconfig.py",
                "@@ -324,2 +324,18 @@ class EmailConfig(Config):",
                "+        # The invite client location should be a HTTP(S) URL or None.",
                "+        self.invite_client_location = email_config.get(\"invite_client_location\") or None",
                "+        if self.invite_client_location:",
                "+            if not isinstance(self.invite_client_location, str):",
                "+                raise ConfigError(",
                "+                    \"Config option email.invite_client_location must be type str\"",
                "+                )",
                "+            if not (",
                "+                self.invite_client_location.startswith(\"http://\")",
                "+                or self.invite_client_location.startswith(\"https://\")",
                "+            ):",
                "+                raise ConfigError(",
                "+                    \"Config option email.invite_client_location must be a http or https URL\",",
                "+                    path=(\"email\", \"invite_client_location\"),",
                "+                )",
                "+",
                "     def generate_config_section(self, config_dir_path, server_name, **kwargs):",
                "@@ -391,2 +407,8 @@ class EmailConfig(Config):",
                "+          # The web client location to direct users to during an invite. This is passed",
                "+          # to the identity server as the org.matrix.web_client_location key. Defaults",
                "+          # to unset, giving no guidance to the identity server.",
                "+          #",
                "+          #invite_client_location: https://app.element.io",
                "+",
                "           # Directory in which Synapse will try to find the template files below.",
                "diff --git a/synapse/handlers/identity.py b/synapse/handlers/identity.py",
                "index 7301c2471..c05036ad1 100644",
                "--- a/synapse/handlers/identity.py",
                "+++ b/synapse/handlers/identity.py",
                "@@ -57,2 +57,4 @@ class IdentityHandler(BaseHandler):",
                "+        self._web_client_location = hs.config.invite_client_location",
                "+",
                "     async def threepid_from_creds(",
                "@@ -805,2 +807,5 @@ class IdentityHandler(BaseHandler):",
                "         }",
                "+        # If a custom web client location is available, include it in the request.",
                "+        if self._web_client_location:",
                "+            invite_config[\"org.matrix.web_client_location\"] = self._web_client_location"
            ],
            "changed_files": [
                "changelog.d/8930.feature",
                "docs/sample_config.yaml",
                "synapse/config/emailconfig.py",
                "synapse/handlers/identity.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8930": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8930, 8930",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: setting, server",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8930",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ab7a24cc6bbffa5ba67b42731c45b1d4d33f3ae3",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607436275,
            "hunks": 31,
            "message": "Better formatting for config errors from modules (#8874) The idea is that the parse_config method of extension modules can raise either a ConfigError or a JsonValidationError, and it will be magically turned into a legible error message. There's a few components to it: * Separating the \"path\" and the \"message\" parts of a ConfigError, so that we can fiddle with the path bit to turn it    into an absolute path. * Generally improving the way ConfigErrors get printed. * Passing in the config path to load_module so that it can wrap any exceptions that get caught appropriately.",
            "diff": [
                "diff --git a/changelog.d/8874.feature b/changelog.d/8874.feature",
                "new file mode 100644",
                "index 000000000..720665eca",
                "--- /dev/null",
                "+++ b/changelog.d/8874.feature",
                "@@ -0,0 +1 @@",
                "+Improve the error messages printed as a result of configuration problems for extension modules.",
                "diff --git a/synapse/app/homeserver.py b/synapse/app/homeserver.py",
                "index 2b5465417..bbb740783 100644",
                "--- a/synapse/app/homeserver.py",
                "+++ b/synapse/app/homeserver.py",
                "@@ -21,3 +21,3 @@ import os",
                " import sys",
                "-from typing import Iterable",
                "+from typing import Iterable, Iterator",
                "@@ -92,3 +92,3 @@ class SynapseHomeServer(HomeServer):",
                "         if site_tag is None:",
                "-            site_tag = port",
                "+            site_tag = str(port)",
                "@@ -109,3 +109,6 @@ class SynapseHomeServer(HomeServer):",
                "         for path, resmodule in additional_resources.items():",
                "-            handler_cls, config = load_module(resmodule)",
                "+            handler_cls, config = load_module(",
                "+                resmodule,",
                "+                (\"listeners\", site_tag, \"additional_resources\", \"<%s>\" % (path,)),",
                "+            )",
                "             handler = handler_cls(config, module_api)",
                "@@ -344,3 +347,6 @@ def setup(config_options):",
                "     except ConfigError as e:",
                "-        sys.stderr.write(\"\\nERROR: %s\\n\" % (e,))",
                "+        sys.stderr.write(\"\\n\")",
                "+        for f in format_config_error(e):",
                "+            sys.stderr.write(f)",
                "+        sys.stderr.write(\"\\n\")",
                "         sys.exit(1)",
                "@@ -447,2 +453,34 @@ def setup(config_options):",
                "+def format_config_error(e: ConfigError) -> Iterator[str]:",
                "+    \"\"\"",
                "+    Formats a config error neatly",
                "+",
                "+    The idea is to format the immediate error, plus the \"causes\" of those errors,",
                "+    hopefully in a way that makes sense to the user. For example:",
                "+",
                "+        Error in configuration at 'oidc_config.user_mapping_provider.config.display_name_template':",
                "+          Failed to parse config for module 'JinjaOidcMappingProvider':",
                "+            invalid jinja template:",
                "+              unexpected end of template, expected 'end of print statement'.",
                "+",
                "+    Args:",
                "+        e: the error to be formatted",
                "+",
                "+    Returns: An iterator which yields string fragments to be formatted",
                "+    \"\"\"",
                "+    yield \"Error in configuration\"",
                "+",
                "+    if e.path:",
                "+        yield \" at '%s'\" % (\".\".join(e.path),)",
                "+",
                "+    yield \":\\n  %s\" % (e.msg,)",
                "+",
                "+    e = e.__cause__",
                "+    indent = 1",
                "+    while e:",
                "+        indent += 1",
                "+        yield \":\\n%s%s\" % (\"  \" * indent, str(e))",
                "+        e = e.__cause__",
                "+",
                "+",
                " class SynapseService(service.Service):",
                "diff --git a/synapse/config/_base.py b/synapse/config/_base.py",
                "index 85f65da4d..2931a8820 100644",
                "--- a/synapse/config/_base.py",
                "+++ b/synapse/config/_base.py",
                "@@ -25,3 +25,3 @@ from hashlib import sha256",
                " from textwrap import dedent",
                "-from typing import Any, Callable, List, MutableMapping, Optional",
                "+from typing import Any, Callable, Iterable, List, MutableMapping, Optional",
                "@@ -34,3 +34,13 @@ import yaml",
                " class ConfigError(Exception):",
                "-    pass",
                "+    \"\"\"Represents a problem parsing the configuration",
                "+",
                "+    Args:",
                "+        msg:  A textual description of the error.",
                "+        path: Where appropriate, an indication of where in the configuration",
                "+           the problem lies.",
                "+    \"\"\"",
                "+",
                "+    def __init__(self, msg: str, path: Optional[Iterable[str]] = None):",
                "+        self.msg = msg",
                "+        self.path = path",
                "diff --git a/synapse/config/_base.pyi b/synapse/config/_base.pyi",
                "index b8faafa9b..ed26e2fb6 100644",
                "--- a/synapse/config/_base.pyi",
                "+++ b/synapse/config/_base.pyi",
                "@@ -1,2 +1,2 @@",
                "-from typing import Any, List, Optional",
                "+from typing import Any, Iterable, List, Optional",
                "@@ -37,3 +37,6 @@ from synapse.config import (",
                "-class ConfigError(Exception): ...",
                "+class ConfigError(Exception):",
                "+    def __init__(self, msg: str, path: Optional[Iterable[str]] = None):",
                "+        self.msg = msg",
                "+        self.path = path",
                "diff --git a/synapse/config/_util.py b/synapse/config/_util.py",
                "index c74969a97..1bbe83c31 100644",
                "--- a/synapse/config/_util.py",
                "+++ b/synapse/config/_util.py",
                "@@ -40,12 +40,25 @@ def validate_config(",
                "     except jsonschema.ValidationError as e:",
                "-        # copy `config_path` before modifying it.",
                "-        path = list(config_path)",
                "-        for p in list(e.path):",
                "-            if isinstance(p, int):",
                "-                path.append(\"<item %i>\" % p)",
                "-            else:",
                "-                path.append(str(p))",
                "-",
                "-        raise ConfigError(",
                "-            \"Unable to parse configuration: %s at %s\" % (e.message, \".\".join(path))",
                "-        )",
                "+        raise json_error_to_config_error(e, config_path)",
                "+",
                "+",
                "+def json_error_to_config_error(",
                "+    e: jsonschema.ValidationError, config_path: Iterable[str]",
                "+) -> ConfigError:",
                "+    \"\"\"Converts a json validation error to a user-readable ConfigError",
                "+",
                "+    Args:",
                "+        e: the exception to be converted",
                "+        config_path: the path within the config file. This will be used as a basis",
                "+           for the error message.",
                "+",
                "+    Returns:",
                "+        a ConfigError",
                "+    \"\"\"",
                "+    # copy `config_path` before modifying it.",
                "+    path = list(config_path)",
                "+    for p in list(e.path):",
                "+        if isinstance(p, int):",
                "+            path.append(\"<item %i>\" % p)",
                "+        else:",
                "+            path.append(str(p))",
                "+    return ConfigError(e.message, path)",
                "diff --git a/synapse/config/oidc_config.py b/synapse/config/oidc_config.py",
                "index 69d188341..1abf8ed40 100644",
                "--- a/synapse/config/oidc_config.py",
                "+++ b/synapse/config/oidc_config.py",
                "@@ -68,3 +68,3 @@ class OIDCConfig(Config):",
                "             self.oidc_user_mapping_provider_config,",
                "-        ) = load_module(ump_config)",
                "+        ) = load_module(ump_config, (\"oidc_config\", \"user_mapping_provider\"))",
                "diff --git a/synapse/config/password_auth_providers.py b/synapse/config/password_auth_providers.py",
                "index 4fda8ae98..85d07c4f8 100644",
                "--- a/synapse/config/password_auth_providers.py",
                "+++ b/synapse/config/password_auth_providers.py",
                "@@ -38,3 +38,3 @@ class PasswordAuthProviderConfig(Config):",
                "         providers.extend(config.get(\"password_providers\") or [])",
                "-        for provider in providers:",
                "+        for i, provider in enumerate(providers):",
                "             mod_name = provider[\"module\"]",
                "@@ -47,3 +47,4 @@ class PasswordAuthProviderConfig(Config):",
                "             (provider_class, provider_config) = load_module(",
                "-                {\"module\": mod_name, \"config\": provider[\"config\"]}",
                "+                {\"module\": mod_name, \"config\": provider[\"config\"]},",
                "+                (\"password_providers\", \"<item %i>\" % i),",
                "             )",
                "diff --git a/synapse/config/repository.py b/synapse/config/repository.py",
                "index ba1e9d236..17ce9145e 100644",
                "--- a/synapse/config/repository.py",
                "+++ b/synapse/config/repository.py",
                "@@ -144,3 +144,3 @@ class ContentRepositoryConfig(Config):",
                "-        for provider_config in storage_providers:",
                "+        for i, provider_config in enumerate(storage_providers):",
                "             # We special case the module \"file_system\" so as not to need to",
                "@@ -153,3 +153,5 @@ class ContentRepositoryConfig(Config):",
                "-            provider_class, parsed_config = load_module(provider_config)",
                "+            provider_class, parsed_config = load_module(",
                "+                provider_config, (\"media_storage_providers\", \"<item %i>\" % i)",
                "+            )",
                "diff --git a/synapse/config/room_directory.py b/synapse/config/room_directory.py",
                "index 92e1b6752..9a3e1c3e7 100644",
                "--- a/synapse/config/room_directory.py",
                "+++ b/synapse/config/room_directory.py",
                "@@ -182,3 +182,3 @@ class _RoomDirectoryRule:",
                "         except Exception as e:",
                "-            raise ConfigError(\"Failed to parse glob into regex: %s\", e)",
                "+            raise ConfigError(\"Failed to parse glob into regex\") from e",
                "diff --git a/synapse/config/saml2_config.py b/synapse/config/saml2_config.py",
                "index c1b8e98ae..7b97d4f11 100644",
                "--- a/synapse/config/saml2_config.py",
                "+++ b/synapse/config/saml2_config.py",
                "@@ -127,3 +127,3 @@ class SAML2Config(Config):",
                "             self.saml2_user_mapping_provider_config,",
                "-        ) = load_module(ump_dict)",
                "+        ) = load_module(ump_dict, (\"saml2_config\", \"user_mapping_provider\"))",
                "diff --git a/synapse/config/spam_checker.py b/synapse/config/spam_checker.py",
                "index 3d067d29d..3d05abc15 100644",
                "--- a/synapse/config/spam_checker.py",
                "+++ b/synapse/config/spam_checker.py",
                "@@ -35,9 +35,10 @@ class SpamCheckerConfig(Config):",
                "             # to see if the option resolves to a dictionary",
                "-            self.spam_checkers.append(load_module(spam_checkers))",
                "+            self.spam_checkers.append(load_module(spam_checkers, (\"spam_checker\",)))",
                "         elif isinstance(spam_checkers, list):",
                "-            for spam_checker in spam_checkers:",
                "+            for i, spam_checker in enumerate(spam_checkers):",
                "+                config_path = (\"spam_checker\", \"<item %i>\" % i)",
                "                 if not isinstance(spam_checker, dict):",
                "-                    raise ConfigError(\"spam_checker syntax is incorrect\")",
                "+                    raise ConfigError(\"expected a mapping\", config_path)",
                "-                self.spam_checkers.append(load_module(spam_checker))",
                "+                self.spam_checkers.append(load_module(spam_checker, config_path))",
                "         else:",
                "diff --git a/synapse/config/third_party_event_rules.py b/synapse/config/third_party_event_rules.py",
                "index 10a99c792..c04e1c4e0 100644",
                "--- a/synapse/config/third_party_event_rules.py",
                "+++ b/synapse/config/third_party_event_rules.py",
                "@@ -28,3 +28,5 @@ class ThirdPartyRulesConfig(Config):",
                "         if provider is not None:",
                "-            self.third_party_event_rules = load_module(provider)",
                "+            self.third_party_event_rules = load_module(",
                "+                provider, (\"third_party_event_rules\",)",
                "+            )",
                "diff --git a/synapse/util/module_loader.py b/synapse/util/module_loader.py",
                "index 94b59afb3..1ee61851e 100644",
                "--- a/synapse/util/module_loader.py",
                "+++ b/synapse/util/module_loader.py",
                "@@ -17,10 +17,19 @@ import importlib",
                " import importlib.util",
                "+import itertools",
                "+from typing import Any, Iterable, Tuple, Type",
                "+",
                "+import jsonschema",
                " from synapse.config._base import ConfigError",
                "+from synapse.config._util import json_error_to_config_error",
                "-def load_module(provider):",
                "+def load_module(provider: dict, config_path: Iterable[str]) -> Tuple[Type, Any]:",
                "     \"\"\" Loads a synapse module with its config",
                "-    Take a dict with keys 'module' (the module name) and 'config'",
                "-    (the config dict).",
                "+",
                "+    Args:",
                "+        provider: a dict with keys 'module' (the module name) and 'config'",
                "+           (the config dict).",
                "+        config_path: the path within the config file. This will be used as a basis",
                "+           for any error message.",
                "@@ -29,5 +38,12 @@ def load_module(provider):",
                "     \"\"\"",
                "+",
                "+    modulename = provider.get(\"module\")",
                "+    if not isinstance(modulename, str):",
                "+        raise ConfigError(",
                "+            \"expected a string\", path=itertools.chain(config_path, (\"module\",))",
                "+        )",
                "+",
                "     # We need to import the module, and then pick the class out of",
                "     # that, so we split based on the last dot.",
                "-    module, clz = provider[\"module\"].rsplit(\".\", 1)",
                "+    module, clz = modulename.rsplit(\".\", 1)",
                "     module = importlib.import_module(module)",
                "@@ -35,6 +51,18 @@ def load_module(provider):",
                "+    module_config = provider.get(\"config\")",
                "     try:",
                "-        provider_config = provider_class.parse_config(provider.get(\"config\"))",
                "+        provider_config = provider_class.parse_config(module_config)",
                "+    except jsonschema.ValidationError as e:",
                "+        raise json_error_to_config_error(e, itertools.chain(config_path, (\"config\",)))",
                "+    except ConfigError as e:",
                "+        raise _wrap_config_error(",
                "+            \"Failed to parse config for module %r\" % (modulename,),",
                "+            prefix=itertools.chain(config_path, (\"config\",)),",
                "+            e=e,",
                "+        )",
                "     except Exception as e:",
                "-        raise ConfigError(\"Failed to parse config for %r: %s\" % (provider[\"module\"], e))",
                "+        raise ConfigError(",
                "+            \"Failed to parse config for module %r\" % (modulename,),",
                "+            path=itertools.chain(config_path, (\"config\",)),",
                "+        ) from e",
                "@@ -58 +86,25 @@ def load_python_module(location: str):",
                "     return mod",
                "+",
                "+",
                "+def _wrap_config_error(",
                "+    msg: str, prefix: Iterable[str], e: ConfigError",
                "+) -> \"ConfigError\":",
                "+    \"\"\"Wrap a relative ConfigError with a new path",
                "+",
                "+    This is useful when we have a ConfigError with a relative path due to a problem",
                "+    parsing part of the config, and we now need to set it in context.",
                "+    \"\"\"",
                "+    path = prefix",
                "+    if e.path:",
                "+        path = itertools.chain(prefix, e.path)",
                "+",
                "+    e1 = ConfigError(msg, path)",
                "+",
                "+    # ideally we would set the 'cause' of the new exception to the original exception;",
                "+    # however now that we have merged the path into our own, the stringification of",
                "+    # e will be incorrect, so instead we create a new exception with just the \"msg\"",
                "+    # part.",
                "+",
                "+    e1.__cause__ = Exception(e.msg)",
                "+    e1.__cause__.__cause__ = e.__cause__",
                "+    return e1"
            ],
            "changed_files": [
                "changelog.d/8874.feature",
                "synapse/app/homeserver.py",
                "synapse/config/_base.py",
                "synapse/config/_base.pyi",
                "synapse/config/_util.py",
                "synapse/config/oidc_config.py",
                "synapse/config/password_auth_providers.py",
                "synapse/config/repository.py",
                "synapse/config/room_directory.py",
                "synapse/config/saml2_config.py",
                "synapse/config/spam_checker.py",
                "synapse/config/third_party_event_rules.py",
                "synapse/util/module_loader.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8874": "Default to the blacklisting reserved IP ranges. #8870"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8874, 8874",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: homeserver, server",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8874",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ff1f0ee09472b554832fb39952f389d01a4233ac",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607368387,
            "hunks": 9,
            "message": "Call set_avatar_url with target_user, not user_id (#8872) * Call set_avatar_url with target_user, not user_id Fixes https://github.com/matrix-org/synapse/issues/8871 * Create 8872.bugfix * Update synapse/rest/admin/users.py Co-authored-by: Patrick Cloke <clokep@users.noreply.github.com> * Testing * Update changelog.d/8872.bugfix Co-authored-by: Andrew Morgan <1342360+anoadragon453@users.noreply.github.com> Co-authored-by: Patrick Cloke <clokep@users.noreply.github.com> Co-authored-by: Andrew Morgan <1342360+anoadragon453@users.noreply.github.com>",
            "diff": [
                "diff --git a/changelog.d/8872.bugfix b/changelog.d/8872.bugfix",
                "new file mode 100644",
                "index 000000000..ed00b70a0",
                "--- /dev/null",
                "+++ b/changelog.d/8872.bugfix",
                "@@ -0,0 +1 @@",
                "+Fix a bug where `PUT /_synapse/admin/v2/users/<user_id>` failed to create a new user when `avatar_url` is specified. Bug introduced in Synapse v1.9.0.",
                "diff --git a/synapse/rest/admin/users.py b/synapse/rest/admin/users.py",
                "index 90940ff18..88cba369f 100644",
                "--- a/synapse/rest/admin/users.py",
                "+++ b/synapse/rest/admin/users.py",
                "@@ -322,5 +322,5 @@ class UserRestServletV2(RestServlet):",
                "-            if \"avatar_url\" in body and type(body[\"avatar_url\"]) == str:",
                "+            if \"avatar_url\" in body and isinstance(body[\"avatar_url\"], str):",
                "                 await self.profile_handler.set_avatar_url(",
                "-                    user_id, requester, body[\"avatar_url\"], True",
                "+                    target_user, requester, body[\"avatar_url\"], True",
                "                 )",
                "diff --git a/tests/rest/admin/test_user.py b/tests/rest/admin/test_user.py",
                "index 35c546aa6..ba1438cdc 100644",
                "--- a/tests/rest/admin/test_user.py",
                "+++ b/tests/rest/admin/test_user.py",
                "@@ -563,3 +563,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "                 \"threepids\": [{\"medium\": \"email\", \"address\": \"bob@bob.bob\"}],",
                "-                \"avatar_url\": None,",
                "+                \"avatar_url\": \"mxc://fibble/wibble\",",
                "             }",
                "@@ -580,2 +580,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         self.assertEqual(True, channel.json_body[\"admin\"])",
                "+        self.assertEqual(\"mxc://fibble/wibble\", channel.json_body[\"avatar_url\"])",
                "@@ -594,2 +595,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         self.assertEqual(False, channel.json_body[\"deactivated\"])",
                "+        self.assertEqual(\"mxc://fibble/wibble\", channel.json_body[\"avatar_url\"])",
                "@@ -608,2 +610,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "                 \"threepids\": [{\"medium\": \"email\", \"address\": \"bob@bob.bob\"}],",
                "+                \"avatar_url\": \"mxc://fibble/wibble\",",
                "             }",
                "@@ -624,2 +627,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         self.assertEqual(False, channel.json_body[\"admin\"])",
                "+        self.assertEqual(\"mxc://fibble/wibble\", channel.json_body[\"avatar_url\"])",
                "@@ -638,2 +642,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         self.assertEqual(False, channel.json_body[\"deactivated\"])",
                "+        self.assertEqual(\"mxc://fibble/wibble\", channel.json_body[\"avatar_url\"])"
            ],
            "changed_files": [
                "changelog.d/8872.bugfix",
                "synapse/rest/admin/users.py",
                "tests/rest/admin/test_user.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8872": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8872, 8872",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: issue",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8872",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5d4c330ed979b0d60efe5f80fd76de8f162263a1",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608294837,
            "hunks": 41,
            "message": "Allow re-using a UI auth validation for a period of time (#8970)",
            "diff": [
                "diff --git a/changelog.d/8970.feature b/changelog.d/8970.feature",
                "new file mode 100644",
                "index 000000000..6d5b3303a",
                "--- /dev/null",
                "+++ b/changelog.d/8970.feature",
                "@@ -0,0 +1 @@",
                "+Allow re-using an user-interactive authentication session for a period of time.",
                "diff --git a/docs/sample_config.yaml b/docs/sample_config.yaml",
                "index 75a01094d..549c581a9 100644",
                "--- a/docs/sample_config.yaml",
                "+++ b/docs/sample_config.yaml",
                "@@ -2070,2 +2070,17 @@ password_config:",
                "+ui_auth:",
                "+    # The number of milliseconds to allow a user-interactive authentication",
                "+    # session to be active.",
                "+    #",
                "+    # This defaults to 0, meaning the user is queried for their credentials",
                "+    # before every action, but this can be overridden to alow a single",
                "+    # validation to be re-used.  This weakens the protections afforded by",
                "+    # the user-interactive authentication process, by allowing for multiple",
                "+    # (and potentially different) operations to use the same validation session.",
                "+    #",
                "+    # Uncomment below to allow for credential validation to last for 15",
                "+    # seconds.",
                "+    #",
                "+    #session_timeout: 15000",
                "+",
                "diff --git a/synapse/config/_base.pyi b/synapse/config/_base.pyi",
                "index ed26e2fb6..29aa064e5 100644",
                "--- a/synapse/config/_base.pyi",
                "+++ b/synapse/config/_base.pyi",
                "@@ -5,2 +5,3 @@ from synapse.config import (",
                "     appservice,",
                "+    auth,",
                "     captcha,",
                "@@ -16,3 +17,2 @@ from synapse.config import (",
                "     oidc_config,",
                "-    password,",
                "     password_auth_providers,",
                "@@ -67,3 +67,3 @@ class RootConfig:",
                "     jwt: jwt_config.JWTConfig",
                "-    password: password.PasswordConfig",
                "+    auth: auth.AuthConfig",
                "     email: emailconfig.EmailConfig",
                "diff --git a/synapse/config/auth.py b/synapse/config/auth.py",
                "new file mode 100644",
                "index 000000000..2b3e2ce87",
                "--- /dev/null",
                "+++ b/synapse/config/auth.py",
                "@@ -0,0 +1,110 @@",
                "+# -*- coding: utf-8 -*-",
                "+# Copyright 2015, 2016 OpenMarket Ltd",
                "+# Copyright 2020 The Matrix.org Foundation C.I.C.",
                "+#",
                "+# Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+# you may not use this file except in compliance with the License.",
                "+# You may obtain a copy of the License at",
                "+#",
                "+#     http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing, software",
                "+# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+# See the License for the specific language governing permissions and",
                "+# limitations under the License.",
                "+",
                "+from ._base import Config",
                "+",
                "+",
                "+class AuthConfig(Config):",
                "+    \"\"\"Password and login configuration",
                "+    \"\"\"",
                "+",
                "+    section = \"auth\"",
                "+",
                "+    def read_config(self, config, **kwargs):",
                "+        password_config = config.get(\"password_config\", {})",
                "+        if password_config is None:",
                "+            password_config = {}",
                "+",
                "+        self.password_enabled = password_config.get(\"enabled\", True)",
                "+        self.password_localdb_enabled = password_config.get(\"localdb_enabled\", True)",
                "+        self.password_pepper = password_config.get(\"pepper\", \"\")",
                "+",
                "+        # Password policy",
                "+        self.password_policy = password_config.get(\"policy\") or {}",
                "+        self.password_policy_enabled = self.password_policy.get(\"enabled\", False)",
                "+",
                "+        # User-interactive authentication",
                "+        ui_auth = config.get(\"ui_auth\") or {}",
                "+        self.ui_auth_session_timeout = ui_auth.get(\"session_timeout\", 0)",
                "+",
                "+    def generate_config_section(self, config_dir_path, server_name, **kwargs):",
                "+        return \"\"\"\\",
                "+        password_config:",
                "+           # Uncomment to disable password login",
                "+           #",
                "+           #enabled: false",
                "+",
                "+           # Uncomment to disable authentication against the local password",
                "+           # database. This is ignored if `enabled` is false, and is only useful",
                "+           # if you have other password_providers.",
                "+           #",
                "+           #localdb_enabled: false",
                "+",
                "+           # Uncomment and change to a secret random string for extra security.",
                "+           # DO NOT CHANGE THIS AFTER INITIAL SETUP!",
                "+           #",
                "+           #pepper: \"EVEN_MORE_SECRET\"",
                "+",
                "+           # Define and enforce a password policy. Each parameter is optional.",
                "+           # This is an implementation of MSC2000.",
                "+           #",
                "+           policy:",
                "+              # Whether to enforce the password policy.",
                "+              # Defaults to 'false'.",
                "+              #",
                "+              #enabled: true",
                "+",
                "+              # Minimum accepted length for a password.",
                "+              # Defaults to 0.",
                "+              #",
                "+              #minimum_length: 15",
                "+",
                "+              # Whether a password must contain at least one digit.",
                "+              # Defaults to 'false'.",
                "+              #",
                "+              #require_digit: true",
                "+",
                "+              # Whether a password must contain at least one symbol.",
                "+              # A symbol is any character that's not a number or a letter.",
                "+              # Defaults to 'false'.",
                "+              #",
                "+              #require_symbol: true",
                "+",
                "+              # Whether a password must contain at least one lowercase letter.",
                "+              # Defaults to 'false'.",
                "+              #",
                "+              #require_lowercase: true",
                "+",
                "+              # Whether a password must contain at least one lowercase letter.",
                "+              # Defaults to 'false'.",
                "+              #",
                "+              #require_uppercase: true",
                "+",
                "+        ui_auth:",
                "+            # The number of milliseconds to allow a user-interactive authentication",
                "+            # session to be active.",
                "+            #",
                "+            # This defaults to 0, meaning the user is queried for their credentials",
                "+            # before every action, but this can be overridden to alow a single",
                "+            # validation to be re-used.  This weakens the protections afforded by",
                "+            # the user-interactive authentication process, by allowing for multiple",
                "+            # (and potentially different) operations to use the same validation session.",
                "+            #",
                "+            # Uncomment below to allow for credential validation to last for 15",
                "+            # seconds.",
                "+            #",
                "+            #session_timeout: 15000",
                "+        \"\"\"",
                "diff --git a/synapse/config/homeserver.py b/synapse/config/homeserver.py",
                "index be6555452..4bd2b3587 100644",
                "--- a/synapse/config/homeserver.py",
                "+++ b/synapse/config/homeserver.py",
                "@@ -19,2 +19,3 @@ from .api import ApiConfig",
                " from .appservice import AppServiceConfig",
                "+from .auth import AuthConfig",
                " from .cache import CacheConfig",
                "@@ -32,3 +33,2 @@ from .metrics import MetricsConfig",
                " from .oidc_config import OIDCConfig",
                "-from .password import PasswordConfig",
                " from .password_auth_providers import PasswordAuthProviderConfig",
                "@@ -78,3 +78,3 @@ class HomeServerConfig(RootConfig):",
                "         JWTConfig,",
                "-        PasswordConfig,",
                "+        AuthConfig,",
                "         EmailConfig,",
                "diff --git a/synapse/handlers/auth.py b/synapse/handlers/auth.py",
                "index 57ff461f9..f4434673d 100644",
                "--- a/synapse/handlers/auth.py",
                "+++ b/synapse/handlers/auth.py",
                "@@ -228,2 +228,5 @@ class AuthHandler(BaseHandler):",
                "+        # The number of seconds to keep a UI auth session active.",
                "+        self._ui_auth_session_timeout = hs.config.ui_auth_session_timeout",
                "+",
                "         # Ratelimitier for failed /login attempts",
                "@@ -285,3 +288,3 @@ class AuthHandler(BaseHandler):",
                "         description: str,",
                "-    ) -> Tuple[dict, str]:",
                "+    ) -> Tuple[dict, Optional[str]]:",
                "         \"\"\"",
                "@@ -312,3 +315,4 @@ class AuthHandler(BaseHandler):",
                "                 'session_id' is the ID of this session, either passed in by the",
                "-                client or assigned by this call",
                "+                client or assigned by this call. This is None if UI auth was",
                "+                skipped (by re-using a previous validation).",
                "@@ -326,2 +330,12 @@ class AuthHandler(BaseHandler):",
                "+        if self._ui_auth_session_timeout:",
                "+            last_validated = await self.store.get_access_token_last_validated(",
                "+                requester.access_token_id",
                "+            )",
                "+            if self.clock.time_msec() - last_validated < self._ui_auth_session_timeout:",
                "+                # Return the input parameters, minus the auth key, which matches",
                "+                # the logic in check_ui_auth.",
                "+                request_body.pop(\"auth\", None)",
                "+                return request_body, None",
                "+",
                "         user_id = requester.user.to_string()",
                "@@ -361,2 +375,5 @@ class AuthHandler(BaseHandler):",
                "+        # Note that the access token has been validated.",
                "+        await self.store.update_access_token_last_validated(requester.access_token_id)",
                "+",
                "         return params, session_id",
                "@@ -454,9 +471,6 @@ class AuthHandler(BaseHandler):",
                "-        authdict = None",
                "         sid = None  # type: Optional[str]",
                "-        if clientdict and \"auth\" in clientdict:",
                "-            authdict = clientdict[\"auth\"]",
                "-            del clientdict[\"auth\"]",
                "-            if \"session\" in authdict:",
                "-                sid = authdict[\"session\"]",
                "+        authdict = clientdict.pop(\"auth\", {})",
                "+        if \"session\" in authdict:",
                "+            sid = authdict[\"session\"]",
                "@@ -565,2 +579,4 @@ class AuthHandler(BaseHandler):",
                "         for f in flows:",
                "+            # If all the required credentials have been supplied, the user has",
                "+            # successfully completed the UI auth process!",
                "             if len(set(f) - set(creds)) == 0:",
                "diff --git a/synapse/rest/client/v2_alpha/account.py b/synapse/rest/client/v2_alpha/account.py",
                "index eebee44a4..d837bde1d 100644",
                "--- a/synapse/rest/client/v2_alpha/account.py",
                "+++ b/synapse/rest/client/v2_alpha/account.py",
                "@@ -256,7 +256,7 @@ class PasswordRestServlet(RestServlet):",
                "-        # If we have a password in this request, prefer it. Otherwise, there",
                "-        # must be a password hash from an earlier request.",
                "+        # If we have a password in this request, prefer it. Otherwise, use the",
                "+        # password hash from an earlier request.",
                "         if new_password:",
                "             password_hash = await self.auth_handler.hash(new_password)",
                "-        else:",
                "+        elif session_id is not None:",
                "             password_hash = await self.auth_handler.get_session_data(",
                "@@ -264,2 +264,6 @@ class PasswordRestServlet(RestServlet):",
                "             )",
                "+        else:",
                "+            # UI validation was skipped, but the request did not include a new",
                "+            # password.",
                "+            password_hash = None",
                "         if not password_hash:",
                "diff --git a/synapse/storage/databases/main/registration.py b/synapse/storage/databases/main/registration.py",
                "index ff96c34c2..8d05288ed 100644",
                "--- a/synapse/storage/databases/main/registration.py",
                "+++ b/synapse/storage/databases/main/registration.py",
                "@@ -945,2 +945,38 @@ class RegistrationWorkerStore(CacheInvalidationWorkerStore):",
                "+    async def get_access_token_last_validated(self, token_id: int) -> int:",
                "+        \"\"\"Retrieves the time (in milliseconds) of the last validation of an access token.",
                "+",
                "+        Args:",
                "+            token_id: The ID of the access token to update.",
                "+        Raises:",
                "+            StoreError if the access token was not found.",
                "+",
                "+        Returns:",
                "+            The last validation time.",
                "+        \"\"\"",
                "+        result = await self.db_pool.simple_select_one_onecol(",
                "+            \"access_tokens\", {\"id\": token_id}, \"last_validated\"",
                "+        )",
                "+",
                "+        # If this token has not been validated (since starting to track this),",
                "+        # return 0 instead of None.",
                "+        return result or 0",
                "+",
                "+    async def update_access_token_last_validated(self, token_id: int) -> None:",
                "+        \"\"\"Updates the last time an access token was validated.",
                "+",
                "+        Args:",
                "+            token_id: The ID of the access token to update.",
                "+        Raises:",
                "+            StoreError if there was a problem updating this.",
                "+        \"\"\"",
                "+        now = self._clock.time_msec()",
                "+",
                "+        await self.db_pool.simple_update_one(",
                "+            \"access_tokens\",",
                "+            {\"id\": token_id},",
                "+            {\"last_validated\": now},",
                "+            desc=\"update_access_token_last_validated\",",
                "+        )",
                "+",
                "@@ -1152,2 +1188,3 @@ class RegistrationStore(StatsStore, RegistrationBackgroundUpdateStore):",
                "         next_id = self._access_tokens_id_gen.get_next()",
                "+        now = self._clock.time_msec()",
                "@@ -1162,2 +1199,3 @@ class RegistrationStore(StatsStore, RegistrationBackgroundUpdateStore):",
                "                 \"puppets_user_id\": puppets_user_id,",
                "+                \"last_validated\": now,",
                "             },",
                "diff --git a/synapse/storage/databases/main/schema/delta/58/26access_token_last_validated.sql b/synapse/storage/databases/main/schema/delta/58/26access_token_last_validated.sql",
                "new file mode 100644",
                "index 000000000..1a101cd5e",
                "--- /dev/null",
                "+++ b/synapse/storage/databases/main/schema/delta/58/26access_token_last_validated.sql",
                "@@ -0,0 +1,18 @@",
                "+/* Copyright 2020 The Matrix.org Foundation C.I.C",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *    http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+-- The last time this access token was \"validated\" (i.e. logged in or succeeded",
                "+-- at user-interactive authentication).",
                "+ALTER TABLE access_tokens ADD COLUMN last_validated BIGINT;",
                "diff --git a/tests/rest/client/v2_alpha/test_auth.py b/tests/rest/client/v2_alpha/test_auth.py",
                "index 51323b3da..ac66a4e0b 100644",
                "--- a/tests/rest/client/v2_alpha/test_auth.py",
                "+++ b/tests/rest/client/v2_alpha/test_auth.py",
                "@@ -15,3 +15,3 @@",
                "-from typing import List, Union",
                "+from typing import Union",
                "@@ -179,9 +179,4 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "         self.user = self.register_user(\"test\", self.user_pass)",
                "-        self.user_tok = self.login(\"test\", self.user_pass)",
                "-",
                "-    def get_device_ids(self, access_token: str) -> List[str]:",
                "-        # Get the list of devices so one can be deleted.",
                "-        channel = self.make_request(\"GET\", \"devices\", access_token=access_token,)",
                "-        self.assertEqual(channel.code, 200)",
                "-        return [d[\"device_id\"] for d in channel.json_body[\"devices\"]]",
                "+        self.device_id = \"dev1\"",
                "+        self.user_tok = self.login(\"test\", self.user_pass, self.device_id)",
                "@@ -221,7 +216,5 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        device_id = self.get_device_ids(self.user_tok)[0]",
                "-",
                "         # Attempt to delete this device.",
                "         # Returns a 401 as per the spec",
                "-        channel = self.delete_device(self.user_tok, device_id, 401)",
                "+        channel = self.delete_device(self.user_tok, self.device_id, 401)",
                "@@ -235,3 +228,3 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "             self.user_tok,",
                "-            device_id,",
                "+            self.device_id,",
                "             200,",
                "@@ -254,4 +247,3 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "-        device_id = self.get_device_ids(self.user_tok)[0]",
                "-        channel = self.delete_device(self.user_tok, device_id, 401)",
                "+        channel = self.delete_device(self.user_tok, self.device_id, 401)",
                "         session = channel.json_body[\"session\"]",
                "@@ -261,3 +253,3 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "             self.user_tok,",
                "-            device_id,",
                "+            self.device_id,",
                "             200,",
                "@@ -284,6 +276,3 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "         # Create a second login.",
                "-        self.login(\"test\", self.user_pass)",
                "-",
                "-        device_ids = self.get_device_ids(self.user_tok)",
                "-        self.assertEqual(len(device_ids), 2)",
                "+        self.login(\"test\", self.user_pass, \"dev2\")",
                "@@ -291,3 +280,3 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "         # Returns a 401 as per the spec",
                "-        channel = self.delete_devices(401, {\"devices\": [device_ids[0]]})",
                "+        channel = self.delete_devices(401, {\"devices\": [self.device_id]})",
                "@@ -303,3 +292,3 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "             {",
                "-                \"devices\": [device_ids[1]],",
                "+                \"devices\": [\"dev2\"],",
                "                 \"auth\": {",
                "@@ -318,6 +307,3 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "         # Create a second login.",
                "-        self.login(\"test\", self.user_pass)",
                "-",
                "-        device_ids = self.get_device_ids(self.user_tok)",
                "-        self.assertEqual(len(device_ids), 2)",
                "+        self.login(\"test\", self.user_pass, \"dev2\")",
                "@@ -325,3 +311,3 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "         # Returns a 401 as per the spec",
                "-        channel = self.delete_device(self.user_tok, device_ids[0], 401)",
                "+        channel = self.delete_device(self.user_tok, self.device_id, 401)",
                "@@ -334,5 +320,7 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "         # second device. This results in an error.",
                "+        #",
                "+        # This makes use of the fact that the device ID is embedded into the URL.",
                "         self.delete_device(",
                "             self.user_tok,",
                "-            device_ids[1],",
                "+            \"dev2\",",
                "             403,",
                "@@ -348,2 +336,48 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "+    @unittest.override_config({\"ui_auth\": {\"session_timeout\": 5 * 1000}})",
                "+    def test_can_reuse_session(self):",
                "+        \"\"\"",
                "+        The session can be reused if configured.",
                "+",
                "+        Compare to test_cannot_change_uri.",
                "+        \"\"\"",
                "+        # Create a second and third login.",
                "+        self.login(\"test\", self.user_pass, \"dev2\")",
                "+        self.login(\"test\", self.user_pass, \"dev3\")",
                "+",
                "+        # Attempt to delete a device. This works since the user just logged in.",
                "+        self.delete_device(self.user_tok, \"dev2\", 200)",
                "+",
                "+        # Move the clock forward past the validation timeout.",
                "+        self.reactor.advance(6)",
                "+",
                "+        # Deleting another devices throws the user into UI auth.",
                "+        channel = self.delete_device(self.user_tok, \"dev3\", 401)",
                "+",
                "+        # Grab the session",
                "+        session = channel.json_body[\"session\"]",
                "+        # Ensure that flows are what is expected.",
                "+        self.assertIn({\"stages\": [\"m.login.password\"]}, channel.json_body[\"flows\"])",
                "+",
                "+        # Make another request providing the UI auth flow.",
                "+        self.delete_device(",
                "+            self.user_tok,",
                "+            \"dev3\",",
                "+            200,",
                "+            {",
                "+                \"auth\": {",
                "+                    \"type\": \"m.login.password\",",
                "+                    \"identifier\": {\"type\": \"m.id.user\", \"user\": self.user},",
                "+                    \"password\": self.user_pass,",
                "+                    \"session\": session,",
                "+                },",
                "+            },",
                "+        )",
                "+",
                "+        # Make another request, but try to delete the first device. This works",
                "+        # due to re-using the previous session.",
                "+        #",
                "+        # Note that *no auth* information is provided, not even a session iD!",
                "+        self.delete_device(self.user_tok, self.device_id, 200)",
                "+",
                "     def test_does_not_offer_password_for_sso_user(self):",
                "@@ -363,4 +397,3 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "         # and not password.",
                "-        device_ids = self.get_device_ids(self.user_tok)",
                "-        channel = self.delete_device(self.user_tok, device_ids[0], 401)",
                "+        channel = self.delete_device(self.user_tok, self.device_id, 401)",
                "@@ -375,4 +408,3 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "-        device_ids = self.get_device_ids(self.user_tok)",
                "-        channel = self.delete_device(self.user_tok, device_ids[0], 401)",
                "+        channel = self.delete_device(self.user_tok, self.device_id, 401)"
            ],
            "changed_files": [
                "changelog.d/8970.feature",
                "docs/sample_config.yaml",
                "synapse/config/_base.pyi",
                "synapse/config/auth.py",
                "synapse/config/homeserver.py",
                "synapse/handlers/auth.py",
                "synapse/rest/client/v2_alpha/account.py",
                "synapse/storage/databases/main/registration.py",
                "synapse/storage/databases/main/schema/delta/58/26access_token_last_validated.sql",
                "tests/rest/client/v2_alpha/test_auth.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8970": "Remove unused last_used column from access_tokens table #8972 Merge Synapse release v1.31.0 into dinsic matrix-org/synapse-dinsic#97 Only allow skipping UI auth for certain actions. #10184"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8970, 8970",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: homeserver, server",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8970",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1f3748f03398f8f91ec5121312aa79dd58306ec1",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607353208,
            "hunks": 13,
            "message": "Do not raise a 500 exception when previewing empty media. (#8883)",
            "diff": [
                "diff --git a/changelog.d/8883.bugfix b/changelog.d/8883.bugfix",
                "new file mode 100644",
                "index 000000000..6137fc5b2",
                "--- /dev/null",
                "+++ b/changelog.d/8883.bugfix",
                "@@ -0,0 +1 @@",
                "+Fix a 500 error when attempting to preview an empty HTML file.",
                "diff --git a/synapse/rest/media/v1/preview_url_resource.py b/synapse/rest/media/v1/preview_url_resource.py",
                "index dce6c4d16..1082389d9 100644",
                "--- a/synapse/rest/media/v1/preview_url_resource.py",
                "+++ b/synapse/rest/media/v1/preview_url_resource.py",
                "@@ -678,3 +678,7 @@ class PreviewUrlResource(DirectServeJsonResource):",
                "-def decode_and_calc_og(body, media_uri, request_encoding=None):",
                "+def decode_and_calc_og(body, media_uri, request_encoding=None) -> Dict[str, str]:",
                "+    # If there's no body, nothing useful is going to be found.",
                "+    if not body:",
                "+        return {}",
                "+",
                "     from lxml import etree",
                "diff --git a/tests/test_preview.py b/tests/test_preview.py",
                "index 7f67ee9e1..a883d707d 100644",
                "--- a/tests/test_preview.py",
                "+++ b/tests/test_preview.py",
                "@@ -58,3 +58,3 @@ class PreviewTestCase(unittest.TestCase):",
                "-        self.assertEquals(",
                "+        self.assertEqual(",
                "             desc,",
                "@@ -71,3 +71,3 @@ class PreviewTestCase(unittest.TestCase):",
                "-        self.assertEquals(",
                "+        self.assertEqual(",
                "             desc,",
                "@@ -98,3 +98,3 @@ class PreviewTestCase(unittest.TestCase):",
                "-        self.assertEquals(",
                "+        self.assertEqual(",
                "             desc,",
                "@@ -124,3 +124,3 @@ class PreviewTestCase(unittest.TestCase):",
                "         desc = summarize_paragraphs(example_paras, min_size=200, max_size=500)",
                "-        self.assertEquals(",
                "+        self.assertEqual(",
                "             desc,",
                "@@ -151,3 +151,3 @@ class PreviewUrlTestCase(unittest.TestCase):",
                "-        self.assertEquals(og, {\"og:title\": \"Foo\", \"og:description\": \"Some text.\"})",
                "+        self.assertEqual(og, {\"og:title\": \"Foo\", \"og:description\": \"Some text.\"})",
                "@@ -166,3 +166,3 @@ class PreviewUrlTestCase(unittest.TestCase):",
                "-        self.assertEquals(og, {\"og:title\": \"Foo\", \"og:description\": \"Some text.\"})",
                "+        self.assertEqual(og, {\"og:title\": \"Foo\", \"og:description\": \"Some text.\"})",
                "@@ -184,3 +184,3 @@ class PreviewUrlTestCase(unittest.TestCase):",
                "-        self.assertEquals(",
                "+        self.assertEqual(",
                "             og,",
                "@@ -205,3 +205,3 @@ class PreviewUrlTestCase(unittest.TestCase):",
                "-        self.assertEquals(og, {\"og:title\": \"Foo\", \"og:description\": \"Some text.\"})",
                "+        self.assertEqual(og, {\"og:title\": \"Foo\", \"og:description\": \"Some text.\"})",
                "@@ -218,3 +218,3 @@ class PreviewUrlTestCase(unittest.TestCase):",
                "-        self.assertEquals(og, {\"og:title\": None, \"og:description\": \"Some text.\"})",
                "+        self.assertEqual(og, {\"og:title\": None, \"og:description\": \"Some text.\"})",
                "@@ -232,3 +232,3 @@ class PreviewUrlTestCase(unittest.TestCase):",
                "-        self.assertEquals(og, {\"og:title\": \"Title\", \"og:description\": \"Some text.\"})",
                "+        self.assertEqual(og, {\"og:title\": \"Title\", \"og:description\": \"Some text.\"})",
                "@@ -246,2 +246,7 @@ class PreviewUrlTestCase(unittest.TestCase):",
                "-        self.assertEquals(og, {\"og:title\": None, \"og:description\": \"Some text.\"})",
                "+        self.assertEqual(og, {\"og:title\": None, \"og:description\": \"Some text.\"})",
                "+",
                "+    def test_empty(self):",
                "+        html = \"\"",
                "+        og = decode_and_calc_og(html, \"http://example.com/test.html\")",
                "+        self.assertEqual(og, {})"
            ],
            "changed_files": [
                "changelog.d/8883.bugfix",
                "synapse/rest/media/v1/preview_url_resource.py",
                "tests/test_preview.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8883": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8883, 8883",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: resource",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8883",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "651e1ae534c3cbe65d41115d8fb91bca08b22009",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608130381,
            "hunks": 0,
            "message": "Merge pull request #8946 from matrix-org/rav/refactor_send_request Remove `Request` return value from `make_request`",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8946": "Implement a username picker for synapse #8942 Fix UsersListTestCase #8964"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8946, 8946",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8946",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c07022303ef596fe7f42f6eb7001660a62801715",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608206739,
            "hunks": 8,
            "message": "Fix a bug that deactivated users appear in the directory (#8933) Fixes a bug that deactivated users appear in the directory when their profile information was updated. To change profile information of deactivated users is neccesary for example you will remove displayname or avatar. But they should not appear in directory. They are deactivated. Co-authored-by: Erik Johnston <erikj@jki.re>",
            "diff": [
                "diff --git a/changelog.d/8933.bugfix b/changelog.d/8933.bugfix",
                "new file mode 100644",
                "index 000000000..295933d6c",
                "--- /dev/null",
                "+++ b/changelog.d/8933.bugfix",
                "@@ -0,0 +1 @@",
                "+Fix a bug where deactivated users appeared in the user directory when their profile information was updated.",
                "diff --git a/synapse/handlers/user_directory.py b/synapse/handlers/user_directory.py",
                "index 3d80371f0..7c4eeaaa5 100644",
                "--- a/synapse/handlers/user_directory.py",
                "+++ b/synapse/handlers/user_directory.py",
                "@@ -115,5 +115,9 @@ class UserDirectoryHandler(StateDeltasHandler):",
                "         # the other changes.",
                "-        is_support = await self.store.is_support_user(user_id)",
                "+",
                "         # Support users are for diagnostics and should not appear in the user directory.",
                "-        if not is_support:",
                "+        is_support = await self.store.is_support_user(user_id)",
                "+        # When change profile information of deactivated user it should not appear in the user directory.",
                "+        is_deactivated = await self.store.get_user_deactivated_status(user_id)",
                "+",
                "+        if not (is_support or is_deactivated):",
                "             await self.store.update_profile_in_user_dir(",
                "diff --git a/tests/handlers/test_user_directory.py b/tests/handlers/test_user_directory.py",
                "index 1260721db..9c886d671 100644",
                "--- a/tests/handlers/test_user_directory.py",
                "+++ b/tests/handlers/test_user_directory.py",
                "@@ -56,2 +56,6 @@ class UserDirectoryTestCase(unittest.HomeserverTestCase):",
                "         )",
                "+        regular_user_id = \"@regular:test\"",
                "+        self.get_success(",
                "+            self.store.register_user(user_id=regular_user_id, password_hash=None)",
                "+        )",
                "@@ -65,3 +69,2 @@ class UserDirectoryTestCase(unittest.HomeserverTestCase):",
                "         profile_info = ProfileInfo(avatar_url=\"avatar_url\", display_name=display_name)",
                "-        regular_user_id = \"@regular:test\"",
                "         self.get_success(",
                "@@ -72,2 +75,37 @@ class UserDirectoryTestCase(unittest.HomeserverTestCase):",
                "+    def test_handle_local_profile_change_with_deactivated_user(self):",
                "+        # create user",
                "+        r_user_id = \"@regular:test\"",
                "+        self.get_success(",
                "+            self.store.register_user(user_id=r_user_id, password_hash=None)",
                "+        )",
                "+",
                "+        # update profile",
                "+        display_name = \"Regular User\"",
                "+        profile_info = ProfileInfo(avatar_url=\"avatar_url\", display_name=display_name)",
                "+        self.get_success(",
                "+            self.handler.handle_local_profile_change(r_user_id, profile_info)",
                "+        )",
                "+",
                "+        # profile is in directory",
                "+        profile = self.get_success(self.store.get_user_in_directory(r_user_id))",
                "+        self.assertTrue(profile[\"display_name\"] == display_name)",
                "+",
                "+        # deactivate user",
                "+        self.get_success(self.store.set_user_deactivated_status(r_user_id, True))",
                "+        self.get_success(self.handler.handle_user_deactivated(r_user_id))",
                "+",
                "+        # profile is not in directory",
                "+        profile = self.get_success(self.store.get_user_in_directory(r_user_id))",
                "+        self.assertTrue(profile is None)",
                "+",
                "+        # update profile after deactivation",
                "+        self.get_success(",
                "+            self.handler.handle_local_profile_change(r_user_id, profile_info)",
                "+        )",
                "+",
                "+        # profile is furthermore not in directory",
                "+        profile = self.get_success(self.store.get_user_in_directory(r_user_id))",
                "+        self.assertTrue(profile is None)",
                "+",
                "     def test_handle_user_deactivated_support_user(self):",
                "diff --git a/tests/rest/admin/test_user.py b/tests/rest/admin/test_user.py",
                "index 4f379a5e5..9d6ef0251 100644",
                "--- a/tests/rest/admin/test_user.py",
                "+++ b/tests/rest/admin/test_user.py",
                "@@ -605,3 +605,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        self.other_user = self.register_user(\"user\", \"pass\")",
                "+        self.other_user = self.register_user(\"user\", \"pass\", displayname=\"User\")",
                "         self.other_user_token = self.login(\"user\", \"pass\")",
                "@@ -1014,2 +1014,50 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "+    @override_config({\"user_directory\": {\"enabled\": True, \"search_all_users\": True}})",
                "+    def test_change_name_deactivate_user_user_directory(self):",
                "+        \"\"\"",
                "+        Test change profile information of a deactivated user and",
                "+        check that it does not appear in user directory",
                "+        \"\"\"",
                "+",
                "+        # is in user directory",
                "+        profile = self.get_success(self.store.get_user_in_directory(self.other_user))",
                "+        self.assertTrue(profile[\"display_name\"] == \"User\")",
                "+",
                "+        # Deactivate user",
                "+        body = json.dumps({\"deactivated\": True})",
                "+",
                "+        request, channel = self.make_request(",
                "+            \"PUT\",",
                "+            self.url_other_user,",
                "+            access_token=self.admin_user_tok,",
                "+            content=body.encode(encoding=\"utf_8\"),",
                "+        )",
                "+",
                "+        self.assertEqual(200, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "+        self.assertEqual(\"@user:test\", channel.json_body[\"name\"])",
                "+        self.assertEqual(True, channel.json_body[\"deactivated\"])",
                "+",
                "+        # is not in user directory",
                "+        profile = self.get_success(self.store.get_user_in_directory(self.other_user))",
                "+        self.assertTrue(profile is None)",
                "+",
                "+        # Set new displayname user",
                "+        body = json.dumps({\"displayname\": \"Foobar\"})",
                "+",
                "+        request, channel = self.make_request(",
                "+            \"PUT\",",
                "+            self.url_other_user,",
                "+            access_token=self.admin_user_tok,",
                "+            content=body.encode(encoding=\"utf_8\"),",
                "+        )",
                "+",
                "+        self.assertEqual(200, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "+        self.assertEqual(\"@user:test\", channel.json_body[\"name\"])",
                "+        self.assertEqual(True, channel.json_body[\"deactivated\"])",
                "+        self.assertEqual(\"Foobar\", channel.json_body[\"displayname\"])",
                "+",
                "+        # is not in user directory",
                "+        profile = self.get_success(self.store.get_user_in_directory(self.other_user))",
                "+        self.assertTrue(profile is None)",
                "+",
                "     def test_reactivate_user(self):"
            ],
            "changed_files": [
                "changelog.d/8933.bugfix",
                "synapse/handlers/user_directory.py",
                "tests/handlers/test_user_directory.py",
                "tests/rest/admin/test_user.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8933": "Fix UsersListTestCase #8964"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8933, 8933",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8933",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "01333681bc3db22541b49c194f5121a5415731c6",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608065770,
            "hunks": 32,
            "message": "Preparatory refactoring of the SamlHandlerTestCase (#8938) * move simple_async_mock to test_utils ... so that it can be re-used * Remove references to `SamlHandler._map_saml_response_to_user` from tests This method is going away, so we can no longer use it as a test point. Instead, factor out a higher-level method which takes a SAML object, and verify correct behaviour by mocking out `AuthHandler.complete_sso_login`. * changelog",
            "diff": [
                "diff --git a/changelog.d/8938.feature b/changelog.d/8938.feature",
                "new file mode 100644",
                "index 000000000..d450ef499",
                "--- /dev/null",
                "+++ b/changelog.d/8938.feature",
                "@@ -0,0 +1 @@",
                "+Add support for allowing users to pick their own user ID during a single-sign-on login.",
                "diff --git a/synapse/handlers/saml_handler.py b/synapse/handlers/saml_handler.py",
                "index f2ca1ddb5..6001fe3e2 100644",
                "--- a/synapse/handlers/saml_handler.py",
                "+++ b/synapse/handlers/saml_handler.py",
                "@@ -165,2 +165,25 @@ class SamlHandler(BaseHandler):",
                "         logger.debug(\"SAML2 response: %s\", saml2_auth.origxml)",
                "+",
                "+        await self._handle_authn_response(request, saml2_auth, relay_state)",
                "+",
                "+    async def _handle_authn_response(",
                "+        self,",
                "+        request: SynapseRequest,",
                "+        saml2_auth: saml2.response.AuthnResponse,",
                "+        relay_state: str,",
                "+    ) -> None:",
                "+        \"\"\"Handle an AuthnResponse, having parsed it from the request params",
                "+",
                "+        Assumes that the signature on the response object has been checked. Maps",
                "+        the user onto an MXID, registering them if necessary, and returns a response",
                "+        to the browser.",
                "+",
                "+        Args:",
                "+            request: the incoming request from the browser. We'll respond to it with an",
                "+                HTML page or a redirect",
                "+            saml2_auth: the parsed AuthnResponse object",
                "+            relay_state: the RelayState query param, which encodes the URI to rediret",
                "+               back to",
                "+        \"\"\"",
                "+",
                "         for assertion in saml2_auth.assertions:",
                "diff --git a/tests/handlers/test_oidc.py b/tests/handlers/test_oidc.py",
                "index 9878527ba..464e569ac 100644",
                "--- a/tests/handlers/test_oidc.py",
                "+++ b/tests/handlers/test_oidc.py",
                "@@ -25,3 +25,3 @@ from synapse.types import UserID",
                "-from tests.test_utils import FakeResponse",
                "+from tests.test_utils import FakeResponse, simple_async_mock",
                " from tests.unittest import HomeserverTestCase, override_config",
                "@@ -84,12 +84,2 @@ class TestMappingProviderFailures(TestMappingProvider):",
                "-def simple_async_mock(return_value=None, raises=None) -> Mock:",
                "-    # AsyncMock is not available in python3.5, this mimics part of its behaviour",
                "-    async def cb(*args, **kwargs):",
                "-        if raises:",
                "-            raise raises",
                "-        return return_value",
                "-",
                "-    return Mock(side_effect=cb)",
                "-",
                "-",
                " async def get_json(url):",
                "diff --git a/tests/handlers/test_saml.py b/tests/handlers/test_saml.py",
                "index d21e5588c..69927cf6b 100644",
                "--- a/tests/handlers/test_saml.py",
                "+++ b/tests/handlers/test_saml.py",
                "@@ -14,2 +14,6 @@",
                "+from typing import Optional",
                "+",
                "+from mock import Mock",
                "+",
                " import attr",
                "@@ -17,4 +21,4 @@ import attr",
                " from synapse.api.errors import RedirectException",
                "-from synapse.handlers.sso import MappingException",
                "+from tests.test_utils import simple_async_mock",
                " from tests.unittest import HomeserverTestCase, override_config",
                "@@ -46,2 +50,4 @@ class FakeAuthnResponse:",
                "     ava = attr.ib(type=dict)",
                "+    assertions = attr.ib(type=list, factory=list)",
                "+    in_response_to = attr.ib(type=Optional[str], default=None)",
                "@@ -113,11 +119,18 @@ class SamlHandlerTestCase(HomeserverTestCase):",
                "         \"\"\"Ensure that mapping the SAML response returned from a provider to an MXID works properly.\"\"\"",
                "+",
                "+        # stub out the auth handler",
                "+        auth_handler = self.hs.get_auth_handler()",
                "+        auth_handler.complete_sso_login = simple_async_mock()",
                "+",
                "+        # send a mocked-up SAML response to the callback",
                "         saml_response = FakeAuthnResponse({\"uid\": \"test_user\", \"username\": \"test_user\"})",
                "-        # The redirect_url doesn't matter with the default user mapping provider.",
                "-        redirect_url = \"\"",
                "-        mxid = self.get_success(",
                "-            self.handler._map_saml_response_to_user(",
                "-                saml_response, redirect_url, \"user-agent\", \"10.10.10.10\"",
                "-            )",
                "+        request = _mock_request()",
                "+        self.get_success(",
                "+            self.handler._handle_authn_response(request, saml_response, \"redirect_uri\")",
                "+        )",
                "+",
                "+        # check that the auth handler got called as expected",
                "+        auth_handler.complete_sso_login.assert_called_once_with(",
                "+            \"@test_user:test\", request, \"redirect_uri\"",
                "         )",
                "-        self.assertEqual(mxid, \"@test_user:test\")",
                "@@ -131,2 +144,6 @@ class SamlHandlerTestCase(HomeserverTestCase):",
                "+        # stub out the auth handler",
                "+        auth_handler = self.hs.get_auth_handler()",
                "+        auth_handler.complete_sso_login = simple_async_mock()",
                "+",
                "         # Map a user via SSO.",
                "@@ -135,17 +152,20 @@ class SamlHandlerTestCase(HomeserverTestCase):",
                "         )",
                "-        redirect_url = \"\"",
                "-        mxid = self.get_success(",
                "-            self.handler._map_saml_response_to_user(",
                "-                saml_response, redirect_url, \"user-agent\", \"10.10.10.10\"",
                "-            )",
                "+        request = _mock_request()",
                "+        self.get_success(",
                "+            self.handler._handle_authn_response(request, saml_response, \"\")",
                "+        )",
                "+",
                "+        # check that the auth handler got called as expected",
                "+        auth_handler.complete_sso_login.assert_called_once_with(",
                "+            \"@test_user:test\", request, \"\"",
                "         )",
                "-        self.assertEqual(mxid, \"@test_user:test\")",
                "         # Subsequent calls should map to the same mxid.",
                "-        mxid = self.get_success(",
                "-            self.handler._map_saml_response_to_user(",
                "-                saml_response, redirect_url, \"user-agent\", \"10.10.10.10\"",
                "-            )",
                "+        auth_handler.complete_sso_login.reset_mock()",
                "+        self.get_success(",
                "+            self.handler._handle_authn_response(request, saml_response, \"\")",
                "+        )",
                "+        auth_handler.complete_sso_login.assert_called_once_with(",
                "+            \"@test_user:test\", request, \"\"",
                "         )",
                "-        self.assertEqual(mxid, \"@test_user:test\")",
                "@@ -153,11 +173,20 @@ class SamlHandlerTestCase(HomeserverTestCase):",
                "         \"\"\"If the mapping provider generates an invalid localpart it should be rejected.\"\"\"",
                "+",
                "+        # stub out the auth handler",
                "+        auth_handler = self.hs.get_auth_handler()",
                "+        auth_handler.complete_sso_login = simple_async_mock()",
                "+",
                "+        # mock out the error renderer too",
                "+        sso_handler = self.hs.get_sso_handler()",
                "+        sso_handler.render_error = Mock(return_value=None)",
                "+",
                "         saml_response = FakeAuthnResponse({\"uid\": \"test\", \"username\": \"f\u00c3\u00b6\u00c3\u00b6\"})",
                "-        redirect_url = \"\"",
                "-        e = self.get_failure(",
                "-            self.handler._map_saml_response_to_user(",
                "-                saml_response, redirect_url, \"user-agent\", \"10.10.10.10\"",
                "-            ),",
                "-            MappingException,",
                "+        request = _mock_request()",
                "+        self.get_success(",
                "+            self.handler._handle_authn_response(request, saml_response, \"\"),",
                "+        )",
                "+        sso_handler.render_error.assert_called_once_with(",
                "+            request, \"mapping_error\", \"localpart is invalid: f\u00c3\u00b6\u00c3\u00b6\"",
                "         )",
                "-        self.assertEqual(str(e.value), \"localpart is invalid: f\u00c3\u00b6\u00c3\u00b6\")",
                "+        auth_handler.complete_sso_login.assert_not_called()",
                "@@ -165,2 +194,10 @@ class SamlHandlerTestCase(HomeserverTestCase):",
                "         \"\"\"The mapping provider can retry generating an MXID if the MXID is already in use.\"\"\"",
                "+",
                "+        # stub out the auth handler and error renderer",
                "+        auth_handler = self.hs.get_auth_handler()",
                "+        auth_handler.complete_sso_login = simple_async_mock()",
                "+        sso_handler = self.hs.get_sso_handler()",
                "+        sso_handler.render_error = Mock(return_value=None)",
                "+",
                "+        # register a user to occupy the first-choice MXID",
                "         store = self.hs.get_datastore()",
                "@@ -169,11 +206,15 @@ class SamlHandlerTestCase(HomeserverTestCase):",
                "         )",
                "+",
                "+        # send the fake SAML response",
                "         saml_response = FakeAuthnResponse({\"uid\": \"test\", \"username\": \"test_user\"})",
                "-        redirect_url = \"\"",
                "-        mxid = self.get_success(",
                "-            self.handler._map_saml_response_to_user(",
                "-                saml_response, redirect_url, \"user-agent\", \"10.10.10.10\"",
                "-            )",
                "+        request = _mock_request()",
                "+        self.get_success(",
                "+            self.handler._handle_authn_response(request, saml_response, \"\"),",
                "         )",
                "+",
                "         # test_user is already taken, so test_user1 gets registered instead.",
                "-        self.assertEqual(mxid, \"@test_user1:test\")",
                "+        auth_handler.complete_sso_login.assert_called_once_with(",
                "+            \"@test_user1:test\", request, \"\"",
                "+        )",
                "+        auth_handler.complete_sso_login.reset_mock()",
                "@@ -190,11 +231,11 @@ class SamlHandlerTestCase(HomeserverTestCase):",
                "         saml_response = FakeAuthnResponse({\"uid\": \"tester\", \"username\": \"tester\"})",
                "-        e = self.get_failure(",
                "-            self.handler._map_saml_response_to_user(",
                "-                saml_response, redirect_url, \"user-agent\", \"10.10.10.10\"",
                "-            ),",
                "-            MappingException,",
                "+        self.get_success(",
                "+            self.handler._handle_authn_response(request, saml_response, \"\"),",
                "         )",
                "-        self.assertEqual(",
                "-            str(e.value), \"Unable to generate a Matrix ID from the SSO response\"",
                "+        sso_handler.render_error.assert_called_once_with(",
                "+            request,",
                "+            \"mapping_error\",",
                "+            \"Unable to generate a Matrix ID from the SSO response\",",
                "         )",
                "+        auth_handler.complete_sso_login.assert_not_called()",
                "@@ -210,8 +251,8 @@ class SamlHandlerTestCase(HomeserverTestCase):",
                "     def test_map_saml_response_redirect(self):",
                "+        \"\"\"Test a mapping provider that raises a RedirectException\"\"\"",
                "+",
                "         saml_response = FakeAuthnResponse({\"uid\": \"test\", \"username\": \"test_user\"})",
                "-        redirect_url = \"\"",
                "+        request = _mock_request()",
                "         e = self.get_failure(",
                "-            self.handler._map_saml_response_to_user(",
                "-                saml_response, redirect_url, \"user-agent\", \"10.10.10.10\"",
                "-            ),",
                "+            self.handler._handle_authn_response(request, saml_response, \"\"),",
                "             RedirectException,",
                "@@ -219 +260,6 @@ class SamlHandlerTestCase(HomeserverTestCase):",
                "         self.assertEqual(e.value.location, b\"https://custom-saml-redirect/\")",
                "+",
                "+",
                "+def _mock_request():",
                "+    \"\"\"Returns a mock which will stand in as a SynapseRequest\"\"\"",
                "+    return Mock(spec=[\"getClientIP\", \"get_user_agent\"])",
                "diff --git a/tests/test_utils/__init__.py b/tests/test_utils/__init__.py",
                "index 6873d45eb..43898d814 100644",
                "--- a/tests/test_utils/__init__.py",
                "+++ b/tests/test_utils/__init__.py",
                "@@ -24,2 +24,4 @@ from typing import Any, Awaitable, Callable, TypeVar",
                "+from mock import Mock",
                "+",
                " import attr",
                "@@ -89,2 +91,12 @@ def setup_awaitable_errors() -> Callable[[], None]:",
                "+def simple_async_mock(return_value=None, raises=None) -> Mock:",
                "+    # AsyncMock is not available in python3.5, this mimics part of its behaviour",
                "+    async def cb(*args, **kwargs):",
                "+        if raises:",
                "+            raise raises",
                "+        return return_value",
                "+",
                "+    return Mock(side_effect=cb)",
                "+",
                "+",
                " @attr.s"
            ],
            "changed_files": [
                "changelog.d/8938.feature",
                "synapse/handlers/saml_handler.py",
                "tests/handlers/test_oidc.py",
                "tests/handlers/test_saml.py",
                "tests/test_utils/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8938": "Push login completion down into SsoHandler #8941 Debian builds fail with ascii encoding error on older distros #9076"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8938, 8938",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: reference",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8938",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cd9e72b185e36ac3f18ab1fe567fdeee87bfcb8e",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607467863,
            "hunks": 3,
            "message": "Add X-Robots-Tag header to stop crawlers from indexing media (#8887) Fixes / related to: https://github.com/matrix-org/synapse/issues/6533 This should do essentially the same thing as a robots.txt file telling robots to not index the media repo. https://developers.google.com/search/reference/robots_meta_tag Signed-off-by: Aaron Raimist <aaron@raim.ist>",
            "diff": [
                "diff --git a/changelog.d/8887.feature b/changelog.d/8887.feature",
                "new file mode 100644",
                "index 000000000..729eb1f1e",
                "--- /dev/null",
                "+++ b/changelog.d/8887.feature",
                "@@ -0,0 +1 @@",
                "+Add `X-Robots-Tag` header to stop web crawlers from indexing media.",
                "diff --git a/synapse/rest/media/v1/_base.py b/synapse/rest/media/v1/_base.py",
                "index 67aa993f1..47c2b44bf 100644",
                "--- a/synapse/rest/media/v1/_base.py",
                "+++ b/synapse/rest/media/v1/_base.py",
                "@@ -157,2 +157,7 @@ def add_file_headers(request, media_type, file_size, upload_name):",
                "+    # Tell web crawlers to not index, archive, or follow links in media. This",
                "+    # should help to prevent things in the media repo from showing up in web",
                "+    # search results.",
                "+    request.setHeader(b\"X-Robots-Tag\", \"noindex, nofollow, noarchive, noimageindex\")",
                "+",
                "diff --git a/tests/rest/media/v1/test_media_storage.py b/tests/rest/media/v1/test_media_storage.py",
                "index 4c749f1a6..6f0677d33 100644",
                "--- a/tests/rest/media/v1/test_media_storage.py",
                "+++ b/tests/rest/media/v1/test_media_storage.py",
                "@@ -364 +364,14 @@ class MediaRepoTests(unittest.HomeserverTestCase):",
                "             )",
                "+",
                "+    def test_x_robots_tag_header(self):",
                "+        \"\"\"",
                "+        Tests that the `X-Robots-Tag` header is present, which informs web crawlers",
                "+        to not index, archive, or follow links in media.",
                "+        \"\"\"",
                "+        channel = self._req(b\"inline; filename=out\" + self.test_image.extension)",
                "+",
                "+        headers = channel.headers",
                "+        self.assertEqual(",
                "+            headers.getRawHeaders(b\"X-Robots-Tag\"),",
                "+            [b\"noindex, nofollow, noarchive, noimageindex\"],",
                "+        )"
            ],
            "changed_files": [
                "changelog.d/8887.feature",
                "synapse/rest/media/v1/_base.py",
                "tests/rest/media/v1/test_media_storage.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8887": "Add X-Robots-Tag header t2bot/matrix-media-repo#303 Default robots.txt for media repo #6533"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8887, 8887",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: reference, issue, file",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8887",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a8026064755362fe3e5dc00f537606d340ce242a",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608660014,
            "hunks": 3,
            "message": "Support PyJWT v2.0.0. (#8986) Tests were broken due to an API changing. The code used in Synapse proper should be compatible with both versions already.",
            "diff": [
                "diff --git a/changelog.d/8986.misc b/changelog.d/8986.misc",
                "new file mode 100644",
                "index 000000000..6aefc7878",
                "--- /dev/null",
                "+++ b/changelog.d/8986.misc",
                "@@ -0,0 +1 @@",
                "+Support using PyJWT v2.0.0 in the test suite.",
                "diff --git a/tests/rest/client/v1/test_login.py b/tests/rest/client/v1/test_login.py",
                "index 566776e97..18932d751 100644",
                "--- a/tests/rest/client/v1/test_login.py",
                "+++ b/tests/rest/client/v1/test_login.py",
                "@@ -477,4 +477,8 @@ class JWTTestCase(unittest.HomeserverTestCase):",
                "-    def jwt_encode(self, token, secret=jwt_secret):",
                "-        return jwt.encode(token, secret, self.jwt_algorithm).decode(\"ascii\")",
                "+    def jwt_encode(self, token: str, secret: str = jwt_secret) -> str:",
                "+        # PyJWT 2.0.0 changed the return type of jwt.encode from bytes to str.",
                "+        result = jwt.encode(token, secret, self.jwt_algorithm)",
                "+        if isinstance(result, bytes):",
                "+            return result.decode(\"ascii\")",
                "+        return result",
                "@@ -682,4 +686,8 @@ class JWTPubKeyTestCase(unittest.HomeserverTestCase):",
                "-    def jwt_encode(self, token, secret=jwt_privatekey):",
                "-        return jwt.encode(token, secret, \"RS256\").decode(\"ascii\")",
                "+    def jwt_encode(self, token: str, secret: str = jwt_privatekey) -> str:",
                "+        # PyJWT 2.0.0 changed the return type of jwt.encode from bytes to str.",
                "+        result = jwt.encode(token, secret, \"RS256\")",
                "+        if isinstance(result, bytes):",
                "+            return result.decode(\"ascii\")",
                "+        return result"
            ],
            "changed_files": [
                "changelog.d/8986.misc",
                "tests/rest/client/v1/test_login.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8986": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8986, 8986",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8986",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "895e04319ba457a855207b8bb804f7360a258464",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607945930,
            "hunks": 47,
            "message": "Preparatory refactoring of the OidcHandlerTestCase (#8911) * Remove references to handler._auth_handler (and replace them with hs.get_auth_handler) * Factor out a utility function for building Requests * Remove mocks of `OidcHandler._map_userinfo_to_user` This method is going away, so mocking it out is no longer a valid approach. Instead, we mock out lower-level methods (eg _remote_id_from_userinfo), or simply allow the regular implementation to proceed and update the expectations accordingly. * Remove references to `OidcHandler._map_userinfo_to_user` from tests This method is going away, so we can no longer use it as a test point. Instead we build mock \"callback\" requests which we pass into `handle_oidc_callback`, and verify correct behaviour by mocking out `AuthHandler.complete_sso_login`.",
            "diff": [
                "diff --git a/changelog.d/8911.feature b/changelog.d/8911.feature",
                "new file mode 100644",
                "index 000000000..d450ef499",
                "--- /dev/null",
                "+++ b/changelog.d/8911.feature",
                "@@ -0,0 +1 @@",
                "+Add support for allowing users to pick their own user ID during a single-sign-on login.",
                "diff --git a/tests/handlers/test_oidc.py b/tests/handlers/test_oidc.py",
                "index 1d99a4543..9878527ba 100644",
                "--- a/tests/handlers/test_oidc.py",
                "+++ b/tests/handlers/test_oidc.py",
                "@@ -17,3 +17,3 @@ from urllib.parse import parse_qs, urlparse",
                "-from mock import Mock, patch",
                "+from mock import ANY, Mock, patch",
                "@@ -84,3 +84,3 @@ class TestMappingProviderFailures(TestMappingProvider):",
                "-def simple_async_mock(return_value=None, raises=None):",
                "+def simple_async_mock(return_value=None, raises=None) -> Mock:",
                "     # AsyncMock is not available in python3.5, this mimics part of its behaviour",
                "@@ -162,2 +162,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         self.render_error.reset_mock()",
                "+        return args",
                "@@ -376,7 +377,8 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         }",
                "+        username = \"bar\"",
                "         userinfo = {",
                "             \"sub\": \"foo\",",
                "-            \"preferred_username\": \"bar\",",
                "+            \"username\": username,",
                "         }",
                "-        user_id = \"@foo:domain.org\"",
                "+        expected_user_id = \"@%s:%s\" % (username, self.hs.hostname)",
                "         self.handler._exchange_code = simple_async_mock(return_value=token)",
                "@@ -384,14 +386,4 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         self.handler._fetch_userinfo = simple_async_mock(return_value=userinfo)",
                "-        self.handler._map_userinfo_to_user = simple_async_mock(return_value=user_id)",
                "-        self.handler._auth_handler.complete_sso_login = simple_async_mock()",
                "-        request = Mock(",
                "-            spec=[",
                "-                \"args\",",
                "-                \"getCookie\",",
                "-                \"addCookie\",",
                "-                \"requestHeaders\",",
                "-                \"getClientIP\",",
                "-                \"get_user_agent\",",
                "-            ]",
                "-        )",
                "+        auth_handler = self.hs.get_auth_handler()",
                "+        auth_handler.complete_sso_login = simple_async_mock()",
                "@@ -403,3 +395,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         ip_address = \"10.0.0.1\"",
                "-        request.getCookie.return_value = self.handler._generate_oidc_session_token(",
                "+        session = self.handler._generate_oidc_session_token(",
                "             state=state,",
                "@@ -409,9 +401,5 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         )",
                "-",
                "-        request.args = {}",
                "-        request.args[b\"code\"] = [code.encode(\"utf-8\")]",
                "-        request.args[b\"state\"] = [state.encode(\"utf-8\")]",
                "-",
                "-        request.getClientIP.return_value = ip_address",
                "-        request.get_user_agent.return_value = user_agent",
                "+        request = self._build_callback_request(",
                "+            code, state, session, user_agent=user_agent, ip_address=ip_address",
                "+        )",
                "@@ -419,4 +407,4 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "-        self.handler._auth_handler.complete_sso_login.assert_called_once_with(",
                "-            user_id, request, client_redirect_url, {},",
                "+        auth_handler.complete_sso_login.assert_called_once_with(",
                "+            expected_user_id, request, client_redirect_url, {},",
                "         )",
                "@@ -424,5 +412,2 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         self.handler._parse_id_token.assert_called_once_with(token, nonce=nonce)",
                "-        self.handler._map_userinfo_to_user.assert_called_once_with(",
                "-            userinfo, token, user_agent, ip_address",
                "-        )",
                "         self.handler._fetch_userinfo.assert_not_called()",
                "@@ -431,8 +416,9 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         # Handle mapping errors",
                "-        self.handler._map_userinfo_to_user = simple_async_mock(",
                "-            raises=MappingException()",
                "-        )",
                "-        self.get_success(self.handler.handle_oidc_callback(request))",
                "-        self.assertRenderedError(\"mapping_error\")",
                "-        self.handler._map_userinfo_to_user = simple_async_mock(return_value=user_id)",
                "+        with patch.object(",
                "+            self.handler,",
                "+            \"_remote_id_from_userinfo\",",
                "+            new=Mock(side_effect=MappingException()),",
                "+        ):",
                "+            self.get_success(self.handler.handle_oidc_callback(request))",
                "+            self.assertRenderedError(\"mapping_error\")",
                "@@ -443,6 +429,5 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "-        self.handler._auth_handler.complete_sso_login.reset_mock()",
                "+        auth_handler.complete_sso_login.reset_mock()",
                "         self.handler._exchange_code.reset_mock()",
                "         self.handler._parse_id_token.reset_mock()",
                "-        self.handler._map_userinfo_to_user.reset_mock()",
                "         self.handler._fetch_userinfo.reset_mock()",
                "@@ -453,4 +438,4 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "-        self.handler._auth_handler.complete_sso_login.assert_called_once_with(",
                "-            user_id, request, client_redirect_url, {},",
                "+        auth_handler.complete_sso_login.assert_called_once_with(",
                "+            expected_user_id, request, client_redirect_url, {},",
                "         )",
                "@@ -458,5 +443,2 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         self.handler._parse_id_token.assert_not_called()",
                "-        self.handler._map_userinfo_to_user.assert_called_once_with(",
                "-            userinfo, token, user_agent, ip_address",
                "-        )",
                "         self.handler._fetch_userinfo.assert_called_once_with(token)",
                "@@ -611,19 +593,9 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "             \"sub\": \"foo\",",
                "+            \"username\": \"foo\",",
                "             \"phone\": \"1234567\",",
                "         }",
                "-        user_id = \"@foo:domain.org\"",
                "         self.handler._exchange_code = simple_async_mock(return_value=token)",
                "         self.handler._parse_id_token = simple_async_mock(return_value=userinfo)",
                "-        self.handler._map_userinfo_to_user = simple_async_mock(return_value=user_id)",
                "-        self.handler._auth_handler.complete_sso_login = simple_async_mock()",
                "-        request = Mock(",
                "-            spec=[",
                "-                \"args\",",
                "-                \"getCookie\",",
                "-                \"addCookie\",",
                "-                \"requestHeaders\",",
                "-                \"getClientIP\",",
                "-                \"get_user_agent\",",
                "-            ]",
                "-        )",
                "+        auth_handler = self.hs.get_auth_handler()",
                "+        auth_handler.complete_sso_login = simple_async_mock()",
                "@@ -631,3 +603,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         client_redirect_url = \"http://client/redirect\"",
                "-        request.getCookie.return_value = self.handler._generate_oidc_session_token(",
                "+        session = self.handler._generate_oidc_session_token(",
                "             state=state,",
                "@@ -637,9 +609,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         )",
                "-",
                "-        request.args = {}",
                "-        request.args[b\"code\"] = [b\"code\"]",
                "-        request.args[b\"state\"] = [state.encode(\"utf-8\")]",
                "-",
                "-        request.getClientIP.return_value = \"10.0.0.1\"",
                "-        request.get_user_agent.return_value = \"Browser\"",
                "+        request = self._build_callback_request(\"code\", state, session)",
                "@@ -647,4 +613,4 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "-        self.handler._auth_handler.complete_sso_login.assert_called_once_with(",
                "-            user_id, request, client_redirect_url, {\"phone\": \"1234567\"},",
                "+        auth_handler.complete_sso_login.assert_called_once_with(",
                "+            \"@foo:test\", request, client_redirect_url, {\"phone\": \"1234567\"},",
                "         )",
                "@@ -653,2 +619,5 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         \"\"\"Ensure that mapping the userinfo returned from a provider to an MXID works properly.\"\"\"",
                "+        auth_handler = self.hs.get_auth_handler()",
                "+        auth_handler.complete_sso_login = simple_async_mock()",
                "+",
                "         userinfo = {",
                "@@ -657,10 +626,7 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         }",
                "-        # The token doesn't matter with the default user mapping provider.",
                "-        token = {}",
                "-        mxid = self.get_success(",
                "-            self.handler._map_userinfo_to_user(",
                "-                userinfo, token, \"user-agent\", \"10.10.10.10\"",
                "-            )",
                "+        self._make_callback_with_userinfo(userinfo)",
                "+        auth_handler.complete_sso_login.assert_called_once_with(",
                "+            \"@test_user:test\", ANY, ANY, {}",
                "         )",
                "-        self.assertEqual(mxid, \"@test_user:test\")",
                "+        auth_handler.complete_sso_login.reset_mock()",
                "@@ -671,8 +637,7 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         }",
                "-        mxid = self.get_success(",
                "-            self.handler._map_userinfo_to_user(",
                "-                userinfo, token, \"user-agent\", \"10.10.10.10\"",
                "-            )",
                "+        self._make_callback_with_userinfo(userinfo)",
                "+        auth_handler.complete_sso_login.assert_called_once_with(",
                "+            \"@test_user_2:test\", ANY, ANY, {}",
                "         )",
                "-        self.assertEqual(mxid, \"@test_user_2:test\")",
                "+        auth_handler.complete_sso_login.reset_mock()",
                "@@ -685,10 +650,7 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         userinfo = {\"sub\": \"test3\", \"username\": \"test_user_3\"}",
                "-        e = self.get_failure(",
                "-            self.handler._map_userinfo_to_user(",
                "-                userinfo, token, \"user-agent\", \"10.10.10.10\"",
                "-            ),",
                "-            MappingException,",
                "-        )",
                "-        self.assertEqual(",
                "-            str(e.value), \"Mapping provider does not support de-duplicating Matrix IDs\",",
                "+        self._make_callback_with_userinfo(userinfo)",
                "+        auth_handler.complete_sso_login.assert_not_called()",
                "+        self.assertRenderedError(",
                "+            \"mapping_error\",",
                "+            \"Mapping provider does not support de-duplicating Matrix IDs\",",
                "         )",
                "@@ -704,2 +666,5 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "+        auth_handler = self.hs.get_auth_handler()",
                "+        auth_handler.complete_sso_login = simple_async_mock()",
                "+",
                "         # Map a user via SSO.",
                "@@ -709,17 +674,14 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         }",
                "-        token = {}",
                "-        mxid = self.get_success(",
                "-            self.handler._map_userinfo_to_user(",
                "-                userinfo, token, \"user-agent\", \"10.10.10.10\"",
                "-            )",
                "+        self._make_callback_with_userinfo(userinfo)",
                "+        auth_handler.complete_sso_login.assert_called_once_with(",
                "+            user.to_string(), ANY, ANY, {},",
                "         )",
                "-        self.assertEqual(mxid, \"@test_user:test\")",
                "+        auth_handler.complete_sso_login.reset_mock()",
                "         # Subsequent calls should map to the same mxid.",
                "-        mxid = self.get_success(",
                "-            self.handler._map_userinfo_to_user(",
                "-                userinfo, token, \"user-agent\", \"10.10.10.10\"",
                "-            )",
                "+        self._make_callback_with_userinfo(userinfo)",
                "+        auth_handler.complete_sso_login.assert_called_once_with(",
                "+            user.to_string(), ANY, ANY, {},",
                "         )",
                "-        self.assertEqual(mxid, \"@test_user:test\")",
                "+        auth_handler.complete_sso_login.reset_mock()",
                "@@ -734,9 +696,7 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         }",
                "-        token = {}",
                "-        mxid = self.get_success(",
                "-            self.handler._map_userinfo_to_user(",
                "-                userinfo, token, \"user-agent\", \"10.10.10.10\"",
                "-            )",
                "+        self._make_callback_with_userinfo(userinfo)",
                "+        auth_handler.complete_sso_login.assert_called_once_with(",
                "+            user.to_string(), ANY, ANY, {},",
                "         )",
                "-        self.assertEqual(mxid, \"@test_user:test\")",
                "+        auth_handler.complete_sso_login.reset_mock()",
                "@@ -757,10 +717,7 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         }",
                "-        e = self.get_failure(",
                "-            self.handler._map_userinfo_to_user(",
                "-                userinfo, token, \"user-agent\", \"10.10.10.10\"",
                "-            ),",
                "-            MappingException,",
                "-        )",
                "+        self._make_callback_with_userinfo(userinfo)",
                "+        auth_handler.complete_sso_login.assert_not_called()",
                "+        args = self.assertRenderedError(\"mapping_error\")",
                "         self.assertTrue(",
                "-            str(e.value).startswith(",
                "+            args[2].startswith(",
                "                 \"Attempted to login as '@TEST_USER_2:test' but it matches more than one user inexactly:\"",
                "@@ -775,8 +732,6 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "-        mxid = self.get_success(",
                "-            self.handler._map_userinfo_to_user(",
                "-                userinfo, token, \"user-agent\", \"10.10.10.10\"",
                "-            )",
                "+        self._make_callback_with_userinfo(userinfo)",
                "+        auth_handler.complete_sso_login.assert_called_once_with(",
                "+            \"@TEST_USER_2:test\", ANY, ANY, {},",
                "         )",
                "-        self.assertEqual(mxid, \"@TEST_USER_2:test\")",
                "@@ -784,15 +739,4 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         \"\"\"If the mapping provider generates an invalid localpart it should be rejected.\"\"\"",
                "-        userinfo = {",
                "-            \"sub\": \"test2\",",
                "-            \"username\": \"f\u00c3\u00b6\u00c3\u00b6\",",
                "-        }",
                "-        token = {}",
                "-",
                "-        e = self.get_failure(",
                "-            self.handler._map_userinfo_to_user(",
                "-                userinfo, token, \"user-agent\", \"10.10.10.10\"",
                "-            ),",
                "-            MappingException,",
                "-        )",
                "-        self.assertEqual(str(e.value), \"localpart is invalid: f\u00c3\u00b6\u00c3\u00b6\")",
                "+        self._make_callback_with_userinfo({\"sub\": \"test2\", \"username\": \"f\u00c3\u00b6\u00c3\u00b6\"})",
                "+        self.assertRenderedError(\"mapping_error\", \"localpart is invalid: f\u00c3\u00b6\u00c3\u00b6\")",
                "@@ -809,2 +753,5 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         \"\"\"The mapping provider can retry generating an MXID if the MXID is already in use.\"\"\"",
                "+        auth_handler = self.hs.get_auth_handler()",
                "+        auth_handler.complete_sso_login = simple_async_mock()",
                "+",
                "         store = self.hs.get_datastore()",
                "@@ -817,10 +764,9 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         }",
                "-        token = {}",
                "-        mxid = self.get_success(",
                "-            self.handler._map_userinfo_to_user(",
                "-                userinfo, token, \"user-agent\", \"10.10.10.10\"",
                "-            )",
                "-        )",
                "+        self._make_callback_with_userinfo(userinfo)",
                "+",
                "         # test_user is already taken, so test_user1 gets registered instead.",
                "-        self.assertEqual(mxid, \"@test_user1:test\")",
                "+        auth_handler.complete_sso_login.assert_called_once_with(",
                "+            \"@test_user1:test\", ANY, ANY, {},",
                "+        )",
                "+        auth_handler.complete_sso_login.reset_mock()",
                "@@ -840,10 +786,68 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         }",
                "-        e = self.get_failure(",
                "-            self.handler._map_userinfo_to_user(",
                "-                userinfo, token, \"user-agent\", \"10.10.10.10\"",
                "-            ),",
                "-            MappingException,",
                "+        self._make_callback_with_userinfo(userinfo)",
                "+        auth_handler.complete_sso_login.assert_not_called()",
                "+        self.assertRenderedError(",
                "+            \"mapping_error\", \"Unable to generate a Matrix ID from the SSO response\"",
                "         )",
                "-        self.assertEqual(",
                "-            str(e.value), \"Unable to generate a Matrix ID from the SSO response\"",
                "+",
                "+    def _make_callback_with_userinfo(",
                "+        self, userinfo: dict, client_redirect_url: str = \"http://client/redirect\"",
                "+    ) -> None:",
                "+        self.handler._exchange_code = simple_async_mock(return_value={})",
                "+        self.handler._parse_id_token = simple_async_mock(return_value=userinfo)",
                "+        self.handler._fetch_userinfo = simple_async_mock(return_value=userinfo)",
                "+        auth_handler = self.hs.get_auth_handler()",
                "+        auth_handler.complete_sso_login = simple_async_mock()",
                "+",
                "+        state = \"state\"",
                "+        session = self.handler._generate_oidc_session_token(",
                "+            state=state,",
                "+            nonce=\"nonce\",",
                "+            client_redirect_url=client_redirect_url,",
                "+            ui_auth_session_id=None,",
                "+        )",
                "+        request = self._build_callback_request(\"code\", state, session)",
                "+",
                "+        self.get_success(self.handler.handle_oidc_callback(request))",
                "+",
                "+    def _build_callback_request(",
                "+        self,",
                "+        code: str,",
                "+        state: str,",
                "+        session: str,",
                "+        user_agent: str = \"Browser\",",
                "+        ip_address: str = \"10.0.0.1\",",
                "+    ):",
                "+        \"\"\"Builds a fake SynapseRequest to mock the browser callback",
                "+",
                "+        Returns a Mock object which looks like the SynapseRequest we get from a browser",
                "+        after SSO (before we return to the client)",
                "+",
                "+        Args:",
                "+            code: the authorization code which would have been returned by the OIDC",
                "+               provider",
                "+            state: the \"state\" param which would have been passed around in the",
                "+               query param. Should be the same as was embedded in the session in",
                "+               _build_oidc_session.",
                "+            session: the \"session\" which would have been passed around in the cookie.",
                "+            user_agent: the user-agent to present",
                "+            ip_address: the IP address to pretend the request came from",
                "+        \"\"\"",
                "+        request = Mock(",
                "+            spec=[",
                "+                \"args\",",
                "+                \"getCookie\",",
                "+                \"addCookie\",",
                "+                \"requestHeaders\",",
                "+                \"getClientIP\",",
                "+                \"get_user_agent\",",
                "+            ]",
                "         )",
                "+",
                "+        request.getCookie.return_value = session",
                "+        request.args = {}",
                "+        request.args[b\"code\"] = [code.encode(\"utf-8\")]",
                "+        request.args[b\"state\"] = [state.encode(\"utf-8\")]",
                "+        request.getClientIP.return_value = ip_address",
                "+        request.get_user_agent.return_value = user_agent",
                "+        return request"
            ],
            "changed_files": [
                "changelog.d/8911.feature",
                "tests/handlers/test_oidc.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8911": "Preparatory refactoring of the SamlHandlerTestCase #8938 Debian builds fail with ascii encoding error on older distros #9076"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8911, 8911",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: reference, request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8911",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f14428b25c37e44675edac4a80d7bd1e47112586",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607713515,
            "hunks": 52,
            "message": "Allow spam-checker modules to be provide async methods. (#8890) Spam checker modules can now provide async methods. This is implemented in a backwards-compatible manner.",
            "diff": [
                "diff --git a/changelog.d/8890.feature b/changelog.d/8890.feature",
                "new file mode 100644",
                "index 000000000..97aa72a76",
                "--- /dev/null",
                "+++ b/changelog.d/8890.feature",
                "@@ -0,0 +1 @@",
                "+Spam-checkers may now define their methods as `async`.",
                "diff --git a/synapse/events/spamcheck.py b/synapse/events/spamcheck.py",
                "index 936896656..e7e3a7b9a 100644",
                "--- a/synapse/events/spamcheck.py",
                "+++ b/synapse/events/spamcheck.py",
                "@@ -17,3 +17,3 @@",
                " import inspect",
                "-from typing import TYPE_CHECKING, Any, Dict, List, Optional, Tuple",
                "+from typing import TYPE_CHECKING, Any, Dict, List, Optional, Tuple, Union",
                "@@ -21,2 +21,3 @@ from synapse.spam_checker_api import RegistrationBehaviour",
                " from synapse.types import Collection",
                "+from synapse.util.async_helpers import maybe_awaitable",
                "@@ -41,3 +42,5 @@ class SpamChecker:",
                "-    def check_event_for_spam(self, event: \"synapse.events.EventBase\") -> bool:",
                "+    async def check_event_for_spam(",
                "+        self, event: \"synapse.events.EventBase\"",
                "+    ) -> Union[bool, str]:",
                "         \"\"\"Checks if a given event is considered \"spammy\" by this server.",
                "@@ -52,6 +55,7 @@ class SpamChecker:",
                "         Returns:",
                "-            True if the event is spammy.",
                "+            True or a string if the event is spammy. If a string is returned it",
                "+            will be used as the error message returned to the user.",
                "         \"\"\"",
                "         for spam_checker in self.spam_checkers:",
                "-            if spam_checker.check_event_for_spam(event):",
                "+            if await maybe_awaitable(spam_checker.check_event_for_spam(event)):",
                "                 return True",
                "@@ -60,3 +64,3 @@ class SpamChecker:",
                "-    def user_may_invite(",
                "+    async def user_may_invite(",
                "         self, inviter_userid: str, invitee_userid: str, room_id: str",
                "@@ -77,3 +81,7 @@ class SpamChecker:",
                "             if (",
                "-                spam_checker.user_may_invite(inviter_userid, invitee_userid, room_id)",
                "+                await maybe_awaitable(",
                "+                    spam_checker.user_may_invite(",
                "+                        inviter_userid, invitee_userid, room_id",
                "+                    )",
                "+                )",
                "                 is False",
                "@@ -84,3 +92,3 @@ class SpamChecker:",
                "-    def user_may_create_room(self, userid: str) -> bool:",
                "+    async def user_may_create_room(self, userid: str) -> bool:",
                "         \"\"\"Checks if a given user may create a room",
                "@@ -96,3 +104,6 @@ class SpamChecker:",
                "         for spam_checker in self.spam_checkers:",
                "-            if spam_checker.user_may_create_room(userid) is False:",
                "+            if (",
                "+                await maybe_awaitable(spam_checker.user_may_create_room(userid))",
                "+                is False",
                "+            ):",
                "                 return False",
                "@@ -101,3 +112,3 @@ class SpamChecker:",
                "-    def user_may_create_room_alias(self, userid: str, room_alias: str) -> bool:",
                "+    async def user_may_create_room_alias(self, userid: str, room_alias: str) -> bool:",
                "         \"\"\"Checks if a given user may create a room alias",
                "@@ -114,3 +125,8 @@ class SpamChecker:",
                "         for spam_checker in self.spam_checkers:",
                "-            if spam_checker.user_may_create_room_alias(userid, room_alias) is False:",
                "+            if (",
                "+                await maybe_awaitable(",
                "+                    spam_checker.user_may_create_room_alias(userid, room_alias)",
                "+                )",
                "+                is False",
                "+            ):",
                "                 return False",
                "@@ -119,3 +135,3 @@ class SpamChecker:",
                "-    def user_may_publish_room(self, userid: str, room_id: str) -> bool:",
                "+    async def user_may_publish_room(self, userid: str, room_id: str) -> bool:",
                "         \"\"\"Checks if a given user may publish a room to the directory",
                "@@ -132,3 +148,8 @@ class SpamChecker:",
                "         for spam_checker in self.spam_checkers:",
                "-            if spam_checker.user_may_publish_room(userid, room_id) is False:",
                "+            if (",
                "+                await maybe_awaitable(",
                "+                    spam_checker.user_may_publish_room(userid, room_id)",
                "+                )",
                "+                is False",
                "+            ):",
                "                 return False",
                "@@ -137,3 +158,3 @@ class SpamChecker:",
                "-    def check_username_for_spam(self, user_profile: Dict[str, str]) -> bool:",
                "+    async def check_username_for_spam(self, user_profile: Dict[str, str]) -> bool:",
                "         \"\"\"Checks if a user ID or display name are considered \"spammy\" by this server.",
                "@@ -159,3 +180,3 @@ class SpamChecker:",
                "                 # cannot modify it.",
                "-                if checker(user_profile.copy()):",
                "+                if await maybe_awaitable(checker(user_profile.copy())):",
                "                     return True",
                "@@ -164,3 +185,3 @@ class SpamChecker:",
                "-    def check_registration_for_spam(",
                "+    async def check_registration_for_spam(",
                "         self,",
                "@@ -187,3 +208,5 @@ class SpamChecker:",
                "             if checker:",
                "-                behaviour = checker(email_threepid, username, request_info)",
                "+                behaviour = await maybe_awaitable(",
                "+                    checker(email_threepid, username, request_info)",
                "+                )",
                "                 assert isinstance(behaviour, RegistrationBehaviour)",
                "diff --git a/synapse/federation/federation_base.py b/synapse/federation/federation_base.py",
                "index 38aa47963..383737520 100644",
                "--- a/synapse/federation/federation_base.py",
                "+++ b/synapse/federation/federation_base.py",
                "@@ -80,2 +80,3 @@ class FederationBase:",
                "+        @defer.inlineCallbacks",
                "         def callback(_, pdu: EventBase):",
                "@@ -107,3 +108,7 @@ class FederationBase:",
                "-                if self.spam_checker.check_event_for_spam(pdu):",
                "+                result = yield defer.ensureDeferred(",
                "+                    self.spam_checker.check_event_for_spam(pdu)",
                "+                )",
                "+",
                "+                if result:",
                "                     logger.warning(",
                "diff --git a/synapse/handlers/auth.py b/synapse/handlers/auth.py",
                "index 62f98dabc..8deec4cd0 100644",
                "--- a/synapse/handlers/auth.py",
                "+++ b/synapse/handlers/auth.py",
                "@@ -16,3 +16,2 @@",
                " # limitations under the License.",
                "-import inspect",
                " import logging",
                "@@ -61,2 +60,3 @@ from synapse.types import JsonDict, Requester, UserID",
                " from synapse.util import stringutils as stringutils",
                "+from synapse.util.async_helpers import maybe_awaitable",
                " from synapse.util.msisdn import phone_number_to_msisdn",
                "@@ -1641,4 +1641,4 @@ class PasswordProvider:",
                "         # until it completes.",
                "-        result = g(user_id=user_id, device_id=device_id, access_token=access_token,)",
                "-        if inspect.isawaitable(result):",
                "-            await result",
                "+        await maybe_awaitable(",
                "+            g(user_id=user_id, device_id=device_id, access_token=access_token,)",
                "+        )",
                "diff --git a/synapse/handlers/directory.py b/synapse/handlers/directory.py",
                "index ad5683d25..abcf86352 100644",
                "--- a/synapse/handlers/directory.py",
                "+++ b/synapse/handlers/directory.py",
                "@@ -135,3 +135,5 @@ class DirectoryHandler(BaseHandler):",
                "-            if not self.spam_checker.user_may_create_room_alias(user_id, room_alias):",
                "+            if not await self.spam_checker.user_may_create_room_alias(",
                "+                user_id, room_alias",
                "+            ):",
                "                 raise AuthError(403, \"This user is not permitted to create this alias\")",
                "@@ -411,3 +413,3 @@ class DirectoryHandler(BaseHandler):",
                "-        if not self.spam_checker.user_may_publish_room(user_id, room_id):",
                "+        if not await self.spam_checker.user_may_publish_room(user_id, room_id):",
                "             raise AuthError(",
                "diff --git a/synapse/handlers/federation.py b/synapse/handlers/federation.py",
                "index df82e60b3..fd8de8696 100644",
                "--- a/synapse/handlers/federation.py",
                "+++ b/synapse/handlers/federation.py",
                "@@ -1595,3 +1595,3 @@ class FederationHandler(BaseHandler):",
                "-        if not self.spam_checker.user_may_invite(",
                "+        if not await self.spam_checker.user_may_invite(",
                "             event.sender, event.state_key, event.room_id",
                "diff --git a/synapse/handlers/message.py b/synapse/handlers/message.py",
                "index 96843338a..2b8aa9443 100644",
                "--- a/synapse/handlers/message.py",
                "+++ b/synapse/handlers/message.py",
                "@@ -746,3 +746,3 @@ class EventCreationHandler:",
                "-            spam_error = self.spam_checker.check_event_for_spam(event)",
                "+            spam_error = await self.spam_checker.check_event_for_spam(event)",
                "             if spam_error:",
                "diff --git a/synapse/handlers/receipts.py b/synapse/handlers/receipts.py",
                "index 153cbae7b..e850e45e4 100644",
                "--- a/synapse/handlers/receipts.py",
                "+++ b/synapse/handlers/receipts.py",
                "@@ -20,3 +20,2 @@ from synapse.handlers._base import BaseHandler",
                " from synapse.types import JsonDict, ReadReceipt, get_domain_from_id",
                "-from synapse.util.async_helpers import maybe_awaitable",
                "@@ -100,6 +99,4 @@ class ReceiptsHandler(BaseHandler):",
                "         # Note that the min here shouldn't be relied upon to be accurate.",
                "-        await maybe_awaitable(",
                "-            self.hs.get_pusherpool().on_new_receipts(",
                "-                min_batch_id, max_batch_id, affected_room_ids",
                "-            )",
                "+        await self.hs.get_pusherpool().on_new_receipts(",
                "+            min_batch_id, max_batch_id, affected_room_ids",
                "         )",
                "diff --git a/synapse/handlers/register.py b/synapse/handlers/register.py",
                "index 0d85fd086..94b5610ac 100644",
                "--- a/synapse/handlers/register.py",
                "+++ b/synapse/handlers/register.py",
                "@@ -189,3 +189,3 @@ class RegistrationHandler(BaseHandler):",
                "-        result = self.spam_checker.check_registration_for_spam(",
                "+        result = await self.spam_checker.check_registration_for_spam(",
                "             threepid, localpart, user_agent_ips or [],",
                "diff --git a/synapse/handlers/room.py b/synapse/handlers/room.py",
                "index 82fb72b38..758341894 100644",
                "--- a/synapse/handlers/room.py",
                "+++ b/synapse/handlers/room.py",
                "@@ -360,3 +360,3 @@ class RoomCreationHandler(BaseHandler):",
                "-        if not self.spam_checker.user_may_create_room(user_id):",
                "+        if not await self.spam_checker.user_may_create_room(user_id):",
                "             raise SynapseError(403, \"You are not permitted to create rooms\")",
                "@@ -611,3 +611,3 @@ class RoomCreationHandler(BaseHandler):",
                "-        if not is_requester_admin and not self.spam_checker.user_may_create_room(",
                "+        if not is_requester_admin and not await self.spam_checker.user_may_create_room(",
                "             user_id",
                "diff --git a/synapse/handlers/room_member.py b/synapse/handlers/room_member.py",
                "index d85110a35..cb5a29bc7 100644",
                "--- a/synapse/handlers/room_member.py",
                "+++ b/synapse/handlers/room_member.py",
                "@@ -410,3 +410,3 @@ class RoomMemberHandler(metaclass=abc.ABCMeta):",
                "-                if not self.spam_checker.user_may_invite(",
                "+                if not await self.spam_checker.user_may_invite(",
                "                     requester.user.to_string(), target.to_string(), room_id",
                "diff --git a/synapse/handlers/user_directory.py b/synapse/handlers/user_directory.py",
                "index afbebfc20..f263a638f 100644",
                "--- a/synapse/handlers/user_directory.py",
                "+++ b/synapse/handlers/user_directory.py",
                "@@ -83,7 +83,7 @@ class UserDirectoryHandler(StateDeltasHandler):",
                "         # Remove any spammy users from the results.",
                "-        results[\"results\"] = [",
                "-            user",
                "-            for user in results[\"results\"]",
                "-            if not self.spam_checker.check_username_for_spam(user)",
                "-        ]",
                "+        non_spammy_users = []",
                "+        for user in results[\"results\"]:",
                "+            if not await self.spam_checker.check_username_for_spam(user):",
                "+                non_spammy_users.append(user)",
                "+        results[\"results\"] = non_spammy_users",
                "diff --git a/synapse/metrics/background_process_metrics.py b/synapse/metrics/background_process_metrics.py",
                "index 658f6ecd7..76b7decf2 100644",
                "--- a/synapse/metrics/background_process_metrics.py",
                "+++ b/synapse/metrics/background_process_metrics.py",
                "@@ -15,3 +15,2 @@",
                "-import inspect",
                " import logging",
                "@@ -27,2 +26,3 @@ from synapse.logging.context import LoggingContext, PreserveLoggingContext",
                " from synapse.logging.opentracing import noop_context_manager, start_active_span",
                "+from synapse.util.async_helpers import maybe_awaitable",
                "@@ -208,8 +208,3 @@ def run_as_background_process(desc: str, func, *args, bg_start_span=True, **kwar",
                "                 with ctx:",
                "-                    result = func(*args, **kwargs)",
                "-",
                "-                    if inspect.isawaitable(result):",
                "-                        result = await result",
                "-",
                "-                    return result",
                "+                    return await maybe_awaitable(func(*args, **kwargs))",
                "             except Exception:",
                "diff --git a/synapse/rest/media/v1/storage_provider.py b/synapse/rest/media/v1/storage_provider.py",
                "index 18c9ed48d..67f67efde 100644",
                "--- a/synapse/rest/media/v1/storage_provider.py",
                "+++ b/synapse/rest/media/v1/storage_provider.py",
                "@@ -15,3 +15,2 @@",
                "-import inspect",
                " import logging",
                "@@ -23,2 +22,3 @@ from synapse.config._base import Config",
                " from synapse.logging.context import defer_to_thread, run_in_background",
                "+from synapse.util.async_helpers import maybe_awaitable",
                "@@ -93,5 +93,3 @@ class StorageProviderWrapper(StorageProvider):",
                "             # against improper implementations.",
                "-            result = self.backend.store_file(path, file_info)",
                "-            if inspect.isawaitable(result):",
                "-                return await result",
                "+            return await maybe_awaitable(self.backend.store_file(path, file_info))",
                "         else:",
                "@@ -100,5 +98,5 @@ class StorageProviderWrapper(StorageProvider):",
                "                 try:",
                "-                    result = self.backend.store_file(path, file_info)",
                "-                    if inspect.isawaitable(result):",
                "-                        return await result",
                "+                    return await maybe_awaitable(",
                "+                        self.backend.store_file(path, file_info)",
                "+                    )",
                "                 except Exception:",
                "@@ -112,5 +110,3 @@ class StorageProviderWrapper(StorageProvider):",
                "         # against improper implementations.",
                "-        result = self.backend.fetch(path, file_info)",
                "-        if inspect.isawaitable(result):",
                "-            return await result",
                "+        return await maybe_awaitable(self.backend.fetch(path, file_info))",
                "diff --git a/synapse/server.py b/synapse/server.py",
                "index 043810ad3..a198b0eb4 100644",
                "--- a/synapse/server.py",
                "+++ b/synapse/server.py",
                "@@ -620,3 +620,3 @@ class HomeServer(metaclass=abc.ABCMeta):",
                "     @cache_in_self",
                "-    def get_spam_checker(self):",
                "+    def get_spam_checker(self) -> SpamChecker:",
                "         return SpamChecker(self)",
                "diff --git a/synapse/util/async_helpers.py b/synapse/util/async_helpers.py",
                "index 382f0cf3f..9a873c8e8 100644",
                "--- a/synapse/util/async_helpers.py",
                "+++ b/synapse/util/async_helpers.py",
                "@@ -17,2 +17,3 @@",
                " import collections",
                "+import inspect",
                " import logging",
                "@@ -21,2 +22,3 @@ from typing import (",
                "     Any,",
                "+    Awaitable,",
                "     Callable,",
                "@@ -544,7 +546,7 @@ class DoneAwaitable:",
                "-def maybe_awaitable(value):",
                "+def maybe_awaitable(value: Union[Awaitable[R], R]) -> Awaitable[R]:",
                "     \"\"\"Convert a value to an awaitable if not already an awaitable.",
                "     \"\"\"",
                "-",
                "-    if hasattr(value, \"__await__\"):",
                "+    if inspect.isawaitable(value):",
                "+        assert isinstance(value, Awaitable)",
                "         return value",
                "diff --git a/synapse/util/distributor.py b/synapse/util/distributor.py",
                "index f73e95393..a6ee9edae 100644",
                "--- a/synapse/util/distributor.py",
                "+++ b/synapse/util/distributor.py",
                "@@ -14,3 +14,2 @@",
                " # limitations under the License.",
                "-import inspect",
                " import logging",
                "@@ -21,2 +20,3 @@ from synapse.logging.context import make_deferred_yieldable, run_in_background",
                " from synapse.metrics.background_process_metrics import run_as_background_process",
                "+from synapse.util.async_helpers import maybe_awaitable",
                "@@ -107,6 +107,3 @@ class Signal:",
                "             try:",
                "-                result = observer(*args, **kwargs)",
                "-                if inspect.isawaitable(result):",
                "-                    result = await result",
                "-                return result",
                "+                return await maybe_awaitable(observer(*args, **kwargs))",
                "             except Exception as e:",
                "diff --git a/tests/handlers/test_user_directory.py b/tests/handlers/test_user_directory.py",
                "index 98e5af207..647a17cb9 100644",
                "--- a/tests/handlers/test_user_directory.py",
                "+++ b/tests/handlers/test_user_directory.py",
                "@@ -272,3 +272,3 @@ class UserDirectoryTestCase(unittest.HomeserverTestCase):",
                "         class AllowAll:",
                "-            def check_username_for_spam(self, user_profile):",
                "+            async def check_username_for_spam(self, user_profile):",
                "                 # Allow all users.",
                "@@ -285,3 +285,3 @@ class UserDirectoryTestCase(unittest.HomeserverTestCase):",
                "         class BlockAll:",
                "-            def check_username_for_spam(self, user_profile):",
                "+            async def check_username_for_spam(self, user_profile):",
                "                 # All users are spammy."
            ],
            "changed_files": [
                "changelog.d/8890.feature",
                "synapse/events/spamcheck.py",
                "synapse/federation/federation_base.py",
                "synapse/handlers/auth.py",
                "synapse/handlers/directory.py",
                "synapse/handlers/federation.py",
                "synapse/handlers/message.py",
                "synapse/handlers/receipts.py",
                "synapse/handlers/register.py",
                "synapse/handlers/room.py",
                "synapse/handlers/room_member.py",
                "synapse/handlers/user_directory.py",
                "synapse/metrics/background_process_metrics.py",
                "synapse/rest/media/v1/storage_provider.py",
                "synapse/server.py",
                "synapse/util/async_helpers.py",
                "synapse/util/distributor.py",
                "tests/handlers/test_user_directory.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8890": "Honour AS ratelimit settings for /login requests #8920 Add type hints to the crypto module #8999"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8890, 8890",
                    "relevance": 32
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server, federation",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8890",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0a34cdfc6682c2654c745c4d7c2f5ffd1865dbc8",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607683367,
            "hunks": 22,
            "message": "Add number of local devices to Room Details Admin API (#8886)",
            "diff": [
                "diff --git a/changelog.d/8886.feature b/changelog.d/8886.feature",
                "new file mode 100644",
                "index 000000000..9e446f28b",
                "--- /dev/null",
                "+++ b/changelog.d/8886.feature",
                "@@ -0,0 +1 @@",
                "+Add number of local devices to Room Details Admin API. Contributed by @dklimpel.",
                "\\ No newline at end of file",
                "diff --git a/synapse/rest/admin/rooms.py b/synapse/rest/admin/rooms.py",
                "index 25f89e468..b902af802 100644",
                "--- a/synapse/rest/admin/rooms.py",
                "+++ b/synapse/rest/admin/rooms.py",
                "@@ -16,3 +16,3 @@ import logging",
                " from http import HTTPStatus",
                "-from typing import List, Optional",
                "+from typing import TYPE_CHECKING, List, Optional, Tuple",
                "@@ -27,2 +27,3 @@ from synapse.http.servlet import (",
                " )",
                "+from synapse.http.site import SynapseRequest",
                " from synapse.rest.admin._base import (",
                "@@ -33,3 +34,6 @@ from synapse.rest.admin._base import (",
                " from synapse.storage.databases.main.room import RoomSortOrder",
                "-from synapse.types import RoomAlias, RoomID, UserID, create_requester",
                "+from synapse.types import JsonDict, RoomAlias, RoomID, UserID, create_requester",
                "+",
                "+if TYPE_CHECKING:",
                "+    from synapse.server import HomeServer",
                "@@ -47,3 +51,3 @@ class ShutdownRoomRestServlet(RestServlet):",
                "-    def __init__(self, hs):",
                "+    def __init__(self, hs: \"HomeServer\"):",
                "         self.hs = hs",
                "@@ -52,3 +56,5 @@ class ShutdownRoomRestServlet(RestServlet):",
                "-    async def on_POST(self, request, room_id):",
                "+    async def on_POST(",
                "+        self, request: SynapseRequest, room_id: str",
                "+    ) -> Tuple[int, JsonDict]:",
                "         requester = await self.auth.get_user_by_req(request)",
                "@@ -88,3 +94,3 @@ class DeleteRoomRestServlet(RestServlet):",
                "-    def __init__(self, hs):",
                "+    def __init__(self, hs: \"HomeServer\"):",
                "         self.hs = hs",
                "@@ -94,3 +100,5 @@ class DeleteRoomRestServlet(RestServlet):",
                "-    async def on_POST(self, request, room_id):",
                "+    async def on_POST(",
                "+        self, request: SynapseRequest, room_id: str",
                "+    ) -> Tuple[int, JsonDict]:",
                "         requester = await self.auth.get_user_by_req(request)",
                "@@ -148,3 +156,3 @@ class ListRoomRestServlet(RestServlet):",
                "-    def __init__(self, hs):",
                "+    def __init__(self, hs: \"HomeServer\"):",
                "         self.store = hs.get_datastore()",
                "@@ -153,3 +161,3 @@ class ListRoomRestServlet(RestServlet):",
                "-    async def on_GET(self, request):",
                "+    async def on_GET(self, request: SynapseRequest) -> Tuple[int, JsonDict]:",
                "         requester = await self.auth.get_user_by_req(request)",
                "@@ -238,3 +246,3 @@ class RoomRestServlet(RestServlet):",
                "-    def __init__(self, hs):",
                "+    def __init__(self, hs: \"HomeServer\"):",
                "         self.hs = hs",
                "@@ -243,3 +251,5 @@ class RoomRestServlet(RestServlet):",
                "-    async def on_GET(self, request, room_id):",
                "+    async def on_GET(",
                "+        self, request: SynapseRequest, room_id: str",
                "+    ) -> Tuple[int, JsonDict]:",
                "         await assert_requester_is_admin(self.auth, request)",
                "@@ -250,3 +260,6 @@ class RoomRestServlet(RestServlet):",
                "-        return 200, ret",
                "+        members = await self.store.get_users_in_room(room_id)",
                "+        ret[\"joined_local_devices\"] = await self.store.count_devices_by_users(members)",
                "+",
                "+        return (200, ret)",
                "@@ -260,3 +273,3 @@ class RoomMembersRestServlet(RestServlet):",
                "-    def __init__(self, hs):",
                "+    def __init__(self, hs: \"HomeServer\"):",
                "         self.hs = hs",
                "@@ -265,3 +278,5 @@ class RoomMembersRestServlet(RestServlet):",
                "-    async def on_GET(self, request, room_id):",
                "+    async def on_GET(",
                "+        self, request: SynapseRequest, room_id: str",
                "+    ) -> Tuple[int, JsonDict]:",
                "         await assert_requester_is_admin(self.auth, request)",
                "@@ -282,3 +297,3 @@ class JoinRoomAliasServlet(RestServlet):",
                "-    def __init__(self, hs):",
                "+    def __init__(self, hs: \"HomeServer\"):",
                "         self.hs = hs",
                "@@ -289,3 +304,5 @@ class JoinRoomAliasServlet(RestServlet):",
                "-    async def on_POST(self, request, room_identifier):",
                "+    async def on_POST(",
                "+        self, request: SynapseRequest, room_identifier: str",
                "+    ) -> Tuple[int, JsonDict]:",
                "         requester = await self.auth.get_user_by_req(request)",
                "@@ -316,3 +333,2 @@ class JoinRoomAliasServlet(RestServlet):",
                "             room_id, remote_room_hosts = await handler.lookup_room_alias(room_alias)",
                "-            room_id = room_id.to_string()",
                "         else:",
                "diff --git a/synapse/storage/databases/main/devices.py b/synapse/storage/databases/main/devices.py",
                "index dfb4f87b8..909767764 100644",
                "--- a/synapse/storage/databases/main/devices.py",
                "+++ b/synapse/storage/databases/main/devices.py",
                "@@ -59,2 +59,34 @@ class DeviceWorkerStore(SQLBaseStore):",
                "+    async def count_devices_by_users(self, user_ids: Optional[List[str]] = None) -> int:",
                "+        \"\"\"Retrieve number of all devices of given users.",
                "+        Only returns number of devices that are not marked as hidden.",
                "+",
                "+        Args:",
                "+            user_ids: The IDs of the users which owns devices",
                "+        Returns:",
                "+            Number of devices of this users.",
                "+        \"\"\"",
                "+",
                "+        def count_devices_by_users_txn(txn, user_ids):",
                "+            sql = \"\"\"",
                "+                SELECT count(*)",
                "+                FROM devices",
                "+                WHERE",
                "+                    hidden = '0' AND",
                "+            \"\"\"",
                "+",
                "+            clause, args = make_in_list_sql_clause(",
                "+                txn.database_engine, \"user_id\", user_ids",
                "+            )",
                "+",
                "+            txn.execute(sql + clause, args)",
                "+            return txn.fetchone()[0]",
                "+",
                "+        if not user_ids:",
                "+            return 0",
                "+",
                "+        return await self.db_pool.runInteraction(",
                "+            \"count_devices_by_users\", count_devices_by_users_txn, user_ids",
                "+        )",
                "+",
                "     async def get_device(self, user_id: str, device_id: str) -> Dict[str, Any]:",
                "diff --git a/tests/rest/admin/test_room.py b/tests/rest/admin/test_room.py",
                "index 46933a049..9c100050d 100644",
                "--- a/tests/rest/admin/test_room.py",
                "+++ b/tests/rest/admin/test_room.py",
                "@@ -1086,2 +1086,3 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "         self.assertIn(\"joined_local_members\", channel.json_body)",
                "+        self.assertIn(\"joined_local_devices\", channel.json_body)",
                "         self.assertIn(\"version\", channel.json_body)",
                "@@ -1098,2 +1099,35 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "+    def test_single_room_devices(self):",
                "+        \"\"\"Test that `joined_local_devices` can be requested correctly\"\"\"",
                "+        room_id_1 = self.helper.create_room_as(self.admin_user, tok=self.admin_user_tok)",
                "+",
                "+        url = \"/_synapse/admin/v1/rooms/%s\" % (room_id_1,)",
                "+        request, channel = self.make_request(",
                "+            \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "+        )",
                "+        self.assertEqual(200, channel.code, msg=channel.json_body)",
                "+        self.assertEqual(1, channel.json_body[\"joined_local_devices\"])",
                "+",
                "+        # Have another user join the room",
                "+        user_1 = self.register_user(\"foo\", \"pass\")",
                "+        user_tok_1 = self.login(\"foo\", \"pass\")",
                "+        self.helper.join(room_id_1, user_1, tok=user_tok_1)",
                "+",
                "+        url = \"/_synapse/admin/v1/rooms/%s\" % (room_id_1,)",
                "+        request, channel = self.make_request(",
                "+            \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "+        )",
                "+        self.assertEqual(200, channel.code, msg=channel.json_body)",
                "+        self.assertEqual(2, channel.json_body[\"joined_local_devices\"])",
                "+",
                "+        # leave room",
                "+        self.helper.leave(room_id_1, self.admin_user, tok=self.admin_user_tok)",
                "+        self.helper.leave(room_id_1, user_1, tok=user_tok_1)",
                "+        url = \"/_synapse/admin/v1/rooms/%s\" % (room_id_1,)",
                "+        request, channel = self.make_request(",
                "+            \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "+        )",
                "+        self.assertEqual(200, channel.code, msg=channel.json_body)",
                "+        self.assertEqual(0, channel.json_body[\"joined_local_devices\"])",
                "+",
                "     def test_room_members(self):",
                "diff --git a/tests/storage/test_devices.py b/tests/storage/test_devices.py",
                "index ecb00f4e0..dabc1c5f0 100644",
                "--- a/tests/storage/test_devices.py",
                "+++ b/tests/storage/test_devices.py",
                "@@ -81,2 +81,28 @@ class DeviceStoreTestCase(tests.unittest.TestCase):",
                "+    @defer.inlineCallbacks",
                "+    def test_count_devices_by_users(self):",
                "+        yield defer.ensureDeferred(",
                "+            self.store.store_device(\"user_id\", \"device1\", \"display_name 1\")",
                "+        )",
                "+        yield defer.ensureDeferred(",
                "+            self.store.store_device(\"user_id\", \"device2\", \"display_name 2\")",
                "+        )",
                "+        yield defer.ensureDeferred(",
                "+            self.store.store_device(\"user_id2\", \"device3\", \"display_name 3\")",
                "+        )",
                "+",
                "+        res = yield defer.ensureDeferred(self.store.count_devices_by_users())",
                "+        self.assertEqual(0, res)",
                "+",
                "+        res = yield defer.ensureDeferred(self.store.count_devices_by_users([\"unknown\"]))",
                "+        self.assertEqual(0, res)",
                "+",
                "+        res = yield defer.ensureDeferred(self.store.count_devices_by_users([\"user_id\"]))",
                "+        self.assertEqual(2, res)",
                "+",
                "+        res = yield defer.ensureDeferred(",
                "+            self.store.count_devices_by_users([\"user_id\", \"user_id2\"])",
                "+        )",
                "+        self.assertEqual(3, res)",
                "+",
                "     @defer.inlineCallbacks"
            ],
            "changed_files": [
                "changelog.d/8886.feature",
                "synapse/rest/admin/rooms.py",
                "synapse/storage/databases/main/devices.py",
                "tests/rest/admin/test_room.py",
                "tests/storage/test_devices.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8886": "Add number of local devices to Room Details Admin API Awesome-Technologies/synapse-admin#92 ValueError: Attempted to iterate a RoomID #9505"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8886, 8886",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8886",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c64002e1c1e95578528e96e3ae87738c4aea1d8a",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607604238,
            "hunks": 10,
            "message": "Refactor `SsoHandler.get_mxid_from_sso` (#8900) * Factor out _call_attribute_mapper and _register_mapped_user This is mostly an attempt to simplify `get_mxid_from_sso`. * Move mapping_lock down into SsoHandler.",
            "diff": [
                "diff --git a/changelog.d/8900.feature b/changelog.d/8900.feature",
                "new file mode 100644",
                "index 000000000..d450ef499",
                "--- /dev/null",
                "+++ b/changelog.d/8900.feature",
                "@@ -0,0 +1 @@",
                "+Add support for allowing users to pick their own user ID during a single-sign-on login.",
                "diff --git a/synapse/handlers/saml_handler.py b/synapse/handlers/saml_handler.py",
                "index 5846f0860..f2ca1ddb5 100644",
                "--- a/synapse/handlers/saml_handler.py",
                "+++ b/synapse/handlers/saml_handler.py",
                "@@ -36,3 +36,2 @@ from synapse.types import (",
                " )",
                "-from synapse.util.async_helpers import Linearizer",
                " from synapse.util.iterutils import chunk_seq",
                "@@ -83,5 +82,2 @@ class SamlHandler(BaseHandler):",
                "-        # a lock on the mappings",
                "-        self._mapping_lock = Linearizer(name=\"saml_mapping\", clock=self.clock)",
                "-",
                "         self._sso_handler = hs.get_sso_handler()",
                "@@ -301,11 +297,10 @@ class SamlHandler(BaseHandler):",
                "-        with (await self._mapping_lock.queue(self._auth_provider_id)):",
                "-            return await self._sso_handler.get_mxid_from_sso(",
                "-                self._auth_provider_id,",
                "-                remote_user_id,",
                "-                user_agent,",
                "-                ip_address,",
                "-                saml_response_to_remapped_user_attributes,",
                "-                grandfather_existing_users,",
                "-            )",
                "+        return await self._sso_handler.get_mxid_from_sso(",
                "+            self._auth_provider_id,",
                "+            remote_user_id,",
                "+            user_agent,",
                "+            ip_address,",
                "+            saml_response_to_remapped_user_attributes,",
                "+            grandfather_existing_users,",
                "+        )",
                "diff --git a/synapse/handlers/sso.py b/synapse/handlers/sso.py",
                "index e24767b92..112a7d5b2 100644",
                "--- a/synapse/handlers/sso.py",
                "+++ b/synapse/handlers/sso.py",
                "@@ -24,2 +24,3 @@ from synapse.http.server import respond_with_html",
                " from synapse.types import UserID, contains_invalid_mxid_characters",
                "+from synapse.util.async_helpers import Linearizer",
                "@@ -56,2 +57,5 @@ class SsoHandler:",
                "+        # a lock on the mappings",
                "+        self._mapping_lock = Linearizer(name=\"sso_user_mapping\", clock=hs.get_clock())",
                "+",
                "     def render_error(",
                "@@ -174,20 +178,34 @@ class SsoHandler:",
                "         \"\"\"",
                "-        # first of all, check if we already have a mapping for this user",
                "-        previously_registered_user_id = await self.get_sso_user_by_remote_user_id(",
                "-            auth_provider_id, remote_user_id,",
                "-        )",
                "-        if previously_registered_user_id:",
                "-            return previously_registered_user_id",
                "-",
                "-        # Check for grandfathering of users.",
                "-        if grandfather_existing_users:",
                "-            previously_registered_user_id = await grandfather_existing_users()",
                "+        # grab a lock while we try to find a mapping for this user. This seems...",
                "+        # optimistic, especially for implementations that end up redirecting to",
                "+        # interstitial pages.",
                "+        with await self._mapping_lock.queue(auth_provider_id):",
                "+            # first of all, check if we already have a mapping for this user",
                "+            previously_registered_user_id = await self.get_sso_user_by_remote_user_id(",
                "+                auth_provider_id, remote_user_id,",
                "+            )",
                "             if previously_registered_user_id:",
                "-                # Future logins should also match this user ID.",
                "-                await self._store.record_user_external_id(",
                "-                    auth_provider_id, remote_user_id, previously_registered_user_id",
                "-                )",
                "                 return previously_registered_user_id",
                "-        # Otherwise, generate a new user.",
                "+            # Check for grandfathering of users.",
                "+            if grandfather_existing_users:",
                "+                previously_registered_user_id = await grandfather_existing_users()",
                "+                if previously_registered_user_id:",
                "+                    # Future logins should also match this user ID.",
                "+                    await self._store.record_user_external_id(",
                "+                        auth_provider_id, remote_user_id, previously_registered_user_id",
                "+                    )",
                "+                    return previously_registered_user_id",
                "+",
                "+            # Otherwise, generate a new user.",
                "+            attributes = await self._call_attribute_mapper(sso_to_matrix_id_mapper)",
                "+            user_id = await self._register_mapped_user(",
                "+                attributes, auth_provider_id, remote_user_id, user_agent, ip_address,",
                "+            )",
                "+            return user_id",
                "+",
                "+    async def _call_attribute_mapper(",
                "+        self, sso_to_matrix_id_mapper: Callable[[int], Awaitable[UserAttributes]],",
                "+    ) -> UserAttributes:",
                "+        \"\"\"Call the attribute mapper function in a loop, until we get a unique userid\"\"\"",
                "         for i in range(self._MAP_USERNAME_RETRIES):",
                "@@ -229,3 +247,12 @@ class SsoHandler:",
                "             )",
                "+        return attributes",
                "+    async def _register_mapped_user(",
                "+        self,",
                "+        attributes: UserAttributes,",
                "+        auth_provider_id: str,",
                "+        remote_user_id: str,",
                "+        user_agent: str,",
                "+        ip_address: str,",
                "+    ) -> str:",
                "         # Since the localpart is provided via a potentially untrusted module,"
            ],
            "changed_files": [
                "changelog.d/8900.feature",
                "synapse/handlers/saml_handler.py",
                "synapse/handlers/sso.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8900": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8900, 8900",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8900",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bd30cfe86a5413191fe44d8f937a00117334ea82",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608135930,
            "hunks": 108,
            "message": "Convert internal pusher dicts to attrs classes. (#8940) This improves type hinting and should use less memory.",
            "diff": [
                "diff --git a/changelog.d/8940.misc b/changelog.d/8940.misc",
                "new file mode 100644",
                "index 000000000..4ff0b94b9",
                "--- /dev/null",
                "+++ b/changelog.d/8940.misc",
                "@@ -0,0 +1 @@",
                "+Add type hints to push module.",
                "diff --git a/mypy.ini b/mypy.ini",
                "index 334e3a22f..190420402 100644",
                "--- a/mypy.ini",
                "+++ b/mypy.ini",
                "@@ -67,2 +67,3 @@ files =",
                "   synapse/storage/databases/main/events.py,",
                "+  synapse/storage/databases/main/pusher.py,",
                "   synapse/storage/databases/main/registration.py,",
                "diff --git a/synapse/push/__init__.py b/synapse/push/__init__.py",
                "index ad07ee86f..9e7ac149a 100644",
                "--- a/synapse/push/__init__.py",
                "+++ b/synapse/push/__init__.py",
                "@@ -16,5 +16,7 @@",
                " import abc",
                "-from typing import TYPE_CHECKING, Any, Dict",
                "+from typing import TYPE_CHECKING, Any, Dict, Optional",
                "-from synapse.types import RoomStreamToken",
                "+import attr",
                "+",
                "+from synapse.types import JsonDict, RoomStreamToken",
                "@@ -24,4 +26,46 @@ if TYPE_CHECKING:",
                "+@attr.s(slots=True)",
                "+class PusherConfig:",
                "+    \"\"\"Parameters necessary to configure a pusher.\"\"\"",
                "+",
                "+    id = attr.ib(type=Optional[str])",
                "+    user_name = attr.ib(type=str)",
                "+    access_token = attr.ib(type=Optional[int])",
                "+    profile_tag = attr.ib(type=str)",
                "+    kind = attr.ib(type=str)",
                "+    app_id = attr.ib(type=str)",
                "+    app_display_name = attr.ib(type=str)",
                "+    device_display_name = attr.ib(type=str)",
                "+    pushkey = attr.ib(type=str)",
                "+    ts = attr.ib(type=int)",
                "+    lang = attr.ib(type=Optional[str])",
                "+    data = attr.ib(type=Optional[JsonDict])",
                "+    last_stream_ordering = attr.ib(type=Optional[int])",
                "+    last_success = attr.ib(type=Optional[int])",
                "+    failing_since = attr.ib(type=Optional[int])",
                "+",
                "+    def as_dict(self) -> Dict[str, Any]:",
                "+        \"\"\"Information that can be retrieved about a pusher after creation.\"\"\"",
                "+        return {",
                "+            \"app_display_name\": self.app_display_name,",
                "+            \"app_id\": self.app_id,",
                "+            \"data\": self.data,",
                "+            \"device_display_name\": self.device_display_name,",
                "+            \"kind\": self.kind,",
                "+            \"lang\": self.lang,",
                "+            \"profile_tag\": self.profile_tag,",
                "+            \"pushkey\": self.pushkey,",
                "+        }",
                "+",
                "+",
                "+@attr.s(slots=True)",
                "+class ThrottleParams:",
                "+    \"\"\"Parameters for controlling the rate of sending pushes via email.\"\"\"",
                "+",
                "+    last_sent_ts = attr.ib(type=int)",
                "+    throttle_ms = attr.ib(type=int)",
                "+",
                "+",
                " class Pusher(metaclass=abc.ABCMeta):",
                "-    def __init__(self, hs: \"HomeServer\", pusherdict: Dict[str, Any]):",
                "+    def __init__(self, hs: \"HomeServer\", pusher_config: PusherConfig):",
                "         self.hs = hs",
                "@@ -30,6 +74,8 @@ class Pusher(metaclass=abc.ABCMeta):",
                "-        self.pusher_id = pusherdict[\"id\"]",
                "-        self.user_id = pusherdict[\"user_name\"]",
                "-        self.app_id = pusherdict[\"app_id\"]",
                "-        self.pushkey = pusherdict[\"pushkey\"]",
                "+        self.pusher_id = pusher_config.id",
                "+        self.user_id = pusher_config.user_name",
                "+        self.app_id = pusher_config.app_id",
                "+        self.pushkey = pusher_config.pushkey",
                "+",
                "+        self.last_stream_ordering = pusher_config.last_stream_ordering",
                "diff --git a/synapse/push/emailpusher.py b/synapse/push/emailpusher.py",
                "index 11a97b8df..d2eff75a5 100644",
                "--- a/synapse/push/emailpusher.py",
                "+++ b/synapse/push/emailpusher.py",
                "@@ -16,3 +16,3 @@",
                " import logging",
                "-from typing import TYPE_CHECKING, Any, Dict, List, Optional",
                "+from typing import TYPE_CHECKING, Dict, List, Optional",
                "@@ -22,3 +22,3 @@ from twisted.internet.error import AlreadyCalled, AlreadyCancelled",
                " from synapse.metrics.background_process_metrics import run_as_background_process",
                "-from synapse.push import Pusher",
                "+from synapse.push import Pusher, PusherConfig, ThrottleParams",
                " from synapse.push.mailer import Mailer",
                "@@ -62,4 +62,4 @@ class EmailPusher(Pusher):",
                "-    def __init__(self, hs: \"HomeServer\", pusherdict: Dict[str, Any], mailer: Mailer):",
                "-        super().__init__(hs, pusherdict)",
                "+    def __init__(self, hs: \"HomeServer\", pusher_config: PusherConfig, mailer: Mailer):",
                "+        super().__init__(hs, pusher_config)",
                "         self.mailer = mailer",
                "@@ -67,6 +67,5 @@ class EmailPusher(Pusher):",
                "         self.store = self.hs.get_datastore()",
                "-        self.email = pusherdict[\"pushkey\"]",
                "-        self.last_stream_ordering = pusherdict[\"last_stream_ordering\"]",
                "+        self.email = pusher_config.pushkey",
                "         self.timed_call = None  # type: Optional[DelayedCall]",
                "-        self.throttle_params = {}  # type: Dict[str, Dict[str, int]]",
                "+        self.throttle_params = {}  # type: Dict[str, ThrottleParams]",
                "         self._inited = False",
                "@@ -134,2 +133,3 @@ class EmailPusher(Pusher):",
                "                 # this is our first loop: load up the throttle params",
                "+                assert self.pusher_id is not None",
                "                 self.throttle_params = await self.store.get_throttle_params_by_room(",
                "@@ -159,2 +159,3 @@ class EmailPusher(Pusher):",
                "         start = 0 if INCLUDE_ALL_UNREAD_NOTIFS else self.last_stream_ordering",
                "+        assert start is not None",
                "         unprocessed = await self.store.get_unread_push_actions_for_user_in_range_for_email(",
                "@@ -246,3 +247,3 @@ class EmailPusher(Pusher):",
                "         if room_id in self.throttle_params:",
                "-            return self.throttle_params[room_id][\"throttle_ms\"]",
                "+            return self.throttle_params[room_id].throttle_ms",
                "         else:",
                "@@ -252,3 +253,3 @@ class EmailPusher(Pusher):",
                "         if room_id in self.throttle_params:",
                "-            return self.throttle_params[room_id][\"last_sent_ts\"]",
                "+            return self.throttle_params[room_id].last_sent_ts",
                "         else:",
                "@@ -303,6 +304,6 @@ class EmailPusher(Pusher):",
                "                 )",
                "-        self.throttle_params[room_id] = {",
                "-            \"last_sent_ts\": self.clock.time_msec(),",
                "-            \"throttle_ms\": new_throttle_ms,",
                "-        }",
                "+        self.throttle_params[room_id] = ThrottleParams(",
                "+            self.clock.time_msec(), new_throttle_ms,",
                "+        )",
                "+        assert self.pusher_id is not None",
                "         await self.store.set_throttle_params(",
                "diff --git a/synapse/push/httppusher.py b/synapse/push/httppusher.py",
                "index e8b25bcd2..417fe0f1f 100644",
                "--- a/synapse/push/httppusher.py",
                "+++ b/synapse/push/httppusher.py",
                "@@ -27,3 +27,3 @@ from synapse.logging import opentracing",
                " from synapse.metrics.background_process_metrics import run_as_background_process",
                "-from synapse.push import Pusher, PusherConfigException",
                "+from synapse.push import Pusher, PusherConfig, PusherConfigException",
                "@@ -64,12 +64,11 @@ class HttpPusher(Pusher):",
                "-    def __init__(self, hs: \"HomeServer\", pusherdict: Dict[str, Any]):",
                "-        super().__init__(hs, pusherdict)",
                "+    def __init__(self, hs: \"HomeServer\", pusher_config: PusherConfig):",
                "+        super().__init__(hs, pusher_config)",
                "         self.storage = self.hs.get_storage()",
                "-        self.app_display_name = pusherdict[\"app_display_name\"]",
                "-        self.device_display_name = pusherdict[\"device_display_name\"]",
                "-        self.pushkey_ts = pusherdict[\"ts\"]",
                "-        self.data = pusherdict[\"data\"]",
                "-        self.last_stream_ordering = pusherdict[\"last_stream_ordering\"]",
                "+        self.app_display_name = pusher_config.app_display_name",
                "+        self.device_display_name = pusher_config.device_display_name",
                "+        self.pushkey_ts = pusher_config.ts",
                "+        self.data = pusher_config.data",
                "         self.backoff_delay = HttpPusher.INITIAL_BACKOFF_SEC",
                "-        self.failing_since = pusherdict[\"failing_since\"]",
                "+        self.failing_since = pusher_config.failing_since",
                "         self.timed_call = None",
                "@@ -78,15 +77,12 @@ class HttpPusher(Pusher):",
                "-        if \"data\" not in pusherdict:",
                "-            raise PusherConfigException(\"No 'data' key for HTTP pusher\")",
                "-        self.data = pusherdict[\"data\"]",
                "+        self.data = pusher_config.data",
                "+        if self.data is None:",
                "+            raise PusherConfigException(\"'data' key can not be null for HTTP pusher\")",
                "         self.name = \"%s/%s/%s\" % (",
                "-            pusherdict[\"user_name\"],",
                "-            pusherdict[\"app_id\"],",
                "-            pusherdict[\"pushkey\"],",
                "+            pusher_config.user_name,",
                "+            pusher_config.app_id,",
                "+            pusher_config.pushkey,",
                "         )",
                "-        if self.data is None:",
                "-            raise PusherConfigException(\"data can not be null for HTTP pusher\")",
                "-",
                "         # Validate that there's a URL and it is of the proper form.",
                "@@ -182,2 +178,3 @@ class HttpPusher(Pusher):",
                "         \"\"\"",
                "+        assert self.last_stream_ordering is not None",
                "         unprocessed = await self.store.get_unread_push_actions_for_user_in_range_for_http(",
                "@@ -210,2 +207,3 @@ class HttpPusher(Pusher):",
                "                 self.last_stream_ordering = push_action[\"stream_ordering\"]",
                "+                assert self.last_stream_ordering is not None",
                "                 pusher_still_exists = await self.store.update_pusher_last_stream_ordering_and_success(",
                "@@ -316,2 +314,4 @@ class HttpPusher(Pusher):",
                "+        # This was checked in the __init__, but mypy doesn't seem to know that.",
                "+        assert self.data is not None",
                "         if self.data.get(\"format\") == \"event_id_only\":",
                "diff --git a/synapse/push/pusher.py b/synapse/push/pusher.py",
                "index 8f1072b09..2aa7918fb 100644",
                "--- a/synapse/push/pusher.py",
                "+++ b/synapse/push/pusher.py",
                "@@ -16,5 +16,5 @@",
                " import logging",
                "-from typing import TYPE_CHECKING, Any, Callable, Dict, Optional",
                "+from typing import TYPE_CHECKING, Callable, Dict, Optional",
                "-from synapse.push import Pusher",
                "+from synapse.push import Pusher, PusherConfig",
                " from synapse.push.emailpusher import EmailPusher",
                "@@ -36,3 +36,3 @@ class PusherFactory:",
                "             \"http\": HttpPusher",
                "-        }  # type: Dict[str, Callable[[HomeServer, dict], Pusher]]",
                "+        }  # type: Dict[str, Callable[[HomeServer, PusherConfig], Pusher]]",
                "@@ -49,4 +49,4 @@ class PusherFactory:",
                "-    def create_pusher(self, pusherdict: Dict[str, Any]) -> Optional[Pusher]:",
                "-        kind = pusherdict[\"kind\"]",
                "+    def create_pusher(self, pusher_config: PusherConfig) -> Optional[Pusher]:",
                "+        kind = pusher_config.kind",
                "         f = self.pusher_types.get(kind, None)",
                "@@ -54,9 +54,9 @@ class PusherFactory:",
                "             return None",
                "-        logger.debug(\"creating %s pusher for %r\", kind, pusherdict)",
                "-        return f(self.hs, pusherdict)",
                "+        logger.debug(\"creating %s pusher for %r\", kind, pusher_config)",
                "+        return f(self.hs, pusher_config)",
                "     def _create_email_pusher(",
                "-        self, _hs: \"HomeServer\", pusherdict: Dict[str, Any]",
                "+        self, _hs: \"HomeServer\", pusher_config: PusherConfig",
                "     ) -> EmailPusher:",
                "-        app_name = self._app_name_from_pusherdict(pusherdict)",
                "+        app_name = self._app_name_from_pusherdict(pusher_config)",
                "         mailer = self.mailers.get(app_name)",
                "@@ -70,6 +70,6 @@ class PusherFactory:",
                "             self.mailers[app_name] = mailer",
                "-        return EmailPusher(self.hs, pusherdict, mailer)",
                "+        return EmailPusher(self.hs, pusher_config, mailer)",
                "-    def _app_name_from_pusherdict(self, pusherdict: Dict[str, Any]) -> str:",
                "-        data = pusherdict[\"data\"]",
                "+    def _app_name_from_pusherdict(self, pusher_config: PusherConfig) -> str:",
                "+        data = pusher_config.data",
                "diff --git a/synapse/push/pusherpool.py b/synapse/push/pusherpool.py",
                "index 9c12d81cf..8158356d4 100644",
                "--- a/synapse/push/pusherpool.py",
                "+++ b/synapse/push/pusherpool.py",
                "@@ -17,3 +17,3 @@",
                " import logging",
                "-from typing import TYPE_CHECKING, Any, Dict, Optional",
                "+from typing import TYPE_CHECKING, Dict, Iterable, Optional",
                "@@ -25,5 +25,5 @@ from synapse.metrics.background_process_metrics import (",
                " )",
                "-from synapse.push import Pusher, PusherConfigException",
                "+from synapse.push import Pusher, PusherConfig, PusherConfigException",
                " from synapse.push.pusher import PusherFactory",
                "-from synapse.types import RoomStreamToken",
                "+from synapse.types import JsonDict, RoomStreamToken",
                " from synapse.util.async_helpers import concurrently_execute",
                "@@ -79,3 +79,3 @@ class PusherPool:",
                "-    def start(self):",
                "+    def start(self) -> None:",
                "         \"\"\"Starts the pushers off in a background process.",
                "@@ -89,12 +89,12 @@ class PusherPool:",
                "         self,",
                "-        user_id,",
                "-        access_token,",
                "-        kind,",
                "-        app_id,",
                "-        app_display_name,",
                "-        device_display_name,",
                "-        pushkey,",
                "-        lang,",
                "-        data,",
                "-        profile_tag=\"\",",
                "+        user_id: str,",
                "+        access_token: Optional[int],",
                "+        kind: str,",
                "+        app_id: str,",
                "+        app_display_name: str,",
                "+        device_display_name: str,",
                "+        pushkey: str,",
                "+        lang: Optional[str],",
                "+        data: JsonDict,",
                "+        profile_tag: str = \"\",",
                "     ) -> Optional[Pusher]:",
                "@@ -113,17 +113,19 @@ class PusherPool:",
                "         self.pusher_factory.create_pusher(",
                "-            {",
                "-                \"id\": None,",
                "-                \"user_name\": user_id,",
                "-                \"kind\": kind,",
                "-                \"app_id\": app_id,",
                "-                \"app_display_name\": app_display_name,",
                "-                \"device_display_name\": device_display_name,",
                "-                \"pushkey\": pushkey,",
                "-                \"ts\": time_now_msec,",
                "-                \"lang\": lang,",
                "-                \"data\": data,",
                "-                \"last_stream_ordering\": None,",
                "-                \"last_success\": None,",
                "-                \"failing_since\": None,",
                "-            }",
                "+            PusherConfig(",
                "+                id=None,",
                "+                user_name=user_id,",
                "+                access_token=access_token,",
                "+                profile_tag=profile_tag,",
                "+                kind=kind,",
                "+                app_id=app_id,",
                "+                app_display_name=app_display_name,",
                "+                device_display_name=device_display_name,",
                "+                pushkey=pushkey,",
                "+                ts=time_now_msec,",
                "+                lang=lang,",
                "+                data=data,",
                "+                last_stream_ordering=None,",
                "+                last_success=None,",
                "+                failing_since=None,",
                "+            )",
                "         )",
                "@@ -153,7 +155,7 @@ class PusherPool:",
                "     async def remove_pushers_by_app_id_and_pushkey_not_user(",
                "-        self, app_id, pushkey, not_user_id",
                "-    ):",
                "+        self, app_id: str, pushkey: str, not_user_id: str",
                "+    ) -> None:",
                "         to_remove = await self.store.get_pushers_by_app_id_and_pushkey(app_id, pushkey)",
                "         for p in to_remove:",
                "-            if p[\"user_name\"] != not_user_id:",
                "+            if p.user_name != not_user_id:",
                "                 logger.info(",
                "@@ -162,7 +164,9 @@ class PusherPool:",
                "                     pushkey,",
                "-                    p[\"user_name\"],",
                "+                    p.user_name,",
                "                 )",
                "-                await self.remove_pusher(p[\"app_id\"], p[\"pushkey\"], p[\"user_name\"])",
                "+                await self.remove_pusher(p.app_id, p.pushkey, p.user_name)",
                "-    async def remove_pushers_by_access_token(self, user_id, access_tokens):",
                "+    async def remove_pushers_by_access_token(",
                "+        self, user_id: str, access_tokens: Iterable[int]",
                "+    ) -> None:",
                "         \"\"\"Remove the pushers for a given user corresponding to a set of",
                "@@ -171,5 +175,4 @@ class PusherPool:",
                "         Args:",
                "-            user_id (str): user to remove pushers for",
                "-            access_tokens (Iterable[int]): access token *ids* to remove pushers",
                "-                for",
                "+            user_id: user to remove pushers for",
                "+            access_tokens: access token *ids* to remove pushers for",
                "         \"\"\"",
                "@@ -180,12 +183,12 @@ class PusherPool:",
                "         for p in await self.store.get_pushers_by_user_id(user_id):",
                "-            if p[\"access_token\"] in tokens:",
                "+            if p.access_token in tokens:",
                "                 logger.info(",
                "                     \"Removing pusher for app id %s, pushkey %s, user %s\",",
                "-                    p[\"app_id\"],",
                "-                    p[\"pushkey\"],",
                "-                    p[\"user_name\"],",
                "+                    p.app_id,",
                "+                    p.pushkey,",
                "+                    p.user_name,",
                "                 )",
                "-                await self.remove_pusher(p[\"app_id\"], p[\"pushkey\"], p[\"user_name\"])",
                "+                await self.remove_pusher(p.app_id, p.pushkey, p.user_name)",
                "-    def on_new_notifications(self, max_token: RoomStreamToken):",
                "+    def on_new_notifications(self, max_token: RoomStreamToken) -> None:",
                "         if not self.pushers:",
                "@@ -208,3 +211,3 @@ class PusherPool:",
                "     @wrap_as_background_process(\"on_new_notifications\")",
                "-    async def _on_new_notifications(self, max_token: RoomStreamToken):",
                "+    async def _on_new_notifications(self, max_token: RoomStreamToken) -> None:",
                "         # We just use the minimum stream ordering and ignore the vector clock",
                "@@ -238,3 +241,5 @@ class PusherPool:",
                "-    async def on_new_receipts(self, min_stream_id, max_stream_id, affected_room_ids):",
                "+    async def on_new_receipts(",
                "+        self, min_stream_id: int, max_stream_id: int, affected_room_ids: Iterable[str]",
                "+    ) -> None:",
                "         if not self.pushers:",
                "@@ -282,10 +287,10 @@ class PusherPool:",
                "-        pusher_dict = None",
                "+        pusher_config = None",
                "         for r in resultlist:",
                "-            if r[\"user_name\"] == user_id:",
                "-                pusher_dict = r",
                "+            if r.user_name == user_id:",
                "+                pusher_config = r",
                "         pusher = None",
                "-        if pusher_dict:",
                "-            pusher = await self._start_pusher(pusher_dict)",
                "+        if pusher_config:",
                "+            pusher = await self._start_pusher(pusher_config)",
                "@@ -304,3 +309,3 @@ class PusherPool:",
                "-    async def _start_pusher(self, pusherdict: Dict[str, Any]) -> Optional[Pusher]:",
                "+    async def _start_pusher(self, pusher_config: PusherConfig) -> Optional[Pusher]:",
                "         \"\"\"Start the given pusher",
                "@@ -308,3 +313,3 @@ class PusherPool:",
                "         Args:",
                "-            pusherdict: dict with the values pulled from the db table",
                "+            pusher_config: The pusher configuration with the values pulled from the db table",
                "@@ -314,3 +319,3 @@ class PusherPool:",
                "         if not self._pusher_shard_config.should_handle(",
                "-            self._instance_name, pusherdict[\"user_name\"]",
                "+            self._instance_name, pusher_config.user_name",
                "         ):",
                "@@ -319,3 +324,3 @@ class PusherPool:",
                "         try:",
                "-            p = self.pusher_factory.create_pusher(pusherdict)",
                "+            p = self.pusher_factory.create_pusher(pusher_config)",
                "         except PusherConfigException as e:",
                "@@ -323,6 +328,6 @@ class PusherPool:",
                "                 \"Pusher incorrectly configured id=%i, user=%s, appid=%s, pushkey=%s: %s\",",
                "-                pusherdict[\"id\"],",
                "-                pusherdict.get(\"user_name\"),",
                "-                pusherdict.get(\"app_id\"),",
                "-                pusherdict.get(\"pushkey\"),",
                "+                pusher_config.id,",
                "+                pusher_config.user_name,",
                "+                pusher_config.app_id,",
                "+                pusher_config.pushkey,",
                "                 e,",
                "@@ -332,3 +337,3 @@ class PusherPool:",
                "             logger.exception(",
                "-                \"Couldn't start pusher id %i: caught Exception\", pusherdict[\"id\"],",
                "+                \"Couldn't start pusher id %i: caught Exception\", pusher_config.id,",
                "             )",
                "@@ -339,5 +344,5 @@ class PusherPool:",
                "-        appid_pushkey = \"%s:%s\" % (pusherdict[\"app_id\"], pusherdict[\"pushkey\"])",
                "+        appid_pushkey = \"%s:%s\" % (pusher_config.app_id, pusher_config.pushkey)",
                "-        byuser = self.pushers.setdefault(pusherdict[\"user_name\"], {})",
                "+        byuser = self.pushers.setdefault(pusher_config.user_name, {})",
                "         if appid_pushkey in byuser:",
                "@@ -351,4 +356,4 @@ class PusherPool:",
                "         # push.",
                "-        user_id = pusherdict[\"user_name\"]",
                "-        last_stream_ordering = pusherdict[\"last_stream_ordering\"]",
                "+        user_id = pusher_config.user_name",
                "+        last_stream_ordering = pusher_config.last_stream_ordering",
                "         if last_stream_ordering:",
                "@@ -366,3 +371,3 @@ class PusherPool:",
                "-    async def remove_pusher(self, app_id, pushkey, user_id):",
                "+    async def remove_pusher(self, app_id: str, pushkey: str, user_id: str) -> None:",
                "         appid_pushkey = \"%s:%s\" % (app_id, pushkey)",
                "diff --git a/synapse/replication/slave/storage/_slaved_id_tracker.py b/synapse/replication/slave/storage/_slaved_id_tracker.py",
                "index eb74903d6..0d39a93ed 100644",
                "--- a/synapse/replication/slave/storage/_slaved_id_tracker.py",
                "+++ b/synapse/replication/slave/storage/_slaved_id_tracker.py",
                "@@ -14,3 +14,5 @@",
                " # limitations under the License.",
                "+from typing import List, Optional, Tuple",
                "+from synapse.storage.types import Connection",
                " from synapse.storage.util.id_generators import _load_current_id",
                "@@ -19,12 +21,20 @@ from synapse.storage.util.id_generators import _load_current_id",
                " class SlavedIdTracker:",
                "-    def __init__(self, db_conn, table, column, extra_tables=[], step=1):",
                "+    def __init__(",
                "+        self,",
                "+        db_conn: Connection,",
                "+        table: str,",
                "+        column: str,",
                "+        extra_tables: Optional[List[Tuple[str, str]]] = None,",
                "+        step: int = 1,",
                "+    ):",
                "         self.step = step",
                "         self._current = _load_current_id(db_conn, table, column, step)",
                "-        for table, column in extra_tables:",
                "-            self.advance(None, _load_current_id(db_conn, table, column))",
                "+        if extra_tables:",
                "+            for table, column in extra_tables:",
                "+                self.advance(None, _load_current_id(db_conn, table, column))",
                "-    def advance(self, instance_name, new_id):",
                "+    def advance(self, instance_name: Optional[str], new_id: int):",
                "         self._current = (max if self.step > 0 else min)(self._current, new_id)",
                "-    def get_current_token(self):",
                "+    def get_current_token(self) -> int:",
                "         \"\"\"",
                "diff --git a/synapse/replication/slave/storage/pushers.py b/synapse/replication/slave/storage/pushers.py",
                "index c418730ba..045bd014d 100644",
                "--- a/synapse/replication/slave/storage/pushers.py",
                "+++ b/synapse/replication/slave/storage/pushers.py",
                "@@ -15,2 +15,3 @@",
                " # limitations under the License.",
                "+from typing import TYPE_CHECKING",
                "@@ -19,2 +20,3 @@ from synapse.storage.database import DatabasePool",
                " from synapse.storage.databases.main.pusher import PusherWorkerStore",
                "+from synapse.storage.types import Connection",
                "@@ -23,7 +25,10 @@ from ._slaved_id_tracker import SlavedIdTracker",
                "+if TYPE_CHECKING:",
                "+    from synapse.app.homeserver import HomeServer",
                "+",
                " class SlavedPusherStore(PusherWorkerStore, BaseSlavedStore):",
                "-    def __init__(self, database: DatabasePool, db_conn, hs):",
                "+    def __init__(self, database: DatabasePool, db_conn: Connection, hs: \"HomeServer\"):",
                "         super().__init__(database, db_conn, hs)",
                "-        self._pushers_id_gen = SlavedIdTracker(",
                "+        self._pushers_id_gen = SlavedIdTracker(  # type: ignore",
                "             db_conn, \"pushers\", \"id\", extra_tables=[(\"deleted_pushers\", \"stream_id\")]",
                "@@ -31,8 +36,10 @@ class SlavedPusherStore(PusherWorkerStore, BaseSlavedStore):",
                "-    def get_pushers_stream_token(self):",
                "+    def get_pushers_stream_token(self) -> int:",
                "         return self._pushers_id_gen.get_current_token()",
                "-    def process_replication_rows(self, stream_name, instance_name, token, rows):",
                "+    def process_replication_rows(",
                "+        self, stream_name: str, instance_name: str, token, rows",
                "+    ) -> None:",
                "         if stream_name == PushersStream.NAME:",
                "-            self._pushers_id_gen.advance(instance_name, token)",
                "+            self._pushers_id_gen.advance(instance_name, token)  # type: ignore",
                "         return super().process_replication_rows(stream_name, instance_name, token, rows)",
                "diff --git a/synapse/rest/admin/users.py b/synapse/rest/admin/users.py",
                "index 88cba369f..6658c2da5 100644",
                "--- a/synapse/rest/admin/users.py",
                "+++ b/synapse/rest/admin/users.py",
                "@@ -44,13 +44,2 @@ logger = logging.getLogger(__name__)",
                "-_GET_PUSHERS_ALLOWED_KEYS = {",
                "-    \"app_display_name\",",
                "-    \"app_id\",",
                "-    \"data\",",
                "-    \"device_display_name\",",
                "-    \"kind\",",
                "-    \"lang\",",
                "-    \"profile_tag\",",
                "-    \"pushkey\",",
                "-}",
                "-",
                "@@ -772,6 +761,3 @@ class PushersRestServlet(RestServlet):",
                "-        filtered_pushers = [",
                "-            {k: v for k, v in p.items() if k in _GET_PUSHERS_ALLOWED_KEYS}",
                "-            for p in pushers",
                "-        ]",
                "+        filtered_pushers = [p.as_dict() for p in pushers]",
                "diff --git a/synapse/rest/client/v1/pusher.py b/synapse/rest/client/v1/pusher.py",
                "index 8fe83f321..89823fcc3 100644",
                "--- a/synapse/rest/client/v1/pusher.py",
                "+++ b/synapse/rest/client/v1/pusher.py",
                "@@ -30,13 +30,2 @@ logger = logging.getLogger(__name__)",
                "-ALLOWED_KEYS = {",
                "-    \"app_display_name\",",
                "-    \"app_id\",",
                "-    \"data\",",
                "-    \"device_display_name\",",
                "-    \"kind\",",
                "-    \"lang\",",
                "-    \"profile_tag\",",
                "-    \"pushkey\",",
                "-}",
                "-",
                "@@ -56,5 +45,3 @@ class PushersRestServlet(RestServlet):",
                "-        filtered_pushers = [",
                "-            {k: v for k, v in p.items() if k in ALLOWED_KEYS} for p in pushers",
                "-        ]",
                "+        filtered_pushers = [p.as_dict() for p in pushers]",
                "diff --git a/synapse/storage/databases/main/__init__.py b/synapse/storage/databases/main/__init__.py",
                "index 43660ec4f..871fb646a 100644",
                "--- a/synapse/storage/databases/main/__init__.py",
                "+++ b/synapse/storage/databases/main/__init__.py",
                "@@ -151,5 +151,2 @@ class DataStore(",
                "         self._push_rules_enable_id_gen = IdGenerator(db_conn, \"push_rules_enable\", \"id\")",
                "-        self._pushers_id_gen = StreamIdGenerator(",
                "-            db_conn, \"pushers\", \"id\", extra_tables=[(\"deleted_pushers\", \"stream_id\")]",
                "-        )",
                "         self._group_updates_id_gen = StreamIdGenerator(",
                "diff --git a/synapse/storage/databases/main/pusher.py b/synapse/storage/databases/main/pusher.py",
                "index 7997242d9..77ba9d819 100644",
                "--- a/synapse/storage/databases/main/pusher.py",
                "+++ b/synapse/storage/databases/main/pusher.py",
                "@@ -17,3 +17,3 @@",
                " import logging",
                "-from typing import Iterable, Iterator, List, Tuple",
                "+from typing import TYPE_CHECKING, Any, Dict, Iterable, Iterator, List, Optional, Tuple",
                "@@ -21,5 +21,13 @@ from canonicaljson import encode_canonical_json",
                "+from synapse.push import PusherConfig, ThrottleParams",
                " from synapse.storage._base import SQLBaseStore, db_to_json",
                "+from synapse.storage.database import DatabasePool",
                "+from synapse.storage.types import Connection",
                "+from synapse.storage.util.id_generators import StreamIdGenerator",
                "+from synapse.types import JsonDict",
                " from synapse.util.caches.descriptors import cached, cachedList",
                "+if TYPE_CHECKING:",
                "+    from synapse.app.homeserver import HomeServer",
                "+",
                " logger = logging.getLogger(__name__)",
                "@@ -28,3 +36,9 @@ logger = logging.getLogger(__name__)",
                " class PusherWorkerStore(SQLBaseStore):",
                "-    def _decode_pushers_rows(self, rows: Iterable[dict]) -> Iterator[dict]:",
                "+    def __init__(self, database: DatabasePool, db_conn: Connection, hs: \"HomeServer\"):",
                "+        super().__init__(database, db_conn, hs)",
                "+        self._pushers_id_gen = StreamIdGenerator(",
                "+            db_conn, \"pushers\", \"id\", extra_tables=[(\"deleted_pushers\", \"stream_id\")]",
                "+        )",
                "+",
                "+    def _decode_pushers_rows(self, rows: Iterable[dict]) -> Iterator[PusherConfig]:",
                "         \"\"\"JSON-decode the data in the rows returned from the `pushers` table",
                "@@ -46,5 +60,5 @@ class PusherWorkerStore(SQLBaseStore):",
                "-            yield r",
                "+            yield PusherConfig(**r)",
                "-    async def user_has_pusher(self, user_id):",
                "+    async def user_has_pusher(self, user_id: str) -> bool:",
                "         ret = await self.db_pool.simple_select_one_onecol(",
                "@@ -54,9 +68,11 @@ class PusherWorkerStore(SQLBaseStore):",
                "-    def get_pushers_by_app_id_and_pushkey(self, app_id, pushkey):",
                "-        return self.get_pushers_by({\"app_id\": app_id, \"pushkey\": pushkey})",
                "+    async def get_pushers_by_app_id_and_pushkey(",
                "+        self, app_id: str, pushkey: str",
                "+    ) -> Iterator[PusherConfig]:",
                "+        return await self.get_pushers_by({\"app_id\": app_id, \"pushkey\": pushkey})",
                "-    def get_pushers_by_user_id(self, user_id):",
                "-        return self.get_pushers_by({\"user_name\": user_id})",
                "+    async def get_pushers_by_user_id(self, user_id: str) -> Iterator[PusherConfig]:",
                "+        return await self.get_pushers_by({\"user_name\": user_id})",
                "-    async def get_pushers_by(self, keyvalues):",
                "+    async def get_pushers_by(self, keyvalues: Dict[str, Any]) -> Iterator[PusherConfig]:",
                "         ret = await self.db_pool.simple_select_list(",
                "@@ -85,3 +101,3 @@ class PusherWorkerStore(SQLBaseStore):",
                "-    async def get_all_pushers(self):",
                "+    async def get_all_pushers(self) -> Iterator[PusherConfig]:",
                "         def get_pushers(txn):",
                "@@ -161,3 +177,3 @@ class PusherWorkerStore(SQLBaseStore):",
                "     @cached(num_args=1, max_entries=15000)",
                "-    async def get_if_user_has_pusher(self, user_id):",
                "+    async def get_if_user_has_pusher(self, user_id: str):",
                "         # This only exists for the cachedList decorator",
                "@@ -168,3 +184,5 @@ class PusherWorkerStore(SQLBaseStore):",
                "     )",
                "-    async def get_if_users_have_pushers(self, user_ids):",
                "+    async def get_if_users_have_pushers(",
                "+        self, user_ids: Iterable[str]",
                "+    ) -> Dict[str, bool]:",
                "         rows = await self.db_pool.simple_select_many_batch(",
                "@@ -226,3 +244,3 @@ class PusherWorkerStore(SQLBaseStore):",
                "     async def update_pusher_failing_since(",
                "-        self, app_id, pushkey, user_id, failing_since",
                "+        self, app_id: str, pushkey: str, user_id: str, failing_since: Optional[int]",
                "     ) -> None:",
                "@@ -235,3 +253,5 @@ class PusherWorkerStore(SQLBaseStore):",
                "-    async def get_throttle_params_by_room(self, pusher_id):",
                "+    async def get_throttle_params_by_room(",
                "+        self, pusher_id: str",
                "+    ) -> Dict[str, ThrottleParams]:",
                "         res = await self.db_pool.simple_select_list(",
                "@@ -245,6 +265,5 @@ class PusherWorkerStore(SQLBaseStore):",
                "         for row in res:",
                "-            params_by_room[row[\"room_id\"]] = {",
                "-                \"last_sent_ts\": row[\"last_sent_ts\"],",
                "-                \"throttle_ms\": row[\"throttle_ms\"],",
                "-            }",
                "+            params_by_room[row[\"room_id\"]] = ThrottleParams(",
                "+                row[\"last_sent_ts\"], row[\"throttle_ms\"],",
                "+            )",
                "@@ -252,3 +271,5 @@ class PusherWorkerStore(SQLBaseStore):",
                "-    async def set_throttle_params(self, pusher_id, room_id, params) -> None:",
                "+    async def set_throttle_params(",
                "+        self, pusher_id: str, room_id: str, params: ThrottleParams",
                "+    ) -> None:",
                "         # no need to lock because `pusher_throttle` has a primary key on",
                "@@ -258,3 +279,3 @@ class PusherWorkerStore(SQLBaseStore):",
                "             {\"pusher\": pusher_id, \"room_id\": room_id},",
                "-            params,",
                "+            {\"last_sent_ts\": params.last_sent_ts, \"throttle_ms\": params.throttle_ms},",
                "             desc=\"set_throttle_params\",",
                "@@ -265,3 +286,3 @@ class PusherWorkerStore(SQLBaseStore):",
                " class PusherStore(PusherWorkerStore):",
                "-    def get_pushers_stream_token(self):",
                "+    def get_pushers_stream_token(self) -> int:",
                "         return self._pushers_id_gen.get_current_token()",
                "@@ -270,14 +291,14 @@ class PusherStore(PusherWorkerStore):",
                "         self,",
                "-        user_id,",
                "-        access_token,",
                "-        kind,",
                "-        app_id,",
                "-        app_display_name,",
                "-        device_display_name,",
                "-        pushkey,",
                "-        pushkey_ts,",
                "-        lang,",
                "-        data,",
                "-        last_stream_ordering,",
                "-        profile_tag=\"\",",
                "+        user_id: str,",
                "+        access_token: Optional[int],",
                "+        kind: str,",
                "+        app_id: str,",
                "+        app_display_name: str,",
                "+        device_display_name: str,",
                "+        pushkey: str,",
                "+        pushkey_ts: int,",
                "+        lang: Optional[str],",
                "+        data: Optional[JsonDict],",
                "+        last_stream_ordering: int,",
                "+        profile_tag: str = \"\",",
                "     ) -> None:",
                "@@ -313,3 +334,3 @@ class PusherStore(PusherWorkerStore):",
                "                     \"add_pusher\",",
                "-                    self._invalidate_cache_and_stream,",
                "+                    self._invalidate_cache_and_stream,  # type: ignore",
                "                     self.get_if_user_has_pusher,",
                "@@ -319,6 +340,6 @@ class PusherStore(PusherWorkerStore):",
                "     async def delete_pusher_by_app_id_pushkey_user_id(",
                "-        self, app_id, pushkey, user_id",
                "+        self, app_id: str, pushkey: str, user_id: str",
                "     ) -> None:",
                "         def delete_pusher_txn(txn, stream_id):",
                "-            self._invalidate_cache_and_stream(",
                "+            self._invalidate_cache_and_stream(  # type: ignore",
                "                 txn, self.get_if_user_has_pusher, (user_id,)",
                "diff --git a/synapse/storage/util/id_generators.py b/synapse/storage/util/id_generators.py",
                "index 02d71302e..133c0e7a2 100644",
                "--- a/synapse/storage/util/id_generators.py",
                "+++ b/synapse/storage/util/id_generators.py",
                "@@ -155,3 +155,3 @@ class StreamIdGenerator:",
                "-    def get_current_token(self):",
                "+    def get_current_token(self) -> int:",
                "         \"\"\"Returns the maximum stream id such that all stream ids less than or",
                "@@ -160,3 +160,3 @@ class StreamIdGenerator:",
                "         Returns:",
                "-            int",
                "+            The maximum stream id.",
                "         \"\"\"",
                "diff --git a/tests/push/test_email.py b/tests/push/test_email.py",
                "index bcdcafa5a..961bf09de 100644",
                "--- a/tests/push/test_email.py",
                "+++ b/tests/push/test_email.py",
                "@@ -211,3 +211,3 @@ class EmailPusherTests(HomeserverTestCase):",
                "         self.assertEqual(len(pushers), 1)",
                "-        last_stream_ordering = pushers[0][\"last_stream_ordering\"]",
                "+        last_stream_ordering = pushers[0].last_stream_ordering",
                "@@ -222,3 +222,3 @@ class EmailPusherTests(HomeserverTestCase):",
                "         self.assertEqual(len(pushers), 1)",
                "-        self.assertEqual(last_stream_ordering, pushers[0][\"last_stream_ordering\"])",
                "+        self.assertEqual(last_stream_ordering, pushers[0].last_stream_ordering)",
                "@@ -240,2 +240,2 @@ class EmailPusherTests(HomeserverTestCase):",
                "         self.assertEqual(len(pushers), 1)",
                "-        self.assertTrue(pushers[0][\"last_stream_ordering\"] > last_stream_ordering)",
                "+        self.assertTrue(pushers[0].last_stream_ordering > last_stream_ordering)",
                "diff --git a/tests/push/test_http.py b/tests/push/test_http.py",
                "index cb3245d8c..60f0820cf 100644",
                "--- a/tests/push/test_http.py",
                "+++ b/tests/push/test_http.py",
                "@@ -146,3 +146,3 @@ class HTTPPusherTests(HomeserverTestCase):",
                "         self.assertEqual(len(pushers), 1)",
                "-        last_stream_ordering = pushers[0][\"last_stream_ordering\"]",
                "+        last_stream_ordering = pushers[0].last_stream_ordering",
                "@@ -157,3 +157,3 @@ class HTTPPusherTests(HomeserverTestCase):",
                "         self.assertEqual(len(pushers), 1)",
                "-        self.assertEqual(last_stream_ordering, pushers[0][\"last_stream_ordering\"])",
                "+        self.assertEqual(last_stream_ordering, pushers[0].last_stream_ordering)",
                "@@ -178,4 +178,4 @@ class HTTPPusherTests(HomeserverTestCase):",
                "         self.assertEqual(len(pushers), 1)",
                "-        self.assertTrue(pushers[0][\"last_stream_ordering\"] > last_stream_ordering)",
                "-        last_stream_ordering = pushers[0][\"last_stream_ordering\"]",
                "+        self.assertTrue(pushers[0].last_stream_ordering > last_stream_ordering)",
                "+        last_stream_ordering = pushers[0].last_stream_ordering",
                "@@ -200,3 +200,3 @@ class HTTPPusherTests(HomeserverTestCase):",
                "         self.assertEqual(len(pushers), 1)",
                "-        self.assertTrue(pushers[0][\"last_stream_ordering\"] > last_stream_ordering)",
                "+        self.assertTrue(pushers[0].last_stream_ordering > last_stream_ordering)",
                "diff --git a/tests/rest/admin/test_user.py b/tests/rest/admin/test_user.py",
                "index 582f98322..df62317e6 100644",
                "--- a/tests/rest/admin/test_user.py",
                "+++ b/tests/rest/admin/test_user.py",
                "@@ -768,3 +768,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         self.assertEqual(len(pushers), 1)",
                "-        self.assertEqual(\"@bob:test\", pushers[0][\"user_name\"])",
                "+        self.assertEqual(\"@bob:test\", pushers[0].user_name)"
            ],
            "changed_files": [
                "changelog.d/8940.misc",
                "mypy.ini",
                "synapse/push/__init__.py",
                "synapse/push/emailpusher.py",
                "synapse/push/httppusher.py",
                "synapse/push/pusher.py",
                "synapse/push/pusherpool.py",
                "synapse/replication/slave/storage/_slaved_id_tracker.py",
                "synapse/replication/slave/storage/pushers.py",
                "synapse/rest/admin/users.py",
                "synapse/rest/client/v1/pusher.py",
                "synapse/storage/databases/main/__init__.py",
                "synapse/storage/databases/main/pusher.py",
                "synapse/storage/util/id_generators.py",
                "tests/push/test_email.py",
                "tests/push/test_http.py",
                "tests/rest/admin/test_user.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8940": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8940, 8940",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8940",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3af0672350965b4fddf3aad2904795bbd0199c30",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607689501,
            "hunks": 11,
            "message": "Improve tests for structured logging. (#8916)",
            "diff": [
                "diff --git a/changelog.d/8916.misc b/changelog.d/8916.misc",
                "new file mode 100644",
                "index 000000000..c71ef480e",
                "--- /dev/null",
                "+++ b/changelog.d/8916.misc",
                "@@ -0,0 +1 @@",
                "+Improve structured logging tests.",
                "diff --git a/tests/logging/test_terse_json.py b/tests/logging/test_terse_json.py",
                "index 73f469b80..f6e7e5fda 100644",
                "--- a/tests/logging/test_terse_json.py",
                "+++ b/tests/logging/test_terse_json.py",
                "@@ -20,2 +20,3 @@ from io import StringIO",
                " from synapse.logging._terse_json import JsonFormatter, TerseJsonFormatter",
                "+from synapse.logging.context import LoggingContext, LoggingContextFilter",
                "@@ -26,2 +27,13 @@ from tests.unittest import TestCase",
                " class TerseJsonTestCase(LoggerCleanupMixin, TestCase):",
                "+    def setUp(self):",
                "+        self.output = StringIO()",
                "+",
                "+    def get_log_line(self):",
                "+        # One log message, with a single trailing newline.",
                "+        data = self.output.getvalue()",
                "+        logs = data.splitlines()",
                "+        self.assertEqual(len(logs), 1)",
                "+        self.assertEqual(data.count(\"\\n\"), 1)",
                "+        return json.loads(logs[0])",
                "+",
                "     def test_terse_json_output(self):",
                "@@ -30,5 +42,3 @@ class TerseJsonTestCase(LoggerCleanupMixin, TestCase):",
                "         \"\"\"",
                "-        output = StringIO()",
                "-",
                "-        handler = logging.StreamHandler(output)",
                "+        handler = logging.StreamHandler(self.output)",
                "         handler.setFormatter(TerseJsonFormatter())",
                "@@ -38,8 +48,3 @@ class TerseJsonTestCase(LoggerCleanupMixin, TestCase):",
                "-        # One log message, with a single trailing newline.",
                "-        data = output.getvalue()",
                "-        logs = data.splitlines()",
                "-        self.assertEqual(len(logs), 1)",
                "-        self.assertEqual(data.count(\"\\n\"), 1)",
                "-        log = json.loads(logs[0])",
                "+        log = self.get_log_line()",
                "@@ -59,5 +64,3 @@ class TerseJsonTestCase(LoggerCleanupMixin, TestCase):",
                "         \"\"\"",
                "-        output = StringIO()",
                "-",
                "-        handler = logging.StreamHandler(output)",
                "+        handler = logging.StreamHandler(self.output)",
                "         handler.setFormatter(TerseJsonFormatter())",
                "@@ -69,8 +72,3 @@ class TerseJsonTestCase(LoggerCleanupMixin, TestCase):",
                "-        # One log message, with a single trailing newline.",
                "-        data = output.getvalue()",
                "-        logs = data.splitlines()",
                "-        self.assertEqual(len(logs), 1)",
                "-        self.assertEqual(data.count(\"\\n\"), 1)",
                "-        log = json.loads(logs[0])",
                "+        log = self.get_log_line()",
                "@@ -98,5 +96,3 @@ class TerseJsonTestCase(LoggerCleanupMixin, TestCase):",
                "         \"\"\"",
                "-        output = StringIO()",
                "-",
                "-        handler = logging.StreamHandler(output)",
                "+        handler = logging.StreamHandler(self.output)",
                "         handler.setFormatter(JsonFormatter())",
                "@@ -106,8 +102,27 @@ class TerseJsonTestCase(LoggerCleanupMixin, TestCase):",
                "-        # One log message, with a single trailing newline.",
                "-        data = output.getvalue()",
                "-        logs = data.splitlines()",
                "-        self.assertEqual(len(logs), 1)",
                "-        self.assertEqual(data.count(\"\\n\"), 1)",
                "-        log = json.loads(logs[0])",
                "+        log = self.get_log_line()",
                "+",
                "+        # The terse logger should give us these keys.",
                "+        expected_log_keys = [",
                "+            \"log\",",
                "+            \"level\",",
                "+            \"namespace\",",
                "+        ]",
                "+        self.assertCountEqual(log.keys(), expected_log_keys)",
                "+        self.assertEqual(log[\"log\"], \"Hello there, wally!\")",
                "+",
                "+    def test_with_context(self):",
                "+        \"\"\"",
                "+        The logging context should be added to the JSON response.",
                "+        \"\"\"",
                "+        handler = logging.StreamHandler(self.output)",
                "+        handler.setFormatter(JsonFormatter())",
                "+        handler.addFilter(LoggingContextFilter(request=\"\"))",
                "+        logger = self.get_logger(handler)",
                "+",
                "+        with LoggingContext() as context_one:",
                "+            context_one.request = \"test\"",
                "+            logger.info(\"Hello there, %s!\", \"wally\")",
                "+",
                "+        log = self.get_log_line()",
                "@@ -118,2 +133,4 @@ class TerseJsonTestCase(LoggerCleanupMixin, TestCase):",
                "             \"namespace\",",
                "+            \"request\",",
                "+            \"scope\",",
                "         ]",
                "@@ -121 +138,3 @@ class TerseJsonTestCase(LoggerCleanupMixin, TestCase):",
                "         self.assertEqual(log[\"log\"], \"Hello there, wally!\")",
                "+        self.assertEqual(log[\"request\"], \"test\")",
                "+        self.assertIsNone(log[\"scope\"])"
            ],
            "changed_files": [
                "changelog.d/8916.misc",
                "tests/logging/test_terse_json.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8916": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8916, 8916",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8916",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5e7d75daa2d53ea74c75f9a0db52c5590fc22038",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608303634,
            "hunks": 4,
            "message": "Fix mainline ordering in state res v2 (#8971) This had two effects 1) it'd give the wrong answer and b) would iterate *all* power levels in the auth chain of each event. The latter of which can be *very* expensive for certain types of IRC bridge rooms that have large numbers of power level changes.",
            "diff": [
                "diff --git a/changelog.d/8971.bugfix b/changelog.d/8971.bugfix",
                "new file mode 100644",
                "index 000000000..c3e44b8c0",
                "--- /dev/null",
                "+++ b/changelog.d/8971.bugfix",
                "@@ -0,0 +1 @@",
                "+Fix small bug in v2 state resolution algorithm, which could also cause performance issues for rooms with large numbers of power levels.",
                "diff --git a/synapse/state/v2.py b/synapse/state/v2.py",
                "index f85124bf8..e585954bd 100644",
                "--- a/synapse/state/v2.py",
                "+++ b/synapse/state/v2.py",
                "@@ -660,3 +660,3 @@ async def _get_mainline_depth_for_event(",
                "     while tmp_event:",
                "-        depth = mainline_map.get(event.event_id)",
                "+        depth = mainline_map.get(tmp_event.event_id)",
                "         if depth is not None:",
                "diff --git a/tests/state/test_v2.py b/tests/state/test_v2.py",
                "index 09f4f32a0..77c72834f 100644",
                "--- a/tests/state/test_v2.py",
                "+++ b/tests/state/test_v2.py",
                "@@ -90,3 +90,3 @@ class FakeEvent:",
                "             \"prev_events\": [(p, {}) for p in prev_events],",
                "-            \"event_id\": self.node_id,",
                "+            \"event_id\": self.event_id,",
                "             \"sender\": self.sender,",
                "@@ -383,2 +383,57 @@ class StateTestCase(unittest.TestCase):",
                "+    def test_mainline_sort(self):",
                "+        \"\"\"Tests that the mainline ordering works correctly.",
                "+        \"\"\"",
                "+",
                "+        events = [",
                "+            FakeEvent(",
                "+                id=\"T1\", sender=ALICE, type=EventTypes.Topic, state_key=\"\", content={}",
                "+            ),",
                "+            FakeEvent(",
                "+                id=\"PA1\",",
                "+                sender=ALICE,",
                "+                type=EventTypes.PowerLevels,",
                "+                state_key=\"\",",
                "+                content={\"users\": {ALICE: 100, BOB: 50}},",
                "+            ),",
                "+            FakeEvent(",
                "+                id=\"T2\", sender=ALICE, type=EventTypes.Topic, state_key=\"\", content={}",
                "+            ),",
                "+            FakeEvent(",
                "+                id=\"PA2\",",
                "+                sender=ALICE,",
                "+                type=EventTypes.PowerLevels,",
                "+                state_key=\"\",",
                "+                content={",
                "+                    \"users\": {ALICE: 100, BOB: 50},",
                "+                    \"events\": {EventTypes.PowerLevels: 100},",
                "+                },",
                "+            ),",
                "+            FakeEvent(",
                "+                id=\"PB\",",
                "+                sender=BOB,",
                "+                type=EventTypes.PowerLevels,",
                "+                state_key=\"\",",
                "+                content={\"users\": {ALICE: 100, BOB: 50}},",
                "+            ),",
                "+            FakeEvent(",
                "+                id=\"T3\", sender=BOB, type=EventTypes.Topic, state_key=\"\", content={}",
                "+            ),",
                "+            FakeEvent(",
                "+                id=\"T4\", sender=ALICE, type=EventTypes.Topic, state_key=\"\", content={}",
                "+            ),",
                "+        ]",
                "+",
                "+        edges = [",
                "+            [\"END\", \"T3\", \"PA2\", \"T2\", \"PA1\", \"T1\", \"START\"],",
                "+            [\"END\", \"T4\", \"PB\", \"PA1\"],",
                "+        ]",
                "+",
                "+        # We expect T3 to be picked as the other topics are pointing at older",
                "+        # power levels. Note that without mainline ordering we'd pick T4 due to",
                "+        # it being sent *after* T3.",
                "+        expected_state_ids = [\"T3\", \"PA2\"]",
                "+",
                "+        self.do_check(events, edges, expected_state_ids)",
                "+",
                "     def do_check(self, events, edges, expected_state_ids):"
            ],
            "changed_files": [
                "changelog.d/8971.bugfix",
                "synapse/state/v2.py",
                "tests/state/test_v2.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8971": "Very slow state res in local rooms #8612"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8971, 8971",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8971",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6d02eb22dfde9551c515acaf73503e2500e00eaf",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607978523,
            "hunks": 8,
            "message": "Fix startup failure with localdb_enabled: False (#8937)",
            "diff": [
                "diff --git a/changelog.d/8937.bugfix b/changelog.d/8937.bugfix",
                "new file mode 100644",
                "index 000000000..01e184844",
                "--- /dev/null",
                "+++ b/changelog.d/8937.bugfix",
                "@@ -0,0 +1 @@",
                "+Fix bug introduced in Synapse v1.24.0 which would cause an exception on startup if both `enabled` and `localdb_enabled` were set to `False` in the `password_config` setting of the configuration file.",
                "diff --git a/synapse/handlers/auth.py b/synapse/handlers/auth.py",
                "index 8deec4cd0..21e568f22 100644",
                "--- a/synapse/handlers/auth.py",
                "+++ b/synapse/handlers/auth.py",
                "@@ -200,23 +200,21 @@ class AuthHandler(BaseHandler):",
                "-        # we keep this as a list despite the O(N^2) implication so that we can",
                "-        # keep PASSWORD first and avoid confusing clients which pick the first",
                "-        # type in the list. (NB that the spec doesn't require us to do so and",
                "-        # clients which favour types that they don't understand over those that",
                "-        # they do are technically broken)",
                "-",
                "         # start out by assuming PASSWORD is enabled; we will remove it later if not.",
                "-        login_types = []",
                "+        login_types = set()",
                "         if self._password_localdb_enabled:",
                "-            login_types.append(LoginType.PASSWORD)",
                "+            login_types.add(LoginType.PASSWORD)",
                "         for provider in self.password_providers:",
                "-            if hasattr(provider, \"get_supported_login_types\"):",
                "-                for t in provider.get_supported_login_types().keys():",
                "-                    if t not in login_types:",
                "-                        login_types.append(t)",
                "+            login_types.update(provider.get_supported_login_types().keys())",
                "         if not self._password_enabled:",
                "+            login_types.discard(LoginType.PASSWORD)",
                "+",
                "+        # Some clients just pick the first type in the list. In this case, we want",
                "+        # them to use PASSWORD (rather than token or whatever), so we want to make sure",
                "+        # that comes first, where it's present.",
                "+        self._supported_login_types = []",
                "+        if LoginType.PASSWORD in login_types:",
                "+            self._supported_login_types.append(LoginType.PASSWORD)",
                "             login_types.remove(LoginType.PASSWORD)",
                "-",
                "-        self._supported_login_types = login_types",
                "+        self._supported_login_types.extend(login_types)",
                "diff --git a/tests/handlers/test_password_providers.py b/tests/handlers/test_password_providers.py",
                "index ceaf0902d..8d5026514 100644",
                "--- a/tests/handlers/test_password_providers.py",
                "+++ b/tests/handlers/test_password_providers.py",
                "@@ -432,2 +432,25 @@ class PasswordAuthProviderTests(unittest.HomeserverTestCase):",
                "+    @override_config(",
                "+        {",
                "+            **providers_config(CustomAuthProvider),",
                "+            \"password_config\": {\"enabled\": False, \"localdb_enabled\": False},",
                "+        }",
                "+    )",
                "+    def test_custom_auth_password_disabled_localdb_enabled(self):",
                "+        \"\"\"Check the localdb_enabled == enabled == False",
                "+",
                "+        Regression test for https://github.com/matrix-org/synapse/issues/8914: check",
                "+        that setting *both* `localdb_enabled` *and* `password: enabled` to False doesn't",
                "+        cause an exception.",
                "+        \"\"\"",
                "+        self.register_user(\"localuser\", \"localpass\")",
                "+",
                "+        flows = self._get_login_flows()",
                "+        self.assertEqual(flows, [{\"type\": \"test.login_type\"}] + ADDITIONAL_LOGIN_FLOWS)",
                "+",
                "+        # login shouldn't work and should be rejected with a 400 (\"unknown login type\")",
                "+        channel = self._send_password_login(\"localuser\", \"localpass\")",
                "+        self.assertEqual(channel.code, 400, channel.result)",
                "+        mock_password_provider.check_auth.assert_not_called()",
                "+",
                "     @override_config("
            ],
            "changed_files": [
                "changelog.d/8937.bugfix",
                "synapse/handlers/auth.py",
                "tests/handlers/test_password_providers.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8937": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8937, 8937",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8937",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "be2db93b3c14396d53d30f8d5f92db014453487b",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608126397,
            "hunks": 30,
            "message": "Do not assume that the contents dictionary includes history_visibility. (#8945)",
            "diff": [
                "diff --git a/changelog.d/8945.bugfix b/changelog.d/8945.bugfix",
                "new file mode 100644",
                "index 000000000..f9e6dbba5",
                "--- /dev/null",
                "+++ b/changelog.d/8945.bugfix",
                "@@ -0,0 +1 @@",
                "+Fix a bug where 500 errors would be returned if the `m.room_history_visibility` event had invalid content.",
                "diff --git a/synapse/api/auth.py b/synapse/api/auth.py",
                "index 1951f6e17..48c4d7b0b 100644",
                "--- a/synapse/api/auth.py",
                "+++ b/synapse/api/auth.py",
                "@@ -25,3 +25,3 @@ from synapse import event_auth",
                " from synapse.api.auth_blocking import AuthBlocking",
                "-from synapse.api.constants import EventTypes, Membership",
                "+from synapse.api.constants import EventTypes, HistoryVisibility, Membership",
                " from synapse.api.errors import (",
                "@@ -650,3 +650,4 @@ class Auth:",
                "                 visibility",
                "-                and visibility.content[\"history_visibility\"] == \"world_readable\"",
                "+                and visibility.content.get(\"history_visibility\")",
                "+                == HistoryVisibility.WORLD_READABLE",
                "             ):",
                "diff --git a/synapse/api/constants.py b/synapse/api/constants.py",
                "index 592abd844..1932df83b 100644",
                "--- a/synapse/api/constants.py",
                "+++ b/synapse/api/constants.py",
                "@@ -162 +162,8 @@ class AccountDataTypes:",
                "     IGNORED_USER_LIST = \"m.ignored_user_list\"",
                "+",
                "+",
                "+class HistoryVisibility:",
                "+    INVITED = \"invited\"",
                "+    JOINED = \"joined\"",
                "+    SHARED = \"shared\"",
                "+    WORLD_READABLE = \"world_readable\"",
                "diff --git a/synapse/handlers/room.py b/synapse/handlers/room.py",
                "index 758341894..1f809fa16 100644",
                "--- a/synapse/handlers/room.py",
                "+++ b/synapse/handlers/room.py",
                "@@ -29,2 +29,3 @@ from synapse.api.constants import (",
                "     EventTypes,",
                "+    HistoryVisibility,",
                "     JoinRules,",
                "@@ -83,3 +84,3 @@ class RoomCreationHandler(BaseHandler):",
                "                 \"join_rules\": JoinRules.INVITE,",
                "-                \"history_visibility\": \"shared\",",
                "+                \"history_visibility\": HistoryVisibility.SHARED,",
                "                 \"original_invitees_have_ops\": False,",
                "@@ -90,3 +91,3 @@ class RoomCreationHandler(BaseHandler):",
                "                 \"join_rules\": JoinRules.INVITE,",
                "-                \"history_visibility\": \"shared\",",
                "+                \"history_visibility\": HistoryVisibility.SHARED,",
                "                 \"original_invitees_have_ops\": True,",
                "@@ -97,3 +98,3 @@ class RoomCreationHandler(BaseHandler):",
                "                 \"join_rules\": JoinRules.PUBLIC,",
                "-                \"history_visibility\": \"shared\",",
                "+                \"history_visibility\": HistoryVisibility.SHARED,",
                "                 \"original_invitees_have_ops\": False,",
                "diff --git a/synapse/handlers/room_list.py b/synapse/handlers/room_list.py",
                "index 4a13c8e91..bf58d302b 100644",
                "--- a/synapse/handlers/room_list.py",
                "+++ b/synapse/handlers/room_list.py",
                "@@ -22,3 +22,3 @@ from unpaddedbase64 import decode_base64, encode_base64",
                "-from synapse.api.constants import EventTypes, JoinRules",
                "+from synapse.api.constants import EventTypes, HistoryVisibility, JoinRules",
                " from synapse.api.errors import Codes, HttpResponseException",
                "@@ -161,3 +161,4 @@ class RoomListHandler(BaseHandler):",
                "                 \"avatar_url\": room[\"avatar\"],",
                "-                \"world_readable\": room[\"history_visibility\"] == \"world_readable\",",
                "+                \"world_readable\": room[\"history_visibility\"]",
                "+                == HistoryVisibility.WORLD_READABLE,",
                "                 \"guest_can_join\": room[\"guest_access\"] == \"can_join\",",
                "@@ -319,3 +320,3 @@ class RoomListHandler(BaseHandler):",
                "             visibility = visibility_event.content.get(\"history_visibility\", None)",
                "-        result[\"world_readable\"] = visibility == \"world_readable\"",
                "+        result[\"world_readable\"] = visibility == HistoryVisibility.WORLD_READABLE",
                "diff --git a/synapse/handlers/user_directory.py b/synapse/handlers/user_directory.py",
                "index f263a638f..3d80371f0 100644",
                "--- a/synapse/handlers/user_directory.py",
                "+++ b/synapse/handlers/user_directory.py",
                "@@ -18,3 +18,3 @@ import logging",
                " import synapse.metrics",
                "-from synapse.api.constants import EventTypes, JoinRules, Membership",
                "+from synapse.api.constants import EventTypes, HistoryVisibility, JoinRules, Membership",
                " from synapse.handlers.state_deltas import StateDeltasHandler",
                "@@ -252,3 +252,3 @@ class UserDirectoryHandler(StateDeltasHandler):",
                "                 key_name=\"history_visibility\",",
                "-                public_value=\"world_readable\",",
                "+                public_value=HistoryVisibility.WORLD_READABLE,",
                "             )",
                "diff --git a/synapse/notifier.py b/synapse/notifier.py",
                "index a17352ef4..c4c8bb271 100644",
                "--- a/synapse/notifier.py",
                "+++ b/synapse/notifier.py",
                "@@ -36,3 +36,3 @@ from twisted.internet import defer",
                " import synapse.server",
                "-from synapse.api.constants import EventTypes, Membership",
                "+from synapse.api.constants import EventTypes, HistoryVisibility, Membership",
                " from synapse.api.errors import AuthError",
                "@@ -613,3 +613,5 @@ class Notifier:",
                "         if state and \"history_visibility\" in state.content:",
                "-            return state.content[\"history_visibility\"] == \"world_readable\"",
                "+            return (",
                "+                state.content[\"history_visibility\"] == HistoryVisibility.WORLD_READABLE",
                "+            )",
                "         else:",
                "diff --git a/synapse/storage/databases/main/user_directory.py b/synapse/storage/databases/main/user_directory.py",
                "index d87ceec6d..fc8caf46a 100644",
                "--- a/synapse/storage/databases/main/user_directory.py",
                "+++ b/synapse/storage/databases/main/user_directory.py",
                "@@ -19,3 +19,3 @@ from typing import Any, Dict, Iterable, Optional, Set, Tuple",
                "-from synapse.api.constants import EventTypes, JoinRules",
                "+from synapse.api.constants import EventTypes, HistoryVisibility, JoinRules",
                " from synapse.storage.database import DatabasePool",
                "@@ -362,3 +362,6 @@ class UserDirectoryBackgroundUpdateStore(StateDeltasStore):",
                "             if hist_vis_ev:",
                "-                if hist_vis_ev.content.get(\"history_visibility\") == \"world_readable\":",
                "+                if (",
                "+                    hist_vis_ev.content.get(\"history_visibility\")",
                "+                    == HistoryVisibility.WORLD_READABLE",
                "+                ):",
                "                     return True",
                "diff --git a/synapse/visibility.py b/synapse/visibility.py",
                "index 527365498..f2836ba9f 100644",
                "--- a/synapse/visibility.py",
                "+++ b/synapse/visibility.py",
                "@@ -14,3 +14,2 @@",
                " # limitations under the License.",
                "-",
                " import logging",
                "@@ -18,3 +17,8 @@ import operator",
                "-from synapse.api.constants import AccountDataTypes, EventTypes, Membership",
                "+from synapse.api.constants import (",
                "+    AccountDataTypes,",
                "+    EventTypes,",
                "+    HistoryVisibility,",
                "+    Membership,",
                "+)",
                " from synapse.events.utils import prune_event",
                "@@ -27,3 +31,8 @@ logger = logging.getLogger(__name__)",
                "-VISIBILITY_PRIORITY = (\"world_readable\", \"shared\", \"invited\", \"joined\")",
                "+VISIBILITY_PRIORITY = (",
                "+    HistoryVisibility.WORLD_READABLE,",
                "+    HistoryVisibility.SHARED,",
                "+    HistoryVisibility.INVITED,",
                "+    HistoryVisibility.JOINED,",
                "+)",
                "@@ -152,8 +161,10 @@ async def filter_events_for_client(",
                "         if visibility_event:",
                "-            visibility = visibility_event.content.get(\"history_visibility\", \"shared\")",
                "+            visibility = visibility_event.content.get(",
                "+                \"history_visibility\", HistoryVisibility.SHARED",
                "+            )",
                "         else:",
                "-            visibility = \"shared\"",
                "+            visibility = HistoryVisibility.SHARED",
                "         if visibility not in VISIBILITY_PRIORITY:",
                "-            visibility = \"shared\"",
                "+            visibility = HistoryVisibility.SHARED",
                "@@ -167,3 +178,3 @@ async def filter_events_for_client(",
                "             if prev_visibility not in VISIBILITY_PRIORITY:",
                "-                prev_visibility = \"shared\"",
                "+                prev_visibility = HistoryVisibility.SHARED",
                "@@ -212,3 +223,3 @@ async def filter_events_for_client(",
                "-        if visibility == \"joined\":",
                "+        if visibility == HistoryVisibility.JOINED:",
                "             # we weren't a member at the time of the event, so we can't",
                "@@ -217,3 +228,3 @@ async def filter_events_for_client(",
                "-        elif visibility == \"invited\":",
                "+        elif visibility == HistoryVisibility.INVITED:",
                "             # user can also see the event if they were *invited* at the time",
                "@@ -222,3 +233,3 @@ async def filter_events_for_client(",
                "-        elif visibility == \"shared\" and is_peeking:",
                "+        elif visibility == HistoryVisibility.SHARED and is_peeking:",
                "             # if the visibility is shared, users cannot see the event unless",
                "@@ -286,4 +297,6 @@ async def filter_events_for_server(",
                "         if history:",
                "-            visibility = history.content.get(\"history_visibility\", \"shared\")",
                "-            if visibility in [\"invited\", \"joined\"]:",
                "+            visibility = history.content.get(",
                "+                \"history_visibility\", HistoryVisibility.SHARED",
                "+            )",
                "+            if visibility in [HistoryVisibility.INVITED, HistoryVisibility.JOINED]:",
                "                 # We now loop through all state events looking for",
                "@@ -307,3 +320,3 @@ async def filter_events_for_server(",
                "                     elif memtype == Membership.INVITE:",
                "-                        if visibility == \"invited\":",
                "+                        if visibility == HistoryVisibility.INVITED:",
                "                             return True",
                "@@ -338,3 +351,4 @@ async def filter_events_for_server(",
                "         all_open = all(",
                "-            e.content.get(\"history_visibility\") in (None, \"shared\", \"world_readable\")",
                "+            e.content.get(\"history_visibility\")",
                "+            in (None, HistoryVisibility.SHARED, HistoryVisibility.WORLD_READABLE)",
                "             for e in event_map.values()"
            ],
            "changed_files": [
                "changelog.d/8945.bugfix",
                "synapse/api/auth.py",
                "synapse/api/constants.py",
                "synapse/handlers/room.py",
                "synapse/handlers/room_list.py",
                "synapse/handlers/user_directory.py",
                "synapse/notifier.py",
                "synapse/storage/databases/main/user_directory.py",
                "synapse/visibility.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8945": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8945, 8945",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8945",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "06006058d7bf6744078109875cd27f47197aeafa",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608201817,
            "hunks": 12,
            "message": "Make search statement in List Room and User Admin API case-insensitive (#8931)",
            "diff": [
                "diff --git a/changelog.d/8931.feature b/changelog.d/8931.feature",
                "new file mode 100644",
                "index 000000000..35c720eb8",
                "--- /dev/null",
                "+++ b/changelog.d/8931.feature",
                "@@ -0,0 +1 @@",
                "+Make search statement in List Room and List User Admin API case-insensitive.",
                "\\ No newline at end of file",
                "diff --git a/synapse/storage/databases/main/__init__.py b/synapse/storage/databases/main/__init__.py",
                "index 871fb646a..701748f93 100644",
                "--- a/synapse/storage/databases/main/__init__.py",
                "+++ b/synapse/storage/databases/main/__init__.py",
                "@@ -341,8 +341,9 @@ class DataStore(",
                "+            # `name` is in database already in lower case",
                "             if name:",
                "-                filters.append(\"(name LIKE ? OR displayname LIKE ?)\")",
                "-                args.extend([\"@%\" + name + \"%:%\", \"%\" + name + \"%\"])",
                "+                filters.append(\"(name LIKE ? OR LOWER(displayname) LIKE ?)\")",
                "+                args.extend([\"@%\" + name.lower() + \"%:%\", \"%\" + name.lower() + \"%\"])",
                "             elif user_id:",
                "                 filters.append(\"name LIKE ?\")",
                "-                args.extend([\"%\" + user_id + \"%\"])",
                "+                args.extend([\"%\" + user_id.lower() + \"%\"])",
                "diff --git a/synapse/storage/databases/main/room.py b/synapse/storage/databases/main/room.py",
                "index 6b89db15c..4650d0689 100644",
                "--- a/synapse/storage/databases/main/room.py",
                "+++ b/synapse/storage/databases/main/room.py",
                "@@ -381,3 +381,3 @@ class RoomWorkerStore(SQLBaseStore):",
                "         if search_term:",
                "-            where_statement = \"WHERE state.name LIKE ?\"",
                "+            where_statement = \"WHERE LOWER(state.name) LIKE ?\"",
                "@@ -388,3 +388,3 @@ class RoomWorkerStore(SQLBaseStore):",
                "             # before giving it to the database in python instead",
                "-            search_term = \"%\" + search_term + \"%\"",
                "+            search_term = \"%\" + search_term.lower() + \"%\"",
                "diff --git a/tests/rest/admin/test_room.py b/tests/rest/admin/test_room.py",
                "index ca20bcad0..014c30287 100644",
                "--- a/tests/rest/admin/test_room.py",
                "+++ b/tests/rest/admin/test_room.py",
                "@@ -1052,2 +1052,9 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "+        # Test case insensitive",
                "+        _search_test(room_id_1, \"SOMETHING\")",
                "+        _search_test(room_id_1, \"THING\")",
                "+",
                "+        _search_test(room_id_2, \"ELSE\")",
                "+        _search_test(room_id_2, \"SE\")",
                "+",
                "         _search_test(None, \"foo\")",
                "diff --git a/tests/rest/admin/test_user.py b/tests/rest/admin/test_user.py",
                "index df62317e6..4f379a5e5 100644",
                "--- a/tests/rest/admin/test_user.py",
                "+++ b/tests/rest/admin/test_user.py",
                "@@ -20,2 +20,3 @@ import urllib.parse",
                " from binascii import unhexlify",
                "+from typing import Optional",
                "@@ -468,4 +469,8 @@ class UsersListTestCase(unittest.HomeserverTestCase):",
                "-        self.register_user(\"user1\", \"pass1\", admin=False)",
                "-        self.register_user(\"user2\", \"pass2\", admin=False)",
                "+        self.user1 = self.register_user(",
                "+            \"user1\", \"pass1\", admin=False, displayname=\"Name 1\"",
                "+        )",
                "+        self.user2 = self.register_user(",
                "+            \"user2\", \"pass2\", admin=False, displayname=\"Name 2\"",
                "+        )",
                "@@ -478,3 +483,16 @@ class UsersListTestCase(unittest.HomeserverTestCase):",
                "         self.assertEqual(401, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "-        self.assertEqual(\"M_MISSING_TOKEN\", channel.json_body[\"errcode\"])",
                "+        self.assertEqual(Codes.MISSING_TOKEN, channel.json_body[\"errcode\"])",
                "+",
                "+    def test_requester_is_no_admin(self):",
                "+        \"\"\"",
                "+        If the user is not a server admin, an error is returned.",
                "+        \"\"\"",
                "+        other_user_token = self.login(\"user1\", \"pass1\")",
                "+",
                "+        request, channel = self.make_request(",
                "+            \"GET\", self.url, access_token=other_user_token,",
                "+        )",
                "+",
                "+        self.assertEqual(403, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "+        self.assertEqual(Codes.FORBIDDEN, channel.json_body[\"errcode\"])",
                "@@ -495,2 +513,79 @@ class UsersListTestCase(unittest.HomeserverTestCase):",
                "+        # Check that all fields are available",
                "+        for u in channel.json_body[\"users\"]:",
                "+            self.assertIn(\"name\", u)",
                "+            self.assertIn(\"is_guest\", u)",
                "+            self.assertIn(\"admin\", u)",
                "+            self.assertIn(\"user_type\", u)",
                "+            self.assertIn(\"deactivated\", u)",
                "+            self.assertIn(\"displayname\", u)",
                "+            self.assertIn(\"avatar_url\", u)",
                "+",
                "+    def test_search_term(self):",
                "+        \"\"\"Test that searching for a users works correctly\"\"\"",
                "+",
                "+        def _search_test(",
                "+            expected_user_id: Optional[str],",
                "+            search_term: str,",
                "+            search_field: Optional[str] = \"name\",",
                "+            expected_http_code: Optional[int] = 200,",
                "+        ):",
                "+            \"\"\"Search for a user and check that the returned user's id is a match",
                "+",
                "+            Args:",
                "+                expected_user_id: The user_id expected to be returned by the API. Set",
                "+                    to None to expect zero results for the search",
                "+                search_term: The term to search for user names with",
                "+                search_field: Field which is to request: `name` or `user_id`",
                "+                expected_http_code: The expected http code for the request",
                "+            \"\"\"",
                "+            url = self.url + \"?%s=%s\" % (search_field, search_term,)",
                "+            request, channel = self.make_request(",
                "+                \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "+            )",
                "+            self.assertEqual(expected_http_code, channel.code, msg=channel.json_body)",
                "+",
                "+            if expected_http_code != 200:",
                "+                return",
                "+",
                "+            # Check that users were returned",
                "+            self.assertTrue(\"users\" in channel.json_body)",
                "+            users = channel.json_body[\"users\"]",
                "+",
                "+            # Check that the expected number of users were returned",
                "+            expected_user_count = 1 if expected_user_id else 0",
                "+            self.assertEqual(len(users), expected_user_count)",
                "+            self.assertEqual(channel.json_body[\"total\"], expected_user_count)",
                "+",
                "+            if expected_user_id:",
                "+                # Check that the first returned user id is correct",
                "+                u = users[0]",
                "+                self.assertEqual(expected_user_id, u[\"name\"])",
                "+",
                "+        # Perform search tests",
                "+        _search_test(self.user1, \"er1\")",
                "+        _search_test(self.user1, \"me 1\")",
                "+",
                "+        _search_test(self.user2, \"er2\")",
                "+        _search_test(self.user2, \"me 2\")",
                "+",
                "+        _search_test(self.user1, \"er1\", \"user_id\")",
                "+        _search_test(self.user2, \"er2\", \"user_id\")",
                "+",
                "+        # Test case insensitive",
                "+        _search_test(self.user1, \"ER1\")",
                "+        _search_test(self.user1, \"NAME 1\")",
                "+",
                "+        _search_test(self.user2, \"ER2\")",
                "+        _search_test(self.user2, \"NAME 2\")",
                "+",
                "+        _search_test(self.user1, \"ER1\", \"user_id\")",
                "+        _search_test(self.user2, \"ER2\", \"user_id\")",
                "+",
                "+        _search_test(None, \"foo\")",
                "+        _search_test(None, \"bar\")",
                "+",
                "+        _search_test(None, \"foo\", \"user_id\")",
                "+        _search_test(None, \"bar\", \"user_id\")",
                "+",
                "diff --git a/tests/storage/test_main.py b/tests/storage/test_main.py",
                "index 7e7f1286d..e9e3bca3b 100644",
                "--- a/tests/storage/test_main.py",
                "+++ b/tests/storage/test_main.py",
                "@@ -50 +50,8 @@ class DataStoreTestCase(unittest.TestCase):",
                "         self.assertEquals(self.displayname, users.pop()[\"displayname\"])",
                "+",
                "+        users, total = yield defer.ensureDeferred(",
                "+            self.store.get_users_paginate(0, 10, name=\"BC\", guests=False)",
                "+        )",
                "+",
                "+        self.assertEquals(1, total)",
                "+        self.assertEquals(self.displayname, users.pop()[\"displayname\"])"
            ],
            "changed_files": [
                "changelog.d/8931.feature",
                "synapse/storage/databases/main/__init__.py",
                "synapse/storage/databases/main/room.py",
                "tests/rest/admin/test_room.py",
                "tests/rest/admin/test_user.py",
                "tests/storage/test_main.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8931": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8931, 8931",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8931",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f1db20b5a5c403bb6a72026b2478b0ff6ee3aaee",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608245880,
            "hunks": 12,
            "message": "Clean up tox.ini (#8963) ... and disable coverage tracking for mypy and friends.",
            "diff": [
                "diff --git a/changelog.d/8963.misc b/changelog.d/8963.misc",
                "new file mode 100644",
                "index 000000000..495d89e8e",
                "--- /dev/null",
                "+++ b/changelog.d/8963.misc",
                "@@ -0,0 +1 @@",
                "+Clean up tox.ini file; disable coverage checking for non-test runs.",
                "diff --git a/mypy.ini b/mypy.ini",
                "index 190420402..0518d3f1a 100644",
                "--- a/mypy.ini",
                "+++ b/mypy.ini",
                "@@ -9,2 +9,7 @@ mypy_path = stubs",
                " warn_unreachable = True",
                "+",
                "+# To find all folders that pass mypy you run:",
                "+#",
                "+#   find synapse/* -type d -not -name __pycache__ -exec bash -c \"mypy '{}' > /dev/null\"  \\; -print",
                "+",
                " files =",
                "diff --git a/tox.ini b/tox.ini",
                "index c23267682..8e8b49529 100644",
                "--- a/tox.ini",
                "+++ b/tox.ini",
                "@@ -9,3 +9,5 @@ deps =",
                "     coverage",
                "-    coverage-enable-subprocess",
                "+",
                "+    # this is pinned since it's a bit of an obscure package.",
                "+    coverage-enable-subprocess==1.0",
                "@@ -25,6 +27,2 @@ deps =",
                "-setenv =",
                "-    PYTHONDONTWRITEBYTECODE = no_byte_code",
                "-    COVERAGE_PROCESS_START = {toxinidir}/.coveragerc",
                "-",
                " [testenv]",
                "@@ -34,8 +32,8 @@ extras = all, test",
                "-whitelist_externals =",
                "-    sh",
                "-",
                " setenv =",
                "-    {[base]setenv}",
                "+    # use a postgres db for tox environments with \"-postgres\" in the name",
                "+    # (see https://tox.readthedocs.io/en/3.20.1/config.html#factors-and-factor-conditional-settings)",
                "     postgres: SYNAPSE_POSTGRES = 1",
                "+",
                "+    # this is used by .coveragerc to refer to the top of our tree.",
                "     TOP={toxinidir}",
                "@@ -45,5 +43,17 @@ passenv = *",
                " commands =",
                "-    /usr/bin/find \"{toxinidir}\" -name '*.pyc' -delete",
                "-    # Add this so that coverage will run on subprocesses",
                "-    {envbindir}/coverage run \"{envbindir}/trial\" {env:TRIAL_FLAGS:} {posargs:tests} {env:TOXSUFFIX:}",
                "+    # the \"env\" invocation enables coverage checking for sub-processes. This is",
                "+    # particularly important when running trial with `-j`, since that will make",
                "+    # it run tests in a subprocess, whose coverage would otherwise not be",
                "+    # tracked.  (It also makes an explicit `coverage run` command redundant.)",
                "+    #",
                "+    # (See https://coverage.readthedocs.io/en/coverage-5.3/subprocess.html.",
                "+    # Note that the `coverage.process_startup()` call is done by",
                "+    # `coverage-enable-subprocess`.)",
                "+    #",
                "+    # we use \"env\" rather than putting a value in `setenv` so that it is not",
                "+    # inherited by other tox environments.",
                "+    #",
                "+    # keep this in sync with the copy in `testenv:py35-old`.",
                "+    #",
                "+    /usr/bin/env COVERAGE_PROCESS_START={toxinidir}/.coveragerc \"{envbindir}/trial\" {env:TRIAL_FLAGS:} {posargs:tests} {env:TOXSUFFIX:}",
                "@@ -82,6 +92,5 @@ deps =",
                "     coverage",
                "-    coverage-enable-subprocess",
                "+    coverage-enable-subprocess==1.0",
                " commands =",
                "-    /usr/bin/find \"{toxinidir}\" -name '*.pyc' -delete",
                "     # Make all greater-thans equals so we test the oldest version of our direct",
                "@@ -94,3 +103,7 @@ commands =",
                "-    {envbindir}/coverage run \"{envbindir}/trial\"  {env:TRIAL_FLAGS:} {posargs:tests} {env:TOXSUFFIX:}",
                "+    # we have to duplicate the command from `testenv` rather than refer to it",
                "+    # as `{[testenv]commands}`, because we run on ubuntu xenial, which has",
                "+    # tox 2.3.1, and https://github.com/tox-dev/tox/issues/208.",
                "+    #",
                "+    /usr/bin/env COVERAGE_PROCESS_START={toxinidir}/.coveragerc \"{envbindir}/trial\" {env:TRIAL_FLAGS:} {posargs:tests} {env:TOXSUFFIX:}",
                "@@ -159,5 +172 @@ extras = all,mypy",
                " commands = mypy",
                "-",
                "-# To find all folders that pass mypy you run:",
                "-#",
                "-#   find synapse/* -type d -not -name __pycache__ -exec bash -c \"mypy '{}' > /dev/null\"  \\; -print"
            ],
            "changed_files": [
                "changelog.d/8963.misc",
                "mypy.ini",
                "tox.ini"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8963": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8963, 8963",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8963",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "92d87c68824c17e02a8d9e7ca4f9c44b78426cfb",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607353178,
            "hunks": 86,
            "message": "Add type hints for HTTP and email pushers. (#8880)",
            "diff": [
                "diff --git a/changelog.d/8880.misc b/changelog.d/8880.misc",
                "new file mode 100644",
                "index 000000000..4ff0b94b9",
                "--- /dev/null",
                "+++ b/changelog.d/8880.misc",
                "@@ -0,0 +1 @@",
                "+Add type hints to push module.",
                "diff --git a/mypy.ini b/mypy.ini",
                "index 7ee0dd4b3..59144be46 100644",
                "--- a/mypy.ini",
                "+++ b/mypy.ini",
                "@@ -57,3 +57,6 @@ files =",
                "   synapse/notifier.py,",
                "+  synapse/push/emailpusher.py,",
                "+  synapse/push/httppusher.py,",
                "   synapse/push/mailer.py,",
                "+  synapse/push/pusher.py,",
                "   synapse/push/pusherpool.py,",
                "diff --git a/synapse/push/__init__.py b/synapse/push/__init__.py",
                "index e462fb2e1..3d2e87483 100644",
                "--- a/synapse/push/__init__.py",
                "+++ b/synapse/push/__init__.py",
                "@@ -15,2 +15,52 @@",
                "+import abc",
                "+from typing import TYPE_CHECKING, Any, Dict, Optional",
                "+",
                "+from synapse.types import RoomStreamToken",
                "+",
                "+if TYPE_CHECKING:",
                "+    from synapse.app.homeserver import HomeServer",
                "+",
                "+",
                "+class Pusher(metaclass=abc.ABCMeta):",
                "+    def __init__(self, hs: \"HomeServer\", pusherdict: Dict[str, Any]):",
                "+        self.hs = hs",
                "+        self.store = self.hs.get_datastore()",
                "+        self.clock = self.hs.get_clock()",
                "+",
                "+        self.pusher_id = pusherdict[\"id\"]",
                "+        self.user_id = pusherdict[\"user_name\"]",
                "+        self.app_id = pusherdict[\"app_id\"]",
                "+        self.pushkey = pusherdict[\"pushkey\"]",
                "+",
                "+        # This is the highest stream ordering we know it's safe to process.",
                "+        # When new events arrive, we'll be given a window of new events: we",
                "+        # should honour this rather than just looking for anything higher",
                "+        # because of potential out-of-order event serialisation. This starts",
                "+        # off as None though as we don't know any better.",
                "+        self.max_stream_ordering = None  # type: Optional[int]",
                "+",
                "+    @abc.abstractmethod",
                "+    def on_new_notifications(self, max_token: RoomStreamToken) -> None:",
                "+        raise NotImplementedError()",
                "+",
                "+    @abc.abstractmethod",
                "+    def on_new_receipts(self, min_stream_id: int, max_stream_id: int) -> None:",
                "+        raise NotImplementedError()",
                "+",
                "+    @abc.abstractmethod",
                "+    def on_started(self, have_notifs: bool) -> None:",
                "+        \"\"\"Called when this pusher has been started.",
                "+",
                "+        Args:",
                "+            should_check_for_notifs: Whether we should immediately",
                "+                check for push to send. Set to False only if it's known there",
                "+                is nothing to send",
                "+        \"\"\"",
                "+        raise NotImplementedError()",
                "+",
                "+    @abc.abstractmethod",
                "+    def on_stop(self) -> None:",
                "+        raise NotImplementedError()",
                "+",
                "diff --git a/synapse/push/emailpusher.py b/synapse/push/emailpusher.py",
                "index c6763971e..64a35c199 100644",
                "--- a/synapse/push/emailpusher.py",
                "+++ b/synapse/push/emailpusher.py",
                "@@ -16,3 +16,5 @@",
                " import logging",
                "+from typing import TYPE_CHECKING, Any, Dict, List, Optional",
                "+from twisted.internet.base import DelayedCall",
                " from twisted.internet.error import AlreadyCalled, AlreadyCancelled",
                "@@ -20,4 +22,9 @@ from twisted.internet.error import AlreadyCalled, AlreadyCancelled",
                " from synapse.metrics.background_process_metrics import run_as_background_process",
                "+from synapse.push import Pusher",
                "+from synapse.push.mailer import Mailer",
                " from synapse.types import RoomStreamToken",
                "+if TYPE_CHECKING:",
                "+    from synapse.app.homeserver import HomeServer",
                "+",
                " logger = logging.getLogger(__name__)",
                "@@ -48,3 +55,3 @@ INCLUDE_ALL_UNREAD_NOTIFS = False",
                "-class EmailPusher:",
                "+class EmailPusher(Pusher):",
                "     \"\"\"",
                "@@ -56,4 +63,4 @@ class EmailPusher:",
                "-    def __init__(self, hs, pusherdict, mailer):",
                "-        self.hs = hs",
                "+    def __init__(self, hs: \"HomeServer\", pusherdict: Dict[str, Any], mailer: Mailer):",
                "+        super().__init__(hs, pusherdict)",
                "         self.mailer = mailer",
                "@@ -61,13 +68,7 @@ class EmailPusher:",
                "         self.store = self.hs.get_datastore()",
                "-        self.clock = self.hs.get_clock()",
                "-        self.pusher_id = pusherdict[\"id\"]",
                "-        self.user_id = pusherdict[\"user_name\"]",
                "-        self.app_id = pusherdict[\"app_id\"]",
                "         self.email = pusherdict[\"pushkey\"]",
                "         self.last_stream_ordering = pusherdict[\"last_stream_ordering\"]",
                "-        self.timed_call = None",
                "-        self.throttle_params = None",
                "-",
                "-        # See httppusher",
                "-        self.max_stream_ordering = None",
                "+        self.timed_call = None  # type: Optional[DelayedCall]",
                "+        self.throttle_params = {}  # type: Dict[str, Dict[str, int]]",
                "+        self._inited = False",
                "@@ -75,3 +76,3 @@ class EmailPusher:",
                "-    def on_started(self, should_check_for_notifs):",
                "+    def on_started(self, should_check_for_notifs: bool) -> None:",
                "         \"\"\"Called when this pusher has been started.",
                "@@ -79,3 +80,3 @@ class EmailPusher:",
                "         Args:",
                "-            should_check_for_notifs (bool): Whether we should immediately",
                "+            should_check_for_notifs: Whether we should immediately",
                "                 check for push to send. Set to False only if it's known there",
                "@@ -86,3 +87,3 @@ class EmailPusher:",
                "-    def on_stop(self):",
                "+    def on_stop(self) -> None:",
                "         if self.timed_call:",
                "@@ -94,3 +95,3 @@ class EmailPusher:",
                "-    def on_new_notifications(self, max_token: RoomStreamToken):",
                "+    def on_new_notifications(self, max_token: RoomStreamToken) -> None:",
                "         # We just use the minimum stream ordering and ignore the vector clock",
                "@@ -108,3 +109,3 @@ class EmailPusher:",
                "-    def on_new_receipts(self, min_stream_id, max_stream_id):",
                "+    def on_new_receipts(self, min_stream_id: int, max_stream_id: int) -> None:",
                "         # We could wake up and cancel the timer but there tend to be quite a",
                "@@ -114,3 +115,3 @@ class EmailPusher:",
                "-    def on_timer(self):",
                "+    def on_timer(self) -> None:",
                "         self.timed_call = None",
                "@@ -118,3 +119,3 @@ class EmailPusher:",
                "-    def _start_processing(self):",
                "+    def _start_processing(self) -> None:",
                "         if self._is_processing:",
                "@@ -124,3 +125,3 @@ class EmailPusher:",
                "-    def _pause_processing(self):",
                "+    def _pause_processing(self) -> None:",
                "         \"\"\"Used by tests to temporarily pause processing of events.",
                "@@ -132,3 +133,3 @@ class EmailPusher:",
                "-    def _resume_processing(self):",
                "+    def _resume_processing(self) -> None:",
                "         \"\"\"Used by tests to resume processing of events after pausing.",
                "@@ -139,3 +140,3 @@ class EmailPusher:",
                "-    async def _process(self):",
                "+    async def _process(self) -> None:",
                "         # we should never get here if we are already processing",
                "@@ -146,3 +147,3 @@ class EmailPusher:",
                "-            if self.throttle_params is None:",
                "+            if not self._inited:",
                "                 # this is our first loop: load up the throttle params",
                "@@ -151,2 +152,3 @@ class EmailPusher:",
                "                 )",
                "+                self._inited = True",
                "@@ -165,3 +167,3 @@ class EmailPusher:",
                "-    async def _unsafe_process(self):",
                "+    async def _unsafe_process(self) -> None:",
                "         \"\"\"",
                "@@ -172,6 +174,8 @@ class EmailPusher:",
                "         start = 0 if INCLUDE_ALL_UNREAD_NOTIFS else self.last_stream_ordering",
                "-        fn = self.store.get_unread_push_actions_for_user_in_range_for_email",
                "-        unprocessed = await fn(self.user_id, start, self.max_stream_ordering)",
                "+        assert self.max_stream_ordering is not None",
                "+        unprocessed = await self.store.get_unread_push_actions_for_user_in_range_for_email(",
                "+            self.user_id, start, self.max_stream_ordering",
                "+        )",
                "-        soonest_due_at = None",
                "+        soonest_due_at = None  # type: Optional[int]",
                "@@ -232,3 +236,5 @@ class EmailPusher:",
                "-    async def save_last_stream_ordering_and_success(self, last_stream_ordering):",
                "+    async def save_last_stream_ordering_and_success(",
                "+        self, last_stream_ordering: Optional[int]",
                "+    ) -> None:",
                "         if last_stream_ordering is None:",
                "@@ -250,3 +256,3 @@ class EmailPusher:",
                "-    def seconds_until(self, ts_msec):",
                "+    def seconds_until(self, ts_msec: int) -> float:",
                "         secs = (ts_msec - self.clock.time_msec()) / 1000",
                "@@ -254,3 +260,3 @@ class EmailPusher:",
                "-    def get_room_throttle_ms(self, room_id):",
                "+    def get_room_throttle_ms(self, room_id: str) -> int:",
                "         if room_id in self.throttle_params:",
                "@@ -260,3 +266,3 @@ class EmailPusher:",
                "-    def get_room_last_sent_ts(self, room_id):",
                "+    def get_room_last_sent_ts(self, room_id: str) -> int:",
                "         if room_id in self.throttle_params:",
                "@@ -266,3 +272,3 @@ class EmailPusher:",
                "-    def room_ready_to_notify_at(self, room_id):",
                "+    def room_ready_to_notify_at(self, room_id: str) -> int:",
                "         \"\"\"",
                "@@ -270,4 +276,6 @@ class EmailPusher:",
                "         for the given room",
                "-        Returns: The timestamp when we are next allowed to send an email notif",
                "-        for this room",
                "+",
                "+        Returns:",
                "+            The timestamp when we are next allowed to send an email notif",
                "+            for this room",
                "         \"\"\"",
                "@@ -279,3 +287,5 @@ class EmailPusher:",
                "-    async def sent_notif_update_throttle(self, room_id, notified_push_action):",
                "+    async def sent_notif_update_throttle(",
                "+        self, room_id: str, notified_push_action: dict",
                "+    ) -> None:",
                "         # We have sent a notification, so update the throttle accordingly.",
                "@@ -317,3 +327,3 @@ class EmailPusher:",
                "-    async def send_notification(self, push_actions, reason):",
                "+    async def send_notification(self, push_actions: List[dict], reason: dict) -> None:",
                "         logger.info(\"Sending notif email for user %r\", self.user_id)",
                "diff --git a/synapse/push/httppusher.py b/synapse/push/httppusher.py",
                "index 6a0ee8274..5408aa129 100644",
                "--- a/synapse/push/httppusher.py",
                "+++ b/synapse/push/httppusher.py",
                "@@ -17,2 +17,3 @@ import logging",
                " import urllib.parse",
                "+from typing import TYPE_CHECKING, Any, Dict, Iterable, Union",
                "@@ -23,5 +24,6 @@ from twisted.internet.error import AlreadyCalled, AlreadyCancelled",
                " from synapse.api.constants import EventTypes",
                "+from synapse.events import EventBase",
                " from synapse.logging import opentracing",
                " from synapse.metrics.background_process_metrics import run_as_background_process",
                "-from synapse.push import PusherConfigException",
                "+from synapse.push import Pusher, PusherConfigException",
                " from synapse.types import RoomStreamToken",
                "@@ -30,2 +32,5 @@ from . import push_rule_evaluator, push_tools",
                "+if TYPE_CHECKING:",
                "+    from synapse.app.homeserver import HomeServer",
                "+",
                " logger = logging.getLogger(__name__)",
                "@@ -53,3 +58,3 @@ http_badges_failed_counter = Counter(",
                "-class HttpPusher:",
                "+class HttpPusher(Pusher):",
                "     INITIAL_BACKOFF_SEC = 1  # in seconds because that's what Twisted takes",
                "@@ -60,13 +65,7 @@ class HttpPusher:",
                "-    def __init__(self, hs, pusherdict):",
                "-        self.hs = hs",
                "-        self.store = self.hs.get_datastore()",
                "+    def __init__(self, hs: \"HomeServer\", pusherdict: Dict[str, Any]):",
                "+        super().__init__(hs, pusherdict)",
                "         self.storage = self.hs.get_storage()",
                "-        self.clock = self.hs.get_clock()",
                "-        self.state_handler = self.hs.get_state_handler()",
                "-        self.user_id = pusherdict[\"user_name\"]",
                "-        self.app_id = pusherdict[\"app_id\"]",
                "         self.app_display_name = pusherdict[\"app_display_name\"]",
                "         self.device_display_name = pusherdict[\"device_display_name\"]",
                "-        self.pushkey = pusherdict[\"pushkey\"]",
                "         self.pushkey_ts = pusherdict[\"ts\"]",
                "@@ -80,9 +79,2 @@ class HttpPusher:",
                "-        # This is the highest stream ordering we know it's safe to process.",
                "-        # When new events arrive, we'll be given a window of new events: we",
                "-        # should honour this rather than just looking for anything higher",
                "-        # because of potential out-of-order event serialisation. This starts",
                "-        # off as None though as we don't know any better.",
                "-        self.max_stream_ordering = None",
                "-",
                "         if \"data\" not in pusherdict:",
                "@@ -121,3 +113,3 @@ class HttpPusher:",
                "-    def on_started(self, should_check_for_notifs):",
                "+    def on_started(self, should_check_for_notifs: bool) -> None:",
                "         \"\"\"Called when this pusher has been started.",
                "@@ -125,3 +117,3 @@ class HttpPusher:",
                "         Args:",
                "-            should_check_for_notifs (bool): Whether we should immediately",
                "+            should_check_for_notifs: Whether we should immediately",
                "                 check for push to send. Set to False only if it's known there",
                "@@ -132,3 +124,3 @@ class HttpPusher:",
                "-    def on_new_notifications(self, max_token: RoomStreamToken):",
                "+    def on_new_notifications(self, max_token: RoomStreamToken) -> None:",
                "         # We just use the minimum stream ordering and ignore the vector clock",
                "@@ -143,3 +135,3 @@ class HttpPusher:",
                "-    def on_new_receipts(self, min_stream_id, max_stream_id):",
                "+    def on_new_receipts(self, min_stream_id: int, max_stream_id: int) -> None:",
                "         # Note that the min here shouldn't be relied upon to be accurate.",
                "@@ -150,3 +142,3 @@ class HttpPusher:",
                "-    async def _update_badge(self):",
                "+    async def _update_badge(self) -> None:",
                "         # XXX as per https://github.com/matrix-org/matrix-doc/issues/2627, this seems",
                "@@ -160,6 +152,6 @@ class HttpPusher:",
                "-    def on_timer(self):",
                "+    def on_timer(self) -> None:",
                "         self._start_processing()",
                "-    def on_stop(self):",
                "+    def on_stop(self) -> None:",
                "         if self.timed_call:",
                "@@ -171,3 +163,3 @@ class HttpPusher:",
                "-    def _start_processing(self):",
                "+    def _start_processing(self) -> None:",
                "         if self._is_processing:",
                "@@ -177,3 +169,3 @@ class HttpPusher:",
                "-    async def _process(self):",
                "+    async def _process(self) -> None:",
                "         # we should never get here if we are already processing",
                "@@ -196,3 +188,3 @@ class HttpPusher:",
                "-    async def _unsafe_process(self):",
                "+    async def _unsafe_process(self) -> None:",
                "         \"\"\"",
                "@@ -204,2 +196,3 @@ class HttpPusher:",
                "         fn = self.store.get_unread_push_actions_for_user_in_range_for_http",
                "+        assert self.max_stream_ordering is not None",
                "         unprocessed = await fn(",
                "@@ -273,3 +266,3 @@ class HttpPusher:",
                "                     self.last_stream_ordering = push_action[\"stream_ordering\"]",
                "-                    pusher_still_exists = await self.store.update_pusher_last_stream_ordering(",
                "+                    await self.store.update_pusher_last_stream_ordering(",
                "                         self.app_id,",
                "@@ -279,7 +272,2 @@ class HttpPusher:",
                "                     )",
                "-                    if not pusher_still_exists:",
                "-                        # The pusher has been deleted while we were processing, so",
                "-                        # lets just stop and return.",
                "-                        self.on_stop()",
                "-                        return",
                "@@ -299,3 +287,3 @@ class HttpPusher:",
                "-    async def _process_one(self, push_action):",
                "+    async def _process_one(self, push_action: dict) -> bool:",
                "         if \"notify\" not in push_action[\"actions\"]:",
                "@@ -330,3 +318,5 @@ class HttpPusher:",
                "-    async def _build_notification_dict(self, event, tweaks, badge):",
                "+    async def _build_notification_dict(",
                "+        self, event: EventBase, tweaks: Dict[str, bool], badge: int",
                "+    ) -> Dict[str, Any]:",
                "         priority = \"low\"",
                "@@ -360,5 +350,3 @@ class HttpPusher:",
                "-        ctx = await push_tools.get_context_for_event(",
                "-            self.storage, self.state_handler, event, self.user_id",
                "-        )",
                "+        ctx = await push_tools.get_context_for_event(self.storage, event, self.user_id)",
                "@@ -402,3 +390,5 @@ class HttpPusher:",
                "-    async def dispatch_push(self, event, tweaks, badge):",
                "+    async def dispatch_push(",
                "+        self, event: EventBase, tweaks: Dict[str, bool], badge: int",
                "+    ) -> Union[bool, Iterable[str]]:",
                "         notification_dict = await self._build_notification_dict(event, tweaks, badge)",
                "diff --git a/synapse/push/push_tools.py b/synapse/push/push_tools.py",
                "index 6e7c880dc..df3410322 100644",
                "--- a/synapse/push/push_tools.py",
                "+++ b/synapse/push/push_tools.py",
                "@@ -14,2 +14,5 @@",
                " # limitations under the License.",
                "+from typing import Dict",
                "+",
                "+from synapse.events import EventBase",
                " from synapse.push.presentable_names import calculate_room_name, name_from_member_event",
                "@@ -48,3 +51,5 @@ async def get_badge_count(store: DataStore, user_id: str, group_by_room: bool) -",
                "-async def get_context_for_event(storage: Storage, state_handler, ev, user_id):",
                "+async def get_context_for_event(",
                "+    storage: Storage, ev: EventBase, user_id: str",
                "+) -> Dict[str, str]:",
                "     ctx = {}",
                "diff --git a/synapse/push/pusher.py b/synapse/push/pusher.py",
                "index 2a52e226e..8f1072b09 100644",
                "--- a/synapse/push/pusher.py",
                "+++ b/synapse/push/pusher.py",
                "@@ -16,7 +16,11 @@",
                " import logging",
                "+from typing import TYPE_CHECKING, Any, Callable, Dict, Optional",
                "+from synapse.push import Pusher",
                " from synapse.push.emailpusher import EmailPusher",
                "+from synapse.push.httppusher import HttpPusher",
                " from synapse.push.mailer import Mailer",
                "-from .httppusher import HttpPusher",
                "+if TYPE_CHECKING:",
                "+    from synapse.app.homeserver import HomeServer",
                "@@ -26,3 +30,3 @@ logger = logging.getLogger(__name__)",
                " class PusherFactory:",
                "-    def __init__(self, hs):",
                "+    def __init__(self, hs: \"HomeServer\"):",
                "         self.hs = hs",
                "@@ -30,3 +34,5 @@ class PusherFactory:",
                "-        self.pusher_types = {\"http\": HttpPusher}",
                "+        self.pusher_types = {",
                "+            \"http\": HttpPusher",
                "+        }  # type: Dict[str, Callable[[HomeServer, dict], Pusher]]",
                "@@ -34,3 +40,3 @@ class PusherFactory:",
                "         if hs.config.email_enable_notifs:",
                "-            self.mailers = {}  # app_name -> Mailer",
                "+            self.mailers = {}  # type: Dict[str, Mailer]",
                "@@ -43,3 +49,3 @@ class PusherFactory:",
                "-    def create_pusher(self, pusherdict):",
                "+    def create_pusher(self, pusherdict: Dict[str, Any]) -> Optional[Pusher]:",
                "         kind = pusherdict[\"kind\"]",
                "@@ -51,3 +57,5 @@ class PusherFactory:",
                "-    def _create_email_pusher(self, _hs, pusherdict):",
                "+    def _create_email_pusher(",
                "+        self, _hs: \"HomeServer\", pusherdict: Dict[str, Any]",
                "+    ) -> EmailPusher:",
                "         app_name = self._app_name_from_pusherdict(pusherdict)",
                "@@ -64,3 +72,3 @@ class PusherFactory:",
                "-    def _app_name_from_pusherdict(self, pusherdict):",
                "+    def _app_name_from_pusherdict(self, pusherdict: Dict[str, Any]) -> str:",
                "         data = pusherdict[\"data\"]",
                "diff --git a/synapse/push/pusherpool.py b/synapse/push/pusherpool.py",
                "index f32596498..9fcc0b8a6 100644",
                "--- a/synapse/push/pusherpool.py",
                "+++ b/synapse/push/pusherpool.py",
                "@@ -17,3 +17,3 @@",
                " import logging",
                "-from typing import TYPE_CHECKING, Dict, Union",
                "+from typing import TYPE_CHECKING, Any, Dict, Optional",
                "@@ -25,5 +25,3 @@ from synapse.metrics.background_process_metrics import (",
                " )",
                "-from synapse.push import PusherConfigException",
                "-from synapse.push.emailpusher import EmailPusher",
                "-from synapse.push.httppusher import HttpPusher",
                "+from synapse.push import Pusher, PusherConfigException",
                " from synapse.push.pusher import PusherFactory",
                "@@ -79,3 +77,3 @@ class PusherPool:",
                "         # map from user id to app_id:pushkey to pusher",
                "-        self.pushers = {}  # type: Dict[str, Dict[str, Union[HttpPusher, EmailPusher]]]",
                "+        self.pushers = {}  # type: Dict[str, Dict[str, Pusher]]",
                "@@ -101,3 +99,3 @@ class PusherPool:",
                "         profile_tag=\"\",",
                "-    ):",
                "+    ) -> Optional[Pusher]:",
                "         \"\"\"Creates a new pusher and adds it to the pool",
                "@@ -105,3 +103,3 @@ class PusherPool:",
                "         Returns:",
                "-            EmailPusher|HttpPusher",
                "+            The newly created pusher.",
                "         \"\"\"",
                "@@ -269,3 +267,5 @@ class PusherPool:",
                "-    async def start_pusher_by_id(self, app_id, pushkey, user_id):",
                "+    async def start_pusher_by_id(",
                "+        self, app_id: str, pushkey: str, user_id: str",
                "+    ) -> Optional[Pusher]:",
                "         \"\"\"Look up the details for the given pusher, and start it",
                "@@ -273,9 +273,9 @@ class PusherPool:",
                "         Returns:",
                "-            EmailPusher|HttpPusher|None: The pusher started, if any",
                "+            The pusher started, if any",
                "         \"\"\"",
                "         if not self._should_start_pushers:",
                "-            return",
                "+            return None",
                "         if not self._pusher_shard_config.should_handle(self._instance_name, user_id):",
                "-            return",
                "+            return None",
                "@@ -305,3 +305,3 @@ class PusherPool:",
                "-    async def _start_pusher(self, pusherdict):",
                "+    async def _start_pusher(self, pusherdict: Dict[str, Any]) -> Optional[Pusher]:",
                "         \"\"\"Start the given pusher",
                "@@ -309,6 +309,6 @@ class PusherPool:",
                "         Args:",
                "-            pusherdict (dict): dict with the values pulled from the db table",
                "+            pusherdict: dict with the values pulled from the db table",
                "         Returns:",
                "-            EmailPusher|HttpPusher",
                "+            The newly created pusher or None.",
                "         \"\"\"",
                "@@ -317,3 +317,3 @@ class PusherPool:",
                "         ):",
                "-            return",
                "+            return None",
                "@@ -330,3 +330,3 @@ class PusherPool:",
                "             )",
                "-            return",
                "+            return None",
                "         except Exception:",
                "@@ -335,6 +335,6 @@ class PusherPool:",
                "             )",
                "-            return",
                "+            return None",
                "         if not p:",
                "-            return",
                "+            return None"
            ],
            "changed_files": [
                "changelog.d/8880.misc",
                "mypy.ini",
                "synapse/push/__init__.py",
                "synapse/push/emailpusher.py",
                "synapse/push/httppusher.py",
                "synapse/push/push_tools.py",
                "synapse/push/pusher.py",
                "synapse/push/pusherpool.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8880": "Add type hints to the push module. #8901 Convert internal pusher dicts to attrs #8940 Fix handling of stream tokens for push #8943 Fix-up assertions about last stream token in push #9020"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8880, 8880",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8880",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1d55c7b56730f0aeb8a620a22d0994f1dc735dfe",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607681869,
            "hunks": 11,
            "message": "Don't ratelimit autojoining of rooms (#8921) Fixes #8866",
            "diff": [
                "diff --git a/changelog.d/8921.bugfix b/changelog.d/8921.bugfix",
                "new file mode 100644",
                "index 000000000..7f6f0b8a7",
                "--- /dev/null",
                "+++ b/changelog.d/8921.bugfix",
                "@@ -0,0 +1 @@",
                "+Fix bug where we ratelimited auto joining of rooms on registration (using `auto_join_rooms` config).",
                "diff --git a/synapse/handlers/room.py b/synapse/handlers/room.py",
                "index 930047e73..82fb72b38 100644",
                "--- a/synapse/handlers/room.py",
                "+++ b/synapse/handlers/room.py",
                "@@ -442,2 +442,3 @@ class RoomCreationHandler(BaseHandler):",
                "             creation_content=creation_content,",
                "+            ratelimit=False,",
                "         )",
                "@@ -737,2 +738,3 @@ class RoomCreationHandler(BaseHandler):",
                "             creator_join_profile=creator_join_profile,",
                "+            ratelimit=ratelimit,",
                "         )",
                "@@ -840,2 +842,3 @@ class RoomCreationHandler(BaseHandler):",
                "         creator_join_profile: Optional[JsonDict] = None,",
                "+        ratelimit: bool = True,",
                "     ) -> int:",
                "@@ -886,3 +889,3 @@ class RoomCreationHandler(BaseHandler):",
                "             \"join\",",
                "-            ratelimit=False,",
                "+            ratelimit=ratelimit,",
                "             content=creator_join_profile,",
                "diff --git a/synapse/handlers/room_member.py b/synapse/handlers/room_member.py",
                "index c00288632..d85110a35 100644",
                "--- a/synapse/handlers/room_member.py",
                "+++ b/synapse/handlers/room_member.py",
                "@@ -205,3 +205,3 @@ class RoomMemberHandler(metaclass=abc.ABCMeta):",
                "             # up blocking profile updates.",
                "-            if newly_joined:",
                "+            if newly_joined and ratelimit:",
                "                 time_now_s = self.clock.time()",
                "@@ -490,13 +490,16 @@ class RoomMemberHandler(metaclass=abc.ABCMeta):",
                "             if not is_host_in_room:",
                "-                time_now_s = self.clock.time()",
                "-                (",
                "-                    allowed,",
                "-                    time_allowed,",
                "-                ) = self._join_rate_limiter_remote.can_requester_do_action(requester,)",
                "-",
                "-                if not allowed:",
                "-                    raise LimitExceededError(",
                "-                        retry_after_ms=int(1000 * (time_allowed - time_now_s))",
                "+                if ratelimit:",
                "+                    time_now_s = self.clock.time()",
                "+                    (",
                "+                        allowed,",
                "+                        time_allowed,",
                "+                    ) = self._join_rate_limiter_remote.can_requester_do_action(",
                "+                        requester,",
                "                     )",
                "+                    if not allowed:",
                "+                        raise LimitExceededError(",
                "+                            retry_after_ms=int(1000 * (time_allowed - time_now_s))",
                "+                        )",
                "+",
                "                 inviter = await self._get_inviter(target.to_string(), room_id)",
                "diff --git a/tests/rest/client/v1/test_rooms.py b/tests/rest/client/v1/test_rooms.py",
                "index e67de41c1..55d872f0e 100644",
                "--- a/tests/rest/client/v1/test_rooms.py",
                "+++ b/tests/rest/client/v1/test_rooms.py",
                "@@ -28,2 +28,3 @@ from synapse.api.constants import EventContentFields, EventTypes, Membership",
                " from synapse.handlers.pagination import PurgeStatus",
                "+from synapse.rest import admin",
                " from synapse.rest.client.v1 import directory, login, profile, room",
                "@@ -627,2 +628,3 @@ class RoomJoinRatelimitTestCase(RoomBase):",
                "     servlets = [",
                "+        admin.register_servlets,",
                "         profile.register_servlets,",
                "@@ -705,2 +707,16 @@ class RoomJoinRatelimitTestCase(RoomBase):",
                "+    @unittest.override_config(",
                "+        {",
                "+            \"rc_joins\": {\"local\": {\"per_second\": 0.5, \"burst_count\": 3}},",
                "+            \"auto_join_rooms\": [\"#room:red\", \"#room2:red\", \"#room3:red\", \"#room4:red\"],",
                "+            \"autocreate_auto_join_rooms\": True,",
                "+        },",
                "+    )",
                "+    def test_autojoin_rooms(self):",
                "+        user_id = self.register_user(\"testuser\", \"password\")",
                "+",
                "+        # Check that the new user successfully joined the four rooms",
                "+        rooms = self.get_success(self.hs.get_datastore().get_rooms_for_user(user_id))",
                "+        self.assertEqual(len(rooms), 4)",
                "+"
            ],
            "changed_files": [
                "changelog.d/8921.bugfix",
                "synapse/handlers/room.py",
                "synapse/handlers/room_member.py",
                "tests/rest/client/v1/test_rooms.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8921": "",
                "8866": "Don't ratelimit autojoining of rooms #8921"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8921, 8921",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8921, 8866",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "02e588856ae26865cd407dd6302aa3deecffe198",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607343022,
            "hunks": 37,
            "message": "Add type hints to the push mailer module. (#8882)",
            "diff": [
                "diff --git a/changelog.d/8882.misc b/changelog.d/8882.misc",
                "new file mode 100644",
                "index 000000000..4ff0b94b9",
                "--- /dev/null",
                "+++ b/changelog.d/8882.misc",
                "@@ -0,0 +1 @@",
                "+Add type hints to push module.",
                "diff --git a/mypy.ini b/mypy.ini",
                "index 3c8d30306..7ee0dd4b3 100644",
                "--- a/mypy.ini",
                "+++ b/mypy.ini",
                "@@ -57,2 +57,3 @@ files =",
                "   synapse/notifier.py,",
                "+  synapse/push/mailer.py,",
                "   synapse/push/pusherpool.py,",
                "diff --git a/synapse/push/mailer.py b/synapse/push/mailer.py",
                "index 38195c8ee..9ff092e8b 100644",
                "--- a/synapse/push/mailer.py",
                "+++ b/synapse/push/mailer.py",
                "@@ -21,3 +21,3 @@ from email.mime.multipart import MIMEMultipart",
                " from email.mime.text import MIMEText",
                "-from typing import Iterable, List, TypeVar",
                "+from typing import TYPE_CHECKING, Any, Dict, Iterable, List, Optional, TypeVar",
                "@@ -29,2 +29,3 @@ from synapse.api.errors import StoreError",
                " from synapse.config.emailconfig import EmailSubjectConfig",
                "+from synapse.events import EventBase",
                " from synapse.logging.context import make_deferred_yieldable",
                "@@ -35,3 +36,3 @@ from synapse.push.presentable_names import (",
                " )",
                "-from synapse.types import UserID",
                "+from synapse.types import StateMap, UserID",
                " from synapse.util.async_helpers import concurrently_execute",
                "@@ -39,2 +40,5 @@ from synapse.visibility import filter_events_for_client",
                "+if TYPE_CHECKING:",
                "+    from synapse.app.homeserver import HomeServer",
                "+",
                " logger = logging.getLogger(__name__)",
                "@@ -95,3 +99,9 @@ ALLOWED_ATTRS = {",
                " class Mailer:",
                "-    def __init__(self, hs, app_name, template_html, template_text):",
                "+    def __init__(",
                "+        self,",
                "+        hs: \"HomeServer\",",
                "+        app_name: str,",
                "+        template_html: jinja2.Template,",
                "+        template_text: jinja2.Template,",
                "+    ):",
                "         self.hs = hs",
                "@@ -110,3 +120,5 @@ class Mailer:",
                "-    async def send_password_reset_mail(self, email_address, token, client_secret, sid):",
                "+    async def send_password_reset_mail(",
                "+        self, email_address: str, token: str, client_secret: str, sid: str",
                "+    ) -> None:",
                "         \"\"\"Send an email with a password reset link to a user",
                "@@ -114,9 +126,9 @@ class Mailer:",
                "         Args:",
                "-            email_address (str): Email address we're sending the password",
                "+            email_address: Email address we're sending the password",
                "                 reset to",
                "-            token (str): Unique token generated by the server to verify",
                "+            token: Unique token generated by the server to verify",
                "                 the email was received",
                "-            client_secret (str): Unique token generated by the client to",
                "+            client_secret: Unique token generated by the client to",
                "                 group together multiple email sending attempts",
                "-            sid (str): The generated session ID",
                "+            sid: The generated session ID",
                "         \"\"\"",
                "@@ -138,3 +150,5 @@ class Mailer:",
                "-    async def send_registration_mail(self, email_address, token, client_secret, sid):",
                "+    async def send_registration_mail(",
                "+        self, email_address: str, token: str, client_secret: str, sid: str",
                "+    ) -> None:",
                "         \"\"\"Send an email with a registration confirmation link to a user",
                "@@ -142,9 +156,9 @@ class Mailer:",
                "         Args:",
                "-            email_address (str): Email address we're sending the registration",
                "+            email_address: Email address we're sending the registration",
                "                 link to",
                "-            token (str): Unique token generated by the server to verify",
                "+            token: Unique token generated by the server to verify",
                "                 the email was received",
                "-            client_secret (str): Unique token generated by the client to",
                "+            client_secret: Unique token generated by the client to",
                "                 group together multiple email sending attempts",
                "-            sid (str): The generated session ID",
                "+            sid: The generated session ID",
                "         \"\"\"",
                "@@ -166,3 +180,5 @@ class Mailer:",
                "-    async def send_add_threepid_mail(self, email_address, token, client_secret, sid):",
                "+    async def send_add_threepid_mail(",
                "+        self, email_address: str, token: str, client_secret: str, sid: str",
                "+    ) -> None:",
                "         \"\"\"Send an email with a validation link to a user for adding a 3pid to their account",
                "@@ -170,10 +186,10 @@ class Mailer:",
                "         Args:",
                "-            email_address (str): Email address we're sending the validation link to",
                "+            email_address: Email address we're sending the validation link to",
                "-            token (str): Unique token generated by the server to verify the email was received",
                "+            token: Unique token generated by the server to verify the email was received",
                "-            client_secret (str): Unique token generated by the client to group together",
                "+            client_secret: Unique token generated by the client to group together",
                "                 multiple email sending attempts",
                "-            sid (str): The generated session ID",
                "+            sid: The generated session ID",
                "         \"\"\"",
                "@@ -196,4 +212,9 @@ class Mailer:",
                "     async def send_notification_mail(",
                "-        self, app_id, user_id, email_address, push_actions, reason",
                "-    ):",
                "+        self,",
                "+        app_id: str,",
                "+        user_id: str,",
                "+        email_address: str,",
                "+        push_actions: Iterable[Dict[str, Any]],",
                "+        reason: Dict[str, Any],",
                "+    ) -> None:",
                "         \"\"\"Send email regarding a user's room notifications\"\"\"",
                "@@ -205,3 +226,3 @@ class Mailer:",
                "-        notifs_by_room = {}",
                "+        notifs_by_room = {}  # type: Dict[str, List[Dict[str, Any]]]",
                "         for pa in push_actions:",
                "@@ -264,3 +285,5 @@ class Mailer:",
                "-    async def send_email(self, email_address, subject, extra_template_vars):",
                "+    async def send_email(",
                "+        self, email_address: str, subject: str, extra_template_vars: Dict[str, Any]",
                "+    ) -> None:",
                "         \"\"\"Send an email with the given information and template text\"\"\"",
                "@@ -317,4 +340,9 @@ class Mailer:",
                "     async def get_room_vars(",
                "-        self, room_id, user_id, notifs, notif_events, room_state_ids",
                "-    ):",
                "+        self,",
                "+        room_id: str,",
                "+        user_id: str,",
                "+        notifs: Iterable[Dict[str, Any]],",
                "+        notif_events: Dict[str, EventBase],",
                "+        room_state_ids: StateMap[str],",
                "+    ) -> Dict[str, Any]:",
                "         # Check if one of the notifs is an invite event for the user.",
                "@@ -336,3 +364,3 @@ class Mailer:",
                "             \"link\": self.make_room_link(room_id),",
                "-        }",
                "+        }  # type: Dict[str, Any]",
                "@@ -367,3 +395,9 @@ class Mailer:",
                "-    async def get_notif_vars(self, notif, user_id, notif_event, room_state_ids):",
                "+    async def get_notif_vars(",
                "+        self,",
                "+        notif: Dict[str, Any],",
                "+        user_id: str,",
                "+        notif_event: EventBase,",
                "+        room_state_ids: StateMap[str],",
                "+    ) -> Dict[str, Any]:",
                "         results = await self.store.get_events_around(",
                "@@ -393,3 +427,5 @@ class Mailer:",
                "-    async def get_message_vars(self, notif, event, room_state_ids):",
                "+    async def get_message_vars(",
                "+        self, notif: Dict[str, Any], event: EventBase, room_state_ids: StateMap[str]",
                "+    ) -> Optional[Dict[str, Any]]:",
                "         if event.type != EventTypes.Message and event.type != EventTypes.Encrypted:",
                "@@ -434,3 +470,5 @@ class Mailer:",
                "-    def add_text_message_vars(self, messagevars, event):",
                "+    def add_text_message_vars(",
                "+        self, messagevars: Dict[str, Any], event: EventBase",
                "+    ) -> None:",
                "         msgformat = event.content.get(\"format\")",
                "@@ -447,11 +485,14 @@ class Mailer:",
                "-        return messagevars",
                "-",
                "-    def add_image_message_vars(self, messagevars, event):",
                "+    def add_image_message_vars(",
                "+        self, messagevars: Dict[str, Any], event: EventBase",
                "+    ) -> None:",
                "         messagevars[\"image_url\"] = event.content[\"url\"]",
                "-        return messagevars",
                "-",
                "     async def make_summary_text(",
                "-        self, notifs_by_room, room_state_ids, notif_events, user_id, reason",
                "+        self,",
                "+        notifs_by_room: Dict[str, List[Dict[str, Any]]],",
                "+        room_state_ids: Dict[str, StateMap[str]],",
                "+        notif_events: Dict[str, EventBase],",
                "+        user_id: str,",
                "+        reason: Dict[str, Any],",
                "     ):",
                "@@ -582,3 +623,3 @@ class Mailer:",
                "-    def make_room_link(self, room_id):",
                "+    def make_room_link(self, room_id: str) -> str:",
                "         if self.hs.config.email_riot_base_url:",
                "@@ -592,3 +633,3 @@ class Mailer:",
                "-    def make_notif_link(self, notif):",
                "+    def make_notif_link(self, notif: Dict[str, str]) -> str:",
                "         if self.hs.config.email_riot_base_url:",
                "@@ -608,3 +649,5 @@ class Mailer:",
                "-    def make_unsubscribe_link(self, user_id, app_id, email_address):",
                "+    def make_unsubscribe_link(",
                "+        self, user_id: str, app_id: str, email_address: str",
                "+    ) -> str:",
                "         params = {",
                "@@ -622,3 +665,3 @@ class Mailer:",
                "-def safe_markup(raw_html):",
                "+def safe_markup(raw_html: str) -> jinja2.Markup:",
                "     return jinja2.Markup(",
                "@@ -637,3 +680,3 @@ def safe_markup(raw_html):",
                "-def safe_text(raw_text):",
                "+def safe_text(raw_text: str) -> jinja2.Markup:",
                "     \"\"\"",
                "@@ -657,3 +700,3 @@ def deduped_ordered_list(it: Iterable[T]) -> List[T]:",
                "-def string_ordinal_total(s):",
                "+def string_ordinal_total(s: str) -> int:",
                "     tot = 0"
            ],
            "changed_files": [
                "changelog.d/8882.misc",
                "mypy.ini",
                "synapse/push/mailer.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8882": "Add type hints to the push module. #8901 Convert internal pusher dicts to attrs #8940"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8882, 8882",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8882",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "80a992d7b953ea58dd45913d68855e396ad4d980",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607619365,
            "hunks": 3,
            "message": "Fix deadlock on SIGHUP (#8918) Fixes #8892",
            "diff": [
                "diff --git a/changelog.d/8918.bugfix b/changelog.d/8918.bugfix",
                "new file mode 100644",
                "index 000000000..ae0f6745d",
                "--- /dev/null",
                "+++ b/changelog.d/8918.bugfix",
                "@@ -0,0 +1 @@",
                "+Fix occasional deadlock when handling SIGHUP.",
                "diff --git a/synapse/app/_base.py b/synapse/app/_base.py",
                "index 895b38ae7..37ecdbe3d 100644",
                "--- a/synapse/app/_base.py",
                "+++ b/synapse/app/_base.py",
                "@@ -247,2 +247,4 @@ def start(hs: \"synapse.server.HomeServer\", listeners: Iterable[ListenerConfig]):",
                "+            reactor = hs.get_reactor()",
                "+",
                "             @wrap_as_background_process(\"sighup\")",
                "@@ -262,3 +264,5 @@ def start(hs: \"synapse.server.HomeServer\", listeners: Iterable[ListenerConfig]):",
                "             def run_sighup(*args, **kwargs):",
                "-                hs.get_clock().call_later(0, handle_sighup, *args, **kwargs)",
                "+                # `callFromThread` should be \"signal safe\" as well as thread",
                "+                # safe.",
                "+                reactor.callFromThread(handle_sighup, *args, **kwargs)"
            ],
            "changed_files": [
                "changelog.d/8918.bugfix",
                "synapse/app/_base.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8918": "",
                "8892": "Fix deadlock on SIGHUP #8918"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8918, 8918",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8918, 8892",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "43bf3c51780a299becde91027e73259eb77b039f",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607530797,
            "hunks": 1,
            "message": "Combine related media admin API docs (#8839) Related: #8810 Also a few small improvements. Signed-off-by: Dirk Klimpel dirk@klimpel.org",
            "diff": [
                "diff --git a/changelog.d/8839.doc b/changelog.d/8839.doc",
                "new file mode 100644",
                "index 000000000..c35c59a76",
                "--- /dev/null",
                "+++ b/changelog.d/8839.doc",
                "@@ -0,0 +1 @@",
                "+Combine related media admin API docs.",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "changelog.d/8839.doc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8839": "",
                "8810": "Deprecate and remove the Shutdown Room Admin API in favour of the Delete Room API #8663 Deprecate Shutdown Room and Purge Room Admin API #8829 Remove deprecated Shutdown Room and Purge Room Admin API #8830 Combine related media admin API docs #8839"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8839, 8839",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8839, 8810",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a5f7aff5e5a840c53e79d185d40b22d67dad2ea1",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607600568,
            "hunks": 1,
            "message": "Deprecate Shutdown Room and Purge Room Admin API (#8829) Deprecate both APIs in favour of the Delete Room API. Related: #8663 and #8810",
            "diff": [
                "diff --git a/changelog.d/8829.removal b/changelog.d/8829.removal",
                "new file mode 100644",
                "index 000000000..2f3708218",
                "--- /dev/null",
                "+++ b/changelog.d/8829.removal",
                "@@ -0,0 +1 @@",
                "+Deprecate Shutdown Room and Purge Room Admin APIs."
            ],
            "changed_files": [
                "changelog.d/8829.removal"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8829": "Remove deprecated Shutdown Room and Purge Room Admin API #8830 Combine related admin API docs #8810 Switch shutdown_room to delete room API matrix-org/sytest#988 Deprecate and remove the Shutdown Room Admin API in favour of the Delete Room API #8663 Replace shutdown_room and purge_room APIs with delete_room matrix-org/mjolnir#76 remove purge_room and shutdown_room #9052",
                "8663": "Allow shutdowns of rooms using the admin api without replacement rooms #8662 Add a way to close/shutdown room as room admin #8717 Deprecate Shutdown Room and Purge Room Admin API #8829 Remove deprecated Shutdown Room and Purge Room Admin API #8830",
                "8810": "Deprecate and remove the Shutdown Room Admin API in favour of the Delete Room API #8663 Deprecate Shutdown Room and Purge Room Admin API #8829 Remove deprecated Shutdown Room and Purge Room Admin API #8830 Combine related media admin API docs #8839"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8829, 8829",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8829, 8663, 8810",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b3a4b53587108af7c58acc45a0441304689f3ac9",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608046894,
            "hunks": 12,
            "message": "Fix handling of stream tokens for push. (#8943) Removes faulty assertions and fixes the logic to ensure the max stream token is always set.",
            "diff": [
                "diff --git a/changelog.d/8943.misc b/changelog.d/8943.misc",
                "new file mode 100644",
                "index 000000000..4ff0b94b9",
                "--- /dev/null",
                "+++ b/changelog.d/8943.misc",
                "@@ -0,0 +1 @@",
                "+Add type hints to push module.",
                "diff --git a/synapse/push/__init__.py b/synapse/push/__init__.py",
                "index 3d2e87483..ad07ee86f 100644",
                "--- a/synapse/push/__init__.py",
                "+++ b/synapse/push/__init__.py",
                "@@ -16,3 +16,3 @@",
                " import abc",
                "-from typing import TYPE_CHECKING, Any, Dict, Optional",
                "+from typing import TYPE_CHECKING, Any, Dict",
                "@@ -38,8 +38,17 @@ class Pusher(metaclass=abc.ABCMeta):",
                "         # should honour this rather than just looking for anything higher",
                "-        # because of potential out-of-order event serialisation. This starts",
                "-        # off as None though as we don't know any better.",
                "-        self.max_stream_ordering = None  # type: Optional[int]",
                "+        # because of potential out-of-order event serialisation.",
                "+        self.max_stream_ordering = self.store.get_room_max_stream_ordering()",
                "-    @abc.abstractmethod",
                "     def on_new_notifications(self, max_token: RoomStreamToken) -> None:",
                "+        # We just use the minimum stream ordering and ignore the vector clock",
                "+        # component. This is safe to do as long as we *always* ignore the vector",
                "+        # clock components.",
                "+        max_stream_ordering = max_token.stream",
                "+",
                "+        self.max_stream_ordering = max(max_stream_ordering, self.max_stream_ordering)",
                "+        self._start_processing()",
                "+",
                "+    @abc.abstractmethod",
                "+    def _start_processing(self):",
                "+        \"\"\"Start processing push notifications.\"\"\"",
                "         raise NotImplementedError()",
                "diff --git a/synapse/push/emailpusher.py b/synapse/push/emailpusher.py",
                "index 64a35c199..11a97b8df 100644",
                "--- a/synapse/push/emailpusher.py",
                "+++ b/synapse/push/emailpusher.py",
                "@@ -24,3 +24,2 @@ from synapse.push import Pusher",
                " from synapse.push.mailer import Mailer",
                "-from synapse.types import RoomStreamToken",
                "@@ -95,16 +94,2 @@ class EmailPusher(Pusher):",
                "-    def on_new_notifications(self, max_token: RoomStreamToken) -> None:",
                "-        # We just use the minimum stream ordering and ignore the vector clock",
                "-        # component. This is safe to do as long as we *always* ignore the vector",
                "-        # clock components.",
                "-        max_stream_ordering = max_token.stream",
                "-",
                "-        if self.max_stream_ordering:",
                "-            self.max_stream_ordering = max(",
                "-                max_stream_ordering, self.max_stream_ordering",
                "-            )",
                "-        else:",
                "-            self.max_stream_ordering = max_stream_ordering",
                "-        self._start_processing()",
                "-",
                "     def on_new_receipts(self, min_stream_id: int, max_stream_id: int) -> None:",
                "@@ -174,3 +159,2 @@ class EmailPusher(Pusher):",
                "         start = 0 if INCLUDE_ALL_UNREAD_NOTIFS else self.last_stream_ordering",
                "-        assert self.max_stream_ordering is not None",
                "         unprocessed = await self.store.get_unread_push_actions_for_user_in_range_for_email(",
                "diff --git a/synapse/push/httppusher.py b/synapse/push/httppusher.py",
                "index 5408aa129..e8b25bcd2 100644",
                "--- a/synapse/push/httppusher.py",
                "+++ b/synapse/push/httppusher.py",
                "@@ -28,3 +28,2 @@ from synapse.metrics.background_process_metrics import run_as_background_process",
                " from synapse.push import Pusher, PusherConfigException",
                "-from synapse.types import RoomStreamToken",
                "@@ -124,13 +123,2 @@ class HttpPusher(Pusher):",
                "-    def on_new_notifications(self, max_token: RoomStreamToken) -> None:",
                "-        # We just use the minimum stream ordering and ignore the vector clock",
                "-        # component. This is safe to do as long as we *always* ignore the vector",
                "-        # clock components.",
                "-        max_stream_ordering = max_token.stream",
                "-",
                "-        self.max_stream_ordering = max(",
                "-            max_stream_ordering, self.max_stream_ordering or 0",
                "-        )",
                "-        self._start_processing()",
                "-",
                "     def on_new_receipts(self, min_stream_id: int, max_stream_id: int) -> None:",
                "@@ -194,6 +182,3 @@ class HttpPusher(Pusher):",
                "         \"\"\"",
                "-",
                "-        fn = self.store.get_unread_push_actions_for_user_in_range_for_http",
                "-        assert self.max_stream_ordering is not None",
                "-        unprocessed = await fn(",
                "+        unprocessed = await self.store.get_unread_push_actions_for_user_in_range_for_http(",
                "             self.user_id, self.last_stream_ordering, self.max_stream_ordering",
                "diff --git a/synapse/push/pusherpool.py b/synapse/push/pusherpool.py",
                "index 9fcc0b8a6..9c12d81cf 100644",
                "--- a/synapse/push/pusherpool.py",
                "+++ b/synapse/push/pusherpool.py",
                "@@ -131,5 +131,4 @@ class PusherPool:",
                "         # create the pusher setting last_stream_ordering to the current maximum",
                "-        # stream ordering in event_push_actions, so it will process",
                "-        # pushes from this point onwards.",
                "-        last_stream_ordering = await self.store.get_latest_push_action_stream_ordering()",
                "+        # stream ordering, so it will process pushes from this point onwards.",
                "+        last_stream_ordering = self.store.get_room_max_stream_ordering()",
                "diff --git a/synapse/storage/databases/main/event_push_actions.py b/synapse/storage/databases/main/event_push_actions.py",
                "index 2e56dfaf3..e5c03cc60 100644",
                "--- a/synapse/storage/databases/main/event_push_actions.py",
                "+++ b/synapse/storage/databases/main/event_push_actions.py",
                "@@ -896,12 +896,2 @@ class EventPushActionsStore(EventPushActionsWorkerStore):",
                "-    async def get_latest_push_action_stream_ordering(self):",
                "-        def f(txn):",
                "-            txn.execute(\"SELECT MAX(stream_ordering) FROM event_push_actions\")",
                "-            return txn.fetchone()",
                "-",
                "-        result = await self.db_pool.runInteraction(",
                "-            \"get_latest_push_action_stream_ordering\", f",
                "-        )",
                "-        return result[0] or 0",
                "-",
                "     def _remove_old_push_actions_before_txn("
            ],
            "changed_files": [
                "changelog.d/8943.misc",
                "synapse/push/__init__.py",
                "synapse/push/emailpusher.py",
                "synapse/push/httppusher.py",
                "synapse/push/pusherpool.py",
                "synapse/storage/databases/main/event_push_actions.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8943": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8943, 8943",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8943",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f2783fc201edaa49eafd8be06f8cda16ec1f3d95",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608212550,
            "hunks": 10,
            "message": "Use the simple dictionary in full text search for the user directory (#8959) * Use the simple dictionary in fts for the user directory * Clarify naming",
            "diff": [
                "diff --git a/changelog.d/8959.bugfix b/changelog.d/8959.bugfix",
                "new file mode 100644",
                "index 000000000..772818bae",
                "--- /dev/null",
                "+++ b/changelog.d/8959.bugfix",
                "@@ -0,0 +1 @@",
                "+Fix a bug causing common English words to not be considered for a user directory search.",
                "diff --git a/synapse/storage/databases/main/user_directory.py b/synapse/storage/databases/main/user_directory.py",
                "index fc8caf46a..ef11f1c3b 100644",
                "--- a/synapse/storage/databases/main/user_directory.py",
                "+++ b/synapse/storage/databases/main/user_directory.py",
                "@@ -398,5 +398,5 @@ class UserDirectoryBackgroundUpdateStore(StateDeltasStore):",
                "                         VALUES (?,",
                "-                            setweight(to_tsvector('english', ?), 'A')",
                "-                            || setweight(to_tsvector('english', ?), 'D')",
                "-                            || setweight(to_tsvector('english', COALESCE(?, '')), 'B')",
                "+                            setweight(to_tsvector('simple', ?), 'A')",
                "+                            || setweight(to_tsvector('simple', ?), 'D')",
                "+                            || setweight(to_tsvector('simple', COALESCE(?, '')), 'B')",
                "                         ) ON CONFLICT (user_id) DO UPDATE SET vector=EXCLUDED.vector",
                "@@ -420,5 +420,5 @@ class UserDirectoryBackgroundUpdateStore(StateDeltasStore):",
                "                             VALUES (?,",
                "-                                setweight(to_tsvector('english', ?), 'A')",
                "-                                || setweight(to_tsvector('english', ?), 'D')",
                "-                                || setweight(to_tsvector('english', COALESCE(?, '')), 'B')",
                "+                                setweight(to_tsvector('simple', ?), 'A')",
                "+                                || setweight(to_tsvector('simple', ?), 'D')",
                "+                                || setweight(to_tsvector('simple', COALESCE(?, '')), 'B')",
                "                             )",
                "@@ -437,5 +437,5 @@ class UserDirectoryBackgroundUpdateStore(StateDeltasStore):",
                "                             UPDATE user_directory_search",
                "-                            SET vector = setweight(to_tsvector('english', ?), 'A')",
                "-                                || setweight(to_tsvector('english', ?), 'D')",
                "-                                || setweight(to_tsvector('english', COALESCE(?, '')), 'B')",
                "+                            SET vector = setweight(to_tsvector('simple', ?), 'A')",
                "+                                || setweight(to_tsvector('simple', ?), 'D')",
                "+                                || setweight(to_tsvector('simple', COALESCE(?, '')), 'B')",
                "                             WHERE user_id = ?",
                "@@ -766,3 +766,3 @@ class UserDirectoryStore(UserDirectoryBackgroundUpdateStore):",
                "                     %s",
                "-                    AND vector @@ to_tsquery('english', ?)",
                "+                    AND vector @@ to_tsquery('simple', ?)",
                "                 ORDER BY",
                "@@ -775,3 +775,3 @@ class UserDirectoryStore(UserDirectoryBackgroundUpdateStore):",
                "                             vector,",
                "-                            to_tsquery('english', ?),",
                "+                            to_tsquery('simple', ?),",
                "                             8",
                "@@ -781,3 +781,3 @@ class UserDirectoryStore(UserDirectoryBackgroundUpdateStore):",
                "                             vector,",
                "-                            to_tsquery('english', ?),",
                "+                            to_tsquery('simple', ?),",
                "                             8",
                "diff --git a/tests/storage/test_user_directory.py b/tests/storage/test_user_directory.py",
                "index 738e91246..a6f63f4aa 100644",
                "--- a/tests/storage/test_user_directory.py",
                "+++ b/tests/storage/test_user_directory.py",
                "@@ -23,2 +23,4 @@ BOB = \"@bob:b\"",
                " BOBBY = \"@bobby:a\"",
                "+# The localpart isn't 'Bela' on purpose so we can test looking up display names.",
                "+BELA = \"@somenickname:a\"",
                "@@ -42,2 +44,5 @@ class UserDirectoryStoreTestCase(unittest.TestCase):",
                "         )",
                "+        yield defer.ensureDeferred(",
                "+            self.store.update_profile_in_user_dir(BELA, \"Bela\", None)",
                "+        )",
                "         yield defer.ensureDeferred(",
                "@@ -74 +79,19 @@ class UserDirectoryStoreTestCase(unittest.TestCase):",
                "             self.hs.config.user_directory_search_all_users = False",
                "+",
                "+    @defer.inlineCallbacks",
                "+    def test_search_user_dir_stop_words(self):",
                "+        \"\"\"Tests that a user can look up another user by searching for the start if its",
                "+        display name even if that name happens to be a common English word that would",
                "+        usually be ignored in full text searches.",
                "+        \"\"\"",
                "+        self.hs.config.user_directory_search_all_users = True",
                "+        try:",
                "+            r = yield defer.ensureDeferred(self.store.search_user_dir(ALICE, \"be\", 10))",
                "+            self.assertFalse(r[\"limited\"])",
                "+            self.assertEqual(1, len(r[\"results\"]))",
                "+            self.assertDictEqual(",
                "+                r[\"results\"][0],",
                "+                {\"user_id\": BELA, \"display_name\": \"Bela\", \"avatar_url\": None},",
                "+            )",
                "+        finally:",
                "+            self.hs.config.user_directory_search_all_users = False"
            ],
            "changed_files": [
                "changelog.d/8959.bugfix",
                "synapse/storage/databases/main/user_directory.py",
                "tests/storage/test_user_directory.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8959": "User directory search fails for certain letters #2931 User directory won't consider non-new users with stop words in their names #8974"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8959, 8959",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8959",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6ff34e00d9bd4e8b0b91347a359b17abeaa22e5a",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607534610,
            "hunks": 3,
            "message": "Skip the SAML tests if xmlsec1 isn't available. (#8905)",
            "diff": [
                "diff --git a/changelog.d/8905.misc b/changelog.d/8905.misc",
                "new file mode 100644",
                "index 000000000..a9a11a230",
                "--- /dev/null",
                "+++ b/changelog.d/8905.misc",
                "@@ -0,0 +1 @@",
                "+Skip the SAML tests if the requirements (`pysaml2` and `xmlsec1`) aren't available.",
                "diff --git a/tests/handlers/test_saml.py b/tests/handlers/test_saml.py",
                "index 45dc17aba..d21e5588c 100644",
                "--- a/tests/handlers/test_saml.py",
                "+++ b/tests/handlers/test_saml.py",
                "@@ -21,2 +21,20 @@ from tests.unittest import HomeserverTestCase, override_config",
                "+# Check if we have the dependencies to run the tests.",
                "+try:",
                "+    import saml2.config",
                "+    from saml2.sigver import SigverError",
                "+",
                "+    has_saml2 = True",
                "+",
                "+    # pysaml2 can be installed and imported, but might not be able to find xmlsec1.",
                "+    config = saml2.config.SPConfig()",
                "+    try:",
                "+        config.load({\"metadata\": {}})",
                "+        has_xmlsec1 = True",
                "+    except SigverError:",
                "+        has_xmlsec1 = False",
                "+except ImportError:",
                "+    has_saml2 = False",
                "+    has_xmlsec1 = False",
                "+",
                " # These are a few constants that are used as config parameters in the tests.",
                "@@ -88,2 +106,7 @@ class SamlHandlerTestCase(HomeserverTestCase):",
                "+    if not has_saml2:",
                "+        skip = \"Requires pysaml2\"",
                "+    elif not has_xmlsec1:",
                "+        skip = \"Requires xmlsec1\"",
                "+",
                "     def test_map_saml_response_to_user(self):"
            ],
            "changed_files": [
                "changelog.d/8905.misc",
                "tests/handlers/test_saml.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8905": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8905, 8905",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8905",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5d34f40d494305bb32b3d57c18fb17d98d21a31f",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607705033,
            "hunks": 75,
            "message": "Add type hints to the push module. (#8901)",
            "diff": [
                "diff --git a/changelog.d/8901.misc b/changelog.d/8901.misc",
                "new file mode 100644",
                "index 000000000..4ff0b94b9",
                "--- /dev/null",
                "+++ b/changelog.d/8901.misc",
                "@@ -0,0 +1 @@",
                "+Add type hints to push module.",
                "diff --git a/mypy.ini b/mypy.ini",
                "index 12408b8d9..334e3a22f 100644",
                "--- a/mypy.ini",
                "+++ b/mypy.ini",
                "@@ -58,8 +58,3 @@ files =",
                "   synapse/notifier.py,",
                "-  synapse/push/emailpusher.py,",
                "-  synapse/push/httppusher.py,",
                "-  synapse/push/mailer.py,",
                "-  synapse/push/pusher.py,",
                "-  synapse/push/pusherpool.py,",
                "-  synapse/push/push_rule_evaluator.py,",
                "+  synapse/push,",
                "   synapse/replication,",
                "diff --git a/scripts-dev/mypy_synapse_plugin.py b/scripts-dev/mypy_synapse_plugin.py",
                "index 5882f3a0b..f7f18805e 100644",
                "--- a/scripts-dev/mypy_synapse_plugin.py",
                "+++ b/scripts-dev/mypy_synapse_plugin.py",
                "@@ -33,2 +33,4 @@ class SynapsePlugin(Plugin):",
                "             \"synapse.util.caches.descriptors._CachedFunction.__call__\"",
                "+        ) or fullname.startswith(",
                "+            \"synapse.util.caches.descriptors._LruCachedFunction.__call__\"",
                "         ):",
                "diff --git a/synapse/push/action_generator.py b/synapse/push/action_generator.py",
                "index fabc9ba12..aaed28650 100644",
                "--- a/synapse/push/action_generator.py",
                "+++ b/synapse/push/action_generator.py",
                "@@ -16,6 +16,11 @@",
                " import logging",
                "+from typing import TYPE_CHECKING",
                "+from synapse.events import EventBase",
                "+from synapse.events.snapshot import EventContext",
                "+from synapse.push.bulk_push_rule_evaluator import BulkPushRuleEvaluator",
                " from synapse.util.metrics import Measure",
                "-from .bulk_push_rule_evaluator import BulkPushRuleEvaluator",
                "+if TYPE_CHECKING:",
                "+    from synapse.app.homeserver import HomeServer",
                "@@ -25,6 +30,4 @@ logger = logging.getLogger(__name__)",
                " class ActionGenerator:",
                "-    def __init__(self, hs):",
                "-        self.hs = hs",
                "+    def __init__(self, hs: \"HomeServer\"):",
                "         self.clock = hs.get_clock()",
                "-        self.store = hs.get_datastore()",
                "         self.bulk_evaluator = BulkPushRuleEvaluator(hs)",
                "@@ -37,3 +40,5 @@ class ActionGenerator:",
                "-    async def handle_push_actions_for_event(self, event, context):",
                "+    async def handle_push_actions_for_event(",
                "+        self, event: EventBase, context: EventContext",
                "+    ) -> None:",
                "         with Measure(self.clock, \"action_for_event_by_user\"):",
                "diff --git a/synapse/push/baserules.py b/synapse/push/baserules.py",
                "index f5788c1de..621150699 100644",
                "--- a/synapse/push/baserules.py",
                "+++ b/synapse/push/baserules.py",
                "@@ -17,2 +17,3 @@",
                " import copy",
                "+from typing import Any, Dict, List",
                "@@ -21,3 +22,5 @@ from synapse.push.rulekinds import PRIORITY_CLASS_INVERSE_MAP, PRIORITY_CLASS_MA",
                "-def list_with_base_rules(rawrules, use_new_defaults=False):",
                "+def list_with_base_rules(",
                "+    rawrules: List[Dict[str, Any]], use_new_defaults: bool = False",
                "+) -> List[Dict[str, Any]]:",
                "     \"\"\"Combine the list of rules set by the user with the default push rules",
                "@@ -25,4 +28,4 @@ def list_with_base_rules(rawrules, use_new_defaults=False):",
                "     Args:",
                "-        rawrules(list): The rules the user has modified or set.",
                "-        use_new_defaults(bool): Whether to use the new experimental default rules when",
                "+        rawrules: The rules the user has modified or set.",
                "+        use_new_defaults: Whether to use the new experimental default rules when",
                "             appending or prepending default rules.",
                "@@ -96,3 +99,7 @@ def list_with_base_rules(rawrules, use_new_defaults=False):",
                "-def make_base_append_rules(kind, modified_base_rules, use_new_defaults=False):",
                "+def make_base_append_rules(",
                "+    kind: str,",
                "+    modified_base_rules: Dict[str, Dict[str, Any]],",
                "+    use_new_defaults: bool = False,",
                "+) -> List[Dict[str, Any]]:",
                "     rules = []",
                "@@ -118,2 +125,3 @@ def make_base_append_rules(kind, modified_base_rules, use_new_defaults=False):",
                "         # Only modify the actions, keep the conditions the same.",
                "+        assert isinstance(r[\"rule_id\"], str)",
                "         modified = modified_base_rules.get(r[\"rule_id\"])",
                "@@ -125,3 +133,7 @@ def make_base_append_rules(kind, modified_base_rules, use_new_defaults=False):",
                "-def make_base_prepend_rules(kind, modified_base_rules, use_new_defaults=False):",
                "+def make_base_prepend_rules(",
                "+    kind: str,",
                "+    modified_base_rules: Dict[str, Dict[str, Any]],",
                "+    use_new_defaults: bool = False,",
                "+) -> List[Dict[str, Any]]:",
                "     rules = []",
                "@@ -135,2 +147,3 @@ def make_base_prepend_rules(kind, modified_base_rules, use_new_defaults=False):",
                "         # Only modify the actions, keep the conditions the same.",
                "+        assert isinstance(r[\"rule_id\"], str)",
                "         modified = modified_base_rules.get(r[\"rule_id\"])",
                "diff --git a/synapse/push/bulk_push_rule_evaluator.py b/synapse/push/bulk_push_rule_evaluator.py",
                "index 82a72dc34..10f27e437 100644",
                "--- a/synapse/push/bulk_push_rule_evaluator.py",
                "+++ b/synapse/push/bulk_push_rule_evaluator.py",
                "@@ -17,2 +17,3 @@",
                " import logging",
                "+from typing import TYPE_CHECKING, Any, Dict, List, Optional, Set, Tuple, Union",
                "@@ -27,3 +28,3 @@ from synapse.state import POWER_KEY",
                " from synapse.util.async_helpers import Linearizer",
                "-from synapse.util.caches import register_cache",
                "+from synapse.util.caches import CacheMetric, register_cache",
                " from synapse.util.caches.descriptors import lru_cache",
                "@@ -33,6 +34,6 @@ from .push_rule_evaluator import PushRuleEvaluatorForEvent",
                "-logger = logging.getLogger(__name__)",
                "-",
                "+if TYPE_CHECKING:",
                "+    from synapse.app.homeserver import HomeServer",
                "-rules_by_room = {}",
                "+logger = logging.getLogger(__name__)",
                "@@ -103,3 +104,3 @@ class BulkPushRuleEvaluator:",
                "-    def __init__(self, hs):",
                "+    def __init__(self, hs: \"HomeServer\"):",
                "         self.hs = hs",
                "@@ -115,3 +116,5 @@ class BulkPushRuleEvaluator:",
                "-    async def _get_rules_for_event(self, event, context):",
                "+    async def _get_rules_for_event(",
                "+        self, event: EventBase, context: EventContext",
                "+    ) -> Dict[str, List[Dict[str, Any]]]:",
                "         \"\"\"This gets the rules for all users in the room at the time of the event,",
                "@@ -142,7 +145,4 @@ class BulkPushRuleEvaluator:",
                "     @lru_cache()",
                "-    def _get_rules_for_room(self, room_id):",
                "+    def _get_rules_for_room(self, room_id: str) -> \"RulesForRoom\":",
                "         \"\"\"Get the current RulesForRoom object for the given room id",
                "-",
                "-        Returns:",
                "-            RulesForRoom",
                "         \"\"\"",
                "@@ -158,3 +158,5 @@ class BulkPushRuleEvaluator:",
                "-    async def _get_power_levels_and_sender_level(self, event, context):",
                "+    async def _get_power_levels_and_sender_level(",
                "+        self, event: EventBase, context: EventContext",
                "+    ) -> Tuple[dict, int]:",
                "         prev_state_ids = await context.get_prev_state_ids()",
                "@@ -164,4 +166,3 @@ class BulkPushRuleEvaluator:",
                "             # not having a power level event is an extreme edge case",
                "-            pl_event = await self.store.get_event(pl_event_id)",
                "-            auth_events = {POWER_KEY: pl_event}",
                "+            auth_events = {POWER_KEY: await self.store.get_event(pl_event_id)}",
                "         else:",
                "@@ -170,4 +171,4 @@ class BulkPushRuleEvaluator:",
                "             )",
                "-            auth_events = await self.store.get_events(auth_events_ids)",
                "-            auth_events = {(e.type, e.state_key): e for e in auth_events.values()}",
                "+            auth_events_dict = await self.store.get_events(auth_events_ids)",
                "+            auth_events = {(e.type, e.state_key): e for e in auth_events_dict.values()}",
                "@@ -179,3 +180,5 @@ class BulkPushRuleEvaluator:",
                "-    async def action_for_event_by_user(self, event, context) -> None:",
                "+    async def action_for_event_by_user(",
                "+        self, event: EventBase, context: EventContext",
                "+    ) -> None:",
                "         \"\"\"Given an event and context, evaluate the push rules, check if the message",
                "@@ -187,3 +190,3 @@ class BulkPushRuleEvaluator:",
                "         rules_by_user = await self._get_rules_for_event(event, context)",
                "-        actions_by_user = {}",
                "+        actions_by_user = {}  # type: Dict[str, List[Union[dict, str]]]",
                "@@ -200,3 +203,3 @@ class BulkPushRuleEvaluator:",
                "-        condition_cache = {}",
                "+        condition_cache = {}  # type: Dict[str, bool]",
                "@@ -251,3 +254,9 @@ class BulkPushRuleEvaluator:",
                "-def _condition_checker(evaluator, conditions, uid, display_name, cache):",
                "+def _condition_checker(",
                "+    evaluator: PushRuleEvaluatorForEvent,",
                "+    conditions: List[dict],",
                "+    uid: str,",
                "+    display_name: str,",
                "+    cache: Dict[str, bool],",
                "+) -> bool:",
                "     for cond in conditions:",
                "@@ -279,3 +288,7 @@ class RulesForRoom:",
                "     def __init__(",
                "-        self, hs, room_id, rules_for_room_cache: LruCache, room_push_rule_cache_metrics",
                "+        self,",
                "+        hs: \"HomeServer\",",
                "+        room_id: str,",
                "+        rules_for_room_cache: LruCache,",
                "+        room_push_rule_cache_metrics: CacheMetric,",
                "     ):",
                "@@ -283,7 +296,7 @@ class RulesForRoom:",
                "         Args:",
                "-            hs (HomeServer)",
                "-            room_id (str)",
                "+            hs: The HomeServer object.",
                "+            room_id: The room ID.",
                "             rules_for_room_cache: The cache object that caches these",
                "                 RoomsForUser objects.",
                "-            room_push_rule_cache_metrics (CacheMetric)",
                "+            room_push_rule_cache_metrics: The metrics object",
                "         \"\"\"",
                "@@ -296,4 +309,6 @@ class RulesForRoom:",
                "-        self.member_map = {}  # event_id -> (user_id, state)",
                "-        self.rules_by_user = {}  # user_id -> rules",
                "+        # event_id -> (user_id, state)",
                "+        self.member_map = {}  # type: Dict[str, Tuple[str, str]]",
                "+        # user_id -> rules",
                "+        self.rules_by_user = {}  # type: Dict[str, List[Dict[str, dict]]]",
                "@@ -317,3 +332,3 @@ class RulesForRoom:",
                "         # them.",
                "-        self.uninteresting_user_set = set()",
                "+        self.uninteresting_user_set = set()  # type: Set[str]",
                "@@ -327,3 +342,5 @@ class RulesForRoom:",
                "-    async def get_rules(self, event, context):",
                "+    async def get_rules(",
                "+        self, event: EventBase, context: EventContext",
                "+    ) -> Dict[str, List[Dict[str, dict]]]:",
                "         \"\"\"Given an event context return the rules for all users who are",
                "@@ -358,2 +375,4 @@ class RulesForRoom:",
                "                 push_rules_delta_state_cache_metric.inc_misses()",
                "+            # Ensure the state IDs exist.",
                "+            assert current_state_ids is not None",
                "@@ -422,4 +441,8 @@ class RulesForRoom:",
                "     async def _update_rules_with_member_event_ids(",
                "-        self, ret_rules_by_user, member_event_ids, state_group, event",
                "-    ):",
                "+        self,",
                "+        ret_rules_by_user: Dict[str, list],",
                "+        member_event_ids: Dict[str, str],",
                "+        state_group: Optional[int],",
                "+        event: EventBase,",
                "+    ) -> None:",
                "         \"\"\"Update the partially filled rules_by_user dict by fetching rules for",
                "@@ -428,5 +451,5 @@ class RulesForRoom:",
                "         Args:",
                "-            ret_rules_by_user (dict): Partiallly filled dict of push rules. Gets",
                "+            ret_rules_by_user: Partially filled dict of push rules. Gets",
                "                 updated with any new rules.",
                "-            member_event_ids (dict): Dict of user id to event id for membership events",
                "+            member_event_ids: Dict of user id to event id for membership events",
                "                 that have happened since the last time we filled rules_by_user",
                "@@ -434,2 +457,3 @@ class RulesForRoom:",
                "                 for. Used when updating the cache.",
                "+            event: The event we are currently computing push rules for.",
                "         \"\"\"",
                "@@ -451,3 +475,3 @@ class RulesForRoom:",
                "-        user_ids = {",
                "+        joined_user_ids = {",
                "             user_id",
                "@@ -457,3 +481,3 @@ class RulesForRoom:",
                "-        logger.debug(\"Joined: %r\", user_ids)",
                "+        logger.debug(\"Joined: %r\", joined_user_ids)",
                "@@ -463,3 +487,3 @@ class RulesForRoom:",
                "         # the room. Therefore we just need to filter for local users here.",
                "-        user_ids = list(filter(self.is_mine_id, user_ids))",
                "+        user_ids = list(filter(self.is_mine_id, joined_user_ids))",
                "@@ -475,3 +499,3 @@ class RulesForRoom:",
                "-    def invalidate_all(self):",
                "+    def invalidate_all(self) -> None:",
                "         # Note: Don't hand this function directly to an invalidation callback",
                "@@ -487,3 +511,3 @@ class RulesForRoom:",
                "-    def update_cache(self, sequence, members, rules_by_user, state_group):",
                "+    def update_cache(self, sequence, members, rules_by_user, state_group) -> None:",
                "         if sequence == self.sequence:",
                "@@ -508,3 +532,3 @@ class _Invalidation:",
                "-    def __call__(self):",
                "+    def __call__(self) -> None:",
                "         rules = self.cache.get(self.room_id, None, update_metrics=False)",
                "diff --git a/synapse/push/clientformat.py b/synapse/push/clientformat.py",
                "index a59b639f1..0cadba761 100644",
                "--- a/synapse/push/clientformat.py",
                "+++ b/synapse/push/clientformat.py",
                "@@ -16,7 +16,9 @@",
                " import copy",
                "+from typing import Any, Dict, List, Optional",
                " from synapse.push.rulekinds import PRIORITY_CLASS_INVERSE_MAP, PRIORITY_CLASS_MAP",
                "+from synapse.types import UserID",
                "-def format_push_rules_for_user(user, ruleslist):",
                "+def format_push_rules_for_user(user: UserID, ruleslist) -> Dict[str, Dict[str, list]]:",
                "     \"\"\"Converts a list of rawrules and a enabled map into nested dictionaries",
                "@@ -27,3 +29,6 @@ def format_push_rules_for_user(user, ruleslist):",
                "-    rules = {\"global\": {}, \"device\": {}}",
                "+    rules = {",
                "+        \"global\": {},",
                "+        \"device\": {},",
                "+    }  # type: Dict[str, Dict[str, List[Dict[str, Any]]]]",
                "@@ -32,4 +37,2 @@ def format_push_rules_for_user(user, ruleslist):",
                "     for r in ruleslist:",
                "-        rulearray = None",
                "-",
                "         template_name = _priority_class_to_template_name(r[\"priority_class\"])",
                "@@ -59,3 +62,3 @@ def format_push_rules_for_user(user, ruleslist):",
                "-def _add_empty_priority_class_arrays(d):",
                "+def _add_empty_priority_class_arrays(d: Dict[str, list]) -> Dict[str, list]:",
                "     for pc in PRIORITY_CLASS_MAP.keys():",
                "@@ -65,3 +68,3 @@ def _add_empty_priority_class_arrays(d):",
                "-def _rule_to_template(rule):",
                "+def _rule_to_template(rule: Dict[str, Any]) -> Optional[Dict[str, Any]]:",
                "     unscoped_rule_id = None",
                "@@ -84,2 +87,6 @@ def _rule_to_template(rule):",
                "         templaterule[\"pattern\"] = thecond[\"pattern\"]",
                "+    else:",
                "+        # This should not be reached unless this function is not kept in sync",
                "+        # with PRIORITY_CLASS_INVERSE_MAP.",
                "+        raise ValueError(\"Unexpected template_name: %s\" % (template_name,))",
                "@@ -92,3 +99,3 @@ def _rule_to_template(rule):",
                "-def _rule_id_from_namespaced(in_rule_id):",
                "+def _rule_id_from_namespaced(in_rule_id: str) -> str:",
                "     return in_rule_id.split(\"/\")[-1]",
                "@@ -96,3 +103,3 @@ def _rule_id_from_namespaced(in_rule_id):",
                "-def _priority_class_to_template_name(pc):",
                "+def _priority_class_to_template_name(pc: int) -> str:",
                "     return PRIORITY_CLASS_INVERSE_MAP[pc]",
                "diff --git a/synapse/push/presentable_names.py b/synapse/push/presentable_names.py",
                "index d8f4a453c..7e50341d7 100644",
                "--- a/synapse/push/presentable_names.py",
                "+++ b/synapse/push/presentable_names.py",
                "@@ -17,4 +17,10 @@ import logging",
                " import re",
                "+from typing import TYPE_CHECKING, Dict, Iterable, Optional",
                " from synapse.api.constants import EventTypes",
                "+from synapse.events import EventBase",
                "+from synapse.types import StateMap",
                "+",
                "+if TYPE_CHECKING:",
                "+    from synapse.storage.databases.main import DataStore",
                "@@ -30,8 +36,8 @@ ALL_ALONE = \"Empty Room\"",
                " async def calculate_room_name(",
                "-    store,",
                "-    room_state_ids,",
                "-    user_id,",
                "-    fallback_to_members=True,",
                "-    fallback_to_single_member=True,",
                "-):",
                "+    store: \"DataStore\",",
                "+    room_state_ids: StateMap[str],",
                "+    user_id: str,",
                "+    fallback_to_members: bool = True,",
                "+    fallback_to_single_member: bool = True,",
                "+) -> Optional[str]:",
                "     \"\"\"",
                "@@ -41,3 +47,4 @@ async def calculate_room_name(",
                "     Args:",
                "-        room_state: Dictionary of the room's state",
                "+        store: The data store to query.",
                "+        room_state_ids: Dictionary of the room's state IDs.",
                "         user_id: The ID of the user to whom the room name is being presented",
                "@@ -46,5 +53,8 @@ async def calculate_room_name(",
                "                              title or aliases.",
                "+        fallback_to_single_member: If False, return None instead of generating a",
                "+            name based on the user who invited this user to the room if the room",
                "+            has no title or aliases.",
                "     Returns:",
                "-        (string or None) A human readable name for the room.",
                "+        A human readable name for the room, if possible.",
                "     \"\"\"",
                "@@ -99,3 +109,3 @@ async def calculate_room_name(",
                "                 else:",
                "-                    return",
                "+                    return None",
                "         else:",
                "@@ -152,8 +162,8 @@ async def calculate_room_name(",
                "     elif len(other_members) == 1 and not fallback_to_single_member:",
                "-        return",
                "-    else:",
                "-        return descriptor_from_member_events(other_members)",
                "+        return None",
                "+",
                "+    return descriptor_from_member_events(other_members)",
                "-def descriptor_from_member_events(member_events):",
                "+def descriptor_from_member_events(member_events: Iterable[EventBase]) -> str:",
                "     \"\"\"Get a description of the room based on the member events.",
                "@@ -161,6 +171,6 @@ def descriptor_from_member_events(member_events):",
                "     Args:",
                "-        member_events (Iterable[FrozenEvent])",
                "+        member_events: The events of a room.",
                "     Returns:",
                "-        str",
                "+        The room description",
                "     \"\"\"",
                "@@ -185,3 +195,3 @@ def descriptor_from_member_events(member_events):",
                "-def name_from_member_event(member_event):",
                "+def name_from_member_event(member_event: EventBase) -> str:",
                "     if (",
                "@@ -195,4 +205,4 @@ def name_from_member_event(member_event):",
                "-def _state_as_two_level_dict(state):",
                "-    ret = {}",
                "+def _state_as_two_level_dict(state: StateMap[str]) -> Dict[str, Dict[str, str]]:",
                "+    ret = {}  # type: Dict[str, Dict[str, str]]",
                "     for k, v in state.items():",
                "@@ -202,3 +212,3 @@ def _state_as_two_level_dict(state):",
                "-def _looks_like_an_alias(string):",
                "+def _looks_like_an_alias(string: str) -> bool:",
                "     return ALIAS_RE.match(string) is not None",
                "diff --git a/synapse/push/push_rule_evaluator.py b/synapse/push/push_rule_evaluator.py",
                "index 2ce9e444a..ba1877adc 100644",
                "--- a/synapse/push/push_rule_evaluator.py",
                "+++ b/synapse/push/push_rule_evaluator.py",
                "@@ -32,3 +32,5 @@ INEQUALITY_EXPR = re.compile(\"^([=<>]*)([0-9]*)$\")",
                "-def _room_member_count(ev, condition, room_member_count):",
                "+def _room_member_count(",
                "+    ev: EventBase, condition: Dict[str, Any], room_member_count: int",
                "+) -> bool:",
                "     return _test_ineq_condition(condition, room_member_count)",
                "@@ -36,3 +38,8 @@ def _room_member_count(ev, condition, room_member_count):",
                "-def _sender_notification_permission(ev, condition, sender_power_level, power_levels):",
                "+def _sender_notification_permission(",
                "+    ev: EventBase,",
                "+    condition: Dict[str, Any],",
                "+    sender_power_level: int,",
                "+    power_levels: Dict[str, Union[int, Dict[str, int]]],",
                "+) -> bool:",
                "     notif_level_key = condition.get(\"key\")",
                "@@ -42,2 +49,3 @@ def _sender_notification_permission(ev, condition, sender_power_level, power_lev",
                "     notif_levels = power_levels.get(\"notifications\", {})",
                "+    assert isinstance(notif_levels, dict)",
                "     room_notif_level = notif_levels.get(notif_level_key, 50)",
                "@@ -47,3 +55,3 @@ def _sender_notification_permission(ev, condition, sender_power_level, power_lev",
                "-def _test_ineq_condition(condition, number):",
                "+def _test_ineq_condition(condition: Dict[str, Any], number: int) -> bool:",
                "     if \"is\" not in condition:",
                "@@ -112,3 +120,3 @@ class PushRuleEvaluatorForEvent:",
                "         sender_power_level: int,",
                "-        power_levels: dict,",
                "+        power_levels: Dict[str, Union[int, Dict[str, int]]],",
                "     ):",
                "@@ -122,3 +130,5 @@ class PushRuleEvaluatorForEvent:",
                "-    def matches(self, condition: dict, user_id: str, display_name: str) -> bool:",
                "+    def matches(",
                "+        self, condition: Dict[str, Any], user_id: str, display_name: str",
                "+    ) -> bool:",
                "         if condition[\"kind\"] == \"event_match\":",
                "@@ -263,3 +273,9 @@ def _re_word_boundary(r: str) -> str:",
                "-def _flatten_dict(d, prefix=[], result=None):",
                "+def _flatten_dict(",
                "+    d: Union[EventBase, dict],",
                "+    prefix: Optional[List[str]] = None,",
                "+    result: Optional[Dict[str, str]] = None,",
                "+) -> Dict[str, str]:",
                "+    if prefix is None:",
                "+        prefix = []",
                "     if result is None:"
            ],
            "changed_files": [
                "changelog.d/8901.misc",
                "mypy.ini",
                "scripts-dev/mypy_synapse_plugin.py",
                "synapse/push/action_generator.py",
                "synapse/push/baserules.py",
                "synapse/push/bulk_push_rule_evaluator.py",
                "synapse/push/clientformat.py",
                "synapse/push/presentable_names.py",
                "synapse/push/push_rule_evaluator.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8901": "Convert internal pusher dicts to attrs #8940"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8901, 8901",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8901",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "36ba73f53d9919c7639d4c7269fabdb1857fb7a1",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607436218,
            "hunks": 29,
            "message": "Simplify the flow for SSO UIA (#8881) * SsoHandler: remove inheritance from BaseHandler * Simplify the flow for SSO UIA We don't need to do all the magic for mapping users when we are doing UIA, so let's factor that out.",
            "diff": [
                "diff --git a/changelog.d/8881.misc b/changelog.d/8881.misc",
                "new file mode 100644",
                "index 000000000..07d3f30fb",
                "--- /dev/null",
                "+++ b/changelog.d/8881.misc",
                "@@ -0,0 +1 @@",
                "+Simplify logic for handling user-interactive-auth via single-sign-on servers.",
                "diff --git a/mypy.ini b/mypy.ini",
                "index 59144be46..12408b8d9 100644",
                "--- a/mypy.ini",
                "+++ b/mypy.ini",
                "@@ -45,2 +45,3 @@ files =",
                "   synapse/handlers/saml_handler.py,",
                "+  synapse/handlers/sso.py,",
                "   synapse/handlers/sync.py,",
                "diff --git a/synapse/handlers/_base.py b/synapse/handlers/_base.py",
                "index bb81c0e81..d29b066a5 100644",
                "--- a/synapse/handlers/_base.py",
                "+++ b/synapse/handlers/_base.py",
                "@@ -34,2 +34,6 @@ class BaseHandler:",
                "     Common base class for the event handlers.",
                "+",
                "+    Deprecated: new code should not use this. Instead, Handler classes should define the",
                "+    fields they actually need. The utility methods should either be factored out to",
                "+    standalone helper functions, or to different Handler classes.",
                "     \"\"\"",
                "diff --git a/synapse/handlers/auth.py b/synapse/handlers/auth.py",
                "index 2e72298e0..afae6d327 100644",
                "--- a/synapse/handlers/auth.py",
                "+++ b/synapse/handlers/auth.py",
                "@@ -38,2 +38,4 @@ import pymacaroons",
                "+from twisted.web.http import Request",
                "+",
                " from synapse.api.constants import LoginType",
                "@@ -1333,3 +1335,3 @@ class AuthHandler(BaseHandler):",
                "     async def complete_sso_ui_auth(",
                "-        self, registered_user_id: str, session_id: str, request: SynapseRequest,",
                "+        self, registered_user_id: str, session_id: str, request: Request,",
                "     ):",
                "@@ -1339,5 +1341,4 @@ class AuthHandler(BaseHandler):",
                "             registered_user_id: The registered user ID to complete SSO login for.",
                "+            session_id: The ID of the user-interactive auth session.",
                "             request: The request to complete.",
                "-            client_redirect_url: The URL to which to redirect the user at the end of the",
                "-                process.",
                "         \"\"\"",
                "@@ -1357,3 +1358,3 @@ class AuthHandler(BaseHandler):",
                "         registered_user_id: str,",
                "-        request: SynapseRequest,",
                "+        request: Request,",
                "         client_redirect_url: str,",
                "@@ -1385,3 +1386,3 @@ class AuthHandler(BaseHandler):",
                "         registered_user_id: str,",
                "-        request: SynapseRequest,",
                "+        request: Request,",
                "         client_redirect_url: str,",
                "diff --git a/synapse/handlers/oidc_handler.py b/synapse/handlers/oidc_handler.py",
                "index c605f7082..f626117f7 100644",
                "--- a/synapse/handlers/oidc_handler.py",
                "+++ b/synapse/handlers/oidc_handler.py",
                "@@ -676,2 +676,17 @@ class OidcHandler(BaseHandler):",
                "+        # first check if we're doing a UIA",
                "+        if ui_auth_session_id:",
                "+            try:",
                "+                remote_user_id = self._remote_id_from_userinfo(userinfo)",
                "+            except Exception as e:",
                "+                logger.exception(\"Could not extract remote user id\")",
                "+                self._sso_handler.render_error(request, \"mapping_error\", str(e))",
                "+                return",
                "+",
                "+            return await self._sso_handler.complete_sso_ui_auth_request(",
                "+                self._auth_provider_id, remote_user_id, ui_auth_session_id, request",
                "+            )",
                "+",
                "+        # otherwise, it's a login",
                "+",
                "         # Pull out the user-agent and IP from the request.",
                "@@ -700,10 +715,5 @@ class OidcHandler(BaseHandler):",
                "         # and finally complete the login",
                "-        if ui_auth_session_id:",
                "-            await self._auth_handler.complete_sso_ui_auth(",
                "-                user_id, ui_auth_session_id, request",
                "-            )",
                "-        else:",
                "-            await self._auth_handler.complete_sso_login(",
                "-                user_id, request, client_redirect_url, extra_attributes",
                "-            )",
                "+        await self._auth_handler.complete_sso_login(",
                "+            user_id, request, client_redirect_url, extra_attributes",
                "+        )",
                "@@ -858,3 +868,3 @@ class OidcHandler(BaseHandler):",
                "         try:",
                "-            remote_user_id = self._user_mapping_provider.get_remote_user_id(userinfo)",
                "+            remote_user_id = self._remote_id_from_userinfo(userinfo)",
                "         except Exception as e:",
                "@@ -863,5 +873,2 @@ class OidcHandler(BaseHandler):",
                "             )",
                "-        # Some OIDC providers use integer IDs, but Synapse expects external IDs",
                "-        # to be strings.",
                "-        remote_user_id = str(remote_user_id)",
                "@@ -935,2 +942,15 @@ class OidcHandler(BaseHandler):",
                "+    def _remote_id_from_userinfo(self, userinfo: UserInfo) -> str:",
                "+        \"\"\"Extract the unique remote id from an OIDC UserInfo block",
                "+",
                "+        Args:",
                "+            userinfo: An object representing the user given by the OIDC provider",
                "+        Returns:",
                "+            remote user id",
                "+        \"\"\"",
                "+        remote_user_id = self._user_mapping_provider.get_remote_user_id(userinfo)",
                "+        # Some OIDC providers use integer IDs, but Synapse expects external IDs",
                "+        # to be strings.",
                "+        return str(remote_user_id)",
                "+",
                "diff --git a/synapse/handlers/saml_handler.py b/synapse/handlers/saml_handler.py",
                "index 76d4169fe..5846f0860 100644",
                "--- a/synapse/handlers/saml_handler.py",
                "+++ b/synapse/handlers/saml_handler.py",
                "@@ -185,2 +185,20 @@ class SamlHandler(BaseHandler):",
                "+        # first check if we're doing a UIA",
                "+        if current_session and current_session.ui_auth_session_id:",
                "+            try:",
                "+                remote_user_id = self._remote_id_from_saml_response(saml2_auth, None)",
                "+            except MappingException as e:",
                "+                logger.exception(\"Failed to extract remote user id from SAML response\")",
                "+                self._sso_handler.render_error(request, \"mapping_error\", str(e))",
                "+                return",
                "+",
                "+            return await self._sso_handler.complete_sso_ui_auth_request(",
                "+                self._auth_provider_id,",
                "+                remote_user_id,",
                "+                current_session.ui_auth_session_id,",
                "+                request,",
                "+            )",
                "+",
                "+        # otherwise, we're handling a login request.",
                "+",
                "         # Ensure that the attributes of the logged in user meet the required",
                "@@ -208,10 +226,3 @@ class SamlHandler(BaseHandler):",
                "-        # Complete the interactive auth session or the login.",
                "-        if current_session and current_session.ui_auth_session_id:",
                "-            await self._auth_handler.complete_sso_ui_auth(",
                "-                user_id, current_session.ui_auth_session_id, request",
                "-            )",
                "-",
                "-        else:",
                "-            await self._auth_handler.complete_sso_login(user_id, request, relay_state)",
                "+        await self._auth_handler.complete_sso_login(user_id, request, relay_state)",
                "@@ -241,4 +252,3 @@ class SamlHandler(BaseHandler):",
                "         \"\"\"",
                "-",
                "-        remote_user_id = self._user_mapping_provider.get_remote_user_id(",
                "+        remote_user_id = self._remote_id_from_saml_response(",
                "             saml2_auth, client_redirect_url",
                "@@ -246,7 +256,2 @@ class SamlHandler(BaseHandler):",
                "-        if not remote_user_id:",
                "-            raise MappingException(",
                "-                \"Failed to extract remote user id from SAML response\"",
                "-            )",
                "-",
                "         async def saml_response_to_remapped_user_attributes(",
                "@@ -306,2 +311,31 @@ class SamlHandler(BaseHandler):",
                "+    def _remote_id_from_saml_response(",
                "+        self,",
                "+        saml2_auth: saml2.response.AuthnResponse,",
                "+        client_redirect_url: Optional[str],",
                "+    ) -> str:",
                "+        \"\"\"Extract the unique remote id from a SAML2 AuthnResponse",
                "+",
                "+        Args:",
                "+            saml2_auth: The parsed SAML2 response.",
                "+            client_redirect_url: The redirect URL passed in by the client.",
                "+        Returns:",
                "+            remote user id",
                "+",
                "+        Raises:",
                "+            MappingException if there was an error extracting the user id",
                "+        \"\"\"",
                "+        # It's not obvious why we need to pass in the redirect URI to the mapping",
                "+        # provider, but we do :/",
                "+        remote_user_id = self._user_mapping_provider.get_remote_user_id(",
                "+            saml2_auth, client_redirect_url",
                "+        )",
                "+",
                "+        if not remote_user_id:",
                "+            raise MappingException(",
                "+                \"Failed to extract remote user id from SAML response\"",
                "+            )",
                "+",
                "+        return remote_user_id",
                "+",
                "     def expire_sessions(self):",
                "diff --git a/synapse/handlers/sso.py b/synapse/handlers/sso.py",
                "index 47ad96f97..e24767b92 100644",
                "--- a/synapse/handlers/sso.py",
                "+++ b/synapse/handlers/sso.py",
                "@@ -19,4 +19,5 @@ import attr",
                "+from twisted.web.http import Request",
                "+",
                " from synapse.api.errors import RedirectException",
                "-from synapse.handlers._base import BaseHandler",
                " from synapse.http.server import respond_with_html",
                "@@ -44,3 +45,3 @@ class UserAttributes:",
                "-class SsoHandler(BaseHandler):",
                "+class SsoHandler:",
                "     # The number of attempts to ask the mapping provider for when generating an MXID.",
                "@@ -49,5 +50,7 @@ class SsoHandler(BaseHandler):",
                "     def __init__(self, hs: \"HomeServer\"):",
                "-        super().__init__(hs)",
                "+        self._store = hs.get_datastore()",
                "+        self._server_name = hs.hostname",
                "         self._registration_handler = hs.get_registration_handler()",
                "         self._error_template = hs.config.sso_error_template",
                "+        self._auth_handler = hs.get_auth_handler()",
                "@@ -97,3 +100,3 @@ class SsoHandler(BaseHandler):",
                "         # Check if we already have a mapping for this user.",
                "-        previously_registered_user_id = await self.store.get_user_by_external_id(",
                "+        previously_registered_user_id = await self._store.get_user_by_external_id(",
                "             auth_provider_id, remote_user_id,",
                "@@ -183,3 +186,3 @@ class SsoHandler(BaseHandler):",
                "                 # Future logins should also match this user ID.",
                "-                await self.store.record_user_external_id(",
                "+                await self._store.record_user_external_id(",
                "                     auth_provider_id, remote_user_id, previously_registered_user_id",
                "@@ -216,4 +219,4 @@ class SsoHandler(BaseHandler):",
                "             # Check if this mxid already exists",
                "-            user_id = UserID(attributes.localpart, self.server_name).to_string()",
                "-            if not await self.store.get_users_by_id_case_insensitive(user_id):",
                "+            user_id = UserID(attributes.localpart, self._server_name).to_string()",
                "+            if not await self._store.get_users_by_id_case_insensitive(user_id):",
                "                 # This mxid is free",
                "@@ -240,3 +243,3 @@ class SsoHandler(BaseHandler):",
                "-        await self.store.record_user_external_id(",
                "+        await self._store.record_user_external_id(",
                "             auth_provider_id, remote_user_id, registered_user_id",
                "@@ -244 +247,41 @@ class SsoHandler(BaseHandler):",
                "         return registered_user_id",
                "+",
                "+    async def complete_sso_ui_auth_request(",
                "+        self,",
                "+        auth_provider_id: str,",
                "+        remote_user_id: str,",
                "+        ui_auth_session_id: str,",
                "+        request: Request,",
                "+    ) -> None:",
                "+        \"\"\"",
                "+        Given an SSO ID, retrieve the user ID for it and complete UIA.",
                "+",
                "+        Note that this requires that the user is mapped in the \"user_external_ids\"",
                "+        table. This will be the case if they have ever logged in via SAML or OIDC in",
                "+        recentish synapse versions, but may not be for older users.",
                "+",
                "+        Args:",
                "+            auth_provider_id: A unique identifier for this SSO provider, e.g.",
                "+                \"oidc\" or \"saml\".",
                "+            remote_user_id: The unique identifier from the SSO provider.",
                "+            ui_auth_session_id: The ID of the user-interactive auth session.",
                "+            request: The request to complete.",
                "+        \"\"\"",
                "+",
                "+        user_id = await self.get_sso_user_by_remote_user_id(",
                "+            auth_provider_id, remote_user_id,",
                "+        )",
                "+",
                "+        if not user_id:",
                "+            logger.warning(",
                "+                \"Remote user %s/%s has not previously logged in here: UIA will fail\",",
                "+                auth_provider_id,",
                "+                remote_user_id,",
                "+            )",
                "+            # Let the UIA flow handle this the same as if they presented creds for a",
                "+            # different user.",
                "+            user_id = \"\"",
                "+",
                "+        await self._auth_handler.complete_sso_ui_auth(",
                "+            user_id, ui_auth_session_id, request",
                "+        )"
            ],
            "changed_files": [
                "changelog.d/8881.misc",
                "mypy.ini",
                "synapse/handlers/_base.py",
                "synapse/handlers/auth.py",
                "synapse/handlers/oidc_handler.py",
                "synapse/handlers/saml_handler.py",
                "synapse/handlers/sso.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8881": "Use the abstract registration code for CAS #8856"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8881, 8881",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8881",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "025fa06fc743bda7c4769b19991c40a1fb5d12ba",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607436188,
            "hunks": 5,
            "message": "Clarify config template comments (#8891)",
            "diff": [
                "diff --git a/changelog.d/8891.doc b/changelog.d/8891.doc",
                "new file mode 100644",
                "index 000000000..c3947fe7c",
                "--- /dev/null",
                "+++ b/changelog.d/8891.doc",
                "@@ -0,0 +1 @@",
                "+Clarify comments around template directories in `sample_config.yaml`.",
                "diff --git a/docs/sample_config.yaml b/docs/sample_config.yaml",
                "index 8712c580c..68c8f4f0e 100644",
                "--- a/docs/sample_config.yaml",
                "+++ b/docs/sample_config.yaml",
                "@@ -1881,7 +1881,4 @@ sso:",
                "     # Directory in which Synapse will try to find the template files below.",
                "-    # If not set, default templates from within the Synapse package will be used.",
                "-    #",
                "-    # DO NOT UNCOMMENT THIS SETTING unless you want to customise the templates.",
                "-    # If you *do* uncomment it, you will need to make sure that all the templates",
                "-    # below are in the directory.",
                "+    # If not set, or the files named below are not found within the template",
                "+    # directory, default templates from within the Synapse package will be used.",
                "     #",
                "@@ -2115,5 +2112,4 @@ email:",
                "   # Directory in which Synapse will try to find the template files below.",
                "-  # If not set, default templates from within the Synapse package will be used.",
                "-  #",
                "-  # Do not uncomment this setting unless you want to customise the templates.",
                "+  # If not set, or the files named below are not found within the template",
                "+  # directory, default templates from within the Synapse package will be used.",
                "   #",
                "diff --git a/synapse/config/emailconfig.py b/synapse/config/emailconfig.py",
                "index cceffbfee..7c8b64d84 100644",
                "--- a/synapse/config/emailconfig.py",
                "+++ b/synapse/config/emailconfig.py",
                "@@ -392,5 +392,4 @@ class EmailConfig(Config):",
                "           # Directory in which Synapse will try to find the template files below.",
                "-          # If not set, default templates from within the Synapse package will be used.",
                "-          #",
                "-          # Do not uncomment this setting unless you want to customise the templates.",
                "+          # If not set, or the files named below are not found within the template",
                "+          # directory, default templates from within the Synapse package will be used.",
                "           #",
                "diff --git a/synapse/config/sso.py b/synapse/config/sso.py",
                "index 442767616..93bbd4093 100644",
                "--- a/synapse/config/sso.py",
                "+++ b/synapse/config/sso.py",
                "@@ -95,7 +95,4 @@ class SSOConfig(Config):",
                "             # Directory in which Synapse will try to find the template files below.",
                "-            # If not set, default templates from within the Synapse package will be used.",
                "-            #",
                "-            # DO NOT UNCOMMENT THIS SETTING unless you want to customise the templates.",
                "-            # If you *do* uncomment it, you will need to make sure that all the templates",
                "-            # below are in the directory.",
                "+            # If not set, or the files named below are not found within the template",
                "+            # directory, default templates from within the Synapse package will be used.",
                "             #"
            ],
            "changed_files": [
                "changelog.d/8891.doc",
                "docs/sample_config.yaml",
                "synapse/config/emailconfig.py",
                "synapse/config/sso.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8891": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8891, 8891",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8891",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e1b8e37f936b115e2164d272333c9b15342e6f88",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608148913,
            "hunks": 42,
            "message": "Push login completion down into SsoHandler (#8941) This is another part of my work towards fixing #8876. It moves some of the logic currently in the SAML and OIDC handlers - in particular the call to `AuthHandler.complete_sso_login` down into the `SsoHandler`.",
            "diff": [
                "diff --git a/changelog.d/8941.feature b/changelog.d/8941.feature",
                "new file mode 100644",
                "index 000000000..d450ef499",
                "--- /dev/null",
                "+++ b/changelog.d/8941.feature",
                "@@ -0,0 +1 @@",
                "+Add support for allowing users to pick their own user ID during a single-sign-on login.",
                "diff --git a/synapse/handlers/oidc_handler.py b/synapse/handlers/oidc_handler.py",
                "index f626117f7..cbd11a138 100644",
                "--- a/synapse/handlers/oidc_handler.py",
                "+++ b/synapse/handlers/oidc_handler.py",
                "@@ -117,4 +117,2 @@ class OidcHandler(BaseHandler):",
                "         self._http_client = hs.get_proxied_http_client()",
                "-        self._auth_handler = hs.get_auth_handler()",
                "-        self._registration_handler = hs.get_registration_handler()",
                "         self._server_name = hs.config.server_name  # type: str",
                "@@ -691,10 +689,6 @@ class OidcHandler(BaseHandler):",
                "-        # Pull out the user-agent and IP from the request.",
                "-        user_agent = request.get_user_agent(\"\")",
                "-        ip_address = self.hs.get_ip_from_request(request)",
                "-",
                "         # Call the mapper to register/login the user",
                "         try:",
                "-            user_id = await self._map_userinfo_to_user(",
                "-                userinfo, token, user_agent, ip_address",
                "+            await self._complete_oidc_login(",
                "+                userinfo, token, request, client_redirect_url",
                "             )",
                "@@ -703,17 +697,2 @@ class OidcHandler(BaseHandler):",
                "             self._sso_handler.render_error(request, \"mapping_error\", str(e))",
                "-            return",
                "-",
                "-        # Mapping providers might not have get_extra_attributes: only call this",
                "-        # method if it exists.",
                "-        extra_attributes = None",
                "-        get_extra_attributes = getattr(",
                "-            self._user_mapping_provider, \"get_extra_attributes\", None",
                "-        )",
                "-        if get_extra_attributes:",
                "-            extra_attributes = await get_extra_attributes(userinfo, token)",
                "-",
                "-        # and finally complete the login",
                "-        await self._auth_handler.complete_sso_login(",
                "-            user_id, request, client_redirect_url, extra_attributes",
                "-        )",
                "@@ -840,6 +819,10 @@ class OidcHandler(BaseHandler):",
                "-    async def _map_userinfo_to_user(",
                "-        self, userinfo: UserInfo, token: Token, user_agent: str, ip_address: str",
                "-    ) -> str:",
                "-        \"\"\"Maps a UserInfo object to a mxid.",
                "+    async def _complete_oidc_login(",
                "+        self,",
                "+        userinfo: UserInfo,",
                "+        token: Token,",
                "+        request: SynapseRequest,",
                "+        client_redirect_url: str,",
                "+    ) -> None:",
                "+        \"\"\"Given a UserInfo response, complete the login flow",
                "@@ -855,2 +838,4 @@ class OidcHandler(BaseHandler):",
                "+        Otherwise, render a redirect back to the client_redirect_url with a loginToken.",
                "+",
                "         Args:",
                "@@ -858,4 +843,4 @@ class OidcHandler(BaseHandler):",
                "             token: a dict with the tokens obtained from the provider",
                "-            user_agent: The user agent of the client making the request.",
                "-            ip_address: The IP address of the client making the request.",
                "+            request: The request to respond to",
                "+            client_redirect_url: The redirect URL passed in by the client.",
                "@@ -863,5 +848,2 @@ class OidcHandler(BaseHandler):",
                "             MappingException: if there was an error while mapping some properties",
                "-",
                "-        Returns:",
                "-            The mxid of the user",
                "         \"\"\"",
                "@@ -933,9 +915,19 @@ class OidcHandler(BaseHandler):",
                "-        return await self._sso_handler.get_mxid_from_sso(",
                "+        # Mapping providers might not have get_extra_attributes: only call this",
                "+        # method if it exists.",
                "+        extra_attributes = None",
                "+        get_extra_attributes = getattr(",
                "+            self._user_mapping_provider, \"get_extra_attributes\", None",
                "+        )",
                "+        if get_extra_attributes:",
                "+            extra_attributes = await get_extra_attributes(userinfo, token)",
                "+",
                "+        await self._sso_handler.complete_sso_login_request(",
                "             self._auth_provider_id,",
                "             remote_user_id,",
                "-            user_agent,",
                "-            ip_address,",
                "+            request,",
                "+            client_redirect_url,",
                "             oidc_response_to_user_attributes,",
                "             grandfather_existing_users,",
                "+            extra_attributes,",
                "         )",
                "diff --git a/synapse/handlers/saml_handler.py b/synapse/handlers/saml_handler.py",
                "index 6001fe3e2..5fa7ab3f8 100644",
                "--- a/synapse/handlers/saml_handler.py",
                "+++ b/synapse/handlers/saml_handler.py",
                "@@ -60,4 +60,2 @@ class SamlHandler(BaseHandler):",
                "         self._saml_idp_entityid = hs.config.saml2_idp_entityid",
                "-        self._auth_handler = hs.get_auth_handler()",
                "-        self._registration_handler = hs.get_registration_handler()",
                "@@ -231,11 +229,5 @@ class SamlHandler(BaseHandler):",
                "-        # Pull out the user-agent and IP from the request.",
                "-        user_agent = request.get_user_agent(\"\")",
                "-        ip_address = self.hs.get_ip_from_request(request)",
                "-",
                "         # Call the mapper to register/login the user",
                "         try:",
                "-            user_id = await self._map_saml_response_to_user(",
                "-                saml2_auth, relay_state, user_agent, ip_address",
                "-            )",
                "+            await self._complete_saml_login(saml2_auth, request, relay_state)",
                "         except MappingException as e:",
                "@@ -243,15 +235,14 @@ class SamlHandler(BaseHandler):",
                "             self._sso_handler.render_error(request, \"mapping_error\", str(e))",
                "-            return",
                "-        await self._auth_handler.complete_sso_login(user_id, request, relay_state)",
                "-",
                "-    async def _map_saml_response_to_user(",
                "+    async def _complete_saml_login(",
                "         self,",
                "         saml2_auth: saml2.response.AuthnResponse,",
                "+        request: SynapseRequest,",
                "         client_redirect_url: str,",
                "-        user_agent: str,",
                "-        ip_address: str,",
                "-    ) -> str:",
                "+    ) -> None:",
                "         \"\"\"",
                "-        Given a SAML response, retrieve the user ID for it and possibly register the user.",
                "+        Given a SAML response, complete the login flow",
                "+",
                "+        Retrieves the remote user ID, registers the user if necessary, and serves",
                "+        a redirect back to the client with a login-token.",
                "@@ -259,8 +250,4 @@ class SamlHandler(BaseHandler):",
                "             saml2_auth: The parsed SAML2 response.",
                "+            request: The request to respond to",
                "             client_redirect_url: The redirect URL passed in by the client.",
                "-            user_agent: The user agent of the client making the request.",
                "-            ip_address: The IP address of the client making the request.",
                "-",
                "-        Returns:",
                "-             The user ID associated with this response.",
                "@@ -320,7 +307,7 @@ class SamlHandler(BaseHandler):",
                "-        return await self._sso_handler.get_mxid_from_sso(",
                "+        await self._sso_handler.complete_sso_login_request(",
                "             self._auth_provider_id,",
                "             remote_user_id,",
                "-            user_agent,",
                "-            ip_address,",
                "+            request,",
                "+            client_redirect_url,",
                "             saml_response_to_remapped_user_attributes,",
                "diff --git a/synapse/handlers/sso.py b/synapse/handlers/sso.py",
                "index 112a7d5b2..f054b66a5 100644",
                "--- a/synapse/handlers/sso.py",
                "+++ b/synapse/handlers/sso.py",
                "@@ -23,3 +23,4 @@ from synapse.api.errors import RedirectException",
                " from synapse.http.server import respond_with_html",
                "-from synapse.types import UserID, contains_invalid_mxid_characters",
                "+from synapse.http.site import SynapseRequest",
                "+from synapse.types import JsonDict, UserID, contains_invalid_mxid_characters",
                " from synapse.util.async_helpers import Linearizer",
                "@@ -121,3 +122,3 @@ class SsoHandler:",
                "-    async def get_mxid_from_sso(",
                "+    async def complete_sso_login_request(",
                "         self,",
                "@@ -125,7 +126,8 @@ class SsoHandler:",
                "         remote_user_id: str,",
                "-        user_agent: str,",
                "-        ip_address: str,",
                "+        request: SynapseRequest,",
                "+        client_redirect_url: str,",
                "         sso_to_matrix_id_mapper: Callable[[int], Awaitable[UserAttributes]],",
                "         grandfather_existing_users: Optional[Callable[[], Awaitable[Optional[str]]]],",
                "-    ) -> str:",
                "+        extra_login_attributes: Optional[JsonDict] = None,",
                "+    ) -> None:",
                "         \"\"\"",
                "@@ -148,2 +150,4 @@ class SsoHandler:",
                "+        Finally, we generate a redirect to the supplied redirect uri, with a login token",
                "+",
                "         Args:",
                "@@ -151,5 +155,9 @@ class SsoHandler:",
                "                 \"oidc\" or \"saml\".",
                "+",
                "             remote_user_id: The unique identifier from the SSO provider.",
                "-            user_agent: The user agent of the client making the request.",
                "-            ip_address: The IP address of the client making the request.",
                "+",
                "+            request: The request to respond to",
                "+",
                "+            client_redirect_url: The redirect URL passed in by the client.",
                "+",
                "             sso_to_matrix_id_mapper: A callable to generate the user attributes.",
                "@@ -165,2 +173,3 @@ class SsoHandler:",
                "                         to prompt the user for more information).",
                "+",
                "             grandfather_existing_users: A callable which can return an previously",
                "@@ -169,4 +178,4 @@ class SsoHandler:",
                "-        Returns:",
                "-             The user ID associated with the SSO response.",
                "+            extra_login_attributes: An optional dictionary of extra",
                "+                attributes to be provided to the client in the login response.",
                "@@ -183,24 +192,29 @@ class SsoHandler:",
                "             # first of all, check if we already have a mapping for this user",
                "-            previously_registered_user_id = await self.get_sso_user_by_remote_user_id(",
                "+            user_id = await self.get_sso_user_by_remote_user_id(",
                "                 auth_provider_id, remote_user_id,",
                "             )",
                "-            if previously_registered_user_id:",
                "-                return previously_registered_user_id",
                "             # Check for grandfathering of users.",
                "-            if grandfather_existing_users:",
                "-                previously_registered_user_id = await grandfather_existing_users()",
                "-                if previously_registered_user_id:",
                "+            if not user_id and grandfather_existing_users:",
                "+                user_id = await grandfather_existing_users()",
                "+                if user_id:",
                "                     # Future logins should also match this user ID.",
                "                     await self._store.record_user_external_id(",
                "-                        auth_provider_id, remote_user_id, previously_registered_user_id",
                "+                        auth_provider_id, remote_user_id, user_id",
                "                     )",
                "-                    return previously_registered_user_id",
                "             # Otherwise, generate a new user.",
                "-            attributes = await self._call_attribute_mapper(sso_to_matrix_id_mapper)",
                "-            user_id = await self._register_mapped_user(",
                "-                attributes, auth_provider_id, remote_user_id, user_agent, ip_address,",
                "-            )",
                "-            return user_id",
                "+            if not user_id:",
                "+                attributes = await self._call_attribute_mapper(sso_to_matrix_id_mapper)",
                "+                user_id = await self._register_mapped_user(",
                "+                    attributes,",
                "+                    auth_provider_id,",
                "+                    remote_user_id,",
                "+                    request.get_user_agent(\"\"),",
                "+                    request.getClientIP(),",
                "+                )",
                "+",
                "+        await self._auth_handler.complete_sso_login(",
                "+            user_id, request, client_redirect_url, extra_login_attributes",
                "+        )",
                "diff --git a/tests/handlers/test_saml.py b/tests/handlers/test_saml.py",
                "index 69927cf6b..548038214 100644",
                "--- a/tests/handlers/test_saml.py",
                "+++ b/tests/handlers/test_saml.py",
                "@@ -133,3 +133,3 @@ class SamlHandlerTestCase(HomeserverTestCase):",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "-            \"@test_user:test\", request, \"redirect_uri\"",
                "+            \"@test_user:test\", request, \"redirect_uri\", None",
                "         )",
                "@@ -159,3 +159,3 @@ class SamlHandlerTestCase(HomeserverTestCase):",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "-            \"@test_user:test\", request, \"\"",
                "+            \"@test_user:test\", request, \"\", None",
                "         )",
                "@@ -168,3 +168,3 @@ class SamlHandlerTestCase(HomeserverTestCase):",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "-            \"@test_user:test\", request, \"\"",
                "+            \"@test_user:test\", request, \"\", None",
                "         )",
                "@@ -216,3 +216,3 @@ class SamlHandlerTestCase(HomeserverTestCase):",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "-            \"@test_user1:test\", request, \"\"",
                "+            \"@test_user1:test\", request, \"\", None",
                "         )"
            ],
            "changed_files": [
                "changelog.d/8941.feature",
                "synapse/handlers/oidc_handler.py",
                "synapse/handlers/saml_handler.py",
                "synapse/handlers/sso.py",
                "tests/handlers/test_saml.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8941": "Implement a username picker for synapse #8942",
                "8876": "Support multiple SSO identity providers during login/UIA flow #8927 Push login completion down into SsoHandler #8941 Implement a username picker for synapse #8942"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8941, 8941",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8941, 8876",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c9c1c9d82f190abc2f1254f75fe42bf29eff08e1",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608220000,
            "hunks": 5,
            "message": "Fix `UsersListTestCase` (#8964)",
            "diff": [
                "diff --git a/changelog.d/8964.bugfix b/changelog.d/8964.bugfix",
                "new file mode 100644",
                "index 000000000..295933d6c",
                "--- /dev/null",
                "+++ b/changelog.d/8964.bugfix",
                "@@ -0,0 +1 @@",
                "+Fix a bug where deactivated users appeared in the user directory when their profile information was updated.",
                "diff --git a/tests/rest/admin/test_user.py b/tests/rest/admin/test_user.py",
                "index 9d6ef0251..9b2e4765f 100644",
                "--- a/tests/rest/admin/test_user.py",
                "+++ b/tests/rest/admin/test_user.py",
                "@@ -491,5 +491,3 @@ class UsersListTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=other_user_token,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=other_user_token)",
                "@@ -542,3 +540,3 @@ class UsersListTestCase(unittest.HomeserverTestCase):",
                "             url = self.url + \"?%s=%s\" % (search_field, search_term,)",
                "-            request, channel = self.make_request(",
                "+            channel = self.make_request(",
                "                 \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "@@ -1028,3 +1026,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -1046,3 +1044,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\","
            ],
            "changed_files": [
                "changelog.d/8964.bugfix",
                "tests/rest/admin/test_user.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8964": "Clean up tox.ini #8963"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8964, 8964",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8964",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "dc016c66ae228fc6496de35928ea3096cba80267",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607619629,
            "hunks": 3,
            "message": "Don't publish `latest` docker image until all archs are built (#8909)",
            "diff": [
                "diff --git a/.circleci/config.yml b/.circleci/config.yml",
                "index 088da5573..375a7f7b0 100644",
                "--- a/.circleci/config.yml",
                "+++ b/.circleci/config.yml",
                "@@ -9,2 +9,4 @@ jobs:",
                "       - run: docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD",
                "+      # for release builds, we want to get the amd64 image out asap, so first",
                "+      # we do an amd64-only build, before following up with a multiarch build.",
                "       - docker_build:",
                "@@ -23,5 +25,4 @@ jobs:",
                "       - run: docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD",
                "-      - docker_build:",
                "-          tag: -t matrixdotorg/synapse:latest",
                "-          platforms: linux/amd64",
                "+      # for `latest`, we don't want the arm images to disappear, so don't update the tag",
                "+      # until all of the platforms are built.",
                "       - docker_build:",
                "diff --git a/changelog.d/8909.misc b/changelog.d/8909.misc",
                "new file mode 100644",
                "index 000000000..b45972f0f",
                "--- /dev/null",
                "+++ b/changelog.d/8909.misc",
                "@@ -0,0 +1 @@",
                "+Don't publish `latest` docker image until all archs are built."
            ],
            "changed_files": [
                ".circleci/config.yml",
                "changelog.d/8909.misc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8909": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8909, 8909",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8909",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "70586aa63eaf129505324976fb092cb3ad327590",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608284958,
            "hunks": 18,
            "message": "Try and drop stale extremities. (#8929) If we see stale extremities while persisting events, and notice that they don't change the result of state resolution, we drop them.",
            "diff": [
                "diff --git a/changelog.d/8929.misc b/changelog.d/8929.misc",
                "new file mode 100644",
                "index 000000000..157018b6a",
                "--- /dev/null",
                "+++ b/changelog.d/8929.misc",
                "@@ -0,0 +1 @@",
                "+Automatically drop stale forward-extremities under some specific conditions.",
                "diff --git a/synapse/api/constants.py b/synapse/api/constants.py",
                "index 1932df83b..565a8cd76 100644",
                "--- a/synapse/api/constants.py",
                "+++ b/synapse/api/constants.py",
                "@@ -97,2 +97,4 @@ class EventTypes:",
                "+    Dummy = \"org.matrix.dummy_event\"",
                "+",
                "diff --git a/synapse/handlers/message.py b/synapse/handlers/message.py",
                "index 2b8aa9443..9dfeab09c 100644",
                "--- a/synapse/handlers/message.py",
                "+++ b/synapse/handlers/message.py",
                "@@ -1263,3 +1263,3 @@ class EventCreationHandler:",
                "                     {",
                "-                        \"type\": \"org.matrix.dummy_event\",",
                "+                        \"type\": EventTypes.Dummy,",
                "                         \"content\": {},",
                "diff --git a/synapse/storage/persist_events.py b/synapse/storage/persist_events.py",
                "index 70e636b0b..61fc49c69 100644",
                "--- a/synapse/storage/persist_events.py",
                "+++ b/synapse/storage/persist_events.py",
                "@@ -33,3 +33,10 @@ from synapse.storage.databases import Databases",
                " from synapse.storage.databases.main.events import DeltaState",
                "-from synapse.types import Collection, PersistedEventPosition, RoomStreamToken, StateMap",
                "+from synapse.storage.databases.main.events_worker import EventRedactBehaviour",
                "+from synapse.types import (",
                "+    Collection,",
                "+    PersistedEventPosition,",
                "+    RoomStreamToken,",
                "+    StateMap,",
                "+    get_domain_from_id,",
                "+)",
                " from synapse.util.async_helpers import ObservableDeferred",
                "@@ -70,2 +77,17 @@ stale_forward_extremities_counter = Histogram(",
                "+state_resolutions_during_persistence = Counter(",
                "+    \"synapse_storage_events_state_resolutions_during_persistence\",",
                "+    \"Number of times we had to do state res to calculate new current state\",",
                "+)",
                "+",
                "+potential_times_prune_extremities = Counter(",
                "+    \"synapse_storage_events_potential_times_prune_extremities\",",
                "+    \"Number of times we might be able to prune extremities\",",
                "+)",
                "+",
                "+times_pruned_extremities = Counter(",
                "+    \"synapse_storage_events_times_pruned_extremities\",",
                "+    \"Number of times we were actually be able to prune extremities\",",
                "+)",
                "+",
                "@@ -456,3 +478,11 @@ class EventsPersistenceStorage:",
                "                             )",
                "-                            current_state, delta_ids = res",
                "+                            current_state, delta_ids, new_latest_event_ids = res",
                "+",
                "+                            # there should always be at least one forward extremity.",
                "+                            # (except during the initial persistence of the send_join",
                "+                            # results, in which case there will be no existing",
                "+                            # extremities, so we'll `continue` above and skip this bit.)",
                "+                            assert new_latest_event_ids, \"No forward extremities left!\"",
                "+",
                "+                            new_forward_extremeties[room_id] = new_latest_event_ids",
                "@@ -575,5 +605,5 @@ class EventsPersistenceStorage:",
                "         events_context: List[Tuple[EventBase, EventContext]],",
                "-        old_latest_event_ids: Iterable[str],",
                "-        new_latest_event_ids: Iterable[str],",
                "-    ) -> Tuple[Optional[StateMap[str]], Optional[StateMap[str]]]:",
                "+        old_latest_event_ids: Set[str],",
                "+        new_latest_event_ids: Set[str],",
                "+    ) -> Tuple[Optional[StateMap[str]], Optional[StateMap[str]], Set[str]]:",
                "         \"\"\"Calculate the current state dict after adding some new events to",
                "@@ -582,12 +612,12 @@ class EventsPersistenceStorage:",
                "         Args:",
                "-            room_id (str):",
                "+            room_id:",
                "                 room to which the events are being added. Used for logging etc",
                "-            events_context (list[(EventBase, EventContext)]):",
                "+            events_context:",
                "                 events and contexts which are being added to the room",
                "-            old_latest_event_ids (iterable[str]):",
                "+            old_latest_event_ids:",
                "                 the old forward extremities for the room.",
                "-            new_latest_event_ids (iterable[str]):",
                "+            new_latest_event_ids :",
                "                 the new forward extremities for the room.",
                "@@ -595,5 +625,11 @@ class EventsPersistenceStorage:",
                "         Returns:",
                "-            Returns a tuple of two state maps, the first being the full new current",
                "-            state and the second being the delta to the existing current state.",
                "-            If both are None then there has been no change.",
                "+            Returns a tuple of two state maps and a set of new forward",
                "+            extremities.",
                "+",
                "+            The first state map is the full new current state and the second",
                "+            is the delta to the existing current state. If both are None then",
                "+            there has been no change.",
                "+",
                "+            The function may prune some old entries from the set of new",
                "+            forward extremities if it's safe to do so.",
                "@@ -674,3 +710,3 @@ class EventsPersistenceStorage:",
                "         if old_state_groups == new_state_groups:",
                "-            return None, None",
                "+            return None, None, new_latest_event_ids",
                "@@ -691,3 +727,3 @@ class EventsPersistenceStorage:",
                "                 new_state = state_groups_map.get(new_state_group)",
                "-                return new_state, delta_ids",
                "+                return new_state, delta_ids, new_latest_event_ids",
                "@@ -703,3 +739,3 @@ class EventsPersistenceStorage:",
                "             # state is.",
                "-            return state_groups_map[new_state_groups.pop()], None",
                "+            return state_groups_map[new_state_groups.pop()], None, new_latest_event_ids",
                "@@ -736,3 +772,135 @@ class EventsPersistenceStorage:",
                "-        return res.state, None",
                "+        state_resolutions_during_persistence.inc()",
                "+",
                "+        # If the returned state matches the state group of one of the new",
                "+        # forward extremities then we check if we are able to prune some state",
                "+        # extremities.",
                "+        if res.state_group and res.state_group in new_state_groups:",
                "+            new_latest_event_ids = await self._prune_extremities(",
                "+                room_id,",
                "+                new_latest_event_ids,",
                "+                res.state_group,",
                "+                event_id_to_state_group,",
                "+                events_context,",
                "+            )",
                "+",
                "+        return res.state, None, new_latest_event_ids",
                "+",
                "+    async def _prune_extremities(",
                "+        self,",
                "+        room_id: str,",
                "+        new_latest_event_ids: Set[str],",
                "+        resolved_state_group: int,",
                "+        event_id_to_state_group: Dict[str, int],",
                "+        events_context: List[Tuple[EventBase, EventContext]],",
                "+    ) -> Set[str]:",
                "+        \"\"\"See if we can prune any of the extremities after calculating the",
                "+        resolved state.",
                "+        \"\"\"",
                "+        potential_times_prune_extremities.inc()",
                "+",
                "+        # We keep all the extremities that have the same state group, and",
                "+        # see if we can drop the others.",
                "+        new_new_extrems = {",
                "+            e",
                "+            for e in new_latest_event_ids",
                "+            if event_id_to_state_group[e] == resolved_state_group",
                "+        }",
                "+",
                "+        dropped_extrems = set(new_latest_event_ids) - new_new_extrems",
                "+",
                "+        logger.debug(\"Might drop extremities: %s\", dropped_extrems)",
                "+",
                "+        # We only drop events from the extremities list if:",
                "+        #   1. we're not currently persisting them;",
                "+        #   2. they're not our own events (or are dummy events); and",
                "+        #   3. they're either:",
                "+        #       1. over N hours old and more than N events ago (we use depth to",
                "+        #          calculate); or",
                "+        #       2. we are persisting an event from the same domain and more than",
                "+        #          M events ago.",
                "+        #",
                "+        # The idea is that we don't want to drop events that are \"legitimate\"",
                "+        # extremities (that we would want to include as prev events), only",
                "+        # \"stuck\" extremities that are e.g. due to a gap in the graph.",
                "+        #",
                "+        # Note that we either drop all of them or none of them. If we only drop",
                "+        # some of the events we don't know if state res would come to the same",
                "+        # conclusion.",
                "+",
                "+        for ev, _ in events_context:",
                "+            if ev.event_id in dropped_extrems:",
                "+                logger.debug(",
                "+                    \"Not dropping extremities: %s is being persisted\", ev.event_id",
                "+                )",
                "+                return new_latest_event_ids",
                "+",
                "+        dropped_events = await self.main_store.get_events(",
                "+            dropped_extrems,",
                "+            allow_rejected=True,",
                "+            redact_behaviour=EventRedactBehaviour.AS_IS,",
                "+        )",
                "+",
                "+        new_senders = {get_domain_from_id(e.sender) for e, _ in events_context}",
                "+",
                "+        one_day_ago = self._clock.time_msec() - 24 * 60 * 60 * 1000",
                "+        current_depth = max(e.depth for e, _ in events_context)",
                "+        for event in dropped_events.values():",
                "+            # If the event is a local dummy event then we should check it",
                "+            # doesn't reference any local events, as we want to reference those",
                "+            # if we send any new events.",
                "+            #",
                "+            # Note we do this recursively to handle the case where a dummy event",
                "+            # references a dummy event that only references remote events.",
                "+            #",
                "+            # Ideally we'd figure out a way of still being able to drop old",
                "+            # dummy events that reference local events, but this is good enough",
                "+            # as a first cut.",
                "+            events_to_check = [event]",
                "+            while events_to_check:",
                "+                new_events = set()",
                "+                for event_to_check in events_to_check:",
                "+                    if self.is_mine_id(event_to_check.sender):",
                "+                        if event_to_check.type != EventTypes.Dummy:",
                "+                            logger.debug(\"Not dropping own event\")",
                "+                            return new_latest_event_ids",
                "+                        new_events.update(event_to_check.prev_event_ids())",
                "+",
                "+                prev_events = await self.main_store.get_events(",
                "+                    new_events,",
                "+                    allow_rejected=True,",
                "+                    redact_behaviour=EventRedactBehaviour.AS_IS,",
                "+                )",
                "+                events_to_check = prev_events.values()",
                "+",
                "+            if (",
                "+                event.origin_server_ts < one_day_ago",
                "+                and event.depth < current_depth - 100",
                "+            ):",
                "+                continue",
                "+",
                "+            # We can be less conservative about dropping extremities from the",
                "+            # same domain, though we do want to wait a little bit (otherwise",
                "+            # we'll immediately remove all extremities from a given server).",
                "+            if (",
                "+                get_domain_from_id(event.sender) in new_senders",
                "+                and event.depth < current_depth - 20",
                "+            ):",
                "+                continue",
                "+",
                "+            logger.debug(",
                "+                \"Not dropping as too new and not in new_senders: %s\", new_senders,",
                "+            )",
                "+",
                "+            return new_latest_event_ids",
                "+",
                "+        times_pruned_extremities.inc()",
                "+",
                "+        logger.info(",
                "+            \"Pruning forward extremities in room %s: from %s -> %s\",",
                "+            room_id,",
                "+            new_latest_event_ids,",
                "+            new_new_extrems,",
                "+        )",
                "+        return new_new_extrems",
                "diff --git a/synapse/visibility.py b/synapse/visibility.py",
                "index f2836ba9f..ec50e7e97 100644",
                "--- a/synapse/visibility.py",
                "+++ b/synapse/visibility.py",
                "@@ -127,3 +127,3 @@ async def filter_events_for_client(",
                "         if filter_send_to_client:",
                "-            if event.type == \"org.matrix.dummy_event\":",
                "+            if event.type == EventTypes.Dummy:",
                "                 return None",
                "diff --git a/tests/storage/test_events.py b/tests/storage/test_events.py",
                "new file mode 100644",
                "index 000000000..71210ce60",
                "--- /dev/null",
                "+++ b/tests/storage/test_events.py",
                "@@ -0,0 +1,334 @@",
                "+# -*- coding: utf-8 -*-",
                "+# Copyright 2020 The Matrix.org Foundation C.I.C.",
                "+#",
                "+# Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+# you may not use this file except in compliance with the License.",
                "+# You may obtain a copy of the License at",
                "+#",
                "+#     http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing, software",
                "+# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+# See the License for the specific language governing permissions and",
                "+# limitations under the License.",
                "+",
                "+",
                "+from synapse.api.constants import EventTypes, Membership",
                "+from synapse.api.room_versions import RoomVersions",
                "+from synapse.federation.federation_base import event_from_pdu_json",
                "+from synapse.rest import admin",
                "+from synapse.rest.client.v1 import login, room",
                "+",
                "+from tests.unittest import HomeserverTestCase",
                "+",
                "+",
                "+class ExtremPruneTestCase(HomeserverTestCase):",
                "+    servlets = [",
                "+        admin.register_servlets,",
                "+        room.register_servlets,",
                "+        login.register_servlets,",
                "+    ]",
                "+",
                "+    def prepare(self, reactor, clock, homeserver):",
                "+        self.state = self.hs.get_state_handler()",
                "+        self.persistence = self.hs.get_storage().persistence",
                "+        self.store = self.hs.get_datastore()",
                "+",
                "+        self.register_user(\"user\", \"pass\")",
                "+        self.token = self.login(\"user\", \"pass\")",
                "+",
                "+        self.room_id = self.helper.create_room_as(",
                "+            \"user\", room_version=RoomVersions.V6.identifier, tok=self.token",
                "+        )",
                "+",
                "+        body = self.helper.send(self.room_id, body=\"Test\", tok=self.token)",
                "+        local_message_event_id = body[\"event_id\"]",
                "+",
                "+        # Fudge a remote event and persist it. This will be the extremity before",
                "+        # the gap.",
                "+        self.remote_event_1 = event_from_pdu_json(",
                "+            {",
                "+                \"type\": EventTypes.Message,",
                "+                \"state_key\": \"@user:other\",",
                "+                \"content\": {},",
                "+                \"room_id\": self.room_id,",
                "+                \"sender\": \"@user:other\",",
                "+                \"depth\": 5,",
                "+                \"prev_events\": [local_message_event_id],",
                "+                \"auth_events\": [],",
                "+                \"origin_server_ts\": self.clock.time_msec(),",
                "+            },",
                "+            RoomVersions.V6,",
                "+        )",
                "+",
                "+        self.persist_event(self.remote_event_1)",
                "+",
                "+        # Check that the current extremities is the remote event.",
                "+        self.assert_extremities([self.remote_event_1.event_id])",
                "+",
                "+    def persist_event(self, event, state=None):",
                "+        \"\"\"Persist the event, with optional state",
                "+        \"\"\"",
                "+        context = self.get_success(",
                "+            self.state.compute_event_context(event, old_state=state)",
                "+        )",
                "+        self.get_success(self.persistence.persist_event(event, context))",
                "+",
                "+    def assert_extremities(self, expected_extremities):",
                "+        \"\"\"Assert the current extremities for the room",
                "+        \"\"\"",
                "+        extremities = self.get_success(",
                "+            self.store.get_prev_events_for_room(self.room_id)",
                "+        )",
                "+        self.assertCountEqual(extremities, expected_extremities)",
                "+",
                "+    def test_prune_gap(self):",
                "+        \"\"\"Test that we drop extremities after a gap when we see an event from",
                "+        the same domain.",
                "+        \"\"\"",
                "+",
                "+        # Fudge a second event which points to an event we don't have. This is a",
                "+        # state event so that the state changes (otherwise we won't prune the",
                "+        # extremity as they'll have the same state group).",
                "+        remote_event_2 = event_from_pdu_json(",
                "+            {",
                "+                \"type\": EventTypes.Member,",
                "+                \"state_key\": \"@user:other\",",
                "+                \"content\": {\"membership\": Membership.JOIN},",
                "+                \"room_id\": self.room_id,",
                "+                \"sender\": \"@user:other\",",
                "+                \"depth\": 50,",
                "+                \"prev_events\": [\"$some_unknown_message\"],",
                "+                \"auth_events\": [],",
                "+                \"origin_server_ts\": self.clock.time_msec(),",
                "+            },",
                "+            RoomVersions.V6,",
                "+        )",
                "+",
                "+        state_before_gap = self.get_success(self.state.get_current_state(self.room_id))",
                "+",
                "+        self.persist_event(remote_event_2, state=state_before_gap.values())",
                "+",
                "+        # Check the new extremity is just the new remote event.",
                "+        self.assert_extremities([remote_event_2.event_id])",
                "+",
                "+    def test_do_not_prune_gap_if_state_different(self):",
                "+        \"\"\"Test that we don't prune extremities after a gap if the resolved",
                "+        state is different.",
                "+        \"\"\"",
                "+",
                "+        # Fudge a second event which points to an event we don't have.",
                "+        remote_event_2 = event_from_pdu_json(",
                "+            {",
                "+                \"type\": EventTypes.Message,",
                "+                \"state_key\": \"@user:other\",",
                "+                \"content\": {},",
                "+                \"room_id\": self.room_id,",
                "+                \"sender\": \"@user:other\",",
                "+                \"depth\": 10,",
                "+                \"prev_events\": [\"$some_unknown_message\"],",
                "+                \"auth_events\": [],",
                "+                \"origin_server_ts\": self.clock.time_msec(),",
                "+            },",
                "+            RoomVersions.V6,",
                "+        )",
                "+",
                "+        # Now we persist it with state with a dropped history visibility",
                "+        # setting. The state resolution across the old and new event will then",
                "+        # include it, and so the resolved state won't match the new state.",
                "+        state_before_gap = dict(",
                "+            self.get_success(self.state.get_current_state(self.room_id))",
                "+        )",
                "+        state_before_gap.pop((\"m.room.history_visibility\", \"\"))",
                "+",
                "+        context = self.get_success(",
                "+            self.state.compute_event_context(",
                "+                remote_event_2, old_state=state_before_gap.values()",
                "+            )",
                "+        )",
                "+",
                "+        self.get_success(self.persistence.persist_event(remote_event_2, context))",
                "+",
                "+        # Check that we haven't dropped the old extremity.",
                "+        self.assert_extremities([self.remote_event_1.event_id, remote_event_2.event_id])",
                "+",
                "+    def test_prune_gap_if_old(self):",
                "+        \"\"\"Test that we drop extremities after a gap when the previous extremity",
                "+        is \"old\"",
                "+        \"\"\"",
                "+",
                "+        # Advance the clock for many days to make the old extremity \"old\". We",
                "+        # also set the depth to \"lots\".",
                "+        self.reactor.advance(7 * 24 * 60 * 60)",
                "+",
                "+        # Fudge a second event which points to an event we don't have. This is a",
                "+        # state event so that the state changes (otherwise we won't prune the",
                "+        # extremity as they'll have the same state group).",
                "+        remote_event_2 = event_from_pdu_json(",
                "+            {",
                "+                \"type\": EventTypes.Member,",
                "+                \"state_key\": \"@user:other2\",",
                "+                \"content\": {\"membership\": Membership.JOIN},",
                "+                \"room_id\": self.room_id,",
                "+                \"sender\": \"@user:other2\",",
                "+                \"depth\": 10000,",
                "+                \"prev_events\": [\"$some_unknown_message\"],",
                "+                \"auth_events\": [],",
                "+                \"origin_server_ts\": self.clock.time_msec(),",
                "+            },",
                "+            RoomVersions.V6,",
                "+        )",
                "+",
                "+        state_before_gap = self.get_success(self.state.get_current_state(self.room_id))",
                "+",
                "+        self.persist_event(remote_event_2, state=state_before_gap.values())",
                "+",
                "+        # Check the new extremity is just the new remote event.",
                "+        self.assert_extremities([remote_event_2.event_id])",
                "+",
                "+    def test_do_not_prune_gap_if_other_server(self):",
                "+        \"\"\"Test that we do not drop extremities after a gap when we see an event",
                "+        from a different domain.",
                "+        \"\"\"",
                "+",
                "+        # Fudge a second event which points to an event we don't have. This is a",
                "+        # state event so that the state changes (otherwise we won't prune the",
                "+        # extremity as they'll have the same state group).",
                "+        remote_event_2 = event_from_pdu_json(",
                "+            {",
                "+                \"type\": EventTypes.Member,",
                "+                \"state_key\": \"@user:other2\",",
                "+                \"content\": {\"membership\": Membership.JOIN},",
                "+                \"room_id\": self.room_id,",
                "+                \"sender\": \"@user:other2\",",
                "+                \"depth\": 10,",
                "+                \"prev_events\": [\"$some_unknown_message\"],",
                "+                \"auth_events\": [],",
                "+                \"origin_server_ts\": self.clock.time_msec(),",
                "+            },",
                "+            RoomVersions.V6,",
                "+        )",
                "+",
                "+        state_before_gap = self.get_success(self.state.get_current_state(self.room_id))",
                "+",
                "+        self.persist_event(remote_event_2, state=state_before_gap.values())",
                "+",
                "+        # Check the new extremity is just the new remote event.",
                "+        self.assert_extremities([self.remote_event_1.event_id, remote_event_2.event_id])",
                "+",
                "+    def test_prune_gap_if_dummy_remote(self):",
                "+        \"\"\"Test that we drop extremities after a gap when the previous extremity",
                "+        is a local dummy event and only points to remote events.",
                "+        \"\"\"",
                "+",
                "+        body = self.helper.send_event(",
                "+            self.room_id, type=EventTypes.Dummy, content={}, tok=self.token",
                "+        )",
                "+        local_message_event_id = body[\"event_id\"]",
                "+        self.assert_extremities([local_message_event_id])",
                "+",
                "+        # Advance the clock for many days to make the old extremity \"old\". We",
                "+        # also set the depth to \"lots\".",
                "+        self.reactor.advance(7 * 24 * 60 * 60)",
                "+",
                "+        # Fudge a second event which points to an event we don't have. This is a",
                "+        # state event so that the state changes (otherwise we won't prune the",
                "+        # extremity as they'll have the same state group).",
                "+        remote_event_2 = event_from_pdu_json(",
                "+            {",
                "+                \"type\": EventTypes.Member,",
                "+                \"state_key\": \"@user:other2\",",
                "+                \"content\": {\"membership\": Membership.JOIN},",
                "+                \"room_id\": self.room_id,",
                "+                \"sender\": \"@user:other2\",",
                "+                \"depth\": 10000,",
                "+                \"prev_events\": [\"$some_unknown_message\"],",
                "+                \"auth_events\": [],",
                "+                \"origin_server_ts\": self.clock.time_msec(),",
                "+            },",
                "+            RoomVersions.V6,",
                "+        )",
                "+",
                "+        state_before_gap = self.get_success(self.state.get_current_state(self.room_id))",
                "+",
                "+        self.persist_event(remote_event_2, state=state_before_gap.values())",
                "+",
                "+        # Check the new extremity is just the new remote event.",
                "+        self.assert_extremities([remote_event_2.event_id])",
                "+",
                "+    def test_prune_gap_if_dummy_local(self):",
                "+        \"\"\"Test that we don't drop extremities after a gap when the previous",
                "+        extremity is a local dummy event and points to local events.",
                "+        \"\"\"",
                "+",
                "+        body = self.helper.send(self.room_id, body=\"Test\", tok=self.token)",
                "+",
                "+        body = self.helper.send_event(",
                "+            self.room_id, type=EventTypes.Dummy, content={}, tok=self.token",
                "+        )",
                "+        local_message_event_id = body[\"event_id\"]",
                "+        self.assert_extremities([local_message_event_id])",
                "+",
                "+        # Advance the clock for many days to make the old extremity \"old\". We",
                "+        # also set the depth to \"lots\".",
                "+        self.reactor.advance(7 * 24 * 60 * 60)",
                "+",
                "+        # Fudge a second event which points to an event we don't have. This is a",
                "+        # state event so that the state changes (otherwise we won't prune the",
                "+        # extremity as they'll have the same state group).",
                "+        remote_event_2 = event_from_pdu_json(",
                "+            {",
                "+                \"type\": EventTypes.Member,",
                "+                \"state_key\": \"@user:other2\",",
                "+                \"content\": {\"membership\": Membership.JOIN},",
                "+                \"room_id\": self.room_id,",
                "+                \"sender\": \"@user:other2\",",
                "+                \"depth\": 10000,",
                "+                \"prev_events\": [\"$some_unknown_message\"],",
                "+                \"auth_events\": [],",
                "+                \"origin_server_ts\": self.clock.time_msec(),",
                "+            },",
                "+            RoomVersions.V6,",
                "+        )",
                "+",
                "+        state_before_gap = self.get_success(self.state.get_current_state(self.room_id))",
                "+",
                "+        self.persist_event(remote_event_2, state=state_before_gap.values())",
                "+",
                "+        # Check the new extremity is just the new remote event.",
                "+        self.assert_extremities([remote_event_2.event_id, local_message_event_id])",
                "+",
                "+    def test_do_not_prune_gap_if_not_dummy(self):",
                "+        \"\"\"Test that we do not drop extremities after a gap when the previous extremity",
                "+        is not a dummy event.",
                "+        \"\"\"",
                "+",
                "+        body = self.helper.send(self.room_id, body=\"test\", tok=self.token)",
                "+        local_message_event_id = body[\"event_id\"]",
                "+        self.assert_extremities([local_message_event_id])",
                "+",
                "+        # Fudge a second event which points to an event we don't have. This is a",
                "+        # state event so that the state changes (otherwise we won't prune the",
                "+        # extremity as they'll have the same state group).",
                "+        remote_event_2 = event_from_pdu_json(",
                "+            {",
                "+                \"type\": EventTypes.Member,",
                "+                \"state_key\": \"@user:other2\",",
                "+                \"content\": {\"membership\": Membership.JOIN},",
                "+                \"room_id\": self.room_id,",
                "+                \"sender\": \"@user:other2\",",
                "+                \"depth\": 10000,",
                "+                \"prev_events\": [\"$some_unknown_message\"],",
                "+                \"auth_events\": [],",
                "+                \"origin_server_ts\": self.clock.time_msec(),",
                "+            },",
                "+            RoomVersions.V6,",
                "+        )",
                "+",
                "+        state_before_gap = self.get_success(self.state.get_current_state(self.room_id))",
                "+",
                "+        self.persist_event(remote_event_2, state=state_before_gap.values())",
                "+",
                "+        # Check the new extremity is just the new remote event.",
                "+        self.assert_extremities([local_message_event_id, remote_event_2.event_id])"
            ],
            "changed_files": [
                "changelog.d/8929.misc",
                "synapse/api/constants.py",
                "synapse/handlers/message.py",
                "synapse/storage/persist_events.py",
                "synapse/visibility.py",
                "tests/storage/test_events.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8929": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8929, 8929",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8929",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4218473f9ea6a2680c21e96368dfe9c06271c8a4",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608314985,
            "hunks": 24,
            "message": "Refactor the CAS handler in prep for using the abstracted SSO code. (#8958) This makes the CAS handler look more like the SAML/OIDC handlers: * Render errors to users instead of throwing JSON errors. * Internal reorganization.",
            "diff": [
                "diff --git a/changelog.d/8958.misc b/changelog.d/8958.misc",
                "new file mode 100644",
                "index 000000000..1507073e4",
                "--- /dev/null",
                "+++ b/changelog.d/8958.misc",
                "@@ -0,0 +1 @@",
                "+Properly store the mapping of external ID to Matrix ID for CAS users.",
                "diff --git a/synapse/handlers/cas_handler.py b/synapse/handlers/cas_handler.py",
                "index f4ea0a976..e9891e131 100644",
                "--- a/synapse/handlers/cas_handler.py",
                "+++ b/synapse/handlers/cas_handler.py",
                "@@ -15,9 +15,11 @@",
                " import logging",
                "-import urllib",
                "-from typing import TYPE_CHECKING, Dict, Optional, Tuple",
                "+import urllib.parse",
                "+from typing import TYPE_CHECKING, Dict, Optional",
                " from xml.etree import ElementTree as ET",
                "+import attr",
                "+",
                " from twisted.web.client import PartialDownloadError",
                "-from synapse.api.errors import Codes, LoginError",
                "+from synapse.api.errors import HttpResponseException",
                " from synapse.http.site import SynapseRequest",
                "@@ -31,2 +33,22 @@ logger = logging.getLogger(__name__)",
                "+class CasError(Exception):",
                "+    \"\"\"Used to catch errors when validating the CAS ticket.",
                "+    \"\"\"",
                "+",
                "+    def __init__(self, error, error_description=None):",
                "+        self.error = error",
                "+        self.error_description = error_description",
                "+",
                "+    def __str__(self):",
                "+        if self.error_description:",
                "+            return \"{}: {}\".format(self.error, self.error_description)",
                "+        return self.error",
                "+",
                "+",
                "+@attr.s(slots=True, frozen=True)",
                "+class CasResponse:",
                "+    username = attr.ib(type=str)",
                "+    attributes = attr.ib(type=Dict[str, Optional[str]])",
                "+",
                "+",
                " class CasHandler:",
                "@@ -52,2 +74,4 @@ class CasHandler:",
                "+        self._sso_handler = hs.get_sso_handler()",
                "+",
                "     def _build_service_param(self, args: Dict[str, str]) -> str:",
                "@@ -71,5 +95,5 @@ class CasHandler:",
                "         self, ticket: str, service_args: Dict[str, str]",
                "-    ) -> Tuple[str, Optional[str]]:",
                "+    ) -> CasResponse:",
                "         \"\"\"",
                "-        Validate a CAS ticket with the server, parse the response, and return the user and display name.",
                "+        Validate a CAS ticket with the server, and return the parsed the response.",
                "@@ -79,2 +103,8 @@ class CasHandler:",
                "                 Should be the same as those passed to `get_redirect_url`.",
                "+",
                "+        Raises:",
                "+            CasError: If there's an error parsing the CAS response.",
                "+",
                "+        Returns:",
                "+            The parsed CAS response.",
                "         \"\"\"",
                "@@ -91,23 +121,14 @@ class CasHandler:",
                "             body = pde.response",
                "+        except HttpResponseException as e:",
                "+            description = (",
                "+                (",
                "+                    'Authorization server responded with a \"{status}\" error '",
                "+                    \"while exchanging the authorization code.\"",
                "+                ).format(status=e.code),",
                "+            )",
                "+            raise CasError(\"server_error\", description) from e",
                "-        user, attributes = self._parse_cas_response(body)",
                "-        displayname = attributes.pop(self._cas_displayname_attribute, None)",
                "-",
                "-        for required_attribute, required_value in self._cas_required_attributes.items():",
                "-            # If required attribute was not in CAS Response - Forbidden",
                "-            if required_attribute not in attributes:",
                "-                raise LoginError(401, \"Unauthorized\", errcode=Codes.UNAUTHORIZED)",
                "-",
                "-            # Also need to check value",
                "-            if required_value is not None:",
                "-                actual_value = attributes[required_attribute]",
                "-                # If required attribute value does not match expected - Forbidden",
                "-                if required_value != actual_value:",
                "-                    raise LoginError(401, \"Unauthorized\", errcode=Codes.UNAUTHORIZED)",
                "-",
                "-        return user, displayname",
                "+        return self._parse_cas_response(body)",
                "-    def _parse_cas_response(",
                "-        self, cas_response_body: bytes",
                "-    ) -> Tuple[str, Dict[str, Optional[str]]]:",
                "+    def _parse_cas_response(self, cas_response_body: bytes) -> CasResponse:",
                "         \"\"\"",
                "@@ -118,35 +139,43 @@ class CasHandler:",
                "+        Raises:",
                "+            CasError: If there's an error parsing the CAS response.",
                "+",
                "         Returns:",
                "-            A tuple of the user and a mapping of other attributes.",
                "+            The parsed CAS response.",
                "         \"\"\"",
                "+",
                "+        # Ensure the response is valid.",
                "+        root = ET.fromstring(cas_response_body)",
                "+        if not root.tag.endswith(\"serviceResponse\"):",
                "+            raise CasError(",
                "+                \"missing_service_response\",",
                "+                \"root of CAS response is not serviceResponse\",",
                "+            )",
                "+",
                "+        success = root[0].tag.endswith(\"authenticationSuccess\")",
                "+        if not success:",
                "+            raise CasError(\"unsucessful_response\", \"Unsuccessful CAS response\")",
                "+",
                "+        # Iterate through the nodes and pull out the user and any extra attributes.",
                "         user = None",
                "         attributes = {}",
                "-        try:",
                "-            root = ET.fromstring(cas_response_body)",
                "-            if not root.tag.endswith(\"serviceResponse\"):",
                "-                raise Exception(\"root of CAS response is not serviceResponse\")",
                "-            success = root[0].tag.endswith(\"authenticationSuccess\")",
                "-            for child in root[0]:",
                "-                if child.tag.endswith(\"user\"):",
                "-                    user = child.text",
                "-                if child.tag.endswith(\"attributes\"):",
                "-                    for attribute in child:",
                "-                        # ElementTree library expands the namespace in",
                "-                        # attribute tags to the full URL of the namespace.",
                "-                        # We don't care about namespace here and it will always",
                "-                        # be encased in curly braces, so we remove them.",
                "-                        tag = attribute.tag",
                "-                        if \"}\" in tag:",
                "-                            tag = tag.split(\"}\")[1]",
                "-                        attributes[tag] = attribute.text",
                "-            if user is None:",
                "-                raise Exception(\"CAS response does not contain user\")",
                "-        except Exception:",
                "-            logger.exception(\"Error parsing CAS response\")",
                "-            raise LoginError(401, \"Invalid CAS response\", errcode=Codes.UNAUTHORIZED)",
                "-        if not success:",
                "-            raise LoginError(",
                "-                401, \"Unsuccessful CAS response\", errcode=Codes.UNAUTHORIZED",
                "-            )",
                "-        return user, attributes",
                "+        for child in root[0]:",
                "+            if child.tag.endswith(\"user\"):",
                "+                user = child.text",
                "+            if child.tag.endswith(\"attributes\"):",
                "+                for attribute in child:",
                "+                    # ElementTree library expands the namespace in",
                "+                    # attribute tags to the full URL of the namespace.",
                "+                    # We don't care about namespace here and it will always",
                "+                    # be encased in curly braces, so we remove them.",
                "+                    tag = attribute.tag",
                "+                    if \"}\" in tag:",
                "+                        tag = tag.split(\"}\")[1]",
                "+                    attributes[tag] = attribute.text",
                "+",
                "+        # Ensure a user was found.",
                "+        if user is None:",
                "+            raise CasError(\"no_user\", \"CAS response does not contain user\")",
                "+",
                "+        return CasResponse(user, attributes)",
                "@@ -203,3 +232,64 @@ class CasHandler:",
                "             args[\"session\"] = session",
                "-        username, user_display_name = await self._validate_ticket(ticket, args)",
                "+",
                "+        try:",
                "+            cas_response = await self._validate_ticket(ticket, args)",
                "+        except CasError as e:",
                "+            logger.exception(\"Could not validate ticket\")",
                "+            self._sso_handler.render_error(request, e.error, e.error_description, 401)",
                "+            return",
                "+",
                "+        await self._handle_cas_response(",
                "+            request, cas_response, client_redirect_url, session",
                "+        )",
                "+",
                "+    async def _handle_cas_response(",
                "+        self,",
                "+        request: SynapseRequest,",
                "+        cas_response: CasResponse,",
                "+        client_redirect_url: Optional[str],",
                "+        session: Optional[str],",
                "+    ) -> None:",
                "+        \"\"\"Handle a CAS response to a ticket request.",
                "+",
                "+        Assumes that the response has been validated. Maps the user onto an MXID,",
                "+        registering them if necessary, and returns a response to the browser.",
                "+",
                "+        Args:",
                "+            request: the incoming request from the browser. We'll respond to it with an",
                "+                HTML page or a redirect",
                "+",
                "+            cas_response: The parsed CAS response.",
                "+",
                "+            client_redirect_url: the redirectUrl parameter from the `/cas/ticket` HTTP request, if given.",
                "+                This should be the same as the redirectUrl from the original `/login/sso/redirect` request.",
                "+",
                "+            session: The session parameter from the `/cas/ticket` HTTP request, if given.",
                "+                This should be the UI Auth session id.",
                "+        \"\"\"",
                "+",
                "+        # Ensure that the attributes of the logged in user meet the required",
                "+        # attributes.",
                "+        for required_attribute, required_value in self._cas_required_attributes.items():",
                "+            # If required attribute was not in CAS Response - Forbidden",
                "+            if required_attribute not in cas_response.attributes:",
                "+                self._sso_handler.render_error(",
                "+                    request,",
                "+                    \"unauthorised\",",
                "+                    \"You are not authorised to log in here.\",",
                "+                    401,",
                "+                )",
                "+                return",
                "+",
                "+            # Also need to check value",
                "+            if required_value is not None:",
                "+                actual_value = cas_response.attributes[required_attribute]",
                "+                # If required attribute value does not match expected - Forbidden",
                "+                if required_value != actual_value:",
                "+                    self._sso_handler.render_error(",
                "+                        request,",
                "+                        \"unauthorised\",",
                "+                        \"You are not authorised to log in here.\",",
                "+                        401,",
                "+                    )",
                "+                    return",
                "@@ -211,3 +301,3 @@ class CasHandler:",
                "         user_id = await self._map_cas_user_to_matrix_user(",
                "-            username, user_display_name, user_agent, ip_address",
                "+            cas_response, user_agent, ip_address",
                "         )",
                "@@ -227,7 +317,3 @@ class CasHandler:",
                "     async def _map_cas_user_to_matrix_user(",
                "-        self,",
                "-        remote_user_id: str,",
                "-        display_name: Optional[str],",
                "-        user_agent: str,",
                "-        ip_address: str,",
                "+        self, cas_response: CasResponse, user_agent: str, ip_address: str,",
                "     ) -> str:",
                "@@ -237,4 +323,3 @@ class CasHandler:",
                "         Args:",
                "-            remote_user_id: The username from the CAS response.",
                "-            display_name: The display name from the CAS response.",
                "+            cas_response: The parsed CAS response.",
                "             user_agent: The user agent of the client making the request.",
                "@@ -246,3 +331,3 @@ class CasHandler:",
                "-        localpart = map_username_to_mxid_localpart(remote_user_id)",
                "+        localpart = map_username_to_mxid_localpart(cas_response.username)",
                "         user_id = UserID(localpart, self._hostname).to_string()",
                "@@ -250,2 +335,4 @@ class CasHandler:",
                "+        displayname = cas_response.attributes.get(self._cas_displayname_attribute, None)",
                "+",
                "         # If the user does not exist, register it.",
                "@@ -254,3 +341,3 @@ class CasHandler:",
                "                 localpart=localpart,",
                "-                default_display_name=display_name,",
                "+                default_display_name=displayname,",
                "                 user_agent_ips=[(user_agent, ip_address)],",
                "diff --git a/synapse/handlers/sso.py b/synapse/handlers/sso.py",
                "index 548b02211..b0a8c8c7d 100644",
                "--- a/synapse/handlers/sso.py",
                "+++ b/synapse/handlers/sso.py",
                "@@ -103,3 +103,7 @@ class SsoHandler:",
                "     def render_error(",
                "-        self, request, error: str, error_description: Optional[str] = None",
                "+        self,",
                "+        request: Request,",
                "+        error: str,",
                "+        error_description: Optional[str] = None,",
                "+        code: int = 400,",
                "     ) -> None:",
                "@@ -115,2 +119,3 @@ class SsoHandler:",
                "             error_description: A human-readable description of the error.",
                "+            code: The integer error code (an HTTP response code)",
                "         \"\"\"",
                "@@ -119,3 +124,3 @@ class SsoHandler:",
                "         )",
                "-        respond_with_html(request, 400, html)",
                "+        respond_with_html(request, code, html)"
            ],
            "changed_files": [
                "changelog.d/8958.misc",
                "synapse/handlers/cas_handler.py",
                "synapse/handlers/sso.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8958": "Use the abstract registration code for CAS #8856"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 8958, 8958",
                    "relevance": 32
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8958",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "320e8c806462b2c65713d3fe26ac9d8674a019bf",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607513396,
            "hunks": 3,
            "message": "Merge tag 'v1.23.1' Synapse 1.23.1 (2020-12-09) =========================== Due to the two security issues highlighted below, server administrators are encouraged to update Synapse. We are not aware of these vulnerabilities being exploited in the wild. Security advisory ----------------- The following issues are fixed in v1.23.1 and v1.24.0. - There is a denial of service attack   ([CVE-2020-26257](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-26257))   against the federation APIs in which future events will not be correctly sent   to other servers over federation. This affects all servers that participate in   open federation. (Fixed in [#8776](https://github.com/matrix-org/synapse/pull/8776)). - Synapse may be affected by OpenSSL   [CVE-2020-1971](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1971).   Synapse administrators should ensure that they have the latest versions of   the cryptography Python package installed. To upgrade Synapse along with the cryptography package: * Administrators using the [`matrix.org` Docker   image](https://hub.docker.com/r/matrixdotorg/synapse/) or the [Debian/Ubuntu   packages from   `matrix.org`](https://github.com/matrix-org/synapse/blob/master/INSTALL.md#matrixorg-packages)   should ensure that they have version 1.24.0 or 1.23.1 installed: these images include   the updated packages. * Administrators who have [installed Synapse from   source](https://github.com/matrix-org/synapse/blob/master/INSTALL.md#installing-from-source)   should upgrade the cryptography package within their virtualenv by running:   ```sh   <path_to_virtualenv>/bin/pip install 'cryptography>=3.3'   ``` * Administrators who have installed Synapse from distribution packages should   consult the information from their distributions. Bugfixes -------- - Fix a bug in some federation APIs which could lead to unexpected behaviour if different parameters were set in the URI and the request body. ([\\#8776](https://github.com/matrix-org/synapse/issues/8776)) Internal Changes ---------------- - Add a maximum version for pysaml2 on Python 3.5. ([\\#8898](https://github.com/matrix-org/synapse/issues/8898))",
            "diff": [
                "diff --cc CHANGES.md",
                "index 677afeebc,55f53eb69..81b12e9b9",
                "--- a/CHANGES.md",
                "+++ b/CHANGES.md",
                "@@@ -1,134 -1,53 +1,188 @@@",
                " +Synapse 1.24.0 (2020-12-09)",
                " +===========================",
                " +",
                " +Due to the two security issues highlighted below, server administrators are",
                " +encouraged to update Synapse. We are not aware of these vulnerabilities being",
                " +exploited in the wild.",
                " +",
                " +Security advisory",
                " +-----------------",
                " +",
                " +The following issues are fixed in v1.23.1 and v1.24.0.",
                " +",
                " +- There is a denial of service attack",
                " +  ([CVE-2020-26257](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-26257))",
                " +  against the federation APIs in which future events will not be correctly sent",
                " +  to other servers over federation. This affects all servers that participate in",
                " +  open federation. (Fixed in [#8776](https://github.com/matrix-org/synapse/pull/8776)).",
                " +",
                " +- Synapse may be affected by OpenSSL",
                " +  [CVE-2020-1971](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1971).",
                " +  Synapse administrators should ensure that they have the latest versions of",
                " +  the cryptography Python package installed.",
                " +",
                " +To upgrade Synapse along with the cryptography package:",
                " +",
                " +* Administrators using the [`matrix.org` Docker",
                " +  image](https://hub.docker.com/r/matrixdotorg/synapse/) or the [Debian/Ubuntu",
                " +  packages from",
                " +  `matrix.org`](https://github.com/matrix-org/synapse/blob/master/INSTALL.md#matrixorg-packages)",
                " +  should ensure that they have version 1.24.0 or 1.23.1 installed: these images include",
                " +  the updated packages.",
                " +* Administrators who have [installed Synapse from",
                " +  source](https://github.com/matrix-org/synapse/blob/master/INSTALL.md#installing-from-source)",
                " +  should upgrade the cryptography package within their virtualenv by running:",
                " +  ```sh",
                " +  <path_to_virtualenv>/bin/pip install 'cryptography>=3.3'",
                " +  ```",
                " +* Administrators who have installed Synapse from distribution packages should",
                " +  consult the information from their distributions.",
                " +",
                " +Internal Changes",
                " +----------------",
                " +",
                " +- Add a maximum version for pysaml2 on Python 3.5. ([\\#8898](https://github.com/matrix-org/synapse/issues/8898))",
                " +",
                " +",
                "+ Synapse 1.23.1 (2020-12-09)",
                "+ ===========================",
                "+ ",
                "+ Due to the two security issues highlighted below, server administrators are",
                "+ encouraged to update Synapse. We are not aware of these vulnerabilities being",
                "+ exploited in the wild.",
                "+ ",
                "+ Security advisory",
                "+ -----------------",
                "+ ",
                "+ The following issues are fixed in v1.23.1 and v1.24.0.",
                "+ ",
                "+ - There is a denial of service attack",
                "+   ([CVE-2020-26257](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-26257))",
                "+   against the federation APIs in which future events will not be correctly sent",
                "+   to other servers over federation. This affects all servers that participate in",
                "+   open federation. (Fixed in [#8776](https://github.com/matrix-org/synapse/pull/8776)).",
                "+ ",
                "+ - Synapse may be affected by OpenSSL",
                "+   [CVE-2020-1971](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1971).",
                "+   Synapse administrators should ensure that they have the latest versions of",
                "+   the cryptography Python package installed.",
                "+ ",
                "+ To upgrade Synapse along with the cryptography package:",
                "+ ",
                "+ * Administrators using the [`matrix.org` Docker",
                "+   image](https://hub.docker.com/r/matrixdotorg/synapse/) or the [Debian/Ubuntu",
                "+   packages from",
                "+   `matrix.org`](https://github.com/matrix-org/synapse/blob/master/INSTALL.md#matrixorg-packages)",
                "+   should ensure that they have version 1.24.0 or 1.23.1 installed: these images include",
                "+   the updated packages.",
                "+ * Administrators who have [installed Synapse from",
                "+   source](https://github.com/matrix-org/synapse/blob/master/INSTALL.md#installing-from-source)",
                "+   should upgrade the cryptography package within their virtualenv by running:",
                "+   ```sh",
                "+   <path_to_virtualenv>/bin/pip install 'cryptography>=3.3'",
                "+   ```",
                "+ * Administrators who have installed Synapse from distribution packages should",
                "+   consult the information from their distributions.",
                "+ ",
                "+ Bugfixes",
                "+ --------",
                "+ ",
                "+ - Fix a bug in some federation APIs which could lead to unexpected behaviour if different parameters were set in the URI and the request body. ([\\#8776](https://github.com/matrix-org/synapse/issues/8776))",
                "+ ",
                "+ ",
                "+ Internal Changes",
                "+ ----------------",
                "+ ",
                "+ - Add a maximum version for pysaml2 on Python 3.5. ([\\#8898](https://github.com/matrix-org/synapse/issues/8898))",
                "+ ",
                "+ ",
                " +Synapse 1.24.0rc2 (2020-12-04)",
                " +==============================",
                " +",
                " +Bugfixes",
                " +--------",
                " +",
                " +- Fix a regression in v1.24.0rc1 which failed to allow SAML mapping providers which were unable to redirect users to an additional page. ([\\#8878](https://github.com/matrix-org/synapse/issues/8878))",
                " +",
                " +",
                " +Internal Changes",
                " +----------------",
                " +",
                " +- Add support for the `prometheus_client` newer than 0.9.0. Contributed by Jordan Bancino. ([\\#8875](https://github.com/matrix-org/synapse/issues/8875))",
                " +",
                " +",
                " +Synapse 1.24.0rc1 (2020-12-02)",
                " +==============================",
                " +",
                " +Features",
                " +--------",
                " +",
                " +- Add admin API for logging in as a user. ([\\#8617](https://github.com/matrix-org/synapse/issues/8617))",
                " +- Allow specification of the SAML IdP if the metadata returns multiple IdPs. ([\\#8630](https://github.com/matrix-org/synapse/issues/8630))",
                " +- Add support for re-trying generation of a localpart for OpenID Connect mapping providers. ([\\#8801](https://github.com/matrix-org/synapse/issues/8801), [\\#8855](https://github.com/matrix-org/synapse/issues/8855))",
                " +- Allow the `Date` header through CORS. Contributed by Nicolas Chamo. ([\\#8804](https://github.com/matrix-org/synapse/issues/8804))",
                " +- Add a config option, `push.group_by_unread_count`, which controls whether unread message counts in push notifications are defined as \"the number of rooms with unread messages\" or \"total unread messages\". ([\\#8820](https://github.com/matrix-org/synapse/issues/8820))",
                " +- Add `force_purge` option to delete-room admin api. ([\\#8843](https://github.com/matrix-org/synapse/issues/8843))",
                " +",
                " +",
                " +Bugfixes",
                " +--------",
                " +",
                " +- Fix a bug where appservices may be sent an excessive amount of read receipts and presence. Broke in v1.22.0. ([\\#8744](https://github.com/matrix-org/synapse/issues/8744))",
                " +- Fix a bug in some federation APIs which could lead to unexpected behaviour if different parameters were set in the URI and the request body. ([\\#8776](https://github.com/matrix-org/synapse/issues/8776))",
                " +- Fix a bug where synctl could spawn duplicate copies of a worker. Contributed by Waylon Cude. ([\\#8798](https://github.com/matrix-org/synapse/issues/8798))",
                " +- Allow per-room profiles to be used for the server notice user. ([\\#8799](https://github.com/matrix-org/synapse/issues/8799))",
                " +- Fix a bug where logging could break after a call to SIGHUP. ([\\#8817](https://github.com/matrix-org/synapse/issues/8817))",
                " +- Fix `register_new_matrix_user` failing with \"Bad Request\" when trailing slash is included in server URL. Contributed by @angdraug. ([\\#8823](https://github.com/matrix-org/synapse/issues/8823))",
                " +- Fix a minor long-standing bug in login, where we would offer the `password` login type if a custom auth provider supported it, even if password login was disabled. ([\\#8835](https://github.com/matrix-org/synapse/issues/8835))",
                " +- Fix a long-standing bug which caused Synapse to require unspecified parameters during user-interactive authentication. ([\\#8848](https://github.com/matrix-org/synapse/issues/8848))",
                " +- Fix a bug introduced in v1.20.0 where the user-agent and IP address reported during user registration for CAS, OpenID Connect, and SAML were of the wrong form. ([\\#8784](https://github.com/matrix-org/synapse/issues/8784))",
                " +",
                " +",
                " +Improved Documentation",
                " +----------------------",
                " +",
                " +- Clarify the usecase for a msisdn delegate. Contributed by Adrian Wannenmacher. ([\\#8734](https://github.com/matrix-org/synapse/issues/8734))",
                " +- Remove extraneous comma from JSON example in User Admin API docs. ([\\#8771](https://github.com/matrix-org/synapse/issues/8771))",
                " +- Update `turn-howto.md` with troubleshooting notes. ([\\#8779](https://github.com/matrix-org/synapse/issues/8779))",
                " +- Fix the example on how to set the `Content-Type` header in nginx for the Client Well-Known URI. ([\\#8793](https://github.com/matrix-org/synapse/issues/8793))",
                " +- Improve the documentation for the admin API to list all media in a room with respect to encrypted events. ([\\#8795](https://github.com/matrix-org/synapse/issues/8795))",
                " +- Update the formatting of the `push` section of the homeserver config file to better align with the [code style guidelines](https://github.com/matrix-org/synapse/blob/develop/docs/code_style.md#configuration-file-format). ([\\#8818](https://github.com/matrix-org/synapse/issues/8818))",
                " +- Improve documentation how to configure prometheus for workers. ([\\#8822](https://github.com/matrix-org/synapse/issues/8822))",
                " +- Update example prometheus console. ([\\#8824](https://github.com/matrix-org/synapse/issues/8824))",
                " +",
                " +",
                " +Deprecations and Removals",
                " +-------------------------",
                " +",
                " +- Remove old `/_matrix/client/*/admin` endpoints which were deprecated since Synapse 1.20.0. ([\\#8785](https://github.com/matrix-org/synapse/issues/8785))",
                " +- Disable pretty printing JSON responses for curl. Users who want pretty-printed output should use [jq](https://stedolan.github.io/jq/) in combination with curl. Contributed by @tulir. ([\\#8833](https://github.com/matrix-org/synapse/issues/8833))",
                " +",
                " +",
                " +Internal Changes",
                " +----------------",
                " +",
                " +- Simplify the way the `HomeServer` object caches its internal attributes. ([\\#8565](https://github.com/matrix-org/synapse/issues/8565), [\\#8851](https://github.com/matrix-org/synapse/issues/8851))",
                " +- Add an example and documentation for clock skew to the SAML2 sample configuration to allow for clock/time difference between the homserver and IdP. Contributed by @localguru. ([\\#8731](https://github.com/matrix-org/synapse/issues/8731))",
                " +- Generalise `RoomMemberHandler._locally_reject_invite` to apply to more flows than just invite. ([\\#8751](https://github.com/matrix-org/synapse/issues/8751))",
                " +- Generalise `RoomStore.maybe_store_room_on_invite` to handle other, non-invite membership events. ([\\#8754](https://github.com/matrix-org/synapse/issues/8754))",
                " +- Refactor test utilities for injecting HTTP requests. ([\\#8757](https://github.com/matrix-org/synapse/issues/8757), [\\#8758](https://github.com/matrix-org/synapse/issues/8758), [\\#8759](https://github.com/matrix-org/synapse/issues/8759), [\\#8760](https://github.com/matrix-org/synapse/issues/8760), [\\#8761](https://github.com/matrix-org/synapse/issues/8761), [\\#8777](https://github.com/matrix-org/synapse/issues/8777))",
                " +- Consolidate logic between the OpenID Connect and SAML code. ([\\#8765](https://github.com/matrix-org/synapse/issues/8765))",
                " +- Use `TYPE_CHECKING` instead of magic `MYPY` variable. ([\\#8770](https://github.com/matrix-org/synapse/issues/8770))",
                " +- Add a commandline script to sign arbitrary json objects. ([\\#8772](https://github.com/matrix-org/synapse/issues/8772))",
                " +- Minor log line improvements for the SSO mapping code used to generate Matrix IDs from SSO IDs. ([\\#8773](https://github.com/matrix-org/synapse/issues/8773))",
                " +- Add additional error checking for OpenID Connect and SAML mapping providers. ([\\#8774](https://github.com/matrix-org/synapse/issues/8774), [\\#8800](https://github.com/matrix-org/synapse/issues/8800))",
                " +- Add type hints to HTTP abstractions. ([\\#8806](https://github.com/matrix-org/synapse/issues/8806), [\\#8812](https://github.com/matrix-org/synapse/issues/8812))",
                " +- Remove unnecessary function arguments and add typing to several membership replication classes. ([\\#8809](https://github.com/matrix-org/synapse/issues/8809))",
                " +- Optimise the lookup for an invite from another homeserver when trying to reject it. ([\\#8815](https://github.com/matrix-org/synapse/issues/8815))",
                " +- Add tests for `password_auth_provider`s. ([\\#8819](https://github.com/matrix-org/synapse/issues/8819))",
                " +- Drop redundant database index on `event_json`. ([\\#8845](https://github.com/matrix-org/synapse/issues/8845))",
                " +- Simplify `uk.half-shot.msc2778.login.application_service` login handler. ([\\#8847](https://github.com/matrix-org/synapse/issues/8847))",
                " +- Refactor `password_auth_provider` support code. ([\\#8849](https://github.com/matrix-org/synapse/issues/8849))",
                " +- Add missing `ordering` to background database updates. ([\\#8850](https://github.com/matrix-org/synapse/issues/8850))",
                " +- Allow for specifying a room version when creating a room in unit tests via `RestHelper.create_room_as`. ([\\#8854](https://github.com/matrix-org/synapse/issues/8854))",
                " +",
                " +",
                "++",
                "++",
                "  Synapse 1.23.0 (2020-11-18)",
                "diff --cc debian/changelog",
                "index 9f47d12b7,0342fafdd..6b819d201",
                "--- a/debian/changelog",
                "+++ b/debian/changelog",
                "@@@ -1,7 -1,7 +1,13 @@@",
                " +matrix-synapse-py3 (1.24.0) stable; urgency=medium",
                " +",
                " +  * New synapse release 1.24.0.",
                " +",
                " + -- Synapse Packaging team <packages@matrix.org>  Wed, 09 Dec 2020 10:14:30 +0000",
                " +",
                "+ matrix-synapse-py3 (1.23.1) stable; urgency=medium",
                "+ ",
                "+   * New synapse release 1.23.1.",
                "+ ",
                "+  -- Synapse Packaging team <packages@matrix.org>  Wed, 09 Dec 2020 10:40:39 +0000",
                "+ ",
                "  matrix-synapse-py3 (1.23.0) stable; urgency=medium"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8776": "",
                "8898": ""
            },
            "cve_refs": [
                "CVE-2020-26257",
                "CVE-2020-1971"
            ],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: matrix-synapse",
                    "relevance": 8
                },
                {
                    "id": "SEC_KEYWORDS_IN_MESSAGE",
                    "message": "The commit message contains some security-related keywords: security, attack",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: service, issue, lead, python, request, attack, version, package, affect, federation, server, denial",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8776, 8898",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "394516ad1bb6127ab5b32a12d81ef307deb39570",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608043444,
            "hunks": 744,
            "message": "Remove spurious \"SynapseRequest\" result from `make_request\" This was never used, so let's get rid of it.",
            "diff": [
                "diff --git a/tests/app/test_frontend_proxy.py b/tests/app/test_frontend_proxy.py",
                "index 43fef5d64..e0ca28882 100644",
                "--- a/tests/app/test_frontend_proxy.py",
                "+++ b/tests/app/test_frontend_proxy.py",
                "@@ -59,3 +59,3 @@ class FrontendProxyTests(HomeserverTestCase):",
                "-        _, channel = make_request(self.reactor, site, \"PUT\", \"presence/a/status\")",
                "+        channel = make_request(self.reactor, site, \"PUT\", \"presence/a/status\")",
                "@@ -79,3 +79,3 @@ class FrontendProxyTests(HomeserverTestCase):",
                "-        _, channel = make_request(self.reactor, site, \"PUT\", \"presence/a/status\")",
                "+        channel = make_request(self.reactor, site, \"PUT\", \"presence/a/status\")",
                "diff --git a/tests/app/test_openid_listener.py b/tests/app/test_openid_listener.py",
                "index b260ab734..467033e20 100644",
                "--- a/tests/app/test_openid_listener.py",
                "+++ b/tests/app/test_openid_listener.py",
                "@@ -75,3 +75,3 @@ class FederationReaderOpenIDListenerTests(HomeserverTestCase):",
                "-        _, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor, site, \"GET\", \"/_matrix/federation/v1/openid/userinfo\"",
                "@@ -123,3 +123,3 @@ class SynapseHomeserverOpenIDListenerTests(HomeserverTestCase):",
                "-        _, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor, site, \"GET\", \"/_matrix/federation/v1/openid/userinfo\"",
                "diff --git a/tests/federation/test_complexity.py b/tests/federation/test_complexity.py",
                "index 0187f56e2..9ccd2d76b 100644",
                "--- a/tests/federation/test_complexity.py",
                "+++ b/tests/federation/test_complexity.py",
                "@@ -50,3 +50,3 @@ class RoomComplexityTests(unittest.FederatingHomeserverTestCase):",
                "         # Get the room complexity",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/_matrix/federation/unstable/rooms/%s/complexity\" % (room_1,)",
                "@@ -62,3 +62,3 @@ class RoomComplexityTests(unittest.FederatingHomeserverTestCase):",
                "         # Get the room complexity again -- make sure it's our artificial value",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/_matrix/federation/unstable/rooms/%s/complexity\" % (room_1,)",
                "diff --git a/tests/federation/test_federation_server.py b/tests/federation/test_federation_server.py",
                "index 3009fbb6c..cfeccc057 100644",
                "--- a/tests/federation/test_federation_server.py",
                "+++ b/tests/federation/test_federation_server.py",
                "@@ -48,3 +48,3 @@ class FederationServerTests(unittest.FederatingHomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -97,3 +97,3 @@ class StateQueryTests(unittest.FederatingHomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/_matrix/federation/v1/state/%s\" % (room_1,)",
                "@@ -129,3 +129,3 @@ class StateQueryTests(unittest.FederatingHomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/_matrix/federation/v1/state/%s\" % (room_1,)",
                "diff --git a/tests/federation/transport/test_server.py b/tests/federation/transport/test_server.py",
                "index f9e3c7a51..212fb79a0 100644",
                "--- a/tests/federation/transport/test_server.py",
                "+++ b/tests/federation/transport/test_server.py",
                "@@ -39,5 +39,3 @@ class RoomDirectoryFederationTests(unittest.HomeserverTestCase):",
                "     def test_blocked_public_room_list_over_federation(self):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", \"/_matrix/federation/v1/publicRooms\"",
                "-        )",
                "+        channel = self.make_request(\"GET\", \"/_matrix/federation/v1/publicRooms\")",
                "         self.assertEquals(403, channel.code)",
                "@@ -46,5 +44,3 @@ class RoomDirectoryFederationTests(unittest.HomeserverTestCase):",
                "     def test_open_public_room_list_over_federation(self):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", \"/_matrix/federation/v1/publicRooms\"",
                "-        )",
                "+        channel = self.make_request(\"GET\", \"/_matrix/federation/v1/publicRooms\")",
                "         self.assertEquals(200, channel.code)",
                "diff --git a/tests/handlers/test_directory.py b/tests/handlers/test_directory.py",
                "index 770d225ed..a39f89860 100644",
                "--- a/tests/handlers/test_directory.py",
                "+++ b/tests/handlers/test_directory.py",
                "@@ -407,3 +407,3 @@ class TestCreateAliasACL(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -417,3 +417,3 @@ class TestCreateAliasACL(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -433,3 +433,3 @@ class TestRoomListSearchDisabled(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", b\"directory/list/room/%s\" % (room_id.encode(\"ascii\"),), b\"{}\"",
                "@@ -448,3 +448,3 @@ class TestRoomListSearchDisabled(unittest.HomeserverTestCase):",
                "         # Room list is enabled so we should get some results",
                "-        request, channel = self.make_request(\"GET\", b\"publicRooms\")",
                "+        channel = self.make_request(\"GET\", b\"publicRooms\")",
                "         self.assertEquals(200, channel.code, channel.result)",
                "@@ -456,3 +456,3 @@ class TestRoomListSearchDisabled(unittest.HomeserverTestCase):",
                "         # Room list disabled so we should get no results",
                "-        request, channel = self.make_request(\"GET\", b\"publicRooms\")",
                "+        channel = self.make_request(\"GET\", b\"publicRooms\")",
                "         self.assertEquals(200, channel.code, channel.result)",
                "@@ -462,3 +462,3 @@ class TestRoomListSearchDisabled(unittest.HomeserverTestCase):",
                "         room_id = self.helper.create_room_as(self.user_id)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", b\"directory/list/room/%s\" % (room_id.encode(\"ascii\"),), b\"{}\"",
                "diff --git a/tests/handlers/test_message.py b/tests/handlers/test_message.py",
                "index af4277581..f955dfa49 100644",
                "--- a/tests/handlers/test_message.py",
                "+++ b/tests/handlers/test_message.py",
                "@@ -208,3 +208,3 @@ class ServerAclValidationTestCase(unittest.HomeserverTestCase):",
                "         path = \"/_matrix/client/r0/rooms/%s/redact/%s\" % (self.room_id, event_id)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", path, content={}, access_token=self.access_token",
                "diff --git a/tests/handlers/test_password_providers.py b/tests/handlers/test_password_providers.py",
                "index 8d5026514..f816594ee 100644",
                "--- a/tests/handlers/test_password_providers.py",
                "+++ b/tests/handlers/test_password_providers.py",
                "@@ -553,3 +553,3 @@ class PasswordAuthProviderTests(unittest.HomeserverTestCase):",
                "     def _get_login_flows(self) -> JsonDict:",
                "-        _, channel = self.make_request(\"GET\", \"/_matrix/client/r0/login\")",
                "+        channel = self.make_request(\"GET\", \"/_matrix/client/r0/login\")",
                "         self.assertEqual(channel.code, 200, channel.result)",
                "@@ -562,3 +562,3 @@ class PasswordAuthProviderTests(unittest.HomeserverTestCase):",
                "         params.update({\"identifier\": {\"type\": \"m.id.user\", \"user\": user}, \"type\": type})",
                "-        _, channel = self.make_request(\"POST\", \"/_matrix/client/r0/login\", params)",
                "+        channel = self.make_request(\"POST\", \"/_matrix/client/r0/login\", params)",
                "         return channel",
                "@@ -599,3 +599,3 @@ class PasswordAuthProviderTests(unittest.HomeserverTestCase):",
                "         \"\"\"Delete an individual device.\"\"\"",
                "-        _, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"DELETE\", \"devices/\" + device, body, access_token=access_token",
                "diff --git a/tests/handlers/test_typing.py b/tests/handlers/test_typing.py",
                "index f21de958f..96e5bdac4 100644",
                "--- a/tests/handlers/test_typing.py",
                "+++ b/tests/handlers/test_typing.py",
                "@@ -222,3 +222,3 @@ class TypingNotificationsTestCase(unittest.HomeserverTestCase):",
                "-        (request, channel) = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "diff --git a/tests/handlers/test_user_directory.py b/tests/handlers/test_user_directory.py",
                "index 647a17cb9..1260721db 100644",
                "--- a/tests/handlers/test_user_directory.py",
                "+++ b/tests/handlers/test_user_directory.py",
                "@@ -536,3 +536,3 @@ class TestUserDirSearchDisabled(unittest.HomeserverTestCase):",
                "         # Assert user directory is not empty",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", b\"user_directory/search\", b'{\"search_term\":\"user2\"}'",
                "@@ -544,3 +544,3 @@ class TestUserDirSearchDisabled(unittest.HomeserverTestCase):",
                "         self.config.user_directory_search_enabled = False",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", b\"user_directory/search\", b'{\"search_term\":\"user2\"}'",
                "diff --git a/tests/http/test_additional_resource.py b/tests/http/test_additional_resource.py",
                "index adc318caa..453391a5a 100644",
                "--- a/tests/http/test_additional_resource.py",
                "+++ b/tests/http/test_additional_resource.py",
                "@@ -48,3 +48,3 @@ class AdditionalResourceTests(HomeserverTestCase):",
                "-        request, channel = make_request(self.reactor, FakeSite(resource), \"GET\", \"/\")",
                "+        channel = make_request(self.reactor, FakeSite(resource), \"GET\", \"/\")",
                "@@ -57,3 +57,3 @@ class AdditionalResourceTests(HomeserverTestCase):",
                "-        request, channel = make_request(self.reactor, FakeSite(resource), \"GET\", \"/\")",
                "+        channel = make_request(self.reactor, FakeSite(resource), \"GET\", \"/\")",
                "diff --git a/tests/push/test_http.py b/tests/push/test_http.py",
                "index 8b4af74c5..cb3245d8c 100644",
                "--- a/tests/push/test_http.py",
                "+++ b/tests/push/test_http.py",
                "@@ -669,3 +669,3 @@ class HTTPPusherTests(HomeserverTestCase):",
                "         # count goes down",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "diff --git a/tests/replication/test_auth.py b/tests/replication/test_auth.py",
                "index aee839dc6..c5ab3032a 100644",
                "--- a/tests/replication/test_auth.py",
                "+++ b/tests/replication/test_auth.py",
                "@@ -49,3 +49,3 @@ class WorkerAuthenticationTestCase(BaseMultiWorkerStreamTestCase):",
                "-    def _test_register(self) -> Tuple[SynapseRequest, FakeChannel]:",
                "+    def _test_register(self) -> FakeChannel:",
                "         \"\"\"Run the actual test:",
                "@@ -61,3 +61,3 @@ class WorkerAuthenticationTestCase(BaseMultiWorkerStreamTestCase):",
                "-        request_1, channel_1 = make_request(",
                "+        channel_1 = make_request(",
                "             self.reactor,",
                "@@ -67,3 +67,3 @@ class WorkerAuthenticationTestCase(BaseMultiWorkerStreamTestCase):",
                "             {\"username\": \"user\", \"type\": \"m.login.password\", \"password\": \"bar\"},",
                "-        )  # type: SynapseRequest, FakeChannel",
                "+        )",
                "         self.assertEqual(channel_1.code, 401)",
                "@@ -85,3 +85,3 @@ class WorkerAuthenticationTestCase(BaseMultiWorkerStreamTestCase):",
                "         \"\"\"",
                "-        request, channel = self._test_register()",
                "+        channel = self._test_register()",
                "         self.assertEqual(channel.code, 200)",
                "@@ -95,3 +95,3 @@ class WorkerAuthenticationTestCase(BaseMultiWorkerStreamTestCase):",
                "         \"\"\"",
                "-        request, channel = self._test_register()",
                "+        channel = self._test_register()",
                "         self.assertEqual(channel.code, 500)",
                "@@ -107,3 +107,3 @@ class WorkerAuthenticationTestCase(BaseMultiWorkerStreamTestCase):",
                "         \"\"\"",
                "-        request, channel = self._test_register()",
                "+        channel = self._test_register()",
                "         self.assertEqual(channel.code, 500)",
                "@@ -114,3 +114,3 @@ class WorkerAuthenticationTestCase(BaseMultiWorkerStreamTestCase):",
                "         \"\"\"",
                "-        request, channel = self._test_register()",
                "+        channel = self._test_register()",
                "         self.assertEqual(channel.code, 200)",
                "diff --git a/tests/replication/test_client_reader_shard.py b/tests/replication/test_client_reader_shard.py",
                "index 6cdf6a099..abcc74f93 100644",
                "--- a/tests/replication/test_client_reader_shard.py",
                "+++ b/tests/replication/test_client_reader_shard.py",
                "@@ -43,3 +43,3 @@ class ClientReaderTestCase(BaseMultiWorkerStreamTestCase):",
                "-        request_1, channel_1 = make_request(",
                "+        channel_1 = make_request(",
                "             self.reactor,",
                "@@ -49,3 +49,3 @@ class ClientReaderTestCase(BaseMultiWorkerStreamTestCase):",
                "             {\"username\": \"user\", \"type\": \"m.login.password\", \"password\": \"bar\"},",
                "-        )  # type: SynapseRequest, FakeChannel",
                "+        )",
                "         self.assertEqual(channel_1.code, 401)",
                "@@ -56,3 +56,3 @@ class ClientReaderTestCase(BaseMultiWorkerStreamTestCase):",
                "         # also complete the dummy auth",
                "-        request_2, channel_2 = make_request(",
                "+        channel_2 = make_request(",
                "             self.reactor,",
                "@@ -62,3 +62,3 @@ class ClientReaderTestCase(BaseMultiWorkerStreamTestCase):",
                "             {\"auth\": {\"session\": session, \"type\": \"m.login.dummy\"}},",
                "-        )  # type: SynapseRequest, FakeChannel",
                "+        )",
                "         self.assertEqual(channel_2.code, 200)",
                "@@ -75,3 +75,3 @@ class ClientReaderTestCase(BaseMultiWorkerStreamTestCase):",
                "         site_1 = self._hs_to_site[worker_hs_1]",
                "-        request_1, channel_1 = make_request(",
                "+        channel_1 = make_request(",
                "             self.reactor,",
                "@@ -81,3 +81,3 @@ class ClientReaderTestCase(BaseMultiWorkerStreamTestCase):",
                "             {\"username\": \"user\", \"type\": \"m.login.password\", \"password\": \"bar\"},",
                "-        )  # type: SynapseRequest, FakeChannel",
                "+        )",
                "         self.assertEqual(channel_1.code, 401)",
                "@@ -89,3 +89,3 @@ class ClientReaderTestCase(BaseMultiWorkerStreamTestCase):",
                "         site_2 = self._hs_to_site[worker_hs_2]",
                "-        request_2, channel_2 = make_request(",
                "+        channel_2 = make_request(",
                "             self.reactor,",
                "@@ -95,3 +95,3 @@ class ClientReaderTestCase(BaseMultiWorkerStreamTestCase):",
                "             {\"auth\": {\"session\": session, \"type\": \"m.login.dummy\"}},",
                "-        )  # type: SynapseRequest, FakeChannel",
                "+        )",
                "         self.assertEqual(channel_2.code, 200)",
                "diff --git a/tests/replication/test_multi_media_repo.py b/tests/replication/test_multi_media_repo.py",
                "index 83afd9fd2..d1feca961 100644",
                "--- a/tests/replication/test_multi_media_repo.py",
                "+++ b/tests/replication/test_multi_media_repo.py",
                "@@ -70,3 +70,3 @@ class MediaRepoShardTestCase(BaseMultiWorkerStreamTestCase):",
                "         resource = hs.get_media_repository_resource().children[b\"download\"]",
                "-        _, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "diff --git a/tests/replication/test_sharded_event_persister.py b/tests/replication/test_sharded_event_persister.py",
                "index 77fc3856d..8d494ebc0 100644",
                "--- a/tests/replication/test_sharded_event_persister.py",
                "+++ b/tests/replication/test_sharded_event_persister.py",
                "@@ -182,3 +182,3 @@ class EventPersisterShardTestCase(BaseMultiWorkerStreamTestCase):",
                "         # Do an initial sync so that we're up to date.",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor, sync_hs_site, \"GET\", \"/sync\", access_token=access_token",
                "@@ -208,3 +208,3 @@ class EventPersisterShardTestCase(BaseMultiWorkerStreamTestCase):",
                "         # stream IDs.",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "@@ -238,3 +238,3 @@ class EventPersisterShardTestCase(BaseMultiWorkerStreamTestCase):",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "@@ -263,3 +263,3 @@ class EventPersisterShardTestCase(BaseMultiWorkerStreamTestCase):",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "@@ -281,3 +281,3 @@ class EventPersisterShardTestCase(BaseMultiWorkerStreamTestCase):",
                "         # filtering results based on the vector clock portion.",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "@@ -294,3 +294,3 @@ class EventPersisterShardTestCase(BaseMultiWorkerStreamTestCase):",
                "         # again. This tests that pagination isn't completely broken.",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "@@ -309,3 +309,3 @@ class EventPersisterShardTestCase(BaseMultiWorkerStreamTestCase):",
                "         # Paginating forwards should give the same results",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "@@ -320,3 +320,3 @@ class EventPersisterShardTestCase(BaseMultiWorkerStreamTestCase):",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "diff --git a/tests/rest/admin/test_admin.py b/tests/rest/admin/test_admin.py",
                "index 67d887839..0504cd187 100644",
                "--- a/tests/rest/admin/test_admin.py",
                "+++ b/tests/rest/admin/test_admin.py",
                "@@ -44,3 +44,3 @@ class VersionTestCase(unittest.HomeserverTestCase):",
                "     def test_version_string(self):",
                "-        request, channel = self.make_request(\"GET\", self.url, shorthand=False)",
                "+        channel = self.make_request(\"GET\", self.url, shorthand=False)",
                "@@ -70,3 +70,3 @@ class DeleteGroupTestCase(unittest.HomeserverTestCase):",
                "         # Create a new group",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -86,3 +86,3 @@ class DeleteGroupTestCase(unittest.HomeserverTestCase):",
                "         url = \"/groups/%s/admin/users/invite/%s\" % (group_id, self.other_user)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", url.encode(\"ascii\"), access_token=self.admin_user_tok, content={}",
                "@@ -92,3 +92,3 @@ class DeleteGroupTestCase(unittest.HomeserverTestCase):",
                "         url = \"/groups/%s/self/accept_invite\" % (group_id,)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", url.encode(\"ascii\"), access_token=self.other_user_token, content={}",
                "@@ -103,3 +103,3 @@ class DeleteGroupTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/delete_group/\" + group_id",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -125,3 +125,3 @@ class DeleteGroupTestCase(unittest.HomeserverTestCase):",
                "         url = \"/groups/%s/profile\" % (group_id,)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok",
                "@@ -136,3 +136,3 @@ class DeleteGroupTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/joined_groups\".encode(\"ascii\"), access_token=access_token",
                "@@ -218,3 +218,3 @@ class QuarantineMediaTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"Ensure a piece of media is quarantined when trying to access it.\"\"\"",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "@@ -243,3 +243,3 @@ class QuarantineMediaTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/media/quarantine/example.org/abcde12345\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", url.encode(\"ascii\"), access_token=non_admin_user_tok,",
                "@@ -256,3 +256,3 @@ class QuarantineMediaTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/room/!room%3Aexample.com/media/quarantine\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", url.encode(\"ascii\"), access_token=non_admin_user_tok,",
                "@@ -284,3 +284,3 @@ class QuarantineMediaTestCase(unittest.HomeserverTestCase):",
                "         # Attempt to access the media",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "@@ -301,3 +301,3 @@ class QuarantineMediaTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(\"POST\", url, access_token=admin_user_tok,)",
                "+        channel = self.make_request(\"POST\", url, access_token=admin_user_tok,)",
                "         self.pump(1.0)",
                "@@ -353,3 +353,3 @@ class QuarantineMediaTestCase(unittest.HomeserverTestCase):",
                "             )",
                "-        request, channel = self.make_request(\"POST\", url, access_token=admin_user_tok,)",
                "+        channel = self.make_request(\"POST\", url, access_token=admin_user_tok,)",
                "         self.pump(1.0)",
                "@@ -397,3 +397,3 @@ class QuarantineMediaTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", url.encode(\"ascii\"), access_token=admin_user_tok,",
                "@@ -439,3 +439,3 @@ class QuarantineMediaTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", url.encode(\"ascii\"), access_token=admin_user_tok,",
                "@@ -455,3 +455,3 @@ class QuarantineMediaTestCase(unittest.HomeserverTestCase):",
                "         # Attempt to access each piece of media",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "diff --git a/tests/rest/admin/test_device.py b/tests/rest/admin/test_device.py",
                "index cf3a00759..248c4442c 100644",
                "--- a/tests/rest/admin/test_device.py",
                "+++ b/tests/rest/admin/test_device.py",
                "@@ -52,3 +52,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "+        channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "@@ -57,3 +57,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"PUT\", self.url, b\"{}\")",
                "+        channel = self.make_request(\"PUT\", self.url, b\"{}\")",
                "@@ -62,3 +62,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"DELETE\", self.url, b\"{}\")",
                "+        channel = self.make_request(\"DELETE\", self.url, b\"{}\")",
                "@@ -71,3 +71,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url, access_token=self.other_user_token,",
                "@@ -78,3 +78,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", self.url, access_token=self.other_user_token,",
                "@@ -85,3 +85,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"DELETE\", self.url, access_token=self.other_user_token,",
                "@@ -101,5 +101,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.admin_user_tok,)",
                "@@ -108,5 +106,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"PUT\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"PUT\", url, access_token=self.admin_user_tok,)",
                "@@ -115,5 +111,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"DELETE\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"DELETE\", url, access_token=self.admin_user_tok,)",
                "@@ -131,5 +125,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.admin_user_tok,)",
                "@@ -138,5 +130,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"PUT\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"PUT\", url, access_token=self.admin_user_tok,)",
                "@@ -145,5 +135,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"DELETE\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"DELETE\", url, access_token=self.admin_user_tok,)",
                "@@ -160,5 +148,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.admin_user_tok,)",
                "@@ -167,5 +153,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"PUT\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"PUT\", url, access_token=self.admin_user_tok,)",
                "@@ -173,5 +157,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"DELETE\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"DELETE\", url, access_token=self.admin_user_tok,)",
                "@@ -199,3 +181,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "         body = json.dumps(update)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -210,5 +192,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "         # Ensure the display name was not updated.",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "@@ -229,5 +209,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"PUT\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"PUT\", self.url, access_token=self.admin_user_tok,)",
                "@@ -236,5 +214,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "         # Ensure the display name was not updated.",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "@@ -249,3 +225,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "         body = json.dumps({\"display_name\": \"new displayname\"})",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -259,5 +235,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "         # Check new display_name",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "@@ -270,5 +244,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "@@ -293,3 +265,3 @@ class DeviceRestTestCase(unittest.HomeserverTestCase):",
                "         # Delete device",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"DELETE\", self.url, access_token=self.admin_user_tok,",
                "@@ -325,3 +297,3 @@ class DevicesRestTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "+        channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "@@ -336,5 +308,3 @@ class DevicesRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=other_user_token,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=other_user_token,)",
                "@@ -348,5 +318,3 @@ class DevicesRestTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v2/users/@unknown_person:test/devices\"",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.admin_user_tok,)",
                "@@ -361,5 +329,3 @@ class DevicesRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.admin_user_tok,)",
                "@@ -375,5 +341,3 @@ class DevicesRestTestCase(unittest.HomeserverTestCase):",
                "         # Get devices",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "@@ -393,5 +357,3 @@ class DevicesRestTestCase(unittest.HomeserverTestCase):",
                "         # Get devices",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "@@ -433,3 +395,3 @@ class DeleteDevicesRestTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"POST\", self.url, b\"{}\")",
                "+        channel = self.make_request(\"POST\", self.url, b\"{}\")",
                "@@ -444,5 +406,3 @@ class DeleteDevicesRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"POST\", self.url, access_token=other_user_token,",
                "-        )",
                "+        channel = self.make_request(\"POST\", self.url, access_token=other_user_token,)",
                "@@ -456,5 +416,3 @@ class DeleteDevicesRestTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v2/users/@unknown_person:test/delete_devices\"",
                "-        request, channel = self.make_request(",
                "-            \"POST\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"POST\", url, access_token=self.admin_user_tok,)",
                "@@ -469,5 +427,3 @@ class DeleteDevicesRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"POST\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"POST\", url, access_token=self.admin_user_tok,)",
                "@@ -481,3 +437,3 @@ class DeleteDevicesRestTestCase(unittest.HomeserverTestCase):",
                "         body = json.dumps({\"devices\": [\"unknown_device1\", \"unknown_device2\"]})",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -512,3 +468,3 @@ class DeleteDevicesRestTestCase(unittest.HomeserverTestCase):",
                "         body = json.dumps({\"devices\": device_ids})",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "diff --git a/tests/rest/admin/test_event_reports.py b/tests/rest/admin/test_event_reports.py",
                "index 11b72c10f..aa389df12 100644",
                "--- a/tests/rest/admin/test_event_reports.py",
                "+++ b/tests/rest/admin/test_event_reports.py",
                "@@ -76,3 +76,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "+        channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "@@ -86,5 +86,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.other_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.other_user_tok,)",
                "@@ -98,5 +96,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "@@ -113,3 +109,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?limit=5\", access_token=self.admin_user_tok,",
                "@@ -128,3 +124,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?from=5\", access_token=self.admin_user_tok,",
                "@@ -143,3 +139,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?from=5&limit=10\", access_token=self.admin_user_tok,",
                "@@ -158,3 +154,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -178,3 +174,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -198,3 +194,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -220,3 +216,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "         # fetch the most recent first, largest timestamp",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?dir=b\", access_token=self.admin_user_tok,",
                "@@ -236,3 +232,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "         # fetch the oldest first, smallest timestamp",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?dir=f\", access_token=self.admin_user_tok,",
                "@@ -256,3 +252,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?dir=bar\", access_token=self.admin_user_tok,",
                "@@ -269,3 +265,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?limit=-5\", access_token=self.admin_user_tok,",
                "@@ -281,3 +277,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?from=-5\", access_token=self.admin_user_tok,",
                "@@ -295,3 +291,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "         # Number of results is the number of entries",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?limit=20\", access_token=self.admin_user_tok,",
                "@@ -306,3 +302,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "         # Number of max results is larger than the number of entries",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?limit=21\", access_token=self.admin_user_tok,",
                "@@ -317,3 +313,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "         # Number of max results is smaller than the number of entries",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?limit=19\", access_token=self.admin_user_tok,",
                "@@ -329,3 +325,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "         #  `next_token` does not appear",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?from=19\", access_token=self.admin_user_tok,",
                "@@ -344,3 +340,3 @@ class EventReportsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -401,3 +397,3 @@ class EventReportDetailTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "+        channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "@@ -411,5 +407,3 @@ class EventReportDetailTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.other_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.other_user_tok,)",
                "@@ -423,5 +417,3 @@ class EventReportDetailTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "@@ -436,3 +428,3 @@ class EventReportDetailTestCase(unittest.HomeserverTestCase):",
                "         # `report_id` is negative",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -450,3 +442,3 @@ class EventReportDetailTestCase(unittest.HomeserverTestCase):",
                "         # `report_id` is a non-numerical string",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -464,3 +456,3 @@ class EventReportDetailTestCase(unittest.HomeserverTestCase):",
                "         # `report_id` is undefined",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -482,3 +474,3 @@ class EventReportDetailTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -498,3 +490,3 @@ class EventReportDetailTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "diff --git a/tests/rest/admin/test_media.py b/tests/rest/admin/test_media.py",
                "index dadf9db66..c2b998cda 100644",
                "--- a/tests/rest/admin/test_media.py",
                "+++ b/tests/rest/admin/test_media.py",
                "@@ -52,3 +52,3 @@ class DeleteMediaByIDTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"DELETE\", url, b\"{}\")",
                "+        channel = self.make_request(\"DELETE\", url, b\"{}\")",
                "@@ -66,5 +66,3 @@ class DeleteMediaByIDTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"DELETE\", url, access_token=self.other_user_token,",
                "-        )",
                "+        channel = self.make_request(\"DELETE\", url, access_token=self.other_user_token,)",
                "@@ -79,5 +77,3 @@ class DeleteMediaByIDTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"DELETE\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"DELETE\", url, access_token=self.admin_user_tok,)",
                "@@ -92,5 +88,3 @@ class DeleteMediaByIDTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"DELETE\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"DELETE\", url, access_token=self.admin_user_tok,)",
                "@@ -123,3 +117,3 @@ class DeleteMediaByIDTestCase(unittest.HomeserverTestCase):",
                "         # Attempt to access media",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "@@ -148,5 +142,3 @@ class DeleteMediaByIDTestCase(unittest.HomeserverTestCase):",
                "         # Delete media",
                "-        request, channel = self.make_request(",
                "-            \"DELETE\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"DELETE\", url, access_token=self.admin_user_tok,)",
                "@@ -159,3 +151,3 @@ class DeleteMediaByIDTestCase(unittest.HomeserverTestCase):",
                "         # Attempt to access media",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "@@ -206,3 +198,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"POST\", self.url, b\"{}\")",
                "+        channel = self.make_request(\"POST\", self.url, b\"{}\")",
                "@@ -218,3 +210,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", self.url, access_token=self.other_user_token,",
                "@@ -231,3 +223,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", url + \"?before_ts=1234\", access_token=self.admin_user_tok,",
                "@@ -242,5 +234,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(",
                "-            \"POST\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"POST\", self.url, access_token=self.admin_user_tok,)",
                "@@ -256,3 +246,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", self.url + \"?before_ts=-1234\", access_token=self.admin_user_tok,",
                "@@ -267,3 +257,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -280,3 +270,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -310,3 +300,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "         now_ms = self.clock.time_msec()",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -334,3 +324,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -346,3 +336,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "         now_ms = self.clock.time_msec()",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -369,3 +359,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "         now_ms = self.clock.time_msec()",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -380,3 +370,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "         now_ms = self.clock.time_msec()",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -403,3 +393,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "         # set media as avatar",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -412,3 +402,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "         now_ms = self.clock.time_msec()",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -423,3 +413,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "         now_ms = self.clock.time_msec()",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -447,3 +437,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "         room_id = self.helper.create_room_as(self.admin_user, tok=self.admin_user_tok)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -456,3 +446,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "         now_ms = self.clock.time_msec()",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -467,3 +457,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "         now_ms = self.clock.time_msec()",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -514,3 +504,3 @@ class DeleteMediaByDateSizeTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "diff --git a/tests/rest/admin/test_room.py b/tests/rest/admin/test_room.py",
                "index 9c100050d..ca20bcad0 100644",
                "--- a/tests/rest/admin/test_room.py",
                "+++ b/tests/rest/admin/test_room.py",
                "@@ -81,3 +81,3 @@ class ShutdownRoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/shutdown_room/\" + room_id",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -105,3 +105,3 @@ class ShutdownRoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"rooms/%s/state/m.room.history_visibility\" % (room_id,)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -115,3 +115,3 @@ class ShutdownRoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/shutdown_room/\" + room_id",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -132,3 +132,3 @@ class ShutdownRoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"rooms/%s/initialSync\" % (room_id,)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok",
                "@@ -140,3 +140,3 @@ class ShutdownRoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"events?timeout=0&room_id=\" + room_id",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok",
                "@@ -186,3 +186,3 @@ class DeleteRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", self.url, json.dumps({}), access_token=self.other_user_tok,",
                "@@ -199,3 +199,3 @@ class DeleteRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", url, json.dumps({}), access_token=self.admin_user_tok,",
                "@@ -212,3 +212,3 @@ class DeleteRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", url, json.dumps({}), access_token=self.admin_user_tok,",
                "@@ -227,3 +227,3 @@ class DeleteRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -246,3 +246,3 @@ class DeleteRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -264,3 +264,3 @@ class DeleteRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -280,3 +280,3 @@ class DeleteRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -306,3 +306,3 @@ class DeleteRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -339,3 +339,3 @@ class DeleteRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -373,3 +373,3 @@ class DeleteRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -420,3 +420,3 @@ class DeleteRoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/rooms/%s/delete\" % self.room_id",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -450,3 +450,3 @@ class DeleteRoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"rooms/%s/state/m.room.history_visibility\" % (self.room_id,)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -467,3 +467,3 @@ class DeleteRoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/rooms/%s/delete\" % self.room_id",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -532,3 +532,3 @@ class DeleteRoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"rooms/%s/initialSync\" % (room_id,)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok",
                "@@ -540,3 +540,3 @@ class DeleteRoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"events?timeout=0&room_id=\" + room_id",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok",
                "@@ -571,3 +571,3 @@ class PurgeRoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/purge_room\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -625,3 +625,3 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/rooms\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "@@ -706,3 +706,3 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "             )",
                "-            request, channel = self.make_request(",
                "+            channel = self.make_request(",
                "                 \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "@@ -746,3 +746,3 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/rooms?from=%d&limit=%d\" % (start, limit)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "@@ -766,3 +766,3 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_matrix/client/r0/directory/room/%s\" % (urllib.parse.quote(test_alias),)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -796,3 +796,3 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/rooms\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "@@ -837,3 +837,3 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "             )",
                "-            request, channel = self.make_request(",
                "+            channel = self.make_request(",
                "                 \"PUT\",",
                "@@ -877,3 +877,3 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "                 url += \"&dir=b\"",
                "-            request, channel = self.make_request(",
                "+            channel = self.make_request(",
                "                 \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "@@ -1013,3 +1013,3 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "             url = \"/_synapse/admin/v1/rooms?search_term=%s\" % (search_term,)",
                "-            request, channel = self.make_request(",
                "+            channel = self.make_request(",
                "                 \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "@@ -1074,3 +1074,3 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/rooms/%s\" % (room_id_1,)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "@@ -1104,3 +1104,3 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/rooms/%s\" % (room_id_1,)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "@@ -1116,3 +1116,3 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/rooms/%s\" % (room_id_1,)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "@@ -1126,3 +1126,3 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/rooms/%s\" % (room_id_1,)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "@@ -1155,3 +1155,3 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/rooms/%s/members\" % (room_id_1,)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "@@ -1166,3 +1166,3 @@ class RoomTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/rooms/%s/members\" % (room_id_2,)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "@@ -1206,3 +1206,3 @@ class JoinAliasRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1222,3 +1222,3 @@ class JoinAliasRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1238,3 +1238,3 @@ class JoinAliasRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1254,3 +1254,3 @@ class JoinAliasRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1274,3 +1274,3 @@ class JoinAliasRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1291,3 +1291,3 @@ class JoinAliasRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1310,3 +1310,3 @@ class JoinAliasRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1322,3 +1322,3 @@ class JoinAliasRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/_matrix/client/r0/joined_rooms\", access_token=self.second_tok,",
                "@@ -1339,3 +1339,3 @@ class JoinAliasRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1369,3 +1369,3 @@ class JoinAliasRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/_matrix/client/r0/joined_rooms\", access_token=self.admin_user_tok,",
                "@@ -1380,3 +1380,3 @@ class JoinAliasRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1391,3 +1391,3 @@ class JoinAliasRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/_matrix/client/r0/joined_rooms\", access_token=self.second_tok,",
                "@@ -1408,3 +1408,3 @@ class JoinAliasRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1420,3 +1420,3 @@ class JoinAliasRoomTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/_matrix/client/r0/joined_rooms\", access_token=self.second_tok,",
                "diff --git a/tests/rest/admin/test_statistics.py b/tests/rest/admin/test_statistics.py",
                "index 907b49f88..73f8a8ec9 100644",
                "--- a/tests/rest/admin/test_statistics.py",
                "+++ b/tests/rest/admin/test_statistics.py",
                "@@ -48,3 +48,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "+        channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "@@ -57,3 +57,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url, json.dumps({}), access_token=self.other_user_tok,",
                "@@ -69,3 +69,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # unkown order_by",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?order_by=bar\", access_token=self.admin_user_tok,",
                "@@ -77,3 +77,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # negative from",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?from=-5\", access_token=self.admin_user_tok,",
                "@@ -85,3 +85,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # negative limit",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?limit=-5\", access_token=self.admin_user_tok,",
                "@@ -93,3 +93,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # negative from_ts",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?from_ts=-1234\", access_token=self.admin_user_tok,",
                "@@ -101,3 +101,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # negative until_ts",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?until_ts=-1234\", access_token=self.admin_user_tok,",
                "@@ -109,3 +109,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # until_ts smaller from_ts",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -119,3 +119,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # empty search term",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?search_term=\", access_token=self.admin_user_tok,",
                "@@ -127,3 +127,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # invalid search order",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?dir=bar\", access_token=self.admin_user_tok,",
                "@@ -140,3 +140,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?limit=5\", access_token=self.admin_user_tok,",
                "@@ -156,3 +156,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?from=5\", access_token=self.admin_user_tok,",
                "@@ -172,3 +172,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?from=5&limit=10\", access_token=self.admin_user_tok,",
                "@@ -192,3 +192,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # Number of results is the number of entries",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?limit=20\", access_token=self.admin_user_tok,",
                "@@ -203,3 +203,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # Number of max results is larger than the number of entries",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?limit=21\", access_token=self.admin_user_tok,",
                "@@ -214,3 +214,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # Number of max results is smaller than the number of entries",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?limit=19\", access_token=self.admin_user_tok,",
                "@@ -225,3 +225,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # Check `next_token` does not appear",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?from=19\", access_token=self.admin_user_tok,",
                "@@ -240,5 +240,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "@@ -318,5 +316,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # list all media when filter is not set",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "         self.assertEqual(200, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -326,3 +322,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # result is 0",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?from_ts=%s\" % (ts1,), access_token=self.admin_user_tok,",
                "@@ -339,3 +335,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # filter media between `ts1` and `ts2`",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -348,3 +344,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # filter media until `ts2` and earlier",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?until_ts=%s\" % (ts2,), access_token=self.admin_user_tok,",
                "@@ -358,5 +354,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # check without filter get all users",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "         self.assertEqual(200, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -365,3 +359,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # filter user 1 and 10-19 by `user_id`",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -374,3 +368,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # filter on this user in `displayname`",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -384,3 +378,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "         # filter and get empty result",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?search_term=foobar\", access_token=self.admin_user_tok,",
                "@@ -449,3 +443,3 @@ class UserMediaStatisticsTestCase(unittest.HomeserverTestCase):",
                "             url += \"&dir=%s\" % (dir,)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", url.encode(\"ascii\"), access_token=self.admin_user_tok,",
                "diff --git a/tests/rest/admin/test_user.py b/tests/rest/admin/test_user.py",
                "index ba1438cdc..582f98322 100644",
                "--- a/tests/rest/admin/test_user.py",
                "+++ b/tests/rest/admin/test_user.py",
                "@@ -72,3 +72,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"POST\", self.url, b\"{}\")",
                "+        channel = self.make_request(\"POST\", self.url, b\"{}\")",
                "@@ -89,3 +89,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"GET\", self.url)",
                "+        channel = self.make_request(\"GET\", self.url)",
                "@@ -98,3 +98,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"GET\", self.url)",
                "+        channel = self.make_request(\"GET\", self.url)",
                "         nonce = channel.json_body[\"nonce\"]",
                "@@ -105,3 +105,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         body = json.dumps({\"nonce\": nonce})",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -113,3 +113,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -122,3 +122,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"GET\", self.url)",
                "+        channel = self.make_request(\"GET\", self.url)",
                "         nonce = channel.json_body[\"nonce\"]",
                "@@ -138,3 +138,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -148,3 +148,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"GET\", self.url)",
                "+        channel = self.make_request(\"GET\", self.url)",
                "         nonce = channel.json_body[\"nonce\"]",
                "@@ -167,3 +167,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -176,3 +176,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"GET\", self.url)",
                "+        channel = self.make_request(\"GET\", self.url)",
                "         nonce = channel.json_body[\"nonce\"]",
                "@@ -192,3 +192,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -198,3 +198,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         # Now, try and reuse it",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -211,3 +211,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         def nonce():",
                "-            request, channel = self.make_request(\"GET\", self.url)",
                "+            channel = self.make_request(\"GET\", self.url)",
                "             return channel.json_body[\"nonce\"]",
                "@@ -220,3 +220,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         body = json.dumps({})",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -231,3 +231,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         body = json.dumps({\"nonce\": nonce()})",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -238,3 +238,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         body = json.dumps({\"nonce\": nonce(), \"username\": 1234})",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -245,3 +245,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         body = json.dumps({\"nonce\": nonce(), \"username\": \"abcd\\u0000\"})",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -252,3 +252,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         body = json.dumps({\"nonce\": nonce(), \"username\": \"a\" * 1000})",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -263,3 +263,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         body = json.dumps({\"nonce\": nonce(), \"username\": \"a\"})",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -270,3 +270,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         body = json.dumps({\"nonce\": nonce(), \"username\": \"a\", \"password\": 1234})",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -277,3 +277,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         body = json.dumps({\"nonce\": nonce(), \"username\": \"a\", \"password\": \"abcd\\u0000\"})",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -284,3 +284,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         body = json.dumps({\"nonce\": nonce(), \"username\": \"a\", \"password\": \"A\" * 1000})",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -302,3 +302,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -313,3 +313,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         # set no displayname",
                "-        request, channel = self.make_request(\"GET\", self.url)",
                "+        channel = self.make_request(\"GET\", self.url)",
                "         nonce = channel.json_body[\"nonce\"]",
                "@@ -323,3 +323,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -328,3 +328,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"GET\", \"/profile/@bob1:test/displayname\")",
                "+        channel = self.make_request(\"GET\", \"/profile/@bob1:test/displayname\")",
                "         self.assertEqual(200, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -333,3 +333,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         # displayname is None",
                "-        request, channel = self.make_request(\"GET\", self.url)",
                "+        channel = self.make_request(\"GET\", self.url)",
                "         nonce = channel.json_body[\"nonce\"]",
                "@@ -349,3 +349,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -354,3 +354,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"GET\", \"/profile/@bob2:test/displayname\")",
                "+        channel = self.make_request(\"GET\", \"/profile/@bob2:test/displayname\")",
                "         self.assertEqual(200, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -359,3 +359,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         # displayname is empty",
                "-        request, channel = self.make_request(\"GET\", self.url)",
                "+        channel = self.make_request(\"GET\", self.url)",
                "         nonce = channel.json_body[\"nonce\"]",
                "@@ -375,3 +375,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -380,3 +380,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"GET\", \"/profile/@bob3:test/displayname\")",
                "+        channel = self.make_request(\"GET\", \"/profile/@bob3:test/displayname\")",
                "         self.assertEqual(404, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -384,3 +384,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         # set displayname",
                "-        request, channel = self.make_request(\"GET\", self.url)",
                "+        channel = self.make_request(\"GET\", self.url)",
                "         nonce = channel.json_body[\"nonce\"]",
                "@@ -400,3 +400,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -405,3 +405,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"GET\", \"/profile/@bob4:test/displayname\")",
                "+        channel = self.make_request(\"GET\", \"/profile/@bob4:test/displayname\")",
                "         self.assertEqual(200, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -431,3 +431,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         # Register new user with admin API",
                "-        request, channel = self.make_request(\"GET\", self.url)",
                "+        channel = self.make_request(\"GET\", self.url)",
                "         nonce = channel.json_body[\"nonce\"]",
                "@@ -450,3 +450,3 @@ class UserRegisterTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "+        channel = self.make_request(\"POST\", self.url, body.encode(\"utf8\"))",
                "@@ -475,3 +475,3 @@ class UsersListTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "+        channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "@@ -484,3 +484,3 @@ class UsersListTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -522,5 +522,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.other_user_token,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.other_user_token,)",
                "@@ -529,3 +527,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", url, access_token=self.other_user_token, content=b\"{}\",",
                "@@ -541,3 +539,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -567,3 +565,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -583,5 +581,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         # Get user",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.admin_user_tok,)",
                "@@ -614,3 +610,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -630,5 +626,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         # Get user",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.admin_user_tok,)",
                "@@ -658,5 +652,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         # before limit of monthly active users is reached",
                "-        request, channel = self.make_request(",
                "-            \"GET\", \"/sync\", access_token=self.admin_user_tok",
                "-        )",
                "+        channel = self.make_request(\"GET\", \"/sync\", access_token=self.admin_user_tok)",
                "@@ -683,3 +675,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -722,3 +714,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -759,3 +751,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -803,3 +795,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -829,3 +821,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -846,3 +838,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -858,3 +850,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         # Get user",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url_other_user, access_token=self.admin_user_tok,",
                "@@ -876,3 +868,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -889,3 +881,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         # Get user",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url_other_user, access_token=self.admin_user_tok,",
                "@@ -906,3 +898,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -919,3 +911,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         # Get user",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url_other_user, access_token=self.admin_user_tok,",
                "@@ -933,3 +925,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         # Deactivate the user.",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -946,3 +938,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         # Attempt to reactivate the user (without a password).",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -955,3 +947,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         # Reactivate the user.",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -966,3 +958,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         # Get user",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url_other_user, access_token=self.admin_user_tok,",
                "@@ -983,3 +975,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -995,3 +987,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         # Get user",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url_other_user, access_token=self.admin_user_tok,",
                "@@ -1013,3 +1005,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -1025,5 +1017,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         # Get user",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.admin_user_tok,)",
                "@@ -1037,3 +1027,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -1047,5 +1037,3 @@ class UserRestTestCase(unittest.HomeserverTestCase):",
                "         # Check user is not deactivated",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.admin_user_tok,)",
                "@@ -1091,3 +1079,3 @@ class UserMembershipRestTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "+        channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "@@ -1102,5 +1090,3 @@ class UserMembershipRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=other_user_token,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=other_user_token,)",
                "@@ -1114,5 +1100,3 @@ class UserMembershipRestTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/users/@unknown_person:test/joined_rooms\"",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.admin_user_tok,)",
                "@@ -1127,5 +1111,3 @@ class UserMembershipRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.admin_user_tok,)",
                "@@ -1140,5 +1122,3 @@ class UserMembershipRestTestCase(unittest.HomeserverTestCase):",
                "         # Get rooms",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "@@ -1159,5 +1139,3 @@ class UserMembershipRestTestCase(unittest.HomeserverTestCase):",
                "         # Get rooms",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "@@ -1190,3 +1168,3 @@ class PushersRestTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "+        channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "@@ -1201,5 +1179,3 @@ class PushersRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=other_user_token,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=other_user_token,)",
                "@@ -1213,5 +1189,3 @@ class PushersRestTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/users/@unknown_person:test/pushers\"",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.admin_user_tok,)",
                "@@ -1226,5 +1200,3 @@ class PushersRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.admin_user_tok,)",
                "@@ -1239,5 +1211,3 @@ class PushersRestTestCase(unittest.HomeserverTestCase):",
                "         # Get pushers",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "@@ -1268,5 +1238,3 @@ class PushersRestTestCase(unittest.HomeserverTestCase):",
                "         # Get pushers",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "@@ -1309,3 +1277,3 @@ class UserMediaRestTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "+        channel = self.make_request(\"GET\", self.url, b\"{}\")",
                "@@ -1320,5 +1288,3 @@ class UserMediaRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=other_user_token,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=other_user_token,)",
                "@@ -1332,5 +1298,3 @@ class UserMediaRestTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_synapse/admin/v1/users/@unknown_person:test/media\"",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.admin_user_tok,)",
                "@@ -1345,5 +1309,3 @@ class UserMediaRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url, access_token=self.admin_user_tok,)",
                "@@ -1361,3 +1323,3 @@ class UserMediaRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?limit=5\", access_token=self.admin_user_tok,",
                "@@ -1380,3 +1342,3 @@ class UserMediaRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?from=5\", access_token=self.admin_user_tok,",
                "@@ -1399,3 +1361,3 @@ class UserMediaRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?from=5&limit=10\", access_token=self.admin_user_tok,",
                "@@ -1414,3 +1376,3 @@ class UserMediaRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?limit=-5\", access_token=self.admin_user_tok,",
                "@@ -1426,3 +1388,3 @@ class UserMediaRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?from=-5\", access_token=self.admin_user_tok,",
                "@@ -1444,3 +1406,3 @@ class UserMediaRestTestCase(unittest.HomeserverTestCase):",
                "         # Number of results is the number of entries",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?limit=20\", access_token=self.admin_user_tok,",
                "@@ -1455,3 +1417,3 @@ class UserMediaRestTestCase(unittest.HomeserverTestCase):",
                "         # Number of max results is larger than the number of entries",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?limit=21\", access_token=self.admin_user_tok,",
                "@@ -1466,3 +1428,3 @@ class UserMediaRestTestCase(unittest.HomeserverTestCase):",
                "         # Number of max results is smaller than the number of entries",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?limit=19\", access_token=self.admin_user_tok,",
                "@@ -1478,3 +1440,3 @@ class UserMediaRestTestCase(unittest.HomeserverTestCase):",
                "         #  `next_token` does not appear",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url + \"?from=19\", access_token=self.admin_user_tok,",
                "@@ -1493,5 +1455,3 @@ class UserMediaRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "@@ -1510,5 +1470,3 @@ class UserMediaRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url, access_token=self.admin_user_tok,)",
                "@@ -1578,3 +1536,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "     def _get_token(self) -> str:",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", self.url, b\"{}\", access_token=self.admin_user_tok",
                "@@ -1587,3 +1545,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"POST\", self.url, b\"{}\")",
                "+        channel = self.make_request(\"POST\", self.url, b\"{}\")",
                "@@ -1595,3 +1553,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", self.url, b\"{}\", access_token=self.other_user_tok",
                "@@ -1623,3 +1581,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "         # Check that we don't see a new device in our devices list",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"devices\", b\"{}\", access_token=self.other_user_tok",
                "@@ -1638,5 +1596,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "         # Test that we can successfully make a request",
                "-        request, channel = self.make_request(",
                "-            \"GET\", \"devices\", b\"{}\", access_token=puppet_token",
                "-        )",
                "+        channel = self.make_request(\"GET\", \"devices\", b\"{}\", access_token=puppet_token)",
                "         self.assertEqual(200, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -1644,5 +1600,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "         # Logout with the puppet token",
                "-        request, channel = self.make_request(",
                "-            \"POST\", \"logout\", b\"{}\", access_token=puppet_token",
                "-        )",
                "+        channel = self.make_request(\"POST\", \"logout\", b\"{}\", access_token=puppet_token)",
                "         self.assertEqual(200, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -1650,5 +1604,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "         # The puppet token should no longer work",
                "-        request, channel = self.make_request(",
                "-            \"GET\", \"devices\", b\"{}\", access_token=puppet_token",
                "-        )",
                "+        channel = self.make_request(\"GET\", \"devices\", b\"{}\", access_token=puppet_token)",
                "         self.assertEqual(401, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -1656,3 +1608,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "         # .. but the real user's tokens should still work",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"devices\", b\"{}\", access_token=self.other_user_tok",
                "@@ -1669,5 +1621,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "         # Test that we can successfully make a request",
                "-        request, channel = self.make_request(",
                "-            \"GET\", \"devices\", b\"{}\", access_token=puppet_token",
                "-        )",
                "+        channel = self.make_request(\"GET\", \"devices\", b\"{}\", access_token=puppet_token)",
                "         self.assertEqual(200, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -1675,3 +1625,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "         # Logout all with the real user token",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", \"logout/all\", b\"{}\", access_token=self.other_user_tok",
                "@@ -1681,5 +1631,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "         # The puppet token should still work",
                "-        request, channel = self.make_request(",
                "-            \"GET\", \"devices\", b\"{}\", access_token=puppet_token",
                "-        )",
                "+        channel = self.make_request(\"GET\", \"devices\", b\"{}\", access_token=puppet_token)",
                "         self.assertEqual(200, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -1687,3 +1635,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "         # .. but the real user's tokens shouldn't",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"devices\", b\"{}\", access_token=self.other_user_tok",
                "@@ -1700,5 +1648,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "         # Test that we can successfully make a request",
                "-        request, channel = self.make_request(",
                "-            \"GET\", \"devices\", b\"{}\", access_token=puppet_token",
                "-        )",
                "+        channel = self.make_request(\"GET\", \"devices\", b\"{}\", access_token=puppet_token)",
                "         self.assertEqual(200, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -1706,3 +1652,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "         # Logout all with the admin user token",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", \"logout/all\", b\"{}\", access_token=self.admin_user_tok",
                "@@ -1712,5 +1658,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "         # The puppet token should no longer work",
                "-        request, channel = self.make_request(",
                "-            \"GET\", \"devices\", b\"{}\", access_token=puppet_token",
                "-        )",
                "+        channel = self.make_request(\"GET\", \"devices\", b\"{}\", access_token=puppet_token)",
                "         self.assertEqual(401, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -1718,3 +1662,3 @@ class UserTokenRestTestCase(unittest.HomeserverTestCase):",
                "         # .. but the real user's tokens should still work",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"devices\", b\"{}\", access_token=self.other_user_tok",
                "@@ -1800,3 +1744,3 @@ class WhoisRestTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(\"GET\", self.url1, b\"{}\")",
                "+        channel = self.make_request(\"GET\", self.url1, b\"{}\")",
                "         self.assertEqual(401, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -1804,3 +1748,3 @@ class WhoisRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"GET\", self.url2, b\"{}\")",
                "+        channel = self.make_request(\"GET\", self.url2, b\"{}\")",
                "         self.assertEqual(401, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -1815,5 +1759,3 @@ class WhoisRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url1, access_token=other_user2_token,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url1, access_token=other_user2_token,)",
                "         self.assertEqual(403, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -1821,5 +1763,3 @@ class WhoisRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url2, access_token=other_user2_token,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url2, access_token=other_user2_token,)",
                "         self.assertEqual(403, int(channel.result[\"code\"]), msg=channel.result[\"body\"])",
                "@@ -1834,5 +1774,3 @@ class WhoisRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url1, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url1, access_token=self.admin_user_tok,)",
                "         self.assertEqual(400, channel.code, msg=channel.json_body)",
                "@@ -1840,5 +1778,3 @@ class WhoisRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", url2, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", url2, access_token=self.admin_user_tok,)",
                "         self.assertEqual(400, channel.code, msg=channel.json_body)",
                "@@ -1850,5 +1786,3 @@ class WhoisRestTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url1, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url1, access_token=self.admin_user_tok,)",
                "         self.assertEqual(200, channel.code, msg=channel.json_body)",
                "@@ -1857,5 +1791,3 @@ class WhoisRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url2, access_token=self.admin_user_tok,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url2, access_token=self.admin_user_tok,)",
                "         self.assertEqual(200, channel.code, msg=channel.json_body)",
                "@@ -1870,5 +1802,3 @@ class WhoisRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url1, access_token=other_user_token,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url1, access_token=other_user_token,)",
                "         self.assertEqual(200, channel.code, msg=channel.json_body)",
                "@@ -1877,5 +1807,3 @@ class WhoisRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", self.url2, access_token=other_user_token,",
                "-        )",
                "+        channel = self.make_request(\"GET\", self.url2, access_token=other_user_token,)",
                "         self.assertEqual(200, channel.code, msg=channel.json_body)",
                "diff --git a/tests/rest/client/test_consent.py b/tests/rest/client/test_consent.py",
                "index e2e6a5e16..c74693e9b 100644",
                "--- a/tests/rest/client/test_consent.py",
                "+++ b/tests/rest/client/test_consent.py",
                "@@ -63,3 +63,3 @@ class ConsentResourceTestCase(unittest.HomeserverTestCase):",
                "         resource = consent_resource.ConsentResource(self.hs)",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor, FakeSite(resource), \"GET\", \"/consent?v=1\", shorthand=False",
                "@@ -84,3 +84,3 @@ class ConsentResourceTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "@@ -99,3 +99,3 @@ class ConsentResourceTestCase(unittest.HomeserverTestCase):",
                "         # POST to the consent page, saying we've agreed",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "@@ -111,3 +111,3 @@ class ConsentResourceTestCase(unittest.HomeserverTestCase):",
                "         # changed",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "diff --git a/tests/rest/client/test_ephemeral_message.py b/tests/rest/client/test_ephemeral_message.py",
                "index a1ccc4ee9..56937dcd2 100644",
                "--- a/tests/rest/client/test_ephemeral_message.py",
                "+++ b/tests/rest/client/test_ephemeral_message.py",
                "@@ -95,3 +95,3 @@ class EphemeralMessageTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"GET\", url)",
                "+        channel = self.make_request(\"GET\", url)",
                "diff --git a/tests/rest/client/test_identity.py b/tests/rest/client/test_identity.py",
                "index 259c6a198..c0a9fc692 100644",
                "--- a/tests/rest/client/test_identity.py",
                "+++ b/tests/rest/client/test_identity.py",
                "@@ -45,5 +45,3 @@ class IdentityTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            b\"POST\", \"/createRoom\", b\"{}\", access_token=tok",
                "-        )",
                "+        channel = self.make_request(b\"POST\", \"/createRoom\", b\"{}\", access_token=tok)",
                "         self.assertEquals(channel.result[\"code\"], b\"200\", channel.result)",
                "@@ -58,3 +56,3 @@ class IdentityTestCase(unittest.HomeserverTestCase):",
                "         request_url = (\"/rooms/%s/invite\" % (room_id)).encode(\"ascii\")",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             b\"POST\", request_url, request_data, access_token=tok",
                "diff --git a/tests/rest/client/test_redactions.py b/tests/rest/client/test_redactions.py",
                "index c1f516cc9..f0707646b 100644",
                "--- a/tests/rest/client/test_redactions.py",
                "+++ b/tests/rest/client/test_redactions.py",
                "@@ -71,5 +71,3 @@ class RedactionsTestCase(HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"POST\", path, content={}, access_token=access_token",
                "-        )",
                "+        channel = self.make_request(\"POST\", path, content={}, access_token=access_token)",
                "         self.assertEqual(int(channel.result[\"code\"]), expect_code)",
                "@@ -78,5 +76,3 @@ class RedactionsTestCase(HomeserverTestCase):",
                "     def _sync_room_timeline(self, access_token, room_id):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", \"sync\", access_token=self.mod_access_token",
                "-        )",
                "+        channel = self.make_request(\"GET\", \"sync\", access_token=self.mod_access_token)",
                "         self.assertEqual(channel.result[\"code\"], b\"200\")",
                "diff --git a/tests/rest/client/test_retention.py b/tests/rest/client/test_retention.py",
                "index f56b5d923..31dc832fd 100644",
                "--- a/tests/rest/client/test_retention.py",
                "+++ b/tests/rest/client/test_retention.py",
                "@@ -327,3 +327,3 @@ class RetentionNoDefaultPolicyTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"GET\", url, access_token=self.token)",
                "+        channel = self.make_request(\"GET\", url, access_token=self.token)",
                "diff --git a/tests/rest/client/test_shadow_banned.py b/tests/rest/client/test_shadow_banned.py",
                "index 94dcfb9f7..e689c3fbe 100644",
                "--- a/tests/rest/client/test_shadow_banned.py",
                "+++ b/tests/rest/client/test_shadow_banned.py",
                "@@ -91,3 +91,3 @@ class RoomTestCase(_ShadowBannedBase):",
                "         # Inviting the user completes successfully.",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -105,3 +105,3 @@ class RoomTestCase(_ShadowBannedBase):",
                "         # The room creation is successful.",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -160,3 +160,3 @@ class RoomTestCase(_ShadowBannedBase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -185,3 +185,3 @@ class RoomTestCase(_ShadowBannedBase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -200,3 +200,3 @@ class RoomTestCase(_ShadowBannedBase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -246,3 +246,3 @@ class ProfileTestCase(_ShadowBannedBase):",
                "         # The update should succeed.",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -256,3 +256,3 @@ class ProfileTestCase(_ShadowBannedBase):",
                "         # The user's display name should be updated.",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/profile/%s/displayname\" % (self.banned_user_id,)",
                "@@ -284,3 +284,3 @@ class ProfileTestCase(_ShadowBannedBase):",
                "         # The update should succeed.",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "diff --git a/tests/rest/client/test_third_party_rules.py b/tests/rest/client/test_third_party_rules.py",
                "index 0e96697f9..227fffab5 100644",
                "--- a/tests/rest/client/test_third_party_rules.py",
                "+++ b/tests/rest/client/test_third_party_rules.py",
                "@@ -88,3 +88,3 @@ class ThirdPartyRulesTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -106,3 +106,3 @@ class ThirdPartyRulesTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -125,3 +125,3 @@ class ThirdPartyRulesTestCase(unittest.HomeserverTestCase):",
                "         # now send the event",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -144,3 +144,3 @@ class ThirdPartyRulesTestCase(unittest.HomeserverTestCase):",
                "         # now send the event",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -154,3 +154,3 @@ class ThirdPartyRulesTestCase(unittest.HomeserverTestCase):",
                "         # ... and check that it got modified",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "diff --git a/tests/rest/client/v1/test_directory.py b/tests/rest/client/v1/test_directory.py",
                "index 7a2c653df..edd1d184f 100644",
                "--- a/tests/rest/client/v1/test_directory.py",
                "+++ b/tests/rest/client/v1/test_directory.py",
                "@@ -93,3 +93,3 @@ class DirectoryTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps(data)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", url, request_data, access_token=self.user_tok",
                "@@ -106,3 +106,3 @@ class DirectoryTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps(data)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", url, request_data, access_token=self.user_tok",
                "@@ -120,3 +120,3 @@ class DirectoryTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", url, request_data, access_token=self.user_tok",
                "@@ -130,3 +130,3 @@ class DirectoryTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", url, request_data, access_token=self.user_tok",
                "diff --git a/tests/rest/client/v1/test_events.py b/tests/rest/client/v1/test_events.py",
                "index 12a93f568..0a5ca317e 100644",
                "--- a/tests/rest/client/v1/test_events.py",
                "+++ b/tests/rest/client/v1/test_events.py",
                "@@ -65,3 +65,3 @@ class EventStreamPermissionsTestCase(unittest.HomeserverTestCase):",
                "         # see issue #2602",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/events?access_token=%s\" % (\"invalid\" + self.token,)",
                "@@ -71,3 +71,3 @@ class EventStreamPermissionsTestCase(unittest.HomeserverTestCase):",
                "         # valid token, expect content",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/events?access_token=%s&timeout=0\" % (self.token,)",
                "@@ -89,3 +89,3 @@ class EventStreamPermissionsTestCase(unittest.HomeserverTestCase):",
                "         # valid token, expect content",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/events?access_token=%s&timeout=0\" % (self.token,)",
                "@@ -151,3 +151,3 @@ class GetEventsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/events/\" + event_id, access_token=self.token,",
                "diff --git a/tests/rest/client/v1/test_login.py b/tests/rest/client/v1/test_login.py",
                "index 176ddf7ec..041f2766d 100644",
                "--- a/tests/rest/client/v1/test_login.py",
                "+++ b/tests/rest/client/v1/test_login.py",
                "@@ -65,3 +65,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "             }",
                "-            request, channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "+            channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "@@ -84,3 +84,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         }",
                "-        request, channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "+        channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "@@ -110,3 +110,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "             }",
                "-            request, channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "+            channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "@@ -129,3 +129,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         }",
                "-        request, channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "+        channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "@@ -155,3 +155,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "             }",
                "-            request, channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "+            channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "@@ -174,3 +174,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         }",
                "-        request, channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "+        channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "@@ -183,3 +183,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         # we shouldn't be able to make requests without an access token",
                "-        request, channel = self.make_request(b\"GET\", TEST_URL)",
                "+        channel = self.make_request(b\"GET\", TEST_URL)",
                "         self.assertEquals(channel.result[\"code\"], b\"401\", channel.result)",
                "@@ -193,3 +193,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         }",
                "-        request, channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "+        channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "@@ -200,5 +200,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         # we should now be able to make requests with the access token",
                "-        request, channel = self.make_request(",
                "-            b\"GET\", TEST_URL, access_token=access_token",
                "-        )",
                "+        channel = self.make_request(b\"GET\", TEST_URL, access_token=access_token)",
                "         self.assertEquals(channel.code, 200, channel.result)",
                "@@ -209,5 +207,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         # ... and we should be soft-logouted",
                "-        request, channel = self.make_request(",
                "-            b\"GET\", TEST_URL, access_token=access_token",
                "-        )",
                "+        channel = self.make_request(b\"GET\", TEST_URL, access_token=access_token)",
                "         self.assertEquals(channel.code, 401, channel.result)",
                "@@ -225,5 +221,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         self.reactor.advance(3600)",
                "-        request, channel = self.make_request(",
                "-            b\"GET\", TEST_URL, access_token=access_token",
                "-        )",
                "+        channel = self.make_request(b\"GET\", TEST_URL, access_token=access_token)",
                "         self.assertEquals(channel.code, 401, channel.result)",
                "@@ -235,5 +229,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            b\"GET\", TEST_URL, access_token=access_token",
                "-        )",
                "+        channel = self.make_request(b\"GET\", TEST_URL, access_token=access_token)",
                "         self.assertEquals(channel.code, 401, channel.result)",
                "@@ -244,3 +236,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"Perform the UI-Auth to delete a device\"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             b\"DELETE\", \"devices/\" + device_id, access_token=access_token",
                "@@ -264,3 +256,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             b\"DELETE\",",
                "@@ -280,5 +272,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         # we should now be able to make requests with the access token",
                "-        request, channel = self.make_request(",
                "-            b\"GET\", TEST_URL, access_token=access_token",
                "-        )",
                "+        channel = self.make_request(b\"GET\", TEST_URL, access_token=access_token)",
                "         self.assertEquals(channel.code, 200, channel.result)",
                "@@ -289,5 +279,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         # ... and we should be soft-logouted",
                "-        request, channel = self.make_request(",
                "-            b\"GET\", TEST_URL, access_token=access_token",
                "-        )",
                "+        channel = self.make_request(b\"GET\", TEST_URL, access_token=access_token)",
                "         self.assertEquals(channel.code, 401, channel.result)",
                "@@ -297,5 +285,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         # Now try to hard logout this session",
                "-        request, channel = self.make_request(",
                "-            b\"POST\", \"/logout\", access_token=access_token",
                "-        )",
                "+        channel = self.make_request(b\"POST\", \"/logout\", access_token=access_token)",
                "         self.assertEquals(channel.result[\"code\"], b\"200\", channel.result)",
                "@@ -310,5 +296,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         # we should now be able to make requests with the access token",
                "-        request, channel = self.make_request(",
                "-            b\"GET\", TEST_URL, access_token=access_token",
                "-        )",
                "+        channel = self.make_request(b\"GET\", TEST_URL, access_token=access_token)",
                "         self.assertEquals(channel.code, 200, channel.result)",
                "@@ -319,5 +303,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         # ... and we should be soft-logouted",
                "-        request, channel = self.make_request(",
                "-            b\"GET\", TEST_URL, access_token=access_token",
                "-        )",
                "+        channel = self.make_request(b\"GET\", TEST_URL, access_token=access_token)",
                "         self.assertEquals(channel.code, 401, channel.result)",
                "@@ -327,5 +309,3 @@ class LoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         # Now try to hard log out all of the user's sessions",
                "-        request, channel = self.make_request(",
                "-            b\"POST\", \"/logout/all\", access_token=access_token",
                "-        )",
                "+        channel = self.make_request(b\"POST\", \"/logout/all\", access_token=access_token)",
                "         self.assertEquals(channel.result[\"code\"], b\"200\", channel.result)",
                "@@ -404,3 +384,3 @@ class CASTestCase(unittest.HomeserverTestCase):",
                "         # Get Synapse to call the fake CAS and serve the template.",
                "-        request, channel = self.make_request(\"GET\", cas_ticket_url)",
                "+        channel = self.make_request(\"GET\", cas_ticket_url)",
                "@@ -448,3 +428,3 @@ class CASTestCase(unittest.HomeserverTestCase):",
                "         # Get Synapse to call the fake CAS and serve the template.",
                "-        request, channel = self.make_request(\"GET\", cas_ticket_url)",
                "+        channel = self.make_request(\"GET\", cas_ticket_url)",
                "@@ -474,3 +454,3 @@ class CASTestCase(unittest.HomeserverTestCase):",
                "         # Get Synapse to call the fake CAS and serve the template.",
                "-        request, channel = self.make_request(\"GET\", cas_ticket_url)",
                "+        channel = self.make_request(\"GET\", cas_ticket_url)",
                "@@ -504,3 +484,3 @@ class JWTTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "+        channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "         return channel",
                "@@ -636,3 +616,3 @@ class JWTTestCase(unittest.HomeserverTestCase):",
                "         params = json.dumps({\"type\": \"org.matrix.login.jwt\"})",
                "-        request, channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "+        channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "         self.assertEqual(channel.result[\"code\"], b\"403\", channel.result)",
                "@@ -709,3 +689,3 @@ class JWTPubKeyTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "+        channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "         return channel",
                "@@ -737,3 +717,3 @@ class AppserviceLoginRestServletTestCase(unittest.HomeserverTestCase):",
                "     def register_as_user(self, username):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             b\"POST\",",
                "@@ -786,3 +766,3 @@ class AppserviceLoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         }",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             b\"POST\", LOGIN_URL, params, access_token=self.service.token",
                "@@ -801,3 +781,3 @@ class AppserviceLoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         }",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             b\"POST\", LOGIN_URL, params, access_token=self.service.token",
                "@@ -816,3 +796,3 @@ class AppserviceLoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         }",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             b\"POST\", LOGIN_URL, params, access_token=self.service.token",
                "@@ -831,3 +811,3 @@ class AppserviceLoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         }",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             b\"POST\", LOGIN_URL, params, access_token=self.another_service.token",
                "@@ -847,3 +827,3 @@ class AppserviceLoginRestServletTestCase(unittest.HomeserverTestCase):",
                "         }",
                "-        request, channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "+        channel = self.make_request(b\"POST\", LOGIN_URL, params)",
                "diff --git a/tests/rest/client/v1/test_presence.py b/tests/rest/client/v1/test_presence.py",
                "index 11cd8efe2..94a515483 100644",
                "--- a/tests/rest/client/v1/test_presence.py",
                "+++ b/tests/rest/client/v1/test_presence.py",
                "@@ -55,3 +55,3 @@ class PresenceTestCase(unittest.HomeserverTestCase):",
                "         body = {\"presence\": \"here\", \"status_msg\": \"beep boop\"}",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", \"/presence/%s/status\" % (self.user_id,), body",
                "@@ -70,3 +70,3 @@ class PresenceTestCase(unittest.HomeserverTestCase):",
                "         body = {\"presence\": \"here\", \"status_msg\": \"beep boop\"}",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", \"/presence/%s/status\" % (self.user_id,), body",
                "diff --git a/tests/rest/client/v1/test_profile.py b/tests/rest/client/v1/test_profile.py",
                "index 2a3b483ea..e59fa70ba 100644",
                "--- a/tests/rest/client/v1/test_profile.py",
                "+++ b/tests/rest/client/v1/test_profile.py",
                "@@ -191,3 +191,3 @@ class ProfileTestCase(unittest.HomeserverTestCase):",
                "     def test_set_displayname(self):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -204,3 +204,3 @@ class ProfileTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"Attempts to set a stupid displayname should get a 400\"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -216,5 +216,3 @@ class ProfileTestCase(unittest.HomeserverTestCase):",
                "     def get_displayname(self):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", \"/profile/%s/displayname\" % (self.owner,)",
                "-        )",
                "+        channel = self.make_request(\"GET\", \"/profile/%s/displayname\" % (self.owner,))",
                "         self.assertEqual(channel.code, 200, channel.result)",
                "@@ -280,3 +278,3 @@ class ProfilesRestrictedTestCase(unittest.HomeserverTestCase):",
                "     def request_profile(self, expected_code, url_suffix=\"\", access_token=None):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.profile_url + url_suffix, access_token=access_token",
                "@@ -322,3 +320,3 @@ class OwnProfileUnrestrictedTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/profile/\" + self.requester, access_token=self.requester_tok",
                "@@ -327,3 +325,3 @@ class OwnProfileUnrestrictedTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -334,3 +332,3 @@ class OwnProfileUnrestrictedTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "diff --git a/tests/rest/client/v1/test_push_rule_attrs.py b/tests/rest/client/v1/test_push_rule_attrs.py",
                "index 7add5523c..2bc512d75 100644",
                "--- a/tests/rest/client/v1/test_push_rule_attrs.py",
                "+++ b/tests/rest/client/v1/test_push_rule_attrs.py",
                "@@ -47,3 +47,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # PUT a new rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", \"/pushrules/global/override/best.friend\", body, access_token=token",
                "@@ -53,3 +53,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # GET enabled for that new rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/pushrules/global/override/best.friend/enabled\", access_token=token",
                "@@ -76,3 +76,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # PUT a new rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", \"/pushrules/global/override/best.friend\", body, access_token=token",
                "@@ -82,3 +82,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # disable the rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -91,3 +91,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # check rule disabled",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/pushrules/global/override/best.friend/enabled\", access_token=token",
                "@@ -98,3 +98,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # DELETE the rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"DELETE\", \"/pushrules/global/override/best.friend\", access_token=token",
                "@@ -104,3 +104,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # PUT a new rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", \"/pushrules/global/override/best.friend\", body, access_token=token",
                "@@ -110,3 +110,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # GET enabled for that new rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/pushrules/global/override/best.friend/enabled\", access_token=token",
                "@@ -132,3 +132,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # PUT a new rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", \"/pushrules/global/override/best.friend\", body, access_token=token",
                "@@ -138,3 +138,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # disable the rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -147,3 +147,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # check rule disabled",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/pushrules/global/override/best.friend/enabled\", access_token=token",
                "@@ -154,3 +154,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # re-enable the rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -163,3 +163,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # check rule enabled",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/pushrules/global/override/best.friend/enabled\", access_token=token",
                "@@ -184,3 +184,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # check 404 for never-heard-of rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/pushrules/global/override/best.friend/enabled\", access_token=token",
                "@@ -191,3 +191,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # PUT a new rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", \"/pushrules/global/override/best.friend\", body, access_token=token",
                "@@ -197,3 +197,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # GET enabled for that new rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/pushrules/global/override/best.friend/enabled\", access_token=token",
                "@@ -203,3 +203,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # DELETE the rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"DELETE\", \"/pushrules/global/override/best.friend\", access_token=token",
                "@@ -209,3 +209,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # check 404 for deleted rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/pushrules/global/override/best.friend/enabled\", access_token=token",
                "@@ -223,3 +223,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # check 404 for never-heard-of rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/pushrules/global/override/.m.muahahaha/enabled\", access_token=token",
                "@@ -237,3 +237,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # enable & check 404 for never-heard-of rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -254,3 +254,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # enable & check 404 for never-heard-of rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -278,3 +278,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # PUT a new rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", \"/pushrules/global/override/best.friend\", body, access_token=token",
                "@@ -284,3 +284,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # GET actions for that new rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/pushrules/global/override/best.friend/actions\", access_token=token",
                "@@ -307,3 +307,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # PUT a new rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", \"/pushrules/global/override/best.friend\", body, access_token=token",
                "@@ -313,3 +313,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # change the rule actions",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -322,3 +322,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # GET actions for that new rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/pushrules/global/override/best.friend/actions\", access_token=token",
                "@@ -343,3 +343,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # check 404 for never-heard-of rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/pushrules/global/override/best.friend/enabled\", access_token=token",
                "@@ -350,3 +350,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # PUT a new rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", \"/pushrules/global/override/best.friend\", body, access_token=token",
                "@@ -356,3 +356,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # DELETE the rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"DELETE\", \"/pushrules/global/override/best.friend\", access_token=token",
                "@@ -362,3 +362,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # check 404 for deleted rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/pushrules/global/override/best.friend/enabled\", access_token=token",
                "@@ -376,3 +376,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # check 404 for never-heard-of rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/pushrules/global/override/.m.muahahaha/actions\", access_token=token",
                "@@ -390,3 +390,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # enable & check 404 for never-heard-of rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -407,3 +407,3 @@ class PushRuleAttributesTestCase(HomeserverTestCase):",
                "         # enable & check 404 for never-heard-of rule",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "diff --git a/tests/rest/client/v1/test_rooms.py b/tests/rest/client/v1/test_rooms.py",
                "index 55d872f0e..6105eac47 100644",
                "--- a/tests/rest/client/v1/test_rooms.py",
                "+++ b/tests/rest/client/v1/test_rooms.py",
                "@@ -86,3 +86,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "         ).encode(\"ascii\")",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", self.created_rmid_msg_path, b'{\"msgtype\":\"m.text\",\"body\":\"test msg\"}'",
                "@@ -92,3 +92,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "         # set topic for public room",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -114,3 +114,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "         # send message in uncreated room, expect 403",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -122,3 +122,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "         # send message in created room not joined (no state), expect 403",
                "-        request, channel = self.make_request(\"PUT\", send_msg_path(), msg_content)",
                "+        channel = self.make_request(\"PUT\", send_msg_path(), msg_content)",
                "         self.assertEquals(403, channel.code, msg=channel.result[\"body\"])",
                "@@ -129,3 +129,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "         )",
                "-        request, channel = self.make_request(\"PUT\", send_msg_path(), msg_content)",
                "+        channel = self.make_request(\"PUT\", send_msg_path(), msg_content)",
                "         self.assertEquals(403, channel.code, msg=channel.result[\"body\"])",
                "@@ -134,3 +134,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "         self.helper.join(room=self.created_rmid, user=self.user_id)",
                "-        request, channel = self.make_request(\"PUT\", send_msg_path(), msg_content)",
                "+        channel = self.make_request(\"PUT\", send_msg_path(), msg_content)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -139,3 +139,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "         self.helper.leave(room=self.created_rmid, user=self.user_id)",
                "-        request, channel = self.make_request(\"PUT\", send_msg_path(), msg_content)",
                "+        channel = self.make_request(\"PUT\", send_msg_path(), msg_content)",
                "         self.assertEquals(403, channel.code, msg=channel.result[\"body\"])",
                "@@ -147,3 +147,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "         # set/get topic in uncreated room, expect 403",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", \"/rooms/%s/state/m.room.topic\" % self.uncreated_rmid, topic_content",
                "@@ -151,3 +151,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "         self.assertEquals(403, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/rooms/%s/state/m.room.topic\" % self.uncreated_rmid",
                "@@ -157,5 +157,5 @@ class RoomPermissionsTestCase(RoomBase):",
                "         # set/get topic in created PRIVATE room not joined, expect 403",
                "-        request, channel = self.make_request(\"PUT\", topic_path, topic_content)",
                "+        channel = self.make_request(\"PUT\", topic_path, topic_content)",
                "         self.assertEquals(403, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"GET\", topic_path)",
                "+        channel = self.make_request(\"GET\", topic_path)",
                "         self.assertEquals(403, channel.code, msg=channel.result[\"body\"])",
                "@@ -166,3 +166,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "         )",
                "-        request, channel = self.make_request(\"PUT\", topic_path, topic_content)",
                "+        channel = self.make_request(\"PUT\", topic_path, topic_content)",
                "         self.assertEquals(403, channel.code, msg=channel.result[\"body\"])",
                "@@ -170,3 +170,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "         # get topic in created PRIVATE room and invited, expect 403",
                "-        request, channel = self.make_request(\"GET\", topic_path)",
                "+        channel = self.make_request(\"GET\", topic_path)",
                "         self.assertEquals(403, channel.code, msg=channel.result[\"body\"])",
                "@@ -178,3 +178,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "         self.helper.auth_user_id = self.rmcreator_id",
                "-        request, channel = self.make_request(\"PUT\", topic_path, topic_content)",
                "+        channel = self.make_request(\"PUT\", topic_path, topic_content)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -182,3 +182,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "-        request, channel = self.make_request(\"GET\", topic_path)",
                "+        channel = self.make_request(\"GET\", topic_path)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -188,5 +188,5 @@ class RoomPermissionsTestCase(RoomBase):",
                "         self.helper.leave(room=self.created_rmid, user=self.user_id)",
                "-        request, channel = self.make_request(\"PUT\", topic_path, topic_content)",
                "+        channel = self.make_request(\"PUT\", topic_path, topic_content)",
                "         self.assertEquals(403, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"GET\", topic_path)",
                "+        channel = self.make_request(\"GET\", topic_path)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -194,3 +194,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "         # get topic in PUBLIC room, not joined, expect 403",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/rooms/%s/state/m.room.topic\" % self.created_public_rmid",
                "@@ -200,3 +200,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "         # set topic in PUBLIC room, not joined, expect 403",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -210,3 +210,3 @@ class RoomPermissionsTestCase(RoomBase):",
                "             path = \"/rooms/%s/state/m.room.member/%s\" % (room, member)",
                "-            request, channel = self.make_request(\"GET\", path)",
                "+            channel = self.make_request(\"GET\", path)",
                "             self.assertEquals(expect_code, channel.code)",
                "@@ -382,3 +382,3 @@ class RoomsMemberListTestCase(RoomBase):",
                "         room_id = self.helper.create_room_as(self.user_id)",
                "-        request, channel = self.make_request(\"GET\", \"/rooms/%s/members\" % room_id)",
                "+        channel = self.make_request(\"GET\", \"/rooms/%s/members\" % room_id)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -386,3 +386,3 @@ class RoomsMemberListTestCase(RoomBase):",
                "     def test_get_member_list_no_room(self):",
                "-        request, channel = self.make_request(\"GET\", \"/rooms/roomdoesnotexist/members\")",
                "+        channel = self.make_request(\"GET\", \"/rooms/roomdoesnotexist/members\")",
                "         self.assertEquals(403, channel.code, msg=channel.result[\"body\"])",
                "@@ -391,3 +391,3 @@ class RoomsMemberListTestCase(RoomBase):",
                "         room_id = self.helper.create_room_as(\"@some_other_guy:red\")",
                "-        request, channel = self.make_request(\"GET\", \"/rooms/%s/members\" % room_id)",
                "+        channel = self.make_request(\"GET\", \"/rooms/%s/members\" % room_id)",
                "         self.assertEquals(403, channel.code, msg=channel.result[\"body\"])",
                "@@ -400,3 +400,3 @@ class RoomsMemberListTestCase(RoomBase):",
                "         # can't see list if you're just invited.",
                "-        request, channel = self.make_request(\"GET\", room_path)",
                "+        channel = self.make_request(\"GET\", room_path)",
                "         self.assertEquals(403, channel.code, msg=channel.result[\"body\"])",
                "@@ -405,3 +405,3 @@ class RoomsMemberListTestCase(RoomBase):",
                "         # can see list now joined",
                "-        request, channel = self.make_request(\"GET\", room_path)",
                "+        channel = self.make_request(\"GET\", room_path)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -410,3 +410,3 @@ class RoomsMemberListTestCase(RoomBase):",
                "         # can see old list once left",
                "-        request, channel = self.make_request(\"GET\", room_path)",
                "+        channel = self.make_request(\"GET\", room_path)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -421,3 +421,3 @@ class RoomsCreateTestCase(RoomBase):",
                "         # POST with no config keys, expect new room id",
                "-        request, channel = self.make_request(\"POST\", \"/createRoom\", \"{}\")",
                "+        channel = self.make_request(\"POST\", \"/createRoom\", \"{}\")",
                "@@ -428,5 +428,3 @@ class RoomsCreateTestCase(RoomBase):",
                "         # POST with visibility config key, expect new room id",
                "-        request, channel = self.make_request(",
                "-            \"POST\", \"/createRoom\", b'{\"visibility\":\"private\"}'",
                "-        )",
                "+        channel = self.make_request(\"POST\", \"/createRoom\", b'{\"visibility\":\"private\"}')",
                "         self.assertEquals(200, channel.code)",
                "@@ -436,5 +434,3 @@ class RoomsCreateTestCase(RoomBase):",
                "         # POST with custom config keys, expect new room id",
                "-        request, channel = self.make_request(",
                "-            \"POST\", \"/createRoom\", b'{\"custom\":\"stuff\"}'",
                "-        )",
                "+        channel = self.make_request(\"POST\", \"/createRoom\", b'{\"custom\":\"stuff\"}')",
                "         self.assertEquals(200, channel.code)",
                "@@ -444,3 +440,3 @@ class RoomsCreateTestCase(RoomBase):",
                "         # POST with custom + known config keys, expect new room id",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", \"/createRoom\", b'{\"visibility\":\"private\",\"custom\":\"things\"}'",
                "@@ -452,6 +448,6 @@ class RoomsCreateTestCase(RoomBase):",
                "         # POST with invalid content / paths, expect 400",
                "-        request, channel = self.make_request(\"POST\", \"/createRoom\", b'{\"visibili')",
                "+        channel = self.make_request(\"POST\", \"/createRoom\", b'{\"visibili')",
                "         self.assertEquals(400, channel.code)",
                "-        request, channel = self.make_request(\"POST\", \"/createRoom\", b'[\"hello\"]')",
                "+        channel = self.make_request(\"POST\", \"/createRoom\", b'[\"hello\"]')",
                "         self.assertEquals(400, channel.code)",
                "@@ -461,3 +457,3 @@ class RoomsCreateTestCase(RoomBase):",
                "         # Note the trailing space in the MXID here!",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", \"/createRoom\", b'{\"invite\":[\"@alice:example.com \"]}'",
                "@@ -479,12 +475,12 @@ class RoomTopicTestCase(RoomBase):",
                "         # missing keys or invalid json",
                "-        request, channel = self.make_request(\"PUT\", self.path, \"{}\")",
                "+        channel = self.make_request(\"PUT\", self.path, \"{}\")",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"PUT\", self.path, '{\"_name\":\"bo\"}')",
                "+        channel = self.make_request(\"PUT\", self.path, '{\"_name\":\"bo\"}')",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"PUT\", self.path, '{\"nao')",
                "+        channel = self.make_request(\"PUT\", self.path, '{\"nao')",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", self.path, '[{\"_name\":\"bo\"},{\"_name\":\"jill\"}]'",
                "@@ -493,6 +489,6 @@ class RoomTopicTestCase(RoomBase):",
                "-        request, channel = self.make_request(\"PUT\", self.path, \"text only\")",
                "+        channel = self.make_request(\"PUT\", self.path, \"text only\")",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"PUT\", self.path, \"\")",
                "+        channel = self.make_request(\"PUT\", self.path, \"\")",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "@@ -501,3 +497,3 @@ class RoomTopicTestCase(RoomBase):",
                "         content = '{\"topic\":[\"Topic name\"]}'",
                "-        request, channel = self.make_request(\"PUT\", self.path, content)",
                "+        channel = self.make_request(\"PUT\", self.path, content)",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "@@ -506,3 +502,3 @@ class RoomTopicTestCase(RoomBase):",
                "         # nothing should be there",
                "-        request, channel = self.make_request(\"GET\", self.path)",
                "+        channel = self.make_request(\"GET\", self.path)",
                "         self.assertEquals(404, channel.code, msg=channel.result[\"body\"])",
                "@@ -511,3 +507,3 @@ class RoomTopicTestCase(RoomBase):",
                "         content = '{\"topic\":\"Topic name\"}'",
                "-        request, channel = self.make_request(\"PUT\", self.path, content)",
                "+        channel = self.make_request(\"PUT\", self.path, content)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -515,3 +511,3 @@ class RoomTopicTestCase(RoomBase):",
                "         # valid get",
                "-        request, channel = self.make_request(\"GET\", self.path)",
                "+        channel = self.make_request(\"GET\", self.path)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -522,3 +518,3 @@ class RoomTopicTestCase(RoomBase):",
                "         content = '{\"topic\":\"Seasons\",\"subtopic\":\"Summer\"}'",
                "-        request, channel = self.make_request(\"PUT\", self.path, content)",
                "+        channel = self.make_request(\"PUT\", self.path, content)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -526,3 +522,3 @@ class RoomTopicTestCase(RoomBase):",
                "         # valid get",
                "-        request, channel = self.make_request(\"GET\", self.path)",
                "+        channel = self.make_request(\"GET\", self.path)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -542,20 +538,18 @@ class RoomMemberStateTestCase(RoomBase):",
                "         # missing keys or invalid json",
                "-        request, channel = self.make_request(\"PUT\", path, \"{}\")",
                "+        channel = self.make_request(\"PUT\", path, \"{}\")",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"PUT\", path, '{\"_name\":\"bo\"}')",
                "+        channel = self.make_request(\"PUT\", path, '{\"_name\":\"bo\"}')",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"PUT\", path, '{\"nao')",
                "+        channel = self.make_request(\"PUT\", path, '{\"nao')",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(",
                "-            \"PUT\", path, b'[{\"_name\":\"bo\"},{\"_name\":\"jill\"}]'",
                "-        )",
                "+        channel = self.make_request(\"PUT\", path, b'[{\"_name\":\"bo\"},{\"_name\":\"jill\"}]')",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"PUT\", path, \"text only\")",
                "+        channel = self.make_request(\"PUT\", path, \"text only\")",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"PUT\", path, \"\")",
                "+        channel = self.make_request(\"PUT\", path, \"\")",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "@@ -568,3 +562,3 @@ class RoomMemberStateTestCase(RoomBase):",
                "         )",
                "-        request, channel = self.make_request(\"PUT\", path, content.encode(\"ascii\"))",
                "+        channel = self.make_request(\"PUT\", path, content.encode(\"ascii\"))",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "@@ -579,6 +573,6 @@ class RoomMemberStateTestCase(RoomBase):",
                "         content = '{\"membership\":\"%s\"}' % Membership.JOIN",
                "-        request, channel = self.make_request(\"PUT\", path, content.encode(\"ascii\"))",
                "+        channel = self.make_request(\"PUT\", path, content.encode(\"ascii\"))",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"GET\", path, None)",
                "+        channel = self.make_request(\"GET\", path, None)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -597,6 +591,6 @@ class RoomMemberStateTestCase(RoomBase):",
                "         content = '{\"membership\":\"%s\"}' % Membership.INVITE",
                "-        request, channel = self.make_request(\"PUT\", path, content)",
                "+        channel = self.make_request(\"PUT\", path, content)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"GET\", path, None)",
                "+        channel = self.make_request(\"GET\", path, None)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -616,6 +610,6 @@ class RoomMemberStateTestCase(RoomBase):",
                "         )",
                "-        request, channel = self.make_request(\"PUT\", path, content)",
                "+        channel = self.make_request(\"PUT\", path, content)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"GET\", path, None)",
                "+        channel = self.make_request(\"GET\", path, None)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -670,3 +664,3 @@ class RoomJoinRatelimitTestCase(RoomBase):",
                "         path = \"/_matrix/client/r0/profile/%s/displayname\" % self.user_id",
                "-        request, channel = self.make_request(\"PUT\", path, {\"displayname\": \"John Doe\"})",
                "+        channel = self.make_request(\"PUT\", path, {\"displayname\": \"John Doe\"})",
                "         self.assertEquals(channel.code, 200, channel.json_body)",
                "@@ -680,3 +674,3 @@ class RoomJoinRatelimitTestCase(RoomBase):",
                "-            request, channel = self.make_request(\"GET\", path)",
                "+            channel = self.make_request(\"GET\", path)",
                "             self.assertEquals(channel.code, 200)",
                "@@ -704,3 +698,3 @@ class RoomJoinRatelimitTestCase(RoomBase):",
                "             for i in range(4):",
                "-                request, channel = self.make_request(\"POST\", path % room_id, {})",
                "+                channel = self.make_request(\"POST\", path % room_id, {})",
                "                 self.assertEquals(channel.code, 200)",
                "@@ -733,20 +727,18 @@ class RoomMessagesTestCase(RoomBase):",
                "         # missing keys or invalid json",
                "-        request, channel = self.make_request(\"PUT\", path, b\"{}\")",
                "+        channel = self.make_request(\"PUT\", path, b\"{}\")",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"PUT\", path, b'{\"_name\":\"bo\"}')",
                "+        channel = self.make_request(\"PUT\", path, b'{\"_name\":\"bo\"}')",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"PUT\", path, b'{\"nao')",
                "+        channel = self.make_request(\"PUT\", path, b'{\"nao')",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(",
                "-            \"PUT\", path, b'[{\"_name\":\"bo\"},{\"_name\":\"jill\"}]'",
                "-        )",
                "+        channel = self.make_request(\"PUT\", path, b'[{\"_name\":\"bo\"},{\"_name\":\"jill\"}]')",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"PUT\", path, b\"text only\")",
                "+        channel = self.make_request(\"PUT\", path, b\"text only\")",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "-        request, channel = self.make_request(\"PUT\", path, b\"\")",
                "+        channel = self.make_request(\"PUT\", path, b\"\")",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "@@ -757,3 +749,3 @@ class RoomMessagesTestCase(RoomBase):",
                "         content = b'{\"body\":\"test\",\"msgtype\":{\"type\":\"a\"}}'",
                "-        request, channel = self.make_request(\"PUT\", path, content)",
                "+        channel = self.make_request(\"PUT\", path, content)",
                "         self.assertEquals(400, channel.code, msg=channel.result[\"body\"])",
                "@@ -762,3 +754,3 @@ class RoomMessagesTestCase(RoomBase):",
                "         content = b'{\"body\":\"test\",\"msgtype\":\"test.custom.text\"}'",
                "-        request, channel = self.make_request(\"PUT\", path, content)",
                "+        channel = self.make_request(\"PUT\", path, content)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -768,3 +760,3 @@ class RoomMessagesTestCase(RoomBase):",
                "         content = b'{\"body\":\"test2\",\"msgtype\":\"m.text\"}'",
                "-        request, channel = self.make_request(\"PUT\", path, content)",
                "+        channel = self.make_request(\"PUT\", path, content)",
                "         self.assertEquals(200, channel.code, msg=channel.result[\"body\"])",
                "@@ -782,5 +774,3 @@ class RoomInitialSyncTestCase(RoomBase):",
                "     def test_initial_sync(self):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", \"/rooms/%s/initialSync\" % self.room_id",
                "-        )",
                "+        channel = self.make_request(\"GET\", \"/rooms/%s/initialSync\" % self.room_id)",
                "         self.assertEquals(200, channel.code)",
                "@@ -825,3 +815,3 @@ class RoomMessageListTestCase(RoomBase):",
                "         token = \"t1-0_0_0_0_0_0_0_0_0\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/rooms/%s/messages?access_token=x&from=%s\" % (self.room_id, token)",
                "@@ -836,3 +826,3 @@ class RoomMessageListTestCase(RoomBase):",
                "         token = \"s0_0_0_0_0_0_0_0_0\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/rooms/%s/messages?access_token=x&from=%s\" % (self.room_id, token)",
                "@@ -869,3 +859,3 @@ class RoomMessageListTestCase(RoomBase):",
                "         # Check that we get the first and second message when querying /messages.",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -897,3 +887,3 @@ class RoomMessageListTestCase(RoomBase):",
                "         # has been purged.",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -914,3 +904,3 @@ class RoomMessageListTestCase(RoomBase):",
                "         # anymore.",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -973,3 +963,3 @@ class RoomSearchTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1002,3 +992,3 @@ class RoomSearchTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1050,3 +1040,3 @@ class PublicRoomsRestrictedTestCase(unittest.HomeserverTestCase):",
                "     def test_restricted_no_auth(self):",
                "-        request, channel = self.make_request(\"GET\", self.url)",
                "+        channel = self.make_request(\"GET\", self.url)",
                "         self.assertEqual(channel.code, 401, channel.result)",
                "@@ -1057,3 +1047,3 @@ class PublicRoomsRestrictedTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"GET\", self.url, access_token=tok)",
                "+        channel = self.make_request(\"GET\", self.url, access_token=tok)",
                "         self.assertEqual(channel.code, 200, channel.result)",
                "@@ -1085,3 +1075,3 @@ class PerRoomProfilesForbiddenTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps(data)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -1098,3 +1088,3 @@ class PerRoomProfilesForbiddenTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps(data)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -1108,3 +1098,3 @@ class PerRoomProfilesForbiddenTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -1141,3 +1131,3 @@ class RoomMembershipReasonTestCase(unittest.HomeserverTestCase):",
                "         reason = \"hello\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1155,3 +1145,3 @@ class RoomMembershipReasonTestCase(unittest.HomeserverTestCase):",
                "         reason = \"hello\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1169,3 +1159,3 @@ class RoomMembershipReasonTestCase(unittest.HomeserverTestCase):",
                "         reason = \"hello\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1183,3 +1173,3 @@ class RoomMembershipReasonTestCase(unittest.HomeserverTestCase):",
                "         reason = \"hello\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1195,3 +1185,3 @@ class RoomMembershipReasonTestCase(unittest.HomeserverTestCase):",
                "         reason = \"hello\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1207,3 +1197,3 @@ class RoomMembershipReasonTestCase(unittest.HomeserverTestCase):",
                "         reason = \"hello\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1226,3 +1216,3 @@ class RoomMembershipReasonTestCase(unittest.HomeserverTestCase):",
                "         reason = \"hello\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -1237,3 +1227,3 @@ class RoomMembershipReasonTestCase(unittest.HomeserverTestCase):",
                "     def _check_for_reason(self, reason):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -1286,3 +1276,3 @@ class LabelsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -1316,3 +1306,3 @@ class LabelsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -1351,3 +1341,3 @@ class LabelsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -1379,3 +1369,3 @@ class LabelsTestCase(unittest.HomeserverTestCase):",
                "         token = \"s0_0_0_0_0_0_0_0_0\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -1396,3 +1386,3 @@ class LabelsTestCase(unittest.HomeserverTestCase):",
                "         token = \"s0_0_0_0_0_0_0_0_0\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -1419,3 +1409,3 @@ class LabelsTestCase(unittest.HomeserverTestCase):",
                "         token = \"s0_0_0_0_0_0_0_0_0\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -1450,3 +1440,3 @@ class LabelsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", \"/search?access_token=%s\" % self.tok, request_data",
                "@@ -1485,3 +1475,3 @@ class LabelsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", \"/search?access_token=%s\" % self.tok, request_data",
                "@@ -1532,3 +1522,3 @@ class LabelsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", \"/search?access_token=%s\" % self.tok, request_data",
                "@@ -1653,3 +1643,3 @@ class ContextTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -1717,3 +1707,3 @@ class ContextTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -1807,3 +1797,3 @@ class RoomAliasListTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"Calls the endpoint under test. returns the json response object.\"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -1828,3 +1818,3 @@ class RoomAliasListTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", url, request_data, access_token=self.room_owner_tok",
                "@@ -1858,3 +1848,3 @@ class RoomCanonicalAliasTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\", url, request_data, access_token=self.room_owner_tok",
                "@@ -1865,3 +1855,3 @@ class RoomCanonicalAliasTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"Calls the endpoint under test. returns the json response object.\"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -1877,3 +1867,3 @@ class RoomCanonicalAliasTestCase(unittest.HomeserverTestCase):",
                "         \"\"\"Calls the endpoint under test. returns the json response object.\"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "diff --git a/tests/rest/client/v1/test_typing.py b/tests/rest/client/v1/test_typing.py",
                "index ae0207366..38c51525a 100644",
                "--- a/tests/rest/client/v1/test_typing.py",
                "+++ b/tests/rest/client/v1/test_typing.py",
                "@@ -96,3 +96,3 @@ class RoomTypingTestCase(unittest.HomeserverTestCase):",
                "     def test_set_typing(self):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -119,3 +119,3 @@ class RoomTypingTestCase(unittest.HomeserverTestCase):",
                "     def test_set_not_typing(self):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -127,3 +127,3 @@ class RoomTypingTestCase(unittest.HomeserverTestCase):",
                "     def test_typing_timeout(self):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -140,3 +140,3 @@ class RoomTypingTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "diff --git a/tests/rest/client/v1/utils.py b/tests/rest/client/v1/utils.py",
                "index 5a18af8d3..3d46117e6 100644",
                "--- a/tests/rest/client/v1/utils.py",
                "+++ b/tests/rest/client/v1/utils.py",
                "@@ -83,3 +83,3 @@ class RestHelper:",
                "-        _, channel = make_request(",
                "+        channel = make_request(",
                "             self.hs.get_reactor(),",
                "@@ -159,3 +159,3 @@ class RestHelper:",
                "-        _, channel = make_request(",
                "+        channel = make_request(",
                "             self.hs.get_reactor(),",
                "@@ -194,3 +194,3 @@ class RestHelper:",
                "-        _, channel = make_request(",
                "+        channel = make_request(",
                "             self.hs.get_reactor(),",
                "@@ -250,5 +250,3 @@ class RestHelper:",
                "-        _, channel = make_request(",
                "-            self.hs.get_reactor(), self.site, method, path, content",
                "-        )",
                "+        channel = make_request(self.hs.get_reactor(), self.site, method, path, content)",
                "@@ -335,3 +333,3 @@ class RestHelper:",
                "         path = \"/_matrix/media/r0/upload?filename=%s\" % (filename,)",
                "-        _, channel = make_request(",
                "+        channel = make_request(",
                "             self.hs.get_reactor(),",
                "@@ -368,3 +366,3 @@ class RestHelper:",
                "         # first hit the redirect url (which will issue a cookie and state)",
                "-        _, channel = make_request(",
                "+        channel = make_request(",
                "             self.hs.get_reactor(),",
                "@@ -413,3 +411,3 @@ class RestHelper:",
                "             # now hit the callback URI with the right params and a made-up code",
                "-            _, channel = make_request(",
                "+            channel = make_request(",
                "                 self.hs.get_reactor(),",
                "@@ -436,3 +434,3 @@ class RestHelper:",
                "         # matrix access token and device id.",
                "-        _, channel = make_request(",
                "+        channel = make_request(",
                "             self.hs.get_reactor(),",
                "diff --git a/tests/rest/client/v2_alpha/test_account.py b/tests/rest/client/v2_alpha/test_account.py",
                "index 8a898be24..cb87b80e3 100644",
                "--- a/tests/rest/client/v2_alpha/test_account.py",
                "+++ b/tests/rest/client/v2_alpha/test_account.py",
                "@@ -242,3 +242,3 @@ class PasswordResetTestCase(unittest.HomeserverTestCase):",
                "     def _request_token(self, email, client_secret):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -256,3 +256,3 @@ class PasswordResetTestCase(unittest.HomeserverTestCase):",
                "         # Load the password reset confirmation page",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "@@ -270,3 +270,3 @@ class PasswordResetTestCase(unittest.HomeserverTestCase):",
                "         # Confirm the password reset",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "@@ -304,3 +304,3 @@ class PasswordResetTestCase(unittest.HomeserverTestCase):",
                "     ):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -346,3 +346,3 @@ class DeactivateTestCase(unittest.HomeserverTestCase):",
                "         # Check that this access token has been invalidated.",
                "-        request, channel = self.make_request(\"GET\", \"account/whoami\")",
                "+        channel = self.make_request(\"GET\", \"account/whoami\")",
                "         self.assertEqual(channel.code, 401)",
                "@@ -401,3 +401,3 @@ class DeactivateTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", \"account/deactivate\", request_data, access_token=tok",
                "@@ -524,3 +524,3 @@ class ThreepidEmailRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -542,3 +542,3 @@ class ThreepidEmailRestTestCase(unittest.HomeserverTestCase):",
                "         # Get user",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url_3pid, access_token=self.user_id_tok,",
                "@@ -563,3 +563,3 @@ class ThreepidEmailRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -572,3 +572,3 @@ class ThreepidEmailRestTestCase(unittest.HomeserverTestCase):",
                "         # Get user",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url_3pid, access_token=self.user_id_tok,",
                "@@ -595,3 +595,3 @@ class ThreepidEmailRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -606,3 +606,3 @@ class ThreepidEmailRestTestCase(unittest.HomeserverTestCase):",
                "         # Get user",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url_3pid, access_token=self.user_id_tok,",
                "@@ -623,3 +623,3 @@ class ThreepidEmailRestTestCase(unittest.HomeserverTestCase):",
                "         # Attempt to add email without clicking the link",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -641,3 +641,3 @@ class ThreepidEmailRestTestCase(unittest.HomeserverTestCase):",
                "         # Get user",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url_3pid, access_token=self.user_id_tok,",
                "@@ -656,3 +656,3 @@ class ThreepidEmailRestTestCase(unittest.HomeserverTestCase):",
                "         # Attempt to add email without even requesting an email",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -674,3 +674,3 @@ class ThreepidEmailRestTestCase(unittest.HomeserverTestCase):",
                "         # Get user",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url_3pid, access_token=self.user_id_tok,",
                "@@ -778,5 +778,3 @@ class ThreepidEmailRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"POST\", b\"account/3pid/email/requestToken\", body,",
                "-        )",
                "+        channel = self.make_request(\"POST\", b\"account/3pid/email/requestToken\", body,)",
                "         self.assertEquals(expect_code, channel.code, channel.result)",
                "@@ -788,3 +786,3 @@ class ThreepidEmailRestTestCase(unittest.HomeserverTestCase):",
                "     ):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -801,3 +799,3 @@ class ThreepidEmailRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"GET\", path, shorthand=False)",
                "+        channel = self.make_request(\"GET\", path, shorthand=False)",
                "         self.assertEquals(200, channel.code, channel.result)",
                "@@ -835,3 +833,3 @@ class ThreepidEmailRestTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -853,3 +851,3 @@ class ThreepidEmailRestTestCase(unittest.HomeserverTestCase):",
                "         # Get user",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url_3pid, access_token=self.user_id_tok,",
                "diff --git a/tests/rest/client/v2_alpha/test_auth.py b/tests/rest/client/v2_alpha/test_auth.py",
                "index a35c2646f..da866c8b4 100644",
                "--- a/tests/rest/client/v2_alpha/test_auth.py",
                "+++ b/tests/rest/client/v2_alpha/test_auth.py",
                "@@ -69,5 +69,3 @@ class FallbackAuthTests(unittest.HomeserverTestCase):",
                "         \"\"\"Make a register request.\"\"\"",
                "-        request, channel = self.make_request(",
                "-            \"POST\", \"register\", body",
                "-        )  # type: SynapseRequest, FakeChannel",
                "+        channel = self.make_request(\"POST\", \"register\", body)",
                "@@ -83,8 +81,8 @@ class FallbackAuthTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"auth/m.login.recaptcha/fallback/web?session=\" + session",
                "-        )  # type: SynapseRequest, FakeChannel",
                "+        )",
                "         self.assertEqual(channel.code, 200)",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -186,3 +184,3 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "         # Get the list of devices so one can be deleted.",
                "-        _, channel = self.make_request(\"GET\", \"devices\", access_token=access_token,)",
                "+        channel = self.make_request(\"GET\", \"devices\", access_token=access_token,)",
                "         self.assertEqual(channel.code, 200)",
                "@@ -198,5 +196,5 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "         \"\"\"Delete an individual device.\"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"DELETE\", \"devices/\" + device, body, access_token=access_token,",
                "-        )  # type: SynapseRequest, FakeChannel",
                "+        )",
                "@@ -211,5 +209,5 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "         # the payload half-way through some tests.",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", \"delete_devices\", body, access_token=self.user_tok,",
                "-        )  # type: SynapseRequest, FakeChannel",
                "+        )",
                "diff --git a/tests/rest/client/v2_alpha/test_capabilities.py b/tests/rest/client/v2_alpha/test_capabilities.py",
                "index 767e12687..e808339fb 100644",
                "--- a/tests/rest/client/v2_alpha/test_capabilities.py",
                "+++ b/tests/rest/client/v2_alpha/test_capabilities.py",
                "@@ -38,3 +38,3 @@ class CapabilitiesTestCase(unittest.HomeserverTestCase):",
                "     def test_check_auth_required(self):",
                "-        request, channel = self.make_request(\"GET\", self.url)",
                "+        channel = self.make_request(\"GET\", self.url)",
                "@@ -46,3 +46,3 @@ class CapabilitiesTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"GET\", self.url, access_token=access_token)",
                "+        channel = self.make_request(\"GET\", self.url, access_token=access_token)",
                "         capabilities = channel.json_body[\"capabilities\"]",
                "@@ -64,3 +64,3 @@ class CapabilitiesTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"GET\", self.url, access_token=access_token)",
                "+        channel = self.make_request(\"GET\", self.url, access_token=access_token)",
                "         capabilities = channel.json_body[\"capabilities\"]",
                "@@ -72,3 +72,3 @@ class CapabilitiesTestCase(unittest.HomeserverTestCase):",
                "         self.get_success(self.store.user_set_password_hash(user, None))",
                "-        request, channel = self.make_request(\"GET\", self.url, access_token=access_token)",
                "+        channel = self.make_request(\"GET\", self.url, access_token=access_token)",
                "         capabilities = channel.json_body[\"capabilities\"]",
                "diff --git a/tests/rest/client/v2_alpha/test_filter.py b/tests/rest/client/v2_alpha/test_filter.py",
                "index 231d5aefe..f761c4493 100644",
                "--- a/tests/rest/client/v2_alpha/test_filter.py",
                "+++ b/tests/rest/client/v2_alpha/test_filter.py",
                "@@ -38,3 +38,3 @@ class FilterTestCase(unittest.HomeserverTestCase):",
                "     def test_add_filter(self):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -51,3 +51,3 @@ class FilterTestCase(unittest.HomeserverTestCase):",
                "     def test_add_filter_for_other_user(self):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -63,3 +63,3 @@ class FilterTestCase(unittest.HomeserverTestCase):",
                "         self.hs.is_mine = lambda target_user: False",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -81,3 +81,3 @@ class FilterTestCase(unittest.HomeserverTestCase):",
                "         filter_id = filter_id.result",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/_matrix/client/r0/user/%s/filter/%s\" % (self.user_id, filter_id)",
                "@@ -89,3 +89,3 @@ class FilterTestCase(unittest.HomeserverTestCase):",
                "     def test_get_filter_non_existant(self):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/_matrix/client/r0/user/%s/filter/12382148321\" % (self.user_id)",
                "@@ -99,3 +99,3 @@ class FilterTestCase(unittest.HomeserverTestCase):",
                "     def test_get_filter_invalid_id(self):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/_matrix/client/r0/user/%s/filter/foobar\" % (self.user_id)",
                "@@ -107,3 +107,3 @@ class FilterTestCase(unittest.HomeserverTestCase):",
                "     def test_get_filter_no_id(self):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/_matrix/client/r0/user/%s/filter/\" % (self.user_id)",
                "diff --git a/tests/rest/client/v2_alpha/test_password_policy.py b/tests/rest/client/v2_alpha/test_password_policy.py",
                "index ee86b9491..fba34def3 100644",
                "--- a/tests/rest/client/v2_alpha/test_password_policy.py",
                "+++ b/tests/rest/client/v2_alpha/test_password_policy.py",
                "@@ -72,5 +72,3 @@ class PasswordPolicyTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", \"/_matrix/client/r0/password_policy\"",
                "-        )",
                "+        channel = self.make_request(\"GET\", \"/_matrix/client/r0/password_policy\")",
                "@@ -91,3 +89,3 @@ class PasswordPolicyTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps({\"username\": \"kermit\", \"password\": \"shorty\"})",
                "-        request, channel = self.make_request(\"POST\", self.register_url, request_data)",
                "+        channel = self.make_request(\"POST\", self.register_url, request_data)",
                "@@ -100,3 +98,3 @@ class PasswordPolicyTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps({\"username\": \"kermit\", \"password\": \"longerpassword\"})",
                "-        request, channel = self.make_request(\"POST\", self.register_url, request_data)",
                "+        channel = self.make_request(\"POST\", self.register_url, request_data)",
                "@@ -109,3 +107,3 @@ class PasswordPolicyTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps({\"username\": \"kermit\", \"password\": \"l0ngerpassword\"})",
                "-        request, channel = self.make_request(\"POST\", self.register_url, request_data)",
                "+        channel = self.make_request(\"POST\", self.register_url, request_data)",
                "@@ -118,3 +116,3 @@ class PasswordPolicyTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps({\"username\": \"kermit\", \"password\": \"l0ngerpassword!\"})",
                "-        request, channel = self.make_request(\"POST\", self.register_url, request_data)",
                "+        channel = self.make_request(\"POST\", self.register_url, request_data)",
                "@@ -127,3 +125,3 @@ class PasswordPolicyTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps({\"username\": \"kermit\", \"password\": \"L0NGERPASSWORD!\"})",
                "-        request, channel = self.make_request(\"POST\", self.register_url, request_data)",
                "+        channel = self.make_request(\"POST\", self.register_url, request_data)",
                "@@ -136,3 +134,3 @@ class PasswordPolicyTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps({\"username\": \"kermit\", \"password\": \"L0ngerpassword!\"})",
                "-        request, channel = self.make_request(\"POST\", self.register_url, request_data)",
                "+        channel = self.make_request(\"POST\", self.register_url, request_data)",
                "@@ -162,3 +160,3 @@ class PasswordPolicyTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "diff --git a/tests/rest/client/v2_alpha/test_register.py b/tests/rest/client/v2_alpha/test_register.py",
                "index 4bf3e0d63..27db4f551 100644",
                "--- a/tests/rest/client/v2_alpha/test_register.py",
                "+++ b/tests/rest/client/v2_alpha/test_register.py",
                "@@ -63,3 +63,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             b\"POST\", self.url + b\"?access_token=i_am_an_app_service\", request_data",
                "@@ -74,3 +74,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps({\"username\": \"kermit\"})",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             b\"POST\", self.url + b\"?access_token=i_am_an_app_service\", request_data",
                "@@ -82,3 +82,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps({\"username\": \"kermit\", \"password\": 666})",
                "-        request, channel = self.make_request(b\"POST\", self.url, request_data)",
                "+        channel = self.make_request(b\"POST\", self.url, request_data)",
                "@@ -89,3 +89,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps({\"username\": 777, \"password\": \"monkey\"})",
                "-        request, channel = self.make_request(b\"POST\", self.url, request_data)",
                "+        channel = self.make_request(b\"POST\", self.url, request_data)",
                "@@ -104,3 +104,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps(params)",
                "-        request, channel = self.make_request(b\"POST\", self.url, request_data)",
                "+        channel = self.make_request(b\"POST\", self.url, request_data)",
                "@@ -119,3 +119,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(b\"POST\", self.url, request_data)",
                "+        channel = self.make_request(b\"POST\", self.url, request_data)",
                "@@ -129,3 +129,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(b\"POST\", self.url + b\"?kind=guest\", b\"{}\")",
                "+        channel = self.make_request(b\"POST\", self.url + b\"?kind=guest\", b\"{}\")",
                "@@ -138,3 +138,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(b\"POST\", self.url + b\"?kind=guest\", b\"{}\")",
                "+        channel = self.make_request(b\"POST\", self.url + b\"?kind=guest\", b\"{}\")",
                "@@ -147,3 +147,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "             url = self.url + b\"?kind=guest\"",
                "-            request, channel = self.make_request(b\"POST\", url, b\"{}\")",
                "+            channel = self.make_request(b\"POST\", url, b\"{}\")",
                "@@ -157,3 +157,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(b\"POST\", self.url + b\"?kind=guest\", b\"{}\")",
                "+        channel = self.make_request(b\"POST\", self.url + b\"?kind=guest\", b\"{}\")",
                "@@ -171,3 +171,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "             request_data = json.dumps(params)",
                "-            request, channel = self.make_request(b\"POST\", self.url, request_data)",
                "+            channel = self.make_request(b\"POST\", self.url, request_data)",
                "@@ -181,3 +181,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(b\"POST\", self.url + b\"?kind=guest\", b\"{}\")",
                "+        channel = self.make_request(b\"POST\", self.url + b\"?kind=guest\", b\"{}\")",
                "@@ -186,3 +186,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "     def test_advertised_flows(self):",
                "-        request, channel = self.make_request(b\"POST\", self.url, b\"{}\")",
                "+        channel = self.make_request(b\"POST\", self.url, b\"{}\")",
                "         self.assertEquals(channel.result[\"code\"], b\"401\", channel.result)",
                "@@ -209,3 +209,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "     def test_advertised_flows_captcha_and_terms_and_3pids(self):",
                "-        request, channel = self.make_request(b\"POST\", self.url, b\"{}\")",
                "+        channel = self.make_request(b\"POST\", self.url, b\"{}\")",
                "         self.assertEquals(channel.result[\"code\"], b\"401\", channel.result)",
                "@@ -241,3 +241,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "     def test_advertised_flows_no_msisdn_email_required(self):",
                "-        request, channel = self.make_request(b\"POST\", self.url, b\"{}\")",
                "+        channel = self.make_request(b\"POST\", self.url, b\"{}\")",
                "         self.assertEquals(channel.result[\"code\"], b\"401\", channel.result)",
                "@@ -281,3 +281,3 @@ class RegisterRestServletTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -320,3 +320,3 @@ class AccountValidityTestCase(unittest.HomeserverTestCase):",
                "         # endpoint.",
                "-        request, channel = self.make_request(b\"GET\", \"/sync\", access_token=tok)",
                "+        channel = self.make_request(b\"GET\", \"/sync\", access_token=tok)",
                "@@ -326,3 +326,3 @@ class AccountValidityTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(b\"GET\", \"/sync\", access_token=tok)",
                "+        channel = self.make_request(b\"GET\", \"/sync\", access_token=tok)",
                "@@ -348,5 +348,3 @@ class AccountValidityTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps(params)",
                "-        request, channel = self.make_request(",
                "-            b\"POST\", url, request_data, access_token=admin_tok",
                "-        )",
                "+        channel = self.make_request(b\"POST\", url, request_data, access_token=admin_tok)",
                "         self.assertEquals(channel.result[\"code\"], b\"200\", channel.result)",
                "@@ -355,3 +353,3 @@ class AccountValidityTestCase(unittest.HomeserverTestCase):",
                "         # endpoint.",
                "-        request, channel = self.make_request(b\"GET\", \"/sync\", access_token=tok)",
                "+        channel = self.make_request(b\"GET\", \"/sync\", access_token=tok)",
                "         self.assertEquals(channel.result[\"code\"], b\"200\", channel.result)",
                "@@ -372,5 +370,3 @@ class AccountValidityTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps(params)",
                "-        request, channel = self.make_request(",
                "-            b\"POST\", url, request_data, access_token=admin_tok",
                "-        )",
                "+        channel = self.make_request(b\"POST\", url, request_data, access_token=admin_tok)",
                "         self.assertEquals(channel.result[\"code\"], b\"200\", channel.result)",
                "@@ -379,3 +375,3 @@ class AccountValidityTestCase(unittest.HomeserverTestCase):",
                "         # endpoint.",
                "-        request, channel = self.make_request(b\"GET\", \"/sync\", access_token=tok)",
                "+        channel = self.make_request(b\"GET\", \"/sync\", access_token=tok)",
                "         self.assertEquals(channel.result[\"code\"], b\"403\", channel.result)",
                "@@ -399,5 +395,3 @@ class AccountValidityTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps(params)",
                "-        request, channel = self.make_request(",
                "-            b\"POST\", url, request_data, access_token=admin_tok",
                "-        )",
                "+        channel = self.make_request(b\"POST\", url, request_data, access_token=admin_tok)",
                "         self.assertEquals(channel.result[\"code\"], b\"200\", channel.result)",
                "@@ -405,3 +399,3 @@ class AccountValidityTestCase(unittest.HomeserverTestCase):",
                "         # Try to log the user out",
                "-        request, channel = self.make_request(b\"POST\", \"/logout\", access_token=tok)",
                "+        channel = self.make_request(b\"POST\", \"/logout\", access_token=tok)",
                "         self.assertEquals(channel.result[\"code\"], b\"200\", channel.result)",
                "@@ -412,3 +406,3 @@ class AccountValidityTestCase(unittest.HomeserverTestCase):",
                "         # Try to log out all of the user's sessions",
                "-        request, channel = self.make_request(b\"POST\", \"/logout/all\", access_token=tok)",
                "+        channel = self.make_request(b\"POST\", \"/logout/all\", access_token=tok)",
                "         self.assertEquals(channel.result[\"code\"], b\"200\", channel.result)",
                "@@ -486,3 +480,3 @@ class AccountValidityRenewalByEmailTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_matrix/client/unstable/account_validity/renew?token=%s\" % renewal_token",
                "-        request, channel = self.make_request(b\"GET\", url)",
                "+        channel = self.make_request(b\"GET\", url)",
                "         self.assertEquals(channel.result[\"code\"], b\"200\", channel.result)",
                "@@ -506,3 +500,3 @@ class AccountValidityRenewalByEmailTestCase(unittest.HomeserverTestCase):",
                "         self.reactor.advance(datetime.timedelta(days=3).total_seconds())",
                "-        request, channel = self.make_request(b\"GET\", \"/sync\", access_token=tok)",
                "+        channel = self.make_request(b\"GET\", \"/sync\", access_token=tok)",
                "         self.assertEquals(channel.result[\"code\"], b\"200\", channel.result)",
                "@@ -513,3 +507,3 @@ class AccountValidityRenewalByEmailTestCase(unittest.HomeserverTestCase):",
                "         url = \"/_matrix/client/unstable/account_validity/renew?token=123\"",
                "-        request, channel = self.make_request(b\"GET\", url)",
                "+        channel = self.make_request(b\"GET\", url)",
                "         self.assertEquals(channel.result[\"code\"], b\"404\", channel.result)",
                "@@ -534,3 +528,3 @@ class AccountValidityRenewalByEmailTestCase(unittest.HomeserverTestCase):",
                "         (user_id, tok) = self.create_user()",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             b\"POST\",",
                "@@ -558,3 +552,3 @@ class AccountValidityRenewalByEmailTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", \"account/deactivate\", request_data, access_token=tok",
                "@@ -609,3 +603,3 @@ class AccountValidityRenewalByEmailTestCase(unittest.HomeserverTestCase):",
                "         # Test that we're still able to manually trigger a mail to be sent.",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             b\"POST\",",
                "diff --git a/tests/rest/client/v2_alpha/test_relations.py b/tests/rest/client/v2_alpha/test_relations.py",
                "index 6cd4eb662..bd574077e 100644",
                "--- a/tests/rest/client/v2_alpha/test_relations.py",
                "+++ b/tests/rest/client/v2_alpha/test_relations.py",
                "@@ -62,3 +62,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -109,3 +109,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -154,3 +154,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "-            request, channel = self.make_request(",
                "+            channel = self.make_request(",
                "                 \"GET\",",
                "@@ -212,3 +212,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "-            request, channel = self.make_request(",
                "+            channel = self.make_request(",
                "                 \"GET\",",
                "@@ -281,3 +281,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "-            request, channel = self.make_request(",
                "+            channel = self.make_request(",
                "                 \"GET\",",
                "@@ -327,3 +327,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -359,3 +359,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "         # Now lets redact one of the 'a' reactions",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -367,3 +367,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -384,3 +384,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -416,3 +416,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -452,3 +452,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -509,3 +509,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -551,3 +551,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "         # Check the relation is returned",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -563,3 +563,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "         # Redact the original event",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -573,3 +573,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "         # Try to check for remaining m.replace relations",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -600,3 +600,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "         # Redact the original",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -614,3 +614,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "         # Check that aggregations returns zero",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -658,3 +658,3 @@ class RelationsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "diff --git a/tests/rest/client/v2_alpha/test_shared_rooms.py b/tests/rest/client/v2_alpha/test_shared_rooms.py",
                "index 05c5ee5a7..116ace181 100644",
                "--- a/tests/rest/client/v2_alpha/test_shared_rooms.py",
                "+++ b/tests/rest/client/v2_alpha/test_shared_rooms.py",
                "@@ -44,3 +44,3 @@ class UserSharedRoomsTest(unittest.HomeserverTestCase):",
                "     def _get_shared_rooms(self, token, other_user) -> FakeChannel:",
                "-        _, channel = self.make_request(",
                "+        return self.make_request(",
                "             \"GET\",",
                "@@ -50,3 +50,2 @@ class UserSharedRoomsTest(unittest.HomeserverTestCase):",
                "         )",
                "-        return channel",
                "diff --git a/tests/rest/client/v2_alpha/test_sync.py b/tests/rest/client/v2_alpha/test_sync.py",
                "index 31ac0fccb..512e36c23 100644",
                "--- a/tests/rest/client/v2_alpha/test_sync.py",
                "+++ b/tests/rest/client/v2_alpha/test_sync.py",
                "@@ -37,3 +37,3 @@ class FilterTestCase(unittest.HomeserverTestCase):",
                "     def test_sync_argless(self):",
                "-        request, channel = self.make_request(\"GET\", \"/sync\")",
                "+        channel = self.make_request(\"GET\", \"/sync\")",
                "@@ -57,3 +57,3 @@ class FilterTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"GET\", \"/sync\")",
                "+        channel = self.make_request(\"GET\", \"/sync\")",
                "@@ -196,3 +196,3 @@ class SyncFilterTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/sync?filter=%s\" % sync_filter, access_token=tok",
                "@@ -247,3 +247,3 @@ class SyncTypingTests(unittest.HomeserverTestCase):",
                "         # Start typing.",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -254,5 +254,3 @@ class SyncTypingTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", \"/sync?access_token=%s\" % (access_token,)",
                "-        )",
                "+        channel = self.make_request(\"GET\", \"/sync?access_token=%s\" % (access_token,))",
                "         self.assertEquals(200, channel.code)",
                "@@ -261,3 +259,3 @@ class SyncTypingTests(unittest.HomeserverTestCase):",
                "         # Stop typing.",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -269,3 +267,3 @@ class SyncTypingTests(unittest.HomeserverTestCase):",
                "         # Start typing.",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"PUT\",",
                "@@ -277,5 +275,3 @@ class SyncTypingTests(unittest.HomeserverTestCase):",
                "         # Should return immediately",
                "-        request, channel = self.make_request(",
                "-            \"GET\", sync_url % (access_token, next_batch)",
                "-        )",
                "+        channel = self.make_request(\"GET\", sync_url % (access_token, next_batch))",
                "         self.assertEquals(200, channel.code)",
                "@@ -291,5 +287,3 @@ class SyncTypingTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "-            \"GET\", sync_url % (access_token, next_batch)",
                "-        )",
                "+        channel = self.make_request(\"GET\", sync_url % (access_token, next_batch))",
                "         self.assertEquals(200, channel.code)",
                "@@ -301,5 +295,3 @@ class SyncTypingTests(unittest.HomeserverTestCase):",
                "         # stream token.",
                "-        request, channel = self.make_request(",
                "-            \"GET\", sync_url % (access_token, next_batch)",
                "-        )",
                "+        channel = self.make_request(\"GET\", sync_url % (access_token, next_batch))",
                "         self.assertEquals(200, channel.code)",
                "@@ -385,3 +377,3 @@ class UnreadMessagesTestCase(unittest.HomeserverTestCase):",
                "         body = json.dumps({\"m.read\": res[\"event_id\"]}).encode(\"utf8\")",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -452,3 +444,3 @@ class UnreadMessagesTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", self.url % self.next_batch, access_token=self.tok,",
                "diff --git a/tests/rest/media/v1/test_media_storage.py b/tests/rest/media/v1/test_media_storage.py",
                "index 6f0677d33..ae2b32b13 100644",
                "--- a/tests/rest/media/v1/test_media_storage.py",
                "+++ b/tests/rest/media/v1/test_media_storage.py",
                "@@ -230,3 +230,3 @@ class MediaRepoTests(unittest.HomeserverTestCase):",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "@@ -326,3 +326,3 @@ class MediaRepoTests(unittest.HomeserverTestCase):",
                "         params = \"?width=32&height=32&method=\" + method",
                "-        request, channel = make_request(",
                "+        channel = make_request(",
                "             self.reactor,",
                "diff --git a/tests/rest/media/v1/test_url_preview.py b/tests/rest/media/v1/test_url_preview.py",
                "index 529b6bcde..83d728b4a 100644",
                "--- a/tests/rest/media/v1/test_url_preview.py",
                "+++ b/tests/rest/media/v1/test_url_preview.py",
                "@@ -115,3 +115,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -140,3 +140,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "         # Check the cache returns the correct response",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"preview_url?url=http://matrix.org\", shorthand=False",
                "@@ -156,3 +156,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "         # Check the database cache returns the correct response",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"preview_url?url=http://matrix.org\", shorthand=False",
                "@@ -177,3 +177,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -212,3 +212,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -247,3 +247,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -280,3 +280,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -310,3 +310,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"preview_url?url=http://example.com\", shorthand=False",
                "@@ -331,3 +331,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"preview_url?url=http://example.com\", shorthand=False",
                "@@ -348,3 +348,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"preview_url?url=http://192.168.1.1\", shorthand=False",
                "@@ -367,3 +367,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"preview_url?url=http://1.1.1.2\", shorthand=False",
                "@@ -387,3 +387,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -424,3 +424,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"preview_url?url=http://example.com\", shorthand=False",
                "@@ -444,3 +444,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"preview_url?url=http://example.com\", shorthand=False",
                "@@ -465,3 +465,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"preview_url?url=http://example.com\", shorthand=False",
                "@@ -482,3 +482,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "         \"\"\"",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"OPTIONS\", \"preview_url?url=http://example.com\", shorthand=False",
                "@@ -495,3 +495,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "         # Build and make a request to the server",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\",",
                "@@ -569,3 +569,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "-            request, channel = self.make_request(",
                "+            channel = self.make_request(",
                "                 \"GET\",",
                "@@ -634,3 +634,3 @@ class URLPreviewTests(unittest.HomeserverTestCase):",
                "-            request, channel = self.make_request(",
                "+            channel = self.make_request(",
                "                 \"GET\",",
                "diff --git a/tests/rest/test_health.py b/tests/rest/test_health.py",
                "index aaf2fb821..32acd93dc 100644",
                "--- a/tests/rest/test_health.py",
                "+++ b/tests/rest/test_health.py",
                "@@ -27,3 +27,3 @@ class HealthCheckTests(unittest.HomeserverTestCase):",
                "     def test_health(self):",
                "-        request, channel = self.make_request(\"GET\", \"/health\", shorthand=False)",
                "+        channel = self.make_request(\"GET\", \"/health\", shorthand=False)",
                "diff --git a/tests/rest/test_well_known.py b/tests/rest/test_well_known.py",
                "index 17ded96b9..14de0921b 100644",
                "--- a/tests/rest/test_well_known.py",
                "+++ b/tests/rest/test_well_known.py",
                "@@ -30,3 +30,3 @@ class WellKnownTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/.well-known/matrix/client\", shorthand=False",
                "@@ -46,3 +46,3 @@ class WellKnownTests(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/.well-known/matrix/client\", shorthand=False",
                "diff --git a/tests/server.py b/tests/server.py",
                "index 4faf32e33..7d1ad362c 100644",
                "--- a/tests/server.py",
                "+++ b/tests/server.py",
                "@@ -176,3 +176,3 @@ def make_request(",
                "     ] = None,",
                "-):",
                "+) -> FakeChannel:",
                "     \"\"\"",
                "@@ -180,3 +180,3 @@ def make_request(",
                "-    Returns the Request and the Channel underneath.",
                "+    Returns the fake Channel object which records the response to the request.",
                "@@ -204,3 +204,3 @@ def make_request(",
                "     Returns:",
                "-        Tuple[synapse.http.site.SynapseRequest, channel]",
                "+        channel",
                "     \"\"\"",
                "@@ -267,3 +267,3 @@ def make_request(",
                "-    return req, channel",
                "+    return channel",
                "diff --git a/tests/server_notices/test_consent.py b/tests/server_notices/test_consent.py",
                "index e0a9cd93a..4dd5a3617 100644",
                "--- a/tests/server_notices/test_consent.py",
                "+++ b/tests/server_notices/test_consent.py",
                "@@ -72,3 +72,3 @@ class ConsentNoticesTests(unittest.HomeserverTestCase):",
                "         # Initial sync, to get the user consent room invite",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/_matrix/client/r0/sync\", access_token=self.access_token",
                "@@ -81,3 +81,3 @@ class ConsentNoticesTests(unittest.HomeserverTestCase):",
                "         # Join the room",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\",",
                "@@ -89,3 +89,3 @@ class ConsentNoticesTests(unittest.HomeserverTestCase):",
                "         # Sync again, to get the message in the room",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"GET\", \"/_matrix/client/r0/sync\", access_token=self.access_token",
                "diff --git a/tests/server_notices/test_resource_limits_server_notices.py b/tests/server_notices/test_resource_limits_server_notices.py",
                "index 9c8027a5b..fea54464a 100644",
                "--- a/tests/server_notices/test_resource_limits_server_notices.py",
                "+++ b/tests/server_notices/test_resource_limits_server_notices.py",
                "@@ -307,3 +307,3 @@ class TestResourceLimitsServerNoticesWithRealRooms(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"GET\", \"/sync?timeout=0\", access_token=tok)",
                "+        channel = self.make_request(\"GET\", \"/sync?timeout=0\", access_token=tok)",
                "@@ -320,3 +320,3 @@ class TestResourceLimitsServerNoticesWithRealRooms(unittest.HomeserverTestCase):",
                "         # room has a notice in it.",
                "-        request, channel = self.make_request(\"GET\", \"/sync?timeout=0\", access_token=tok)",
                "+        channel = self.make_request(\"GET\", \"/sync?timeout=0\", access_token=tok)",
                "@@ -355,5 +355,3 @@ class TestResourceLimitsServerNoticesWithRealRooms(unittest.HomeserverTestCase):",
                "             # Sync with the user's token to mark the user as active.",
                "-            request, channel = self.make_request(",
                "-                \"GET\", \"/sync?timeout=0\", access_token=tok,",
                "-            )",
                "+            channel = self.make_request(\"GET\", \"/sync?timeout=0\", access_token=tok,)",
                "diff --git a/tests/test_mau.py b/tests/test_mau.py",
                "index c5ec6396a..02e56e1b0 100644",
                "--- a/tests/test_mau.py",
                "+++ b/tests/test_mau.py",
                "@@ -203,3 +203,3 @@ class TestMauLimit(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"POST\", \"/register\", request_data)",
                "+        channel = self.make_request(\"POST\", \"/register\", request_data)",
                "@@ -215,3 +215,3 @@ class TestMauLimit(unittest.HomeserverTestCase):",
                "     def do_sync_for_user(self, token):",
                "-        request, channel = self.make_request(\"GET\", \"/sync\", access_token=token)",
                "+        channel = self.make_request(\"GET\", \"/sync\", access_token=token)",
                "diff --git a/tests/test_server.py b/tests/test_server.py",
                "index 0be8c7e2f..815da18e6 100644",
                "--- a/tests/test_server.py",
                "+++ b/tests/test_server.py",
                "@@ -86,3 +86,3 @@ class JsonResourceTests(unittest.TestCase):",
                "-        _, channel = make_request(self.reactor, FakeSite(res), b\"GET\", b\"/_matrix/foo\")",
                "+        channel = make_request(self.reactor, FakeSite(res), b\"GET\", b\"/_matrix/foo\")",
                "@@ -110,3 +110,3 @@ class JsonResourceTests(unittest.TestCase):",
                "-        _, channel = make_request(self.reactor, FakeSite(res), b\"GET\", b\"/_matrix/foo\")",
                "+        channel = make_request(self.reactor, FakeSite(res), b\"GET\", b\"/_matrix/foo\")",
                "@@ -128,3 +128,3 @@ class JsonResourceTests(unittest.TestCase):",
                "-        _, channel = make_request(self.reactor, FakeSite(res), b\"GET\", b\"/_matrix/foo\")",
                "+        channel = make_request(self.reactor, FakeSite(res), b\"GET\", b\"/_matrix/foo\")",
                "@@ -150,5 +150,3 @@ class JsonResourceTests(unittest.TestCase):",
                "-        _, channel = make_request(",
                "-            self.reactor, FakeSite(res), b\"GET\", b\"/_matrix/foobar\"",
                "-        )",
                "+        channel = make_request(self.reactor, FakeSite(res), b\"GET\", b\"/_matrix/foobar\")",
                "@@ -174,3 +172,3 @@ class JsonResourceTests(unittest.TestCase):",
                "         # The path was registered as GET, but this is a HEAD request.",
                "-        _, channel = make_request(self.reactor, FakeSite(res), b\"HEAD\", b\"/_matrix/foo\")",
                "+        channel = make_request(self.reactor, FakeSite(res), b\"HEAD\", b\"/_matrix/foo\")",
                "@@ -206,3 +204,3 @@ class OptionsResourceTests(unittest.TestCase):",
                "         # render the request and return the channel",
                "-        _, channel = make_request(self.reactor, site, method, path, shorthand=False)",
                "+        channel = make_request(self.reactor, site, method, path, shorthand=False)",
                "         return channel",
                "@@ -279,3 +277,3 @@ class WrapHtmlRequestHandlerTests(unittest.TestCase):",
                "-        _, channel = make_request(self.reactor, FakeSite(res), b\"GET\", b\"/path\")",
                "+        channel = make_request(self.reactor, FakeSite(res), b\"GET\", b\"/path\")",
                "@@ -297,3 +295,3 @@ class WrapHtmlRequestHandlerTests(unittest.TestCase):",
                "-        _, channel = make_request(self.reactor, FakeSite(res), b\"GET\", b\"/path\")",
                "+        channel = make_request(self.reactor, FakeSite(res), b\"GET\", b\"/path\")",
                "@@ -318,3 +316,3 @@ class WrapHtmlRequestHandlerTests(unittest.TestCase):",
                "-        _, channel = make_request(self.reactor, FakeSite(res), b\"GET\", b\"/path\")",
                "+        channel = make_request(self.reactor, FakeSite(res), b\"GET\", b\"/path\")",
                "@@ -337,3 +335,3 @@ class WrapHtmlRequestHandlerTests(unittest.TestCase):",
                "-        _, channel = make_request(self.reactor, FakeSite(res), b\"HEAD\", b\"/path\")",
                "+        channel = make_request(self.reactor, FakeSite(res), b\"HEAD\", b\"/path\")",
                "diff --git a/tests/test_terms_auth.py b/tests/test_terms_auth.py",
                "index 71580b454..a743cdc3a 100644",
                "--- a/tests/test_terms_auth.py",
                "+++ b/tests/test_terms_auth.py",
                "@@ -55,3 +55,3 @@ class TermsTestCase(unittest.HomeserverTestCase):",
                "         request_data = json.dumps({\"username\": \"kermit\", \"password\": \"monkey\"})",
                "-        request, channel = self.make_request(b\"POST\", self.url, request_data)",
                "+        channel = self.make_request(b\"POST\", self.url, request_data)",
                "@@ -98,3 +98,3 @@ class TermsTestCase(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(b\"POST\", self.url, request_data)",
                "+        channel = self.make_request(b\"POST\", self.url, request_data)",
                "@@ -115,3 +115,3 @@ class TermsTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        request, channel = self.make_request(b\"POST\", self.url, request_data)",
                "+        channel = self.make_request(b\"POST\", self.url, request_data)",
                "diff --git a/tests/unittest.py b/tests/unittest.py",
                "index 102b0a1f3..16fd4f32b 100644",
                "--- a/tests/unittest.py",
                "+++ b/tests/unittest.py",
                "@@ -374,34 +374,2 @@ class HomeserverTestCase(TestCase):",
                "-    # Annoyingly mypy doesn't seem to pick up the fact that T is SynapseRequest",
                "-    # when the `request` arg isn't given, so we define an explicit override to",
                "-    # cover that case.",
                "-    @overload",
                "-    def make_request(",
                "-        self,",
                "-        method: Union[bytes, str],",
                "-        path: Union[bytes, str],",
                "-        content: Union[bytes, dict] = b\"\",",
                "-        access_token: Optional[str] = None,",
                "-        shorthand: bool = True,",
                "-        federation_auth_origin: str = None,",
                "-        content_is_form: bool = False,",
                "-        await_result: bool = True,",
                "-    ) -> Tuple[SynapseRequest, FakeChannel]:",
                "-        ...",
                "-",
                "-    @overload",
                "-    def make_request(",
                "-        self,",
                "-        method: Union[bytes, str],",
                "-        path: Union[bytes, str],",
                "-        content: Union[bytes, dict] = b\"\",",
                "-        access_token: Optional[str] = None,",
                "-        request: Type[T] = SynapseRequest,",
                "-        shorthand: bool = True,",
                "-        federation_auth_origin: str = None,",
                "-        content_is_form: bool = False,",
                "-        await_result: bool = True,",
                "-    ) -> Tuple[T, FakeChannel]:",
                "-        ...",
                "-",
                "     def make_request(",
                "@@ -417,3 +385,3 @@ class HomeserverTestCase(TestCase):",
                "         await_result: bool = True,",
                "-    ) -> Tuple[T, FakeChannel]:",
                "+    ) -> FakeChannel:",
                "         \"\"\"",
                "@@ -440,3 +408,3 @@ class HomeserverTestCase(TestCase):",
                "         Returns:",
                "-            Tuple[synapse.http.site.SynapseRequest, channel]",
                "+            The FakeChannel object which stores the result of the request.",
                "         \"\"\"",
                "@@ -570,3 +538,3 @@ class HomeserverTestCase(TestCase):",
                "         # Create the user",
                "-        request, channel = self.make_request(\"GET\", \"/_synapse/admin/v1/register\")",
                "+        channel = self.make_request(\"GET\", \"/_synapse/admin/v1/register\")",
                "         self.assertEqual(channel.code, 200, msg=channel.result)",
                "@@ -595,3 +563,3 @@ class HomeserverTestCase(TestCase):",
                "         )",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", \"/_synapse/admin/v1/register\", body.encode(\"utf8\")",
                "@@ -613,3 +581,3 @@ class HomeserverTestCase(TestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", \"/_matrix/client/r0/login\", json.dumps(body).encode(\"utf8\")",
                "@@ -681,3 +649,3 @@ class HomeserverTestCase(TestCase):",
                "-        request, channel = self.make_request(",
                "+        channel = self.make_request(",
                "             \"POST\", \"/_matrix/client/r0/login\", json.dumps(body).encode(\"utf8\")"
            ],
            "changed_files": [
                "tests/app/test_frontend_proxy.py",
                "tests/app/test_openid_listener.py",
                "tests/federation/test_complexity.py",
                "tests/federation/test_federation_server.py",
                "tests/federation/transport/test_server.py",
                "tests/handlers/test_directory.py",
                "tests/handlers/test_message.py",
                "tests/handlers/test_password_providers.py",
                "tests/handlers/test_typing.py",
                "tests/handlers/test_user_directory.py",
                "tests/http/test_additional_resource.py",
                "tests/push/test_http.py",
                "tests/replication/test_auth.py",
                "tests/replication/test_client_reader_shard.py",
                "tests/replication/test_multi_media_repo.py",
                "tests/replication/test_sharded_event_persister.py",
                "tests/rest/admin/test_admin.py",
                "tests/rest/admin/test_device.py",
                "tests/rest/admin/test_event_reports.py",
                "tests/rest/admin/test_media.py",
                "tests/rest/admin/test_room.py",
                "tests/rest/admin/test_statistics.py",
                "tests/rest/admin/test_user.py",
                "tests/rest/client/test_consent.py",
                "tests/rest/client/test_ephemeral_message.py",
                "tests/rest/client/test_identity.py",
                "tests/rest/client/test_redactions.py",
                "tests/rest/client/test_retention.py",
                "tests/rest/client/test_shadow_banned.py",
                "tests/rest/client/test_third_party_rules.py",
                "tests/rest/client/v1/test_directory.py",
                "tests/rest/client/v1/test_events.py",
                "tests/rest/client/v1/test_login.py",
                "tests/rest/client/v1/test_presence.py",
                "tests/rest/client/v1/test_profile.py",
                "tests/rest/client/v1/test_push_rule_attrs.py",
                "tests/rest/client/v1/test_rooms.py",
                "tests/rest/client/v1/test_typing.py",
                "tests/rest/client/v1/utils.py",
                "tests/rest/client/v2_alpha/test_account.py",
                "tests/rest/client/v2_alpha/test_auth.py",
                "tests/rest/client/v2_alpha/test_capabilities.py",
                "tests/rest/client/v2_alpha/test_filter.py",
                "tests/rest/client/v2_alpha/test_password_policy.py",
                "tests/rest/client/v2_alpha/test_register.py",
                "tests/rest/client/v2_alpha/test_relations.py",
                "tests/rest/client/v2_alpha/test_shared_rooms.py",
                "tests/rest/client/v2_alpha/test_sync.py",
                "tests/rest/media/v1/test_media_storage.py",
                "tests/rest/media/v1/test_url_preview.py",
                "tests/rest/test_health.py",
                "tests/rest/test_well_known.py",
                "tests/server.py",
                "tests/server_notices/test_consent.py",
                "tests/server_notices/test_resource_limits_server_notices.py",
                "tests/test_mau.py",
                "tests/test_server.py",
                "tests/test_terms_auth.py",
                "tests/unittest.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: well-known",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server, federation, know, resource, file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "0eb9b2f86667a059f692d71d5c224c173498bb7b",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607452885,
            "hunks": 2,
            "message": "Fix installing pysaml2 on Python 3.5. (#8898) This pins pysaml2 to < 6.4.0 on Python 3.5, as the last known working version.",
            "diff": [
                "diff --git a/changelog.d/8898.misc b/changelog.d/8898.misc",
                "new file mode 100644",
                "index 000000000..bdb0d40d5",
                "--- /dev/null",
                "+++ b/changelog.d/8898.misc",
                "@@ -0,0 +1 @@",
                "+Add a maximum version for pysaml2 on Python 3.5.",
                "diff --git a/synapse/python_dependencies.py b/synapse/python_dependencies.py",
                "index aab77fc45..040f76bb5 100644",
                "--- a/synapse/python_dependencies.py",
                "+++ b/synapse/python_dependencies.py",
                "@@ -101,3 +101,7 @@ CONDITIONAL_REQUIREMENTS = {",
                "     ],",
                "-    \"saml2\": [\"pysaml2>=4.5.0\"],",
                "+    \"saml2\": [",
                "+        # pysaml2 6.4.0 is incompatible with Python 3.5 (see https://github.com/IdentityPython/pysaml2/issues/749)",
                "+        \"pysaml2>=4.5.0,<6.4.0;python_version<'3.6'\",",
                "+        \"pysaml2>=4.5.0;python_version>='3.6'\",",
                "+    ],",
                "     \"oidc\": [\"authlib>=0.14.0\"],"
            ],
            "changed_files": [
                "changelog.d/8898.misc",
                "synapse/python_dependencies.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8898": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "1a9553045c239160e4c9d6aff1f9adb7fd7d7193"
                ]
            ],
            "tags": [
                "v1.23.1",
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: know, version, python",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: python",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8898",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "62ac8b9c0db62ba42934b432b10fa9d87ee68434",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608059755,
            "hunks": 11,
            "message": "Get Synapse main and worker process startup working!",
            "diff": [
                "diff --git a/docker/Dockerfile-workers b/docker/Dockerfile-workers",
                "index 88b2a5262..a98d95d5e 100644",
                "--- a/docker/Dockerfile-workers",
                "+++ b/docker/Dockerfile-workers",
                "@@ -7,11 +7,4 @@ RUN apt-get install -y supervisor redis nginx",
                "-# A script to read environment variables and create the necessary",
                "-# files to run the desired worker configuration",
                "-COPY ./docker/create_worker_config_files.py /create_worker_config_files.py",
                "-RUN /create_worker_config_files.py",
                "-",
                "-# Create a volume for logging. The official Synapse docker image",
                "-# only logs to console, however this is inconvenient for multi-process",
                "-# containers.",
                "-VOLUME [\"/logs\"]",
                "+# Copy the worker process and log configuration files",
                "+COPY ./docker/workers /conf/workers/",
                "@@ -20,6 +13,10 @@ EXPOSE 8008/tcp 8009/tcp 8448/tcp",
                "-# Start supervisord",
                "-COPY ./docker/worker_conf/supervisord.conf /etc/supervisor/conf.d/supervisord.conf",
                "-ENTRYPOINT [\"/usr/bin/supervisord\"]",
                "+# Volume for user-editable config files, logs etc.",
                "+VOLUME [\"/data\"]",
                "+",
                "+# A script to read environment variables and create the necessary",
                "+# files to run the desired worker configuration. Will start supervisord.",
                "+COPY ./docker/configure_workers_and_start.py /configure_workers_and_start.py",
                "+ENTRYPOINT [\"/configure_workers_and_start.py\"]",
                "-# TODO: Healthcheck? Can we ask supervisord?",
                "\\ No newline at end of file",
                "+# TODO: Healthcheck? Which worker to ask? Can we ask supervisord?",
                "\\ No newline at end of file",
                "diff --git a/docker/configure_workers_and_start.py b/docker/configure_workers_and_start.py",
                "new file mode 100755",
                "index 000000000..57ae5cac8",
                "--- /dev/null",
                "+++ b/docker/configure_workers_and_start.py",
                "@@ -0,0 +1,298 @@",
                "+#!/usr/bin/env python",
                "+# -*- coding: utf-8 -*-",
                "+# Copyright 2020 The Matrix.org Foundation C.I.C.",
                "+#",
                "+# Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+# you may not use this file except in compliance with the License.",
                "+# You may obtain a copy of the License at",
                "+#",
                "+#     http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing, software",
                "+# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+# See the License for the specific language governing permissions and",
                "+# limitations under the License.",
                "+",
                "+# This script reads environment variables and generates a shared Synapse worker,",
                "+# nginx and supervisord configs depending on the workers requested",
                "+",
                "+import os",
                "+import sys",
                "+import subprocess",
                "+import jinja2",
                "+",
                "+",
                "+# Utility functions",
                "+def log(txt):",
                "+    print(txt)",
                "+",
                "+",
                "+def error(txt):",
                "+    log(txt)",
                "+    sys.exit(2)",
                "+",
                "+",
                "+def convert(src, dst, environ):",
                "+    \"\"\"Generate a file from a template",
                "+",
                "+    Args:",
                "+        src (str): path to input file",
                "+        dst (str): path to file to write",
                "+        environ (dict): environment dictionary, for replacement mappings.",
                "+    \"\"\"",
                "+    with open(src) as infile:",
                "+        template = infile.read()",
                "+    rendered = jinja2.Template(template, autoescape=True).render(**environ)",
                "+    with open(dst, \"w\") as outfile:",
                "+        outfile.write(rendered)",
                "+",
                "+",
                "+def generate_base_homeserver_config():",
                "+    \"\"\"Starts Synapse and generates a basic homeserver config, which will later be",
                "+    modified for worker support.",
                "+",
                "+    Raises: CalledProcessError if calling start.py return a non-zero exit code.",
                "+    \"\"\"",
                "+    # start.py already does this for us, so just call that.",
                "+    # note that this script is copied in in the official, monolith dockerfile",
                "+    subprocess.check_output([\"/usr/local/bin/python\", \"/start.py\", \"generate\"])",
                "+",
                "+",
                "+def generate_worker_files(environ, config_path: str, data_dir: str):",
                "+    \"\"\"Read the desired list of workers from environment variables and generate",
                "+    shared homeserver, nginx and supervisord configs.",
                "+",
                "+    Args:",
                "+        environ: _Environ[str]",
                "+        config_path: Where to output the generated Synapse main worker config file.",
                "+        data_dir: The location of the synapse data directory. Where log and",
                "+            user-facing config files live.",
                "+    \"\"\"",
                "+    # Note that yaml cares about indentation, so care should be taken to insert lines",
                "+    # into files at the correct indentation below.",
                "+",
                "+    # The contents of a Synapse config file that will be added alongside the generated",
                "+    # config when running the main Synapse process.",
                "+    # It is intended mainly for disabling functionality when certain workers are spun up.",
                "+    homeserver_config = \"\"\"",
                "+redis:",
                "+    enabled: true",
                "+",
                "+# TODO: remove before prod",
                "+suppress_key_server_warning: true",
                "+    \"\"\"",
                "+",
                "+    # The supervisord config",
                "+    supervisord_config = \"\"\"",
                "+[supervisord]",
                "+nodaemon=true",
                "+",
                "+[program:nginx]",
                "+command=/usr/sbin/nginx -g \"daemon off;\"",
                "+priority=900",
                "+stdout_logfile=/dev/stdout",
                "+stdout_logfile_maxbytes=0",
                "+stderr_logfile=/dev/stderr",
                "+stderr_logfile_maxbytes=0",
                "+username=www-data",
                "+autorestart=true",
                "+",
                "+[program:synapse_main]",
                "+command=/usr/local/bin/python -m synapse.app.homeserver \\",
                "+    --config-path=\"%s\" \\",
                "+    --config-path=/conf/workers/shared.yaml",
                "+",
                "+# Log startup failures to supervisord's stdout/err",
                "+# Regular synapse logs will still go in the configured data directory",
                "+stdout_logfile=/dev/stdout",
                "+stdout_logfile_maxbytes=0",
                "+stderr_logfile=/dev/stderr",
                "+stderr_logfile_maxbytes=0",
                "+autorestart=unexpected",
                "+exitcodes=0",
                "+",
                "+    \"\"\" % (config_path,)",
                "+",
                "+    # An nginx site config. Will live in /etc/nginx/conf.d",
                "+    nginx_config_template_header = \"\"\"",
                "+server {",
                "+    listen 80;",
                "+    listen [::]:80;",
                "+",
                "+    # For the federation port",
                "+    listen 8448 default_server;",
                "+    listen [::]:8448 default_server;",
                "+",
                "+    server_name localhost;",
                "+    \"\"\"",
                "+    nginx_config_body = \"\"  # to modify below",
                "+    nginx_config_template_end = \"\"\"",
                "+    # Send all other traffic to the main process",
                "+    location ~* ^(\\/_matrix|\\/_synapse) {",
                "+        proxy_pass http://localhost:8008;",
                "+        proxy_set_header X-Forwarded-For $remote_addr;",
                "+",
                "+        # TODO: Can we move this to the default nginx.conf so all locations are",
                "+        # affected?",
                "+        #",
                "+        # Nginx by default only allows file uploads up to 1M in size",
                "+        # Increase client_max_body_size to match max_upload_size defined in homeserver.yaml",
                "+        client_max_body_size 50M;",
                "+    }",
                "+}",
                "+    \"\"\"",
                "+",
                "+    # Read desired worker configuration from environment",
                "+    if \"SYNAPSE_WORKERS\" not in environ:",
                "+        error(\"Environment variable 'SYNAPSE_WORKERS' is mandatory.\")",
                "+",
                "+    worker_types = environ.get(\"SYNAPSE_WORKERS\")",
                "+    worker_types = worker_types.split(\",\")",
                "+",
                "+    for worker_type in worker_types:",
                "+        worker_type = worker_type.strip()",
                "+",
                "+        if worker_type == \"pusher\":",
                "+            # Disable push handling from the main process",
                "+            homeserver_config += \"\"\"",
                "+start_pushers: false",
                "+            \"\"\"",
                "+",
                "+            # Enable the pusher worker in supervisord",
                "+            supervisord_config += \"\"\"",
                "+[program:synapse_pusher]",
                "+command=/usr/local/bin/python -m synapse.app.pusher \\",
                "+    --config-path=\"%s\" \\",
                "+    --config-path=/conf/workers/shared.yaml \\",
                "+    --config-path=/conf/workers/pusher.yaml",
                "+autorestart=unexpected",
                "+exitcodes=0",
                "+stdout_logfile=/dev/stdout",
                "+stdout_logfile_maxbytes=0",
                "+stderr_logfile=/dev/stderr",
                "+stderr_logfile_maxbytes=0",
                "+            \"\"\" % (config_path,)",
                "+",
                "+            # This worker does not handle any REST endpoints",
                "+",
                "+        elif worker_type == \"appservice\":",
                "+            # Disable appservice traffic sending from the main process",
                "+            homeserver_config += \"\"\"",
                "+            notify_appservices: false",
                "+            \"\"\"",
                "+",
                "+            # Enable the pusher worker in supervisord",
                "+            supervisord_config += \"\"\"",
                "+[program:synapse_appservice]",
                "+command=/usr/local/bin/python -m synapse.app.appservice \\",
                "+    --config-path=\"%s\" \\",
                "+    --config-path=/conf/workers/shared.yaml \\",
                "+    --config-path=/conf/workers/appservice.yaml",
                "+autorestart=unexpected",
                "+exitcodes=0",
                "+stdout_logfile=/dev/stdout",
                "+stdout_logfile_maxbytes=0",
                "+stderr_logfile=/dev/stderr",
                "+stderr_logfile_maxbytes=0",
                "+            \"\"\" % (config_path,)",
                "+",
                "+            # This worker does not handle any REST endpoints",
                "+",
                "+        elif worker_type == \"user_dir\":",
                "+            # Disable user directory updates on the main process",
                "+            homeserver_config += \"\"\"",
                "+update_user_directory: false",
                "+            \"\"\"",
                "+",
                "+            # Enable the user directory worker in supervisord",
                "+            supervisord_config += \"\"\"",
                "+[program:synapse_user_dir]",
                "+command=/usr/local/bin/python -m synapse.app.user_dir \\",
                "+    --config-path=\"%s\" \\",
                "+    --config-path=/conf/workers/shared.yaml \\",
                "+    --config-path=/conf/workers/user_dir.yaml",
                "+autorestart=unexpected",
                "+exitcodes=0",
                "+stdout_logfile=/dev/stdout",
                "+stdout_logfile_maxbytes=0",
                "+stderr_logfile=/dev/stderr",
                "+stderr_logfile_maxbytes=0",
                "+            \"\"\" % (config_path,)",
                "+",
                "+            # Route user directory requests to this worker",
                "+            nginx_config_body += \"\"\"",
                "+    location ~* ^/_matrix/client/(api/v1|r0|unstable)/user_directory/search$ {",
                "+        proxy_pass http://localhost:8010;",
                "+        proxy_set_header X-Forwarded-For $remote_addr;",
                "+    }",
                "+            \"\"\"",
                "+",
                "+    # Write out the config files",
                "+",
                "+    # Shared homeserver config",
                "+    print(homeserver_config)",
                "+    with open(\"/conf/workers/shared.yaml\", \"w\") as f:",
                "+        f.write(homeserver_config)",
                "+",
                "+    # Nginx config",
                "+    print()",
                "+    print(nginx_config_template_header)",
                "+    print(nginx_config_body)",
                "+    print(nginx_config_template_end)",
                "+    with open(\"/etc/nginx/conf.d/matrix-synapse.conf\", \"w\") as f:",
                "+        f.write(nginx_config_template_header)",
                "+        f.write(nginx_config_body)",
                "+        f.write(nginx_config_template_end)",
                "+",
                "+    # Supervisord config",
                "+    print()",
                "+    print(supervisord_config)",
                "+    with open(\"/etc/supervisor/conf.d/supervisord.conf\", \"w\") as f:",
                "+        f.write(supervisord_config)",
                "+",
                "+    # Generate worker log config files from the templates.",
                "+    # The templates are mainly there so that we can inject some environment variable",
                "+    # values into them.",
                "+    log_config_template_dir = \"/conf/workers/log_config_templates/\"",
                "+    log_config_dir = \"/conf/workers/\"",
                "+    for log_config_filename in os.listdir(log_config_template_dir):",
                "+        template_path = log_config_template_dir + log_config_filename",
                "+        out_path = log_config_dir + log_config_filename",
                "+",
                "+        convert(template_path, out_path, environ)",
                "+",
                "+    # Ensure the logging directory exists",
                "+    log_dir = data_dir + \"/logs\"",
                "+    if not os.path.exists(log_dir):",
                "+        os.mkdir(log_dir)",
                "+",
                "+",
                "+def start_supervisord():",
                "+    \"\"\"Starts up supervisord which then starts and monitors all other necessary processes",
                "+",
                "+    Raises: CalledProcessError if calling start.py return a non-zero exit code.",
                "+    \"\"\"",
                "+    subprocess.check_output([\"/usr/bin/supervisord\"])",
                "+",
                "+",
                "+def main(args, environ):",
                "+    config_dir = environ.get(\"SYNAPSE_CONFIG_DIR\", \"/data\")",
                "+    config_path = environ.get(\"SYNAPSE_CONFIG_PATH\", config_dir + \"/homeserver.yaml\")",
                "+    data_dir = environ.get(\"SYNAPSE_DATA_DIR\", \"/data\")",
                "+",
                "+    # Generate the base homeserver config if one does not yet exist",
                "+    if not os.path.exists(config_path):",
                "+        log(\"Generating base homeserver config\")",
                "+        generate_base_homeserver_config()",
                "+",
                "+    # Always regenerate all other config files",
                "+    generate_worker_files(environ, config_path, data_dir)",
                "+",
                "+    # Start supervisord, which will start Synapse, all of the configured worker",
                "+    # processes, redis, nginx etc. according to the config we created above.",
                "+    start_supervisord()",
                "+",
                "+",
                "+if __name__ == \"__main__\":",
                "+    main(sys.argv, os.environ)",
                "diff --git a/docker/generate_shared_worker_config.py b/docker/generate_shared_worker_config.py",
                "deleted file mode 100644",
                "index 755a73734..000000000",
                "--- a/docker/generate_shared_worker_config.py",
                "+++ /dev/null",
                "@@ -1,145 +0,0 @@",
                "-#!/usr/bin/env python",
                "-# -*- coding: utf-8 -*-",
                "-# Copyright 2020 The Matrix.org Foundation C.I.C.",
                "-#",
                "-# Licensed under the Apache License, Version 2.0 (the \"License\");",
                "-# you may not use this file except in compliance with the License.",
                "-# You may obtain a copy of the License at",
                "-#",
                "-#     http://www.apache.org/licenses/LICENSE-2.0",
                "-#",
                "-# Unless required by applicable law or agreed to in writing, software",
                "-# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-# See the License for the specific language governing permissions and",
                "-# limitations under the License.",
                "-",
                "-# This script reads environment variables and generates a shared Synapse worker,",
                "-# nginx and supervisord configs depending on the workers requested",
                "-",
                "-import os",
                "-import sys",
                "-",
                "-",
                "-def main(args, environ):",
                "-    \"\"\"Read the desired list of workers from environment variables and generate",
                "-    shared homeserver, nginx and supervisord configs.",
                "-",
                "-    Args:",
                "-        environ: _Environ[str]",
                "-    \"\"\"",
                "-    # The contents of this string will be appended to the one generated by",
                "-    # the homeserver, and is intended mainly for disabling functionality on the main",
                "-    # when certain workers are spun up",
                "-    homeserver_config = \"\"",
                "-",
                "-    # The contents of this string will be append to the base supervisord config",
                "-    supervisord_config = \"\"",
                "-",
                "-    # An nginx site config. Will live in /etc/nginx/conf.d",
                "-    nginx_config_template_header = \"\"\"",
                "-    server {",
                "-        listen 80;",
                "-        listen [::]:80;",
                "-",
                "-        # For the federation port",
                "-        listen 8448 default_server;",
                "-        listen [::]:8448 default_server;",
                "-",
                "-        server_name localhost;",
                "-    \"\"\"",
                "-    nginx_config_body = \"\"",
                "-    nginx_config_template_end = \"\"\"",
                "-        # Send all other traffic to the main process",
                "-        location ~* ^(\\/_matrix|\\/_synapse) {",
                "-            proxy_pass http://localhost:8008;",
                "-            proxy_set_header X-Forwarded-For $remote_addr;",
                "-",
                "-            # TODO: Can we move this to the default nginx.conf so all locations are",
                "-            # affected?",
                "-            #",
                "-            # Nginx by default only allows file uploads up to 1M in size",
                "-            # Increase client_max_body_size to match max_upload_size defined in homeserver.yaml",
                "-            client_max_body_size 50M;",
                "-        }",
                "-    }",
                "-    \"\"\"",
                "-",
                "-    # Read desired worker configuration from environment",
                "-    worker_types = environ.get(\"SYNAPSE_WORKERS\")",
                "-    worker_types = worker_types.split(\",\")",
                "-",
                "-    for worker_type in worker_types:",
                "-        if worker_type == \"pusher\":",
                "-            # Disable push handling from the main process",
                "-            homeserver_config += \"\"\"",
                "-            start_pushers: false",
                "-            \"\"\"",
                "-",
                "-            # Enable the pusher worker in supervisord",
                "-            supervisord_config += \"\"\"",
                "-            \"\"\"",
                "-",
                "-            # This worker does not handle any REST endpoints",
                "-",
                "-        elif worker_type == \"appservice\":",
                "-            # Disable appservice traffic sending from the main process",
                "-            homeserver_config += \"\"\"",
                "-            notify_appservices: false",
                "-            \"\"\"",
                "-",
                "-            # Enable the pusher worker in supervisord",
                "-            supervisord_config += \"\"\"",
                "-            [program:synapse_user_dir]",
                "-            command=/usr/local/bin/python -m synapse.app.user_dir \\",
                "-                --config-path=/config/homeserver.yaml \\",
                "-                --config-path=/config/workers/user_dir.yaml",
                "-            autorestart=unexpected",
                "-            exitcodes=0",
                "-            \"\"\"",
                "-",
                "-            # This worker does not handle any REST endpoints",
                "-",
                "-        elif worker_type == \"user_dir\":",
                "-            # Disable user directory updates on the main process",
                "-            homeserver_config += \"\"\"",
                "-            update_user_directory: false",
                "-            \"\"\"",
                "-",
                "-            # Enable the user directory worker in supervisord",
                "-            supervisord_config += \"\"\"",
                "-            [program:synapse_user_dir]",
                "-            command=/usr/local/bin/python -m synapse.app.user_dir \\",
                "-                --config-path=/config/homeserver.yaml \\",
                "-                --config-path=/config/workers/user_dir.yaml",
                "-            autorestart=unexpected",
                "-            exitcodes=0",
                "-            \"\"\"",
                "-",
                "-            # Route user directory requests to this worker",
                "-            nginx_config_body += \"\"\"",
                "-            location ~* ^/_matrix/client/(api/v1|r0|unstable)/user_directory/search$ {",
                "-                proxy_pass http://localhost:8010;",
                "-                proxy_set_header X-Forwarded-For $remote_addr;",
                "-            }",
                "-            \"\"\"",
                "-",
                "-    # Write out the config files",
                "-",
                "-    # Main homeserver config",
                "-    with open(\"/config/main.yaml\", \"a\") as f:",
                "-        f.write(homeserver_config)",
                "-",
                "-    # Nginx config",
                "-    with open(\"/config/nginx.conf\", \"w\") as f:",
                "-        f.write(nginx_config_template_header)",
                "-        f.write(nginx_config_body)",
                "-        f.write(nginx_config_template_end)",
                "-",
                "-    # Supervisord config",
                "-    with open(\"/config/supervisord.conf\", \"a\") as f:",
                "-        f.write(supervisord_config)",
                "-",
                "-",
                "-if __name__ == \"__main__\":",
                "-    main(sys.argv, os.environ)",
                "diff --git a/docker/worker_conf/main.conf b/docker/worker_conf/main.conf",
                "deleted file mode 100644",
                "index 917b82500..000000000",
                "--- a/docker/worker_conf/main.conf",
                "+++ /dev/null",
                "@@ -1,9 +0,0 @@",
                "-# A bit of Synapse config file that will be appended to the main homeserver config file.",
                "-# It is intended for generate_shared_worker_config.py to add entries to this file to",
                "-# disable functionality as equivalent workers are spun up.",
                "-",
                "-# TODO: extend the existing `listeners` section. This defines the ports that the",
                "-# main process will listen on.",
                "-",
                "-redis:",
                "-    enabled: true",
                "diff --git a/docker/worker_conf/supervisord.conf b/docker/worker_conf/supervisord.conf",
                "deleted file mode 100644",
                "index 63c898e75..000000000",
                "--- a/docker/worker_conf/supervisord.conf",
                "+++ /dev/null",
                "@@ -1,19 +0,0 @@",
                "-[supervisord]",
                "-nodaemon=true",
                "-",
                "-[program:nginx]",
                "-command=/usr/sbin/nginx -g \"daemon off;\"",
                "-priority=900",
                "-stdout_logfile= /dev/stdout",
                "-stdout_logfile_maxbytes=0",
                "-stderr_logfile=/dev/stderr",
                "-stderr_logfile_maxbytes=0",
                "-username=www-data",
                "-autorestart=true",
                "-",
                "-[program:synapse_main]",
                "-command=/usr/local/bin/python -m synapse.app.homeserver \\",
                "-    --config-path=/config/homeserver.yaml \\",
                "-    --config-path=/config/main.yaml",
                "-autorestart=unexpected",
                "-exitcodes=0",
                "diff --git a/docker/workers/log_config_templates/pusher_log.yaml b/docker/workers/log_config_templates/pusher_log.yaml",
                "new file mode 100644",
                "index 000000000..c2563242a",
                "--- /dev/null",
                "+++ b/docker/workers/log_config_templates/pusher_log.yaml",
                "@@ -0,0 +1,30 @@",
                "+version: 1",
                "+",
                "+formatters:",
                "+  precise:",
                "+   format: '%(asctime)s - %(name)s - %(lineno)d - %(levelname)s - %(request)s - %(message)s'",
                "+",
                "+handlers:",
                "+  file:",
                "+    class: logging.handlers.TimedRotatingFileHandler",
                "+    formatter: precise",
                "+    filename: \"{{ SYNAPSE_DATA_DIR or '/data' }}/logs/pusher1.log\"",
                "+    when: midnight",
                "+    backupCount: 3  # Does not include the current log file.",
                "+    encoding: utf8",
                "+",
                "+  console:",
                "+    class: logging.StreamHandler",
                "+    formatter: precise",
                "+",
                "+loggers:",
                "+    synapse.storage.SQL:",
                "+        # beware: increasing this to DEBUG will make synapse log sensitive",
                "+        # information such as access tokens.",
                "+        level: INFO",
                "+",
                "+root:",
                "+    level: {{ SYNAPSE_LOG_LEVEL or \"INFO\" }}",
                "+    handlers: [console]",
                "+",
                "+disable_existing_loggers: false",
                "\\ No newline at end of file",
                "diff --git a/docker/workers/log_config_templates/user_dir_log.yaml b/docker/workers/log_config_templates/user_dir_log.yaml",
                "new file mode 100644",
                "index 000000000..c2563242a",
                "--- /dev/null",
                "+++ b/docker/workers/log_config_templates/user_dir_log.yaml",
                "@@ -0,0 +1,30 @@",
                "+version: 1",
                "+",
                "+formatters:",
                "+  precise:",
                "+   format: '%(asctime)s - %(name)s - %(lineno)d - %(levelname)s - %(request)s - %(message)s'",
                "+",
                "+handlers:",
                "+  file:",
                "+    class: logging.handlers.TimedRotatingFileHandler",
                "+    formatter: precise",
                "+    filename: \"{{ SYNAPSE_DATA_DIR or '/data' }}/logs/pusher1.log\"",
                "+    when: midnight",
                "+    backupCount: 3  # Does not include the current log file.",
                "+    encoding: utf8",
                "+",
                "+  console:",
                "+    class: logging.StreamHandler",
                "+    formatter: precise",
                "+",
                "+loggers:",
                "+    synapse.storage.SQL:",
                "+        # beware: increasing this to DEBUG will make synapse log sensitive",
                "+        # information such as access tokens.",
                "+        level: INFO",
                "+",
                "+root:",
                "+    level: {{ SYNAPSE_LOG_LEVEL or \"INFO\" }}",
                "+    handlers: [console]",
                "+",
                "+disable_existing_loggers: false",
                "\\ No newline at end of file",
                "diff --git a/docker/workers/pusher.yaml b/docker/workers/pusher.yaml",
                "new file mode 100644",
                "index 000000000..bf1ccf413",
                "--- /dev/null",
                "+++ b/docker/workers/pusher.yaml",
                "@@ -0,0 +1,13 @@",
                "+worker_app: synapse.app.pusher",
                "+worker_name: pusher",
                "+",
                "+# The replication listener on the main synapse process.",
                "+worker_replication_host: 127.0.0.1",
                "+worker_replication_http_port: 9093",
                "+",
                "+worker_listeners:",
                "+ - type: http",
                "+   port: 8083",
                "+   resources: []",
                "+",
                "+worker_log_config: /conf/workers/pusher_log.yaml",
                "\\ No newline at end of file",
                "diff --git a/docker/workers/user_dir.yaml b/docker/workers/user_dir.yaml",
                "new file mode 100644",
                "index 000000000..8f5deaf37",
                "--- /dev/null",
                "+++ b/docker/workers/user_dir.yaml",
                "@@ -0,0 +1,13 @@",
                "+worker_app: synapse.app.user_dir",
                "+worker_name: user_dir",
                "+",
                "+# The replication listener on the main synapse process.",
                "+worker_replication_host: 127.0.0.1",
                "+worker_replication_http_port: 9093",
                "+",
                "+worker_listeners:",
                "+ - type: http",
                "+   port: 8084",
                "+   resources: []",
                "+",
                "+worker_log_config: /conf/workers/user_dir_log.yaml",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "docker/Dockerfile-workers",
                "docker/configure_workers_and_start.py",
                "docker/generate_shared_worker_config.py",
                "docker/worker_conf/main.conf",
                "docker/worker_conf/supervisord.conf",
                "docker/workers/log_config_templates/pusher_log.yaml",
                "docker/workers/log_config_templates/user_dir_log.yaml",
                "docker/workers/pusher.yaml",
                "docker/workers/user_dir.yaml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: matrix-synapse",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "3ce2f303f15f6ac3dc352298972dc6e04d9b7a8b",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1605780333,
            "hunks": 32,
            "message": "Consistently use room_id from federation request body (#8776) * Consistently use room_id from federation request body Some federation APIs have a redundant `room_id` path param (see https://github.com/matrix-org/matrix-doc/issues/2330). We should make sure we consistently use either the path param or the body param, and the body param is easier. * Kill off some references to \"context\" Once upon a time, \"rooms\" were known as \"contexts\". I think this kills of the last references to \"contexts\".",
            "diff": [
                "diff --git a/changelog.d/8776.bugfix b/changelog.d/8776.bugfix",
                "new file mode 100644",
                "index 000000000..dd7ebbeb8",
                "--- /dev/null",
                "+++ b/changelog.d/8776.bugfix",
                "@@ -0,0 +1 @@",
                "+Fix a bug in some federation APIs which could lead to unexpected behaviour if different parameters were set in the URI and the request body.",
                "diff --git a/synapse/federation/federation_server.py b/synapse/federation/federation_server.py",
                "index 23278e36b..4b6ab470d 100644",
                "--- a/synapse/federation/federation_server.py",
                "+++ b/synapse/federation/federation_server.py",
                "@@ -51,2 +51,3 @@ from synapse.federation.units import Edu, Transaction",
                " from synapse.http.endpoint import parse_server_name",
                "+from synapse.http.servlet import assert_params_in_dict",
                " from synapse.logging.context import (",
                "@@ -393,3 +394,3 @@ class FederationServer(FederationBase):",
                "-    async def on_context_state_request(",
                "+    async def on_room_state_request(",
                "         self, origin: str, room_id: str, event_id: str",
                "@@ -516,3 +517,3 @@ class FederationServer(FederationBase):",
                "     async def on_send_join_request(",
                "-        self, origin: str, content: JsonDict, room_id: str",
                "+        self, origin: str, content: JsonDict",
                "     ) -> Dict[str, Any]:",
                "@@ -520,3 +521,4 @@ class FederationServer(FederationBase):",
                "-        room_version = await self.store.get_room_version(room_id)",
                "+        assert_params_in_dict(content, [\"room_id\"])",
                "+        room_version = await self.store.get_room_version(content[\"room_id\"])",
                "         pdu = event_from_pdu_json(content, room_version)",
                "@@ -549,8 +551,7 @@ class FederationServer(FederationBase):",
                "-    async def on_send_leave_request(",
                "-        self, origin: str, content: JsonDict, room_id: str",
                "-    ) -> dict:",
                "+    async def on_send_leave_request(self, origin: str, content: JsonDict) -> dict:",
                "         logger.debug(\"on_send_leave_request: content: %s\", content)",
                "-        room_version = await self.store.get_room_version(room_id)",
                "+        assert_params_in_dict(content, [\"room_id\"])",
                "+        room_version = await self.store.get_room_version(content[\"room_id\"])",
                "         pdu = event_from_pdu_json(content, room_version)",
                "@@ -750,8 +751,4 @@ class FederationServer(FederationBase):",
                "-    async def on_exchange_third_party_invite_request(",
                "-        self, room_id: str, event_dict: Dict",
                "-    ):",
                "-        ret = await self.handler.on_exchange_third_party_invite_request(",
                "-            room_id, event_dict",
                "-        )",
                "+    async def on_exchange_third_party_invite_request(self, event_dict: Dict):",
                "+        ret = await self.handler.on_exchange_third_party_invite_request(event_dict)",
                "         return ret",
                "diff --git a/synapse/federation/transport/server.py b/synapse/federation/transport/server.py",
                "index a0933fae8..b53e7a20e 100644",
                "--- a/synapse/federation/transport/server.py",
                "+++ b/synapse/federation/transport/server.py",
                "@@ -442,9 +442,9 @@ class FederationEventServlet(BaseFederationServlet):",
                " class FederationStateV1Servlet(BaseFederationServlet):",
                "-    PATH = \"/state/(?P<context>[^/]*)/?\"",
                "+    PATH = \"/state/(?P<room_id>[^/]*)/?\"",
                "-    # This is when someone asks for all data for a given context.",
                "-    async def on_GET(self, origin, content, query, context):",
                "-        return await self.handler.on_context_state_request(",
                "+    # This is when someone asks for all data for a given room.",
                "+    async def on_GET(self, origin, content, query, room_id):",
                "+        return await self.handler.on_room_state_request(",
                "             origin,",
                "-            context,",
                "+            room_id,",
                "             parse_string_from_args(query, \"event_id\", None, required=False),",
                "@@ -465,5 +465,5 @@ class FederationStateIdsServlet(BaseFederationServlet):",
                " class FederationBackfillServlet(BaseFederationServlet):",
                "-    PATH = \"/backfill/(?P<context>[^/]*)/?\"",
                "+    PATH = \"/backfill/(?P<room_id>[^/]*)/?\"",
                "-    async def on_GET(self, origin, content, query, context):",
                "+    async def on_GET(self, origin, content, query, room_id):",
                "         versions = [x.decode(\"ascii\") for x in query[b\"v\"]]",
                "@@ -474,3 +474,3 @@ class FederationBackfillServlet(BaseFederationServlet):",
                "-        return await self.handler.on_backfill_request(origin, context, versions, limit)",
                "+        return await self.handler.on_backfill_request(origin, room_id, versions, limit)",
                "@@ -489,5 +489,5 @@ class FederationQueryServlet(BaseFederationServlet):",
                " class FederationMakeJoinServlet(BaseFederationServlet):",
                "-    PATH = \"/make_join/(?P<context>[^/]*)/(?P<user_id>[^/]*)\"",
                "+    PATH = \"/make_join/(?P<room_id>[^/]*)/(?P<user_id>[^/]*)\"",
                "-    async def on_GET(self, origin, _content, query, context, user_id):",
                "+    async def on_GET(self, origin, _content, query, room_id, user_id):",
                "         \"\"\"",
                "@@ -513,3 +513,3 @@ class FederationMakeJoinServlet(BaseFederationServlet):",
                "         content = await self.handler.on_make_join_request(",
                "-            origin, context, user_id, supported_versions=supported_versions",
                "+            origin, room_id, user_id, supported_versions=supported_versions",
                "         )",
                "@@ -519,6 +519,6 @@ class FederationMakeJoinServlet(BaseFederationServlet):",
                " class FederationMakeLeaveServlet(BaseFederationServlet):",
                "-    PATH = \"/make_leave/(?P<context>[^/]*)/(?P<user_id>[^/]*)\"",
                "+    PATH = \"/make_leave/(?P<room_id>[^/]*)/(?P<user_id>[^/]*)\"",
                "-    async def on_GET(self, origin, content, query, context, user_id):",
                "-        content = await self.handler.on_make_leave_request(origin, context, user_id)",
                "+    async def on_GET(self, origin, content, query, room_id, user_id):",
                "+        content = await self.handler.on_make_leave_request(origin, room_id, user_id)",
                "         return 200, content",
                "@@ -530,3 +530,3 @@ class FederationV1SendLeaveServlet(BaseFederationServlet):",
                "     async def on_PUT(self, origin, content, query, room_id, event_id):",
                "-        content = await self.handler.on_send_leave_request(origin, content, room_id)",
                "+        content = await self.handler.on_send_leave_request(origin, content)",
                "         return 200, (200, content)",
                "@@ -540,3 +540,3 @@ class FederationV2SendLeaveServlet(BaseFederationServlet):",
                "     async def on_PUT(self, origin, content, query, room_id, event_id):",
                "-        content = await self.handler.on_send_leave_request(origin, content, room_id)",
                "+        content = await self.handler.on_send_leave_request(origin, content)",
                "         return 200, content",
                "@@ -545,6 +545,6 @@ class FederationV2SendLeaveServlet(BaseFederationServlet):",
                " class FederationEventAuthServlet(BaseFederationServlet):",
                "-    PATH = \"/event_auth/(?P<context>[^/]*)/(?P<event_id>[^/]*)\"",
                "+    PATH = \"/event_auth/(?P<room_id>[^/]*)/(?P<event_id>[^/]*)\"",
                "-    async def on_GET(self, origin, content, query, context, event_id):",
                "-        return await self.handler.on_event_auth(origin, context, event_id)",
                "+    async def on_GET(self, origin, content, query, room_id, event_id):",
                "+        return await self.handler.on_event_auth(origin, room_id, event_id)",
                "@@ -552,8 +552,8 @@ class FederationEventAuthServlet(BaseFederationServlet):",
                " class FederationV1SendJoinServlet(BaseFederationServlet):",
                "-    PATH = \"/send_join/(?P<context>[^/]*)/(?P<event_id>[^/]*)\"",
                "+    PATH = \"/send_join/(?P<room_id>[^/]*)/(?P<event_id>[^/]*)\"",
                "-    async def on_PUT(self, origin, content, query, context, event_id):",
                "-        # TODO(paul): assert that context/event_id parsed from path actually",
                "+    async def on_PUT(self, origin, content, query, room_id, event_id):",
                "+        # TODO(paul): assert that room_id/event_id parsed from path actually",
                "         #   match those given in content",
                "-        content = await self.handler.on_send_join_request(origin, content, context)",
                "+        content = await self.handler.on_send_join_request(origin, content)",
                "         return 200, (200, content)",
                "@@ -562,3 +562,3 @@ class FederationV1SendJoinServlet(BaseFederationServlet):",
                " class FederationV2SendJoinServlet(BaseFederationServlet):",
                "-    PATH = \"/send_join/(?P<context>[^/]*)/(?P<event_id>[^/]*)\"",
                "+    PATH = \"/send_join/(?P<room_id>[^/]*)/(?P<event_id>[^/]*)\"",
                "@@ -566,6 +566,6 @@ class FederationV2SendJoinServlet(BaseFederationServlet):",
                "-    async def on_PUT(self, origin, content, query, context, event_id):",
                "-        # TODO(paul): assert that context/event_id parsed from path actually",
                "+    async def on_PUT(self, origin, content, query, room_id, event_id):",
                "+        # TODO(paul): assert that room_id/event_id parsed from path actually",
                "         #   match those given in content",
                "-        content = await self.handler.on_send_join_request(origin, content, context)",
                "+        content = await self.handler.on_send_join_request(origin, content)",
                "         return 200, content",
                "@@ -574,5 +574,5 @@ class FederationV2SendJoinServlet(BaseFederationServlet):",
                " class FederationV1InviteServlet(BaseFederationServlet):",
                "-    PATH = \"/invite/(?P<context>[^/]*)/(?P<event_id>[^/]*)\"",
                "+    PATH = \"/invite/(?P<room_id>[^/]*)/(?P<event_id>[^/]*)\"",
                "-    async def on_PUT(self, origin, content, query, context, event_id):",
                "+    async def on_PUT(self, origin, content, query, room_id, event_id):",
                "         # We don't get a room version, so we have to assume its EITHER v1 or",
                "@@ -591,3 +591,3 @@ class FederationV1InviteServlet(BaseFederationServlet):",
                " class FederationV2InviteServlet(BaseFederationServlet):",
                "-    PATH = \"/invite/(?P<context>[^/]*)/(?P<event_id>[^/]*)\"",
                "+    PATH = \"/invite/(?P<room_id>[^/]*)/(?P<event_id>[^/]*)\"",
                "@@ -595,4 +595,4 @@ class FederationV2InviteServlet(BaseFederationServlet):",
                "-    async def on_PUT(self, origin, content, query, context, event_id):",
                "-        # TODO(paul): assert that context/event_id parsed from path actually",
                "+    async def on_PUT(self, origin, content, query, room_id, event_id):",
                "+        # TODO(paul): assert that room_id/event_id parsed from path actually",
                "         #   match those given in content",
                "@@ -618,5 +618,3 @@ class FederationThirdPartyInviteExchangeServlet(BaseFederationServlet):",
                "     async def on_PUT(self, origin, content, query, room_id):",
                "-        content = await self.handler.on_exchange_third_party_invite_request(",
                "-            room_id, content",
                "-        )",
                "+        content = await self.handler.on_exchange_third_party_invite_request(content)",
                "         return 200, content",
                "diff --git a/synapse/handlers/federation.py b/synapse/handlers/federation.py",
                "index c38695770..e03caea25 100644",
                "--- a/synapse/handlers/federation.py",
                "+++ b/synapse/handlers/federation.py",
                "@@ -57,2 +57,3 @@ from synapse.events.validator import EventValidator",
                " from synapse.handlers._base import BaseHandler",
                "+from synapse.http.servlet import assert_params_in_dict",
                " from synapse.logging.context import (",
                "@@ -2688,3 +2689,3 @@ class FederationHandler(BaseHandler):",
                "     async def on_exchange_third_party_invite_request(",
                "-        self, room_id: str, event_dict: JsonDict",
                "+        self, event_dict: JsonDict",
                "     ) -> None:",
                "@@ -2696,8 +2697,7 @@ class FederationHandler(BaseHandler):",
                "         Args:",
                "-            room_id: The ID of the room.",
                "-",
                "-            event_dict (dict[str, Any]): Dictionary containing the event body.",
                "+            event_dict: Dictionary containing the event body.",
                "         \"\"\"",
                "-        room_version = await self.store.get_room_version_id(room_id)",
                "+        assert_params_in_dict(event_dict, [\"room_id\"])",
                "+        room_version = await self.store.get_room_version_id(event_dict[\"room_id\"])",
                "diff --git a/tests/handlers/test_federation.py b/tests/handlers/test_federation.py",
                "index 9ef80fe50..bf866dacf 100644",
                "--- a/tests/handlers/test_federation.py",
                "+++ b/tests/handlers/test_federation.py",
                "@@ -61,3 +61,2 @@ class FederationTestCase(unittest.HomeserverTestCase):",
                "         d = self.handler.on_exchange_third_party_invite_request(",
                "-            room_id=room_id,",
                "             event_dict={"
            ],
            "changed_files": [
                "changelog.d/8776.bugfix",
                "synapse/federation/federation_server.py",
                "synapse/federation/transport/server.py",
                "synapse/handlers/federation.py",
                "tests/handlers/test_federation.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8776": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.23.1",
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: reference, issue, request, federation, know",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server, federation",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8776",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8a02d38ce274db40e5629c882af1fefdb8c9adc3",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607689969,
            "hunks": 7,
            "message": "Update mypy to 0.790 to resolve mypy CI errors (#72)",
            "diff": [
                "diff --git a/changelog.d/72.bugfix b/changelog.d/72.bugfix",
                "new file mode 100644",
                "index 000000000..7ebd16f43",
                "--- /dev/null",
                "+++ b/changelog.d/72.bugfix",
                "@@ -0,0 +1 @@",
                "+Update the version of mypy to 0.790.",
                "diff --git a/synapse/handlers/auth.py b/synapse/handlers/auth.py",
                "index 00eae9205..8770e4363 100644",
                "--- a/synapse/handlers/auth.py",
                "+++ b/synapse/handlers/auth.py",
                "@@ -1117,3 +1117,3 @@ class AuthHandler(BaseHandler):",
                "-        def _do_validate_hash():",
                "+        def _do_validate_hash(checked_hash: bytes):",
                "             # Normalise the Unicode in the password",
                "@@ -1123,3 +1123,3 @@ class AuthHandler(BaseHandler):",
                "                 pw.encode(\"utf8\") + self.hs.config.password_pepper.encode(\"utf8\"),",
                "-                stored_hash,",
                "+                checked_hash,",
                "             )",
                "@@ -1130,3 +1130,5 @@ class AuthHandler(BaseHandler):",
                "-            return await defer_to_thread(self.hs.get_reactor(), _do_validate_hash)",
                "+            return await defer_to_thread(",
                "+                self.hs.get_reactor(), _do_validate_hash, stored_hash",
                "+            )",
                "         else:",
                "diff --git a/synapse/python_dependencies.py b/synapse/python_dependencies.py",
                "index 0ddead8a0..3e188cd4d 100644",
                "--- a/synapse/python_dependencies.py",
                "+++ b/synapse/python_dependencies.py",
                "@@ -109,2 +109,4 @@ CONDITIONAL_REQUIREMENTS = {",
                "+CONDITIONAL_REQUIREMENTS[\"mypy\"] = [\"mypy==0.790\", \"mypy-zope==0.2.8\"]",
                "+",
                " ALL_OPTIONAL_REQUIREMENTS = set()  # type: Set[str]",
                "diff --git a/tox.ini b/tox.ini",
                "index 0a2d14aec..300417287 100644",
                "--- a/tox.ini",
                "+++ b/tox.ini",
                "@@ -161,8 +161,5 @@ commands=",
                " [testenv:mypy]",
                "-skip_install = True",
                " deps =",
                "     {[base]deps}",
                "-    mypy==0.782",
                "-    mypy-zope",
                "-extras = all",
                "+extras = all, mypy",
                " commands = mypy"
            ],
            "changed_files": [
                "changelog.d/72.bugfix",
                "synapse/handlers/auth.py",
                "synapse/python_dependencies.py",
                "tox.ini"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "72": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: resolve",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: python",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 72",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1cec3d145770b52a7588cdf9df552189da634c5f",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607510499,
            "hunks": 4,
            "message": "1.23.1",
            "diff": [
                "diff --git a/changelog.d/8776.bugfix b/changelog.d/8776.bugfix",
                "deleted file mode 100644",
                "index dd7ebbeb8..000000000",
                "--- a/changelog.d/8776.bugfix",
                "+++ /dev/null",
                "@@ -1 +0,0 @@",
                "-Fix a bug in some federation APIs which could lead to unexpected behaviour if different parameters were set in the URI and the request body.",
                "diff --git a/changelog.d/8898.misc b/changelog.d/8898.misc",
                "deleted file mode 100644",
                "index bdb0d40d5..000000000",
                "--- a/changelog.d/8898.misc",
                "+++ /dev/null",
                "@@ -1 +0,0 @@",
                "-Add a maximum version for pysaml2 on Python 3.5.",
                "diff --git a/debian/changelog b/debian/changelog",
                "index 4ea4feddd..0342fafdd 100644",
                "--- a/debian/changelog",
                "+++ b/debian/changelog",
                "@@ -1 +1,7 @@",
                "+matrix-synapse-py3 (1.23.1) stable; urgency=medium",
                "+",
                "+  * New synapse release 1.23.1.",
                "+",
                "+ -- Synapse Packaging team <packages@matrix.org>  Wed, 09 Dec 2020 10:40:39 +0000",
                "+",
                " matrix-synapse-py3 (1.23.0) stable; urgency=medium",
                "diff --git a/synapse/__init__.py b/synapse/__init__.py",
                "index 65c1f5aa3..c38a8f613 100644",
                "--- a/synapse/__init__.py",
                "+++ b/synapse/__init__.py",
                "@@ -50,3 +50,3 @@ except ImportError:",
                "-__version__ = \"1.23.0\"",
                "+__version__ = \"1.23.1\""
            ],
            "changed_files": [
                "changelog.d/8776.bugfix",
                "changelog.d/8898.misc",
                "debian/changelog",
                "synapse/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.23.1",
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: matrix-synapse",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "7eebe4b3fc3129e4571d58c3cea5eeccc584e072",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608043885,
            "hunks": 22,
            "message": "Replace `request.code` with `channel.code` The two are equivalent, but really we want to check the HTTP result that got returned to the channel, not the code that the Request object *intended* to return to the channel.",
            "diff": [
                "diff --git a/tests/http/test_additional_resource.py b/tests/http/test_additional_resource.py",
                "index 05e9c449b..adc318caa 100644",
                "--- a/tests/http/test_additional_resource.py",
                "+++ b/tests/http/test_additional_resource.py",
                "@@ -50,3 +50,3 @@ class AdditionalResourceTests(HomeserverTestCase):",
                "-        self.assertEqual(request.code, 200)",
                "+        self.assertEqual(channel.code, 200)",
                "         self.assertEqual(channel.json_body, {\"some_key\": \"some_value_async\"})",
                "@@ -59,3 +59,3 @@ class AdditionalResourceTests(HomeserverTestCase):",
                "-        self.assertEqual(request.code, 200)",
                "+        self.assertEqual(channel.code, 200)",
                "         self.assertEqual(channel.json_body, {\"some_key\": \"some_value_sync\"})",
                "diff --git a/tests/replication/test_auth.py b/tests/replication/test_auth.py",
                "index fe9e4d5f9..aee839dc6 100644",
                "--- a/tests/replication/test_auth.py",
                "+++ b/tests/replication/test_auth.py",
                "@@ -68,3 +68,3 @@ class WorkerAuthenticationTestCase(BaseMultiWorkerStreamTestCase):",
                "         )  # type: SynapseRequest, FakeChannel",
                "-        self.assertEqual(request_1.code, 401)",
                "+        self.assertEqual(channel_1.code, 401)",
                "@@ -86,3 +86,3 @@ class WorkerAuthenticationTestCase(BaseMultiWorkerStreamTestCase):",
                "         request, channel = self._test_register()",
                "-        self.assertEqual(request.code, 200)",
                "+        self.assertEqual(channel.code, 200)",
                "@@ -96,3 +96,3 @@ class WorkerAuthenticationTestCase(BaseMultiWorkerStreamTestCase):",
                "         request, channel = self._test_register()",
                "-        self.assertEqual(request.code, 500)",
                "+        self.assertEqual(channel.code, 500)",
                "@@ -108,3 +108,3 @@ class WorkerAuthenticationTestCase(BaseMultiWorkerStreamTestCase):",
                "         request, channel = self._test_register()",
                "-        self.assertEqual(request.code, 500)",
                "+        self.assertEqual(channel.code, 500)",
                "@@ -115,3 +115,3 @@ class WorkerAuthenticationTestCase(BaseMultiWorkerStreamTestCase):",
                "         request, channel = self._test_register()",
                "-        self.assertEqual(request.code, 200)",
                "+        self.assertEqual(channel.code, 200)",
                "diff --git a/tests/replication/test_client_reader_shard.py b/tests/replication/test_client_reader_shard.py",
                "index fdaad3d8a..6cdf6a099 100644",
                "--- a/tests/replication/test_client_reader_shard.py",
                "+++ b/tests/replication/test_client_reader_shard.py",
                "@@ -50,3 +50,3 @@ class ClientReaderTestCase(BaseMultiWorkerStreamTestCase):",
                "         )  # type: SynapseRequest, FakeChannel",
                "-        self.assertEqual(request_1.code, 401)",
                "+        self.assertEqual(channel_1.code, 401)",
                "@@ -63,3 +63,3 @@ class ClientReaderTestCase(BaseMultiWorkerStreamTestCase):",
                "         )  # type: SynapseRequest, FakeChannel",
                "-        self.assertEqual(request_2.code, 200)",
                "+        self.assertEqual(channel_2.code, 200)",
                "@@ -82,3 +82,3 @@ class ClientReaderTestCase(BaseMultiWorkerStreamTestCase):",
                "         )  # type: SynapseRequest, FakeChannel",
                "-        self.assertEqual(request_1.code, 401)",
                "+        self.assertEqual(channel_1.code, 401)",
                "@@ -96,3 +96,3 @@ class ClientReaderTestCase(BaseMultiWorkerStreamTestCase):",
                "         )  # type: SynapseRequest, FakeChannel",
                "-        self.assertEqual(request_2.code, 200)",
                "+        self.assertEqual(channel_2.code, 200)",
                "diff --git a/tests/rest/client/v2_alpha/test_account.py b/tests/rest/client/v2_alpha/test_account.py",
                "index 2ac1ecb7d..11a042f9e 100644",
                "--- a/tests/rest/client/v2_alpha/test_account.py",
                "+++ b/tests/rest/client/v2_alpha/test_account.py",
                "@@ -355,3 +355,3 @@ class DeactivateTestCase(unittest.HomeserverTestCase):",
                "         request, channel = self.make_request(\"GET\", \"account/whoami\")",
                "-        self.assertEqual(request.code, 401)",
                "+        self.assertEqual(channel.code, 401)",
                "@@ -412,3 +412,3 @@ class DeactivateTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        self.assertEqual(request.code, 200)",
                "+        self.assertEqual(channel.code, 200)",
                "diff --git a/tests/rest/client/v2_alpha/test_auth.py b/tests/rest/client/v2_alpha/test_auth.py",
                "index ac67a9de2..a35c2646f 100644",
                "--- a/tests/rest/client/v2_alpha/test_auth.py",
                "+++ b/tests/rest/client/v2_alpha/test_auth.py",
                "@@ -73,3 +73,3 @@ class FallbackAuthTests(unittest.HomeserverTestCase):",
                "-        self.assertEqual(request.code, expected_response)",
                "+        self.assertEqual(channel.code, expected_response)",
                "         return channel",
                "@@ -86,3 +86,3 @@ class FallbackAuthTests(unittest.HomeserverTestCase):",
                "         )  # type: SynapseRequest, FakeChannel",
                "-        self.assertEqual(request.code, 200)",
                "+        self.assertEqual(channel.code, 200)",
                "@@ -94,3 +94,3 @@ class FallbackAuthTests(unittest.HomeserverTestCase):",
                "         )",
                "-        self.assertEqual(request.code, expected_post_response)",
                "+        self.assertEqual(channel.code, expected_post_response)",
                "@@ -203,3 +203,3 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "         # Ensure the response is sane.",
                "-        self.assertEqual(request.code, expected_response)",
                "+        self.assertEqual(channel.code, expected_response)",
                "@@ -216,3 +216,3 @@ class UIAuthTests(unittest.HomeserverTestCase):",
                "         # Ensure the response is sane.",
                "-        self.assertEqual(request.code, expected_response)",
                "+        self.assertEqual(channel.code, expected_response)",
                "diff --git a/tests/rest/client/v2_alpha/test_register.py b/tests/rest/client/v2_alpha/test_register.py",
                "index bcb21d0ce..4bf3e0d63 100644",
                "--- a/tests/rest/client/v2_alpha/test_register.py",
                "+++ b/tests/rest/client/v2_alpha/test_register.py",
                "@@ -561,3 +561,3 @@ class AccountValidityRenewalByEmailTestCase(unittest.HomeserverTestCase):",
                "         )",
                "-        self.assertEqual(request.code, 200)",
                "+        self.assertEqual(channel.code, 200)",
                "diff --git a/tests/rest/test_health.py b/tests/rest/test_health.py",
                "index 02a46e5fd..aaf2fb821 100644",
                "--- a/tests/rest/test_health.py",
                "+++ b/tests/rest/test_health.py",
                "@@ -29,3 +29,3 @@ class HealthCheckTests(unittest.HomeserverTestCase):",
                "-        self.assertEqual(request.code, 200)",
                "+        self.assertEqual(channel.code, 200)",
                "         self.assertEqual(channel.result[\"body\"], b\"OK\")",
                "diff --git a/tests/rest/test_well_known.py b/tests/rest/test_well_known.py",
                "index 6a930f414..17ded96b9 100644",
                "--- a/tests/rest/test_well_known.py",
                "+++ b/tests/rest/test_well_known.py",
                "@@ -34,3 +34,3 @@ class WellKnownTests(unittest.HomeserverTestCase):",
                "-        self.assertEqual(request.code, 200)",
                "+        self.assertEqual(channel.code, 200)",
                "         self.assertEqual(",
                "@@ -50,2 +50,2 @@ class WellKnownTests(unittest.HomeserverTestCase):",
                "-        self.assertEqual(request.code, 404)",
                "+        self.assertEqual(channel.code, 404)"
            ],
            "changed_files": [
                "tests/http/test_additional_resource.py",
                "tests/replication/test_auth.py",
                "tests/replication/test_client_reader_shard.py",
                "tests/rest/client/v2_alpha/test_account.py",
                "tests/rest/client/v2_alpha/test_auth.py",
                "tests/rest/client/v2_alpha/test_register.py",
                "tests/rest/test_health.py",
                "tests/rest/test_well_known.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: know, resource",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "9b26a4ac87cead4846c5bada73927cc2a6353a90",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607510061,
            "hunks": 3,
            "message": "1.24.0",
            "diff": [
                "diff --git a/changelog.d/8898.misc b/changelog.d/8898.misc",
                "deleted file mode 100644",
                "index bdb0d40d5..000000000",
                "--- a/changelog.d/8898.misc",
                "+++ /dev/null",
                "@@ -1 +0,0 @@",
                "-Add a maximum version for pysaml2 on Python 3.5.",
                "diff --git a/debian/changelog b/debian/changelog",
                "index 4ea4feddd..9f47d12b7 100644",
                "--- a/debian/changelog",
                "+++ b/debian/changelog",
                "@@ -1 +1,7 @@",
                "+matrix-synapse-py3 (1.24.0) stable; urgency=medium",
                "+",
                "+  * New synapse release 1.24.0.",
                "+",
                "+ -- Synapse Packaging team <packages@matrix.org>  Wed, 09 Dec 2020 10:14:30 +0000",
                "+",
                " matrix-synapse-py3 (1.23.0) stable; urgency=medium",
                "diff --git a/synapse/__init__.py b/synapse/__init__.py",
                "index 2e354f2cc..f2d3ac68e 100644",
                "--- a/synapse/__init__.py",
                "+++ b/synapse/__init__.py",
                "@@ -50,3 +50,3 @@ except ImportError:",
                "-__version__ = \"1.24.0rc2\"",
                "+__version__ = \"1.24.0\""
            ],
            "changed_files": [
                "changelog.d/8898.misc",
                "debian/changelog",
                "synapse/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.24.0",
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: matrix-synapse",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "5bcf6e8289b075ef298510faae12041811bbd344",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608044081,
            "hunks": 2,
            "message": "Skip redundant check on `request.args`",
            "diff": [
                "diff --git a/tests/test_server.py b/tests/test_server.py",
                "index 6b2d2f040..0be8c7e2f 100644",
                "--- a/tests/test_server.py",
                "+++ b/tests/test_server.py",
                "@@ -66,3 +66,3 @@ class JsonResourceTests(unittest.TestCase):",
                "-        request, channel = make_request(",
                "+        make_request(",
                "             self.reactor, FakeSite(res), b\"GET\", b\"/_matrix/foo/%E2%98%83?a=%E2%98%83\"",
                "@@ -70,3 +70,2 @@ class JsonResourceTests(unittest.TestCase):",
                "-        self.assertEqual(request.args, {b\"a\": [\"\\N{SNOWMAN}\".encode(\"utf8\")]})",
                "         self.assertEqual(got_kwargs, {\"room_id\": \"\\N{SNOWMAN}\"})"
            ],
            "changed_files": [
                "tests/test_server.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "e6797e004f4383ddbfc215c8ad8a61964d2ef2c6",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1606762769,
            "hunks": 2,
            "message": "Allow per-room profile to be used for server notice user (#8799) This applies even if the feature is disabled at the server level with `allow_per_room_profiles`. The server notice not being a real user it doesn't have an user profile.",
            "diff": [
                "diff --git a/changelog.d/8799.bugfix b/changelog.d/8799.bugfix",
                "new file mode 100644",
                "index 000000000..a7e6b3556",
                "--- /dev/null",
                "+++ b/changelog.d/8799.bugfix",
                "@@ -0,0 +1 @@",
                "+Allow per-room profiles to be used for the server notice user.",
                "diff --git a/synapse/handlers/room_member.py b/synapse/handlers/room_member.py",
                "index 5a8120db5..6af59b3f7 100644",
                "--- a/synapse/handlers/room_member.py",
                "+++ b/synapse/handlers/room_member.py",
                "@@ -352,3 +352,11 @@ class RoomMemberHandler(metaclass=abc.ABCMeta):",
                "-        if not self.allow_per_room_profiles or requester.shadow_banned:",
                "+        # allow the server notices mxid to set room-level profile",
                "+        is_requester_server_notices_user = (",
                "+            self._server_notices_mxid is not None",
                "+            and requester.user.to_string() == self._server_notices_mxid",
                "+        )",
                "+",
                "+        if (",
                "+            not self.allow_per_room_profiles and not is_requester_server_notices_user",
                "+        ) or requester.shadow_banned:",
                "             # Strip profile data, knowing that new profile data will be added to the"
            ],
            "changed_files": [
                "changelog.d/8799.bugfix",
                "synapse/handlers/room_member.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "8799": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: server, file",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 8799",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "903bb990b953ec3393d30da81693e0e8bdc2d026",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607698058,
            "hunks": 1,
            "message": "Remove the CI requirement for newsfiles (#73) We don't use newsfiles for DINUM releases anyways, so a CI requirement for them does not make sense.",
            "diff": [
                "diff --git a/.buildkite/pipeline.yml b/.buildkite/pipeline.yml",
                "index 5877ff088..c3171c00c 100644",
                "--- a/.buildkite/pipeline.yml",
                "+++ b/.buildkite/pipeline.yml",
                "@@ -31,13 +31,2 @@ steps:",
                "-  - label: \":newspaper: Newsfile\"",
                "-    command:",
                "-      - \"python -m pip install tox\"",
                "-      - \"scripts-dev/check-newsfragment\"",
                "-    branches: \"!master !develop !release-*\"",
                "-    plugins:",
                "-      - docker#v3.0.1:",
                "-          image: \"python:3.6\"",
                "-          propagate-environment: true",
                "-          mount-buildkite-agent: false",
                "-",
                "   - label: \"\\U0001F9F9 check-sample-config\""
            ],
            "changed_files": [
                ".buildkite/pipeline.yml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "73": "account_data returned by /_matrix/client/unstable/org.matrix.msc3575/sync are sometimes inconsistent matrix-org/sliding-sync#189"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 73",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "422d40e82f6b0de224922f057e8f6f83d479291d",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607970898,
            "hunks": 8,
            "message": "major wip",
            "diff": [
                "diff --git a/docker/Dockerfile-workers b/docker/Dockerfile-workers",
                "new file mode 100644",
                "index 000000000..88b2a5262",
                "--- /dev/null",
                "+++ b/docker/Dockerfile-workers",
                "@@ -0,0 +1,25 @@",
                "+# Inherit from the official Synapse docker image",
                "+FROM matrixdotorg/synapse",
                "+",
                "+# Install deps",
                "+RUN apt-get update",
                "+RUN apt-get install -y supervisor redis nginx",
                "+",
                "+# A script to read environment variables and create the necessary",
                "+# files to run the desired worker configuration",
                "+COPY ./docker/create_worker_config_files.py /create_worker_config_files.py",
                "+RUN /create_worker_config_files.py",
                "+",
                "+# Create a volume for logging. The official Synapse docker image",
                "+# only logs to console, however this is inconvenient for multi-process",
                "+# containers.",
                "+VOLUME [\"/logs\"]",
                "+",
                "+# Expose Synapse client, ACME challenge and federation ports",
                "+EXPOSE 8008/tcp 8009/tcp 8448/tcp",
                "+",
                "+# Start supervisord",
                "+COPY ./docker/worker_conf/supervisord.conf /etc/supervisor/conf.d/supervisord.conf",
                "+ENTRYPOINT [\"/usr/bin/supervisord\"]",
                "+",
                "+# TODO: Healthcheck? Can we ask supervisord?",
                "\\ No newline at end of file",
                "diff --git a/docker/MoveToComplement.Dockerfile b/docker/MoveToComplement.Dockerfile",
                "new file mode 100644",
                "index 000000000..c91000bc7",
                "--- /dev/null",
                "+++ b/docker/MoveToComplement.Dockerfile",
                "@@ -0,0 +1,35 @@",
                "+# This dockerfile builds on top of Dockerfile-worker and includes a built-in postgres instance.",
                "+# It is intended to be used for Complement testing",
                "+",
                "+FROM matrixdotorg/synapse:workers",
                "+",
                "+# Install postgres",
                "+RUN apt-get update",
                "+RUN apt-get install -y postgres",
                "+",
                "+# Create required databases in postgres",
                "+",
                "+# Create a user without a password",
                "+RUN sudo -u postgres createuser -w synapse_user",
                "+",
                "+# Then set their password",
                "+RUN sudo -u postgres psql -c \"ALTER USER postgres PASSWORD 'somesecret';\"",
                "+",
                "+# Create the synapse database",
                "+RUN sudo -u postgres psql -c \"CREATE DATABASE synapse \\",
                "+ ENCODING 'UTF8' \\",
                "+ LC_COLLATE='C' \\",
                "+ LC_CTYPE='C' \\",
                "+ template=template0 \\",
                "+ OWNER synapse_user;\"",
                "+",
                "+# Modify Synapse's database config to point to the local postgres",
                "+COPY ./docker/synapse_use_local_postgres.py /synapse_use_local_postgres.py",
                "+RUN /synapse_use_local_postgres.py",
                "+",
                "+VOLUME [\"/data\"]",
                "+",
                "+EXPOSE 8008/tcp 8009/tcp 8448/tcp",
                "+",
                "+# Start supervisord",
                "+CMD [\"/usr/bin/supervisord\"]",
                "\\ No newline at end of file",
                "diff --git a/docker/conf/homeserver.yaml b/docker/conf/homeserver.yaml",
                "index a808485c1..8434fc69f 100644",
                "--- a/docker/conf/homeserver.yaml",
                "+++ b/docker/conf/homeserver.yaml",
                "@@ -29,4 +29,3 @@ listeners:",
                "   {% if not SYNAPSE_NO_TLS %}",
                "-  -",
                "-    port: 8448",
                "+  - port: 8448",
                "     bind_addresses: ['::']",
                "@@ -54,2 +53,11 @@ listeners:",
                "+  {% if SYNAPSE_WORKERS %}",
                "+  # The HTTP replication port",
                "+  - port: 9093",
                "+    bind_address: '127.0.0.1'",
                "+    type: http",
                "+    resources:",
                "+      - names: [replication]",
                "+  {% endif %}",
                "+",
                " ## Database ##",
                "diff --git a/docker/generate_shared_worker_config.py b/docker/generate_shared_worker_config.py",
                "new file mode 100644",
                "index 000000000..755a73734",
                "--- /dev/null",
                "+++ b/docker/generate_shared_worker_config.py",
                "@@ -0,0 +1,145 @@",
                "+#!/usr/bin/env python",
                "+# -*- coding: utf-8 -*-",
                "+# Copyright 2020 The Matrix.org Foundation C.I.C.",
                "+#",
                "+# Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+# you may not use this file except in compliance with the License.",
                "+# You may obtain a copy of the License at",
                "+#",
                "+#     http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing, software",
                "+# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+# See the License for the specific language governing permissions and",
                "+# limitations under the License.",
                "+",
                "+# This script reads environment variables and generates a shared Synapse worker,",
                "+# nginx and supervisord configs depending on the workers requested",
                "+",
                "+import os",
                "+import sys",
                "+",
                "+",
                "+def main(args, environ):",
                "+    \"\"\"Read the desired list of workers from environment variables and generate",
                "+    shared homeserver, nginx and supervisord configs.",
                "+",
                "+    Args:",
                "+        environ: _Environ[str]",
                "+    \"\"\"",
                "+    # The contents of this string will be appended to the one generated by",
                "+    # the homeserver, and is intended mainly for disabling functionality on the main",
                "+    # when certain workers are spun up",
                "+    homeserver_config = \"\"",
                "+",
                "+    # The contents of this string will be append to the base supervisord config",
                "+    supervisord_config = \"\"",
                "+",
                "+    # An nginx site config. Will live in /etc/nginx/conf.d",
                "+    nginx_config_template_header = \"\"\"",
                "+    server {",
                "+        listen 80;",
                "+        listen [::]:80;",
                "+",
                "+        # For the federation port",
                "+        listen 8448 default_server;",
                "+        listen [::]:8448 default_server;",
                "+",
                "+        server_name localhost;",
                "+    \"\"\"",
                "+    nginx_config_body = \"\"",
                "+    nginx_config_template_end = \"\"\"",
                "+        # Send all other traffic to the main process",
                "+        location ~* ^(\\/_matrix|\\/_synapse) {",
                "+            proxy_pass http://localhost:8008;",
                "+            proxy_set_header X-Forwarded-For $remote_addr;",
                "+",
                "+            # TODO: Can we move this to the default nginx.conf so all locations are",
                "+            # affected?",
                "+            #",
                "+            # Nginx by default only allows file uploads up to 1M in size",
                "+            # Increase client_max_body_size to match max_upload_size defined in homeserver.yaml",
                "+            client_max_body_size 50M;",
                "+        }",
                "+    }",
                "+    \"\"\"",
                "+",
                "+    # Read desired worker configuration from environment",
                "+    worker_types = environ.get(\"SYNAPSE_WORKERS\")",
                "+    worker_types = worker_types.split(\",\")",
                "+",
                "+    for worker_type in worker_types:",
                "+        if worker_type == \"pusher\":",
                "+            # Disable push handling from the main process",
                "+            homeserver_config += \"\"\"",
                "+            start_pushers: false",
                "+            \"\"\"",
                "+",
                "+            # Enable the pusher worker in supervisord",
                "+            supervisord_config += \"\"\"",
                "+            \"\"\"",
                "+",
                "+            # This worker does not handle any REST endpoints",
                "+",
                "+        elif worker_type == \"appservice\":",
                "+            # Disable appservice traffic sending from the main process",
                "+            homeserver_config += \"\"\"",
                "+            notify_appservices: false",
                "+            \"\"\"",
                "+",
                "+            # Enable the pusher worker in supervisord",
                "+            supervisord_config += \"\"\"",
                "+            [program:synapse_user_dir]",
                "+            command=/usr/local/bin/python -m synapse.app.user_dir \\",
                "+                --config-path=/config/homeserver.yaml \\",
                "+                --config-path=/config/workers/user_dir.yaml",
                "+            autorestart=unexpected",
                "+            exitcodes=0",
                "+            \"\"\"",
                "+",
                "+            # This worker does not handle any REST endpoints",
                "+",
                "+        elif worker_type == \"user_dir\":",
                "+            # Disable user directory updates on the main process",
                "+            homeserver_config += \"\"\"",
                "+            update_user_directory: false",
                "+            \"\"\"",
                "+",
                "+            # Enable the user directory worker in supervisord",
                "+            supervisord_config += \"\"\"",
                "+            [program:synapse_user_dir]",
                "+            command=/usr/local/bin/python -m synapse.app.user_dir \\",
                "+                --config-path=/config/homeserver.yaml \\",
                "+                --config-path=/config/workers/user_dir.yaml",
                "+            autorestart=unexpected",
                "+            exitcodes=0",
                "+            \"\"\"",
                "+",
                "+            # Route user directory requests to this worker",
                "+            nginx_config_body += \"\"\"",
                "+            location ~* ^/_matrix/client/(api/v1|r0|unstable)/user_directory/search$ {",
                "+                proxy_pass http://localhost:8010;",
                "+                proxy_set_header X-Forwarded-For $remote_addr;",
                "+            }",
                "+            \"\"\"",
                "+",
                "+    # Write out the config files",
                "+",
                "+    # Main homeserver config",
                "+    with open(\"/config/main.yaml\", \"a\") as f:",
                "+        f.write(homeserver_config)",
                "+",
                "+    # Nginx config",
                "+    with open(\"/config/nginx.conf\", \"w\") as f:",
                "+        f.write(nginx_config_template_header)",
                "+        f.write(nginx_config_body)",
                "+        f.write(nginx_config_template_end)",
                "+",
                "+    # Supervisord config",
                "+    with open(\"/config/supervisord.conf\", \"a\") as f:",
                "+        f.write(supervisord_config)",
                "+",
                "+",
                "+if __name__ == \"__main__\":",
                "+    main(sys.argv, os.environ)",
                "diff --git a/docker/start.py b/docker/start.py",
                "index 0d2c590b8..c3a6d9686 100755",
                "--- a/docker/start.py",
                "+++ b/docker/start.py",
                "@@ -179,3 +179,2 @@ def run_generate_config(environ, ownership):",
                "-",
                " def main(args, environ):",
                "diff --git a/docker/worker_conf/main.conf b/docker/worker_conf/main.conf",
                "new file mode 100644",
                "index 000000000..917b82500",
                "--- /dev/null",
                "+++ b/docker/worker_conf/main.conf",
                "@@ -0,0 +1,9 @@",
                "+# A bit of Synapse config file that will be appended to the main homeserver config file.",
                "+# It is intended for generate_shared_worker_config.py to add entries to this file to",
                "+# disable functionality as equivalent workers are spun up.",
                "+",
                "+# TODO: extend the existing `listeners` section. This defines the ports that the",
                "+# main process will listen on.",
                "+",
                "+redis:",
                "+    enabled: true",
                "diff --git a/docker/worker_conf/supervisord.conf b/docker/worker_conf/supervisord.conf",
                "new file mode 100644",
                "index 000000000..63c898e75",
                "--- /dev/null",
                "+++ b/docker/worker_conf/supervisord.conf",
                "@@ -0,0 +1,19 @@",
                "+[supervisord]",
                "+nodaemon=true",
                "+",
                "+[program:nginx]",
                "+command=/usr/sbin/nginx -g \"daemon off;\"",
                "+priority=900",
                "+stdout_logfile= /dev/stdout",
                "+stdout_logfile_maxbytes=0",
                "+stderr_logfile=/dev/stderr",
                "+stderr_logfile_maxbytes=0",
                "+username=www-data",
                "+autorestart=true",
                "+",
                "+[program:synapse_main]",
                "+command=/usr/local/bin/python -m synapse.app.homeserver \\",
                "+    --config-path=/config/homeserver.yaml \\",
                "+    --config-path=/config/main.yaml",
                "+autorestart=unexpected",
                "+exitcodes=0"
            ],
            "changed_files": [
                "docker/Dockerfile-workers",
                "docker/MoveToComplement.Dockerfile",
                "docker/conf/homeserver.yaml",
                "docker/generate_shared_worker_config.py",
                "docker/start.py",
                "docker/worker_conf/main.conf",
                "docker/worker_conf/supervisord.conf"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: homeserver, server, file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "35be2600902189392aaa6a212058853e9e39aeba",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608206718,
            "hunks": 1,
            "message": "Newsfile",
            "diff": [
                "diff --git a/changelog.d/8962.bugfix b/changelog.d/8962.bugfix",
                "new file mode 100644",
                "index 000000000..af1a5e4c3",
                "--- /dev/null",
                "+++ b/changelog.d/8962.bugfix",
                "@@ -0,0 +1 @@",
                "+Fix bug where application services couldn't register new ghost users if the server had reached its MAU limit."
            ],
            "changed_files": [
                "changelog.d/8962.bugfix"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "57068eae75162f6cf0e3be05a87de6c22d90b6c7",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607521696,
            "hunks": 1,
            "message": "Add 'xmlsec1' to dependency list",
            "diff": [
                "diff --git a/docker/Dockerfile-dhvirtualenv b/docker/Dockerfile-dhvirtualenv",
                "index 619585d5f..2b7f01f7f 100644",
                "--- a/docker/Dockerfile-dhvirtualenv",
                "+++ b/docker/Dockerfile-dhvirtualenv",
                "@@ -71,3 +71,4 @@ RUN apt-get update -qq -o Acquire::Languages=none \\",
                "         sqlite3 \\",
                "-        libpq-dev",
                "+        libpq-dev \\",
                "+        xmlsec1"
            ],
            "changed_files": [
                "docker/Dockerfile-dhvirtualenv"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "9bbbb11ac20896629c25b160fa3cebef29431bfe",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607528919,
            "hunks": 5,
            "message": "Pin the docker version for multiarch builds It seems that letting CircleCI use its default docker version (17.09.0-ce, apparently) did not interact well with multiarch builds: in particular, we saw weird effects where running an amd64 build at the same time as an arm64 build caused the arm64 builds to fail with:    Error while loading /usr/sbin/dpkg-deb: No such file or directory",
            "diff": [
                "diff --git a/.circleci/config.yml b/.circleci/config.yml",
                "index b10cbedd6..088da5573 100644",
                "--- a/.circleci/config.yml",
                "+++ b/.circleci/config.yml",
                "@@ -7,3 +7,2 @@ jobs:",
                "       - checkout",
                "-      - setup_remote_docker",
                "       - docker_prepare",
                "@@ -22,3 +21,2 @@ jobs:",
                "       - checkout",
                "-      - setup_remote_docker",
                "       - docker_prepare",
                "@@ -48,3 +46,3 @@ commands:",
                "   docker_prepare:",
                "-    description: Downloads the buildx cli plugin and enables multiarch images",
                "+    description: Sets up a remote docker server, downloads the buildx cli plugin, and enables multiarch images",
                "     parameters:",
                "@@ -54,2 +52,6 @@ commands:",
                "     steps:",
                "+      - setup_remote_docker:",
                "+          # 19.03.13 was the most recent available on circleci at the time of",
                "+          # writing.",
                "+          version: 19.03.13",
                "       - run: apk add --no-cache curl",
                "diff --git a/changelog.d/8906.misc b/changelog.d/8906.misc",
                "new file mode 100644",
                "index 000000000..8b95e4c55",
                "--- /dev/null",
                "+++ b/changelog.d/8906.misc",
                "@@ -0,0 +1 @@",
                "+Fix multiarch docker image builds."
            ],
            "changed_files": [
                ".circleci/config.yml",
                "changelog.d/8906.misc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version, file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "ac2acf1524ea33a37b5cdbd4cebcb149c80a48c7",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608045483,
            "hunks": 3,
            "message": "Remove redundant reading of SynapseRequest.args this didn't seem to be doing a lot, so remove it.",
            "diff": [
                "diff --git a/tests/rest/client/v2_alpha/test_account.py b/tests/rest/client/v2_alpha/test_account.py",
                "index 11a042f9e..8a898be24 100644",
                "--- a/tests/rest/client/v2_alpha/test_account.py",
                "+++ b/tests/rest/client/v2_alpha/test_account.py",
                "@@ -21,3 +21,2 @@ from email.parser import Parser",
                " from typing import Optional",
                "-from urllib.parse import urlencode",
                "@@ -270,9 +269,2 @@ class PasswordResetTestCase(unittest.HomeserverTestCase):",
                "-        # Send arguments as url-encoded form data, matching the template's behaviour",
                "-        form_args = []",
                "-        for key, value_list in request.args.items():",
                "-            for value in value_list:",
                "-                arg = (key, value)",
                "-                form_args.append(arg)",
                "-",
                "         # Confirm the password reset",
                "@@ -283,3 +275,3 @@ class PasswordResetTestCase(unittest.HomeserverTestCase):",
                "             path,",
                "-            content=urlencode(form_args).encode(\"utf8\"),",
                "+            content=b\"\",",
                "             shorthand=False,"
            ],
            "changed_files": [
                "tests/rest/client/v2_alpha/test_account.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "4d17afc255e13aab2806a78c970566b8c2de0484",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607697662,
            "hunks": 2,
            "message": "Fix users info for remote users (#71)",
            "diff": [
                "diff --git a/changelog.d/71.bugfix b/changelog.d/71.bugfix",
                "new file mode 100644",
                "index 000000000..cad69c7bd",
                "--- /dev/null",
                "+++ b/changelog.d/71.bugfix",
                "@@ -0,0 +1 @@",
                "+Fix users info for remote users.",
                "diff --git a/synapse/rest/client/v2_alpha/user_directory.py b/synapse/rest/client/v2_alpha/user_directory.py",
                "index 5d4be8ada..eeddfa31f 100644",
                "--- a/synapse/rest/client/v2_alpha/user_directory.py",
                "+++ b/synapse/rest/client/v2_alpha/user_directory.py",
                "@@ -209,4 +209,3 @@ class UserInfoServlet(RestServlet):",
                "-            for user_id, info in res:",
                "-                user_id_to_info_dict[user_id] = info",
                "+            user_id_to_info_dict.update(res)"
            ],
            "changed_files": [
                "changelog.d/71.bugfix",
                "synapse/rest/client/v2_alpha/user_directory.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "71": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 71",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ed61fe4ada10eabf66bb4a5c60f2ccca540d1c6e",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608045728,
            "hunks": 1,
            "message": "changelog",
            "diff": [
                "diff --git a/changelog.d/8946.misc b/changelog.d/8946.misc",
                "new file mode 100644",
                "index 000000000..54502e9b9",
                "--- /dev/null",
                "+++ b/changelog.d/8946.misc",
                "@@ -0,0 +1 @@",
                "+Refactor test utilities for injecting HTTP requests."
            ],
            "changed_files": [
                "changelog.d/8946.misc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "757b5a0bf6704885b267670c9be4a57d8ff47c30"
                ]
            ],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cb7e610136a5bd689504395181de1fe069db8187",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607530079,
            "hunks": 3,
            "message": "Tweak CircleCI config to trigger rebuild of v1.23.1",
            "diff": [
                "diff --git a/.circleci/config.yml b/.circleci/config.yml",
                "index 088da5573..874f2f765 100644",
                "--- a/.circleci/config.yml",
                "+++ b/.circleci/config.yml",
                "@@ -10,21 +10,5 @@ jobs:",
                "       - docker_build:",
                "-          tag: -t matrixdotorg/synapse:${CIRCLE_TAG}",
                "-          platforms: linux/amd64",
                "-      - docker_build:",
                "-          tag: -t matrixdotorg/synapse:${CIRCLE_TAG}",
                "+          tag: -t matrixdotorg/synapse:v1.23.1",
                "           platforms: linux/amd64,linux/arm/v7,linux/arm64",
                "-  dockerhubuploadlatest:",
                "-    docker:",
                "-      - image: docker:git",
                "-    steps:",
                "-      - checkout",
                "-      - docker_prepare",
                "-      - run: docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD",
                "-      - docker_build:",
                "-          tag: -t matrixdotorg/synapse:latest",
                "-          platforms: linux/amd64",
                "-      - docker_build:",
                "-          tag: -t matrixdotorg/synapse:latest",
                "-          platforms: linux/amd64,linux/arm/v7,linux/arm64",
                "@@ -33,12 +17,3 @@ workflows:",
                "     jobs:",
                "-      - dockerhubuploadrelease:",
                "-          filters:",
                "-            tags:",
                "-              only: /v[0-9].[0-9]+.[0-9]+.*/",
                "-            branches:",
                "-              ignore: /.*/",
                "-      - dockerhubuploadlatest:",
                "-          filters:",
                "-            branches:",
                "-              only: master",
                "+      - dockerhubuploadrelease"
            ],
            "changed_files": [
                ".circleci/config.yml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "da4050bb8c6cc6bf4c71390a08bf94e1c1b946f3",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607529888,
            "hunks": 0,
            "message": "Merge branch 'rav/fix_multiarch_builds' into rav/v1.24.0-multiarch",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "a4a5c7a35e3231f0a7ad799e0d2fce8c3e69603b",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607530432,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'origin/master' into develop",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "cf7d3c90d6e8bcc2fd196d93c13b5c507ef229b5",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607529672,
            "hunks": 0,
            "message": "Merge branch 'release-v1.24.0' into develop",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "0825299cfcf61079f78b7a6c5e31f5df078c291a",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608130193,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'origin/release-v1.24.0' into bbz/info-mainline-1.24.0",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "2dd2e90e2b0b78f82d0e3372bacba9a84240302b",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608035996,
            "hunks": 14,
            "message": "Test `get_extra_attributes` fallback despite the warnings saying \"don't implement get_extra_attributes\", we had implemented it, so the tests weren't doing what we thought they were.",
            "diff": [
                "diff --git a/tests/handlers/test_oidc.py b/tests/handlers/test_oidc.py",
                "index 464e569ac..1794a169e 100644",
                "--- a/tests/handlers/test_oidc.py",
                "+++ b/tests/handlers/test_oidc.py",
                "@@ -21,3 +21,3 @@ import pymacaroons",
                "-from synapse.handlers.oidc_handler import OidcError, OidcMappingProvider",
                "+from synapse.handlers.oidc_handler import OidcError",
                " from synapse.handlers.sso import MappingException",
                "@@ -57,3 +57,3 @@ COOKIE_PATH = \"/_synapse/oidc\"",
                "-class TestMappingProvider(OidcMappingProvider):",
                "+class TestMappingProvider:",
                "     @staticmethod",
                "@@ -62,2 +62,5 @@ class TestMappingProvider(OidcMappingProvider):",
                "+    def __init__(self, config):",
                "+        pass",
                "+",
                "     def get_remote_user_id(self, userinfo):",
                "@@ -362,2 +365,9 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         \"\"\"",
                "+",
                "+        # ensure that we are correctly testing the fallback when \"get_extra_attributes\"",
                "+        # is not implemented.",
                "+        mapping_provider = self.handler._user_mapping_provider",
                "+        with self.assertRaises(AttributeError):",
                "+            _ = mapping_provider.get_extra_attributes",
                "+",
                "         token = {",
                "@@ -398,3 +408,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "-            expected_user_id, request, client_redirect_url, {},",
                "+            expected_user_id, request, client_redirect_url, None,",
                "         )",
                "@@ -429,3 +439,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "-            expected_user_id, request, client_redirect_url, {},",
                "+            expected_user_id, request, client_redirect_url, None,",
                "         )",
                "@@ -618,3 +628,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "-            \"@test_user:test\", ANY, ANY, {}",
                "+            \"@test_user:test\", ANY, ANY, None,",
                "         )",
                "@@ -629,3 +639,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "-            \"@test_user_2:test\", ANY, ANY, {}",
                "+            \"@test_user_2:test\", ANY, ANY, None,",
                "         )",
                "@@ -666,3 +676,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "-            user.to_string(), ANY, ANY, {},",
                "+            user.to_string(), ANY, ANY, None,",
                "         )",
                "@@ -673,3 +683,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "-            user.to_string(), ANY, ANY, {},",
                "+            user.to_string(), ANY, ANY, None,",
                "         )",
                "@@ -688,3 +698,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "-            user.to_string(), ANY, ANY, {},",
                "+            user.to_string(), ANY, ANY, None,",
                "         )",
                "@@ -724,3 +734,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "-            \"@TEST_USER_2:test\", ANY, ANY, {},",
                "+            \"@TEST_USER_2:test\", ANY, ANY, None,",
                "         )",
                "@@ -758,3 +768,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "-            \"@test_user1:test\", ANY, ANY, {},",
                "+            \"@test_user1:test\", ANY, ANY, None,",
                "         )",
                "diff --git a/tests/rest/client/v1/utils.py b/tests/rest/client/v1/utils.py",
                "index 5a18af8d3..1b3166948 100644",
                "--- a/tests/rest/client/v1/utils.py",
                "+++ b/tests/rest/client/v1/utils.py",
                "@@ -447,3 +447,3 @@ class RestHelper:",
                "-# an 'oidc_config' suitable for login_with_oidc.",
                "+# an 'oidc_config' suitable for login_via_oidc.",
                " TEST_OIDC_CONFIG = {"
            ],
            "changed_files": [
                "tests/handlers/test_oidc.py",
                "tests/rest/client/v1/utils.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8388a7fb3a02e50cd2dded8f7e43235c42ac597b",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608037411,
            "hunks": 15,
            "message": "Make `_make_callback_with_userinfo` async ... so that we can test its behaviour when it raises. Also pull it out to the top level so that I can use it from other test classes.",
            "diff": [
                "diff --git a/tests/handlers/test_oidc.py b/tests/handlers/test_oidc.py",
                "index bd2437501..c54f1c579 100644",
                "--- a/tests/handlers/test_oidc.py",
                "+++ b/tests/handlers/test_oidc.py",
                "@@ -23,2 +23,3 @@ from synapse.handlers.oidc_handler import OidcError",
                " from synapse.handlers.sso import MappingException",
                "+from synapse.server import HomeServer",
                " from synapse.types import UserID",
                "@@ -401,3 +402,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         )",
                "-        request = self._build_callback_request(",
                "+        request = _build_callback_request(",
                "             code, state, session, user_agent=user_agent, ip_address=ip_address",
                "@@ -609,3 +610,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         )",
                "-        request = self._build_callback_request(\"code\", state, session)",
                "+        request = _build_callback_request(\"code\", state, session)",
                "@@ -626,3 +627,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         }",
                "-        self._make_callback_with_userinfo(userinfo)",
                "+        self.get_success(_make_callback_with_userinfo(self.hs, userinfo))",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "@@ -637,3 +638,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         }",
                "-        self._make_callback_with_userinfo(userinfo)",
                "+        self.get_success(_make_callback_with_userinfo(self.hs, userinfo))",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "@@ -650,3 +651,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         userinfo = {\"sub\": \"test3\", \"username\": \"test_user_3\"}",
                "-        self._make_callback_with_userinfo(userinfo)",
                "+        self.get_success(_make_callback_with_userinfo(self.hs, userinfo))",
                "         auth_handler.complete_sso_login.assert_not_called()",
                "@@ -674,3 +675,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         }",
                "-        self._make_callback_with_userinfo(userinfo)",
                "+        self.get_success(_make_callback_with_userinfo(self.hs, userinfo))",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "@@ -681,3 +682,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         # Subsequent calls should map to the same mxid.",
                "-        self._make_callback_with_userinfo(userinfo)",
                "+        self.get_success(_make_callback_with_userinfo(self.hs, userinfo))",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "@@ -696,3 +697,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         }",
                "-        self._make_callback_with_userinfo(userinfo)",
                "+        self.get_success(_make_callback_with_userinfo(self.hs, userinfo))",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "@@ -717,3 +718,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         }",
                "-        self._make_callback_with_userinfo(userinfo)",
                "+        self.get_success(_make_callback_with_userinfo(self.hs, userinfo))",
                "         auth_handler.complete_sso_login.assert_not_called()",
                "@@ -732,3 +733,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "-        self._make_callback_with_userinfo(userinfo)",
                "+        self.get_success(_make_callback_with_userinfo(self.hs, userinfo))",
                "         auth_handler.complete_sso_login.assert_called_once_with(",
                "@@ -739,3 +740,5 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         \"\"\"If the mapping provider generates an invalid localpart it should be rejected.\"\"\"",
                "-        self._make_callback_with_userinfo({\"sub\": \"test2\", \"username\": \"f\u00c3\u00b6\u00c3\u00b6\"})",
                "+        self.get_success(",
                "+            _make_callback_with_userinfo(self.hs, {\"sub\": \"test2\", \"username\": \"f\u00c3\u00b6\u00c3\u00b6\"})",
                "+        )",
                "         self.assertRenderedError(\"mapping_error\", \"localpart is invalid: f\u00c3\u00b6\u00c3\u00b6\")",
                "@@ -764,3 +767,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         }",
                "-        self._make_callback_with_userinfo(userinfo)",
                "+        self.get_success(_make_callback_with_userinfo(self.hs, userinfo))",
                "@@ -786,3 +789,3 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         }",
                "-        self._make_callback_with_userinfo(userinfo)",
                "+        self.get_success(_make_callback_with_userinfo(self.hs, userinfo))",
                "         auth_handler.complete_sso_login.assert_not_called()",
                "@@ -792,60 +795,72 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "-    def _make_callback_with_userinfo(",
                "-        self, userinfo: dict, client_redirect_url: str = \"http://client/redirect\"",
                "-    ) -> None:",
                "-        self.handler._exchange_code = simple_async_mock(return_value={})",
                "-        self.handler._parse_id_token = simple_async_mock(return_value=userinfo)",
                "-        self.handler._fetch_userinfo = simple_async_mock(return_value=userinfo)",
                "-        state = \"state\"",
                "-        session = self.handler._generate_oidc_session_token(",
                "-            state=state,",
                "-            nonce=\"nonce\",",
                "-            client_redirect_url=client_redirect_url,",
                "-            ui_auth_session_id=None,",
                "-        )",
                "-        request = self._build_callback_request(\"code\", state, session)",
                "+async def _make_callback_with_userinfo(",
                "+    hs: HomeServer, userinfo: dict, client_redirect_url: str = \"http://client/redirect\"",
                "+) -> None:",
                "+    \"\"\"Mock up an OIDC callback with the given userinfo dict",
                "-        self.get_success(self.handler.handle_oidc_callback(request))",
                "+    We'll pull out the OIDC handler from the homeserver, stub out a couple of methods,",
                "+    and poke in the userinfo dict as if it were the response to an OIDC userinfo call.",
                "-    def _build_callback_request(",
                "-        self,",
                "-        code: str,",
                "-        state: str,",
                "-        session: str,",
                "-        user_agent: str = \"Browser\",",
                "-        ip_address: str = \"10.0.0.1\",",
                "-    ):",
                "-        \"\"\"Builds a fake SynapseRequest to mock the browser callback",
                "-",
                "-        Returns a Mock object which looks like the SynapseRequest we get from a browser",
                "-        after SSO (before we return to the client)",
                "-",
                "-        Args:",
                "-            code: the authorization code which would have been returned by the OIDC",
                "-               provider",
                "-            state: the \"state\" param which would have been passed around in the",
                "-               query param. Should be the same as was embedded in the session in",
                "-               _build_oidc_session.",
                "-            session: the \"session\" which would have been passed around in the cookie.",
                "-            user_agent: the user-agent to present",
                "-            ip_address: the IP address to pretend the request came from",
                "-        \"\"\"",
                "-        request = Mock(",
                "-            spec=[",
                "-                \"args\",",
                "-                \"getCookie\",",
                "-                \"addCookie\",",
                "-                \"requestHeaders\",",
                "-                \"getClientIP\",",
                "-                \"get_user_agent\",",
                "-            ]",
                "-        )",
                "+    Args:",
                "+        hs: the HomeServer impl to send the callback to.",
                "+        userinfo: the OIDC userinfo dict",
                "+        client_redirect_url: the URL to redirect to on success.",
                "+    \"\"\"",
                "+    handler = hs.get_oidc_handler()",
                "+    handler._exchange_code = simple_async_mock(return_value={})",
                "+    handler._parse_id_token = simple_async_mock(return_value=userinfo)",
                "+    handler._fetch_userinfo = simple_async_mock(return_value=userinfo)",
                "-        request.getCookie.return_value = session",
                "-        request.args = {}",
                "-        request.args[b\"code\"] = [code.encode(\"utf-8\")]",
                "-        request.args[b\"state\"] = [state.encode(\"utf-8\")]",
                "-        request.getClientIP.return_value = ip_address",
                "-        request.get_user_agent.return_value = user_agent",
                "-        return request",
                "+    state = \"state\"",
                "+    session = handler._generate_oidc_session_token(",
                "+        state=state,",
                "+        nonce=\"nonce\",",
                "+        client_redirect_url=client_redirect_url,",
                "+        ui_auth_session_id=None,",
                "+    )",
                "+    request = _build_callback_request(\"code\", state, session)",
                "+",
                "+    await handler.handle_oidc_callback(request)",
                "+",
                "+",
                "+def _build_callback_request(",
                "+    code: str,",
                "+    state: str,",
                "+    session: str,",
                "+    user_agent: str = \"Browser\",",
                "+    ip_address: str = \"10.0.0.1\",",
                "+):",
                "+    \"\"\"Builds a fake SynapseRequest to mock the browser callback",
                "+",
                "+    Returns a Mock object which looks like the SynapseRequest we get from a browser",
                "+    after SSO (before we return to the client)",
                "+",
                "+    Args:",
                "+        code: the authorization code which would have been returned by the OIDC",
                "+           provider",
                "+        state: the \"state\" param which would have been passed around in the",
                "+           query param. Should be the same as was embedded in the session in",
                "+           _build_oidc_session.",
                "+        session: the \"session\" which would have been passed around in the cookie.",
                "+        user_agent: the user-agent to present",
                "+        ip_address: the IP address to pretend the request came from",
                "+    \"\"\"",
                "+    request = Mock(",
                "+        spec=[",
                "+            \"args\",",
                "+            \"getCookie\",",
                "+            \"addCookie\",",
                "+            \"requestHeaders\",",
                "+            \"getClientIP\",",
                "+            \"get_user_agent\",",
                "+        ]",
                "+    )",
                "+",
                "+    request.getCookie.return_value = session",
                "+    request.args = {}",
                "+    request.args[b\"code\"] = [code.encode(\"utf-8\")]",
                "+    request.args[b\"state\"] = [state.encode(\"utf-8\")]",
                "+    request.getClientIP.return_value = ip_address",
                "+    request.get_user_agent.return_value = user_agent",
                "+    return request"
            ],
            "changed_files": [
                "tests/handlers/test_oidc.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c1883f042d4e6d69e4c211bcad5d65da5123f33d",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608073203,
            "hunks": 1,
            "message": "Remove spurious mocking of complete_sso_login The tests that need this all do it already.",
            "diff": [
                "diff --git a/tests/handlers/test_oidc.py b/tests/handlers/test_oidc.py",
                "index 1794a169e..bd2437501 100644",
                "--- a/tests/handlers/test_oidc.py",
                "+++ b/tests/handlers/test_oidc.py",
                "@@ -798,4 +798,2 @@ class OidcHandlerTestCase(HomeserverTestCase):",
                "         self.handler._fetch_userinfo = simple_async_mock(return_value=userinfo)",
                "-        auth_handler = self.hs.get_auth_handler()",
                "-        auth_handler.complete_sso_login = simple_async_mock()"
            ],
            "changed_files": [
                "tests/handlers/test_oidc.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "fd83debcc047efecfb936422684f2c283ecbfe8b",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607513408,
            "hunks": 0,
            "message": "Merge branch 'master' into develop",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4c33796b20f934a43f4f09a2bac6653c18d72b69",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608209721,
            "hunks": 16,
            "message": "Correctly handle AS registerations and add test",
            "diff": [
                "diff --git a/synapse/handlers/auth.py b/synapse/handlers/auth.py",
                "index c7dc07008..3b8ac4325 100644",
                "--- a/synapse/handlers/auth.py",
                "+++ b/synapse/handlers/auth.py",
                "@@ -711,2 +711,3 @@ class AuthHandler(BaseHandler):",
                "         puppets_user_id: Optional[str] = None,",
                "+        is_appservice_ghost: bool = False,",
                "     ) -> str:",
                "@@ -727,2 +728,3 @@ class AuthHandler(BaseHandler):",
                "                 no expiry.",
                "+            is_appservice_ghost: Whether the user is an application ghost user",
                "         Returns:",
                "@@ -747,3 +749,7 @@ class AuthHandler(BaseHandler):",
                "-        await self.auth.check_auth_blocking(user_id)",
                "+        if (",
                "+            not is_appservice_ghost",
                "+            or self.hs.config.appservice.track_appservice_user_ips",
                "+        ):",
                "+            await self.auth.check_auth_blocking(user_id)",
                "diff --git a/synapse/handlers/register.py b/synapse/handlers/register.py",
                "index 0d85fd086..039aff106 100644",
                "--- a/synapse/handlers/register.py",
                "+++ b/synapse/handlers/register.py",
                "@@ -632,2 +632,3 @@ class RegistrationHandler(BaseHandler):",
                "         is_guest: bool = False,",
                "+        is_appservice_ghost: bool = False,",
                "     ) -> Tuple[str, str]:",
                "@@ -653,2 +654,3 @@ class RegistrationHandler(BaseHandler):",
                "                 is_guest=is_guest,",
                "+                is_appservice_ghost=is_appservice_ghost,",
                "             )",
                "@@ -674,3 +676,6 @@ class RegistrationHandler(BaseHandler):",
                "             access_token = await self._auth_handler.get_access_token_for_user_id(",
                "-                user_id, device_id=registered_device_id, valid_until_ms=valid_until_ms",
                "+                user_id,",
                "+                device_id=registered_device_id,",
                "+                valid_until_ms=valid_until_ms,",
                "+                is_appservice_ghost=is_appservice_ghost,",
                "             )",
                "diff --git a/synapse/replication/http/login.py b/synapse/replication/http/login.py",
                "index 4c81e2d78..36071feb3 100644",
                "--- a/synapse/replication/http/login.py",
                "+++ b/synapse/replication/http/login.py",
                "@@ -38,3 +38,5 @@ class RegisterDeviceReplicationServlet(ReplicationEndpoint):",
                "     @staticmethod",
                "-    async def _serialize_payload(user_id, device_id, initial_display_name, is_guest):",
                "+    async def _serialize_payload(",
                "+        user_id, device_id, initial_display_name, is_guest, is_appservice_ghost",
                "+    ):",
                "         \"\"\"",
                "@@ -50,2 +52,3 @@ class RegisterDeviceReplicationServlet(ReplicationEndpoint):",
                "             \"is_guest\": is_guest,",
                "+            \"is_appservice_ghost\": is_appservice_ghost,",
                "         }",
                "@@ -58,5 +61,10 @@ class RegisterDeviceReplicationServlet(ReplicationEndpoint):",
                "         is_guest = content[\"is_guest\"]",
                "+        is_appservice_ghost = content[\"is_appservice_ghost\"]",
                "         device_id, access_token = await self.registration_handler.register_device(",
                "-            user_id, device_id, initial_display_name, is_guest",
                "+            user_id,",
                "+            device_id,",
                "+            initial_display_name,",
                "+            is_guest,",
                "+            is_appservice_ghost=is_appservice_ghost,",
                "         )",
                "diff --git a/synapse/rest/client/v2_alpha/register.py b/synapse/rest/client/v2_alpha/register.py",
                "index a89ae6ddf..722d99381 100644",
                "--- a/synapse/rest/client/v2_alpha/register.py",
                "+++ b/synapse/rest/client/v2_alpha/register.py",
                "@@ -657,5 +657,9 @@ class RegisterRestServlet(RestServlet):",
                "         )",
                "-        return await self._create_registration_details(user_id, body)",
                "+        return await self._create_registration_details(",
                "+            user_id, body, is_appservice_ghost=True,",
                "+        )",
                "-    async def _create_registration_details(self, user_id, params):",
                "+    async def _create_registration_details(",
                "+        self, user_id, params, is_appservice_ghost=False",
                "+    ):",
                "         \"\"\"Complete registration of newly-registered user",
                "@@ -676,3 +680,7 @@ class RegisterRestServlet(RestServlet):",
                "             device_id, access_token = await self.registration_handler.register_device(",
                "-                user_id, device_id, initial_display_name, is_guest=False",
                "+                user_id,",
                "+                device_id,",
                "+                initial_display_name,",
                "+                is_guest=False,",
                "+                is_appservice_ghost=is_appservice_ghost,",
                "             )",
                "diff --git a/tests/test_mau.py b/tests/test_mau.py",
                "index c5ec6396a..26548b461 100644",
                "--- a/tests/test_mau.py",
                "+++ b/tests/test_mau.py",
                "@@ -21,2 +21,3 @@ from synapse.api.constants import LoginType",
                " from synapse.api.errors import Codes, HttpResponseException, SynapseError",
                "+from synapse.appservice import ApplicationService",
                " from synapse.rest.client.v2_alpha import register, sync",
                "@@ -77,2 +78,40 @@ class TestMauLimit(unittest.HomeserverTestCase):",
                "+    def test_as_ignores_mau(self):",
                "+        \"\"\"Test that application services can still create users when the MAU",
                "+        limit has been reached.",
                "+        \"\"\"",
                "+",
                "+        # Create and sync so that the MAU counts get updated",
                "+        token1 = self.create_user(\"kermit1\")",
                "+        self.do_sync_for_user(token1)",
                "+        token2 = self.create_user(\"kermit2\")",
                "+        self.do_sync_for_user(token2)",
                "+",
                "+        # check we're testing what we think we are: there should be two active users",
                "+        self.assertEqual(self.get_success(self.store.get_monthly_active_count()), 2)",
                "+",
                "+        # We've created and activated two users, we shouldn't be able to",
                "+        # register new users",
                "+        with self.assertRaises(SynapseError) as cm:",
                "+            self.create_user(\"kermit3\")",
                "+",
                "+        e = cm.exception",
                "+        self.assertEqual(e.code, 403)",
                "+        self.assertEqual(e.errcode, Codes.RESOURCE_LIMIT_EXCEEDED)",
                "+",
                "+        # Cheekily add an application service that we use to register a new user",
                "+        # with.",
                "+        as_token = \"foobartoken\"",
                "+        self.store.services_cache.append(",
                "+            ApplicationService(",
                "+                token=as_token,",
                "+                hostname=self.hs.hostname,",
                "+                id=\"SomeASID\",",
                "+                sender=\"@as_sender:test\",",
                "+                namespaces={\"users\": [{\"regex\": \"@as_*\", \"exclusive\": True}]},",
                "+            )",
                "+        )",
                "+",
                "+        self.create_user(\"as_kermit4\", token=as_token)",
                "+",
                "     def test_allowed_after_a_month_mau(self):",
                "@@ -194,3 +233,3 @@ class TestMauLimit(unittest.HomeserverTestCase):",
                "-    def create_user(self, localpart):",
                "+    def create_user(self, localpart, token=None):",
                "         request_data = json.dumps(",
                "@@ -203,3 +242,5 @@ class TestMauLimit(unittest.HomeserverTestCase):",
                "-        request, channel = self.make_request(\"POST\", \"/register\", request_data)",
                "+        request, channel = self.make_request(",
                "+            \"POST\", \"/register\", request_data, access_token=token",
                "+        )"
            ],
            "changed_files": [
                "synapse/handlers/auth.py",
                "synapse/handlers/register.py",
                "synapse/replication/http/login.py",
                "synapse/rest/client/v2_alpha/register.py",
                "tests/test_mau.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c9dd47d66864714043b51a235909e3e957740c7b",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608071286,
            "hunks": 6,
            "message": "lint",
            "diff": [
                "diff --git a/tests/replication/test_auth.py b/tests/replication/test_auth.py",
                "index c5ab3032a..f35a5235e 100644",
                "--- a/tests/replication/test_auth.py",
                "+++ b/tests/replication/test_auth.py",
                "@@ -15,5 +15,3 @@",
                " import logging",
                "-from typing import Tuple",
                "-from synapse.http.site import SynapseRequest",
                " from synapse.rest.client.v2_alpha import register",
                "diff --git a/tests/replication/test_client_reader_shard.py b/tests/replication/test_client_reader_shard.py",
                "index abcc74f93..4608b65a0 100644",
                "--- a/tests/replication/test_client_reader_shard.py",
                "+++ b/tests/replication/test_client_reader_shard.py",
                "@@ -16,3 +16,2 @@ import logging",
                "-from synapse.http.site import SynapseRequest",
                " from synapse.rest.client.v2_alpha import register",
                "@@ -20,3 +19,3 @@ from synapse.rest.client.v2_alpha import register",
                " from tests.replication._base import BaseMultiWorkerStreamTestCase",
                "-from tests.server import FakeChannel, make_request",
                "+from tests.server import make_request",
                "diff --git a/tests/rest/client/v1/test_login.py b/tests/rest/client/v1/test_login.py",
                "index 041f2766d..566776e97 100644",
                "--- a/tests/rest/client/v1/test_login.py",
                "+++ b/tests/rest/client/v1/test_login.py",
                "@@ -717,3 +717,3 @@ class AppserviceLoginRestServletTestCase(unittest.HomeserverTestCase):",
                "     def register_as_user(self, username):",
                "-        channel = self.make_request(",
                "+        self.make_request(",
                "             b\"POST\",",
                "diff --git a/tests/rest/client/v2_alpha/test_auth.py b/tests/rest/client/v2_alpha/test_auth.py",
                "index da866c8b4..51323b3da 100644",
                "--- a/tests/rest/client/v2_alpha/test_auth.py",
                "+++ b/tests/rest/client/v2_alpha/test_auth.py",
                "@@ -22,3 +22,2 @@ from synapse.api.constants import LoginType",
                " from synapse.handlers.ui_auth.checkers import UserInteractiveAuthChecker",
                "-from synapse.http.site import SynapseRequest",
                " from synapse.rest.client.v1 import login",
                "diff --git a/tests/unittest.py b/tests/unittest.py",
                "index 16fd4f32b..39e5e7b85 100644",
                "--- a/tests/unittest.py",
                "+++ b/tests/unittest.py",
                "@@ -22,3 +22,3 @@ import logging",
                " import time",
                "-from typing import Dict, Optional, Tuple, Type, TypeVar, Union, overload",
                "+from typing import Dict, Optional, Type, TypeVar, Union"
            ],
            "changed_files": [
                "tests/replication/test_auth.py",
                "tests/replication/test_client_reader_shard.py",
                "tests/rest/client/v1/test_login.py",
                "tests/rest/client/v2_alpha/test_auth.py",
                "tests/unittest.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "adfc9cb53dc81a0eae06aea740a0ca4708cbdc0c",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607513208,
            "hunks": 0,
            "message": "Merge branch 'master' into develop",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "14eab1b4d2cf837c6b0925da7194cc5940e9401c",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608221653,
            "hunks": 1,
            "message": "Update tests/test_mau.py Co-authored-by: Andrew Morgan <1342360+anoadragon453@users.noreply.github.com>",
            "diff": [
                "diff --git a/tests/test_mau.py b/tests/test_mau.py",
                "index 26548b461..586294446 100644",
                "--- a/tests/test_mau.py",
                "+++ b/tests/test_mau.py",
                "@@ -80,3 +80,4 @@ class TestMauLimit(unittest.HomeserverTestCase):",
                "         \"\"\"Test that application services can still create users when the MAU",
                "-        limit has been reached.",
                "+        limit has been reached. This only works when application service",
                "+        user ip tracking is disabled.",
                "         \"\"\""
            ],
            "changed_files": [
                "tests/test_mau.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a7a913918cf04c6d900223b19e719fafbbe94efa",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608285116,
            "hunks": 2,
            "message": "Merge remote-tracking branch 'origin/erikj/as_mau_block' into develop",
            "diff": [
                "diff --cc tests/test_mau.py",
                "index 02e56e1b0,586294446..51660b51d",
                "--- a/tests/test_mau.py",
                "+++ b/tests/test_mau.py",
                "@@@ -203,3 -243,5 +243,5 @@@ class TestMauLimit(unittest.HomeserverT",
                "-         channel = self.make_request(\"POST\", \"/register\", request_data)",
                " -        request, channel = self.make_request(",
                " -            \"POST\", \"/register\", request_data, access_token=token",
                "++        channel = self.make_request(",
                "++            \"POST\", \"/register\", request_data, access_token=token,",
                "+         )"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "0378581c1335e7e7e9dc0b482b5bf6efb63859be",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608071660,
            "hunks": 8,
            "message": "remove 'response' result from `_get_shared_rooms`",
            "diff": [
                "diff --git a/tests/rest/client/v2_alpha/test_shared_rooms.py b/tests/rest/client/v2_alpha/test_shared_rooms.py",
                "index 562a9c1ba..05c5ee5a7 100644",
                "--- a/tests/rest/client/v2_alpha/test_shared_rooms.py",
                "+++ b/tests/rest/client/v2_alpha/test_shared_rooms.py",
                "@@ -19,2 +19,3 @@ from synapse.rest.client.v2_alpha import shared_rooms",
                " from tests import unittest",
                "+from tests.server import FakeChannel",
                "@@ -42,4 +43,4 @@ class UserSharedRoomsTest(unittest.HomeserverTestCase):",
                "-    def _get_shared_rooms(self, token, other_user):",
                "-        request, channel = self.make_request(",
                "+    def _get_shared_rooms(self, token, other_user) -> FakeChannel:",
                "+        _, channel = self.make_request(",
                "             \"GET\",",
                "@@ -49,3 +50,3 @@ class UserSharedRoomsTest(unittest.HomeserverTestCase):",
                "         )",
                "-        return request, channel",
                "+        return channel",
                "@@ -65,3 +66,3 @@ class UserSharedRoomsTest(unittest.HomeserverTestCase):",
                "-        request, channel = self._get_shared_rooms(u1_token, u2)",
                "+        channel = self._get_shared_rooms(u1_token, u2)",
                "         self.assertEquals(200, channel.code, channel.result)",
                "@@ -84,3 +85,3 @@ class UserSharedRoomsTest(unittest.HomeserverTestCase):",
                "-        request, channel = self._get_shared_rooms(u1_token, u2)",
                "+        channel = self._get_shared_rooms(u1_token, u2)",
                "         self.assertEquals(200, channel.code, channel.result)",
                "@@ -106,3 +107,3 @@ class UserSharedRoomsTest(unittest.HomeserverTestCase):",
                "-        request, channel = self._get_shared_rooms(u1_token, u2)",
                "+        channel = self._get_shared_rooms(u1_token, u2)",
                "         self.assertEquals(200, channel.code, channel.result)",
                "@@ -127,3 +128,3 @@ class UserSharedRoomsTest(unittest.HomeserverTestCase):",
                "         # Assert user directory is not empty",
                "-        request, channel = self._get_shared_rooms(u1_token, u2)",
                "+        channel = self._get_shared_rooms(u1_token, u2)",
                "         self.assertEquals(200, channel.code, channel.result)",
                "@@ -134,3 +135,3 @@ class UserSharedRoomsTest(unittest.HomeserverTestCase):",
                "-        request, channel = self._get_shared_rooms(u2_token, u1)",
                "+        channel = self._get_shared_rooms(u2_token, u1)",
                "         self.assertEquals(200, channel.code, channel.result)"
            ],
            "changed_files": [
                "tests/rest/client/v2_alpha/test_shared_rooms.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "2d7ca53ab54dd03dce0d64cf41b0b74de16f3215",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607530307,
            "hunks": 0,
            "message": "Merge branch 'rav/fix_multiarch_builds' into v1.23.1-multiarch",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "863359a04fe36cfa63aa92392acb7510d76f854d",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608049573,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'origin/develop' into matrix-org-hotfixes",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.35.0rc3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "33a349df91a459435e33c5676bb40c8690492f65",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608038594,
            "hunks": 2,
            "message": "Merge branch 'develop' into matrix-org-hotfixes",
            "diff": [
                "diff --cc synapse/push/httppusher.py",
                "index d011e0ace,5408aa129..995e86e31",
                "--- a/synapse/push/httppusher.py",
                "+++ b/synapse/push/httppusher.py",
                "@@@ -101,8 -95,16 +95,21 @@@ class HttpPusher(Pusher)",
                "              raise PusherConfigException(\"'url' required in data for HTTP pusher\")",
                "-         self.url = self.data[\"url\"]",
                "-         self.url = self.url.replace(",
                "+ ",
                "+         url = self.data[\"url\"]",
                "+         if not isinstance(url, str):",
                "+             raise PusherConfigException(\"'url' must be a string\")",
                "+         url_parts = urllib.parse.urlparse(url)",
                "+         # Note that the specification also says the scheme must be HTTPS, but",
                "+         # it isn't up to the homeserver to verify that.",
                "+         if url_parts.path != \"/_matrix/push/v1/notify\":",
                "+             raise PusherConfigException(",
                "+                 \"'url' must have a path of '/_matrix/push/v1/notify'\"",
                "+             )",
                "+ ",
                "++        url = url.replace(",
                " +            \"https://matrix.org/_matrix/push/v1/notify\",",
                " +            \"http://10.103.0.7/_matrix/push/v1/notify\",",
                " +        )",
                "-         self.http_client = hs.get_proxied_http_client()",
                "++",
                "+         self.url = url",
                "+         self.http_client = hs.get_proxied_blacklisted_http_client()",
                "          self.data_minus_url = {}"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.35.0rc3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4b08c387078aacefb7a06da2076eefc6673c4d55",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1607530079,
            "hunks": 3,
            "message": "Tweak CircleCI config to trigger rebuild of v1.24.0",
            "diff": [
                "diff --git a/.circleci/config.yml b/.circleci/config.yml",
                "index 088da5573..a0dad04d0 100644",
                "--- a/.circleci/config.yml",
                "+++ b/.circleci/config.yml",
                "@@ -10,21 +10,5 @@ jobs:",
                "       - docker_build:",
                "-          tag: -t matrixdotorg/synapse:${CIRCLE_TAG}",
                "-          platforms: linux/amd64",
                "-      - docker_build:",
                "-          tag: -t matrixdotorg/synapse:${CIRCLE_TAG}",
                "+          tag: -t matrixdotorg/synapse:v1.24.0",
                "           platforms: linux/amd64,linux/arm/v7,linux/arm64",
                "-  dockerhubuploadlatest:",
                "-    docker:",
                "-      - image: docker:git",
                "-    steps:",
                "-      - checkout",
                "-      - docker_prepare",
                "-      - run: docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD",
                "-      - docker_build:",
                "-          tag: -t matrixdotorg/synapse:latest",
                "-          platforms: linux/amd64",
                "-      - docker_build:",
                "-          tag: -t matrixdotorg/synapse:latest",
                "-          platforms: linux/amd64,linux/arm/v7,linux/arm64",
                "@@ -33,12 +17,3 @@ workflows:",
                "     jobs:",
                "-      - dockerhubuploadrelease:",
                "-          filters:",
                "-            tags:",
                "-              only: /v[0-9].[0-9]+.[0-9]+.*/",
                "-            branches:",
                "-              ignore: /.*/",
                "-      - dockerhubuploadlatest:",
                "-          filters:",
                "-            branches:",
                "-              only: master",
                "+      - dockerhubuploadrelease"
            ],
            "changed_files": [
                ".circleci/config.yml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "7932d4e9f7e140ef05a3099e18120101019ec3e1",
            "repository": "https://github.com/matrix-org/synapse",
            "timestamp": 1608206654,
            "hunks": 2,
            "message": "Don't MAU limit AS ghost users",
            "diff": [
                "diff --git a/synapse/api/auth_blocking.py b/synapse/api/auth_blocking.py",
                "index 9c227218e..d8088f524 100644",
                "--- a/synapse/api/auth_blocking.py",
                "+++ b/synapse/api/auth_blocking.py",
                "@@ -38,2 +38,3 @@ class AuthBlocking:",
                "         self._server_name = hs.hostname",
                "+        self._track_appservice_user_ips = hs.config.appservice.track_appservice_user_ips",
                "@@ -78,2 +79,8 @@ class AuthBlocking:",
                "                 return",
                "+            elif requester.app_service and not self._track_appservice_user_ips:",
                "+                # If we're authenticated as an appservice then we only block",
                "+                # auth if `track_appservice_user_ips` is set, as that option",
                "+                # implicitly means that application services are part of MAU",
                "+                # limits.",
                "+                return"
            ],
            "changed_files": [
                "synapse/api/auth_blocking.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v1.25.0",
                "v1.25.0rc1",
                "v1.26.0",
                "v1.26.0-deb",
                "v1.26.0rc1",
                "v1.26.0rc2",
                "v1.27.0",
                "v1.27.0rc1",
                "v1.27.0rc2",
                "v1.28.0",
                "v1.28.0rc1",
                "v1.29.0",
                "v1.29.0rc1",
                "v1.30.0",
                "v1.30.0rc1",
                "v1.30.1",
                "v1.31.0",
                "v1.31.0rc1",
                "v1.32.0",
                "v1.32.0rc1",
                "v1.32.1",
                "v1.32.2",
                "v1.33.0",
                "v1.33.0rc1",
                "v1.33.0rc2",
                "v1.33.1",
                "v1.33.2",
                "v1.34.0",
                "v1.34.0rc1",
                "v1.35.0",
                "v1.35.0rc1",
                "v1.35.0rc2",
                "v1.35.0rc3",
                "v1.35.1",
                "v1.36.0",
                "v1.36.0rc1",
                "v1.36.0rc2",
                "v1.37.0",
                "v1.37.0rc1",
                "v1.37.1",
                "v1.37.1a1",
                "v1.37.1rc1",
                "v1.38.0",
                "v1.38.0rc1",
                "v1.38.0rc2",
                "v1.38.0rc3",
                "v1.38.1",
                "v1.39.0",
                "v1.39.0rc1",
                "v1.39.0rc2",
                "v1.39.0rc3",
                "v1.40.0",
                "v1.40.0rc1",
                "v1.40.0rc2",
                "v1.40.0rc3",
                "v1.41.0",
                "v1.41.0rc1",
                "v1.41.1",
                "v1.42.0",
                "v1.42.0rc1",
                "v1.42.0rc2",
                "v1.43.0",
                "v1.43.0rc1",
                "v1.43.0rc2",
                "v1.44.0",
                "v1.44.0rc1",
                "v1.44.0rc2",
                "v1.44.0rc3",
                "v1.45.0",
                "v1.45.0rc1",
                "v1.45.0rc2",
                "v1.45.1",
                "v1.46-modular1",
                "v1.46.0",
                "v1.46.0rc1",
                "v1.47.0",
                "v1.47.0rc1",
                "v1.47.0rc2",
                "v1.47.0rc3",
                "v1.47.1",
                "v1.48.0",
                "v1.48.0rc1",
                "v1.49.0",
                "v1.49.0rc1",
                "v1.49.1",
                "v1.49.2",
                "v1.50.0",
                "v1.50.0rc1",
                "v1.50.0rc2",
                "v1.50.1",
                "v1.50.2",
                "v1.51.0",
                "v1.51.0rc1",
                "v1.51.0rc2",
                "v1.52.0",
                "v1.52.0rc1",
                "v1.53.0",
                "v1.53.0rc1",
                "v1.54.0",
                "v1.54.0rc1",
                "v1.55.0",
                "v1.55.0rc1",
                "v1.55.1",
                "v1.55.2",
                "v1.56.0",
                "v1.56.0rc1",
                "v1.57.0",
                "v1.57.0rc1",
                "v1.57.1",
                "v1.58.0",
                "v1.58.0rc1",
                "v1.58.0rc2",
                "v1.58.1",
                "v1.59.0",
                "v1.59.0rc1",
                "v1.59.0rc2",
                "v1.59.1",
                "v1.60.0",
                "v1.60.0rc1",
                "v1.60.0rc2",
                "v1.61.0",
                "v1.61.0rc1",
                "v1.61.1",
                "v1.62.0",
                "v1.62.0rc1",
                "v1.62.0rc2",
                "v1.62.0rc3",
                "v1.63.0",
                "v1.63.0rc1",
                "v1.63.1",
                "v1.64.0",
                "v1.64.0rc1",
                "v1.64.0rc2",
                "v1.65.0",
                "v1.65.0.post1.dev1",
                "v1.65.0rc1",
                "v1.65.0rc2",
                "v1.66.0",
                "v1.66.0rc1",
                "v1.66.0rc2",
                "v1.67.0",
                "v1.67.0rc1",
                "v1.68.0",
                "v1.68.0rc1",
                "v1.68.0rc2",
                "v1.69.0",
                "v1.69.0rc1",
                "v1.69.0rc2",
                "v1.69.0rc3",
                "v1.69.0rc4",
                "v1.70.0",
                "v1.70.0rc1",
                "v1.70.0rc2",
                "v1.70.1",
                "v1.71.0",
                "v1.71.0rc1",
                "v1.71.0rc2",
                "v1.72.0",
                "v1.72.0rc1",
                "v1.73.0",
                "v1.73.0rc1",
                "v1.73.0rc2",
                "v1.74.0",
                "v1.74.0rc1",
                "v1.75.0",
                "v1.75.0rc1",
                "v1.75.0rc2",
                "v1.76.0",
                "v1.76.0rc1",
                "v1.76.0rc2",
                "v1.77.0",
                "v1.77.0rc1",
                "v1.77.0rc2",
                "v1.78.0",
                "v1.78.0rc1",
                "v1.79.0",
                "v1.79.0rc1",
                "v1.79.0rc2",
                "v1.80.0",
                "v1.80.0rc1",
                "v1.80.0rc2",
                "v1.81.0",
                "v1.81.0rc1",
                "v1.81.0rc2",
                "v1.82.0",
                "v1.82.0rc1",
                "v1.83.0",
                "v1.83.0rc1",
                "v1.84.0",
                "v1.84.0rc1",
                "v1.84.1",
                "v1.85.0",
                "v1.85.0rc1",
                "v1.85.0rc2",
                "v1.85.1",
                "v1.85.2",
                "v1.86.0",
                "v1.86.0rc1",
                "v1.86.0rc2",
                "v1.87.0",
                "v1.87.0rc1",
                "v1.88.0",
                "v1.88.0rc1",
                "v1.89.0",
                "v1.89.0rc1",
                "v1.90.0",
                "v1.90.0rc1",
                "v1.91.0",
                "v1.91.0rc1",
                "v1.91.1",
                "v1.91.2",
                "v1.92.0",
                "v1.92.0rc1",
                "v1.92.1",
                "v1.92.2",
                "v1.92.3",
                "v1.93.0",
                "v1.93.0rc1",
                "v1.94.0",
                "v1.94.0rc1",
                "v1.95.0",
                "v1.95.0rc1",
                "v1.95.1",
                "v1.96.0",
                "v1.96.0rc1",
                "v1.96.1",
                "v1.97.0",
                "v1.97.0rc1",
                "v1.98.0",
                "v1.98.0rc1"
            ],
            "matched_rules": []
        }
    ],
    "processing_statistics": {
        "LLM": {
            "llm": {
                "llm_service": {
                    "LLMService": {
                        "get_repository_url": {
                            "execution time": [
                                4.501857290044427
                            ]
                        },
                        "classify_commit": {
                            "execution time": [
                                1.8918308150023222,
                                2.55834315251559,
                                1.3472756873816252,
                                1.5047113839536905,
                                1.178794912993908,
                                2.4042293401435018,
                                2.262474901974201,
                                1.3570511750876904,
                                1.1510695340111852,
                                1.2340552862733603
                            ]
                        }
                    }
                }
            },
            "Get Repository URL": {
                "# refs in request": [
                    244
                ]
            }
        },
        "core": {
            "git": {
                "git": {
                    "Git": {
                        "create_commits": {
                            "execution time": [
                                0.14438306167721748
                            ]
                        }
                    }
                }
            },
            "commit preprocessing": {
                "commit preprocessing": {
                    "preprocessed commits": [
                        91
                    ]
                },
                "execution time": [
                    93.05194529611617
                ]
            },
            "save commits to backend": {
                "execution time": [
                    0.02628356497734785
                ]
            },
            "candidates analysis": {
                "execution time": [
                    16.966724146157503
                ]
            },
            "execution time": [
                145.1848293952644
            ]
        },
        "rules": {
            "active": [
                17
            ],
            "matches": [
                178
            ]
        }
    }
}
