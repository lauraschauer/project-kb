{
    "advisory_record": {
        "cve_id": "CVE-2018-11776",
        "description": "Apache Struts versions 2.3 to 2.3.34 and 2.5 to 2.5.16 suffer from possible Remote Code Execution when alwaysSelectFullNamespace is true (either by user or a plugin like Convention Plugin) and then: results are used with no namespace and in same time, its upper package have no or wildcard namespace and similar to results, same possibility when using url tag which doesn't have value and action set and in same time, its upper package have no or wildcard namespace.",
        "reserved_timestamp": 1528156800,
        "published_timestamp": 1534896000,
        "updated_timestamp": 1686528000,
        "repository_url": null,
        "references": {
            "": 132,
            "https://cwiki.apache.org/confluence/display/WW/S2-057": 7,
            "https://security.netapp.com/en": 4,
            "https://github.com/hook-s3c/CVE-2018-11776-Python-PoC": 3,
            "http://www.securitytracker.com/id/1041888": 2,
            "https://www.exploit-db.com/exploits/45367/": 2,
            "https://www.exploit-db.com/exploits/45262/": 2,
            "http://www.securityfocus.com/bid/105125": 2,
            "http://www.securitytracker.com/id/1041547": 2,
            "https://www.exploit-db.com/exploits/45260/": 2,
            "https://lists.apache.org/thread.html/r6d03e45b81eab03580cf7f8bb51cb3e9a1b10a2cc0c6a2d3cc92ed0c%40%3Cannounce.apache.org%3E": 2,
            "http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html": 2,
            "https://www.oracle.com/security-alerts/cpujul2020.html": 2,
            "https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html": 2,
            "https://security.netapp.com/advisory/ntap-20181018-0002/": 2,
            "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2018-0012": 2,
            "http://www.oracle.com/technetwork/security-advisory/alert-cve-2018-11776-5072787.html": 2,
            "https://lgtm.com/blog/apache_struts_CVE-2018-11776": 2,
            "https://security.netapp.com/advisory/ntap-20180822-0001/": 2,
            "http://www.arubanetworks.com/assets/alert/ARUBA-PSA-2018-005.txt": 2,
            "http://packetstormsecurity.com/files/172830/Apache-Struts-Remote-Code-Execution.html": 2,
            "https://www.netapp.com/": 2,
            "https://mysupport.netapp.com": 2,
            "https://community.netapp.com": 2,
            "https://www.netapp.com/company/contact-us/": 2,
            "https://security.netapp.com": 2,
            "https://security.netapp.com/advisory/": 2,
            "https://security.netapp.com/bulletins/": 2,
            "https://security.netapp.com/contact/": 2,
            "https://security.netapp.com/policy/": 2,
            "https://security.netapp.com/resources/": 2,
            "https://security.netapp.com/certs/": 2,
            "https://security.netapp.com/advisory": 2,
            "https://www.netapp.com/company/legal/privacy-policy/": 2,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-11776": 2,
            "https://mysupport.netapp.com/products/oncommand_um/9.5/": 2,
            "https://mysupport.netapp.com/products/oncommand_um/9.4P1/": 2,
            "https://mysupport.netapp.com/site/downloads/": 2,
            "http://mysupport.netapp.com": 2,
            "https://www.netapp.com/forms/site-feedback/": 2,
            "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax": 2,
            "commit::master": 2,
            "https://security.netapp.com/advisory/ntap-20181018-0002": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2016-9843": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-1258": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3133": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3137": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3143": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3144": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3145": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3155": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3156": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3161": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3162": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3170": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3171": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3173": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3174": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3182": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3185": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3186": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3187": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3195": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3200": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3203": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3212": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3247": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3251": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3258": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3276": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3277": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3278": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3279": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3280": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3282": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3283": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3284": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3285": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3286": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-8014": 1,
            "https://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html": 1,
            "https://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html#AppendixMSQL": 1,
            "https://www.oracle.com/technetwork/security-advisory/cpuoct2018verbose-5170927.html#MSQL": 1,
            "https://mysupport.netapp.com/NOW/download/software/snapcenter/4.1P3/": 1,
            "https://mysupport.netapp.com/products/oncommand_insight/7.3.5/": 1,
            "https://mysupport.netapp.com/products/ocwfa/5.0/": 1,
            "https://security.netapp.com/advisory/NTAP-20181018-0002": 1,
            "https://cwiki.apache.org/confluence/login.action?os_destination=%2Fdisplay%2FWW%2FS2-057": 1,
            "https://docs.atlassian.com/confluence/docs-719/": 1,
            "https://docs.atlassian.com/confluence/docs-719/help.whats.new.iframe.link": 1,
            "https://confluence.atlassian.com/display/DOC/Confluence+7.19+Release+Notes": 1,
            "https://www.atlassian.com/software/views/opensource-community-additional-license-offer": 1,
            "https://www.atlassian.com/software/confluence": 1,
            "https://support.atlassian.com/confluence-server/": 1,
            "https://www.atlassian.com/company": 1,
            "https://www.atlassian.com/": 1,
            "https://security.netapp.com/advisory/ntap-20180822-0001": 1,
            "https://security.netapp.com/advisory/NTAP-20180822-0001": 1,
            "https://github.com/features/actions": 1,
            "https://github.com/features/packages": 1,
            "https://github.com/features/security": 1,
            "https://github.com/features/codespaces": 1,
            "https://github.com/features/copilot": 1,
            "https://github.com/features/code-review": 1,
            "https://github.com/features/issues": 1,
            "https://github.com/features/discussions": 1,
            "https://github.com/features": 1,
            "https://docs.github.com": 1,
            "https://skills.github.com": 1,
            "https://github.blog": 1,
            "https://github.com/enterprise": 1,
            "https://github.com/team": 1,
            "https://github.com/enterprise/startups": 1,
            "https://github.com/solutions/industries/healthcare": 1,
            "https://github.com/solutions/industries/financial-services": 1,
            "https://github.com/solutions/industries/manufacturing": 1,
            "https://github.com/solutions/ci-cd": 1,
            "https://github.com/solutions/devops": 1,
            "https://github.com/solutions/devsecops": 1,
            "https://resources.github.com/learn/pathways": 1,
            "https://resources.github.com": 1,
            "https://github.com/customer-stories": 1,
            "https://partner.github.com": 1,
            "https://github.com/readme": 1,
            "https://github.com/topics": 1,
            "https://github.com/trending": 1,
            "https://github.com/collections": 1,
            "https://github.com/enterprise/advanced-security": 1,
            "https://github.com/pricing": 1,
            "http://0.0.0.0:32771/$%7B2+2%7D/help.action": 1,
            "http://0.0.0.0:32771/4/date.action": 1,
            "https://stackoverflow.com/questions/9719224/coding-forward-and-backward-slashes-in-tomcat-7": 1,
            "http://engineering.widen.com/blog/tomcat-slashes/": 1,
            "https://semmle.com/news/apache-struts-CVE-2018-11776": 1,
            "https://github.com/piesecurity/apache-struts2-CVE-2017-5638": 1,
            "https://github.com/xfox64x/CVE-2018-11776": 1,
            "https://github.com/jiguang7/CVE-2018-11776": 1,
            "https://www.secjuice.com/apache-struts2-cve-2018-11776/": 1,
            "https://github.com": 1,
            "https://docs.github.com/site-policy/github-terms/github-terms-of-service": 1,
            "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement": 1,
            "https://github.com/security": 1,
            "https://www.githubstatus.com/": 1,
            "https://docs.github.com/": 1,
            "https://support.github.com?tags=dotcom-footer": 1
        },
        "affected_products": [
            "Convention",
            "alwaysSelectFullNamespace",
            "Code",
            "Remote",
            "Execution",
            "Apache",
            "Struts",
            "Plugin",
            "Apache Struts"
        ],
        "versions": {
            "version": "2.3 to 2.3.34",
            "status": "affected"
        },
        "files": [
            "alwaysSelectFullNamespace"
        ],
        "keywords": [
            "remote",
            "code",
            "apache",
            "execution",
            "have",
            "possibility",
            "struts",
            "time",
            "value",
            "result",
            "version",
            "package",
            "convention",
            "action",
            "plugin",
            "alwaysselectfullnamespace",
            "namespace",
            "suffer",
            "user"
        ],
        "files_extension": [],
        "has_fixing_commit": false
    },
    "commits": [
        {
            "commit_id": "4a3917176de2df7f33a85511d067f31e50dcc1b2",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1525759114,
            "hunks": 8,
            "message": "Avoids parsing namespace when using existing namespace",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/PostbackResult.java b/core/src/main/java/org/apache/struts2/dispatcher/PostbackResult.java",
                "index 89e340048..f6a81e44a 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/PostbackResult.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/PostbackResult.java",
                "@@ -129,2 +129,4 @@ public class PostbackResult extends StrutsResultSupport {",
                "             actionName = conditionalParse(actionName, invocation);",
                "+            parseLocation = false;",
                "+",
                "             if (namespace == null) {",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java b/core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java",
                "index 5e0f835b5..baaf4aec0 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java",
                "@@ -166,2 +166,4 @@ public class ServletActionRedirectResult extends ServletRedirectResult implement",
                "         actionName = conditionalParse(actionName, invocation);",
                "+        parseLocation = false;",
                "+",
                "         if (namespace == null) {",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/StrutsResultSupport.java b/core/src/main/java/org/apache/struts2/dispatcher/StrutsResultSupport.java",
                "index bbcffa3b2..930c088b0 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/StrutsResultSupport.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/StrutsResultSupport.java",
                "@@ -120,2 +120,4 @@ public abstract class StrutsResultSupport implements Result, StrutsStatics {",
                "+    protected boolean parseLocation = true;",
                "+",
                "     public StrutsResultSupport() {",
                "@@ -189,3 +191,3 @@ public abstract class StrutsResultSupport implements Result, StrutsStatics {",
                "     public void execute(ActionInvocation invocation) throws Exception {",
                "-        lastFinalLocation = conditionalParse(location, invocation);",
                "+        lastFinalLocation = parseLocation ? conditionalParse(location, invocation) : location;",
                "         doExecute(lastFinalLocation, invocation);",
                "diff --git a/plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java b/plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java",
                "index 04729c1f5..ce7c02b84 100644",
                "--- a/plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java",
                "+++ b/plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java",
                "@@ -176,2 +176,4 @@ public class PortletActionRedirectResult extends PortletResult {",
                " \t\tactionName = conditionalParse(actionName, invocation);",
                "+\t\tparseLocation = false;",
                "+",
                " \t\tString portletNamespace = (String)invocation.getInvocationContext().get(PortletConstants.PORTLET_NAMESPACE);",
                "diff --git a/xwork-core/src/main/java/com/opensymphony/xwork2/ActionChainResult.java b/xwork-core/src/main/java/com/opensymphony/xwork2/ActionChainResult.java",
                "index 170c56796..9aeb0def5 100644",
                "--- a/xwork-core/src/main/java/com/opensymphony/xwork2/ActionChainResult.java",
                "+++ b/xwork-core/src/main/java/com/opensymphony/xwork2/ActionChainResult.java",
                "@@ -199,13 +199,10 @@ public class ActionChainResult implements Result {",
                "     public void execute(ActionInvocation invocation) throws Exception {",
                "-        // if the finalNamespace wasn't explicitly defined, assume the current one",
                "-        if (this.namespace == null) {",
                "-            this.namespace = invocation.getProxy().getNamespace();",
                "-        }",
                "-",
                "         ValueStack stack = ActionContext.getContext().getValueStack();",
                "-        String finalNamespace = TextParseUtil.translateVariables(namespace, stack);",
                "+        String finalNamespace = this.namespace != null",
                "+            ? TextParseUtil.translateVariables(namespace, stack)",
                "+            : invocation.getProxy().getNamespace();",
                "         String finalActionName = TextParseUtil.translateVariables(actionName, stack);",
                "         String finalMethodName = this.methodName != null",
                "-                ? TextParseUtil.translateVariables(this.methodName, stack)",
                "-                : null;",
                "+            ? TextParseUtil.translateVariables(this.methodName, stack)",
                "+            : null;"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/dispatcher/PostbackResult.java",
                "core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java",
                "core/src/main/java/org/apache/struts2/dispatcher/StrutsResultSupport.java",
                "plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java",
                "xwork-core/src/main/java/com/opensymphony/xwork2/ActionChainResult.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "b3bad5ea44f3fd9edb2cb491192c5900f46d45d3"
                ]
            ],
            "tags": [
                "STRUTS_2_3_35",
                "STRUTS_2_3_36",
                "STRUTS_2_3_37"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: namespace",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin, result, action",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b804b86744a4c257f83ab0d68ac60567000c7332",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1527668770,
            "hunks": 4,
            "message": "delete unused local variable timerKey See also WW-4779",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java b/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "index 6514ea9bc..e8e7baeb2 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "@@ -297,3 +297,2 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "         // load action",
                "-        String timerKey = \"actionCreate: \" + proxy.getActionName();",
                "         try {",
                "@@ -367,3 +366,2 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "-        String timerKey = \"executeResult: \" + getResultCode();",
                "         if (result != null) {",
                "diff --git a/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsFreemarkerDecorator.java b/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsFreemarkerDecorator.java",
                "index 50970f913..ec792bad0 100644",
                "--- a/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsFreemarkerDecorator.java",
                "+++ b/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsFreemarkerDecorator.java",
                "@@ -67,3 +67,2 @@ public class OldDecorator2NewStrutsFreemarkerDecorator extends OldDecorator2NewS",
                "     protected void render(Content content, HttpServletRequest request, HttpServletResponse response, ServletContext servletContext, ActionContext ctx) throws ServletException, IOException {",
                "-        String timerKey = \"FreemarkerPageFilter_applyDecorator: \";",
                "         if (freemarkerManager == null) {",
                "diff --git a/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsVelocityDecorator.java b/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsVelocityDecorator.java",
                "index 90c1cda14..cd0417364 100644",
                "--- a/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsVelocityDecorator.java",
                "+++ b/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsVelocityDecorator.java",
                "@@ -64,3 +64,2 @@ public class OldDecorator2NewStrutsVelocityDecorator extends OldDecorator2NewStr",
                "     protected void render(Content content, HttpServletRequest request, HttpServletResponse response, ServletContext servletContext, ActionContext ctx) throws ServletException, IOException {",
                "-        String timerKey = \"FreemarkerPageFilter_applyDecorator: \";",
                "         if (velocityManager == null) {"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsFreemarkerDecorator.java",
                "plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsVelocityDecorator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4779": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: time",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin, action",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4779",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "db0f5b50bc4ebe7a478c2d9efea180400e116fc1",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526932409,
            "hunks": 2,
            "message": "remove ProfilingTimerBean Part of removing the profiling layer Issue: * WW-4779",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/profiling/ProfilingTimerBean.java b/core/src/main/java/com/opensymphony/xwork2/util/profiling/ProfilingTimerBean.java",
                "deleted file mode 100644",
                "index 3706d2843..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/profiling/ProfilingTimerBean.java",
                "+++ /dev/null",
                "@@ -1,129 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-/*",
                "- * Copyright (c) 2002-2003, Atlassian Software Systems Pty Ltd All rights reserved.",
                "- *",
                "- * Redistribution and use in source and binary forms, with or without modification,",
                "- * are permitted provided that the following conditions are met:",
                "- * ",
                "- *     * Redistributions of source code must retain the above copyright notice,",
                "- * this list of conditions and the following disclaimer.",
                "- *     * Redistributions in binary form must reproduce the above copyright notice,",
                "- * this list of conditions and the following disclaimer in the documentation and/or",
                "- * other materials provided with the distribution.",
                "- *     * Neither the name of Atlassian Software Systems Pty Ltd nor the names of",
                "- * its contributors may be used to endorse or promote products derived from this",
                "- * software without specific prior written permission.",
                "- * ",
                "- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND",
                "- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED",
                "- * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE",
                "- * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR",
                "- * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES",
                "- * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;",
                "- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON",
                "- * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT",
                "- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS",
                "- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
                "- */",
                "-package com.opensymphony.xwork2.util.profiling;",
                "-",
                "-import java.util.ArrayList;",
                "-import java.util.List;",
                "-",
                "-/**",
                "- * Bean to contain information about the pages profiled",
                "- *",
                "- * @author <a href=\"mailto:mike@atlassian.com\">Mike Cannon-Brookes</a>",
                "- * @author <a href=\"mailto:scott@atlassian.com\">Scott Farquhar</a>",
                "- * @version $Date$ $Id$",
                "- *",
                "- * @deprecated will be dropped with next major release (2.6)",
                "- */",
                "-@Deprecated",
                "-public class ProfilingTimerBean implements java.io.Serializable {",
                "-",
                "-    private static final long serialVersionUID = -6180672043920208784L;",
                "-",
                "-    List<ProfilingTimerBean> children = new ArrayList<>();",
                "-    ProfilingTimerBean parent = null;",
                "-",
                "-    String resource;",
                "-",
                "-    long startTime;",
                "-    long totalTime;",
                "-",
                "-    public ProfilingTimerBean(String resource) {",
                "-        this.resource = resource;",
                "-    }",
                "-",
                "-    protected void addParent(ProfilingTimerBean parent) {",
                "-        this.parent = parent;",
                "-    }",
                "-",
                "-    public ProfilingTimerBean getParent() {",
                "-        return parent;",
                "-    }",
                "-",
                "-",
                "-    public void addChild(ProfilingTimerBean child) {",
                "-        children.add(child);",
                "-        child.addParent(this);",
                "-    }",
                "-",
                "-",
                "-    public void setStartTime() {",
                "-        this.startTime = System.currentTimeMillis();",
                "-    }",
                "-",
                "-    public void setEndTime() {",
                "-        this.totalTime = System.currentTimeMillis() - startTime;",
                "-    }",
                "-",
                "-    public String getResource() {",
                "-        return resource;",
                "-    }",
                "-",
                "-    /**",
                "-     * @param minTime minimum time",
                "-     * @return  a formatted string representing all the methods that took longer than a specified time.",
                "-     */",
                "-    public String getPrintable(long minTime) {",
                "-        return getPrintable(\"\", minTime);",
                "-    }",
                "-",
                "-    protected String getPrintable(String indent, long minTime) {",
                "-        //only print the value if we are larger or equal to the min time.",
                "-        if (totalTime >= minTime) {",
                "-            StringBuilder buffer = new StringBuilder();",
                "-            buffer.append(indent);",
                "-            buffer.append(\"[\" + totalTime + \"ms] - \" + resource);",
                "-            buffer.append(\"\\n\");",
                "-",
                "-            for (ProfilingTimerBean aChildren : children) {",
                "-                buffer.append((aChildren).getPrintable(indent + \"  \", minTime));",
                "-            }",
                "-",
                "-            return buffer.toString();",
                "-        } else",
                "-            return \"\";",
                "-    }",
                "-}",
                "-",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/profiling/package.html b/core/src/main/java/com/opensymphony/xwork2/util/profiling/package.html",
                "deleted file mode 100644",
                "index 766d4b870..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/profiling/package.html",
                "+++ /dev/null",
                "@@ -1,21 +0,0 @@",
                "-<!--",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "--->",
                "-<body>Classes to enable profiling of action execution.</body>"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/util/profiling/ProfilingTimerBean.java",
                "core/src/main/java/com/opensymphony/xwork2/util/profiling/package.html"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4779": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: time",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: package, time",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4779",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2ab4657d76ac35c6050789482b932a8fbf8dcf99",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526927312,
            "hunks": 3,
            "message": "remove TimerInterceptor Part of removing the profiling layer Issue: * WW-4779",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/interceptor/TimerInterceptor.java b/core/src/main/java/com/opensymphony/xwork2/interceptor/TimerInterceptor.java",
                "deleted file mode 100644",
                "index 3530cb78f..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/interceptor/TimerInterceptor.java",
                "+++ /dev/null",
                "@@ -1,251 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package com.opensymphony.xwork2.interceptor;",
                "-",
                "-import com.opensymphony.xwork2.ActionInvocation;",
                "-import org.apache.commons.lang3.StringUtils;",
                "-import org.apache.logging.log4j.LogManager;",
                "-import org.apache.logging.log4j.Logger;",
                "-",
                "-/**",
                "- * <!-- START SNIPPET: description -->",
                "- * This interceptor logs the amount of time in milliseconds. In order for this interceptor to work properly, the",
                "- * logging framework must be set to at least the <tt>INFO</tt> level.",
                "- * This interceptor relies on the <a href=\"http://jakarta.apache.org/commons/logging/\">Commons Logging API</a> to",
                "- * report its execution-time value.",
                "- * <!-- END SNIPPET: description -->",
                "- *",
                "- * <!-- START SNIPPET: parameters -->",
                "- *",
                "- * <ul>",
                "- *",
                "- * <li>logLevel (optional) - what log level should we use (<code>trace, debug, info, warn, error, fatal</code>)? - defaut is <code>info</code></li>",
                "- *",
                "- * <li>logCategory (optional) - If provided we would use this category (eg. <code>com.mycompany.app</code>).",
                "- * Default is to use <code>com.opensymphony.xwork2.interceptor.TimerInterceptor</code>.</li>",
                "- *",
                "- * </ul>",
                "- *",
                "- * The parameters above enables us to log all action execution times in our own logfile.",
                "- *",
                "- * <!-- END SNIPPET: parameters -->",
                "- *",
                "- * <!-- START SNIPPET: extending -->",
                "- * This interceptor can be extended to provide custom message format. Users should override the",
                "- * <code>invokeUnderTiming</code> method.",
                "- * <!-- END SNIPPET: extending -->",
                "- *",
                "- * <pre>",
                "- * <!-- START SNIPPET: example -->",
                "- * &lt;!-- records only the action's execution time --&gt;",
                "- * &lt;action name=\"someAction\" class=\"com.examples.SomeAction\"&gt;",
                "- *     &lt;interceptor-ref name=\"completeStack\"/&gt;",
                "- *     &lt;interceptor-ref name=\"timer\"/&gt;",
                "- *     &lt;result name=\"success\"&gt;good_result.ftl&lt;/result&gt;",
                "- * &lt;/action&gt;",
                "- *",
                "- * &lt;!-- records action's execution time as well as other interceptors--&gt;",
                "- * &lt;action name=\"someAction\" class=\"com.examples.SomeAction\"&gt;",
                "- *     &lt;interceptor-ref name=\"timer\"/&gt;",
                "- *     &lt;interceptor-ref name=\"completeStack\"/&gt;",
                "- *     &lt;result name=\"success\"&gt;good_result.ftl&lt;/result&gt;",
                "- * &lt;/action&gt;",
                "- * <!-- END SNIPPET: example -->",
                "- * </pre>",
                "- *",
                "- * This second example uses our own log category at debug level.",
                "- *",
                "- * <pre>",
                "- * <!-- START SNIPPET: example2 -->",
                "- * &lt;!-- records only the action's execution time --&gt;",
                "- * &lt;action name=\"someAction\" class=\"com.examples.SomeAction\"&gt;",
                "- *     &lt;interceptor-ref name=\"completeStack\"/&gt;",
                "- *     &lt;interceptor-ref name=\"timer\"&gt;",
                "- *         &lt;param name=\"logLevel\"&gt;debug&lt;/param&gt;",
                "- *         &lt;param name=\"logCategory\"&gt;com.mycompany.myapp.actiontime&lt;/param&gt;",
                "- *     &lt;interceptor-ref/&gt;",
                "- *     &lt;result name=\"success\"&gt;good_result.ftl&lt;/result&gt;",
                "- * &lt;/action&gt;",
                "- *",
                "- * &lt;!-- records action's execution time as well as other interceptors--&gt;",
                "- * &lt;action name=\"someAction\" class=\"com.examples.SomeAction\"&gt;",
                "- *     &lt;interceptor-ref name=\"timer\"/&gt;",
                "- *     &lt;interceptor-ref name=\"completeStack\"/&gt;",
                "- *     &lt;result name=\"success\"&gt;good_result.ftl&lt;/result&gt;",
                "- * &lt;/action&gt;",
                "- * <!-- END SNIPPET: example2 -->",
                "- * </pre>",
                "- *",
                "- * @author Jason Carreira",
                "- * @author Claus Ibsen",
                "- *",
                "- * @deprecated will be dropped with next major release (2.6)",
                "- */",
                "-@Deprecated",
                "-public class TimerInterceptor extends AbstractInterceptor {",
                "-",
                "-    private static final Logger LOG = LogManager.getLogger(TimerInterceptor.class);",
                "-",
                "-    protected Logger categoryLogger;",
                "-    protected String logCategory;",
                "-    protected String logLevel;",
                "-",
                "-    public String getLogCategory() {",
                "-        return logCategory;",
                "-    }",
                "-",
                "-    public void setLogCategory(String logCatgory) {",
                "-        this.logCategory = logCatgory;",
                "-    }",
                "-",
                "-    public String getLogLevel() {",
                "-        return logLevel;",
                "-    }",
                "-",
                "-    public void setLogLevel(String logLevel) {",
                "-        this.logLevel = logLevel;",
                "-    }",
                "-",
                "-    @Override",
                "-    public String intercept(ActionInvocation invocation) throws Exception {",
                "-        if (! shouldLog()) {",
                "-            return invocation.invoke();",
                "-        } else {",
                "-            return invokeUnderTiming(invocation);",
                "-        }",
                "-    }",
                "-",
                "-    /**",
                "-     * Is called to invoke the action invocation and time the execution time.",
                "-     *",
                "-     * @param invocation  the action invocation.",
                "-     * @return the result of the action execution.",
                "-     * @throws Exception  can be thrown from the action.",
                "-     */",
                "-    protected String invokeUnderTiming(ActionInvocation invocation) throws Exception {",
                "-        long startTime = System.currentTimeMillis();",
                "-        String result = invocation.invoke();",
                "-        long executionTime = System.currentTimeMillis() - startTime;",
                "-",
                "-        StringBuilder message = new StringBuilder(100);",
                "-        message.append(\"Executed action [\");",
                "-        String namespace = invocation.getProxy().getNamespace();",
                "-        if (StringUtils.isNotBlank(namespace)) {",
                "-            message.append(namespace).append(\"/\");",
                "-        }",
                "-        message.append(invocation.getProxy().getActionName());",
                "-        message.append(\"!\");",
                "-        message.append(invocation.getProxy().getMethod());",
                "-        message.append(\"] took \").append(executionTime).append(\" ms.\");",
                "-",
                "-        doLog(getLoggerToUse(), message.toString());",
                "-",
                "-        return result;",
                "-    }",
                "-",
                "-    /**",
                "-     * Determines if we should log the time.",
                "-     *",
                "-     * @return  true to log, false to not log.",
                "-     */",
                "-    protected boolean shouldLog() {",
                "-        // default check first",
                "-        if (logLevel == null && logCategory == null) {",
                "-            return LOG.isInfoEnabled();",
                "-        }",
                "-",
                "-        // okay user have set some parameters",
                "-        return isLoggerEnabled(getLoggerToUse(), logLevel);",
                "-    }",
                "-",
                "-    /**",
                "-     * Get's the logger to use.",
                "-     *",
                "-     * @return the logger to use.",
                "-     */",
                "-    protected Logger getLoggerToUse() {",
                "-        if (logCategory != null) {",
                "-            if (categoryLogger == null) {",
                "-                // init category logger",
                "-                categoryLogger = LogManager.getLogger(logCategory);",
                "-                if (logLevel == null) {",
                "-                    logLevel = \"info\"; // use info as default if not provided",
                "-                }",
                "-            }",
                "-            return categoryLogger;",
                "-        }",
                "-",
                "-        return LOG;",
                "-    }",
                "-",
                "-    /**",
                "-     * Performs the actual logging.",
                "-     *",
                "-     * @param logger  the provided logger to use.",
                "-     * @param message  the message to log.",
                "-     */",
                "-    protected void doLog(Logger logger, String message) {",
                "-        if (logLevel == null) {",
                "-            logger.info(message);",
                "-            return;",
                "-        }",
                "-",
                "-        if (\"debug\".equalsIgnoreCase(logLevel)) {",
                "-            logger.debug(message);",
                "-        } else if (\"info\".equalsIgnoreCase(logLevel)) {",
                "-            logger.info(message);",
                "-        } else if (\"warn\".equalsIgnoreCase(logLevel)) {",
                "-            logger.warn(message);",
                "-        } else if (\"error\".equalsIgnoreCase(logLevel)) {",
                "-            logger.error(message);",
                "-        } else if (\"fatal\".equalsIgnoreCase(logLevel)) {",
                "-            logger.fatal(message);",
                "-        } else if (\"trace\".equalsIgnoreCase(logLevel)) {",
                "-            logger.trace(message);",
                "-        } else {",
                "-            throw new IllegalArgumentException(\"LogLevel [\" + logLevel + \"] is not supported\");",
                "-        }",
                "-    }",
                "-",
                "-    /**",
                "-     * Is the given logger enalbed at the given level?",
                "-     *",
                "-     * @param logger  the logger.",
                "-     * @param level   the level to check if <code>isXXXEnabled</code>.",
                "-     * @return <tt>true</tt> if enabled, <tt>false</tt> if not.",
                "-     */",
                "-    private static boolean isLoggerEnabled(Logger logger, String level) {",
                "-        if (\"debug\".equalsIgnoreCase(level)) {",
                "-            return logger.isDebugEnabled();",
                "-        } else if (\"info\".equalsIgnoreCase(level)) {",
                "-            return logger.isInfoEnabled();",
                "-        } else if (\"warn\".equalsIgnoreCase(level)) {",
                "-            return logger.isWarnEnabled();",
                "-        } else if (\"error\".equalsIgnoreCase(level)) {",
                "-            return logger.isErrorEnabled();",
                "-        } else if (\"fatal\".equalsIgnoreCase(level)) {",
                "-            return logger.isFatalEnabled();",
                "-        } else if (\"trace\".equalsIgnoreCase(level)) {",
                "-            return logger.isTraceEnabled();",
                "-        } else {",
                "-            throw new IllegalArgumentException(\"LogLevel [\" + level + \"] is not supported\");",
                "-        }",
                "-    }",
                "-",
                "-}",
                "diff --git a/core/src/main/resources/struts-default.xml b/core/src/main/resources/struts-default.xml",
                "index 204c5f1c0..85f67bc9b 100644",
                "--- a/core/src/main/resources/struts-default.xml",
                "+++ b/core/src/main/resources/struts-default.xml",
                "@@ -228,3 +228,2 @@",
                "             <interceptor name=\"servletConfig\" class=\"org.apache.struts2.interceptor.ServletConfigInterceptor\"/>",
                "-            <interceptor name=\"timer\" class=\"com.opensymphony.xwork2.interceptor.TimerInterceptor\"/>",
                "             <interceptor name=\"token\" class=\"org.apache.struts2.interceptor.TokenInterceptor\"/>",
                "diff --git a/core/src/main/resources/xwork-default.xml b/core/src/main/resources/xwork-default.xml",
                "index eb843bdfa..9e7f68dec 100644",
                "--- a/core/src/main/resources/xwork-default.xml",
                "+++ b/core/src/main/resources/xwork-default.xml",
                "@@ -38,3 +38,2 @@",
                "-            <interceptor name=\"timer\" class=\"com.opensymphony.xwork2.interceptor.TimerInterceptor\"/>",
                "             <interceptor name=\"logger\" class=\"com.opensymphony.xwork2.interceptor.LoggingInterceptor\"/>"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/interceptor/TimerInterceptor.java",
                "core/src/main/resources/struts-default.xml",
                "core/src/main/resources/xwork-default.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4779": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: time",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: time",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4779",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "73cace0cbb290fcfacaa09982766d561483bffbb",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1525949217,
            "hunks": 1,
            "message": "Adds sorted and navigable set support JSON plugin See WW-4937 for more details.",
            "diff": [
                "diff --git a/plugins/json/src/main/java/org/apache/struts2/json/JSONPopulator.java b/plugins/json/src/main/java/org/apache/struts2/json/JSONPopulator.java",
                "index 67d80f182..52ab35884 100644",
                "--- a/plugins/json/src/main/java/org/apache/struts2/json/JSONPopulator.java",
                "+++ b/plugins/json/src/main/java/org/apache/struts2/json/JSONPopulator.java",
                "@@ -205,3 +205,5 @@ public class JSONPopulator {",
                "                 // fallback if clazz represents an interface or abstract class",
                "-                if (Set.class.isAssignableFrom(clazz)) {",
                "+                if (SortedSet.class.isAssignableFrom(clazz)) {",
                "+                    newCollection = new TreeSet();",
                "+                } else if (Set.class.isAssignableFrom(clazz)) {",
                "                     newCollection = new HashSet();"
            ],
            "changed_files": [
                "plugins/json/src/main/java/org/apache/struts2/json/JSONPopulator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4937": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4937",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6c216de38edbcb6428df3581fea0ea79bf753397",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1531381030,
            "hunks": 57,
            "message": "[maven-release-plugin] prepare release STRUTS_2_3_35",
            "diff": [
                "diff --git a/apps/blank/pom.xml b/apps/blank/pom.xml",
                "index d85cd6705..243ee3394 100644",
                "--- a/apps/blank/pom.xml",
                "+++ b/apps/blank/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/apps/jboss-blank/pom.xml b/apps/jboss-blank/pom.xml",
                "index b42c45762..95a9049a5 100644",
                "--- a/apps/jboss-blank/pom.xml",
                "+++ b/apps/jboss-blank/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/apps/mailreader/pom.xml b/apps/mailreader/pom.xml",
                "index 2f5f91d81..8e3eae46c 100644",
                "--- a/apps/mailreader/pom.xml",
                "+++ b/apps/mailreader/pom.xml",
                "@@ -28,3 +28,3 @@",
                "       <artifactId>struts2-apps</artifactId>",
                "-      <version>2.3.35-SNAPSHOT</version>",
                "+      <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/apps/pom.xml b/apps/pom.xml",
                "index 3cf6985b2..9d6e53bee 100644",
                "--- a/apps/pom.xml",
                "+++ b/apps/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/apps/portlet/pom.xml b/apps/portlet/pom.xml",
                "index 59efb3b4f..164868a22 100644",
                "--- a/apps/portlet/pom.xml",
                "+++ b/apps/portlet/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/apps/rest-showcase/pom.xml b/apps/rest-showcase/pom.xml",
                "index 0857808de..67fcebeaa 100644",
                "--- a/apps/rest-showcase/pom.xml",
                "+++ b/apps/rest-showcase/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "@@ -33,3 +33,3 @@",
                "     <packaging>war</packaging>",
                "-    <version>2.3.35-SNAPSHOT</version>",
                "+    <version>2.3.35</version>",
                "     <name>Struts 2 Rest Showcase Webapp</name>",
                "diff --git a/apps/showcase/pom.xml b/apps/showcase/pom.xml",
                "index 6b7595392..77d2edff9 100644",
                "--- a/apps/showcase/pom.xml",
                "+++ b/apps/showcase/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/archetypes/pom.xml b/archetypes/pom.xml",
                "index 4d4f7044d..3fa5d9629 100644",
                "--- a/archetypes/pom.xml",
                "+++ b/archetypes/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-angularjs/pom.xml b/archetypes/struts2-archetype-angularjs/pom.xml",
                "index 23b9d2a17..16a77e033 100644",
                "--- a/archetypes/struts2-archetype-angularjs/pom.xml",
                "+++ b/archetypes/struts2-archetype-angularjs/pom.xml",
                "@@ -4,3 +4,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-blank/pom.xml b/archetypes/struts2-archetype-blank/pom.xml",
                "index a5af905b3..c0aea885a 100644",
                "--- a/archetypes/struts2-archetype-blank/pom.xml",
                "+++ b/archetypes/struts2-archetype-blank/pom.xml",
                "@@ -5,3 +5,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-convention/pom.xml b/archetypes/struts2-archetype-convention/pom.xml",
                "index 4abcf7364..43c9d076c 100644",
                "--- a/archetypes/struts2-archetype-convention/pom.xml",
                "+++ b/archetypes/struts2-archetype-convention/pom.xml",
                "@@ -4,3 +4,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-dbportlet/pom.xml b/archetypes/struts2-archetype-dbportlet/pom.xml",
                "index dc337e874..a82abb8a4 100644",
                "--- a/archetypes/struts2-archetype-dbportlet/pom.xml",
                "+++ b/archetypes/struts2-archetype-dbportlet/pom.xml",
                "@@ -4,3 +4,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-plugin/pom.xml b/archetypes/struts2-archetype-plugin/pom.xml",
                "index eaaafb416..bbdcb962f 100644",
                "--- a/archetypes/struts2-archetype-plugin/pom.xml",
                "+++ b/archetypes/struts2-archetype-plugin/pom.xml",
                "@@ -4,3 +4,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-portlet/pom.xml b/archetypes/struts2-archetype-portlet/pom.xml",
                "index 5681a3b17..9489b77da 100644",
                "--- a/archetypes/struts2-archetype-portlet/pom.xml",
                "+++ b/archetypes/struts2-archetype-portlet/pom.xml",
                "@@ -4,3 +4,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-starter/pom.xml b/archetypes/struts2-archetype-starter/pom.xml",
                "index 5d72ba8c6..da86e0ab5 100644",
                "--- a/archetypes/struts2-archetype-starter/pom.xml",
                "+++ b/archetypes/struts2-archetype-starter/pom.xml",
                "@@ -6,3 +6,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/assembly/pom.xml b/assembly/pom.xml",
                "index 261d7fb3f..f6f47c232 100644",
                "--- a/assembly/pom.xml",
                "+++ b/assembly/pom.xml",
                "@@ -5,3 +5,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/bom/pom.xml b/bom/pom.xml",
                "index 3f6d0cb23..1d57cdade 100644",
                "--- a/bom/pom.xml",
                "+++ b/bom/pom.xml",
                "@@ -12,3 +12,3 @@",
                "     <artifactId>struts2-bom</artifactId>",
                "-    <version>2.3.35-SNAPSHOT</version>",
                "+    <version>2.3.35</version>",
                "     <packaging>pom</packaging>",
                "@@ -27,3 +27,3 @@",
                "     <properties>",
                "-        <struts-version.version>2.3.35-SNAPSHOT</struts-version.version>",
                "+        <struts-version.version>2.3.35</struts-version.version>",
                "     </properties>",
                "@@ -199,3 +199,3 @@",
                "   <scm>",
                "-    <tag>STRUTS_2_3_24_1</tag>",
                "+    <tag>STRUTS_2_3_35</tag>",
                "   </scm>",
                "diff --git a/bundles/admin/pom.xml b/bundles/admin/pom.xml",
                "index c0078eccf..360d0465d 100644",
                "--- a/bundles/admin/pom.xml",
                "+++ b/bundles/admin/pom.xml",
                "@@ -6,3 +6,3 @@",
                "         <artifactId>struts2-osgi-bundles</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/bundles/demo/pom.xml b/bundles/demo/pom.xml",
                "index 091379e97..484a25fbd 100644",
                "--- a/bundles/demo/pom.xml",
                "+++ b/bundles/demo/pom.xml",
                "@@ -6,3 +6,3 @@",
                "         <artifactId>struts2-osgi-bundles</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/bundles/pom.xml b/bundles/pom.xml",
                "index 34c4ef5ed..c99869f5c 100755",
                "--- a/bundles/pom.xml",
                "+++ b/bundles/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/core/pom.xml b/core/pom.xml",
                "index c579b01bf..d8413034a 100644",
                "--- a/core/pom.xml",
                "+++ b/core/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/cdi/pom.xml b/plugins/cdi/pom.xml",
                "index 8e283df67..e4f58d7eb 100644",
                "--- a/plugins/cdi/pom.xml",
                "+++ b/plugins/cdi/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/codebehind/pom.xml b/plugins/codebehind/pom.xml",
                "index 44f7462b9..1fdeb3a17 100644",
                "--- a/plugins/codebehind/pom.xml",
                "+++ b/plugins/codebehind/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/config-browser/pom.xml b/plugins/config-browser/pom.xml",
                "index 4fc3f5f01..f0218f65a 100644",
                "--- a/plugins/config-browser/pom.xml",
                "+++ b/plugins/config-browser/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/convention/pom.xml b/plugins/convention/pom.xml",
                "index 701eb5a53..99c53db56 100644",
                "--- a/plugins/convention/pom.xml",
                "+++ b/plugins/convention/pom.xml",
                "@@ -5,3 +5,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/dojo/pom.xml b/plugins/dojo/pom.xml",
                "index 230792546..a09ba45ae 100644",
                "--- a/plugins/dojo/pom.xml",
                "+++ b/plugins/dojo/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <groupId>org.apache.struts</groupId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/dwr/pom.xml b/plugins/dwr/pom.xml",
                "index 1042fbbd1..ffd441101 100644",
                "--- a/plugins/dwr/pom.xml",
                "+++ b/plugins/dwr/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/embeddedjsp/pom.xml b/plugins/embeddedjsp/pom.xml",
                "index fbb5fd006..80eb23e3a 100644",
                "--- a/plugins/embeddedjsp/pom.xml",
                "+++ b/plugins/embeddedjsp/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/gxp/pom.xml b/plugins/gxp/pom.xml",
                "index 16139f7a1..b779624dc 100644",
                "--- a/plugins/gxp/pom.xml",
                "+++ b/plugins/gxp/pom.xml",
                "@@ -5,3 +5,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/jasperreports/pom.xml b/plugins/jasperreports/pom.xml",
                "index 69dc52d03..a5dd2d000 100644",
                "--- a/plugins/jasperreports/pom.xml",
                "+++ b/plugins/jasperreports/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/java8-support/pom.xml b/plugins/java8-support/pom.xml",
                "index 00a9c98af..b0d2e3df0 100644",
                "--- a/plugins/java8-support/pom.xml",
                "+++ b/plugins/java8-support/pom.xml",
                "@@ -7,3 +7,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/javatemplates/pom.xml b/plugins/javatemplates/pom.xml",
                "index 497a2c02f..d27f26a34 100644",
                "--- a/plugins/javatemplates/pom.xml",
                "+++ b/plugins/javatemplates/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/jfreechart/pom.xml b/plugins/jfreechart/pom.xml",
                "index 8ffcf1267..5f5f759ce 100644",
                "--- a/plugins/jfreechart/pom.xml",
                "+++ b/plugins/jfreechart/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "    </parent>",
                "diff --git a/plugins/jsf/pom.xml b/plugins/jsf/pom.xml",
                "index 5a6753689..06ae551ff 100644",
                "--- a/plugins/jsf/pom.xml",
                "+++ b/plugins/jsf/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/json/pom.xml b/plugins/json/pom.xml",
                "index f8686f638..8e34db88a 100644",
                "--- a/plugins/json/pom.xml",
                "+++ b/plugins/json/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/junit/pom.xml b/plugins/junit/pom.xml",
                "index 655a606fa..c65e7087f 100644",
                "--- a/plugins/junit/pom.xml",
                "+++ b/plugins/junit/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/osgi/pom.xml b/plugins/osgi/pom.xml",
                "index 15b52005b..103b40765 100644",
                "--- a/plugins/osgi/pom.xml",
                "+++ b/plugins/osgi/pom.xml",
                "@@ -6,3 +6,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/oval/pom.xml b/plugins/oval/pom.xml",
                "index 8a6ad0662..370cb068a 100644",
                "--- a/plugins/oval/pom.xml",
                "+++ b/plugins/oval/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/pell-multipart/pom.xml b/plugins/pell-multipart/pom.xml",
                "index 7dd0663ca..3c95276b6 100644",
                "--- a/plugins/pell-multipart/pom.xml",
                "+++ b/plugins/pell-multipart/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/plexus/pom.xml b/plugins/plexus/pom.xml",
                "index 0d33b5a03..3831d3284 100644",
                "--- a/plugins/plexus/pom.xml",
                "+++ b/plugins/plexus/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/pom.xml b/plugins/pom.xml",
                "index 3e4d640ea..46c4b97ce 100644",
                "--- a/plugins/pom.xml",
                "+++ b/plugins/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/portlet-tiles/pom.xml b/plugins/portlet-tiles/pom.xml",
                "index 2962068bf..b59b3e13c 100644",
                "--- a/plugins/portlet-tiles/pom.xml",
                "+++ b/plugins/portlet-tiles/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/portlet/pom.xml b/plugins/portlet/pom.xml",
                "index ce1eb54d0..cd32f0e1f 100644",
                "--- a/plugins/portlet/pom.xml",
                "+++ b/plugins/portlet/pom.xml",
                "@@ -5,3 +5,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/rest/pom.xml b/plugins/rest/pom.xml",
                "index 69c929f7f..117b9e688 100644",
                "--- a/plugins/rest/pom.xml",
                "+++ b/plugins/rest/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/sitegraph/pom.xml b/plugins/sitegraph/pom.xml",
                "index a65c5cdfe..ceb23bf9f 100644",
                "--- a/plugins/sitegraph/pom.xml",
                "+++ b/plugins/sitegraph/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/sitemesh/pom.xml b/plugins/sitemesh/pom.xml",
                "index cb0b13733..605bc35bf 100644",
                "--- a/plugins/sitemesh/pom.xml",
                "+++ b/plugins/sitemesh/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/spring/pom.xml b/plugins/spring/pom.xml",
                "index 8087eaaa8..6ef60cb02 100644",
                "--- a/plugins/spring/pom.xml",
                "+++ b/plugins/spring/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/struts1/pom.xml b/plugins/struts1/pom.xml",
                "index a88c21018..e2ebbf42e 100644",
                "--- a/plugins/struts1/pom.xml",
                "+++ b/plugins/struts1/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/testng/pom.xml b/plugins/testng/pom.xml",
                "index ff3fb04e2..884ac6583 100644",
                "--- a/plugins/testng/pom.xml",
                "+++ b/plugins/testng/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/tiles/pom.xml b/plugins/tiles/pom.xml",
                "index 60f92d7a0..d3d5327a6 100644",
                "--- a/plugins/tiles/pom.xml",
                "+++ b/plugins/tiles/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/plugins/tiles3/pom.xml b/plugins/tiles3/pom.xml",
                "index c626f4778..ebf8a2657 100644",
                "--- a/plugins/tiles3/pom.xml",
                "+++ b/plugins/tiles3/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>",
                "diff --git a/pom.xml b/pom.xml",
                "index 3880f8c6d..afe34bacb 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -11,3 +11,3 @@",
                "     <artifactId>struts2-parent</artifactId>",
                "-    <version>2.3.35-SNAPSHOT</version>",
                "+    <version>2.3.35</version>",
                "     <packaging>pom</packaging>",
                "@@ -33,3 +33,3 @@",
                "         <url>http://git.apache.org/struts.git</url>",
                "-        <tag>STRUTS_2_3_24_1</tag>",
                "+        <tag>STRUTS_2_3_35</tag>",
                "     </scm>",
                "diff --git a/xwork-core/pom.xml b/xwork-core/pom.xml",
                "index 852525ae5..f033c0090 100644",
                "--- a/xwork-core/pom.xml",
                "+++ b/xwork-core/pom.xml",
                "@@ -7,3 +7,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35-SNAPSHOT</version>",
                "+        <version>2.3.35</version>",
                "     </parent>"
            ],
            "changed_files": [
                "apps/blank/pom.xml",
                "apps/jboss-blank/pom.xml",
                "apps/mailreader/pom.xml",
                "apps/pom.xml",
                "apps/portlet/pom.xml",
                "apps/rest-showcase/pom.xml",
                "apps/showcase/pom.xml",
                "archetypes/pom.xml",
                "archetypes/struts2-archetype-angularjs/pom.xml",
                "archetypes/struts2-archetype-blank/pom.xml",
                "archetypes/struts2-archetype-convention/pom.xml",
                "archetypes/struts2-archetype-dbportlet/pom.xml",
                "archetypes/struts2-archetype-plugin/pom.xml",
                "archetypes/struts2-archetype-portlet/pom.xml",
                "archetypes/struts2-archetype-starter/pom.xml",
                "assembly/pom.xml",
                "bom/pom.xml",
                "bundles/admin/pom.xml",
                "bundles/demo/pom.xml",
                "bundles/pom.xml",
                "core/pom.xml",
                "plugins/cdi/pom.xml",
                "plugins/codebehind/pom.xml",
                "plugins/config-browser/pom.xml",
                "plugins/convention/pom.xml",
                "plugins/dojo/pom.xml",
                "plugins/dwr/pom.xml",
                "plugins/embeddedjsp/pom.xml",
                "plugins/gxp/pom.xml",
                "plugins/jasperreports/pom.xml",
                "plugins/java8-support/pom.xml",
                "plugins/javatemplates/pom.xml",
                "plugins/jfreechart/pom.xml",
                "plugins/jsf/pom.xml",
                "plugins/json/pom.xml",
                "plugins/junit/pom.xml",
                "plugins/osgi/pom.xml",
                "plugins/oval/pom.xml",
                "plugins/pell-multipart/pom.xml",
                "plugins/plexus/pom.xml",
                "plugins/pom.xml",
                "plugins/portlet-tiles/pom.xml",
                "plugins/portlet/pom.xml",
                "plugins/rest/pom.xml",
                "plugins/sitegraph/pom.xml",
                "plugins/sitemesh/pom.xml",
                "plugins/spring/pom.xml",
                "plugins/struts1/pom.xml",
                "plugins/testng/pom.xml",
                "plugins/tiles/pom.xml",
                "plugins/tiles3/pom.xml",
                "pom.xml",
                "xwork-core/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "dbcca3512ee1a971cc0b44beac8f6b219a1bb153"
                ]
            ],
            "tags": [
                "STRUTS_2_3_35",
                "STRUTS_2_3_36",
                "STRUTS_2_3_37"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin, convention, code",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "14c0f47d840a049e88e9774156df687635b18aee",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526931056,
            "hunks": 30,
            "message": "remove UtilTimerStack Part of removing the profiling layer Issue: * WW-4779",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java b/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "index 77acc3cdd..1c40be511 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "@@ -32,3 +32,2 @@ import com.opensymphony.xwork2.util.ValueStack;",
                " import com.opensymphony.xwork2.util.ValueStackFactory;",
                "-import com.opensymphony.xwork2.util.profiling.UtilTimerStack;",
                " import ognl.MethodFailedException;",
                "@@ -241,4 +240,2 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "         try {",
                "-            UtilTimerStack.push(profileKey);",
                "-",
                "             if (executed) {",
                "@@ -251,3 +248,2 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "                     String interceptorMsg = \"interceptorMapping: \" + interceptorMapping.getName();",
                "-                    UtilTimerStack.push(interceptorMsg);",
                "                     try {",
                "@@ -258,5 +254,3 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "                         resultCode = interceptor.intercept(DefaultActionInvocation.this);",
                "-                    } finally {",
                "-                        UtilTimerStack.pop(interceptorMsg);",
                "-                    }",
                "+                    } finally {}",
                "                 } else {",
                "@@ -285,7 +279,4 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "                             try {",
                "-                                UtilTimerStack.push(_profileKey);",
                "                                 listener.beforeResult(this, resultCode);",
                "-                            } finally {",
                "-                                UtilTimerStack.pop(_profileKey);",
                "-                            }",
                "+                            } finally {}",
                "                         }",
                "@@ -305,6 +296,3 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "             return resultCode;",
                "-        }",
                "-        finally {",
                "-            UtilTimerStack.pop(profileKey);",
                "-        }",
                "+        } finally {}",
                "     }",
                "@@ -319,3 +307,2 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "         try {",
                "-            UtilTimerStack.push(timerKey);",
                "             action = objectFactory.buildAction(proxy.getActionName(), proxy.getNamespace(), proxy.getConfig(), contextMap);",
                "@@ -340,5 +327,3 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "             throw new XWorkException(gripe, e, proxy.getConfig());",
                "-        } finally {",
                "-            UtilTimerStack.pop(timerKey);",
                "-        }",
                "+        } finally {}",
                "@@ -392,3 +377,2 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "         try {",
                "-            UtilTimerStack.push(timerKey);",
                "             if (result != null) {",
                "@@ -403,5 +387,3 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "             }",
                "-        } finally {",
                "-            UtilTimerStack.pop(timerKey);",
                "-        }",
                "+        } finally {}",
                "     }",
                "@@ -453,4 +435,2 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "         try {",
                "-            UtilTimerStack.push(timerKey);",
                "-",
                "             Object methodResult;",
                "@@ -499,5 +479,3 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "             }",
                "-        } finally {",
                "-            UtilTimerStack.pop(timerKey);",
                "-        }",
                "+        } finally {}",
                "     }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java b/core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java",
                "index 87b9b7f90..d1bfe320c 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java",
                "@@ -24,3 +24,2 @@ import com.opensymphony.xwork2.config.entities.ActionConfig;",
                " import com.opensymphony.xwork2.inject.Inject;",
                "-import com.opensymphony.xwork2.util.profiling.UtilTimerStack;",
                " import org.apache.commons.text.StringEscapeUtils;",
                "@@ -154,4 +153,2 @@ public class DefaultActionProxy implements ActionProxy, Serializable {",
                "         try {",
                "-            UtilTimerStack.push(profileKey);",
                "-",
                "             retCode = invocation.invoke();",
                "@@ -161,3 +158,2 @@ public class DefaultActionProxy implements ActionProxy, Serializable {",
                "             }",
                "-            UtilTimerStack.pop(profileKey);",
                "         }",
                "@@ -187,3 +183,2 @@ public class DefaultActionProxy implements ActionProxy, Serializable {",
                "         try {",
                "-            UtilTimerStack.push(profileKey);",
                "             config = configuration.getRuntimeConfiguration().getActionConfig(namespace, actionName);",
                "@@ -204,5 +199,3 @@ public class DefaultActionProxy implements ActionProxy, Serializable {",
                "             }",
                "-        } finally {",
                "-            UtilTimerStack.pop(profileKey);",
                "-        }",
                "+        } finally {}",
                "     }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/profiling/UtilTimerStack.java b/core/src/main/java/com/opensymphony/xwork2/util/profiling/UtilTimerStack.java",
                "deleted file mode 100644",
                "index 87b577748..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/profiling/UtilTimerStack.java",
                "+++ /dev/null",
                "@@ -1,492 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-/*",
                "- * Copyright (c) 2002-2003, Atlassian Software Systems Pty Ltd All rights reserved.",
                "- *",
                "- * Redistribution and use in source and binary forms, with or without modification,",
                "- * are permitted provided that the following conditions are met:",
                "- * ",
                "- *     * Redistributions of source code must retain the above copyright notice,",
                "- * this list of conditions and the following disclaimer.",
                "- *     * Redistributions in binary form must reproduce the above copyright notice,",
                "- * this list of conditions and the following disclaimer in the documentation and/or",
                "- * other materials provided with the distribution.",
                "- *     * Neither the name of Atlassian Software Systems Pty Ltd nor the names of",
                "- * its contributors may be used to endorse or promote products derived from this",
                "- * software without specific prior written permission.",
                "- * ",
                "- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND",
                "- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED",
                "- * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE",
                "- * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR",
                "- * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES",
                "- * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;",
                "- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON",
                "- * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT",
                "- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS",
                "- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
                "- */",
                "-package com.opensymphony.xwork2.util.profiling;",
                "-",
                "-import org.apache.logging.log4j.LogManager;",
                "-import org.apache.logging.log4j.Logger;",
                "-",
                "-",
                "-/**",
                "- * <p>A timer stack.</p>",
                "- * <!-- START SNIPPET: profilingAspect_struts2 -->",
                "- * <p>",
                "- * Struts2 profiling aspects involves the following:",
                "- * </p>",
                "- *",
                "- * <ul>",
                "- *  <li>ActionContextCleanUp</li>",
                "- *  <li>FreemarkerPageFilter</li>",
                "- *  <li>DispatcherFilter",
                "- *      <ul>",
                "- *          <li>Dispatcher",
                "- *              <ul>",
                "- *                  <li>creation of DefaultActionProxy",
                "- *                      <ul>",
                "- *                          <li>creation of DefaultActionInvocation",
                "- *                              <ul>",
                "- *                                  <li>creation of Action</li>",
                "- *                              </ul>",
                "- *                          </li>",
                "- *                      </ul>",
                "- *                  </li>",
                "- *                  <li>execution of DefaultActionProxy",
                "- *                      <ul>",
                "- *                          <li>invocation of DefaultActionInvocation",
                "- *                              <ul>",
                "- *                                  <li>invocation of Interceptors</li>",
                "- *                                  <li>invocation of Action</li>",
                "- *                                  <li>invocation of PreResultListener</li>",
                "- *                                  <li>invocation of Result</li>",
                "- *                              </ul>",
                "- *                          </li>",
                "- *                      </ul>",
                "- *                  </li>",
                "- *              </ul>",
                "- *          </li>",
                "- *      </ul>",
                "- *  </li>",
                "- * </ul>",
                "- *",
                "- * <!-- END SNIPPET: profilingAspect_struts2 -->",
                "- *",
                "- *",
                "- * <!-- START SNIPPET: profilingAspect_xwork -->",
                "- * <p>",
                "- * XWork2 profiling aspects involves the following:",
                "- * </p>",
                "- *",
                "- * <ul>",
                "- *  <li>creation of DefaultActionProxy",
                "- *      <ul>",
                "- *          <li>creation of DefaultActionInvocation</li>",
                "- *      </ul>",
                "- *  </li>",
                "- *  <li>creation of Action</li>",
                "- *  <li>execution of DefaultActionProxy",
                "- *      <ul>",
                "- *          <li>invocation of DefaultActionInvocation",
                "- *              <ul>",
                "- *                  <li>invocation of Interceptors</li>",
                "- *                  <li>invocation of Action</li>",
                "- *                  <li>invocation of PreResultListener</li>",
                "- *                  <li>invocation of Result</li>",
                "- *              </ul>",
                "- *          </li>",
                "- *      </ul>",
                "- *  </li>",
                "- * </ul>",
                "- *",
                "- * <!-- END SNIPPET: profilingAspect_xwork -->",
                "- *",
                "- *",
                "- * <!-- START SNIPPET: activationDescription -->",
                "- * <p>",
                "- * Activating / Deactivating of the profiling feature could be done through:",
                "- * </p>",
                "- * <!-- END SNIPPET: activationDescription -->",
                "- *",
                "- *",
                "- *",
                "- * <p>System properties:</p>",
                "- * <pre>",
                "- * <!-- START SNIPPET: activationThroughSystemProperty -->",
                "- *",
                "- *  -Dxwork.profile.activate=true",
                "- *",
                "- * <!-- END SNIPPET: activationThroughSystemProperty -->",
                "- * </pre>",
                "- *",
                "- * <!-- START SNIPPET: activationThroughSystemPropertyDescription -->",
                "- * <p>",
                "- * This could be done in the container startup script eg. CATALINA_OPTS in catalina.sh",
                "- * (tomcat) or using 'java -Dxwork.profile.activate=true -jar start.jar' (jetty)",
                "- * </p>",
                "- * <!-- END SNIPPET: activationThroughSystemPropertyDescription -->",
                "- *",
                "- *",
                "- * <p>Code :</p>",
                "- * <pre>",
                "- * <!-- START SNIPPET: activationThroughCode -->",
                "- *",
                "- *  UtilTimerStack.setActivate(true);",
                "- *",
                "- * <!-- END SNIPPET: activationThroughCode -->",
                "- * </pre>",
                "- * <!-- START SNIPPET: activationThroughCodeDescription -->",
                "- * <p>",
                "- * This could be done in a static block, in a Spring bean with lazy-init='false',",
                "- * in a Servlet with init-on-startup as some numeric value, in a Filter or",
                "- * Listener's init method etc.",
                "- * </p>",
                "- * <!-- END SNIPPET: activationThroughCodeDescription -->",
                "- *",
                "- * <p>",
                "- * Parameter:",
                "- * </p>",
                "- *",
                "- * <pre>",
                "- * <!-- START SNIPPET: activationThroughParameter -->",
                "- *",
                "- * &lt;action ... &gt;",
                "- *  ...",
                "- *  &lt;interceptor-ref name=&quot;profiling&quot;&gt;",
                "- *      &lt;param name=&quot;profilingKey&quot;&gt;profiling&lt;/param&gt;",
                "- *  &lt;/interceptor-ref&gt;",
                "- *  ...",
                "- * &lt;/action&gt;",
                "- *",
                "- * or",
                "- *",
                "- * &lt;action .... &gt;",
                "- * ...",
                "- *  &lt;interceptor-ref name=&quot;profiling&quot; /&gt;",
                "- * ...",
                "- * &lt;/action&gt;",
                "- *",
                "- * through url",
                "- *",
                "- * http://host:port/context/namespace/someAction.action?profiling=true",
                "- *",
                "- * through code",
                "- *",
                "- * ActionContext.getContext().getParameters().put(&quot;profiling&quot;, &quot;true);",
                "- *",
                "- * <!-- END SNIPPET: activationThroughParameter -->",
                "- * </pre>",
                "- *",
                "- *",
                "- * <!-- START SNIPPET: activationThroughParameterDescription -->",
                "- * <p>",
                "- * To use profiling activation through parameter, one will need to pass in through",
                "- * the 'profiling' parameter (which is the default) and could be changed through",
                "- * the param tag in the interceptor-ref.",
                "- * </p>",
                "- * <!-- END SNIPPET: activationThroughParameterDescription -->",
                "- *",
                "- * <p>Warning:</p>",
                "- *",
                "- * <!-- START SNIPPET: activationThroughParameterWarning -->",
                "- * <p>",
                "- * Profiling activation through a parameter requires the following:",
                "- * </p>",
                "- *",
                "- * <ul>",
                "- * <li>Profiling interceptor in interceptor stack</li>",
                "- * <li>dev mode on (struts.devMode=true in struts.properties)",
                "- * </ul>",
                "- *",
                "- * <!-- END SNIPPET: activationThroughParameterWarning -->",
                "- *",
                "- * <!-- START SNIPPET: filteringDescription -->",
                "- * <p>",
                "- * One could filter out the profile logging by having a System property as follows. With this",
                "- * 'xwork.profile.mintime' property, one could only log profile information when its execution time",
                "- * exceed those specified in 'xwork.profile.mintime' system property. If no such property is specified,",
                "- * it will be assumed to be 0, hence all profile information will be logged.",
                "- * </p>",
                "- *",
                "- * <!-- END SNIPPET: filteringDescription -->",
                "- *",
                "- * <pre>",
                "- * <!-- START SNIPPET: filteringCode -->",
                "- *",
                "- *  -Dxwork.profile.mintime=10000",
                "- *",
                "- * <!-- END SNIPPET: filteringCode -->",
                "- * </pre>",
                "- *",
                "- * <!-- START SNIPPET: methodDescription -->",
                "- * <p>",
                "- * One could extend the profiling feature provided by Struts2 in their web application as well.",
                "- * </p>",
                "- * <!-- END SNIPPET: methodDescription -->",
                "- *",
                "- * <pre>",
                "- * <!-- START SNIPPET: method1 -->",
                "- *",
                "- *    String logMessage = &quot;Log message&quot;;",
                "- *    UtilTimerStack.push(logMessage);",
                "- *    try {",
                "- *        // do some code",
                "- *    }",
                "- *    finally {",
                "- *        UtilTimerStack.pop(logMessage); // this needs to be the same text as above",
                "- *    }",
                "- *",
                "- * <!-- END SNIPPET: method1 -->",
                "- * </pre>",
                "- * <p>",
                "- * or",
                "- * </p>",
                "- * <pre>",
                "- * <!-- START SNIPPET: method2 -->",
                "- *",
                "- *   String result = UtilTimerStack.profile(&quot;purchaseItem: &quot;,",
                "- *       new UtilTimerStack.ProfilingBlock&lt;String&gt;() {",
                "- *            public String doProfiling() {",
                "- *               // do some code",
                "- *               return &quot;Ok&quot;;",
                "- *            }",
                "- *       });",
                "- *",
                "- * <!-- END SNIPPET: method2 -->",
                "- * </pre>",
                "- *",
                "- *",
                "- * <!-- START SNIPPET: profileLogFile -->",
                "- * <p>",
                "- * Profiled result is logged using commons-logging under the logger named",
                "- * 'com.opensymphony.xwork2.util.profiling.UtilTimerStack'. Depending on the underlying logging implementation",
                "- * say if it is Log4j, one could direct the log to appear in a different file, being emailed to someone or have",
                "- * it stored in the db.",
                "- * </p>",
                "- *",
                "- * <!-- END SNIPPET: profileLogFile -->",
                "- *",
                "- * @deprecated will be dropped with next major release (2.6)",
                "- */",
                "-@Deprecated",
                "-public class UtilTimerStack {",
                "-",
                "-    // A reference to the current ProfilingTimerBean",
                "-    protected static ThreadLocal<ProfilingTimerBean> current = new ThreadLocal<>();",
                "-",
                "-    /**",
                "-     * System property that controls whether this timer should be used or not.  Set to &quot;true&quot; activates",
                "-     * the timer.  Set to &quot;false&quot; to deactivate.",
                "-     */",
                "-    public static final String ACTIVATE_PROPERTY = \"xwork.profile.activate\";",
                "-",
                "-    /**",
                "-     * System property that controls the min time, that if exceeded will cause a log (at INFO level) to be",
                "-     * created.",
                "-     */",
                "-    public static final String MIN_TIME = \"xwork.profile.mintime\";",
                "-",
                "-    private static final Logger LOG = LogManager.getLogger(UtilTimerStack.class);",
                "-",
                "-    /**",
                "-     * Initialized in a static block, it can be changed at runtime by calling setActive(...)",
                "-     */",
                "-    private static boolean active;",
                "-",
                "-    static {",
                "-        active = \"true\".equalsIgnoreCase(System.getProperty(ACTIVATE_PROPERTY));",
                "-    }",
                "-",
                "-    /**",
                "-     * Create and start a performance profiling with the <code>name</code> given. Deal with",
                "-     * profile hierarchy automatically, so caller don't have to be concern about it.",
                "-     *",
                "-     * @param name profile name",
                "-     */",
                "-    public static void push(String name) {",
                "-        if (!isActive()) {",
                "-            return;",
                "-        }",
                "-",
                "-        //create a new timer and start it",
                "-        ProfilingTimerBean newTimer = new ProfilingTimerBean(name);",
                "-        newTimer.setStartTime();",
                "-",
                "-        //if there is a current timer - add the new timer as a child of it",
                "-        ProfilingTimerBean currentTimer = (ProfilingTimerBean) current.get();",
                "-        if (currentTimer != null) {",
                "-            currentTimer.addChild(newTimer);",
                "-        }",
                "-",
                "-        //set the new timer to be the current timer",
                "-        current.set(newTimer);",
                "-    }",
                "-",
                "-    /**",
                "-     * End a performance profiling with the <code>name</code> given. Deal with",
                "-     * profile hierarchy automatically, so caller don't have to be concern about it.",
                "-     *",
                "-     * @param name profile name",
                "-     */",
                "-    public static void pop(String name) {",
                "-        if (!isActive()) {",
                "-            return;",
                "-        }",
                "-",
                "-        ProfilingTimerBean currentTimer = current.get();",
                "-",
                "-        //if the timers are matched up with each other (ie push(\"a\"); pop(\"a\"));",
                "-        if (currentTimer != null && name != null && name.equals(currentTimer.getResource())) {",
                "-            currentTimer.setEndTime();",
                "-            ProfilingTimerBean parent = currentTimer.getParent();",
                "-            //if we are the root timer, then print out the times",
                "-            if (parent == null) {",
                "-                printTimes(currentTimer);",
                "-                current.set(null); //for those servers that use thread pooling",
                "-            } else {",
                "-                current.set(parent);",
                "-            }",
                "-        } else {",
                "-            //if timers are not matched up, then print what we have, and then print warning.",
                "-            if (currentTimer != null) {",
                "-                printTimes(currentTimer);",
                "-                current.set(null); //prevent printing multiple times",
                "-                LOG.warn(\"Unmatched Timer. Was expecting {}, instead got {}\", currentTimer.getResource(), name);",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    /**",
                "-     * Do a log (at INFO level) of the time taken for this particular profiling.",
                "-     *",
                "-     * @param currentTimer profiling timer bean",
                "-     */",
                "-    private static void printTimes(ProfilingTimerBean currentTimer) {",
                "-        LOG.info(currentTimer.getPrintable(getMinTime()));",
                "-    }",
                "-",
                "-    /**",
                "-     * Get the min time for this profiling, it searches for a System property",
                "-     * 'xwork.profile.mintime' and default to 0.",
                "-     *",
                "-     * @return min time for this profiling",
                "-     */",
                "-    private static long getMinTime() {",
                "-        try {",
                "-            return Long.parseLong(System.getProperty(MIN_TIME, \"0\"));",
                "-        } catch (NumberFormatException e) {",
                "-            return -1;",
                "-        }",
                "-    }",
                "-",
                "-    /**",
                "-     * Determine if profiling is being activated, by searching for a system property",
                "-     * 'xwork.profile.activate', default to false (profiling is off).",
                "-     *",
                "-     * @return <tt>true</tt>, if active, <tt>false</tt> otherwise.",
                "-     */",
                "-    public static boolean isActive() {",
                "-        return active;",
                "-    }",
                "-",
                "-    /**",
                "-     * @param active Turn profiling on or off.",
                "-     */",
                "-    public static void setActive(boolean active) {",
                "-        if (active) {",
                "-            System.setProperty(ACTIVATE_PROPERTY, \"true\");",
                "-        } else {",
                "-            System.clearProperty(ACTIVATE_PROPERTY);",
                "-        }",
                "-        UtilTimerStack.active = active;",
                "-    }",
                "-",
                "-",
                "-    /**",
                "-     * <p>",
                "-     * A convenience method that allows <code>block</code> of code subjected to profiling to be executed",
                "-     * and avoid the need of coding boiler code that does pushing (UtilTimeBean.push(...)) and",
                "-     * poping (UtilTimerBean.pop(...)) in a try ... finally ... block.",
                "-     * </p>",
                "-     *",
                "-     * <p>",
                "-     * Example of usage:",
                "-     * </p>",
                "-     *",
                "-     * <pre>",
                "-     * \t // we need a returning result",
                "-     *   String result = UtilTimerStack.profile(\"purchaseItem: \",",
                "-     *       new UtilTimerStack.ProfilingBlock&lt;String&gt;() {",
                "-     *            public String doProfiling() {",
                "-     *               getMyService().purchaseItem(....)",
                "-     *               return \"Ok\";",
                "-     *            }",
                "-     *       });",
                "-     * </pre>",
                "-     *",
                "-     * or",
                "-     *",
                "-     * <pre>",
                "-     *   // we don't need a returning result",
                "-     *   UtilTimerStack.profile(\"purchaseItem: \",",
                "-     *       new UtilTimerStack.ProfilingBlock&lt;String&gt;() {",
                "-     *            public String doProfiling() {",
                "-     *               getMyService().purchaseItem(....)",
                "-     *               return null;",
                "-     *            }",
                "-     *       });",
                "-     * </pre>",
                "-     *",
                "-     * @param <T>   any return value if there's one.",
                "-     * @param name  profile name",
                "-     * @param block code block subjected to profiling",
                "-     * @return T",
                "-     * @throws Exception in case of any errors",
                "-     */",
                "-    public static <T> T profile(String name, ProfilingBlock<T> block) throws Exception {",
                "-        UtilTimerStack.push(name);",
                "-        try {",
                "-            return block.doProfiling();",
                "-        } finally {",
                "-            UtilTimerStack.pop(name);",
                "-        }",
                "-    }",
                "-",
                "-    /**",
                "-     * A callback interface where code subjected to profile is to be executed. This eliminates the need",
                "-     * of coding boiler code that does pushing (UtilTimerBean.push(...)) and poping (UtilTimerBean.pop(...))",
                "-     * in a try ... finally ... block.",
                "-     *",
                "-     * @param <T> type",
                "-     */",
                "-    public static interface ProfilingBlock<T> {",
                "-",
                "-        /**",
                "-         * Method that execute the code subjected to profiling.",
                "-         *",
                "-         * @return profiles Type",
                "-         * @throws Exception in case of any errors",
                "-         */",
                "-        T doProfiling() throws Exception;",
                "-    }",
                "-}",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java b/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "index 1281533c9..c372410de 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "@@ -36,3 +36,2 @@ import com.opensymphony.xwork2.util.location.Location;",
                " import com.opensymphony.xwork2.util.location.LocationUtils;",
                "-import com.opensymphony.xwork2.util.profiling.UtilTimerStack;",
                " import org.apache.commons.lang3.LocaleUtils;",
                "@@ -585,3 +584,2 @@ public class Dispatcher {",
                "         try {",
                "-            UtilTimerStack.push(timerKey);",
                "             String namespace = mapping.getNamespace();",
                "@@ -625,4 +623,2 @@ public class Dispatcher {",
                "             }",
                "-        } finally {",
                "-            UtilTimerStack.pop(timerKey);",
                "         }",
                "diff --git a/core/src/main/java/org/apache/struts2/interceptor/ProfilingActivationInterceptor.java b/core/src/main/java/org/apache/struts2/interceptor/ProfilingActivationInterceptor.java",
                "deleted file mode 100644",
                "index d1a21964b..000000000",
                "--- a/core/src/main/java/org/apache/struts2/interceptor/ProfilingActivationInterceptor.java",
                "+++ /dev/null",
                "@@ -1,104 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package org.apache.struts2.interceptor;",
                "-",
                "-import com.opensymphony.xwork2.ActionInvocation;",
                "-import com.opensymphony.xwork2.inject.Inject;",
                "-import com.opensymphony.xwork2.interceptor.AbstractInterceptor;",
                "-import com.opensymphony.xwork2.util.profiling.UtilTimerStack;",
                "-import org.apache.commons.lang3.BooleanUtils;",
                "-import org.apache.struts2.StrutsConstants;",
                "-import org.apache.struts2.dispatcher.Parameter;",
                "-",
                "-/**",
                "- * <!-- START SNIPPET: description -->",
                "- *",
                "- * Allows profiling to be enabled or disabled via request parameters, when",
                "- * devMode is enabled.",
                "- *",
                "- * <!-- END SNIPPET: description -->",
                "- *",
                "- *",
                "- * <!-- START SNIPPET: parameters -->",
                "- *",
                "- * <ul>",
                "- *  <li>profilingKey</li>",
                "- * </ul>",
                "- *",
                "- * <!-- END SNIPPET: parameters -->",
                "- *",
                "- * <!-- START SNIPPET: extending -->",
                "- *",
                "- * none",
                "- *",
                "- * <!-- END SNIPPET: extending -->",
                "- *",
                "- * <pre>",
                "- * <!-- START SNIPPET: example -->",
                "- * // to change the profiling key",
                "- * &lt;action ...&gt;",
                "- *   ...",
                "- *   &lt;interceptor-ref name=\"profiling\"&gt;",
                "- *      &lt;param name=\"profilingKey\"&gt;profilingKey&lt;/param&gt;",
                "- *   &lt;/interceptor-ref&gt;",
                "- *   ...",
                "- * &lt;/action&gt;",
                "- * <!-- END SNIPPET: example -->",
                "- * </pre>",
                "- *",
                "- * @version $Date$ $Id$",
                "- */",
                "-public class ProfilingActivationInterceptor extends AbstractInterceptor {",
                "-",
                "-    private String profilingKey = \"profiling\";",
                "-    private boolean devMode;",
                "-",
                "-    /**",
                "-     * @return the profilingKey",
                "-     */",
                "-    public String getProfilingKey() {",
                "-        return profilingKey;",
                "-    }",
                "-",
                "-    /**",
                "-     * @param profilingKey the profilingKey to set",
                "-     */",
                "-    public void setProfilingKey(String profilingKey) {",
                "-        this.profilingKey = profilingKey;",
                "-    }",
                "-    ",
                "-    @Inject(StrutsConstants.STRUTS_DEVMODE)",
                "-    public void setDevMode(String mode) {",
                "-        this.devMode = BooleanUtils.toBoolean(mode);",
                "-    }",
                "-",
                "-    @Override",
                "-    public String intercept(ActionInvocation invocation) throws Exception {",
                "-        if (devMode) {",
                "-            Parameter val = invocation.getInvocationContext().getParameters().get(profilingKey);",
                "-            if (val.isDefined()) {",
                "-                String sval = val.getValue();",
                "-                boolean enable = BooleanUtils.toBoolean(sval);",
                "-                UtilTimerStack.setActive(enable);",
                "-                invocation.getInvocationContext().getParameters().remove(profilingKey);",
                "-            }",
                "-        }",
                "-        return invocation.invoke();",
                "-    }",
                "-}",
                "diff --git a/core/src/main/resources/struts-default.xml b/core/src/main/resources/struts-default.xml",
                "index 85f67bc9b..e3d3b072f 100644",
                "--- a/core/src/main/resources/struts-default.xml",
                "+++ b/core/src/main/resources/struts-default.xml",
                "@@ -235,3 +235,2 @@",
                "             <interceptor name=\"datetime\" class=\"org.apache.struts2.interceptor.DateTextFieldInterceptor\" />",
                "-            <interceptor name=\"profiling\" class=\"org.apache.struts2.interceptor.ProfilingActivationInterceptor\" />",
                "             <interceptor name=\"roles\" class=\"org.apache.struts2.interceptor.RolesInterceptor\" />",
                "diff --git a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "index 6fbfa4aae..a6ad038a4 100644",
                "--- a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "+++ b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "@@ -26,3 +26,2 @@ import com.opensymphony.xwork2.inject.Inject;",
                " import com.opensymphony.xwork2.interceptor.ValidationAware;",
                "-import com.opensymphony.xwork2.util.profiling.UtilTimerStack;",
                " import org.apache.commons.lang3.BooleanUtils;",
                "@@ -166,4 +165,2 @@ public class RestActionInvocation extends DefaultActionInvocation {",
                "         try {",
                "-            UtilTimerStack.push(timerKey);",
                "-",
                "             HttpServletRequest request = ServletActionContext.getRequest();",
                "@@ -193,4 +190,2 @@ public class RestActionInvocation extends DefaultActionInvocation {",
                "-        } finally {",
                "-            UtilTimerStack.pop(timerKey);",
                "         }",
                "diff --git a/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsFreemarkerDecorator.java b/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsFreemarkerDecorator.java",
                "index 174ae2a81..50970f913 100644",
                "--- a/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsFreemarkerDecorator.java",
                "+++ b/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsFreemarkerDecorator.java",
                "@@ -26,3 +26,2 @@ import org.apache.logging.log4j.Logger;",
                " import org.apache.logging.log4j.LogManager;",
                "-import com.opensymphony.xwork2.util.profiling.UtilTimerStack;",
                " import freemarker.template.Configuration;",
                "@@ -74,4 +73,2 @@ public class OldDecorator2NewStrutsFreemarkerDecorator extends OldDecorator2NewS",
                "         try {",
                "-            UtilTimerStack.push(timerKey);",
                "-",
                "             // get the configuration and template",
                "@@ -100,4 +97,2 @@ public class OldDecorator2NewStrutsFreemarkerDecorator extends OldDecorator2NewS",
                "             throw new ServletException(msg, e);",
                "-        } finally {",
                "-            UtilTimerStack.pop(timerKey);",
                "         }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java",
                "core/src/main/java/com/opensymphony/xwork2/util/profiling/UtilTimerStack.java",
                "core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "core/src/main/java/org/apache/struts2/interceptor/ProfilingActivationInterceptor.java",
                "core/src/main/resources/struts-default.xml",
                "plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsFreemarkerDecorator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4779": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: time",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin, time, action",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4779",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f85149791d2bff9953e91051b74f8f69ff450fae",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1527506109,
            "hunks": 6,
            "message": "rename springconstants to have a uniform naming pattern Also removed constant from cdi-plugin config, as it is suspected to not be used. issue: - WW-4796",
            "diff": [
                "diff --git a/plugins/cdi/src/main/resources/struts-plugin.xml b/plugins/cdi/src/main/resources/struts-plugin.xml",
                "index bbbd5a9ab..9c79a3326 100644",
                "--- a/plugins/cdi/src/main/resources/struts-plugin.xml",
                "+++ b/plugins/cdi/src/main/resources/struts-plugin.xml",
                "@@ -32,4 +32,2 @@",
                "-    <constant name=\"struts.class.reloading.reloadConfig\" value=\"false\" />",
                "-",
                " </struts>",
                "diff --git a/plugins/spring/src/main/java/org/apache/struts2/spring/ClassReloadingXMLWebApplicationContext.java b/plugins/spring/src/main/java/org/apache/struts2/spring/ClassReloadingXMLWebApplicationContext.java",
                "index 03fe9def3..4235a67d7 100644",
                "--- a/plugins/spring/src/main/java/org/apache/struts2/spring/ClassReloadingXMLWebApplicationContext.java",
                "+++ b/plugins/spring/src/main/java/org/apache/struts2/spring/ClassReloadingXMLWebApplicationContext.java",
                "@@ -54,3 +54,3 @@ import java.util.regex.Pattern;",
                "  * <li>Set \"struts.devMode\" to \"true\" </li>",
                "- * <li>Set \"struts.class.reloading.watchList\" to a comma separated list of directories, or jar files (absolute paths)</li>",
                "+ * <li>Set \"struts.objectFactory.spring.class.reloading.watchList\" to a comma separated list of directories, or jar files (absolute paths)</li>",
                "  * <li>Add this to web.xml:",
                "diff --git a/plugins/spring/src/main/java/org/apache/struts2/spring/SpringConstants.java b/plugins/spring/src/main/java/org/apache/struts2/spring/SpringConstants.java",
                "index f174e2ff6..d57757790 100644",
                "--- a/plugins/spring/src/main/java/org/apache/struts2/spring/SpringConstants.java",
                "+++ b/plugins/spring/src/main/java/org/apache/struts2/spring/SpringConstants.java",
                "@@ -21,5 +21,5 @@ package org.apache.struts2.spring;",
                " public class SpringConstants {",
                "-    public static final String SPRING_CLASS_RELOADING_WATCH_LIST = \"struts.class.reloading.watchList\";",
                "-    public static final String SPRING_CLASS_RELOADING_ACCEPT_CLASSES = \"struts.class.reloading.acceptClasses\";",
                "-    public static final String SPRING_CLASS_RELOADING_RELOAD_CONFIG = \"struts.class.reloading.reloadConfig\";",
                "+    public static final String STRUTS_OBJECTFACTORY_SPRING_CLASS_RELOADING_WATCH_LIST = \"struts.objectFactory.spring.class.reloading.watchList\";",
                "+    public static final String STRUTS_OBJECTFACTORY_SPRING_CLASS_RELOADING_ACCEPT_CLASSES = \"struts.objectFactory.spring.class.reloading.acceptClasses\";",
                "+    public static final String STRUTS_OBJECTFACTORY_SPRING_CLASS_RELOADING_RELOAD_CONFIG = \"struts.objectFactory.spring.class.reloading.reloadConfig\";",
                " }",
                "diff --git a/plugins/spring/src/main/java/org/apache/struts2/spring/StrutsSpringObjectFactory.java b/plugins/spring/src/main/java/org/apache/struts2/spring/StrutsSpringObjectFactory.java",
                "index 157518c27..f11ea6aad 100644",
                "--- a/plugins/spring/src/main/java/org/apache/struts2/spring/StrutsSpringObjectFactory.java",
                "+++ b/plugins/spring/src/main/java/org/apache/struts2/spring/StrutsSpringObjectFactory.java",
                "@@ -96,5 +96,5 @@ public class StrutsSpringObjectFactory extends SpringObjectFactory {",
                "-        String watchList = container.getInstance(String.class, SpringConstants.SPRING_CLASS_RELOADING_WATCH_LIST);",
                "-        String acceptClasses = container.getInstance(String.class, SpringConstants.SPRING_CLASS_RELOADING_ACCEPT_CLASSES);",
                "-        String reloadConfig = container.getInstance(String.class, SpringConstants.SPRING_CLASS_RELOADING_RELOAD_CONFIG);",
                "+        String watchList = container.getInstance(String.class, SpringConstants.STRUTS_OBJECTFACTORY_SPRING_CLASS_RELOADING_WATCH_LIST);",
                "+        String acceptClasses = container.getInstance(String.class, SpringConstants.STRUTS_OBJECTFACTORY_SPRING_CLASS_RELOADING_ACCEPT_CLASSES);",
                "+        String reloadConfig = container.getInstance(String.class, SpringConstants.STRUTS_OBJECTFACTORY_SPRING_CLASS_RELOADING_RELOAD_CONFIG);",
                "diff --git a/plugins/spring/src/main/java/org/apache/struts2/spring/config/entities/SpringConstantConfig.java b/plugins/spring/src/main/java/org/apache/struts2/spring/config/entities/SpringConstantConfig.java",
                "index d948490ba..b9abca16a 100644",
                "--- a/plugins/spring/src/main/java/org/apache/struts2/spring/config/entities/SpringConstantConfig.java",
                "+++ b/plugins/spring/src/main/java/org/apache/struts2/spring/config/entities/SpringConstantConfig.java",
                "@@ -39,5 +39,5 @@ public class SpringConstantConfig extends ConstantConfig {",
                "-        map.put(SpringConstants.SPRING_CLASS_RELOADING_WATCH_LIST, StringUtils.join(classReloadingWatchList, ','));",
                "-        map.put(SpringConstants.SPRING_CLASS_RELOADING_ACCEPT_CLASSES, StringUtils.join(classReloadingAcceptClasses, ','));",
                "-        map.put(SpringConstants.SPRING_CLASS_RELOADING_RELOAD_CONFIG, Objects.toString(classReloadingReloadConfig, null));",
                "+        map.put(SpringConstants.STRUTS_OBJECTFACTORY_SPRING_CLASS_RELOADING_WATCH_LIST, StringUtils.join(classReloadingWatchList, ','));",
                "+        map.put(SpringConstants.STRUTS_OBJECTFACTORY_SPRING_CLASS_RELOADING_ACCEPT_CLASSES, StringUtils.join(classReloadingAcceptClasses, ','));",
                "+        map.put(SpringConstants.STRUTS_OBJECTFACTORY_SPRING_CLASS_RELOADING_RELOAD_CONFIG, Objects.toString(classReloadingReloadConfig, null));",
                "diff --git a/plugins/spring/src/main/resources/struts-plugin.xml b/plugins/spring/src/main/resources/struts-plugin.xml",
                "index 9ded322b5..51fb37c2e 100644",
                "--- a/plugins/spring/src/main/resources/struts-plugin.xml",
                "+++ b/plugins/spring/src/main/resources/struts-plugin.xml",
                "@@ -31,5 +31,5 @@",
                "-    <constant name=\"struts.class.reloading.watchList\" value=\"\" />",
                "-    <constant name=\"struts.class.reloading.acceptClasses\" value=\"\" />",
                "-    <constant name=\"struts.class.reloading.reloadConfig\" value=\"false\" />",
                "+    <constant name=\"struts.objectFactory.spring.class.reloading.watchList\" value=\"\" />",
                "+    <constant name=\"struts.objectFactory.spring.class.reloading.acceptClasses\" value=\"\" />",
                "+    <constant name=\"struts.objectFactory.spring.class.reloading.reloadConfig\" value=\"false\" />"
            ],
            "changed_files": [
                "plugins/cdi/src/main/resources/struts-plugin.xml",
                "plugins/spring/src/main/java/org/apache/struts2/spring/ClassReloadingXMLWebApplicationContext.java",
                "plugins/spring/src/main/java/org/apache/struts2/spring/SpringConstants.java",
                "plugins/spring/src/main/java/org/apache/struts2/spring/StrutsSpringObjectFactory.java",
                "plugins/spring/src/main/java/org/apache/struts2/spring/config/entities/SpringConstantConfig.java",
                "plugins/spring/src/main/resources/struts-plugin.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4796": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: have, plugin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4796",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "36d0e17100d43b966db762d4a514ee19aaa7d79a",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1527485074,
            "hunks": 0,
            "message": "Merge pull request #228 from sdutry/WW-4931 WW-4931 update Apache FreeMarker to version 2.3.28",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4931": ""
            },
            "ghissue_refs": {
                "228": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4931",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 228",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9b9aa100591eb387bbff22ac86da2afe03ecafc1",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1531381058,
            "hunks": 57,
            "message": "[maven-release-plugin] rollback the release of STRUTS_2_3_35",
            "diff": [
                "diff --git a/apps/blank/pom.xml b/apps/blank/pom.xml",
                "index 243ee3394..d85cd6705 100644",
                "--- a/apps/blank/pom.xml",
                "+++ b/apps/blank/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/apps/jboss-blank/pom.xml b/apps/jboss-blank/pom.xml",
                "index 95a9049a5..b42c45762 100644",
                "--- a/apps/jboss-blank/pom.xml",
                "+++ b/apps/jboss-blank/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/apps/mailreader/pom.xml b/apps/mailreader/pom.xml",
                "index 8e3eae46c..2f5f91d81 100644",
                "--- a/apps/mailreader/pom.xml",
                "+++ b/apps/mailreader/pom.xml",
                "@@ -28,3 +28,3 @@",
                "       <artifactId>struts2-apps</artifactId>",
                "-      <version>2.3.35</version>",
                "+      <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/apps/pom.xml b/apps/pom.xml",
                "index 9d6e53bee..3cf6985b2 100644",
                "--- a/apps/pom.xml",
                "+++ b/apps/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/apps/portlet/pom.xml b/apps/portlet/pom.xml",
                "index 164868a22..59efb3b4f 100644",
                "--- a/apps/portlet/pom.xml",
                "+++ b/apps/portlet/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/apps/rest-showcase/pom.xml b/apps/rest-showcase/pom.xml",
                "index 67fcebeaa..0857808de 100644",
                "--- a/apps/rest-showcase/pom.xml",
                "+++ b/apps/rest-showcase/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "@@ -33,3 +33,3 @@",
                "     <packaging>war</packaging>",
                "-    <version>2.3.35</version>",
                "+    <version>2.3.35-SNAPSHOT</version>",
                "     <name>Struts 2 Rest Showcase Webapp</name>",
                "diff --git a/apps/showcase/pom.xml b/apps/showcase/pom.xml",
                "index 77d2edff9..6b7595392 100644",
                "--- a/apps/showcase/pom.xml",
                "+++ b/apps/showcase/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/pom.xml b/archetypes/pom.xml",
                "index 3fa5d9629..4d4f7044d 100644",
                "--- a/archetypes/pom.xml",
                "+++ b/archetypes/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-angularjs/pom.xml b/archetypes/struts2-archetype-angularjs/pom.xml",
                "index 16a77e033..23b9d2a17 100644",
                "--- a/archetypes/struts2-archetype-angularjs/pom.xml",
                "+++ b/archetypes/struts2-archetype-angularjs/pom.xml",
                "@@ -4,3 +4,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-blank/pom.xml b/archetypes/struts2-archetype-blank/pom.xml",
                "index c0aea885a..a5af905b3 100644",
                "--- a/archetypes/struts2-archetype-blank/pom.xml",
                "+++ b/archetypes/struts2-archetype-blank/pom.xml",
                "@@ -5,3 +5,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-convention/pom.xml b/archetypes/struts2-archetype-convention/pom.xml",
                "index 43c9d076c..4abcf7364 100644",
                "--- a/archetypes/struts2-archetype-convention/pom.xml",
                "+++ b/archetypes/struts2-archetype-convention/pom.xml",
                "@@ -4,3 +4,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-dbportlet/pom.xml b/archetypes/struts2-archetype-dbportlet/pom.xml",
                "index a82abb8a4..dc337e874 100644",
                "--- a/archetypes/struts2-archetype-dbportlet/pom.xml",
                "+++ b/archetypes/struts2-archetype-dbportlet/pom.xml",
                "@@ -4,3 +4,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-plugin/pom.xml b/archetypes/struts2-archetype-plugin/pom.xml",
                "index bbdcb962f..eaaafb416 100644",
                "--- a/archetypes/struts2-archetype-plugin/pom.xml",
                "+++ b/archetypes/struts2-archetype-plugin/pom.xml",
                "@@ -4,3 +4,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-portlet/pom.xml b/archetypes/struts2-archetype-portlet/pom.xml",
                "index 9489b77da..5681a3b17 100644",
                "--- a/archetypes/struts2-archetype-portlet/pom.xml",
                "+++ b/archetypes/struts2-archetype-portlet/pom.xml",
                "@@ -4,3 +4,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-starter/pom.xml b/archetypes/struts2-archetype-starter/pom.xml",
                "index da86e0ab5..5d72ba8c6 100644",
                "--- a/archetypes/struts2-archetype-starter/pom.xml",
                "+++ b/archetypes/struts2-archetype-starter/pom.xml",
                "@@ -6,3 +6,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/assembly/pom.xml b/assembly/pom.xml",
                "index f6f47c232..261d7fb3f 100644",
                "--- a/assembly/pom.xml",
                "+++ b/assembly/pom.xml",
                "@@ -5,3 +5,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/bom/pom.xml b/bom/pom.xml",
                "index 1d57cdade..3f6d0cb23 100644",
                "--- a/bom/pom.xml",
                "+++ b/bom/pom.xml",
                "@@ -12,3 +12,3 @@",
                "     <artifactId>struts2-bom</artifactId>",
                "-    <version>2.3.35</version>",
                "+    <version>2.3.35-SNAPSHOT</version>",
                "     <packaging>pom</packaging>",
                "@@ -27,3 +27,3 @@",
                "     <properties>",
                "-        <struts-version.version>2.3.35</struts-version.version>",
                "+        <struts-version.version>2.3.35-SNAPSHOT</struts-version.version>",
                "     </properties>",
                "@@ -199,3 +199,3 @@",
                "   <scm>",
                "-    <tag>STRUTS_2_3_35</tag>",
                "+    <tag>STRUTS_2_3_24_1</tag>",
                "   </scm>",
                "diff --git a/bundles/admin/pom.xml b/bundles/admin/pom.xml",
                "index 360d0465d..c0078eccf 100644",
                "--- a/bundles/admin/pom.xml",
                "+++ b/bundles/admin/pom.xml",
                "@@ -6,3 +6,3 @@",
                "         <artifactId>struts2-osgi-bundles</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/bundles/demo/pom.xml b/bundles/demo/pom.xml",
                "index 484a25fbd..091379e97 100644",
                "--- a/bundles/demo/pom.xml",
                "+++ b/bundles/demo/pom.xml",
                "@@ -6,3 +6,3 @@",
                "         <artifactId>struts2-osgi-bundles</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/bundles/pom.xml b/bundles/pom.xml",
                "index c99869f5c..34c4ef5ed 100755",
                "--- a/bundles/pom.xml",
                "+++ b/bundles/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/core/pom.xml b/core/pom.xml",
                "index d8413034a..c579b01bf 100644",
                "--- a/core/pom.xml",
                "+++ b/core/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/cdi/pom.xml b/plugins/cdi/pom.xml",
                "index e4f58d7eb..8e283df67 100644",
                "--- a/plugins/cdi/pom.xml",
                "+++ b/plugins/cdi/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/codebehind/pom.xml b/plugins/codebehind/pom.xml",
                "index 1fdeb3a17..44f7462b9 100644",
                "--- a/plugins/codebehind/pom.xml",
                "+++ b/plugins/codebehind/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/config-browser/pom.xml b/plugins/config-browser/pom.xml",
                "index f0218f65a..4fc3f5f01 100644",
                "--- a/plugins/config-browser/pom.xml",
                "+++ b/plugins/config-browser/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/convention/pom.xml b/plugins/convention/pom.xml",
                "index 99c53db56..701eb5a53 100644",
                "--- a/plugins/convention/pom.xml",
                "+++ b/plugins/convention/pom.xml",
                "@@ -5,3 +5,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/dojo/pom.xml b/plugins/dojo/pom.xml",
                "index a09ba45ae..230792546 100644",
                "--- a/plugins/dojo/pom.xml",
                "+++ b/plugins/dojo/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <groupId>org.apache.struts</groupId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/dwr/pom.xml b/plugins/dwr/pom.xml",
                "index ffd441101..1042fbbd1 100644",
                "--- a/plugins/dwr/pom.xml",
                "+++ b/plugins/dwr/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/embeddedjsp/pom.xml b/plugins/embeddedjsp/pom.xml",
                "index 80eb23e3a..fbb5fd006 100644",
                "--- a/plugins/embeddedjsp/pom.xml",
                "+++ b/plugins/embeddedjsp/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/gxp/pom.xml b/plugins/gxp/pom.xml",
                "index b779624dc..16139f7a1 100644",
                "--- a/plugins/gxp/pom.xml",
                "+++ b/plugins/gxp/pom.xml",
                "@@ -5,3 +5,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/jasperreports/pom.xml b/plugins/jasperreports/pom.xml",
                "index a5dd2d000..69dc52d03 100644",
                "--- a/plugins/jasperreports/pom.xml",
                "+++ b/plugins/jasperreports/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/java8-support/pom.xml b/plugins/java8-support/pom.xml",
                "index b0d2e3df0..00a9c98af 100644",
                "--- a/plugins/java8-support/pom.xml",
                "+++ b/plugins/java8-support/pom.xml",
                "@@ -7,3 +7,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/javatemplates/pom.xml b/plugins/javatemplates/pom.xml",
                "index d27f26a34..497a2c02f 100644",
                "--- a/plugins/javatemplates/pom.xml",
                "+++ b/plugins/javatemplates/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/jfreechart/pom.xml b/plugins/jfreechart/pom.xml",
                "index 5f5f759ce..8ffcf1267 100644",
                "--- a/plugins/jfreechart/pom.xml",
                "+++ b/plugins/jfreechart/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "    </parent>",
                "diff --git a/plugins/jsf/pom.xml b/plugins/jsf/pom.xml",
                "index 06ae551ff..5a6753689 100644",
                "--- a/plugins/jsf/pom.xml",
                "+++ b/plugins/jsf/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/json/pom.xml b/plugins/json/pom.xml",
                "index 8e34db88a..f8686f638 100644",
                "--- a/plugins/json/pom.xml",
                "+++ b/plugins/json/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/junit/pom.xml b/plugins/junit/pom.xml",
                "index c65e7087f..655a606fa 100644",
                "--- a/plugins/junit/pom.xml",
                "+++ b/plugins/junit/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/osgi/pom.xml b/plugins/osgi/pom.xml",
                "index 103b40765..15b52005b 100644",
                "--- a/plugins/osgi/pom.xml",
                "+++ b/plugins/osgi/pom.xml",
                "@@ -6,3 +6,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/oval/pom.xml b/plugins/oval/pom.xml",
                "index 370cb068a..8a6ad0662 100644",
                "--- a/plugins/oval/pom.xml",
                "+++ b/plugins/oval/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/pell-multipart/pom.xml b/plugins/pell-multipart/pom.xml",
                "index 3c95276b6..7dd0663ca 100644",
                "--- a/plugins/pell-multipart/pom.xml",
                "+++ b/plugins/pell-multipart/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/plexus/pom.xml b/plugins/plexus/pom.xml",
                "index 3831d3284..0d33b5a03 100644",
                "--- a/plugins/plexus/pom.xml",
                "+++ b/plugins/plexus/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/pom.xml b/plugins/pom.xml",
                "index 46c4b97ce..3e4d640ea 100644",
                "--- a/plugins/pom.xml",
                "+++ b/plugins/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/portlet-tiles/pom.xml b/plugins/portlet-tiles/pom.xml",
                "index b59b3e13c..2962068bf 100644",
                "--- a/plugins/portlet-tiles/pom.xml",
                "+++ b/plugins/portlet-tiles/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/portlet/pom.xml b/plugins/portlet/pom.xml",
                "index cd32f0e1f..ce1eb54d0 100644",
                "--- a/plugins/portlet/pom.xml",
                "+++ b/plugins/portlet/pom.xml",
                "@@ -5,3 +5,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/rest/pom.xml b/plugins/rest/pom.xml",
                "index 117b9e688..69c929f7f 100644",
                "--- a/plugins/rest/pom.xml",
                "+++ b/plugins/rest/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/sitegraph/pom.xml b/plugins/sitegraph/pom.xml",
                "index ceb23bf9f..a65c5cdfe 100644",
                "--- a/plugins/sitegraph/pom.xml",
                "+++ b/plugins/sitegraph/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/sitemesh/pom.xml b/plugins/sitemesh/pom.xml",
                "index 605bc35bf..cb0b13733 100644",
                "--- a/plugins/sitemesh/pom.xml",
                "+++ b/plugins/sitemesh/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/spring/pom.xml b/plugins/spring/pom.xml",
                "index 6ef60cb02..8087eaaa8 100644",
                "--- a/plugins/spring/pom.xml",
                "+++ b/plugins/spring/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/struts1/pom.xml b/plugins/struts1/pom.xml",
                "index e2ebbf42e..a88c21018 100644",
                "--- a/plugins/struts1/pom.xml",
                "+++ b/plugins/struts1/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/testng/pom.xml b/plugins/testng/pom.xml",
                "index 884ac6583..ff3fb04e2 100644",
                "--- a/plugins/testng/pom.xml",
                "+++ b/plugins/testng/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/tiles/pom.xml b/plugins/tiles/pom.xml",
                "index d3d5327a6..60f92d7a0 100644",
                "--- a/plugins/tiles/pom.xml",
                "+++ b/plugins/tiles/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/tiles3/pom.xml b/plugins/tiles3/pom.xml",
                "index ebf8a2657..c626f4778 100644",
                "--- a/plugins/tiles3/pom.xml",
                "+++ b/plugins/tiles3/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/pom.xml b/pom.xml",
                "index afe34bacb..3880f8c6d 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -11,3 +11,3 @@",
                "     <artifactId>struts2-parent</artifactId>",
                "-    <version>2.3.35</version>",
                "+    <version>2.3.35-SNAPSHOT</version>",
                "     <packaging>pom</packaging>",
                "@@ -33,3 +33,3 @@",
                "         <url>http://git.apache.org/struts.git</url>",
                "-        <tag>STRUTS_2_3_35</tag>",
                "+        <tag>STRUTS_2_3_24_1</tag>",
                "     </scm>",
                "diff --git a/xwork-core/pom.xml b/xwork-core/pom.xml",
                "index f033c0090..852525ae5 100644",
                "--- a/xwork-core/pom.xml",
                "+++ b/xwork-core/pom.xml",
                "@@ -7,3 +7,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.35-SNAPSHOT</version>",
                "     </parent>"
            ],
            "changed_files": [
                "apps/blank/pom.xml",
                "apps/jboss-blank/pom.xml",
                "apps/mailreader/pom.xml",
                "apps/pom.xml",
                "apps/portlet/pom.xml",
                "apps/rest-showcase/pom.xml",
                "apps/showcase/pom.xml",
                "archetypes/pom.xml",
                "archetypes/struts2-archetype-angularjs/pom.xml",
                "archetypes/struts2-archetype-blank/pom.xml",
                "archetypes/struts2-archetype-convention/pom.xml",
                "archetypes/struts2-archetype-dbportlet/pom.xml",
                "archetypes/struts2-archetype-plugin/pom.xml",
                "archetypes/struts2-archetype-portlet/pom.xml",
                "archetypes/struts2-archetype-starter/pom.xml",
                "assembly/pom.xml",
                "bom/pom.xml",
                "bundles/admin/pom.xml",
                "bundles/demo/pom.xml",
                "bundles/pom.xml",
                "core/pom.xml",
                "plugins/cdi/pom.xml",
                "plugins/codebehind/pom.xml",
                "plugins/config-browser/pom.xml",
                "plugins/convention/pom.xml",
                "plugins/dojo/pom.xml",
                "plugins/dwr/pom.xml",
                "plugins/embeddedjsp/pom.xml",
                "plugins/gxp/pom.xml",
                "plugins/jasperreports/pom.xml",
                "plugins/java8-support/pom.xml",
                "plugins/javatemplates/pom.xml",
                "plugins/jfreechart/pom.xml",
                "plugins/jsf/pom.xml",
                "plugins/json/pom.xml",
                "plugins/junit/pom.xml",
                "plugins/osgi/pom.xml",
                "plugins/oval/pom.xml",
                "plugins/pell-multipart/pom.xml",
                "plugins/plexus/pom.xml",
                "plugins/pom.xml",
                "plugins/portlet-tiles/pom.xml",
                "plugins/portlet/pom.xml",
                "plugins/rest/pom.xml",
                "plugins/sitegraph/pom.xml",
                "plugins/sitemesh/pom.xml",
                "plugins/spring/pom.xml",
                "plugins/struts1/pom.xml",
                "plugins/testng/pom.xml",
                "plugins/tiles/pom.xml",
                "plugins/tiles3/pom.xml",
                "pom.xml",
                "xwork-core/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_3_35",
                "STRUTS_2_3_36",
                "STRUTS_2_3_37"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin, convention, code",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "0b41b68da4ace44614a6eb935d3ee198f6c94a98",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1531381887,
            "hunks": 57,
            "message": "[maven-release-plugin] prepare for next development iteration",
            "diff": [
                "diff --git a/apps/blank/pom.xml b/apps/blank/pom.xml",
                "index 243ee3394..efc37a517 100644",
                "--- a/apps/blank/pom.xml",
                "+++ b/apps/blank/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/apps/jboss-blank/pom.xml b/apps/jboss-blank/pom.xml",
                "index 95a9049a5..b89da4f6d 100644",
                "--- a/apps/jboss-blank/pom.xml",
                "+++ b/apps/jboss-blank/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/apps/mailreader/pom.xml b/apps/mailreader/pom.xml",
                "index 8e3eae46c..b5eaac3c0 100644",
                "--- a/apps/mailreader/pom.xml",
                "+++ b/apps/mailreader/pom.xml",
                "@@ -28,3 +28,3 @@",
                "       <artifactId>struts2-apps</artifactId>",
                "-      <version>2.3.35</version>",
                "+      <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/apps/pom.xml b/apps/pom.xml",
                "index 9d6e53bee..6d6842026 100644",
                "--- a/apps/pom.xml",
                "+++ b/apps/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/apps/portlet/pom.xml b/apps/portlet/pom.xml",
                "index 164868a22..1321ed440 100644",
                "--- a/apps/portlet/pom.xml",
                "+++ b/apps/portlet/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/apps/rest-showcase/pom.xml b/apps/rest-showcase/pom.xml",
                "index 67fcebeaa..d22e153df 100644",
                "--- a/apps/rest-showcase/pom.xml",
                "+++ b/apps/rest-showcase/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "@@ -33,3 +33,3 @@",
                "     <packaging>war</packaging>",
                "-    <version>2.3.35</version>",
                "+    <version>2.3.36-SNAPSHOT</version>",
                "     <name>Struts 2 Rest Showcase Webapp</name>",
                "diff --git a/apps/showcase/pom.xml b/apps/showcase/pom.xml",
                "index 77d2edff9..dcecff7e9 100644",
                "--- a/apps/showcase/pom.xml",
                "+++ b/apps/showcase/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/pom.xml b/archetypes/pom.xml",
                "index 3fa5d9629..528d91bec 100644",
                "--- a/archetypes/pom.xml",
                "+++ b/archetypes/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-angularjs/pom.xml b/archetypes/struts2-archetype-angularjs/pom.xml",
                "index 16a77e033..0ed542fe6 100644",
                "--- a/archetypes/struts2-archetype-angularjs/pom.xml",
                "+++ b/archetypes/struts2-archetype-angularjs/pom.xml",
                "@@ -4,3 +4,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-blank/pom.xml b/archetypes/struts2-archetype-blank/pom.xml",
                "index c0aea885a..7b2893854 100644",
                "--- a/archetypes/struts2-archetype-blank/pom.xml",
                "+++ b/archetypes/struts2-archetype-blank/pom.xml",
                "@@ -5,3 +5,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-convention/pom.xml b/archetypes/struts2-archetype-convention/pom.xml",
                "index 43c9d076c..b58566176 100644",
                "--- a/archetypes/struts2-archetype-convention/pom.xml",
                "+++ b/archetypes/struts2-archetype-convention/pom.xml",
                "@@ -4,3 +4,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-dbportlet/pom.xml b/archetypes/struts2-archetype-dbportlet/pom.xml",
                "index a82abb8a4..f230e2552 100644",
                "--- a/archetypes/struts2-archetype-dbportlet/pom.xml",
                "+++ b/archetypes/struts2-archetype-dbportlet/pom.xml",
                "@@ -4,3 +4,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-plugin/pom.xml b/archetypes/struts2-archetype-plugin/pom.xml",
                "index bbdcb962f..4fd93aa74 100644",
                "--- a/archetypes/struts2-archetype-plugin/pom.xml",
                "+++ b/archetypes/struts2-archetype-plugin/pom.xml",
                "@@ -4,3 +4,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-portlet/pom.xml b/archetypes/struts2-archetype-portlet/pom.xml",
                "index 9489b77da..9c91b34c5 100644",
                "--- a/archetypes/struts2-archetype-portlet/pom.xml",
                "+++ b/archetypes/struts2-archetype-portlet/pom.xml",
                "@@ -4,3 +4,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/archetypes/struts2-archetype-starter/pom.xml b/archetypes/struts2-archetype-starter/pom.xml",
                "index da86e0ab5..65835a970 100644",
                "--- a/archetypes/struts2-archetype-starter/pom.xml",
                "+++ b/archetypes/struts2-archetype-starter/pom.xml",
                "@@ -6,3 +6,3 @@",
                "         <artifactId>struts2-archetypes</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/assembly/pom.xml b/assembly/pom.xml",
                "index f6f47c232..29a7a56bd 100644",
                "--- a/assembly/pom.xml",
                "+++ b/assembly/pom.xml",
                "@@ -5,3 +5,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/bom/pom.xml b/bom/pom.xml",
                "index 1d57cdade..a594bc967 100644",
                "--- a/bom/pom.xml",
                "+++ b/bom/pom.xml",
                "@@ -12,3 +12,3 @@",
                "     <artifactId>struts2-bom</artifactId>",
                "-    <version>2.3.35</version>",
                "+    <version>2.3.36-SNAPSHOT</version>",
                "     <packaging>pom</packaging>",
                "@@ -27,3 +27,3 @@",
                "     <properties>",
                "-        <struts-version.version>2.3.35</struts-version.version>",
                "+        <struts-version.version>2.3.36-SNAPSHOT</struts-version.version>",
                "     </properties>",
                "@@ -199,3 +199,3 @@",
                "   <scm>",
                "-    <tag>STRUTS_2_3_35</tag>",
                "+    <tag>STRUTS_2_3_24_1</tag>",
                "   </scm>",
                "diff --git a/bundles/admin/pom.xml b/bundles/admin/pom.xml",
                "index 360d0465d..a0445be2f 100644",
                "--- a/bundles/admin/pom.xml",
                "+++ b/bundles/admin/pom.xml",
                "@@ -6,3 +6,3 @@",
                "         <artifactId>struts2-osgi-bundles</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/bundles/demo/pom.xml b/bundles/demo/pom.xml",
                "index 484a25fbd..0e0378722 100644",
                "--- a/bundles/demo/pom.xml",
                "+++ b/bundles/demo/pom.xml",
                "@@ -6,3 +6,3 @@",
                "         <artifactId>struts2-osgi-bundles</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/bundles/pom.xml b/bundles/pom.xml",
                "index c99869f5c..aa3f50ff2 100755",
                "--- a/bundles/pom.xml",
                "+++ b/bundles/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/core/pom.xml b/core/pom.xml",
                "index d8413034a..41ee9241a 100644",
                "--- a/core/pom.xml",
                "+++ b/core/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/cdi/pom.xml b/plugins/cdi/pom.xml",
                "index e4f58d7eb..f8dac3dae 100644",
                "--- a/plugins/cdi/pom.xml",
                "+++ b/plugins/cdi/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/codebehind/pom.xml b/plugins/codebehind/pom.xml",
                "index 1fdeb3a17..860d45fc4 100644",
                "--- a/plugins/codebehind/pom.xml",
                "+++ b/plugins/codebehind/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/config-browser/pom.xml b/plugins/config-browser/pom.xml",
                "index f0218f65a..18da14107 100644",
                "--- a/plugins/config-browser/pom.xml",
                "+++ b/plugins/config-browser/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/convention/pom.xml b/plugins/convention/pom.xml",
                "index 99c53db56..0f09a4aaa 100644",
                "--- a/plugins/convention/pom.xml",
                "+++ b/plugins/convention/pom.xml",
                "@@ -5,3 +5,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/dojo/pom.xml b/plugins/dojo/pom.xml",
                "index a09ba45ae..0ade1c93f 100644",
                "--- a/plugins/dojo/pom.xml",
                "+++ b/plugins/dojo/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <groupId>org.apache.struts</groupId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/dwr/pom.xml b/plugins/dwr/pom.xml",
                "index ffd441101..ac376c376 100644",
                "--- a/plugins/dwr/pom.xml",
                "+++ b/plugins/dwr/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/embeddedjsp/pom.xml b/plugins/embeddedjsp/pom.xml",
                "index 80eb23e3a..d081473d1 100644",
                "--- a/plugins/embeddedjsp/pom.xml",
                "+++ b/plugins/embeddedjsp/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/gxp/pom.xml b/plugins/gxp/pom.xml",
                "index b779624dc..bdcb3d273 100644",
                "--- a/plugins/gxp/pom.xml",
                "+++ b/plugins/gxp/pom.xml",
                "@@ -5,3 +5,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/jasperreports/pom.xml b/plugins/jasperreports/pom.xml",
                "index a5dd2d000..f1a35421f 100644",
                "--- a/plugins/jasperreports/pom.xml",
                "+++ b/plugins/jasperreports/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/java8-support/pom.xml b/plugins/java8-support/pom.xml",
                "index b0d2e3df0..fdd0c49d5 100644",
                "--- a/plugins/java8-support/pom.xml",
                "+++ b/plugins/java8-support/pom.xml",
                "@@ -7,3 +7,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/javatemplates/pom.xml b/plugins/javatemplates/pom.xml",
                "index d27f26a34..a3ee5a77c 100644",
                "--- a/plugins/javatemplates/pom.xml",
                "+++ b/plugins/javatemplates/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/jfreechart/pom.xml b/plugins/jfreechart/pom.xml",
                "index 5f5f759ce..13e37ca02 100644",
                "--- a/plugins/jfreechart/pom.xml",
                "+++ b/plugins/jfreechart/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "    </parent>",
                "diff --git a/plugins/jsf/pom.xml b/plugins/jsf/pom.xml",
                "index 06ae551ff..b4f065ec1 100644",
                "--- a/plugins/jsf/pom.xml",
                "+++ b/plugins/jsf/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/json/pom.xml b/plugins/json/pom.xml",
                "index 8e34db88a..aabb8cbcd 100644",
                "--- a/plugins/json/pom.xml",
                "+++ b/plugins/json/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/junit/pom.xml b/plugins/junit/pom.xml",
                "index c65e7087f..7e231e002 100644",
                "--- a/plugins/junit/pom.xml",
                "+++ b/plugins/junit/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/osgi/pom.xml b/plugins/osgi/pom.xml",
                "index 103b40765..c43c73b9b 100644",
                "--- a/plugins/osgi/pom.xml",
                "+++ b/plugins/osgi/pom.xml",
                "@@ -6,3 +6,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/oval/pom.xml b/plugins/oval/pom.xml",
                "index 370cb068a..842bc4dfa 100644",
                "--- a/plugins/oval/pom.xml",
                "+++ b/plugins/oval/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/pell-multipart/pom.xml b/plugins/pell-multipart/pom.xml",
                "index 3c95276b6..b7852db42 100644",
                "--- a/plugins/pell-multipart/pom.xml",
                "+++ b/plugins/pell-multipart/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/plexus/pom.xml b/plugins/plexus/pom.xml",
                "index 3831d3284..b924e0181 100644",
                "--- a/plugins/plexus/pom.xml",
                "+++ b/plugins/plexus/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/pom.xml b/plugins/pom.xml",
                "index 46c4b97ce..24a481819 100644",
                "--- a/plugins/pom.xml",
                "+++ b/plugins/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/portlet-tiles/pom.xml b/plugins/portlet-tiles/pom.xml",
                "index b59b3e13c..4dfc6f205 100644",
                "--- a/plugins/portlet-tiles/pom.xml",
                "+++ b/plugins/portlet-tiles/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/portlet/pom.xml b/plugins/portlet/pom.xml",
                "index cd32f0e1f..af39ac6f3 100644",
                "--- a/plugins/portlet/pom.xml",
                "+++ b/plugins/portlet/pom.xml",
                "@@ -5,3 +5,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/rest/pom.xml b/plugins/rest/pom.xml",
                "index 117b9e688..a74166cec 100644",
                "--- a/plugins/rest/pom.xml",
                "+++ b/plugins/rest/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/sitegraph/pom.xml b/plugins/sitegraph/pom.xml",
                "index ceb23bf9f..f53aa1751 100644",
                "--- a/plugins/sitegraph/pom.xml",
                "+++ b/plugins/sitegraph/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/sitemesh/pom.xml b/plugins/sitemesh/pom.xml",
                "index 605bc35bf..dfbca9a31 100644",
                "--- a/plugins/sitemesh/pom.xml",
                "+++ b/plugins/sitemesh/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/spring/pom.xml b/plugins/spring/pom.xml",
                "index 6ef60cb02..22d878a0f 100644",
                "--- a/plugins/spring/pom.xml",
                "+++ b/plugins/spring/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/struts1/pom.xml b/plugins/struts1/pom.xml",
                "index e2ebbf42e..ebd0120fa 100644",
                "--- a/plugins/struts1/pom.xml",
                "+++ b/plugins/struts1/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/testng/pom.xml b/plugins/testng/pom.xml",
                "index 884ac6583..cee0f8d1f 100644",
                "--- a/plugins/testng/pom.xml",
                "+++ b/plugins/testng/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/tiles/pom.xml b/plugins/tiles/pom.xml",
                "index d3d5327a6..01410aed3 100644",
                "--- a/plugins/tiles/pom.xml",
                "+++ b/plugins/tiles/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/tiles3/pom.xml b/plugins/tiles3/pom.xml",
                "index ebf8a2657..d9530089a 100644",
                "--- a/plugins/tiles3/pom.xml",
                "+++ b/plugins/tiles3/pom.xml",
                "@@ -28,3 +28,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/pom.xml b/pom.xml",
                "index add4ec0f6..526f3b815 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -11,3 +11,3 @@",
                "     <artifactId>struts2-parent</artifactId>",
                "-    <version>2.3.35</version>",
                "+    <version>2.3.36-SNAPSHOT</version>",
                "     <packaging>pom</packaging>",
                "@@ -33,3 +33,3 @@",
                "         <url>https://github.com/apache/struts/</url>",
                "-        <tag>STRUTS_2_3_35</tag>",
                "+        <tag>support-2-3</tag>",
                "     </scm>",
                "diff --git a/xwork-core/pom.xml b/xwork-core/pom.xml",
                "index f033c0090..b79bc5949 100644",
                "--- a/xwork-core/pom.xml",
                "+++ b/xwork-core/pom.xml",
                "@@ -7,3 +7,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.3.35</version>",
                "+        <version>2.3.36-SNAPSHOT</version>",
                "     </parent>"
            ],
            "changed_files": [
                "apps/blank/pom.xml",
                "apps/jboss-blank/pom.xml",
                "apps/mailreader/pom.xml",
                "apps/pom.xml",
                "apps/portlet/pom.xml",
                "apps/rest-showcase/pom.xml",
                "apps/showcase/pom.xml",
                "archetypes/pom.xml",
                "archetypes/struts2-archetype-angularjs/pom.xml",
                "archetypes/struts2-archetype-blank/pom.xml",
                "archetypes/struts2-archetype-convention/pom.xml",
                "archetypes/struts2-archetype-dbportlet/pom.xml",
                "archetypes/struts2-archetype-plugin/pom.xml",
                "archetypes/struts2-archetype-portlet/pom.xml",
                "archetypes/struts2-archetype-starter/pom.xml",
                "assembly/pom.xml",
                "bom/pom.xml",
                "bundles/admin/pom.xml",
                "bundles/demo/pom.xml",
                "bundles/pom.xml",
                "core/pom.xml",
                "plugins/cdi/pom.xml",
                "plugins/codebehind/pom.xml",
                "plugins/config-browser/pom.xml",
                "plugins/convention/pom.xml",
                "plugins/dojo/pom.xml",
                "plugins/dwr/pom.xml",
                "plugins/embeddedjsp/pom.xml",
                "plugins/gxp/pom.xml",
                "plugins/jasperreports/pom.xml",
                "plugins/java8-support/pom.xml",
                "plugins/javatemplates/pom.xml",
                "plugins/jfreechart/pom.xml",
                "plugins/jsf/pom.xml",
                "plugins/json/pom.xml",
                "plugins/junit/pom.xml",
                "plugins/osgi/pom.xml",
                "plugins/oval/pom.xml",
                "plugins/pell-multipart/pom.xml",
                "plugins/plexus/pom.xml",
                "plugins/pom.xml",
                "plugins/portlet-tiles/pom.xml",
                "plugins/portlet/pom.xml",
                "plugins/rest/pom.xml",
                "plugins/sitegraph/pom.xml",
                "plugins/sitemesh/pom.xml",
                "plugins/spring/pom.xml",
                "plugins/struts1/pom.xml",
                "plugins/testng/pom.xml",
                "plugins/tiles/pom.xml",
                "plugins/tiles3/pom.xml",
                "pom.xml",
                "xwork-core/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_3_36",
                "STRUTS_2_3_37"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin, convention, code",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "6e87474f9ad0549f07dd2c37d50a9ccd0977c6e5",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1529565586,
            "hunks": 7,
            "message": "Validates action, namespace and method in the same way",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/StrutsConstants.java b/core/src/main/java/org/apache/struts2/StrutsConstants.java",
                "index d01e15088..81a4f803a 100644",
                "--- a/core/src/main/java/org/apache/struts2/StrutsConstants.java",
                "+++ b/core/src/main/java/org/apache/struts2/StrutsConstants.java",
                "@@ -284,2 +284,7 @@ public final class StrutsConstants {",
                "+    /** namespaces names' whitelist **/",
                "+    public static final String STRUTS_ALLOWED_NAMESPACE_NAMES = \"struts.allowed.namespace.names\";",
                "+    /** default namespace name to use when namespace didn't match the whitelist **/",
                "+    public static final String STRUTS_DEFAULT_NAMESPACE_NAME = \"struts.default.namespace.name\";",
                "+",
                "     /** actions names' whitelist **/",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java b/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java",
                "index 224e36a7c..95bd5c163 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java",
                "@@ -33,3 +33,2 @@ import org.apache.struts2.ServletActionContext;",
                " import org.apache.struts2.StrutsConstants;",
                "-import org.apache.struts2.StrutsException;",
                " import org.apache.struts2.util.PrefixTrie;",
                "@@ -119,2 +118,6 @@ public class DefaultActionMapper implements ActionMapper {",
                "     protected PrefixTrie prefixTrie = null;",
                "+",
                "+    protected Pattern allowedNamespaceNames = Pattern.compile(\"[a-zA-Z0-9._/\\\\-]*\");",
                "+    protected String defaultNamespaceName = \"/\";",
                "+",
                "     protected Pattern allowedActionNames = Pattern.compile(\"[a-zA-Z0-9._!/\\\\-]*\");",
                "@@ -204,2 +207,12 @@ public class DefaultActionMapper implements ActionMapper {",
                "+    @Inject(value = StrutsConstants.STRUTS_ALLOWED_NAMESPACE_NAMES, required = false)",
                "+    public void setAllowedNamespaceNames(String allowedNamespaceNames) {",
                "+        this.allowedNamespaceNames = Pattern.compile(allowedNamespaceNames);",
                "+    }",
                "+",
                "+    @Inject(value = StrutsConstants.STRUTS_DEFAULT_NAMESPACE_NAME, required = false)",
                "+    public void setDefaultNamespaceName(String defaultNamespaceName) {",
                "+        this.defaultNamespaceName = defaultNamespaceName;",
                "+    }",
                "+",
                "     @Inject(value = StrutsConstants.STRUTS_ALLOWED_ACTION_NAMES, required = false)",
                "@@ -391,3 +404,3 @@ public class DefaultActionMapper implements ActionMapper {",
                "-        mapping.setNamespace(namespace);",
                "+        mapping.setNamespace(cleanupNamespaceName(namespace));",
                "         mapping.setName(cleanupActionName(name));",
                "@@ -395,2 +408,20 @@ public class DefaultActionMapper implements ActionMapper {",
                "+    /**",
                "+     * Checks namespace name against allowed pattern if not matched returns default namespace",
                "+     *",
                "+     * @param rawNamespace name extracted from URI",
                "+     * @return safe namespace name",
                "+     */",
                "+    protected String cleanupNamespaceName(final String rawNamespace) {",
                "+        if (allowedNamespaceNames.matcher(rawNamespace).matches()) {",
                "+            return rawNamespace;",
                "+        } else {",
                "+            LOG.warn(",
                "+                \"{} did not match allowed namespace names {} - default namespace {} will be used!\",",
                "+                rawNamespace, allowedActionNames, defaultActionName",
                "+            );",
                "+            return defaultNamespaceName;",
                "+        }",
                "+    }",
                "+",
                "     /**",
                "diff --git a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java",
                "index 1503ae224..d2631f0eb 100644",
                "--- a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java",
                "+++ b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java",
                "@@ -366,3 +366,3 @@ public class RestActionMapper extends DefaultActionMapper {",
                "-        mapping.setNamespace(namespace);",
                "+        mapping.setNamespace(cleanupNamespaceName(namespace));",
                "         mapping.setName(name);"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/StrutsConstants.java",
                "core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java",
                "plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: action, namespace",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin, action",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "459cb61ca4f2cf8cc1aa9db118a3bc9716586583",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526137598,
            "hunks": 1,
            "message": "Adds deque and queue support JSON plugin",
            "diff": [
                "diff --git a/plugins/json/src/main/java/org/apache/struts2/json/JSONPopulator.java b/plugins/json/src/main/java/org/apache/struts2/json/JSONPopulator.java",
                "index 52ab35884..ef1ac77bd 100644",
                "--- a/plugins/json/src/main/java/org/apache/struts2/json/JSONPopulator.java",
                "+++ b/plugins/json/src/main/java/org/apache/struts2/json/JSONPopulator.java",
                "@@ -209,2 +209,4 @@ public class JSONPopulator {",
                "                     newCollection = new HashSet();",
                "+                } else if (Queue.class.isAssignableFrom(clazz)) {",
                "+                    newCollection = new ArrayDeque();",
                "                 } else {"
            ],
            "changed_files": [
                "plugins/json/src/main/java/org/apache/struts2/json/JSONPopulator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d175836757d4c26e244eb8fb50ff586e276cdb5f",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1525243544,
            "hunks": 35,
            "message": "Changes version to snapshot",
            "diff": [
                "diff --git a/apps/pom.xml b/apps/pom.xml",
                "index daee3d5c8..75043fa04 100644",
                "--- a/apps/pom.xml",
                "+++ b/apps/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/apps/rest-showcase/pom.xml b/apps/rest-showcase/pom.xml",
                "index dc9e174e8..1298f149f 100644",
                "--- a/apps/rest-showcase/pom.xml",
                "+++ b/apps/rest-showcase/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "@@ -31,3 +31,3 @@",
                "     <packaging>war</packaging>",
                "-    <version>2.5.16</version>",
                "+    <version>2.5.17-SNAPSHOT</version>",
                "     <name>Struts 2 Rest Showcase Webapp</name>",
                "diff --git a/apps/showcase/pom.xml b/apps/showcase/pom.xml",
                "index 06a194cda..5bfd922bc 100644",
                "--- a/apps/showcase/pom.xml",
                "+++ b/apps/showcase/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/assembly/pom.xml b/assembly/pom.xml",
                "index d8c608e19..5207daa0c 100644",
                "--- a/assembly/pom.xml",
                "+++ b/assembly/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/bundles/admin/pom.xml b/bundles/admin/pom.xml",
                "index ada7f6225..57db397da 100644",
                "--- a/bundles/admin/pom.xml",
                "+++ b/bundles/admin/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-osgi-bundles</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/bundles/demo/pom.xml b/bundles/demo/pom.xml",
                "index 2f173cff6..626f87312 100644",
                "--- a/bundles/demo/pom.xml",
                "+++ b/bundles/demo/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-osgi-bundles</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/bundles/pom.xml b/bundles/pom.xml",
                "index b9e07a91b..18f5891e9 100755",
                "--- a/bundles/pom.xml",
                "+++ b/bundles/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/core/pom.xml b/core/pom.xml",
                "index 864abd138..93cdd6155 100644",
                "--- a/core/pom.xml",
                "+++ b/core/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/bean-validation/pom.xml b/plugins/bean-validation/pom.xml",
                "index a91e262ce..9cd8354ba 100644",
                "--- a/plugins/bean-validation/pom.xml",
                "+++ b/plugins/bean-validation/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/cdi/pom.xml b/plugins/cdi/pom.xml",
                "index bc2df4371..264d9ddae 100644",
                "--- a/plugins/cdi/pom.xml",
                "+++ b/plugins/cdi/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/config-browser/pom.xml b/plugins/config-browser/pom.xml",
                "index a83d97270..ae15e35be 100644",
                "--- a/plugins/config-browser/pom.xml",
                "+++ b/plugins/config-browser/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/convention/pom.xml b/plugins/convention/pom.xml",
                "index 5281ffd98..d5274bf1f 100644",
                "--- a/plugins/convention/pom.xml",
                "+++ b/plugins/convention/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/dwr/pom.xml b/plugins/dwr/pom.xml",
                "index e555dc32f..5720b30a9 100644",
                "--- a/plugins/dwr/pom.xml",
                "+++ b/plugins/dwr/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/embeddedjsp/pom.xml b/plugins/embeddedjsp/pom.xml",
                "index 0604cf865..b2a8c6f30 100644",
                "--- a/plugins/embeddedjsp/pom.xml",
                "+++ b/plugins/embeddedjsp/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/gxp/pom.xml b/plugins/gxp/pom.xml",
                "index 8c15e3e29..41dd3a4f7 100644",
                "--- a/plugins/gxp/pom.xml",
                "+++ b/plugins/gxp/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/jasperreports/pom.xml b/plugins/jasperreports/pom.xml",
                "index d03051156..569eeaa72 100644",
                "--- a/plugins/jasperreports/pom.xml",
                "+++ b/plugins/jasperreports/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/javatemplates/pom.xml b/plugins/javatemplates/pom.xml",
                "index 322fa008e..c1a36b4fa 100644",
                "--- a/plugins/javatemplates/pom.xml",
                "+++ b/plugins/javatemplates/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/jfreechart/pom.xml b/plugins/jfreechart/pom.xml",
                "index 208cf604e..d0e4e2c27 100644",
                "--- a/plugins/jfreechart/pom.xml",
                "+++ b/plugins/jfreechart/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "    </parent>",
                "diff --git a/plugins/json/pom.xml b/plugins/json/pom.xml",
                "index 4fccab738..201f7fd08 100644",
                "--- a/plugins/json/pom.xml",
                "+++ b/plugins/json/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/junit/pom.xml b/plugins/junit/pom.xml",
                "index d1107992c..3d0fedaf4 100644",
                "--- a/plugins/junit/pom.xml",
                "+++ b/plugins/junit/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/osgi/pom.xml b/plugins/osgi/pom.xml",
                "index 58317713c..37286e91f 100644",
                "--- a/plugins/osgi/pom.xml",
                "+++ b/plugins/osgi/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/oval/pom.xml b/plugins/oval/pom.xml",
                "index 3e757a50d..33ce50e26 100644",
                "--- a/plugins/oval/pom.xml",
                "+++ b/plugins/oval/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/pell-multipart/pom.xml b/plugins/pell-multipart/pom.xml",
                "index c52d72db6..4c3bc1d38 100644",
                "--- a/plugins/pell-multipart/pom.xml",
                "+++ b/plugins/pell-multipart/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/plexus/pom.xml b/plugins/plexus/pom.xml",
                "index a194d6a61..9658c7b19 100644",
                "--- a/plugins/plexus/pom.xml",
                "+++ b/plugins/plexus/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/pom.xml b/plugins/pom.xml",
                "index edfb7463d..3d8820a39 100644",
                "--- a/plugins/pom.xml",
                "+++ b/plugins/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/portlet-tiles/pom.xml b/plugins/portlet-tiles/pom.xml",
                "index 692b86200..f218acdf7 100644",
                "--- a/plugins/portlet-tiles/pom.xml",
                "+++ b/plugins/portlet-tiles/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/portlet/pom.xml b/plugins/portlet/pom.xml",
                "index 0ba812e5a..e4525874f 100644",
                "--- a/plugins/portlet/pom.xml",
                "+++ b/plugins/portlet/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/rest/pom.xml b/plugins/rest/pom.xml",
                "index e4e7c5738..115a8cd61 100644",
                "--- a/plugins/rest/pom.xml",
                "+++ b/plugins/rest/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/sitegraph/pom.xml b/plugins/sitegraph/pom.xml",
                "index 6029193e7..2c4fef534 100644",
                "--- a/plugins/sitegraph/pom.xml",
                "+++ b/plugins/sitegraph/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/sitemesh/pom.xml b/plugins/sitemesh/pom.xml",
                "index ea1076b9e..0afc77909 100644",
                "--- a/plugins/sitemesh/pom.xml",
                "+++ b/plugins/sitemesh/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/spring/pom.xml b/plugins/spring/pom.xml",
                "index dc0fa4767..5b2c226c9 100644",
                "--- a/plugins/spring/pom.xml",
                "+++ b/plugins/spring/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/testng/pom.xml b/plugins/testng/pom.xml",
                "index 688799624..c5ad9e117 100644",
                "--- a/plugins/testng/pom.xml",
                "+++ b/plugins/testng/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/tiles/pom.xml b/plugins/tiles/pom.xml",
                "index 410c600c7..6bd557d55 100644",
                "--- a/plugins/tiles/pom.xml",
                "+++ b/plugins/tiles/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.16</version>",
                "+        <version>2.5.17-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/pom.xml b/pom.xml",
                "index ea52c06c4..531b316c1 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -31,3 +31,3 @@",
                "     <artifactId>struts2-parent</artifactId>",
                "-    <version>2.5.16</version>",
                "+    <version>2.5.17-SNAPSHOT</version>",
                "     <packaging>pom</packaging>"
            ],
            "changed_files": [
                "apps/pom.xml",
                "apps/rest-showcase/pom.xml",
                "apps/showcase/pom.xml",
                "assembly/pom.xml",
                "bundles/admin/pom.xml",
                "bundles/demo/pom.xml",
                "bundles/pom.xml",
                "core/pom.xml",
                "plugins/bean-validation/pom.xml",
                "plugins/cdi/pom.xml",
                "plugins/config-browser/pom.xml",
                "plugins/convention/pom.xml",
                "plugins/dwr/pom.xml",
                "plugins/embeddedjsp/pom.xml",
                "plugins/gxp/pom.xml",
                "plugins/jasperreports/pom.xml",
                "plugins/javatemplates/pom.xml",
                "plugins/jfreechart/pom.xml",
                "plugins/json/pom.xml",
                "plugins/junit/pom.xml",
                "plugins/osgi/pom.xml",
                "plugins/oval/pom.xml",
                "plugins/pell-multipart/pom.xml",
                "plugins/plexus/pom.xml",
                "plugins/pom.xml",
                "plugins/portlet-tiles/pom.xml",
                "plugins/portlet/pom.xml",
                "plugins/rest/pom.xml",
                "plugins/sitegraph/pom.xml",
                "plugins/sitemesh/pom.xml",
                "plugins/spring/pom.xml",
                "plugins/testng/pom.xml",
                "plugins/tiles/pom.xml",
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin, convention",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "1bf7283be0a8a27af2b8c5dca76cfb71ac72023b",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1527108005,
            "hunks": 0,
            "message": "Merge pull request #225 from sdutry/WW-4926 update commons-beanutils dependency to version 1.9.3",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4926": ""
            },
            "ghissue_refs": {
                "225": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4926",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 225",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d78b83258d8788da9d9bf1b8d53f1d4521024d22",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526878997,
            "hunks": 0,
            "message": "Merge pull request #222 from sdutry/WW-4713-dropping-phase drop searchValueStack attribute from the s:text tag",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4713": ""
            },
            "ghissue_refs": {
                "222": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: value",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4713",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 222",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "dcadfeb2c01b006a0198551ea84c7ac674220f2f",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526282046,
            "hunks": 0,
            "message": "Merge pull request #219 from loomchild/add-sortedset-support WW-4937 Add SortedSet support to JSON plugin",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4937": ""
            },
            "ghissue_refs": {
                "219": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4937",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 219",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6c0d719a8a2d7f56b00f9373ac1ea1b660c2310b",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526931492,
            "hunks": 1,
            "message": "fix RestActionInvocation",
            "diff": [
                "diff --git a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "index a6ad038a4..f53e55cd6 100644",
                "--- a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "+++ b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "@@ -189,4 +189,3 @@ public class RestActionInvocation extends DefaultActionInvocation {",
                "             }",
                "-",
                "-        }",
                "+        } finally {}",
                "     }"
            ],
            "changed_files": [
                "plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: action",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin, action",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "61ed292b8c2fd8228d18b82a5c55ddc72f40bdd3",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1529311483,
            "hunks": 0,
            "message": "Merge pull request #231 from sullis/exclude-package-sun-misc add 'sun.misc.' to struts.excludedPackageNames",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "231": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: package",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 231",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "03ade0597d5f5ea24f80d03db92db8fd204d2082",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526757526,
            "hunks": 23,
            "message": "drop deprecated logging layer issue: * WW-4763",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/logging/Logger.java b/core/src/main/java/com/opensymphony/xwork2/util/logging/Logger.java",
                "deleted file mode 100644",
                "index 8412f9d03..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/logging/Logger.java",
                "+++ /dev/null",
                "@@ -1,73 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package com.opensymphony.xwork2.util.logging;",
                "-",
                "-/**",
                "- * Main logger interface for logging things",
                "- *",
                "- * @deprecated since 2.5",
                "- */",
                "-@Deprecated",
                "-public interface Logger {",
                "-",
                "-    void trace(String msg, String... args);",
                "-",
                "-    void trace(String msg, Object... args);",
                "-",
                "-    void trace(String msg, Throwable ex, String... args);",
                "-",
                "-    boolean isTraceEnabled();",
                "-",
                "-    void debug(String msg, String... args);",
                "-",
                "-    void debug(String msg, Object... args);",
                "-",
                "-    void debug(String msg, Throwable ex, String... args);",
                "-",
                "-    boolean isDebugEnabled();",
                "-",
                "-    void info(String msg, String... args);",
                "-",
                "-    void info(String msg, Throwable ex, String... args);",
                "-",
                "-    boolean isInfoEnabled();",
                "-",
                "-    void warn(String msg, String... args);",
                "-",
                "-    void warn(String msg, Object... args);",
                "-",
                "-    void warn(String msg, Throwable ex, String... args);",
                "-",
                "-    boolean isWarnEnabled();",
                "-",
                "-    void error(String msg, String... args);",
                "-",
                "-    void error(String msg, Object... args);",
                "-",
                "-    void error(String msg, Throwable ex, String... args);",
                "-",
                "-    boolean isErrorEnabled();",
                "-",
                "-    void fatal(String msg, String... args);",
                "-",
                "-    void fatal(String msg, Throwable ex, String... args);",
                "-",
                "-    boolean isFatalEnabled();",
                "-",
                "-}",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/logging/LoggerFactory.java b/core/src/main/java/com/opensymphony/xwork2/util/logging/LoggerFactory.java",
                "deleted file mode 100644",
                "index 52c7ec777..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/logging/LoggerFactory.java",
                "+++ /dev/null",
                "@@ -1,142 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package com.opensymphony.xwork2.util.logging;",
                "-",
                "-import com.opensymphony.xwork2.XWorkConstants;",
                "-import com.opensymphony.xwork2.XWorkException;",
                "-import com.opensymphony.xwork2.util.logging.commons.CommonsLoggerFactory;",
                "-import com.opensymphony.xwork2.util.logging.jdk.JdkLoggerFactory;",
                "-import com.opensymphony.xwork2.util.logging.log4j2.Log4j2LoggerFactory;",
                "-import com.opensymphony.xwork2.util.logging.slf4j.Slf4jLoggerFactory;",
                "-",
                "-import java.util.LinkedList;",
                "-import java.util.List;",
                "-import java.util.concurrent.locks.ReadWriteLock;",
                "-import java.util.concurrent.locks.ReentrantReadWriteLock;",
                "-",
                "-/**",
                "- * Creates loggers.  Static accessor will lazily try to decide on the best factory if none specified.",
                "- *",
                "- * @deprecated since 2.5",
                "- */",
                "-@Deprecated",
                "-public abstract class LoggerFactory {",
                "-",
                "-    private static final ReadWriteLock lock = new ReentrantReadWriteLock();",
                "-    private static LoggerFactory factory;",
                "-",
                "-    private static final List<LoggerClass> loggers = new LinkedList<LoggerClass>(){",
                "-        {",
                "-            add(new LoggerClass<CommonsLoggerFactory>(\"org.apache.commons.logging.LogFactory\", CommonsLoggerFactory.class));",
                "-            add(new LoggerClass<Slf4jLoggerFactory>(\"org.slf4j.LoggerFactory\", Slf4jLoggerFactory.class));",
                "-            add(new LoggerClass<Log4j2LoggerFactory>(\"org.apache.logging.log4j.LogManager\", Log4j2LoggerFactory.class));",
                "-        }",
                "-    };",
                "-",
                "-    public static void setLoggerFactory(LoggerFactory factory) {",
                "-        lock.writeLock().lock();",
                "-        try {",
                "-            LoggerFactory.factory = factory;",
                "-        } finally {",
                "-            lock.writeLock().unlock();",
                "-        }",
                "-    }",
                "-",
                "-    public static Logger getLogger(Class<?> cls) {",
                "-        return getLoggerFactory().getLoggerImpl(cls);",
                "-    }",
                "-",
                "-    public static Logger getLogger(String name) {",
                "-        return getLoggerFactory().getLoggerImpl(name);",
                "-    }",
                "-",
                "-    protected static LoggerFactory getLoggerFactory() {",
                "-        lock.readLock().lock();",
                "-        try {",
                "-            if (factory != null) {",
                "-                return factory;",
                "-            }",
                "-        } finally {",
                "-            lock.readLock().unlock();",
                "-        }",
                "-        lock.writeLock().lock();",
                "-        try {",
                "-            if (factory == null) {",
                "-                createLoggerFactory();",
                "-            }",
                "-            return factory;",
                "-        } finally {",
                "-            lock.writeLock().unlock();",
                "-        }",
                "-    }",
                "-",
                "-    private static void createLoggerFactory() {",
                "-        String userLoggerFactory = System.getProperty(XWorkConstants.XWORK_LOGGER_FACTORY);",
                "-        if (userLoggerFactory != null) {",
                "-            try {",
                "-                Class clazz = Class.forName(userLoggerFactory);",
                "-                factory = (LoggerFactory) clazz.newInstance();",
                "-            } catch (Exception e) {",
                "-                throw new XWorkException(\"System property [\" + XWorkConstants.XWORK_LOGGER_FACTORY +",
                "-                        \"] was defined as [\" + userLoggerFactory + \"] but there is a problem to use that LoggerFactory!\", e);",
                "-            }",
                "-        } else {",
                "-            factory = new JdkLoggerFactory();",
                "-            for (LoggerClass logger : loggers) {",
                "-                if (logger.isSupported()) {",
                "-                    factory = logger.createInstance();",
                "-                    break;",
                "-                }",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-    protected abstract Logger getLoggerImpl(Class<?> cls);",
                "-",
                "-    protected abstract Logger getLoggerImpl(String name);",
                "-",
                "-    private static class LoggerClass<T extends LoggerFactory> {",
                "-",
                "-        private final String loggerClazzName;",
                "-        private final Class<T> loggerImplClazz;",
                "-",
                "-        public LoggerClass(String loggerClazzName, Class<T> loggerImplClazz) {",
                "-            this.loggerClazzName = loggerClazzName;",
                "-            this.loggerImplClazz = loggerImplClazz;",
                "-        }",
                "-",
                "-        public boolean isSupported() {",
                "-            try {",
                "-                Class.forName(loggerClazzName);",
                "-                return true;",
                "-            } catch (ClassNotFoundException ignore) {",
                "-                return false;",
                "-            }",
                "-        }",
                "-",
                "-        public LoggerFactory createInstance() {",
                "-            try {",
                "-                return loggerImplClazz.newInstance();",
                "-            } catch (Exception e) {",
                "-                throw new XWorkException(e);",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "-}",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/logging/LoggerUtils.java b/core/src/main/java/com/opensymphony/xwork2/util/logging/LoggerUtils.java",
                "deleted file mode 100644",
                "index 30309fc5b..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/logging/LoggerUtils.java",
                "+++ /dev/null",
                "@@ -1,89 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package com.opensymphony.xwork2.util.logging;",
                "-",
                "-import java.util.LinkedList;",
                "-import java.util.List;",
                "-",
                "-/**",
                "- * Logging utility methods",
                "- *",
                "- * @deprecated since 2.5",
                "- */",
                "-@Deprecated",
                "-public class LoggerUtils {",
                "-",
                "-    /**",
                "-     * Formats messages using parameters. For example, the call:",
                "-     * ",
                "-     * <pre>",
                "-     * format(\"foo #0 #1\", \"bob\", \"joe\");",
                "-     * </pre>",
                "-     * ",
                "-     * will return:",
                "-     * <pre>",
                "-     * foo bob joe",
                "-     * </pre>",
                "-     * ",
                "-     * @param msg The message",
                "-     * @param args A list of arguments.  A maximum of 10 are supported.",
                "-     * @return The formatted string",
                "-     */",
                "-    public static String format(String msg, String... args) {",
                "-        if (msg != null && msg.length() > 0 && msg.indexOf('#') > -1) {",
                "-            StringBuilder sb = new StringBuilder();",
                "-            boolean isArg = false;",
                "-            for (int x = 0; x < msg.length(); x++) {",
                "-                char c = msg.charAt(x);",
                "-                if (isArg) {",
                "-                    isArg = false;",
                "-                    if (Character.isDigit(c)) {",
                "-                        int val = Character.getNumericValue(c);",
                "-                        if (val >= 0 && val < args.length) {",
                "-                            sb.append(args[val]);",
                "-                            continue;",
                "-                        }",
                "-                    }",
                "-                    sb.append('#');",
                "-                }",
                "-                if (c == '#') {",
                "-                    isArg = true;",
                "-                    continue;",
                "-                }",
                "-                sb.append(c);",
                "-            }",
                "-            ",
                "-            if (isArg) {",
                "-                sb.append('#');",
                "-            }",
                "-            return sb.toString();",
                "-        }",
                "-        return msg;",
                "-        ",
                "-    }",
                "-",
                "-    public static String format(String msg, Object[] args) {",
                "-        List<String> strArgs = new LinkedList<String>();",
                "-        for (Object arg : args) {",
                "-            strArgs.add(arg != null ? arg.toString() : \"(null)\");",
                "-        }",
                "-        return format(msg, strArgs.toArray(new String[strArgs.size()]));",
                "-    }",
                "-",
                "-}",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/logging/commons/CommonsLogger.java b/core/src/main/java/com/opensymphony/xwork2/util/logging/commons/CommonsLogger.java",
                "deleted file mode 100644",
                "index 059e6ef06..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/logging/commons/CommonsLogger.java",
                "+++ /dev/null",
                "@@ -1,130 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package com.opensymphony.xwork2.util.logging.commons;",
                "-",
                "-import com.opensymphony.xwork2.util.logging.Logger;",
                "-import com.opensymphony.xwork2.util.logging.LoggerUtils;",
                "-import org.apache.commons.logging.Log;",
                "-",
                "-/**",
                "- * Simple logger that delegates to commons logging",
                "- *",
                "- * @deprecated since 2.5",
                "- */",
                "-@Deprecated",
                "-public class CommonsLogger implements Logger {",
                "-    ",
                "-    private Log log;",
                "-    ",
                "-    public CommonsLogger(Log log) {",
                "-        this.log = log;",
                "-    }",
                "-",
                "-    public void error(String msg, String... args) {",
                "-        log.error(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void error(String msg, Object... args) {",
                "-        log.error(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void error(String msg, Throwable ex, String... args) {",
                "-        log.error(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-",
                "-    public void info(String msg, String... args) {",
                "-        log.info(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void info(String msg, Throwable ex, String... args) {",
                "-        log.info(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-",
                "-    ",
                "-",
                "-    public boolean isInfoEnabled() {",
                "-        return log.isInfoEnabled();",
                "-    }",
                "-",
                "-    public void warn(String msg, String... args) {",
                "-        log.warn(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void warn(String msg, Object... args) {",
                "-        log.warn(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void warn(String msg, Throwable ex, String... args) {",
                "-        log.warn(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-    ",
                "-    public boolean isDebugEnabled() {",
                "-        return log.isDebugEnabled();",
                "-    }",
                "-    ",
                "-    public void debug(String msg, String... args) {",
                "-        log.debug(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void debug(String msg, Object... args) {",
                "-        log.debug(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void debug(String msg, Throwable ex, String... args) {",
                "-        log.debug(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-    ",
                "-    public boolean isTraceEnabled() {",
                "-        return log.isTraceEnabled();",
                "-    }",
                "-    ",
                "-    public void trace(String msg, String... args) {",
                "-        log.trace(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void trace(String msg, Object... args) {",
                "-        log.trace(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void trace(String msg, Throwable ex, String... args) {",
                "-        log.trace(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-",
                "-",
                "-    public void fatal(String msg, String... args) {",
                "-        log.fatal(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void fatal(String msg, Throwable ex, String... args) {",
                "-        log.fatal(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-",
                "-    public boolean isErrorEnabled() {",
                "-        return log.isErrorEnabled();",
                "-    }",
                "-",
                "-    public boolean isFatalEnabled() {",
                "-        return log.isFatalEnabled();",
                "-    }",
                "-",
                "-    public boolean isWarnEnabled() {",
                "-        return log.isWarnEnabled();",
                "-    }",
                "-",
                "-}",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/logging/commons/CommonsLoggerFactory.java b/core/src/main/java/com/opensymphony/xwork2/util/logging/commons/CommonsLoggerFactory.java",
                "deleted file mode 100644",
                "index cd8f9f00b..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/logging/commons/CommonsLoggerFactory.java",
                "+++ /dev/null",
                "@@ -1,43 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package com.opensymphony.xwork2.util.logging.commons;",
                "-",
                "-import com.opensymphony.xwork2.util.logging.Logger;",
                "-import com.opensymphony.xwork2.util.logging.LoggerFactory;",
                "-import org.apache.commons.logging.LogFactory;",
                "-",
                "-/**",
                "- * Creates commons-logging-backed loggers",
                "- *",
                "- * @deprecated since 2.5",
                "- */",
                "-@Deprecated",
                "-public class CommonsLoggerFactory extends LoggerFactory {",
                "-",
                "-    @Override",
                "-    protected Logger getLoggerImpl(Class<?> cls) {",
                "-        return new CommonsLogger(LogFactory.getLog(cls));",
                "-    }",
                "-    ",
                "-    @Override",
                "-    protected Logger getLoggerImpl(String name) {",
                "-        return new CommonsLogger(LogFactory.getLog(name));",
                "-    }",
                "-",
                "-}",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/logging/jdk/JdkLogger.java b/core/src/main/java/com/opensymphony/xwork2/util/logging/jdk/JdkLogger.java",
                "deleted file mode 100644",
                "index 5d03ef4f1..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/logging/jdk/JdkLogger.java",
                "+++ /dev/null",
                "@@ -1,128 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package com.opensymphony.xwork2.util.logging.jdk;",
                "-",
                "-import com.opensymphony.xwork2.util.logging.Logger;",
                "-import com.opensymphony.xwork2.util.logging.LoggerUtils;",
                "-",
                "-import java.util.logging.Level;",
                "-",
                "-/**",
                "- * Delegates to jdk logger.  Maps fatal to Level.SEVERE along with error.",
                "- *",
                "- * @deprecated since 2.5",
                "- */",
                "-@Deprecated",
                "-public class JdkLogger implements Logger {",
                "-    ",
                "-    private java.util.logging.Logger log;",
                "-    ",
                "-    public JdkLogger(java.util.logging.Logger log) {",
                "-        this.log = log;",
                "-    }",
                "-",
                "-    public void error(String msg, String... args) {",
                "-        log.log(Level.SEVERE, LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void error(String msg, Object... args) {",
                "-        log.log(Level.SEVERE, LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void error(String msg, Throwable ex, String... args) {",
                "-        log.log(Level.SEVERE, LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-    ",
                "-    public void fatal(String msg, String... args) {",
                "-        log.log(Level.SEVERE, LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void fatal(String msg, Throwable ex, String... args) {",
                "-        log.log(Level.SEVERE, LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-",
                "-    public void info(String msg, String... args) {",
                "-        log.log(Level.INFO, LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void info(String msg, Throwable ex, String... args) {",
                "-        log.log(Level.INFO, LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-",
                "-    public boolean isInfoEnabled() {",
                "-        return log.isLoggable(Level.INFO);",
                "-    }",
                "-",
                "-    public void warn(String msg, String... args) {",
                "-        log.log(Level.WARNING, LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void warn(String msg, Object... args) {",
                "-        log.log(Level.WARNING, LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void warn(String msg, Throwable ex, String... args) {",
                "-        log.log(Level.WARNING, LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-    ",
                "-    public boolean isDebugEnabled() {",
                "-        return log.isLoggable(Level.FINE);",
                "-    }",
                "-    ",
                "-    public void debug(String msg, String... args) {",
                "-        log.log(Level.FINE, LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void debug(String msg, Object... args) {",
                "-        log.log(Level.FINE, LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void debug(String msg, Throwable ex, String... args) {",
                "-        log.log(Level.FINE, LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-    ",
                "-    public boolean isTraceEnabled() {",
                "-        return log.isLoggable(Level.FINEST);",
                "-    }",
                "-    ",
                "-    public void trace(String msg, String... args) {",
                "-        log.log(Level.FINEST, LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void trace(String msg, Object... args) {",
                "-        log.log(Level.FINEST, LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void trace(String msg, Throwable ex, String... args) {",
                "-        log.log(Level.FINEST, LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-",
                "-    public boolean isErrorEnabled() {",
                "-        return log.isLoggable(Level.SEVERE);",
                "-    }",
                "-",
                "-    public boolean isFatalEnabled() {",
                "-        return log.isLoggable(Level.SEVERE);",
                "-    }",
                "-",
                "-    public boolean isWarnEnabled() {",
                "-        return log.isLoggable(Level.WARNING);",
                "-    }",
                "-",
                "-}",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/logging/jdk/JdkLoggerFactory.java b/core/src/main/java/com/opensymphony/xwork2/util/logging/jdk/JdkLoggerFactory.java",
                "deleted file mode 100644",
                "index d32f2c8a1..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/logging/jdk/JdkLoggerFactory.java",
                "+++ /dev/null",
                "@@ -1,41 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package com.opensymphony.xwork2.util.logging.jdk;",
                "-",
                "-import com.opensymphony.xwork2.util.logging.Logger;",
                "-import com.opensymphony.xwork2.util.logging.LoggerFactory;",
                "-",
                "-/**",
                "- * Creates jdk loggers",
                "- *",
                "- * @deprecated since 2.5",
                "- */",
                "-@Deprecated",
                "-public class JdkLoggerFactory extends LoggerFactory {",
                "-",
                "-    @Override",
                "-    protected Logger getLoggerImpl(Class<?> cls) {",
                "-        return new JdkLogger(java.util.logging.Logger.getLogger(cls.getName()));",
                "-    }",
                "-    ",
                "-    @Override",
                "-    protected Logger getLoggerImpl(String name) {",
                "-        return new JdkLogger(java.util.logging.Logger.getLogger(name));",
                "-    }",
                "-}",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/logging/log4j2/Log4j2Logger.java b/core/src/main/java/com/opensymphony/xwork2/util/logging/log4j2/Log4j2Logger.java",
                "deleted file mode 100644",
                "index 8fe2010e0..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/logging/log4j2/Log4j2Logger.java",
                "+++ /dev/null",
                "@@ -1,127 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package com.opensymphony.xwork2.util.logging.log4j2;",
                "-",
                "-import com.opensymphony.xwork2.util.logging.Logger;",
                "-import com.opensymphony.xwork2.util.logging.LoggerUtils;",
                "-",
                "-/**",
                "- * Simple logger that delegates to log4j2 logging",
                "- *",
                "- * @deprecated since 2.5",
                "- */",
                "-@Deprecated",
                "-public class Log4j2Logger implements Logger {",
                "-",
                "-    private org.apache.logging.log4j.Logger log;",
                "-",
                "-    public Log4j2Logger(org.apache.logging.log4j.Logger log) {",
                "-        this.log = log;",
                "-    }",
                "-",
                "-    public void error(String msg, String... args) {",
                "-        log.error(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void error(String msg, Object... args) {",
                "-        log.error(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void error(String msg, Throwable ex, String... args) {",
                "-        log.error(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-",
                "-    public void info(String msg, String... args) {",
                "-        log.info(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void info(String msg, Throwable ex, String... args) {",
                "-        log.info(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-",
                "-    public boolean isInfoEnabled() {",
                "-        return log.isInfoEnabled();",
                "-    }",
                "-",
                "-    public void warn(String msg, String... args) {",
                "-        log.warn(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void warn(String msg, Object... args) {",
                "-        log.warn(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void warn(String msg, Throwable ex, String... args) {",
                "-        log.warn(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-    ",
                "-    public boolean isDebugEnabled() {",
                "-        return log.isDebugEnabled();",
                "-    }",
                "-    ",
                "-    public void debug(String msg, String... args) {",
                "-        log.debug(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void debug(String msg, Object... args) {",
                "-        log.debug(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void debug(String msg, Throwable ex, String... args) {",
                "-        log.debug(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-    ",
                "-    public boolean isTraceEnabled() {",
                "-        return log.isTraceEnabled();",
                "-    }",
                "-    ",
                "-    public void trace(String msg, String... args) {",
                "-        log.trace(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void trace(String msg, Object... args) {",
                "-        log.trace(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void trace(String msg, Throwable ex, String... args) {",
                "-        log.trace(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-",
                "-",
                "-    public void fatal(String msg, String... args) {",
                "-        log.fatal(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void fatal(String msg, Throwable ex, String... args) {",
                "-        log.fatal(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-",
                "-    public boolean isErrorEnabled() {",
                "-        return log.isErrorEnabled();",
                "-    }",
                "-",
                "-    public boolean isFatalEnabled() {",
                "-        return log.isFatalEnabled();",
                "-    }",
                "-",
                "-    public boolean isWarnEnabled() {",
                "-        return log.isWarnEnabled();",
                "-    }",
                "-",
                "-}",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/logging/log4j2/Log4j2LoggerFactory.java b/core/src/main/java/com/opensymphony/xwork2/util/logging/log4j2/Log4j2LoggerFactory.java",
                "deleted file mode 100644",
                "index 7b9eed1fc..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/logging/log4j2/Log4j2LoggerFactory.java",
                "+++ /dev/null",
                "@@ -1,47 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package com.opensymphony.xwork2.util.logging.log4j2;",
                "-",
                "-import com.opensymphony.xwork2.util.logging.Logger;",
                "-import com.opensymphony.xwork2.util.logging.LoggerFactory;",
                "-",
                "-/**",
                "- * Creates log4j2-logging-backed loggers",
                "- *",
                "- * You can use the same to explicit tell the framework which implementation to use and don't depend on class discovery:",
                "- * <pre>",
                "- *   -Dxwork.loggerFactory=com.opensymphony.xwork2.util.logging.log4j2.Log4j2LoggerFactory",
                "- * </pre>",
                "- *",
                "- * @deprecated since 2.5",
                "- */",
                "-@Deprecated",
                "-public class Log4j2LoggerFactory extends LoggerFactory {",
                "-",
                "-    @Override",
                "-    protected Logger getLoggerImpl(Class<?> cls) {",
                "-        return new Log4j2Logger(org.apache.logging.log4j.LogManager.getLogger(cls));",
                "-    }",
                "-",
                "-    @Override",
                "-    protected Logger getLoggerImpl(String name) {",
                "-        return new Log4j2Logger(org.apache.logging.log4j.LogManager.getLogger(name));",
                "-    }",
                "-",
                "-}",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/logging/slf4j/Slf4jLogger.java b/core/src/main/java/com/opensymphony/xwork2/util/logging/slf4j/Slf4jLogger.java",
                "deleted file mode 100644",
                "index 49124d1a1..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/logging/slf4j/Slf4jLogger.java",
                "+++ /dev/null",
                "@@ -1,128 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package com.opensymphony.xwork2.util.logging.slf4j;",
                "-",
                "-import com.opensymphony.xwork2.util.logging.Logger;",
                "-import com.opensymphony.xwork2.util.logging.LoggerUtils;",
                "-",
                "-/**",
                "- * Simple logger that delegates to slf4j logging",
                "- *",
                "- * @deprecated since 2.5",
                "- */",
                "-@Deprecated",
                "-public class Slf4jLogger implements Logger {",
                "-    ",
                "-    private org.slf4j.Logger log;",
                "-    ",
                "-    public Slf4jLogger(org.slf4j.Logger log) {",
                "-        this.log = log;",
                "-    }",
                "-",
                "-    public void error(String msg, String... args) {",
                "-        log.error(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void error(String msg, Object... args) {",
                "-        log.error(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void error(String msg, Throwable ex, String... args) {",
                "-        log.error(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-",
                "-    public void info(String msg, String... args) {",
                "-        log.info(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void info(String msg, Throwable ex, String... args) {",
                "-        log.info(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-",
                "-    public boolean isInfoEnabled() {",
                "-        return log.isInfoEnabled();",
                "-    }",
                "-",
                "-    public void warn(String msg, String... args) {",
                "-        log.warn(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void warn(String msg, Object... args) {",
                "-        log.warn(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void warn(String msg, Throwable ex, String... args) {",
                "-        log.warn(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-    ",
                "-    public boolean isDebugEnabled() {",
                "-        return log.isDebugEnabled();",
                "-    }",
                "-    ",
                "-    public void debug(String msg, String... args) {",
                "-        log.debug(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void debug(String msg, Object... args) {",
                "-        log.debug(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void debug(String msg, Throwable ex, String... args) {",
                "-        log.debug(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-    ",
                "-    public boolean isTraceEnabled() {",
                "-        return log.isTraceEnabled();",
                "-    }",
                "-    ",
                "-    public void trace(String msg, String... args) {",
                "-        log.trace(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void trace(String msg, Object... args) {",
                "-        log.trace(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void trace(String msg, Throwable ex, String... args) {",
                "-        log.trace(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-",
                "-",
                "-    public void fatal(String msg, String... args) {",
                "-        log.error(LoggerUtils.format(msg, args));",
                "-    }",
                "-",
                "-    public void fatal(String msg, Throwable ex, String... args) {",
                "-        log.error(LoggerUtils.format(msg, args), ex);",
                "-    }",
                "-",
                "-    public boolean isErrorEnabled() {",
                "-        return log.isErrorEnabled();",
                "-    }",
                "-",
                "-    /** Fatal is not support by Slf4j */",
                "-    public boolean isFatalEnabled() {",
                "-        return log.isErrorEnabled();",
                "-    }",
                "-",
                "-    public boolean isWarnEnabled() {",
                "-        return log.isWarnEnabled();",
                "-    }",
                "-",
                "-}",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/logging/slf4j/Slf4jLoggerFactory.java b/core/src/main/java/com/opensymphony/xwork2/util/logging/slf4j/Slf4jLoggerFactory.java",
                "deleted file mode 100644",
                "index ef267429c..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/logging/slf4j/Slf4jLoggerFactory.java",
                "+++ /dev/null",
                "@@ -1,47 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package com.opensymphony.xwork2.util.logging.slf4j;",
                "-",
                "-import com.opensymphony.xwork2.util.logging.Logger;",
                "-import com.opensymphony.xwork2.util.logging.LoggerFactory;",
                "-",
                "-/**",
                "- * Creates slf4j-logging-backed loggers",
                "- *",
                "- * You can use the same to explicit tell the framework which implementation to use and don't depend on class discovery:",
                "- * <pre>",
                "- *   -Dxwork.loggerFactory=com.opensymphony.xwork2.util.logging.slf4j.Slf4jLoggerFactory",
                "- * </pre>",
                "- *",
                "- * @deprecated since 2.5",
                "- */",
                "-@Deprecated",
                "-public class Slf4jLoggerFactory extends LoggerFactory {",
                "-",
                "-    @Override",
                "-    protected Logger getLoggerImpl(Class<?> cls) {",
                "-        return new Slf4jLogger(org.slf4j.LoggerFactory.getLogger(cls));",
                "-    }",
                "-",
                "-    @Override",
                "-    protected Logger getLoggerImpl(String name) {",
                "-        return new Slf4jLogger(org.slf4j.LoggerFactory.getLogger(name));",
                "-    }",
                "-",
                "-}",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/InitOperations.java b/core/src/main/java/org/apache/struts2/dispatcher/InitOperations.java",
                "index c98b61771..55f648177 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/InitOperations.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/InitOperations.java",
                "@@ -22,3 +22,2 @@ import com.opensymphony.xwork2.ActionContext;",
                " import com.opensymphony.xwork2.util.ClassLoaderUtil;",
                "-import com.opensymphony.xwork2.util.logging.LoggerFactory;",
                " import org.apache.struts2.StrutsConstants;",
                "@@ -36,29 +35,2 @@ public class InitOperations {",
                "-    /**",
                "-     * Initializes the internal Struts logging",
                "-     *",
                "-     * @param filterConfig host configuration",
                "-     * @deprecated since 2.5",
                "-     */",
                "-    @Deprecated",
                "-    public void initLogging( HostConfig filterConfig ) {",
                "-        String factoryName = filterConfig.getInitParameter(\"loggerFactory\");",
                "-        if (factoryName != null) {",
                "-            try {",
                "-                Class cls = ClassLoaderUtil.loadClass(factoryName, this.getClass());",
                "-                LoggerFactory fac = (LoggerFactory) cls.newInstance();",
                "-                LoggerFactory.setLoggerFactory(fac);",
                "-            } catch ( InstantiationException e ) {",
                "-                System.err.println(\"Unable to instantiate logger factory: \" + factoryName + \", using default\");",
                "-                e.printStackTrace();",
                "-            } catch ( IllegalAccessException e ) {",
                "-                System.err.println(\"Unable to access logger factory: \" + factoryName + \", using default\");",
                "-                e.printStackTrace();",
                "-            } catch ( ClassNotFoundException e ) {",
                "-                System.err.println(\"Unable to locate logger factory class: \" + factoryName + \", using default\");",
                "-                e.printStackTrace();",
                "-            }",
                "-        }",
                "-    }",
                "-",
                "     /**",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/filter/StrutsPrepareAndExecuteFilter.java b/core/src/main/java/org/apache/struts2/dispatcher/filter/StrutsPrepareAndExecuteFilter.java",
                "index 9f2f2bfd6..73f5860ec 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/filter/StrutsPrepareAndExecuteFilter.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/filter/StrutsPrepareAndExecuteFilter.java",
                "@@ -59,3 +59,2 @@ public class StrutsPrepareAndExecuteFilter implements StrutsStatics, Filter {",
                "             FilterHostConfig config = new FilterHostConfig(filterConfig);",
                "-            init.initLogging(config);",
                "             dispatcher = init.initDispatcher(config);",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/filter/StrutsPrepareFilter.java b/core/src/main/java/org/apache/struts2/dispatcher/filter/StrutsPrepareFilter.java",
                "index 888ecacfd..0332fa342 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/filter/StrutsPrepareFilter.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/filter/StrutsPrepareFilter.java",
                "@@ -52,3 +52,2 @@ public class StrutsPrepareFilter implements StrutsStatics, Filter {",
                "             FilterHostConfig config = new FilterHostConfig(filterConfig);",
                "-            init.initLogging(config);",
                "             dispatcher = init.initDispatcher(config);",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/listener/StrutsListener.java b/core/src/main/java/org/apache/struts2/dispatcher/listener/StrutsListener.java",
                "index ab91debfe..bf8398406 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/listener/StrutsListener.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/listener/StrutsListener.java",
                "@@ -42,3 +42,2 @@ public class StrutsListener implements ServletContextListener {",
                "             ListenerHostConfig config = new ListenerHostConfig(sce.getServletContext());",
                "-            init.initLogging(config);",
                "             dispatcher = init.initDispatcher(config);",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/servlet/StrutsServlet.java b/core/src/main/java/org/apache/struts2/dispatcher/servlet/StrutsServlet.java",
                "index 1070d4569..02132fc93 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/servlet/StrutsServlet.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/servlet/StrutsServlet.java",
                "@@ -51,3 +51,2 @@ public class StrutsServlet extends HttpServlet {",
                "             ServletHostConfig config = new ServletHostConfig(filterConfig);",
                "-            init.initLogging(config);",
                "             dispatcher = init.initDispatcher(config);",
                "diff --git a/plugins/junit/src/main/java/org/apache/struts2/StrutsJUnit4TestCase.java b/plugins/junit/src/main/java/org/apache/struts2/StrutsJUnit4TestCase.java",
                "index 9a917e3cf..153fcf66c 100644",
                "--- a/plugins/junit/src/main/java/org/apache/struts2/StrutsJUnit4TestCase.java",
                "+++ b/plugins/junit/src/main/java/org/apache/struts2/StrutsJUnit4TestCase.java",
                "@@ -28,4 +28,2 @@ import com.opensymphony.xwork2.interceptor.annotations.After;",
                " import com.opensymphony.xwork2.interceptor.annotations.Before;",
                "-import com.opensymphony.xwork2.util.logging.LoggerFactory;",
                "-import com.opensymphony.xwork2.util.logging.jdk.JdkLoggerFactory;",
                " import org.apache.commons.lang3.StringUtils;",
                "@@ -53,3 +51,2 @@ import java.util.HashMap;",
                " import java.util.Map;",
                "-import java.util.logging.*;",
                "@@ -69,31 +66,2 @@ public abstract class StrutsJUnit4TestCase<T> extends XWorkJUnit4TestCase {",
                "-    static {",
                "-        ConsoleHandler handler = new ConsoleHandler();",
                "-        final SimpleDateFormat df = new SimpleDateFormat(\"mm:ss.SSS\");",
                "-        Formatter formatter = new Formatter() {",
                "-            @Override",
                "-            public String format(LogRecord record) {",
                "-                StringBuilder sb = new StringBuilder();",
                "-                sb.append(record.getLevel());",
                "-                sb.append(':');",
                "-                for (int x = 9 - record.getLevel().toString().length(); x > 0; x--) {",
                "-                    sb.append(' ');",
                "-                }",
                "-                sb.append('[');",
                "-                sb.append(df.format(new Date(record.getMillis())));",
                "-                sb.append(\"] \");",
                "-                sb.append(formatMessage(record));",
                "-                sb.append('\\n');",
                "-                return sb.toString();",
                "-            }",
                "-        };",
                "-        handler.setFormatter(formatter);",
                "-        Logger logger = Logger.getLogger(\"\");",
                "-        if (logger.getHandlers().length > 0)",
                "-            logger.removeHandler(logger.getHandlers()[0]);",
                "-        logger.addHandler(handler);",
                "-        logger.setLevel(Level.WARNING);",
                "-        LoggerFactory.setLoggerFactory(new JdkLoggerFactory());",
                "-    }",
                "-",
                "     /**",
                "diff --git a/plugins/junit/src/main/java/org/apache/struts2/StrutsTestCase.java b/plugins/junit/src/main/java/org/apache/struts2/StrutsTestCase.java",
                "index f28c286f9..c72623c3a 100644",
                "--- a/plugins/junit/src/main/java/org/apache/struts2/StrutsTestCase.java",
                "+++ b/plugins/junit/src/main/java/org/apache/struts2/StrutsTestCase.java",
                "@@ -25,5 +25,2 @@ import com.opensymphony.xwork2.XWorkTestCase;",
                " import com.opensymphony.xwork2.config.Configuration;",
                "-import com.opensymphony.xwork2.util.logging.LoggerFactory;",
                "-import org.apache.logging.log4j.LogManager;",
                "-import com.opensymphony.xwork2.util.logging.jdk.JdkLoggerFactory;",
                " import org.apache.struts2.dispatcher.Dispatcher;",
                "@@ -48,7 +45,2 @@ import java.util.HashMap;",
                " import java.util.Map;",
                "-import java.util.logging.ConsoleHandler;",
                "-import java.util.logging.Formatter;",
                "-import java.util.logging.Level;",
                "-import java.util.logging.LogRecord;",
                "-import java.util.logging.Logger;",
                "@@ -67,33 +59,2 @@ public abstract class StrutsTestCase extends XWorkTestCase {",
                "-    static {",
                "-        ConsoleHandler handler = new ConsoleHandler();",
                "-        final SimpleDateFormat df = new SimpleDateFormat(\"mm:ss.SSS\");",
                "-        Formatter formatter = new Formatter() {",
                "-            @Override",
                "-            public String format(LogRecord record) {",
                "-                StringBuilder sb = new StringBuilder();",
                "-                sb.append(record.getLevel());",
                "-                sb.append(':');",
                "-                for (int x = 9 - record.getLevel().toString().length(); x > 0; x--) {",
                "-                    sb.append(' ');",
                "-                }",
                "-                sb.append('[');",
                "-                sb.append(df.format(new Date(record.getMillis())));",
                "-                sb.append(\"] \");",
                "-                sb.append(formatMessage(record));",
                "-                sb.append('\\n');",
                "-                return sb.toString();",
                "-            }",
                "-        };",
                "-        handler.setFormatter(formatter);",
                "-        Logger logger = Logger.getLogger(\"\");",
                "-        if (logger.getHandlers().length > 0)",
                "-            logger.removeHandler(logger.getHandlers()[0]);",
                "-        logger.addHandler(handler);",
                "-        logger.setLevel(Level.WARNING);",
                "-        LoggerFactory.setLoggerFactory(new JdkLoggerFactory());",
                "-    }",
                "-",
                "-    private static final com.opensymphony.xwork2.util.logging.Logger LOG = LoggerFactory.getLogger(StrutsTestCase.class);",
                "-",
                "     /**"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/util/logging/Logger.java",
                "core/src/main/java/com/opensymphony/xwork2/util/logging/LoggerFactory.java",
                "core/src/main/java/com/opensymphony/xwork2/util/logging/LoggerUtils.java",
                "core/src/main/java/com/opensymphony/xwork2/util/logging/commons/CommonsLogger.java",
                "core/src/main/java/com/opensymphony/xwork2/util/logging/commons/CommonsLoggerFactory.java",
                "core/src/main/java/com/opensymphony/xwork2/util/logging/jdk/JdkLogger.java",
                "core/src/main/java/com/opensymphony/xwork2/util/logging/jdk/JdkLoggerFactory.java",
                "core/src/main/java/com/opensymphony/xwork2/util/logging/log4j2/Log4j2Logger.java",
                "core/src/main/java/com/opensymphony/xwork2/util/logging/log4j2/Log4j2LoggerFactory.java",
                "core/src/main/java/com/opensymphony/xwork2/util/logging/slf4j/Slf4jLogger.java",
                "core/src/main/java/com/opensymphony/xwork2/util/logging/slf4j/Slf4jLoggerFactory.java",
                "core/src/main/java/org/apache/struts2/dispatcher/InitOperations.java",
                "core/src/main/java/org/apache/struts2/dispatcher/filter/StrutsPrepareAndExecuteFilter.java",
                "core/src/main/java/org/apache/struts2/dispatcher/filter/StrutsPrepareFilter.java",
                "core/src/main/java/org/apache/struts2/dispatcher/listener/StrutsListener.java",
                "core/src/main/java/org/apache/struts2/dispatcher/servlet/StrutsServlet.java",
                "plugins/junit/src/main/java/org/apache/struts2/StrutsJUnit4TestCase.java",
                "plugins/junit/src/main/java/org/apache/struts2/StrutsTestCase.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4763": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4763",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b37c09e4f199dbfecfc44278cdf809f7a3ac077f",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526653870,
            "hunks": 8,
            "message": "honor .properties file before the generic parametrics See also WW-4932",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java",
                "index c375ce147..2ef75e88c 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java",
                "@@ -77,7 +77,7 @@ public class DefaultObjectTypeDeterminer implements ObjectTypeDeterminer {",
                "      * Determines the key class by looking for the value of @Key annotation for the given class.",
                "-     * If no annotation is found, the key class is determined by using the generic parametrics.",
                "-     *",
                "-     * As fallback, it determines the key class by looking for the value of Key_${property} in the properties",
                "+     * If no annotation is found, it determines the key class by looking for the value of Key_${property} in the properties",
                "      * file for the given class.",
                "      *",
                "+     * As fallback, the key class is determined by using the generic parametrics.",
                "+     *",
                "      * @param parentClass the Class which contains as a property the Map or Collection we are finding the key for.",
                "@@ -91,3 +91,3 @@ public class DefaultObjectTypeDeterminer implements ObjectTypeDeterminer {",
                "         }",
                "-        Class clazz = getClass(parentClass, property, false);",
                "+        Class clazz = (Class) xworkConverter.getConverter(parentClass, KEY_PREFIX + property);",
                "         if (clazz != null) {",
                "@@ -95,3 +95,3 @@ public class DefaultObjectTypeDeterminer implements ObjectTypeDeterminer {",
                "         }",
                "-        return (Class) xworkConverter.getConverter(parentClass, KEY_PREFIX + property);",
                "+        return getClass(parentClass, property, false);",
                "     }",
                "@@ -101,7 +101,7 @@ public class DefaultObjectTypeDeterminer implements ObjectTypeDeterminer {",
                "      * class.",
                "-     * If no annotation is found, the element class is determined by using the generic parametrics.",
                "-     *",
                "-     * As fallback, it determines the key class by looking for the value of Element_${property} in the properties",
                "+     * If no annotation is found, it determines the key class by looking for the value of Element_${property} in the properties",
                "      * file for the given class. Also looks for the deprecated Collection_${property}",
                "      *",
                "+     * As fallback, the element class is determined by using the generic parametrics.",
                "+     *",
                "      * @param parentClass the Class which contains as a property the Map or Collection we are finding the key for.",
                "@@ -115,7 +115,3 @@ public class DefaultObjectTypeDeterminer implements ObjectTypeDeterminer {",
                "         }",
                "-        Class clazz = getClass(parentClass, property, true);",
                "-        if (clazz != null) {",
                "-            return clazz;",
                "-        }",
                "-        clazz = (Class) xworkConverter.getConverter(parentClass, ELEMENT_PREFIX + property);",
                "+        Class clazz = (Class) xworkConverter.getConverter(parentClass, ELEMENT_PREFIX + property);",
                "         if (clazz == null) {",
                "@@ -126,2 +122,6 @@ public class DefaultObjectTypeDeterminer implements ObjectTypeDeterminer {",
                "         }",
                "+        if (clazz != null) {",
                "+            return clazz;",
                "+        }",
                "+        clazz = getClass(parentClass, property, true);",
                "         return clazz;"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4932": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4932",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a75eddb5154f9705bd2bac39f704512c8453e0b9",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1529566246,
            "hunks": 3,
            "message": "delete redundant code for performance",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java b/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "index 1e4ecc8a0..0c587400f 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "@@ -148,4 +148,3 @@ public class SecurityMemberAccess extends DefaultMemberAccess {",
                "         for (String packageName: excludedPackageNames) {",
                "-            if (targetPackageName.startsWith(packageName) || targetPackageName.equals(packageName)",
                "-                    || memberPackageName.startsWith(packageName) || memberPackageName.equals(packageName)) {",
                "+            if (targetPackageName.startsWith(packageName) || memberPackageName.startsWith(packageName)) {",
                "                 return true;",
                "diff --git a/core/src/main/resources/struts-default.xml b/core/src/main/resources/struts-default.xml",
                "index 4882804e0..9d723903f 100644",
                "--- a/core/src/main/resources/struts-default.xml",
                "+++ b/core/src/main/resources/struts-default.xml",
                "@@ -47,7 +47,2 @@",
                "                 java.lang.ProcessBuilder,",
                "-                ognl.OgnlContext,",
                "-                ognl.ClassResolver,",
                "-                ognl.TypeConverter,",
                "-                ognl.MemberAccess,",
                "-                ognl.DefaultMemberAccess,",
                "                 com.opensymphony.xwork2.ActionContext\" />",
                "@@ -70,3 +65,4 @@",
                "                 com.opensymphony.xwork2.ognl.,",
                "-                com.opensymphony.xwork2.security.\" />",
                "+                com.opensymphony.xwork2.security.,",
                "+                com.opensymphony.xwork2.util.\" />"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "core/src/main/resources/struts-default.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "c59f294fb98d9cb7fb82fd7124d5d8df0ab2e252"
                ]
            ],
            "tags": [
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: code",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "34ea4c14010b179ff8d27b8afe213f6a26e1475c",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1527092747,
            "hunks": 1,
            "message": "update commons-beanutils dependency to version 1.9.3 Issue: - WW-4926",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index d91af3bdf..cd390bf0e 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -871,3 +871,3 @@",
                "                 <artifactId>commons-beanutils</artifactId>",
                "-                <version>1.9.2</version>",
                "+                <version>1.9.3</version>",
                "             </dependency>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4926": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4926",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cdcfccafe866d916d069c5e9cf4c852d7afd2e90",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1527166990,
            "hunks": 62,
            "message": "remove deprecated XWork constants Replaces all occurences of XWork constants with StrutsConstants Issue: - WW-4792",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/XWorkConstants.java b/core/src/main/java/com/opensymphony/xwork2/XWorkConstants.java",
                "deleted file mode 100644",
                "index cc6c1bdce..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/XWorkConstants.java",
                "+++ /dev/null",
                "@@ -1,66 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package com.opensymphony.xwork2;",
                "-",
                "-/**",
                "- * Constants used across framework",
                "- */",
                "-@Deprecated",
                "-public final class XWorkConstants {",
                "-",
                "-    @Deprecated",
                "-    public static final String COLLECTION_CONVERTER = \"collectionConverter\";",
                "-    @Deprecated",
                "-    public static final String DATE_CONVERTER = \"dateConverter\";",
                "-    @Deprecated",
                "-    public static final String NUMBER_CONVERTER = \"numberConverter\";",
                "-    @Deprecated",
                "-    public static final String STRING_CONVERTER = \"stringConverter\";",
                "-    @Deprecated",
                "-    public static final String ARRAY_CONVERTER = \"arrayConverter\";",
                "-    @Deprecated",
                "-    public static final String DEV_MODE = \"devMode\";",
                "-    @Deprecated",
                "-    public static final String LOG_MISSING_PROPERTIES = \"logMissingProperties\";",
                "-    @Deprecated",
                "-    public static final String ENABLE_OGNL_EXPRESSION_CACHE = \"enableOGNLExpressionCache\";",
                "-    @Deprecated",
                "-    public static final String ENABLE_OGNL_EVAL_EXPRESSION = \"enableOGNLEvalExpression\";",
                "-    @Deprecated",
                "-    public static final String RELOAD_XML_CONFIGURATION = \"reloadXmlConfiguration\";",
                "-    @Deprecated",
                "-    public static final String ALLOW_STATIC_METHOD_ACCESS = \"allowStaticMethodAccess\";",
                "-    @Deprecated",
                "-    public static final String XWORK_LOGGER_FACTORY = \"xwork.loggerFactory\";",
                "-    @Deprecated",
                "-    public static final String OGNL_EXCLUDED_CLASSES = \"ognlExcludedClasses\";",
                "-    @Deprecated",
                "-    public static final String OGNL_EXCLUDED_PACKAGE_NAME_PATTERNS = \"ognlExcludedPackageNamePatterns\";",
                "-    @Deprecated",
                "-    public static final String OGNL_EXCLUDED_PACKAGE_NAMES = \"ognlExcludedPackageNames\";",
                "-    @Deprecated",
                "-    public static final String ADDITIONAL_EXCLUDED_PATTERNS = \"additionalExcludedPatterns\";",
                "-    @Deprecated",
                "-    public static final String ADDITIONAL_ACCEPTED_PATTERNS = \"additionalAcceptedPatterns\";",
                "-    @Deprecated",
                "-    public static final String OVERRIDE_EXCLUDED_PATTERNS = \"overrideExcludedPatterns\";",
                "-    @Deprecated",
                "-    public static final String OVERRIDE_ACCEPTED_PATTERNS = \"overrideAcceptedPatterns\";",
                "-",
                "-}",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/config/ConfigurationManager.java b/core/src/main/java/com/opensymphony/xwork2/config/ConfigurationManager.java",
                "index 24ebb29bf..067a1f995 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/config/ConfigurationManager.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/config/ConfigurationManager.java",
                "@@ -20,3 +20,2 @@ package com.opensymphony.xwork2.config;",
                "-import com.opensymphony.xwork2.XWorkConstants;",
                " import com.opensymphony.xwork2.config.impl.DefaultConfiguration;",
                "@@ -26,2 +25,3 @@ import org.apache.logging.log4j.LogManager;",
                " import org.apache.logging.log4j.Logger;",
                "+import org.apache.struts2.StrutsConstants;",
                "@@ -189,6 +189,6 @@ public class ConfigurationManager {",
                "     private void updateReloadConfigsFlag() {",
                "-        reloadConfigs = Boolean.parseBoolean(configuration.getContainer().getInstance(String.class, XWorkConstants.RELOAD_XML_CONFIGURATION));",
                "+        reloadConfigs = Boolean.parseBoolean(configuration.getContainer().getInstance(String.class, StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD));",
                "         if (LOG.isDebugEnabled()) {",
                "             LOG.debug(\"Updating [{}], current value is [{}], new value [{}]\",",
                "-                    XWorkConstants.RELOAD_XML_CONFIGURATION, String.valueOf(reloadConfigs), String.valueOf(reloadConfigs));",
                "+                    StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD, String.valueOf(reloadConfigs), String.valueOf(reloadConfigs));",
                "         }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java b/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java",
                "index 44746771c..fca8bf971 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java",
                "@@ -263,7 +263,7 @@ public class DefaultConfiguration implements Configuration {",
                "         builder.factory(XWorkBasicConverter.class, Scope.SINGLETON);",
                "-        builder.factory(TypeConverter.class, XWorkConstants.COLLECTION_CONVERTER,  CollectionConverter.class, Scope.SINGLETON);",
                "-        builder.factory(TypeConverter.class, XWorkConstants.ARRAY_CONVERTER, ArrayConverter.class, Scope.SINGLETON);",
                "-        builder.factory(TypeConverter.class, XWorkConstants.DATE_CONVERTER, DateConverter.class, Scope.SINGLETON);",
                "-        builder.factory(TypeConverter.class, XWorkConstants.NUMBER_CONVERTER,  NumberConverter.class, Scope.SINGLETON);",
                "-        builder.factory(TypeConverter.class, XWorkConstants.STRING_CONVERTER, StringConverter.class, Scope.SINGLETON);",
                "+        builder.factory(TypeConverter.class, StrutsConstants.STRUTS_CONVERTER_COLLECTION,  CollectionConverter.class, Scope.SINGLETON);",
                "+        builder.factory(TypeConverter.class, StrutsConstants.STRUTS_CONVERTER_ARRAY, ArrayConverter.class, Scope.SINGLETON);",
                "+        builder.factory(TypeConverter.class, StrutsConstants.STRUTS_CONVERTER_DATE, DateConverter.class, Scope.SINGLETON);",
                "+        builder.factory(TypeConverter.class, StrutsConstants.STRUTS_CONVERTER_NUMBER,  NumberConverter.class, Scope.SINGLETON);",
                "+        builder.factory(TypeConverter.class, StrutsConstants.STRUTS_CONVERTER_STRING, StringConverter.class, Scope.SINGLETON);",
                "@@ -283,8 +283,7 @@ public class DefaultConfiguration implements Configuration {",
                "-        builder.constant(XWorkConstants.DEV_MODE, \"false\");",
                "         builder.constant(StrutsConstants.STRUTS_DEVMODE, \"false\");",
                "-        builder.constant(XWorkConstants.LOG_MISSING_PROPERTIES, \"false\");",
                "-        builder.constant(XWorkConstants.ENABLE_OGNL_EVAL_EXPRESSION, \"false\");",
                "-        builder.constant(XWorkConstants.ENABLE_OGNL_EXPRESSION_CACHE, \"true\");",
                "-        builder.constant(XWorkConstants.RELOAD_XML_CONFIGURATION, \"false\");",
                "+        builder.constant(StrutsConstants.STRUTS_LOG_MISSING_PROPERTIES, \"false\");",
                "+        builder.constant(StrutsConstants.STRUTS_ENABLE_OGNL_EXPRESSION_CACHE, \"false\");",
                "+        builder.constant(StrutsConstants.STRUTS_ENABLE_OGNL_EVAL_EXPRESSION, \"true\");",
                "+        builder.constant(StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD, \"false\");",
                "         builder.constant(StrutsConstants.STRUTS_I18N_RELOAD, \"false\");",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/config/impl/MockConfiguration.java b/core/src/main/java/com/opensymphony/xwork2/config/impl/MockConfiguration.java",
                "index 397ae34a9..b21dc45cd 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/config/impl/MockConfiguration.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/config/impl/MockConfiguration.java",
                "@@ -20,3 +20,2 @@ package com.opensymphony.xwork2.config.impl;",
                "-import com.opensymphony.xwork2.XWorkConstants;",
                " import com.opensymphony.xwork2.config.*;",
                "@@ -54,5 +53,5 @@ public class MockConfiguration implements Configuration {",
                "         new XWorkConfigurationProvider().register(builder, props);",
                "-        builder.constant(XWorkConstants.DEV_MODE, \"false\");",
                "-        builder.constant(XWorkConstants.RELOAD_XML_CONFIGURATION, \"true\");",
                "-        builder.constant(XWorkConstants.ENABLE_OGNL_EXPRESSION_CACHE, \"true\");",
                "+        builder.constant(StrutsConstants.STRUTS_DEVMODE, \"false\");",
                "+        builder.constant(StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD, \"true\");",
                "+        builder.constant(StrutsConstants.STRUTS_ENABLE_OGNL_EXPRESSION_CACHE, \"true\");",
                "         builder.constant(StrutsConstants.STRUTS_ENABLE_DYNAMIC_METHOD_INVOCATION, \"false\");",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/config/providers/XWorkConfigurationProvider.java b/core/src/main/java/com/opensymphony/xwork2/config/providers/XWorkConfigurationProvider.java",
                "index 94c766cac..8d35ea04a 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/config/providers/XWorkConfigurationProvider.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/config/providers/XWorkConfigurationProvider.java",
                "@@ -41,3 +41,2 @@ import com.opensymphony.xwork2.TextProvider;",
                " import com.opensymphony.xwork2.UnknownHandlerManager;",
                "-import com.opensymphony.xwork2.XWorkConstants;",
                " import com.opensymphony.xwork2.config.Configuration;",
                "@@ -223,7 +222,6 @@ public class XWorkConfigurationProvider implements ConfigurationProvider {",
                "         props.setProperty(StrutsConstants.STRUTS_DEVMODE, Boolean.FALSE.toString());",
                "-        props.setProperty(XWorkConstants.DEV_MODE, Boolean.FALSE.toString());",
                "-        props.setProperty(XWorkConstants.LOG_MISSING_PROPERTIES, Boolean.FALSE.toString());",
                "-        props.setProperty(XWorkConstants.ENABLE_OGNL_EXPRESSION_CACHE, Boolean.TRUE.toString());",
                "-        props.setProperty(XWorkConstants.ENABLE_OGNL_EVAL_EXPRESSION, Boolean.FALSE.toString());",
                "-        props.setProperty(XWorkConstants.RELOAD_XML_CONFIGURATION, Boolean.FALSE.toString());",
                "+        props.setProperty(StrutsConstants.STRUTS_LOG_MISSING_PROPERTIES, Boolean.FALSE.toString());",
                "+        props.setProperty(StrutsConstants.STRUTS_ENABLE_OGNL_EXPRESSION_CACHE, Boolean.TRUE.toString());",
                "+        props.setProperty(StrutsConstants.STRUTS_ENABLE_OGNL_EVAL_EXPRESSION, Boolean.FALSE.toString());",
                "+        props.setProperty(StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD, Boolean.FALSE.toString());",
                "     }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java",
                "index 7baa5b94b..973c16097 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java",
                "@@ -20,3 +20,2 @@ package com.opensymphony.xwork2.conversion.impl;",
                "-import com.opensymphony.xwork2.XWorkConstants;",
                " import com.opensymphony.xwork2.XWorkException;",
                "@@ -25,2 +24,3 @@ import com.opensymphony.xwork2.inject.Container;",
                " import com.opensymphony.xwork2.inject.Inject;",
                "+import org.apache.struts2.StrutsConstants;",
                "@@ -181,3 +181,3 @@ public class XWorkBasicConverter extends DefaultTypeConverter {",
                "         if (converter == null) {",
                "-            throw new XWorkException(\"TypeConverter with name [#0] must be registered first!\", XWorkConstants.COLLECTION_CONVERTER);",
                "+            throw new XWorkException(\"TypeConverter with name [#0] must be registered first!\", StrutsConstants.STRUTS_CONVERTER_COLLECTION);",
                "         }",
                "@@ -189,3 +189,3 @@ public class XWorkBasicConverter extends DefaultTypeConverter {",
                "         if (converter == null) {",
                "-            throw new XWorkException(\"TypeConverter with name [#0] must be registered first!\", XWorkConstants.ARRAY_CONVERTER);",
                "+            throw new XWorkException(\"TypeConverter with name [#0] must be registered first!\", StrutsConstants.STRUTS_CONVERTER_ARRAY);",
                "         }",
                "@@ -197,3 +197,3 @@ public class XWorkBasicConverter extends DefaultTypeConverter {",
                "         if (converter == null) {",
                "-            throw new XWorkException(\"TypeConverter with name [#0] must be registered first!\", XWorkConstants.DATE_CONVERTER);",
                "+            throw new XWorkException(\"TypeConverter with name [#0] must be registered first!\", StrutsConstants.STRUTS_CONVERTER_DATE);",
                "         }",
                "@@ -205,3 +205,3 @@ public class XWorkBasicConverter extends DefaultTypeConverter {",
                "         if (converter == null) {",
                "-            throw new XWorkException(\"TypeConverter with name [#0] must be registered first!\", XWorkConstants.NUMBER_CONVERTER);",
                "+            throw new XWorkException(\"TypeConverter with name [#0] must be registered first!\", StrutsConstants.STRUTS_CONVERTER_NUMBER);",
                "         }",
                "@@ -213,3 +213,3 @@ public class XWorkBasicConverter extends DefaultTypeConverter {",
                "         if (converter == null) {",
                "-            throw new XWorkException(\"TypeConverter with name [#0] must be registered first!\", XWorkConstants.STRING_CONVERTER);",
                "+            throw new XWorkException(\"TypeConverter with name [#0] must be registered first!\", StrutsConstants.STRUTS_CONVERTER_STRING);",
                "         }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java",
                "index 96405ff08..2a8df11cb 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java",
                "@@ -30,2 +30,3 @@ import org.apache.logging.log4j.LogManager;",
                " import org.apache.logging.log4j.Logger;",
                "+import org.apache.struts2.StrutsConstants;",
                "@@ -171,3 +172,3 @@ public class XWorkConverter extends DefaultTypeConverter {",
                "-    @Inject(value = XWorkConstants.RELOAD_XML_CONFIGURATION, required = false)",
                "+    @Inject(value = StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD, required = false)",
                "     public void setReloadingConfigs(String reloadingConfigs) {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/interceptor/AliasInterceptor.java b/core/src/main/java/com/opensymphony/xwork2/interceptor/AliasInterceptor.java",
                "index b2d9dbdbe..bc156e44a 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/interceptor/AliasInterceptor.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/interceptor/AliasInterceptor.java",
                "@@ -22,3 +22,2 @@ import com.opensymphony.xwork2.ActionContext;",
                " import com.opensymphony.xwork2.ActionInvocation;",
                "-import com.opensymphony.xwork2.XWorkConstants;",
                " import com.opensymphony.xwork2.config.entities.ActionConfig;",
                "@@ -34,2 +33,3 @@ import org.apache.logging.log4j.Logger;",
                " import org.apache.struts2.dispatcher.HttpParameters;",
                "+import org.apache.struts2.StrutsConstants;",
                "@@ -101,3 +101,3 @@ public class AliasInterceptor extends AbstractInterceptor {",
                "-    @Inject(XWorkConstants.DEV_MODE)",
                "+    @Inject(StrutsConstants.STRUTS_DEVMODE)",
                "     public void setDevMode(String mode) {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java b/core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java",
                "index 6dc1c1953..aa8c441c9 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java",
                "@@ -23,3 +23,2 @@ import com.opensymphony.xwork2.ActionInvocation;",
                " import com.opensymphony.xwork2.TextProvider;",
                "-import com.opensymphony.xwork2.XWorkConstants;",
                " import com.opensymphony.xwork2.inject.Inject;",
                "@@ -32,2 +31,3 @@ import org.apache.logging.log4j.LogManager;",
                " import org.apache.logging.log4j.Logger;",
                "+import org.apache.struts2.StrutsConstants;",
                " import org.apache.struts2.dispatcher.Parameter;",
                "@@ -63,3 +63,3 @@ public class ParametersInterceptor extends MethodFilterInterceptor {",
                "-    @Inject(XWorkConstants.DEV_MODE)",
                "+    @Inject(StrutsConstants.STRUTS_DEVMODE)",
                "     public void setDevMode(String mode) {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/interceptor/StaticParametersInterceptor.java b/core/src/main/java/com/opensymphony/xwork2/interceptor/StaticParametersInterceptor.java",
                "index 6ec572a17..2d05e9c78 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/interceptor/StaticParametersInterceptor.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/interceptor/StaticParametersInterceptor.java",
                "@@ -22,3 +22,2 @@ import com.opensymphony.xwork2.ActionContext;",
                " import com.opensymphony.xwork2.ActionInvocation;",
                "-import com.opensymphony.xwork2.XWorkConstants;",
                " import com.opensymphony.xwork2.config.entities.ActionConfig;",
                "@@ -35,2 +34,3 @@ import org.apache.logging.log4j.LogManager;",
                " import org.apache.logging.log4j.Logger;",
                "+import org.apache.struts2.StrutsConstants;",
                " import org.apache.struts2.dispatcher.HttpParameters;",
                "@@ -104,3 +104,3 @@ public class StaticParametersInterceptor extends AbstractInterceptor {",
                "-    @Inject(XWorkConstants.DEV_MODE)",
                "+    @Inject(StrutsConstants.STRUTS_DEVMODE)",
                "     public void setDevMode(String mode) {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "index 0982936dc..808efef9d 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "@@ -20,3 +20,2 @@ package com.opensymphony.xwork2.ognl;",
                "-import com.opensymphony.xwork2.XWorkConstants;",
                " import com.opensymphony.xwork2.config.ConfigurationException;",
                "@@ -77,3 +76,3 @@ public class OgnlUtil {",
                "-    @Inject(XWorkConstants.DEV_MODE)",
                "+    @Inject(StrutsConstants.STRUTS_DEVMODE)",
                "     public void setDevMode(String mode) {",
                "@@ -82,3 +81,3 @@ public class OgnlUtil {",
                "-    @Inject(XWorkConstants.ENABLE_OGNL_EXPRESSION_CACHE)",
                "+    @Inject(StrutsConstants.STRUTS_ENABLE_OGNL_EXPRESSION_CACHE)",
                "     public void setEnableExpressionCache(String cache) {",
                "@@ -87,3 +86,3 @@ public class OgnlUtil {",
                "-    @Inject(value = XWorkConstants.ENABLE_OGNL_EVAL_EXPRESSION, required = false)",
                "+    @Inject(value = StrutsConstants.STRUTS_ENABLE_OGNL_EVAL_EXPRESSION, required = false)",
                "     public void setEnableEvalExpression(String evalExpression) {",
                "@@ -96,3 +95,3 @@ public class OgnlUtil {",
                "-    @Inject(value = XWorkConstants.OGNL_EXCLUDED_CLASSES, required = false)",
                "+    @Inject(value = StrutsConstants.STRUTS_EXCLUDED_CLASSES, required = false)",
                "     public void setExcludedClasses(String commaDelimitedClasses) {",
                "@@ -112,3 +111,3 @@ public class OgnlUtil {",
                "-    @Inject(value = XWorkConstants.OGNL_EXCLUDED_PACKAGE_NAME_PATTERNS, required = false)",
                "+    @Inject(value = StrutsConstants.STRUTS_EXCLUDED_PACKAGE_NAME_PATTERNS, required = false)",
                "     public void setExcludedPackageNamePatterns(String commaDelimitedPackagePatterns) {",
                "@@ -124,3 +123,3 @@ public class OgnlUtil {",
                "-    @Inject(value = XWorkConstants.OGNL_EXCLUDED_PACKAGE_NAMES, required = false)",
                "+    @Inject(value = StrutsConstants.STRUTS_EXCLUDED_PACKAGE_NAMES, required = false)",
                "     public void setExcludedPackageNames(String commaDelimitedPackageNames) {",
                "@@ -146,3 +145,3 @@ public class OgnlUtil {",
                "-    @Inject(value = XWorkConstants.ALLOW_STATIC_METHOD_ACCESS, required = false)",
                "+    @Inject(value = StrutsConstants.STRUTS_ALLOW_STATIC_METHOD_ACCESS, required = false)",
                "     public void setAllowStaticMethodAccess(String allowStaticMethodAccess) {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlValueStack.java b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlValueStack.java",
                "index 07464e04d..c7fb604b8 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlValueStack.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlValueStack.java",
                "@@ -22,3 +22,2 @@ import com.opensymphony.xwork2.ActionContext;",
                " import com.opensymphony.xwork2.TextProvider;",
                "-import com.opensymphony.xwork2.XWorkConstants;",
                " import com.opensymphony.xwork2.XWorkException;",
                "@@ -37,2 +36,3 @@ import org.apache.logging.log4j.LogManager;",
                " import org.apache.logging.log4j.Logger;",
                "+import org.apache.struts2.StrutsConstants;",
                "@@ -102,3 +102,3 @@ public class OgnlValueStack implements Serializable, ValueStack, ClearableValueS",
                "-    @Inject(XWorkConstants.DEV_MODE)",
                "+    @Inject(StrutsConstants.STRUTS_DEVMODE)",
                "     public void setDevMode(String mode) {",
                "@@ -452,3 +452,3 @@ public class OgnlValueStack implements Serializable, ValueStack, ClearableValueS",
                "         TextProvider prov = cont.getInstance(TextProvider.class, \"system\");",
                "-        boolean allow = BooleanUtils.toBoolean(cont.getInstance(String.class, XWorkConstants.ALLOW_STATIC_METHOD_ACCESS));",
                "+        boolean allow = BooleanUtils.toBoolean(cont.getInstance(String.class, StrutsConstants.STRUTS_ALLOW_STATIC_METHOD_ACCESS));",
                "         OgnlValueStack aStack = new OgnlValueStack(xworkConverter, accessor, prov, allow);",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ognl/accessor/CompoundRootAccessor.java b/core/src/main/java/com/opensymphony/xwork2/ognl/accessor/CompoundRootAccessor.java",
                "index 0bccc60fa..b3b913912 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ognl/accessor/CompoundRootAccessor.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ognl/accessor/CompoundRootAccessor.java",
                "@@ -20,3 +20,2 @@ package com.opensymphony.xwork2.ognl.accessor;",
                "-import com.opensymphony.xwork2.XWorkConstants;",
                " import com.opensymphony.xwork2.XWorkException;",
                "@@ -30,2 +29,3 @@ import org.apache.logging.log4j.LogManager;",
                " import org.apache.logging.log4j.Logger;",
                "+import org.apache.struts2.StrutsConstants;",
                "@@ -67,3 +67,3 @@ public class CompoundRootAccessor implements PropertyAccessor, MethodAccessor, C",
                "-    @Inject(XWorkConstants.DEV_MODE)",
                "+    @Inject(StrutsConstants.STRUTS_DEVMODE)",
                "     public void setDevMode(String mode) {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java b/core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java",
                "index 8dfd6ef3f..97e3c2d0c 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java",
                "@@ -20,3 +20,2 @@ package com.opensymphony.xwork2.security;",
                "-import com.opensymphony.xwork2.XWorkConstants;",
                " import com.opensymphony.xwork2.inject.Inject;",
                "@@ -25,2 +24,3 @@ import org.apache.logging.log4j.LogManager;",
                " import org.apache.logging.log4j.Logger;",
                "+import org.apache.struts2.StrutsConstants;",
                "@@ -45,6 +45,6 @@ public class DefaultAcceptedPatternsChecker implements AcceptedPatternsChecker {",
                "-    @Inject(value = XWorkConstants.OVERRIDE_ACCEPTED_PATTERNS, required = false)",
                "+    @Inject(value = StrutsConstants.STRUTS_OVERRIDE_ACCEPTED_PATTERNS, required = false)",
                "     public void setOverrideAcceptedPatterns(String acceptablePatterns) {",
                "         LOG.warn(\"Overriding accepted patterns [{}] with [{}], be aware that this affects all instances and safety of your application!\",",
                "-                    XWorkConstants.OVERRIDE_ACCEPTED_PATTERNS, acceptablePatterns);",
                "+                    StrutsConstants.STRUTS_OVERRIDE_ACCEPTED_PATTERNS, acceptablePatterns);",
                "         acceptedPatterns = new HashSet<>();",
                "@@ -55,3 +55,3 @@ public class DefaultAcceptedPatternsChecker implements AcceptedPatternsChecker {",
                "-    @Inject(value = XWorkConstants.ADDITIONAL_ACCEPTED_PATTERNS, required = false)",
                "+    @Inject(value = StrutsConstants.STRUTS_ADDITIONAL_EXCLUDED_PATTERNS, required = false)",
                "     public void setAdditionalAcceptedPatterns(String acceptablePatterns) {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java b/core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java",
                "index 0148a35cf..094dc8b83 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java",
                "@@ -20,3 +20,2 @@ package com.opensymphony.xwork2.security;",
                "-import com.opensymphony.xwork2.XWorkConstants;",
                " import com.opensymphony.xwork2.inject.Inject;",
                "@@ -48,6 +47,6 @@ public class DefaultExcludedPatternsChecker implements ExcludedPatternsChecker {",
                "-    @Inject(value = XWorkConstants.OVERRIDE_EXCLUDED_PATTERNS, required = false)",
                "+    @Inject(value = StrutsConstants.STRUTS_OVERRIDE_EXCLUDED_PATTERNS, required = false)",
                "     public void setOverrideExcludePatterns(String excludePatterns) {",
                "         LOG.warn(\"Overriding excluded patterns [{}] with [{}], be aware that this affects all instances and safety of your application!\",",
                "-                    XWorkConstants.OVERRIDE_EXCLUDED_PATTERNS, excludePatterns);",
                "+                    StrutsConstants.STRUTS_OVERRIDE_EXCLUDED_PATTERNS, excludePatterns);",
                "         excludedPatterns = new HashSet<Pattern>();",
                "@@ -58,3 +57,3 @@ public class DefaultExcludedPatternsChecker implements ExcludedPatternsChecker {",
                "-    @Inject(value = XWorkConstants.ADDITIONAL_EXCLUDED_PATTERNS, required = false)",
                "+    @Inject(value = StrutsConstants.STRUTS_ADDITIONAL_EXCLUDED_PATTERNS, required = false)",
                "     public void setAdditionalExcludePatterns(String excludePatterns) {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/validator/AnnotationActionValidatorManager.java b/core/src/main/java/com/opensymphony/xwork2/validator/AnnotationActionValidatorManager.java",
                "index 068141248..c2bf8e5c3 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/validator/AnnotationActionValidatorManager.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/validator/AnnotationActionValidatorManager.java",
                "@@ -28,2 +28,3 @@ import org.apache.logging.log4j.LogManager;",
                " import org.apache.logging.log4j.Logger;",
                "+import org.apache.struts2.StrutsConstants;",
                "@@ -73,3 +74,3 @@ public class AnnotationActionValidatorManager implements ActionValidatorManager",
                "-    @Inject(value = XWorkConstants.RELOAD_XML_CONFIGURATION, required = false)",
                "+    @Inject(value = StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD, required = false)",
                "     public void setReloadingConfigs(String reloadingConfigs) {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/validator/DefaultActionValidatorManager.java b/core/src/main/java/com/opensymphony/xwork2/validator/DefaultActionValidatorManager.java",
                "index de3307a29..0c8608a68 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/validator/DefaultActionValidatorManager.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/validator/DefaultActionValidatorManager.java",
                "@@ -24,3 +24,2 @@ import com.opensymphony.xwork2.FileManagerFactory;",
                " import com.opensymphony.xwork2.TextProviderFactory;",
                "-import com.opensymphony.xwork2.XWorkConstants;",
                " import com.opensymphony.xwork2.inject.Inject;",
                "@@ -30,2 +29,3 @@ import org.apache.logging.log4j.LogManager;",
                " import org.apache.logging.log4j.Logger;",
                "+import org.apache.struts2.StrutsConstants;",
                "@@ -84,3 +84,3 @@ public class DefaultActionValidatorManager implements ActionValidatorManager {",
                "-    @Inject(value = XWorkConstants.RELOAD_XML_CONFIGURATION, required = false)",
                "+    @Inject(value = StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD, required = false)",
                "     public void setReloadingConfigs(String reloadingConfigs) {",
                "diff --git a/core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java b/core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java",
                "index fb780037b..0ebe8cddc 100644",
                "--- a/core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java",
                "+++ b/core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java",
                "@@ -32,3 +32,2 @@ import com.opensymphony.xwork2.TextProvider;",
                " import com.opensymphony.xwork2.UnknownHandlerManager;",
                "-import com.opensymphony.xwork2.XWorkConstants;",
                " import com.opensymphony.xwork2.conversion.ConversionAnnotationProcessor;",
                "@@ -428,18 +427,2 @@ public class DefaultBeanSelectionProvider extends AbstractBeanSelectionProvider",
                "         switchDevMode(props);",
                "-",
                "-        // Convert Struts properties into XWork properties",
                "-        convertIfExist(props, StrutsConstants.STRUTS_LOG_MISSING_PROPERTIES, XWorkConstants.LOG_MISSING_PROPERTIES);",
                "-        convertIfExist(props, StrutsConstants.STRUTS_ENABLE_OGNL_EXPRESSION_CACHE, XWorkConstants.ENABLE_OGNL_EXPRESSION_CACHE);",
                "-        convertIfExist(props, StrutsConstants.STRUTS_ENABLE_OGNL_EVAL_EXPRESSION, XWorkConstants.ENABLE_OGNL_EVAL_EXPRESSION);",
                "-        convertIfExist(props, StrutsConstants.STRUTS_ALLOW_STATIC_METHOD_ACCESS, XWorkConstants.ALLOW_STATIC_METHOD_ACCESS);",
                "-        convertIfExist(props, StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD, XWorkConstants.RELOAD_XML_CONFIGURATION);",
                "-",
                "-        convertIfExist(props, StrutsConstants.STRUTS_EXCLUDED_CLASSES, XWorkConstants.OGNL_EXCLUDED_CLASSES);",
                "-        convertIfExist(props, StrutsConstants.STRUTS_EXCLUDED_PACKAGE_NAME_PATTERNS, XWorkConstants.OGNL_EXCLUDED_PACKAGE_NAME_PATTERNS);",
                "-        convertIfExist(props, StrutsConstants.STRUTS_EXCLUDED_PACKAGE_NAMES, XWorkConstants.OGNL_EXCLUDED_PACKAGE_NAMES);",
                "-",
                "-        convertIfExist(props, StrutsConstants.STRUTS_ADDITIONAL_EXCLUDED_PATTERNS, XWorkConstants.ADDITIONAL_EXCLUDED_PATTERNS);",
                "-        convertIfExist(props, StrutsConstants.STRUTS_ADDITIONAL_ACCEPTED_PATTERNS, XWorkConstants.ADDITIONAL_ACCEPTED_PATTERNS);",
                "-        convertIfExist(props, StrutsConstants.STRUTS_OVERRIDE_EXCLUDED_PATTERNS, XWorkConstants.OVERRIDE_EXCLUDED_PATTERNS);",
                "-        convertIfExist(props, StrutsConstants.STRUTS_OVERRIDE_ACCEPTED_PATTERNS, XWorkConstants.OVERRIDE_ACCEPTED_PATTERNS);",
                "     }",
                "@@ -462,6 +445,2 @@ public class DefaultBeanSelectionProvider extends AbstractBeanSelectionProvider",
                "             }",
                "-            // Convert struts properties into ones that xwork expects",
                "-            props.setProperty(XWorkConstants.DEV_MODE, \"true\");",
                "-        } else {",
                "-            props.setProperty(XWorkConstants.DEV_MODE, \"false\");",
                "         }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/XWorkConstants.java",
                "core/src/main/java/com/opensymphony/xwork2/config/ConfigurationManager.java",
                "core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java",
                "core/src/main/java/com/opensymphony/xwork2/config/impl/MockConfiguration.java",
                "core/src/main/java/com/opensymphony/xwork2/config/providers/XWorkConfigurationProvider.java",
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java",
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java",
                "core/src/main/java/com/opensymphony/xwork2/interceptor/AliasInterceptor.java",
                "core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java",
                "core/src/main/java/com/opensymphony/xwork2/interceptor/StaticParametersInterceptor.java",
                "core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "core/src/main/java/com/opensymphony/xwork2/ognl/OgnlValueStack.java",
                "core/src/main/java/com/opensymphony/xwork2/ognl/accessor/CompoundRootAccessor.java",
                "core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java",
                "core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java",
                "core/src/main/java/com/opensymphony/xwork2/validator/AnnotationActionValidatorManager.java",
                "core/src/main/java/com/opensymphony/xwork2/validator/DefaultActionValidatorManager.java",
                "core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4792": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: value, version, action",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4792",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1d06d2416194f39d80ecf0af4a42fb16c4684e3d",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1529469712,
            "hunks": 0,
            "message": "Merge pull request #239 from sullis/excludedPackageNames-xwork2-ognl add 'com.opensymphony.xwork2.ognl.' to excludedPackageNames",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "239": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: package",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 239",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5b167b8efdf0b124b57e0baba5f9fb0e7f3b7c1a",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526742645,
            "hunks": 8,
            "message": "drop searchValueStack attribute from the s:text tag issue: * WW-4713",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/components/Text.java b/core/src/main/java/org/apache/struts2/components/Text.java",
                "index 498cb425d..9f59e0994 100644",
                "--- a/core/src/main/java/org/apache/struts2/components/Text.java",
                "+++ b/core/src/main/java/org/apache/struts2/components/Text.java",
                "@@ -51,5 +51,4 @@ import java.util.List;",
                "  * If the named message is not found in a property file, then the body of the",
                "- * tag will be used as default message. If no body is used, then the stack can",
                "- * be searched, and if a value is returned, it will written to the output.",
                "- * If no value is found on the stack, the key of the message will be written out.",
                "+ * tag will be used as default message. If no value is found, the key of the",
                "+ * message will not be written out.",
                "  * </p>",
                "@@ -125,4 +124,2 @@ public class Text extends ContextBean implements Param.UnnamedParametric {",
                "     protected String name;",
                "-    @Deprecated",
                "-    protected String searchStack;",
                "     private boolean escapeHtml = false;",
                "@@ -141,8 +138,2 @@ public class Text extends ContextBean implements Param.UnnamedParametric {",
                "-    @Deprecated",
                "-    @StrutsTagAttribute(description=\"Search the stack if property is not found on resources\", type = \"Boolean\", defaultValue = \"false\")",
                "-    public void setSearchValueStack(String searchStack) {",
                "-        this.searchStack = searchStack;",
                "-    }",
                "-",
                "     @StrutsTagAttribute(description=\"Whether to escape HTML\", type=\"Boolean\", defaultValue=\"false\")",
                "@@ -183,9 +174,3 @@ public class Text extends ContextBean implements Param.UnnamedParametric {",
                "-        Boolean doSearchStack = false;",
                "-        if (searchStack != null) {",
                "-            Object value = findValue(searchStack, Boolean.class);",
                "-            doSearchStack = value != null ? (Boolean) value : false;",
                "-        }",
                "-",
                "-        String msg = TextProviderHelper.getText(actualName, defaultMessage, values, getStack(), doSearchStack);",
                "+        String msg = TextProviderHelper.getText(actualName, defaultMessage, values, getStack());",
                "diff --git a/core/src/main/java/org/apache/struts2/views/jsp/TextTag.java b/core/src/main/java/org/apache/struts2/views/jsp/TextTag.java",
                "index b47e8e0e4..8f93ad61f 100644",
                "--- a/core/src/main/java/org/apache/struts2/views/jsp/TextTag.java",
                "+++ b/core/src/main/java/org/apache/struts2/views/jsp/TextTag.java",
                "@@ -36,4 +36,2 @@ public class TextTag extends ContextBeanTag {",
                "     protected String name;",
                "-    @Deprecated",
                "-    protected String searchValueStack;",
                "     private boolean escapeHtml = false;",
                "@@ -52,3 +50,2 @@ public class TextTag extends ContextBeanTag {",
                "         text.setName(name);",
                "-        text.setSearchValueStack(searchValueStack);",
                "         text.setEscapeHtml(escapeHtml);",
                "@@ -63,7 +60,2 @@ public class TextTag extends ContextBeanTag {",
                "-    @Deprecated",
                "-    public void setSearchValueStack(String searchStack) {",
                "-        this.searchValueStack = searchStack;",
                "-    }",
                "-",
                "     public void setEscapeHtml(boolean escapeHtml) {",
                "diff --git a/core/src/site/resources/tags/text.html b/core/src/site/resources/tags/text.html",
                "index f068caddb..611774c85 100644",
                "--- a/core/src/site/resources/tags/text.html",
                "+++ b/core/src/site/resources/tags/text.html",
                "@@ -75,10 +75,2 @@ Please do not edit it directly.",
                " \t\t\t\t</tr>",
                "-\t\t\t\t<tr>",
                "-\t\t\t\t\t<td align=\"left\" valign=\"top\">searchValueStack</td>",
                "-\t\t\t\t\t<td align=\"left\" valign=\"top\">false</td>",
                "-\t\t\t\t\t<td align=\"left\" valign=\"top\">false</td>",
                "-\t\t\t\t\t<td align=\"left\" valign=\"top\">false</td>",
                "-\t\t\t\t\t<td align=\"left\" valign=\"top\">Boolean</td>",
                "-\t\t\t\t\t<td align=\"left\" valign=\"top\">Search the stack if property is not found on resources</td>",
                "-\t\t\t\t</tr>",
                " \t\t\t\t<tr>"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/components/Text.java",
                "core/src/main/java/org/apache/struts2/views/jsp/TextTag.java",
                "core/src/site/resources/tags/text.html"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4713": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: value",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4713",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ec3703b052415a1caf4a30523c45073b6b9e5804",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1527459516,
            "hunks": 1,
            "message": "update Apache FreeMarker to version 2.3.28",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index cd390bf0e..dcd81071e 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -613,3 +613,3 @@",
                "                 <artifactId>freemarker</artifactId>",
                "-                <version>2.3.26-incubating</version>",
                "+                <version>2.3.28</version>",
                "             </dependency>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "635786708281b622a6f8f3f52d1d546bf304998f",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1527489128,
            "hunks": 0,
            "message": "Merge pull request #227 from sdutry/WW-4792 WW-4792 Removes deprecated XWork constants",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4792": ""
            },
            "ghissue_refs": {
                "227": "[WW-4792] Uses proper names for constants #522"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4792",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 227",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "31cb2ce21a604ddf788bc401e45882e3f4d51a8e",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1529455346,
            "hunks": 1,
            "message": "add 'com.opensymphony.xwork2.ognl.' to excludedPackageNames",
            "diff": [
                "diff --git a/core/src/main/resources/struts-default.xml b/core/src/main/resources/struts-default.xml",
                "index b0fcdd81f..3896a51f2 100644",
                "--- a/core/src/main/resources/struts-default.xml",
                "+++ b/core/src/main/resources/struts-default.xml",
                "@@ -61,2 +61,3 @@",
                "               value=\"",
                "+                com.opensymphony.xwork2.ognl.,",
                "                 java.lang.,"
            ],
            "changed_files": [
                "core/src/main/resources/struts-default.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: package",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "6eb83016e34c9151090dc67bccf714e732a6fe75",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1529047917,
            "hunks": 2,
            "message": "Fixes wrong version in bom",
            "diff": [
                "diff --git a/bom/pom.xml b/bom/pom.xml",
                "index 27ea0a1ec..30f364c78 100644",
                "--- a/bom/pom.xml",
                "+++ b/bom/pom.xml",
                "@@ -32,3 +32,3 @@",
                "     <artifactId>struts2-bom</artifactId>",
                "-    <version>2.5.16</version>",
                "+    <version>2.5.17-SNAPSHOT</version>",
                "     <packaging>pom</packaging>",
                "@@ -47,3 +47,3 @@",
                "     <properties>",
                "-        <struts-version.version>2.5.16</struts-version.version>",
                "+        <struts-version.version>2.5.17-SNAPSHOT</struts-version.version>",
                "         <maven.site.skip>true</maven.site.skip>"
            ],
            "changed_files": [
                "bom/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "e7ed6e37433fa349e82ba52f94366549e822858c",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526879100,
            "hunks": 0,
            "message": "Merge pull request #223 from sdutry/WW-4763-b drop deprecated logging layer",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4763": ""
            },
            "ghissue_refs": {
                "223": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4763",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 223",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8ab6e2c6d2809c9496604a226fb43213a10409fc",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1529296700,
            "hunks": 1,
            "message": "add 'sun.misc.' to struts.excludedPackageNames",
            "diff": [
                "diff --git a/core/src/main/resources/struts-default.xml b/core/src/main/resources/struts-default.xml",
                "index e3d3b072f..b0fcdd81f 100644",
                "--- a/core/src/main/resources/struts-default.xml",
                "+++ b/core/src/main/resources/struts-default.xml",
                "@@ -68,2 +68,3 @@",
                "                 freemarker.ext.beans.,",
                "+                sun.misc.,",
                "                 sun.reflect.,"
            ],
            "changed_files": [
                "core/src/main/resources/struts-default.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: package",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "b9e9d5c6dcd10b8a82be312393c8f670950d20a7",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1527191353,
            "hunks": 1,
            "message": "fix order, and therefore value, of the builder constants",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java b/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java",
                "index fca8bf971..77d63338e 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java",
                "@@ -285,4 +285,4 @@ public class DefaultConfiguration implements Configuration {",
                "         builder.constant(StrutsConstants.STRUTS_LOG_MISSING_PROPERTIES, \"false\");",
                "-        builder.constant(StrutsConstants.STRUTS_ENABLE_OGNL_EXPRESSION_CACHE, \"false\");",
                "-        builder.constant(StrutsConstants.STRUTS_ENABLE_OGNL_EVAL_EXPRESSION, \"true\");",
                "+        builder.constant(StrutsConstants.STRUTS_ENABLE_OGNL_EVAL_EXPRESSION, \"false\");",
                "+        builder.constant(StrutsConstants.STRUTS_ENABLE_OGNL_EXPRESSION_CACHE, \"true\");",
                "         builder.constant(StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD, \"false\");"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: value",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "6efaf900d4ffb7be8a74065af5553bad2389f729",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1525242306,
            "hunks": 6,
            "message": "Increases scope when location parsing is avoided",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/result/PostbackResult.java b/core/src/main/java/org/apache/struts2/result/PostbackResult.java",
                "index 4c1e52af0..1a275d52e 100644",
                "--- a/core/src/main/java/org/apache/struts2/result/PostbackResult.java",
                "+++ b/core/src/main/java/org/apache/struts2/result/PostbackResult.java",
                "@@ -136,5 +136,5 @@ public class PostbackResult extends StrutsResultSupport {",
                "             actionName = conditionalParse(actionName, invocation);",
                "+            parseLocation = false;",
                "             if (namespace == null) {",
                "                 namespace = invocation.getProxy().getNamespace();",
                "-                parseLocation = false;",
                "             } else {",
                "diff --git a/core/src/main/java/org/apache/struts2/result/ServletActionRedirectResult.java b/core/src/main/java/org/apache/struts2/result/ServletActionRedirectResult.java",
                "index 5b800e249..ed6825b12 100644",
                "--- a/core/src/main/java/org/apache/struts2/result/ServletActionRedirectResult.java",
                "+++ b/core/src/main/java/org/apache/struts2/result/ServletActionRedirectResult.java",
                "@@ -161,5 +161,5 @@ public class ServletActionRedirectResult extends ServletRedirectResult implement",
                "         actionName = conditionalParse(actionName, invocation);",
                "+        parseLocation = false;",
                "         if (namespace == null) {",
                "             namespace = invocation.getProxy().getNamespace();",
                "-            parseLocation = false;",
                "         } else {",
                "diff --git a/plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java b/plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java",
                "index db4f98a38..282f65323 100644",
                "--- a/plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java",
                "+++ b/plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java",
                "@@ -174,2 +174,4 @@ public class PortletActionRedirectResult extends PortletResult {",
                " \t\tactionName = conditionalParse(actionName, invocation);",
                "+\t\tparseLocation = false;",
                "+",
                " \t\tString portletNamespace = (String)invocation.getInvocationContext().get(PortletConstants.PORTLET_NAMESPACE);",
                "@@ -181,3 +183,2 @@ public class PortletActionRedirectResult extends PortletResult {",
                " \t\t\tnamespace = invocation.getProxy().getNamespace();",
                "-\t\t\tparseLocation = false;",
                " \t\t} else {"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/result/PostbackResult.java",
                "core/src/main/java/org/apache/struts2/result/ServletActionRedirectResult.java",
                "plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin, result, action",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "b2dcd87533ec6f0d136c1650c275d3dc9a6ef399",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526880254,
            "hunks": 0,
            "message": "Merge pull request #221 from yasserzamani/WW-4932  WW-4932 honor .properties file before the generic parametrics",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4932": ""
            },
            "ghissue_refs": {
                "221": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4932",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 221",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "918182344cc97515353cc3dcb09b9fce19c739c0",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1530298559,
            "hunks": 21,
            "message": "fix some sonar issue",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/StrutsConstants.java b/core/src/main/java/org/apache/struts2/StrutsConstants.java",
                "index 09c7e059b..d0d466def 100644",
                "--- a/core/src/main/java/org/apache/struts2/StrutsConstants.java",
                "+++ b/core/src/main/java/org/apache/struts2/StrutsConstants.java",
                "@@ -272,2 +272,7 @@ public final class StrutsConstants {",
                "+    /** namespaces names' whitelist **/",
                "+    public static final String STRUTS_ALLOWED_NAMESPACE_NAMES = \"struts.allowed.namespace.names\";",
                "+    /** default namespace name to use when namespace didn't match the whitelist **/",
                "+    public static final String STRUTS_DEFAULT_NAMESPACE_NAME = \"struts.default.namespace.name\";",
                "+",
                "     /** actions names' whitelist **/",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java b/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java",
                "index 885031127..09de6078b 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java",
                "@@ -122,2 +122,6 @@ public class DefaultActionMapper implements ActionMapper {",
                "     protected PrefixTrie prefixTrie = null;",
                "+",
                "+    protected Pattern allowedNamespaceNames = Pattern.compile(\"[a-zA-Z0-9._/\\\\-]*\");",
                "+    protected String defaultNamespaceName = \"/\";",
                "+",
                "     protected Pattern allowedActionNames = Pattern.compile(\"[a-zA-Z0-9._!/\\\\-]*\");",
                "@@ -168,4 +172,4 @@ public class DefaultActionMapper implements ActionMapper {",
                "                             if (!allowSlashesInActionNames && !allowActionCrossNamespaceAccess) {",
                "-                                if (actionName.lastIndexOf(\"/\") != -1) {",
                "-                                    actionName = actionName.substring(actionName.lastIndexOf(\"/\") + 1);",
                "+                                if (actionName.lastIndexOf('/') != -1) {",
                "+                                    actionName = actionName.substring(actionName.lastIndexOf('/') + 1);",
                "                                 }",
                "@@ -207,2 +211,12 @@ public class DefaultActionMapper implements ActionMapper {",
                "+    @Inject(value = StrutsConstants.STRUTS_ALLOWED_NAMESPACE_NAMES, required = false)",
                "+    public void setAllowedNamespaceNames(String allowedNamespaceNames) {",
                "+        this.allowedNamespaceNames = Pattern.compile(allowedNamespaceNames);",
                "+    }",
                "+",
                "+    @Inject(value = StrutsConstants.STRUTS_DEFAULT_NAMESPACE_NAME, required = false)",
                "+    public void setDefaultNamespaceName(String defaultNamespaceName) {",
                "+        this.defaultNamespaceName = defaultNamespaceName;",
                "+    }",
                "+",
                "     @Inject(value = StrutsConstants.STRUTS_ALLOWED_ACTION_NAMES, required = false)",
                "@@ -276,3 +290,3 @@ public class DefaultActionMapper implements ActionMapper {",
                "-        int indexOfSemicolon = uri.indexOf(\";\");",
                "+        int indexOfSemicolon = uri.indexOf(';');",
                "         uri = (indexOfSemicolon > -1) ? uri.substring(0, indexOfSemicolon) : uri;",
                "@@ -296,3 +310,3 @@ public class DefaultActionMapper implements ActionMapper {",
                "             String name = mapping.getName();",
                "-            int exclamation = name.lastIndexOf(\"!\");",
                "+            int exclamation = name.lastIndexOf('!');",
                "             if (exclamation != -1) {",
                "@@ -345,3 +359,3 @@ public class DefaultActionMapper implements ActionMapper {",
                "         String namespace, name;",
                "-        int lastSlash = uri.lastIndexOf(\"/\");",
                "+        int lastSlash = uri.lastIndexOf('/');",
                "         if (lastSlash == -1) {",
                "@@ -393,3 +407,3 @@ public class DefaultActionMapper implements ActionMapper {",
                "-        mapping.setNamespace(namespace);",
                "+        mapping.setNamespace(cleanupNamespaceName(namespace));",
                "         mapping.setName(cleanupActionName(name));",
                "@@ -397,2 +411,20 @@ public class DefaultActionMapper implements ActionMapper {",
                "+    /**",
                "+     * Checks namespace name against allowed pattern if not matched returns default namespace",
                "+     *",
                "+     * @param rawNamespace name extracted from URI",
                "+     * @return safe namespace name",
                "+     */",
                "+    protected String cleanupNamespaceName(final String rawNamespace) {",
                "+        if (allowedNamespaceNames.matcher(rawNamespace).matches()) {",
                "+            return rawNamespace;",
                "+        } else {",
                "+            LOG.warn(",
                "+                \"{} did not match allowed namespace names {} - default namespace {} will be used!\",",
                "+                rawNamespace, allowedActionNames, defaultActionName",
                "+            );",
                "+            return defaultNamespaceName;",
                "+        }",
                "+    }",
                "+",
                "     /**",
                "diff --git a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java",
                "index e861344ea..16adf64d3 100644",
                "--- a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java",
                "+++ b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java",
                "@@ -361,3 +361,3 @@ public class RestActionMapper extends DefaultActionMapper {",
                "-        mapping.setNamespace(namespace);",
                "+        mapping.setNamespace(cleanupNamespaceName(namespace));",
                "         mapping.setName(name);",
                "diff --git a/xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java b/xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "index e1cc46e75..197ac154d 100644",
                "--- a/xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "+++ b/xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "@@ -42,2 +42,3 @@ import java.lang.reflect.Method;",
                " import java.util.Collection;",
                "+import java.util.Collections;",
                " import java.util.HashMap;",
                "@@ -68,5 +69,5 @@ public class OgnlUtil {",
                "-    private Set<Class<?>> excludedClasses = new HashSet<Class<?>>();",
                "-    private Set<Pattern> excludedPackageNamePatterns = new HashSet<Pattern>();",
                "-    private Set<String> excludedPackageNames = new HashSet<String>();",
                "+    private Set<Class<?>> excludedClasses;",
                "+    private Set<Pattern> excludedPackageNamePatterns;",
                "+    private Set<String> excludedPackageNames;",
                "@@ -76,2 +77,8 @@ public class OgnlUtil {",
                "+    public OgnlUtil() {",
                "+        excludedClasses = new HashSet<Class<?>>();",
                "+        excludedPackageNamePatterns = new HashSet<Pattern>();",
                "+        excludedPackageNames = new HashSet<String>();",
                "+    }",
                "+",
                "     @Inject",
                "@@ -102,6 +109,15 @@ public class OgnlUtil {",
                "     public void setExcludedClasses(String commaDelimitedClasses) {",
                "-        Set<String> classes = TextParseUtil.commaDelimitedStringToSet(commaDelimitedClasses);",
                "-        for (String className : classes) {",
                "+        Set<Class<?>> excludedClasses = new HashSet<Class<?>>();",
                "+        excludedClasses.addAll(this.excludedClasses);",
                "+        excludedClasses.addAll(parseExcludedClasses(commaDelimitedClasses));",
                "+        this.excludedClasses = Collections.unmodifiableSet(excludedClasses);",
                "+    }",
                "+",
                "+    private Set<Class<?>> parseExcludedClasses(String commaDelimitedClasses) {",
                "+        Set<String> classNames = TextParseUtil.commaDelimitedStringToSet(commaDelimitedClasses);",
                "+        Set<Class<?>> classes = new HashSet<Class<?>>();",
                "+",
                "+        for (String className : classNames) {",
                "             try {",
                "-                excludedClasses.add(Class.forName(className));",
                "+                classes.add(Class.forName(className));",
                "             } catch (ClassNotFoundException e) {",
                "@@ -110,2 +126,4 @@ public class OgnlUtil {",
                "         }",
                "+",
                "+        return classes;",
                "     }",
                "@@ -114,6 +132,17 @@ public class OgnlUtil {",
                "     public void setExcludedPackageNamePatterns(String commaDelimitedPackagePatterns) {",
                "+        Set<Pattern> excludedPackageNamePatterns = new HashSet<Pattern>();",
                "+        excludedPackageNamePatterns.addAll(this.excludedPackageNamePatterns);",
                "+        excludedPackageNamePatterns.addAll(parseExcludedPackageNamePatterns(commaDelimitedPackagePatterns));",
                "+        this.excludedPackageNamePatterns = Collections.unmodifiableSet(excludedPackageNamePatterns);",
                "+    }",
                "+",
                "+    private Set<Pattern> parseExcludedPackageNamePatterns(String commaDelimitedPackagePatterns) {",
                "         Set<String> packagePatterns = TextParseUtil.commaDelimitedStringToSet(commaDelimitedPackagePatterns);",
                "+        Set<Pattern> packageNamePatterns = new HashSet<Pattern>();",
                "+",
                "         for (String pattern : packagePatterns) {",
                "-            excludedPackageNamePatterns.add(Pattern.compile(pattern));",
                "+            packageNamePatterns.add(Pattern.compile(pattern));",
                "         }",
                "+",
                "+        return packageNamePatterns;",
                "     }",
                "@@ -122,3 +151,10 @@ public class OgnlUtil {",
                "     public void setExcludedPackageNames(String commaDelimitedPackageNames) {",
                "-        excludedPackageNames = TextParseUtil.commaDelimitedStringToSet(commaDelimitedPackageNames);",
                "+        Set<String> excludedPackageNames = new HashSet<String>();",
                "+        excludedPackageNames.addAll(this.excludedPackageNames);",
                "+        excludedPackageNames.addAll(parseExcludedPackageNames(commaDelimitedPackageNames));",
                "+        this.excludedPackageNames = Collections.unmodifiableSet(excludedPackageNames);",
                "+    }",
                "+",
                "+    private Set<String> parseExcludedPackageNames(String commaDelimitedPackageNames) {",
                "+        return TextParseUtil.commaDelimitedStringToSet(commaDelimitedPackageNames);",
                "     }"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/StrutsConstants.java",
                "core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java",
                "plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java",
                "xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_3_35",
                "STRUTS_2_3_36",
                "STRUTS_2_3_37"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin, action",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "1698d2da762f24082b91ad84e69c44a018aa7999",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526642959,
            "hunks": 0,
            "message": "Merge pull request #220 from yasserzamani/WW-4887 WW-4887 upgrade Tiles to 3.0.8",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4887": ""
            },
            "ghissue_refs": {
                "220": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4887",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 220",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f9806ee4e13f5cc9a7659f04c8d89db975e8dfe9",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1527587319,
            "hunks": 4,
            "message": "Adds Maven wrapper to allow use the latest Maven version",
            "diff": [
                "diff --git a/.mvn/wrapper/MavenWrapperDownloader.java b/.mvn/wrapper/MavenWrapperDownloader.java",
                "new file mode 100755",
                "index 000000000..d475a89ce",
                "--- /dev/null",
                "+++ b/.mvn/wrapper/MavenWrapperDownloader.java",
                "@@ -0,0 +1,110 @@",
                "+/*",
                "+Licensed to the Apache Software Foundation (ASF) under one",
                "+or more contributor license agreements.  See the NOTICE file",
                "+distributed with this work for additional information",
                "+regarding copyright ownership.  The ASF licenses this file",
                "+to you under the Apache License, Version 2.0 (the",
                "+\"License\"); you may not use this file except in compliance",
                "+with the License.  You may obtain a copy of the License at",
                "+",
                "+  http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+Unless required by applicable law or agreed to in writing,",
                "+software distributed under the License is distributed on an",
                "+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+KIND, either express or implied.  See the License for the",
                "+specific language governing permissions and limitations",
                "+under the License.",
                "+*/",
                "+",
                "+import java.net.*;",
                "+import java.io.*;",
                "+import java.nio.channels.*;",
                "+import java.util.Properties;",
                "+",
                "+public class MavenWrapperDownloader {",
                "+",
                "+    /**",
                "+     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.",
                "+     */",
                "+    private static final String DEFAULT_DOWNLOAD_URL =",
                "+            \"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.0/maven-wrapper-0.4.0.jar\";",
                "+",
                "+    /**",
                "+     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to",
                "+     * use instead of the default one.",
                "+     */",
                "+    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =",
                "+            \".mvn/wrapper/maven-wrapper.properties\";",
                "+",
                "+    /**",
                "+     * Path where the maven-wrapper.jar will be saved to.",
                "+     */",
                "+    private static final String MAVEN_WRAPPER_JAR_PATH =",
                "+            \".mvn/wrapper/maven-wrapper.jar\";",
                "+",
                "+    /**",
                "+     * Name of the property which should be used to override the default download url for the wrapper.",
                "+     */",
                "+    private static final String PROPERTY_NAME_WRAPPER_URL = \"wrapperUrl\";",
                "+",
                "+    public static void main(String args[]) {",
                "+        System.out.println(\"- Downloader started\");",
                "+        File baseDirectory = new File(args[0]);",
                "+        System.out.println(\"- Using base directory: \" + baseDirectory.getAbsolutePath());",
                "+",
                "+        // If the maven-wrapper.properties exists, read it and check if it contains a custom",
                "+        // wrapperUrl parameter.",
                "+        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);",
                "+        String url = DEFAULT_DOWNLOAD_URL;",
                "+        if(mavenWrapperPropertyFile.exists()) {",
                "+            FileInputStream mavenWrapperPropertyFileInputStream = null;",
                "+            try {",
                "+                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);",
                "+                Properties mavenWrapperProperties = new Properties();",
                "+                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);",
                "+                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);",
                "+            } catch (IOException e) {",
                "+                System.out.println(\"- ERROR loading '\" + MAVEN_WRAPPER_PROPERTIES_PATH + \"'\");",
                "+            } finally {",
                "+                try {",
                "+                    if(mavenWrapperPropertyFileInputStream != null) {",
                "+                        mavenWrapperPropertyFileInputStream.close();",
                "+                    }",
                "+                } catch (IOException e) {",
                "+                    // Ignore ...",
                "+                }",
                "+            }",
                "+        }",
                "+        System.out.println(\"- Downloading from: : \" + url);",
                "+",
                "+        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);",
                "+        if(!outputFile.getParentFile().exists()) {",
                "+            if(!outputFile.getParentFile().mkdirs()) {",
                "+                System.out.println(",
                "+                        \"- ERROR creating output direcrory '\" + outputFile.getParentFile().getAbsolutePath() + \"'\");",
                "+            }",
                "+        }",
                "+        System.out.println(\"- Downloading to: \" + outputFile.getAbsolutePath());",
                "+        try {",
                "+            downloadFileFromURL(url, outputFile);",
                "+            System.out.println(\"Done\");",
                "+            System.exit(0);",
                "+        } catch (Throwable e) {",
                "+            System.out.println(\"- Error downloading\");",
                "+            e.printStackTrace();",
                "+            System.exit(1);",
                "+        }",
                "+    }",
                "+",
                "+    private static void downloadFileFromURL(String urlString, File destination) throws Exception {",
                "+        URL website = new URL(urlString);",
                "+        ReadableByteChannel rbc;",
                "+        rbc = Channels.newChannel(website.openStream());",
                "+        FileOutputStream fos = new FileOutputStream(destination);",
                "+        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);",
                "+        fos.close();",
                "+        rbc.close();",
                "+    }",
                "+",
                "+}",
                "diff --git a/.mvn/wrapper/maven-wrapper.jar b/.mvn/wrapper/maven-wrapper.jar",
                "new file mode 100755",
                "index 000000000..08ebbb67f",
                "Binary files /dev/null and b/.mvn/wrapper/maven-wrapper.jar differ",
                "diff --git a/.mvn/wrapper/maven-wrapper.properties b/.mvn/wrapper/maven-wrapper.properties",
                "new file mode 100755",
                "index 000000000..42fa4da21",
                "--- /dev/null",
                "+++ b/.mvn/wrapper/maven-wrapper.properties",
                "@@ -0,0 +1 @@",
                "+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.5.3/apache-maven-3.5.3-bin.zip",
                "\\ No newline at end of file",
                "diff --git a/mvnw b/mvnw",
                "new file mode 100755",
                "index 000000000..961a82500",
                "--- /dev/null",
                "+++ b/mvnw",
                "@@ -0,0 +1,286 @@",
                "+#!/bin/sh",
                "+# ----------------------------------------------------------------------------",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#    http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+# ----------------------------------------------------------------------------",
                "+",
                "+# ----------------------------------------------------------------------------",
                "+# Maven2 Start Up Batch script",
                "+#",
                "+# Required ENV vars:",
                "+# ------------------",
                "+#   JAVA_HOME - location of a JDK home dir",
                "+#",
                "+# Optional ENV vars",
                "+# -----------------",
                "+#   M2_HOME - location of maven2's installed home dir",
                "+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven",
                "+#     e.g. to debug Maven itself, use",
                "+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000",
                "+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files",
                "+# ----------------------------------------------------------------------------",
                "+",
                "+if [ -z \"$MAVEN_SKIP_RC\" ] ; then",
                "+",
                "+  if [ -f /etc/mavenrc ] ; then",
                "+    . /etc/mavenrc",
                "+  fi",
                "+",
                "+  if [ -f \"$HOME/.mavenrc\" ] ; then",
                "+    . \"$HOME/.mavenrc\"",
                "+  fi",
                "+",
                "+fi",
                "+",
                "+# OS specific support.  $var _must_ be set to either true or false.",
                "+cygwin=false;",
                "+darwin=false;",
                "+mingw=false",
                "+case \"`uname`\" in",
                "+  CYGWIN*) cygwin=true ;;",
                "+  MINGW*) mingw=true;;",
                "+  Darwin*) darwin=true",
                "+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home",
                "+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html",
                "+    if [ -z \"$JAVA_HOME\" ]; then",
                "+      if [ -x \"/usr/libexec/java_home\" ]; then",
                "+        export JAVA_HOME=\"`/usr/libexec/java_home`\"",
                "+      else",
                "+        export JAVA_HOME=\"/Library/Java/Home\"",
                "+      fi",
                "+    fi",
                "+    ;;",
                "+esac",
                "+",
                "+if [ -z \"$JAVA_HOME\" ] ; then",
                "+  if [ -r /etc/gentoo-release ] ; then",
                "+    JAVA_HOME=`java-config --jre-home`",
                "+  fi",
                "+fi",
                "+",
                "+if [ -z \"$M2_HOME\" ] ; then",
                "+  ## resolve links - $0 may be a link to maven's home",
                "+  PRG=\"$0\"",
                "+",
                "+  # need this for relative symlinks",
                "+  while [ -h \"$PRG\" ] ; do",
                "+    ls=`ls -ld \"$PRG\"`",
                "+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`",
                "+    if expr \"$link\" : '/.*' > /dev/null; then",
                "+      PRG=\"$link\"",
                "+    else",
                "+      PRG=\"`dirname \"$PRG\"`/$link\"",
                "+    fi",
                "+  done",
                "+",
                "+  saveddir=`pwd`",
                "+",
                "+  M2_HOME=`dirname \"$PRG\"`/..",
                "+",
                "+  # make it fully qualified",
                "+  M2_HOME=`cd \"$M2_HOME\" && pwd`",
                "+",
                "+  cd \"$saveddir\"",
                "+  # echo Using m2 at $M2_HOME",
                "+fi",
                "+",
                "+# For Cygwin, ensure paths are in UNIX format before anything is touched",
                "+if $cygwin ; then",
                "+  [ -n \"$M2_HOME\" ] &&",
                "+    M2_HOME=`cygpath --unix \"$M2_HOME\"`",
                "+  [ -n \"$JAVA_HOME\" ] &&",
                "+    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`",
                "+  [ -n \"$CLASSPATH\" ] &&",
                "+    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`",
                "+fi",
                "+",
                "+# For Mingw, ensure paths are in UNIX format before anything is touched",
                "+if $mingw ; then",
                "+  [ -n \"$M2_HOME\" ] &&",
                "+    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"",
                "+  [ -n \"$JAVA_HOME\" ] &&",
                "+    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"",
                "+  # TODO classpath?",
                "+fi",
                "+",
                "+if [ -z \"$JAVA_HOME\" ]; then",
                "+  javaExecutable=\"`which javac`\"",
                "+  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then",
                "+    # readlink(1) is not available as standard on Solaris 10.",
                "+    readLink=`which readlink`",
                "+    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then",
                "+      if $darwin ; then",
                "+        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"",
                "+        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"",
                "+      else",
                "+        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"",
                "+      fi",
                "+      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"",
                "+      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`",
                "+      JAVA_HOME=\"$javaHome\"",
                "+      export JAVA_HOME",
                "+    fi",
                "+  fi",
                "+fi",
                "+",
                "+if [ -z \"$JAVACMD\" ] ; then",
                "+  if [ -n \"$JAVA_HOME\"  ] ; then",
                "+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then",
                "+      # IBM's JDK on AIX uses strange locations for the executables",
                "+      JAVACMD=\"$JAVA_HOME/jre/sh/java\"",
                "+    else",
                "+      JAVACMD=\"$JAVA_HOME/bin/java\"",
                "+    fi",
                "+  else",
                "+    JAVACMD=\"`which java`\"",
                "+  fi",
                "+fi",
                "+",
                "+if [ ! -x \"$JAVACMD\" ] ; then",
                "+  echo \"Error: JAVA_HOME is not defined correctly.\" >&2",
                "+  echo \"  We cannot execute $JAVACMD\" >&2",
                "+  exit 1",
                "+fi",
                "+",
                "+if [ -z \"$JAVA_HOME\" ] ; then",
                "+  echo \"Warning: JAVA_HOME environment variable is not set.\"",
                "+fi",
                "+",
                "+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher",
                "+",
                "+# traverses directory structure from process work directory to filesystem root",
                "+# first directory with .mvn subdirectory is considered project base directory",
                "+find_maven_basedir() {",
                "+",
                "+  if [ -z \"$1\" ]",
                "+  then",
                "+    echo \"Path not specified to find_maven_basedir\"",
                "+    return 1",
                "+  fi",
                "+",
                "+  basedir=\"$1\"",
                "+  wdir=\"$1\"",
                "+  while [ \"$wdir\" != '/' ] ; do",
                "+    if [ -d \"$wdir\"/.mvn ] ; then",
                "+      basedir=$wdir",
                "+      break",
                "+    fi",
                "+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)",
                "+    if [ -d \"${wdir}\" ]; then",
                "+      wdir=`cd \"$wdir/..\"; pwd`",
                "+    fi",
                "+    # end of workaround",
                "+  done",
                "+  echo \"${basedir}\"",
                "+}",
                "+",
                "+# concatenates all lines of a file",
                "+concat_lines() {",
                "+  if [ -f \"$1\" ]; then",
                "+    echo \"$(tr -s '\\n' ' ' < \"$1\")\"",
                "+  fi",
                "+}",
                "+",
                "+BASE_DIR=`find_maven_basedir \"$(pwd)\"`",
                "+if [ -z \"$BASE_DIR\" ]; then",
                "+  exit 1;",
                "+fi",
                "+",
                "+##########################################################################################",
                "+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central",
                "+# This allows using the maven wrapper in projects that prohibit checking in binary data.",
                "+##########################################################################################",
                "+if [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then",
                "+    if [ \"$MVNW_VERBOSE\" = true ]; then",
                "+      echo \"Found .mvn/wrapper/maven-wrapper.jar\"",
                "+    fi",
                "+else",
                "+    if [ \"$MVNW_VERBOSE\" = true ]; then",
                "+      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"",
                "+    fi",
                "+    jarUrl=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.0/maven-wrapper-0.4.0.jar\"",
                "+    while IFS=\"=\" read key value; do",
                "+      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;",
                "+      esac",
                "+    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"",
                "+    if [ \"$MVNW_VERBOSE\" = true ]; then",
                "+      echo \"Downloading from: $jarUrl\"",
                "+    fi",
                "+    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"",
                "+",
                "+    if command -v wget > /dev/null; then",
                "+        if [ \"$MVNW_VERBOSE\" = true ]; then",
                "+          echo \"Found wget ... using wget\"",
                "+        fi",
                "+        wget \"$jarUrl\" -O \"$wrapperJarPath\"",
                "+    elif command -v curl > /dev/null; then",
                "+        if [ \"$MVNW_VERBOSE\" = true ]; then",
                "+          echo \"Found curl ... using curl\"",
                "+        fi",
                "+        curl -o \"$wrapperJarPath\" \"$jarUrl\"",
                "+    else",
                "+        if [ \"$MVNW_VERBOSE\" = true ]; then",
                "+          echo \"Falling back to using Java to download\"",
                "+        fi",
                "+        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"",
                "+        if [ -e \"$javaClass\" ]; then",
                "+            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then",
                "+                if [ \"$MVNW_VERBOSE\" = true ]; then",
                "+                  echo \" - Compiling MavenWrapperDownloader.java ...\"",
                "+                fi",
                "+                # Compiling the Java class",
                "+                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")",
                "+            fi",
                "+            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then",
                "+                # Running the downloader",
                "+                if [ \"$MVNW_VERBOSE\" = true ]; then",
                "+                  echo \" - Running MavenWrapperDownloader.java ...\"",
                "+                fi",
                "+                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")",
                "+            fi",
                "+        fi",
                "+    fi",
                "+fi",
                "+##########################################################################################",
                "+# End of extension",
                "+##########################################################################################",
                "+",
                "+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}",
                "+if [ \"$MVNW_VERBOSE\" = true ]; then",
                "+  echo $MAVEN_PROJECTBASEDIR",
                "+fi",
                "+MAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"",
                "+",
                "+# For Cygwin, switch paths to Windows format before running java",
                "+if $cygwin; then",
                "+  [ -n \"$M2_HOME\" ] &&",
                "+    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`",
                "+  [ -n \"$JAVA_HOME\" ] &&",
                "+    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`",
                "+  [ -n \"$CLASSPATH\" ] &&",
                "+    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`",
                "+  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&",
                "+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`",
                "+fi",
                "+",
                "+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain",
                "+",
                "+exec \"$JAVACMD\" \\",
                "+  $MAVEN_OPTS \\",
                "+  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\",
                "+  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\",
                "+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"",
                "diff --git a/mvnw.cmd b/mvnw.cmd",
                "new file mode 100755",
                "index 000000000..830073a17",
                "--- /dev/null",
                "+++ b/mvnw.cmd",
                "@@ -0,0 +1,161 @@",
                "+@REM ----------------------------------------------------------------------------",
                "+@REM Licensed to the Apache Software Foundation (ASF) under one",
                "+@REM or more contributor license agreements.  See the NOTICE file",
                "+@REM distributed with this work for additional information",
                "+@REM regarding copyright ownership.  The ASF licenses this file",
                "+@REM to you under the Apache License, Version 2.0 (the",
                "+@REM \"License\"); you may not use this file except in compliance",
                "+@REM with the License.  You may obtain a copy of the License at",
                "+@REM",
                "+@REM    http://www.apache.org/licenses/LICENSE-2.0",
                "+@REM",
                "+@REM Unless required by applicable law or agreed to in writing,",
                "+@REM software distributed under the License is distributed on an",
                "+@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+@REM KIND, either express or implied.  See the License for the",
                "+@REM specific language governing permissions and limitations",
                "+@REM under the License.",
                "+@REM ----------------------------------------------------------------------------",
                "+",
                "+@REM ----------------------------------------------------------------------------",
                "+@REM Maven2 Start Up Batch script",
                "+@REM",
                "+@REM Required ENV vars:",
                "+@REM JAVA_HOME - location of a JDK home dir",
                "+@REM",
                "+@REM Optional ENV vars",
                "+@REM M2_HOME - location of maven2's installed home dir",
                "+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands",
                "+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending",
                "+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven",
                "+@REM     e.g. to debug Maven itself, use",
                "+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000",
                "+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files",
                "+@REM ----------------------------------------------------------------------------",
                "+",
                "+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'",
                "+@echo off",
                "+@REM set title of command window",
                "+title %0",
                "+@REM enable echoing my setting MAVEN_BATCH_ECHO to 'on'",
                "+@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%",
                "+",
                "+@REM set %HOME% to equivalent of $HOME",
                "+if \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")",
                "+",
                "+@REM Execute a user defined script before this one",
                "+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre",
                "+@REM check for pre script, once with legacy .bat ending and once with .cmd ending",
                "+if exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"",
                "+if exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"",
                "+:skipRcPre",
                "+",
                "+@setlocal",
                "+",
                "+set ERROR_CODE=0",
                "+",
                "+@REM To isolate internal variables from possible post scripts, we use another setlocal",
                "+@setlocal",
                "+",
                "+@REM ==== START VALIDATION ====",
                "+if not \"%JAVA_HOME%\" == \"\" goto OkJHome",
                "+",
                "+echo.",
                "+echo Error: JAVA_HOME not found in your environment. >&2",
                "+echo Please set the JAVA_HOME variable in your environment to match the >&2",
                "+echo location of your Java installation. >&2",
                "+echo.",
                "+goto error",
                "+",
                "+:OkJHome",
                "+if exist \"%JAVA_HOME%\\bin\\java.exe\" goto init",
                "+",
                "+echo.",
                "+echo Error: JAVA_HOME is set to an invalid directory. >&2",
                "+echo JAVA_HOME = \"%JAVA_HOME%\" >&2",
                "+echo Please set the JAVA_HOME variable in your environment to match the >&2",
                "+echo location of your Java installation. >&2",
                "+echo.",
                "+goto error",
                "+",
                "+@REM ==== END VALIDATION ====",
                "+",
                "+:init",
                "+",
                "+@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".",
                "+@REM Fallback to current working directory if not found.",
                "+",
                "+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%",
                "+IF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir",
                "+",
                "+set EXEC_DIR=%CD%",
                "+set WDIR=%EXEC_DIR%",
                "+:findBaseDir",
                "+IF EXIST \"%WDIR%\"\\.mvn goto baseDirFound",
                "+cd ..",
                "+IF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound",
                "+set WDIR=%CD%",
                "+goto findBaseDir",
                "+",
                "+:baseDirFound",
                "+set MAVEN_PROJECTBASEDIR=%WDIR%",
                "+cd \"%EXEC_DIR%\"",
                "+goto endDetectBaseDir",
                "+",
                "+:baseDirNotFound",
                "+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%",
                "+cd \"%EXEC_DIR%\"",
                "+",
                "+:endDetectBaseDir",
                "+",
                "+IF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig",
                "+",
                "+@setlocal EnableExtensions EnableDelayedExpansion",
                "+for /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a",
                "+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%",
                "+",
                "+:endReadAdditionalConfig",
                "+",
                "+SET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"",
                "+set WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"",
                "+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain",
                "+",
                "+set DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.0/maven-wrapper-0.4.0.jar\"",
                "+FOR /F \"tokens=1,2 delims==\" %%A IN (%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties) DO (",
                "+\tIF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B ",
                "+)",
                "+",
                "+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central",
                "+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.",
                "+if exist %WRAPPER_JAR% (",
                "+    echo Found %WRAPPER_JAR%",
                "+) else (",
                "+    echo Couldn't find %WRAPPER_JAR%, downloading it ...",
                "+\techo Downloading from: %DOWNLOAD_URL%",
                "+    powershell -Command \"(New-Object Net.WebClient).DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"",
                "+    echo Finished downloading %WRAPPER_JAR%",
                "+)",
                "+@REM End of extension",
                "+",
                "+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*",
                "+if ERRORLEVEL 1 goto error",
                "+goto end",
                "+",
                "+:error",
                "+set ERROR_CODE=1",
                "+",
                "+:end",
                "+@endlocal & set ERROR_CODE=%ERROR_CODE%",
                "+",
                "+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost",
                "+@REM check for post script, once with legacy .bat ending and once with .cmd ending",
                "+if exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"",
                "+if exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"",
                "+:skipRcPost",
                "+",
                "+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'",
                "+if \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause",
                "+",
                "+if \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%",
                "+",
                "+exit /B %ERROR_CODE%"
            ],
            "changed_files": [
                ".mvn/wrapper/MavenWrapperDownloader.java",
                ".mvn/wrapper/maven-wrapper.jar",
                ".mvn/wrapper/maven-wrapper.properties",
                "mvnw",
                "mvnw.cmd"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "38c304696beb13b045639072c9455101de65a77c",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526935725,
            "hunks": 15,
            "message": "further clean up after rmoving profiling layer * removed empty catch blocks * removed no longer used Strings",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java b/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "index 1c40be511..6514ea9bc 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "@@ -238,61 +238,53 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "     public String invoke() throws Exception {",
                "-        String profileKey = \"invoke: \";",
                "-        try {",
                "-            if (executed) {",
                "-                throw new IllegalStateException(\"Action has already executed\");",
                "-            }",
                "+        if (executed) {",
                "+            throw new IllegalStateException(\"Action has already executed\");",
                "+        }",
                "-            if (asyncManager == null || !asyncManager.hasAsyncActionResult()) {",
                "-                if (interceptors.hasNext()) {",
                "-                    final InterceptorMapping interceptorMapping = interceptors.next();",
                "-                    String interceptorMsg = \"interceptorMapping: \" + interceptorMapping.getName();",
                "-                    try {",
                "-                        Interceptor interceptor = interceptorMapping.getInterceptor();",
                "-                        if (interceptor instanceof WithLazyParams) {",
                "-                            interceptor = lazyParamInjector.injectParams(interceptor, interceptorMapping.getParams(), invocationContext);",
                "-                        }",
                "-                        resultCode = interceptor.intercept(DefaultActionInvocation.this);",
                "-                    } finally {}",
                "-                } else {",
                "-                    resultCode = invokeActionOnly();",
                "+        if (asyncManager == null || !asyncManager.hasAsyncActionResult()) {",
                "+            if (interceptors.hasNext()) {",
                "+                final InterceptorMapping interceptorMapping = interceptors.next();",
                "+                String interceptorMsg = \"interceptorMapping: \" + interceptorMapping.getName();",
                "+                Interceptor interceptor = interceptorMapping.getInterceptor();",
                "+                if (interceptor instanceof WithLazyParams) {",
                "+                    interceptor = lazyParamInjector.injectParams(interceptor, interceptorMapping.getParams(), invocationContext);",
                "                 }",
                "+                resultCode = interceptor.intercept(DefaultActionInvocation.this);",
                "             } else {",
                "-                Object asyncActionResult = asyncManager.getAsyncActionResult();",
                "-                if (asyncActionResult instanceof Throwable) {",
                "-                    throw new Exception((Throwable) asyncActionResult);",
                "-                }",
                "-                asyncAction = null;",
                "-                resultCode = saveResult(proxy.getConfig(), asyncActionResult);",
                "+                resultCode = invokeActionOnly();",
                "             }",
                "+        } else {",
                "+            Object asyncActionResult = asyncManager.getAsyncActionResult();",
                "+            if (asyncActionResult instanceof Throwable) {",
                "+                throw new Exception((Throwable) asyncActionResult);",
                "+            }",
                "+            asyncAction = null;",
                "+            resultCode = saveResult(proxy.getConfig(), asyncActionResult);",
                "+        }",
                "-            if (asyncManager == null || asyncAction == null) {",
                "-                // this is needed because the result will be executed, then control will return to the Interceptor, which will",
                "-                // return above and flow through again",
                "-                if (!executed) {",
                "-                    if (preResultListeners != null) {",
                "-                        LOG.trace(\"Executing PreResultListeners for result [{}]\", result);",
                "-",
                "-                        for (Object preResultListener : preResultListeners) {",
                "-                            PreResultListener listener = (PreResultListener) preResultListener;",
                "+        if (asyncManager == null || asyncAction == null) {",
                "+            // this is needed because the result will be executed, then control will return to the Interceptor, which will",
                "+            // return above and flow through again",
                "+            if (!executed) {",
                "+                if (preResultListeners != null) {",
                "+                    LOG.trace(\"Executing PreResultListeners for result [{}]\", result);",
                "-                            String _profileKey = \"preResultListener: \";",
                "-                            try {",
                "-                                listener.beforeResult(this, resultCode);",
                "-                            } finally {}",
                "-                        }",
                "-                    }",
                "+                    for (Object preResultListener : preResultListeners) {",
                "+                        PreResultListener listener = (PreResultListener) preResultListener;",
                "-                    // now execute the result, if we're supposed to",
                "-                    if (proxy.getExecuteResult()) {",
                "-                        executeResult();",
                "+                        listener.beforeResult(this, resultCode);",
                "                     }",
                "+                }",
                "-                    executed = true;",
                "+                // now execute the result, if we're supposed to",
                "+                if (proxy.getExecuteResult()) {",
                "+                    executeResult();",
                "                 }",
                "-            } else {",
                "-                asyncManager.invokeAsyncAction(asyncAction);",
                "+",
                "+                executed = true;",
                "             }",
                "+        } else {",
                "+            asyncManager.invokeAsyncAction(asyncAction);",
                "+        }",
                "-            return resultCode;",
                "-        } finally {}",
                "+        return resultCode;",
                "     }",
                "@@ -327,3 +319,3 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "             throw new XWorkException(gripe, e, proxy.getConfig());",
                "-        } finally {}",
                "+        }",
                "@@ -376,14 +368,12 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "         String timerKey = \"executeResult: \" + getResultCode();",
                "-        try {",
                "-            if (result != null) {",
                "-                result.execute(this);",
                "-            } else if (resultCode != null && !Action.NONE.equals(resultCode)) {",
                "-                throw new ConfigurationException(\"No result defined for action \" + getAction().getClass().getName()",
                "-                        + \" and result \" + getResultCode(), proxy.getConfig());",
                "-            } else {",
                "-                if (LOG.isDebugEnabled()) {",
                "-                    LOG.debug(\"No result returned for action {} at {}\", getAction().getClass().getName(), proxy.getConfig().getLocation());",
                "-                }",
                "+        if (result != null) {",
                "+            result.execute(this);",
                "+        } else if (resultCode != null && !Action.NONE.equals(resultCode)) {",
                "+            throw new ConfigurationException(\"No result defined for action \" + getAction().getClass().getName()",
                "+                    + \" and result \" + getResultCode(), proxy.getConfig());",
                "+        } else {",
                "+            if (LOG.isDebugEnabled()) {",
                "+                LOG.debug(\"No result returned for action {} at {}\", getAction().getClass().getName(), proxy.getConfig().getLocation());",
                "             }",
                "-        } finally {}",
                "+        }",
                "     }",
                "@@ -479,3 +469,3 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "             }",
                "-        } finally {}",
                "+        }",
                "     }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java b/core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java",
                "index d1bfe320c..6e0458e64 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java",
                "@@ -151,3 +151,2 @@ public class DefaultActionProxy implements ActionProxy, Serializable {",
                "-        String profileKey = \"execute: \";",
                "         try {",
                "@@ -181,21 +180,18 @@ public class DefaultActionProxy implements ActionProxy, Serializable {",
                "     protected void prepare() {",
                "-        String profileKey = \"create DefaultActionProxy: \";",
                "-        try {",
                "-            config = configuration.getRuntimeConfiguration().getActionConfig(namespace, actionName);",
                "+        config = configuration.getRuntimeConfiguration().getActionConfig(namespace, actionName);",
                "-            if (config == null && unknownHandlerManager.hasUnknownHandlers()) {",
                "-                config = unknownHandlerManager.handleUnknownAction(namespace, actionName);",
                "-            }",
                "-            if (config == null) {",
                "-                throw new ConfigurationException(getErrorMessage());",
                "-            }",
                "+        if (config == null && unknownHandlerManager.hasUnknownHandlers()) {",
                "+            config = unknownHandlerManager.handleUnknownAction(namespace, actionName);",
                "+        }",
                "+        if (config == null) {",
                "+            throw new ConfigurationException(getErrorMessage());",
                "+        }",
                "-            resolveMethod();",
                "+        resolveMethod();",
                "-            if (config.isAllowedMethod(method)) {",
                "-                invocation.init(this);",
                "-            } else {",
                "-                throw new ConfigurationException(prepareNotAllowedErrorMessage());",
                "-            }",
                "-        } finally {}",
                "+        if (config.isAllowedMethod(method)) {",
                "+            invocation.init(this);",
                "+        } else {",
                "+            throw new ConfigurationException(prepareNotAllowedErrorMessage());",
                "+        }",
                "     }",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java b/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "index c372410de..67a97547c 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "@@ -582,3 +582,2 @@ public class Dispatcher {",
                "-        String timerKey = \"Handling request from Dispatcher\";",
                "         try {",
                "diff --git a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "index f53e55cd6..286c80db1 100644",
                "--- a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "+++ b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "@@ -163,29 +163,26 @@ public class RestActionInvocation extends DefaultActionInvocation {",
                "     protected void processResult() throws Exception {",
                "-        String timerKey = \"processResult: \" + getResultCode();",
                "-        try {",
                "-            HttpServletRequest request = ServletActionContext.getRequest();",
                "-            HttpServletResponse response = ServletActionContext.getResponse();",
                "+        HttpServletRequest request = ServletActionContext.getRequest();",
                "+        HttpServletResponse response = ServletActionContext.getResponse();",
                "-            // Select the target",
                "-            selectTarget();",
                "+        // Select the target",
                "+        selectTarget();",
                "-            // Get the httpHeaders",
                "-            if (httpHeaders == null) {",
                "-                httpHeaders = new DefaultHttpHeaders(resultCode);",
                "-            }",
                "+        // Get the httpHeaders",
                "+        if (httpHeaders == null) {",
                "+            httpHeaders = new DefaultHttpHeaders(resultCode);",
                "+        }",
                "-            // Apply headers",
                "-            if (!hasErrors) {",
                "-                httpHeaders.apply(request, response, target);",
                "-            } else {",
                "-                disableCatching(response);",
                "-            }",
                "+        // Apply headers",
                "+        if (!hasErrors) {",
                "+            httpHeaders.apply(request, response, target);",
                "+        } else {",
                "+            disableCatching(response);",
                "+        }",
                "-            // Don't return content on a not modified",
                "-            if (httpHeaders.getStatus() != HttpServletResponse.SC_NOT_MODIFIED ) {",
                "-                executeResult();",
                "-            } else {",
                "-                LOG.debug(\"Result not processed because the status code is not modified.\");",
                "-            }",
                "-        } finally {}",
                "+        // Don't return content on a not modified",
                "+        if (httpHeaders.getStatus() != HttpServletResponse.SC_NOT_MODIFIED ) {",
                "+            executeResult();",
                "+        } else {",
                "+            LOG.debug(\"Result not processed because the status code is not modified.\");",
                "+        }",
                "     }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java",
                "core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin, action",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "a86524e22adac1b17b954ba903daca6f42ee6b70",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1527021988,
            "hunks": 0,
            "message": "Merge pull request #224 from sdutry/WW-4779 WW-4779 Remove profiling layer",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4779": ""
            },
            "ghissue_refs": {
                "224": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4779",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 224",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e55ad3fb4540f7c106cda678bb164faff66513f0",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1525242952,
            "hunks": 1,
            "message": "Upgrades Jackson libs to version 2.9.5",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index d6fe0eeec..ea52c06c4 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -105,3 +105,3 @@",
                "         <log4j2.version>2.10.0</log4j2.version>",
                "-        <jackson.version>2.9.4</jackson.version>",
                "+        <jackson.version>2.9.5</jackson.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "58eaa29f6e900aeabc2461f66d7ff310192520f1",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1529311448,
            "hunks": 0,
            "message": "Merge pull request #232 from sullis/OgnlUtilTest-test-immutability WW-4769 add unit tests to verify immutable collections",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4769": ""
            },
            "ghissue_refs": {
                "232": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4769",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 232",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9a860679d09d01df00092097417198d5f313ea70",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1529473092,
            "hunks": 0,
            "message": "Merge pull request #236 from sullis/DispatcherTest-init add unit test for Dispatcher init()",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "236": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 236",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "33ef6826f783d0306040d0b0cf22486b0c438cd5",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526640654,
            "hunks": 1,
            "message": "upgrade Tiles to 3.0.8 See also WW-4887",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 60e630997..d91af3bdf 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -102,4 +102,4 @@",
                "         <asm.version>5.2</asm.version>",
                "-        <tiles.version>3.0.7</tiles.version>",
                "-        <tiles-request.version>1.0.6</tiles-request.version>",
                "+        <tiles.version>3.0.8</tiles.version>",
                "+        <tiles-request.version>1.0.7</tiles-request.version>",
                "         <log4j2.version>2.10.0</log4j2.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4887": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4887",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "57901aba50b99ee9eca41051365d0e81f8f06add",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1525337096,
            "hunks": 0,
            "message": "Merge pull request #125 from lukaszlenart/immutable-context Immutable context",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "125": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 125",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5ebd716fb7ffe10c6f1857c993285c63ab57f838",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1524559436,
            "hunks": 0,
            "message": "Merge pull request #216 from lukaszlenart/javaee5 Upgrade to Java EE5",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "216": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 216",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1045836778466d9105c6ebf074e45bc0b36d01c9",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1526929316,
            "hunks": 1,
            "message": "remove ObjectProfiler Part of removing the profiling layer Issue: * WW-4779",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/profiling/ObjectProfiler.java b/core/src/main/java/com/opensymphony/xwork2/util/profiling/ObjectProfiler.java",
                "deleted file mode 100644",
                "index 286d82bdf..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/profiling/ObjectProfiler.java",
                "+++ /dev/null",
                "@@ -1,177 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-/*",
                "- * Copyright (c) 2002-2003, Atlassian Software Systems Pty Ltd All rights reserved.",
                "- *",
                "- * Redistribution and use in source and binary forms, with or without modification,",
                "- * are permitted provided that the following conditions are met:",
                "- * ",
                "- *     * Redistributions of source code must retain the above copyright notice,",
                "- * this list of conditions and the following disclaimer.",
                "- *     * Redistributions in binary form must reproduce the above copyright notice,",
                "- * this list of conditions and the following disclaimer in the documentation and/or",
                "- * other materials provided with the distribution.",
                "- *     * Neither the name of Atlassian Software Systems Pty Ltd nor the names of",
                "- * its contributors may be used to endorse or promote products derived from this",
                "- * software without specific prior written permission.",
                "- * ",
                "- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND",
                "- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED",
                "- * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE",
                "- * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR",
                "- * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES",
                "- * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;",
                "- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON",
                "- * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT",
                "- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS",
                "- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
                "- */",
                "-package com.opensymphony.xwork2.util.profiling;",
                "-",
                "-import java.lang.reflect.InvocationHandler;",
                "-import java.lang.reflect.InvocationTargetException;",
                "-import java.lang.reflect.Method;",
                "-import java.lang.reflect.Proxy;",
                "-",
                "-/**",
                "- * @author <a href=\"mailto:scott@atlassian.com\">Scott Farquhar</a>",
                "- * @deprecated will be dropped with next major release (2.6)",
                "- */",
                "-@Deprecated",
                "-public class ObjectProfiler {",
                "-",
                "-    /**",
                "-     * <p>",
                "-     * Given a class, and an interface that it implements, return a proxied version of the class that implements",
                "-     * the interface.",
                "-     * </p>",
                "-     *",
                "-     * <p>",
                "-     * The usual use of this is to profile methods from Factory objects:",
                "-     * </p>",
                "-     *",
                "-     * <pre>",
                "-     * public PersistenceManager getPersistenceManager()",
                "-     * {",
                "-     *   return new DefaultPersistenceManager();",
                "-     * }",
                "-     *",
                "-     * instead write:",
                "-     * public PersistenceManager getPersistenceManager()",
                "-     * {",
                "-     *   return ObjectProfiler.getProfiledObject(PersistenceManager.class, new DefaultPersistenceManager());",
                "-     * }",
                "-     * </pre>",
                "-     *",
                "-     * <p>",
                "-     * A side effect of this is that you will no longer be able to downcast to DefaultPersistenceManager.  This is probably a *good* thing.",
                "-     * </p>",
                "-     *",
                "-     * @param interfaceClazz The interface to implement.",
                "-     * @param o              The object to proxy",
                "-     * @return A proxied object, or the input object if the interfaceClazz wasn't an interface.",
                "-     */",
                "-    public static Object getProfiledObject(Class interfaceClazz, Object o) {",
                "-        //if we are not active - then do nothing",
                "-        if (!UtilTimerStack.isActive()) {",
                "-            return o;",
                "-        }",
                "-",
                "-        //this should always be true - you shouldn't be passing something that isn't an interface",
                "-        if (interfaceClazz.isInterface()) {",
                "-            InvocationHandler timerHandler = new TimerInvocationHandler(o);",
                "-            return Proxy.newProxyInstance(interfaceClazz.getClassLoader(),",
                "-                    new Class[]{interfaceClazz}, timerHandler);",
                "-        } else {",
                "-            return o;",
                "-        }",
                "-    }",
                "-",
                "-    /**",
                "-     * A profiled call {@link Method#invoke(java.lang.Object, java.lang.Object[])}. If {@link UtilTimerStack#isActive() }",
                "-     * returns false, then no profiling is performed.",
                "-     *",
                "-     * @param target target method",
                "-     * @param value value",
                "-     * @param args arguments",
                "-     *",
                "-     * @return target object",
                "-     *",
                "-     * @throws IllegalAccessException in case of access errors",
                "-     * @throws InvocationTargetException in case of invocation errors",
                "-     */",
                "-    public static Object profiledInvoke(Method target, Object value, Object[] args) throws IllegalAccessException, InvocationTargetException {",
                "-        //if we are not active - then do nothing",
                "-        if (!UtilTimerStack.isActive()) {",
                "-            return target.invoke(value, args);",
                "-        }",
                "-",
                "-        String logLine = getTrimmedClassName(target) + \".\" + target.getName() + \"()\";",
                "-",
                "-        UtilTimerStack.push(logLine);",
                "-        try {",
                "-            Object returnValue = target.invoke(value, args);",
                "-",
                "-            //if the return value is an interface then we should also proxy it!",
                "-            if (returnValue != null && target.getReturnType().isInterface()) {",
                "-                InvocationHandler timerHandler = new TimerInvocationHandler(returnValue);",
                "-                return Proxy.newProxyInstance(returnValue.getClass().getClassLoader(),",
                "-                        new Class[]{target.getReturnType()}, timerHandler);",
                "-            } else {",
                "-                return returnValue;",
                "-            }",
                "-        } finally {",
                "-            UtilTimerStack.pop(logLine);",
                "-        }",
                "-    }",
                "-",
                "-    /**",
                "-     * Given a method, get the Method name, with no package information.",
                "-     *",
                "-     * @param method method",
                "-     *",
                "-     * @return method name, with no package information",
                "-     */",
                "-    public static String getTrimmedClassName(Method method) {",
                "-        String classname = method.getDeclaringClass().getName();",
                "-        return classname.substring(classname.lastIndexOf('.') + 1);",
                "-    }",
                "-",
                "-}",
                "-",
                "-/**",
                "- * @deprecated will be dropped with next major release (2.6)",
                "- */",
                "-@Deprecated",
                "-class TimerInvocationHandler implements InvocationHandler {",
                "-    protected Object target;",
                "-",
                "-    public TimerInvocationHandler(Object target) {",
                "-        if (target == null) {",
                "-            throw new IllegalArgumentException(\"Target Object passed to timer cannot be null\");",
                "-        }",
                "-        this.target = target;",
                "-    }",
                "-",
                "-    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {",
                "-        return ObjectProfiler.profiledInvoke(method, target, args);",
                "-    }",
                "-",
                "-}"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/util/profiling/ObjectProfiler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4779": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4779",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "058409ea165bbcac66d128a08ea4bce9b2ec356e",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1525241206,
            "hunks": 1,
            "message": "Reverts the previous access state of the method",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java b/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "index 092cb8aad..05db70fc9 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "@@ -66,3 +66,3 @@ public class SecurityMemberAccess implements MemberAccess {",
                "             if (!accessible.isAccessible()) {",
                "-                result = Boolean.TRUE;",
                "+                result = Boolean.FALSE;",
                "                 accessible.setAccessible(true);"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5f51c4c921c2410dc3803944569971486f0ffc3a",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1527487535,
            "hunks": 1,
            "message": "drop convertIfExist method",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/config/AbstractBeanSelectionProvider.java b/core/src/main/java/org/apache/struts2/config/AbstractBeanSelectionProvider.java",
                "index 908a66ed9..34db87d3a 100644",
                "--- a/core/src/main/java/org/apache/struts2/config/AbstractBeanSelectionProvider.java",
                "+++ b/core/src/main/java/org/apache/struts2/config/AbstractBeanSelectionProvider.java",
                "@@ -91,8 +91,2 @@ public abstract class AbstractBeanSelectionProvider implements BeanSelectionProv",
                "-    protected void convertIfExist(LocatableProperties props, String fromKey, String toKey) {",
                "-        if (props.containsKey(fromKey)) {",
                "-            props.setProperty(toKey, props.getProperty(fromKey));",
                "-        }",
                "-    }",
                "-",
                "     static class ObjectFactoryDelegateFactory implements Factory {"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/config/AbstractBeanSelectionProvider.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "174f2b83592b98bb263e4b966c98d7d815dea207",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1527191187,
            "hunks": 1,
            "message": "fix constant used for addition accepted patterns",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java b/core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java",
                "index 97e3c2d0c..9d619f3a0 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java",
                "@@ -55,3 +55,3 @@ public class DefaultAcceptedPatternsChecker implements AcceptedPatternsChecker {",
                "-    @Inject(value = StrutsConstants.STRUTS_ADDITIONAL_EXCLUDED_PATTERNS, required = false)",
                "+    @Inject(value = StrutsConstants.STRUTS_ADDITIONAL_ACCEPTED_PATTERNS, required = false)",
                "     public void setAdditionalAcceptedPatterns(String acceptablePatterns) {"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5c76015ccd22e12d0482560c2e20e766d3428189",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1528056059,
            "hunks": 2,
            "message": "Remove deprecated exceptions",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/InvalidMetadataException.java b/core/src/main/java/com/opensymphony/xwork2/InvalidMetadataException.java",
                "deleted file mode 100644",
                "index 28f921b61..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/InvalidMetadataException.java",
                "+++ /dev/null",
                "@@ -1,40 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package com.opensymphony.xwork2;",
                "-",
                "-/**",
                "- * <code>InvalidMetadataException</code>",
                "- *",
                "- * @author Rainer Hermanns",
                "- * @version $Id$",
                "- *",
                "- * @deprecated to be removed",
                "- */",
                "-@Deprecated",
                "-public class InvalidMetadataException extends RuntimeException {",
                "-",
                "-    /**",
                "-\t * Create a new <code>InvalidMetadataException</code> with the supplied error message.",
                "-     * ",
                "-\t * @param msg the error message",
                "-\t */",
                "-\tpublic InvalidMetadataException(String msg) {",
                "-\t\tsuper(msg);",
                "-\t}",
                "-}",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/config/ReferenceResolverException.java b/core/src/main/java/com/opensymphony/xwork2/config/ReferenceResolverException.java",
                "deleted file mode 100644",
                "index 6f06cc83f..000000000",
                "--- a/core/src/main/java/com/opensymphony/xwork2/config/ReferenceResolverException.java",
                "+++ /dev/null",
                "@@ -1,49 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements.  See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership.  The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License.  You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied.  See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-package com.opensymphony.xwork2.config;",
                "-",
                "-import com.opensymphony.xwork2.XWorkException;",
                "-",
                "-",
                "-/**",
                "- * Exception when a reference can't be resolved.",
                "- *",
                "- * @author Mike",
                "- *",
                "- * @deprecated to be removed",
                "- */",
                "-@Deprecated",
                "-public class ReferenceResolverException extends XWorkException {",
                "-",
                "-    public ReferenceResolverException() {",
                "-        super();",
                "-    }",
                "-",
                "-    public ReferenceResolverException(String s) {",
                "-        super(s);",
                "-    }",
                "-",
                "-    public ReferenceResolverException(String s, Throwable cause) {",
                "-        super(s, cause);",
                "-    }",
                "-",
                "-    public ReferenceResolverException(Throwable cause) {",
                "-        super(cause);",
                "-    }",
                "-}"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/InvalidMetadataException.java",
                "core/src/main/java/com/opensymphony/xwork2/config/ReferenceResolverException.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7087910b40c7054e703efbbf282b6fe918349376",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1529445373,
            "hunks": 1,
            "message": "Jackson 2.9.6",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index dcd81071e..87fdd770f 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -105,3 +105,3 @@",
                "         <log4j2.version>2.10.0</log4j2.version>",
                "-        <jackson.version>2.9.4</jackson.version>",
                "+        <jackson.version>2.9.6</jackson.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "bad9a49060b5d9ddb03f2700cbdeeea5cf51e125",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1530080121,
            "hunks": 7,
            "message": "Fixes how dependencies are injected into constructor",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "index ad4f9d57a..024371b12 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "@@ -72,22 +72,6 @@ public class OgnlUtil {",
                "-    public OgnlUtil(",
                "-        @Inject(value = XWorkConstants.OGNL_EXCLUDED_CLASSES, required = false)",
                "-        String commaDelimitedClasses,",
                "-        @Inject(value = XWorkConstants.OGNL_EXCLUDED_PACKAGE_NAME_PATTERNS, required = false)",
                "-        String commaDelimitedPackagePatterns,",
                "-        @Inject(value = XWorkConstants.OGNL_EXCLUDED_PACKAGE_NAMES, required = false)",
                "-        String commaDelimitedPackageNames",
                "-    ) {",
                "-        excludedClasses = Collections.unmodifiableSet(parseExcludedClasses(commaDelimitedClasses));",
                "-        excludedPackageNamePatterns = Collections.unmodifiableSet(parseExcludedPackageNamePatterns(commaDelimitedPackagePatterns));",
                "-        excludedPackageNames = Collections.unmodifiableSet(parseExcludedPackageNames(commaDelimitedPackageNames));",
                "-    }",
                "-",
                "-    /**",
                "-     * Constructor used by internal DI",
                "-     */",
                "     public OgnlUtil() {",
                "-        excludedClasses = Collections.emptySet();",
                "-        excludedPackageNamePatterns = Collections.emptySet();",
                "-        excludedPackageNames = Collections.emptySet();",
                "+        excludedClasses = new HashSet<>();",
                "+        excludedPackageNamePatterns = new HashSet<>();",
                "+        excludedPackageNames = new HashSet<>();",
                "     }",
                "@@ -118,2 +102,9 @@ public class OgnlUtil {",
                "+    @Inject(value = XWorkConstants.OGNL_EXCLUDED_CLASSES, required = false)",
                "+    public void setExcludedClasses(String commaDelimitedClasses) {",
                "+        Set<Class<?>> excludedClasses = this.excludedClasses;",
                "+        excludedClasses.addAll(parseExcludedClasses(commaDelimitedClasses));",
                "+        this.excludedClasses = Collections.unmodifiableSet(excludedClasses);",
                "+    }",
                "+",
                "     private Set<Class<?>> parseExcludedClasses(String commaDelimitedClasses) {",
                "@@ -133,2 +124,8 @@ public class OgnlUtil {",
                "+    @Inject(value = XWorkConstants.OGNL_EXCLUDED_PACKAGE_NAME_PATTERNS, required = false)",
                "+    public void setExcludedPackageNamePatterns(String commaDelimitedPackagePatterns) {",
                "+        Set<Pattern> excludedPackageNamePatterns = this.excludedPackageNamePatterns;",
                "+        excludedPackageNamePatterns.addAll(parseExcludedPackageNamePatterns(commaDelimitedPackagePatterns));",
                "+        this.excludedPackageNamePatterns = Collections.unmodifiableSet(excludedPackageNamePatterns);",
                "+    }",
                "@@ -145,2 +142,9 @@ public class OgnlUtil {",
                "+    @Inject(value = XWorkConstants.OGNL_EXCLUDED_PACKAGE_NAMES, required = false)",
                "+    public void setExcludedPackageNames(String commaDelimitedPackageNames) {",
                "+        Set<String> excludedPackageNames = this.excludedPackageNames;",
                "+        excludedPackageNames.addAll(parseExcludedPackageNames(commaDelimitedPackageNames));",
                "+        this.excludedPackageNames = Collections.unmodifiableSet(excludedPackageNames);",
                "+    }",
                "+",
                "     private Set<String> parseExcludedPackageNames(String commaDelimitedPackageNames) {",
                "@@ -720,9 +724,2 @@ public class OgnlUtil {",
                "-    protected void addExcludedClasses(String commaDelimitedClasses) {",
                "-        Set<Class<?>> existingClasses = new HashSet<>(excludedClasses);",
                "-        existingClasses.addAll(parseExcludedClasses(commaDelimitedClasses));",
                "-",
                "-        excludedClasses = Collections.unmodifiableSet(existingClasses);",
                "-    }",
                "-",
                "     private interface OgnlTask<T> {",
                "diff --git a/core/src/main/resources/struts-default.xml b/core/src/main/resources/struts-default.xml",
                "index 9d723903f..fda6cfbf3 100644",
                "--- a/core/src/main/resources/struts-default.xml",
                "+++ b/core/src/main/resources/struts-default.xml",
                "@@ -61,3 +61,2 @@",
                "                 freemarker.ext.rhino.,",
                "-                freemarker.ext.beans.,",
                "                 sun.reflect.,"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "core/src/main/resources/struts-default.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "52e8d46364cdbd997071aa3288caf5ea2385f9ae",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1529574080,
            "hunks": 1,
            "message": "revert a delete mistake from previous commit",
            "diff": [
                "diff --git a/core/src/main/resources/struts-default.xml b/core/src/main/resources/struts-default.xml",
                "index c761b7ff6..25d765245 100644",
                "--- a/core/src/main/resources/struts-default.xml",
                "+++ b/core/src/main/resources/struts-default.xml",
                "@@ -63,3 +63,2 @@",
                "                 freemarker.ext.rhino.,",
                "-                freemarker.ext.beans.,",
                "                 sun.reflect.,"
            ],
            "changed_files": [
                "core/src/main/resources/struts-default.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_3_35",
                "STRUTS_2_3_36",
                "STRUTS_2_3_37"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "86e5bd7f52aa58b613717e471dff5eb591683d37",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1529561984,
            "hunks": 1,
            "message": "Upgrades freemarker",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 31d24cfdb..3880f8c6d 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -546,3 +546,3 @@",
                "                 <artifactId>freemarker</artifactId>",
                "-                <version>2.3.22</version>",
                "+                <version>2.3.28</version>",
                "             </dependency>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_3_35",
                "STRUTS_2_3_36",
                "STRUTS_2_3_37"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "6ec2bdc197f30af472c0ae176dca80d2944553e6",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1531381221,
            "hunks": 4,
            "message": "Uses proper path to Gitbox",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 3880f8c6d..3b0105206 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -30,6 +30,6 @@",
                "     <scm>",
                "-        <connection>scm:git:git://git.apache.org/struts.git</connection>",
                "-        <developerConnection>scm:git:https://git-wip-us.apache.org/repos/asf/struts.git</developerConnection>",
                "-        <url>http://git.apache.org/struts.git</url>",
                "-        <tag>STRUTS_2_3_24_1</tag>",
                "+        <connection>scm:git:https://gitbox.apache.org/repos/asf/struts.git</connection>",
                "+        <developerConnection>scm:git:https://gitbox.apache.org/repos/asf/struts.git</developerConnection>",
                "+        <url>https://github.com/apache/struts/</url>",
                "+        <tag>support-2-3</tag>",
                "     </scm>",
                "@@ -38,3 +38,3 @@",
                "         <system>JIRA</system>",
                "-        <url>https://issues.apache.org/jira/browse/WW</url>",
                "+        <url>https://issues.apache.org/jira/projects/WW</url>",
                "     </issueManagement>",
                "@@ -43,3 +43,3 @@",
                "         <system>Jenkins</system>",
                "-        <url>https://builds.apache.org/hudson/view/S-Z/view/Struts</url>",
                "+        <url>https://builds.apache.org/view/S-Z/view/Struts/</url>",
                "         <notifiers>",
                "@@ -54,9 +54,2 @@",
                "-    <distributionManagement>",
                "-        <site>",
                "-            <id>apache-site</id>",
                "-            <url>scm:svn:https://svn.apache.org/repos/infra/websites/production/struts/content/release/2.3.x/</url>",
                "-        </site>",
                "-    </distributionManagement>",
                "-",
                "     <modules>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_3_35",
                "STRUTS_2_3_36",
                "STRUTS_2_3_37"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "949e069f534b48b1919c457cec8a98e71eb9b4bf",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1524761553,
            "hunks": 1,
            "message": "make maven's surefire show stacktrace in console",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index ccce626f5..31d24cfdb 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -183,2 +183,3 @@",
                "                         </excludes>",
                "+                        <useFile>false</useFile>",
                "                     </configuration>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_3_35",
                "STRUTS_2_3_36",
                "STRUTS_2_3_37"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "fbc780e779d96e2148812fa8bafe67ec976e2538",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1529488073,
            "hunks": 4,
            "message": "Adds proper handling of primitive types",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java b/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "index 905ef775c..1e4ecc8a0 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "@@ -135,4 +135,4 @@ public class SecurityMemberAccess extends DefaultMemberAccess {",
                "-        final String targetPackageName = targetPackage == null ? \"\" : targetPackage.getName();",
                "-        final String memberPackageName = memberPackage == null ? \"\" : memberPackage.getName();",
                "+        String targetPackageName = targetPackage == null ? \"\" : targetPackage.getName();",
                "+        String memberPackageName = memberPackage == null ? \"\" : memberPackage.getName();",
                "@@ -144,2 +144,5 @@ public class SecurityMemberAccess extends DefaultMemberAccess {",
                "+        targetPackageName = targetPackageName + \".\";",
                "+        memberPackageName = memberPackageName + \".\";",
                "+        ",
                "         for (String packageName: excludedPackageNames) {",
                "diff --git a/core/src/main/resources/struts-default.xml b/core/src/main/resources/struts-default.xml",
                "index 27462a1e4..01453db8e 100644",
                "--- a/core/src/main/resources/struts-default.xml",
                "+++ b/core/src/main/resources/struts-default.xml",
                "@@ -62,5 +62,4 @@",
                "               value=\"",
                "-                java.lang.,",
                "                 ognl.,",
                "-                javax,",
                "+                javax.,",
                "                 freemarker.core.,"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "core/src/main/resources/struts-default.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "bea6fb599d731aaceb2606542a84fb3c0eb29b35",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1529561973,
            "hunks": 5,
            "message": "Ports changes to properly support primitives",
            "diff": [
                "diff --git a/core/src/main/resources/struts-default.xml b/core/src/main/resources/struts-default.xml",
                "index 3686c20f6..15bd60ea1 100644",
                "--- a/core/src/main/resources/struts-default.xml",
                "+++ b/core/src/main/resources/struts-default.xml",
                "@@ -54,3 +54,2 @@",
                "                 ognl.DefaultMemberAccess,",
                "-                com.opensymphony.xwork2.ognl.SecurityMemberAccess,",
                "                 com.opensymphony.xwork2.ActionContext\" />",
                "@@ -62,3 +61,13 @@",
                "     <!-- this is simpler version of the above used with string comparison -->",
                "-    <constant name=\"struts.excludedPackageNames\" value=\"java.lang.,ognl,javax\" />",
                "+    <constant name=\"struts.excludedPackageNames\"",
                "+              value=\"",
                "+                ognl.,",
                "+                javax.,",
                "+                freemarker.core.,",
                "+                freemarker.template.,",
                "+                freemarker.ext.rhino.,",
                "+                sun.reflect.,",
                "+                javassist.,",
                "+                com.opensymphony.xwork2.ognl.,",
                "+                com.opensymphony.xwork2.security.\" />",
                "diff --git a/xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java b/xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "index 7d52a46fa..4d2ebcb06 100644",
                "--- a/xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "+++ b/xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "@@ -141,5 +141,5 @@ public class SecurityMemberAccess extends DefaultMemberAccess {",
                "         }",
                "-        ",
                "-        final String targetPackageName = targetPackage == null ? \"\" : targetPackage.getName();",
                "-        final String memberPackageName = memberPackage == null ? \"\" : memberPackage.getName();",
                "+",
                "+        String targetPackageName = targetPackage == null ? \"\" : targetPackage.getName();",
                "+        String memberPackageName = memberPackage == null ? \"\" : memberPackage.getName();",
                "@@ -151,5 +151,8 @@ public class SecurityMemberAccess extends DefaultMemberAccess {",
                "+        targetPackageName = targetPackageName + \".\";",
                "+        memberPackageName = memberPackageName + \".\";",
                "+",
                "         for (String packageName: excludedPackageNames) {",
                "             if (targetPackageName.startsWith(packageName) || targetPackageName.equals(packageName)",
                "-                    || memberPackageName.startsWith(packageName) || memberPackageName.equals(packageName)) {",
                "+                || memberPackageName.startsWith(packageName) || memberPackageName.equals(packageName)) {",
                "                 return true;"
            ],
            "changed_files": [
                "core/src/main/resources/struts-default.xml",
                "xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_3_35",
                "STRUTS_2_3_36",
                "STRUTS_2_3_37"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a89b7c11afba247f31f905b84e87aed1120f34ad",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1531380565,
            "hunks": 8,
            "message": "Uses the new docs site to build assembly",
            "diff": [
                "diff --git a/assembly/pom.xml b/assembly/pom.xml",
                "index fd136b705..261d7fb3f 100644",
                "--- a/assembly/pom.xml",
                "+++ b/assembly/pom.xml",
                "@@ -84,3 +84,3 @@",
                "                     <execution>",
                "-                        <id>cwiki-docs</id>",
                "+                        <id>docs</id>",
                "                         <phase>prepare-package</phase>",
                "@@ -90,4 +90,4 @@",
                "                         <configuration>",
                "-                            <tasks>",
                "-                                <mkdir dir=\"${project.build.directory}/cwiki/\" />",
                "+                            <target>",
                "+                                <mkdir dir=\"${project.build.directory}/docs/\" />",
                "                                 <exec executable=\"wget\">",
                "@@ -95,3 +95,3 @@",
                "                                     <arg value=\"-nH\" />",
                "-                                    <arg value=\"--cut-dirs=3\" />",
                "+                                    <arg value=\"-x\" />",
                "                                     <arg value=\"-nv\" />",
                "@@ -99,14 +99,10 @@",
                "                                     <arg value=\"-L\" />",
                "-                                    <arg value=\"-l 0\" />",
                "                                     <arg value=\"-np\" />",
                "-                                    <arg value=\"--directory-prefix=${project.build.directory}/cwiki\" />",
                "+                                    <arg value=\"--directory-prefix=${project.build.directory}/docs\" />",
                "                                     <arg value=\"--no-check-certificate\" />",
                "                                     <arg value=\"-r\" />",
                "-                                    <arg value=\"http://struts.apache.org/docs/\" />",
                "+                                    <arg value=\"-i\" />",
                "+                                    <arg value=\"src/main/resources/docs-urls.txt\" />",
                "                                 </exec>",
                "-                                <delete>",
                "-                                    <fileset dir=\"${project.build.directory}/cwiki/\" includes=\"**/index.*\" />",
                "-                                </delete>",
                "-                                <copy file=\"${project.build.directory}/cwiki/home.html\" tofile=\"${project.build.directory}/cwiki/index.html\" />",
                "-                            </tasks>",
                "+                            </target>",
                "                         </configuration>",
                "diff --git a/assembly/src/main/assembly/docs.xml b/assembly/src/main/assembly/docs.xml",
                "index cb025e51e..60b3c9442 100644",
                "--- a/assembly/src/main/assembly/docs.xml",
                "+++ b/assembly/src/main/assembly/docs.xml",
                "@@ -51,3 +51,3 @@",
                "         <fileSet>",
                "-            <directory>target/cwiki</directory>",
                "+            <directory>target/docs</directory>",
                "             <outputDirectory>docs/docs</outputDirectory>"
            ],
            "changed_files": [
                "assembly/pom.xml",
                "assembly/src/main/assembly/docs.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_3_35",
                "STRUTS_2_3_36",
                "STRUTS_2_3_37"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3ec7fa9d80f0e04b385b4846fef6f3f3c20e3a5e",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1527591524,
            "hunks": 8,
            "message": "Makes OgnlUtil more immutable",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "index 0f2d78e5f..ad4f9d57a 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "@@ -64,5 +64,5 @@ public class OgnlUtil {",
                "-    private Set<Class<?>> excludedClasses = Collections.emptySet();",
                "-    private Set<Pattern> excludedPackageNamePatterns = Collections.emptySet();",
                "-    private Set<String> excludedPackageNames = Collections.emptySet();",
                "+    private Set<Class<?>> excludedClasses;",
                "+    private Set<Pattern> excludedPackageNamePatterns;",
                "+    private Set<String> excludedPackageNames;",
                "@@ -72,2 +72,24 @@ public class OgnlUtil {",
                "+    public OgnlUtil(",
                "+        @Inject(value = XWorkConstants.OGNL_EXCLUDED_CLASSES, required = false)",
                "+        String commaDelimitedClasses,",
                "+        @Inject(value = XWorkConstants.OGNL_EXCLUDED_PACKAGE_NAME_PATTERNS, required = false)",
                "+        String commaDelimitedPackagePatterns,",
                "+        @Inject(value = XWorkConstants.OGNL_EXCLUDED_PACKAGE_NAMES, required = false)",
                "+        String commaDelimitedPackageNames",
                "+    ) {",
                "+        excludedClasses = Collections.unmodifiableSet(parseExcludedClasses(commaDelimitedClasses));",
                "+        excludedPackageNamePatterns = Collections.unmodifiableSet(parseExcludedPackageNamePatterns(commaDelimitedPackagePatterns));",
                "+        excludedPackageNames = Collections.unmodifiableSet(parseExcludedPackageNames(commaDelimitedPackageNames));",
                "+    }",
                "+",
                "+    /**",
                "+     * Constructor used by internal DI",
                "+     */",
                "+    public OgnlUtil() {",
                "+        excludedClasses = Collections.emptySet();",
                "+        excludedPackageNamePatterns = Collections.emptySet();",
                "+        excludedPackageNames = Collections.emptySet();",
                "+    }",
                "+",
                "     @Inject",
                "@@ -96,4 +118,3 @@ public class OgnlUtil {",
                "-    @Inject(value = XWorkConstants.OGNL_EXCLUDED_CLASSES, required = false)",
                "-    public void setExcludedClasses(String commaDelimitedClasses) {",
                "+    private Set<Class<?>> parseExcludedClasses(String commaDelimitedClasses) {",
                "         Set<String> classNames = TextParseUtil.commaDelimitedStringToSet(commaDelimitedClasses);",
                "@@ -109,7 +130,7 @@ public class OgnlUtil {",
                "-        excludedClasses = Collections.unmodifiableSet(classes);",
                "+        return classes;",
                "     }",
                "-    @Inject(value = XWorkConstants.OGNL_EXCLUDED_PACKAGE_NAME_PATTERNS, required = false)",
                "-    public void setExcludedPackageNamePatterns(String commaDelimitedPackagePatterns) {",
                "+",
                "+    private Set<Pattern> parseExcludedPackageNamePatterns(String commaDelimitedPackagePatterns) {",
                "         Set<String> packagePatterns = TextParseUtil.commaDelimitedStringToSet(commaDelimitedPackagePatterns);",
                "@@ -121,8 +142,7 @@ public class OgnlUtil {",
                "-        excludedPackageNamePatterns = Collections.unmodifiableSet(packageNamePatterns);",
                "+        return packageNamePatterns;",
                "     }",
                "-    @Inject(value = XWorkConstants.OGNL_EXCLUDED_PACKAGE_NAMES, required = false)",
                "-    public void setExcludedPackageNames(String commaDelimitedPackageNames) {",
                "-        excludedPackageNames = Collections.unmodifiableSet(TextParseUtil.commaDelimitedStringToSet(commaDelimitedPackageNames));",
                "+    private Set<String> parseExcludedPackageNames(String commaDelimitedPackageNames) {",
                "+        return TextParseUtil.commaDelimitedStringToSet(commaDelimitedPackageNames);",
                "     }",
                "@@ -700,2 +720,9 @@ public class OgnlUtil {",
                "+    protected void addExcludedClasses(String commaDelimitedClasses) {",
                "+        Set<Class<?>> existingClasses = new HashSet<>(excludedClasses);",
                "+        existingClasses.addAll(parseExcludedClasses(commaDelimitedClasses));",
                "+",
                "+        excludedClasses = Collections.unmodifiableSet(existingClasses);",
                "+    }",
                "+",
                "     private interface OgnlTask<T> {"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "afc8f20440f80564d48cb1cc9904c76e02e84aac",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1524578221,
            "hunks": 2,
            "message": "fork apt to avoid duplicate same class loading which fails JDK6",
            "diff": [
                "diff --git a/core/pom.xml b/core/pom.xml",
                "index d71be19ca..c579b01bf 100644",
                "--- a/core/pom.xml",
                "+++ b/core/pom.xml",
                "@@ -48,7 +48,3 @@",
                "                         outFile=${basedir}/target/classes/META-INF/struts-tags.tld,",
                "-                        description=\"To make it easier to access dynamic data;",
                "-                        the Apache Struts framework includes a library of custom tags.",
                "-                        The tags interact with the framework's validation and internationalization features;",
                "-                        to ensure that input is correct and output is localized.",
                "-                        The Struts Tags can be used with JSP FreeMarker or Velocity.\",",
                "+                        description='To make it easier to access dynamic data the Apache Struts framework includes a library of custom tags. The tags interact with the framework validation and internationalization features to ensure that input is correct and output is localized. The Struts Tags can be used with JSP FreeMarker or Velocity.',",
                "                         outTemplatesDir=${basedir}/src/site/resources/tags",
                "@@ -56,3 +52,3 @@",
                "                     <resourceTargetPath>target</resourceTargetPath>",
                "-                    <fork>false</fork>",
                "+                    <fork>true</fork>",
                "                     <force>true</force>"
            ],
            "changed_files": [
                "core/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_3_35",
                "STRUTS_2_3_36",
                "STRUTS_2_3_37"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "45effc3822c5ea8fb4afbcb5bbab33b8b2bb08ff",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1530273503,
            "hunks": 3,
            "message": "add an extra unit test",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "index 024371b12..13691d571 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "@@ -104,3 +104,4 @@ public class OgnlUtil {",
                "     public void setExcludedClasses(String commaDelimitedClasses) {",
                "-        Set<Class<?>> excludedClasses = this.excludedClasses;",
                "+        Set<Class<?>> excludedClasses = new HashSet<>();",
                "+        excludedClasses.addAll(this.excludedClasses);",
                "         excludedClasses.addAll(parseExcludedClasses(commaDelimitedClasses));",
                "@@ -126,3 +127,4 @@ public class OgnlUtil {",
                "     public void setExcludedPackageNamePatterns(String commaDelimitedPackagePatterns) {",
                "-        Set<Pattern> excludedPackageNamePatterns = this.excludedPackageNamePatterns;",
                "+        Set<Pattern> excludedPackageNamePatterns = new HashSet<>();",
                "+        excludedPackageNamePatterns.addAll(this.excludedPackageNamePatterns);",
                "         excludedPackageNamePatterns.addAll(parseExcludedPackageNamePatterns(commaDelimitedPackagePatterns));",
                "@@ -144,3 +146,4 @@ public class OgnlUtil {",
                "     public void setExcludedPackageNames(String commaDelimitedPackageNames) {",
                "-        Set<String> excludedPackageNames = this.excludedPackageNames;",
                "+        Set<String> excludedPackageNames = new HashSet<>();",
                "+        excludedPackageNames.addAll(this.excludedPackageNames);",
                "         excludedPackageNames.addAll(parseExcludedPackageNames(commaDelimitedPackageNames));"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "9fcbd912bc9ba8eed1ca9bc9422daf79d8b2f6ac",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1529562011,
            "hunks": 2,
            "message": "Adds more general exclusion",
            "diff": [
                "diff --git a/core/src/main/resources/struts-default.xml b/core/src/main/resources/struts-default.xml",
                "index 01453db8e..4882804e0 100644",
                "--- a/core/src/main/resources/struts-default.xml",
                "+++ b/core/src/main/resources/struts-default.xml",
                "@@ -52,3 +52,2 @@",
                "                 ognl.DefaultMemberAccess,",
                "-                com.opensymphony.xwork2.ognl.SecurityMemberAccess,",
                "                 com.opensymphony.xwork2.ActionContext\" />",
                "@@ -69,3 +68,5 @@",
                "                 sun.reflect.,",
                "-                javassist.\" />",
                "+                javassist.,",
                "+                com.opensymphony.xwork2.ognl.,",
                "+                com.opensymphony.xwork2.security.\" />"
            ],
            "changed_files": [
                "core/src/main/resources/struts-default.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33"
            ],
            "matched_rules": []
        }
    ]
}
