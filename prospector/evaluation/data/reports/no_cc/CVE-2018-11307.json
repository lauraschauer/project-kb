{
    "advisory_record": {
        "cve_id": "CVE-2018-11307",
        "description": "An issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.5. Use of Jackson default typing along with a gadget class from iBatis allows exfiltration of content. Fixed in 2.7.9.4, 2.8.11.2, and 2.9.6.",
        "reserved_timestamp": 1526601600,
        "published_timestamp": 1562686645,
        "updated_timestamp": 1603228493,
        "repository_url": null,
        "references": {
            "": 854,
            "https://access.redhat.com/support/": 75,
            "https://access.redhat.com/downloads/": 60,
            "https://access.redhat.com/errata/": 45,
            "https://access.redhat.com/labs/": 45,
            "https://access.redhat.com/management/": 30,
            "https://access.redhat.com/": 30,
            "https://access.redhat.com/products/red-hat-enterprise-linux/": 30,
            "https://access.redhat.com/products/red-hat-openshift-container-platform": 30,
            "https://access.redhat.com/products/red-hat-ansible-automation-platform/": 30,
            "https://access.redhat.com/products/": 30,
            "https://access.redhat.com/documentation": 30,
            "https://access.redhat.com/product-life-cycles/": 30,
            "https://access.redhat.com/security": 30,
            "https://access.redhat.com/security/security-updates/#/security-advisories": 30,
            "https://access.redhat.com/security/security-updates/#/cve": 30,
            "https://access.redhat.com/support/contact/": 30,
            "https://status.redhat.com": 30,
            "https://access.redhat.com/downloads/content/package-browser": 15,
            "https://catalog.redhat.com/software/containers/explore/": 15,
            "https://access.redhat.com/articles/1202803": 15,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Solution": 15,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Article": 15,
            "https://access.redhat.com/documentation/en/red_hat_enterprise_linux": 15,
            "https://access.redhat.com/documentation/en/openshift_container_platform": 15,
            "https://access.redhat.com/documentation/en/red_hat_ansible_automation_platform": 15,
            "https://access.redhat.com/documentation/": 15,
            "https://access.redhat.com/security/": 15,
            "https://access.redhat.com/security/vulnerabilities": 15,
            "https://access.redhat.com/security/data": 15,
            "https://access.redhat.com/security/security-updates/#/security-labs": 15,
            "https://access.redhat.com/security/updates/backporting/": 15,
            "https://access.redhat.com/support/cases/": 15,
            "https://access.redhat.com/support/cases/#/troubleshoot": 15,
            "https://access.redhat.com/community": 15,
            "https://access.redhat.com/community/": 15,
            "https://access.redhat.com/discussions/": 15,
            "https://access.redhat.com/announcements/": 15,
            "https://access.redhat.com/accelerators/": 15,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html": 15,
            "https://cloud.redhat.com/insights": 15,
            "https://access.redhat.com/changeLanguage?language=en": 15,
            "https://access.redhat.com/changeLanguage?language=fr": 15,
            "https://access.redhat.com/changeLanguage?language=ko": 15,
            "https://access.redhat.com/changeLanguage?language=ja": 15,
            "https://access.redhat.com/changeLanguage?language=zh_CN": 15,
            "https://access.redhat.com/products/red-hat-satellite/": 15,
            "https://access.redhat.com/products/red-hat-subscription-management/": 15,
            "https://access.redhat.com/products/red-hat-insights/": 15,
            "https://access.redhat.com/products/red-hat-openstack-platform/": 15,
            "https://access.redhat.com/products/red-hat-openshift-container-platform/": 15,
            "https://access.redhat.com/products/red-hat-openshift-ai/": 15,
            "https://access.redhat.com/products/openshift-dedicated-red-hat/": 15,
            "https://access.redhat.com/products/red-hat-advanced-cluster-security-for-kubernetes/": 15,
            "https://access.redhat.com/products/red-hat-advanced-cluster-management-for-kubernetes/": 15,
            "https://access.redhat.com/products/red-hat-quay/": 15,
            "https://access.redhat.com/products/red-hat-openshift-dev-spaces": 15,
            "https://access.redhat.com/products/red-hat-openshift-service-aws": 15,
            "https://access.redhat.com/products/red-hat-storage/": 15,
            "https://access.redhat.com/products/red-hat-hyperconverged-infrastructure/": 15,
            "https://access.redhat.com/products/red-hat-ceph-storage/": 15,
            "https://access.redhat.com/products/red-hat-openshift-data-foundation": 15,
            "https://access.redhat.com/products/red-hat-runtimes/": 15,
            "https://access.redhat.com/products/red-hat-jboss-enterprise-application-platform/": 15,
            "https://access.redhat.com/products/red-hat-data-grid/": 15,
            "https://access.redhat.com/products/red-hat-jboss-web-server/": 15,
            "https://access.redhat.com/products/red-hat-build-of-keycloak/": 15,
            "https://access.redhat.com/products/spring-boot/": 15,
            "https://access.redhat.com/products/nodejs/": 15,
            "https://access.redhat.com/products/quarkus/": 15,
            "https://access.redhat.com/products/red-hat-application-foundations/": 15,
            "https://access.redhat.com/products/red-hat-fuse/": 15,
            "https://access.redhat.com/products/red-hat-amq/": 15,
            "https://access.redhat.com/products/red-hat-3scale/": 15,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1671096": 15,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1671097": 15,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1677341": 15,
            "https://www.redhat.com/security/data/cve/CVE-2018-11307.html": 15,
            "https://www.redhat.com/security/data/cve/CVE-2018-12022.html": 15,
            "https://www.redhat.com/security/data/cve/CVE-2018-12023.html": 15,
            "https://access.redhat.com/security/updates/classification/#important": 15,
            "https://access.redhat.com/security/team/contact/": 15,
            "https://redhat.com/en": 15,
            "https://twitter.com/RedHat": 15,
            "https://access.redhat.com/management": 15,
            "https://access.redhat.com/support": 15,
            "https://access.redhat.com/support/customer-service": 15,
            "https://access.redhat.com/articles/33844": 15,
            "https://access.redhat.com/help/login_assistance": 15,
            "https://www.redhat.com/en/trust": 15,
            "https://www.redhat.com/en/about/browser-support": 15,
            "https://www.redhat.com/en/about/digital-accessibility": 15,
            "https://access.redhat.com/recognition/": 15,
            "https://access.redhat.com/help/colophon/": 15,
            "https://www.redhat.com/": 15,
            "http://developers.redhat.com/": 15,
            "https://connect.redhat.com/": 15,
            "https://cloud.redhat.com/": 15,
            "https://access.redhat.com/subscription-value": 15,
            "https://www.redhat.com/about/": 15,
            "http://jobs.redhat.com": 15,
            "https://redhat.com/en/about/company": 15,
            "https://redhat.com/en/jobs": 15,
            "https://redhat.com/en/events": 15,
            "https://redhat.com/en/about/office-locations": 15,
            "https://redhat.com/en/contact": 15,
            "https://redhat.com/en/blog": 15,
            "https://redhat.com/en/about/our-culture/diversity-equity-inclusion": 15,
            "https://coolstuff.redhat.com/": 15,
            "https://www.redhat.com/en/summit": 15,
            "https://redhat.com/en/about/privacy-policy": 15,
            "https://redhat.com/en/about/terms-use": 15,
            "https://redhat.com/en/about/all-policies-guidelines": 15,
            "https://redhat.com/en/about/digital-accessibility": 15,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1666415": 11,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1666418": 11,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1666423": 11,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1666428": 11,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1666482": 11,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1666484": 11,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1666489": 11,
            "https://www.redhat.com/security/data/cve/CVE-2018-14718.html": 11,
            "https://www.redhat.com/security/data/cve/CVE-2018-14719.html": 11,
            "https://www.redhat.com/security/data/cve/CVE-2018-14720.html": 11,
            "https://www.redhat.com/security/data/cve/CVE-2018-14721.html": 11,
            "https://www.redhat.com/security/data/cve/CVE-2018-19360.html": 11,
            "https://www.redhat.com/security/data/cve/CVE-2018-19361.html": 11,
            "https://www.redhat.com/security/data/cve/CVE-2018-19362.html": 11,
            "https://github.com/FasterXML/jackson-databind/issues/2032": 6,
            "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax": 6,
            "commit::27b4defc270454dea6842bd9279f17387eceb737": 5,
            "https://access.redhat.com/errata/RHSA-2019:1822": 4,
            "https://access.redhat.com/errata/RHSA-2019:1823": 4,
            "https://access.redhat.com/errata/RHSA-2019:2804": 4,
            "https://access.redhat.com/errata/RHSA-2019:2858": 4,
            "https://access.redhat.com/errata/RHSA-2019:3002": 4,
            "https://access.redhat.com/errata/RHSA-2019:3140": 4,
            "https://access.redhat.com/errata/RHSA-2019:3149": 4,
            "https://access.redhat.com/errata/RHSA-2019:3892": 4,
            "https://access.redhat.com/errata/RHSA-2019:4037": 4,
            "https://access.redhat.com/errata/RHSA-2019:0782": 4,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1628702": 4,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1660263": 4,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1682108": 4,
            "https://www.redhat.com/security/data/cve/CVE-2018-14642.html": 4,
            "https://www.redhat.com/security/data/cve/CVE-2019-3805.html": 4,
            "https://www.redhat.com/security/data/cve/CVE-2019-3894.html": 4,
            "https://github.com/mybatis/mybatis-3": 3,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1722971": 3,
            "https://www.redhat.com/security/data/cve/CVE-2019-10173.html": 3,
            "https://www.redhat.com/security/data/cve/CVE-2019-12814.html": 3,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1506612": 3,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1528565": 3,
            "https://www.redhat.com/security/data/cve/CVE-2017-15095.html": 3,
            "https://www.redhat.com/security/data/cve/CVE-2017-17485.html": 3,
            "https://access.redhat.com/articles/11258": 3,
            "https://github.com/features/actions": 3,
            "https://github.com/features/packages": 3,
            "https://github.com/features/security": 3,
            "https://github.com/features/codespaces": 3,
            "https://github.com/features/copilot": 3,
            "https://github.com/features/code-review": 3,
            "https://github.com/features/issues": 3,
            "https://github.com/features/discussions": 3,
            "https://github.com/features": 3,
            "https://docs.github.com": 3,
            "https://skills.github.com": 3,
            "https://github.blog": 3,
            "https://github.com/enterprise": 3,
            "https://github.com/team": 3,
            "https://github.com/enterprise/startups": 3,
            "https://github.com/solutions/industries/healthcare": 3,
            "https://github.com/solutions/industries/financial-services": 3,
            "https://github.com/solutions/industries/manufacturing": 3,
            "https://github.com/solutions/ci-cd": 3,
            "https://github.com/solutions/devops": 3,
            "https://github.com/solutions/devsecops": 3,
            "https://resources.github.com/learn/pathways": 3,
            "https://resources.github.com": 3,
            "https://github.com/customer-stories": 3,
            "https://partner.github.com": 3,
            "https://github.com/readme": 3,
            "https://github.com/topics": 3,
            "https://github.com/trending": 3,
            "https://github.com/collections": 3,
            "https://github.com/enterprise/advanced-security": 3,
            "https://github.com/pricing": 3,
            "https://github.com": 3,
            "https://docs.github.com/site-policy/github-terms/github-terms-of-service": 3,
            "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement": 3,
            "https://github.com/security": 3,
            "https://www.githubstatus.com/": 3,
            "https://docs.github.com/": 3,
            "https://support.github.com?tags=dotcom-footer": 3,
            "https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/": 3,
            "https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/installation_guide/": 3,
            "https://lists.apache.org/thread.html/7fcf88aff0d1deaa5c3c7be8d58c05ad7ad5da94b59065d8e7c50c5d%40%3Cissues.lucene.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442%40%3Cdev.drill.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f%40%3Cdev.drill.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc%40%3Cissues.drill.apache.org%3E": 2,
            "https://medium.com/%40cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062": 2,
            "https://www.oracle.com/security-alerts/cpuapr2020.html": 2,
            "https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html": 2,
            "https://www.oracle.com/security-alerts/cpujan2020.html": 2,
            "https://www.oracle.com/security-alerts/cpuoct2020.html": 2,
            "https://nvd.nist.gov/vuln/detail/CVE-2017-7525": 2,
            "https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.8": 2,
            "https://access.redhat.com/errata/RHSA-2019:0877": 2,
            "https://access.redhat.com/errata/RHSA-2019:1106": 2,
            "https://access.redhat.com/errata/RHSA-2019:1107": 2,
            "https://access.redhat.com/errata/RHSA-2019:1108": 2,
            "https://access.redhat.com/errata/RHSA-2019:1140": 2,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1462702": 2,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1538332": 2,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1549276": 2,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1573391": 2,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1713468": 2,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1725795": 2,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1725807": 2,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1737517": 2,
            "https://www.redhat.com/security/data/cve/CVE-2017-7525.html": 2,
            "https://www.redhat.com/security/data/cve/CVE-2018-5968.html": 2,
            "https://www.redhat.com/security/data/cve/CVE-2018-7489.html": 2,
            "https://www.redhat.com/security/data/cve/CVE-2018-10237.html": 2,
            "https://www.redhat.com/security/data/cve/CVE-2019-12086.html": 2,
            "https://www.redhat.com/security/data/cve/CVE-2019-12384.html": 2,
            "https://www.redhat.com/security/data/cve/CVE-2019-14379.html": 2,
            "https://access.redhat.com/articles/3060411": 2,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1715197": 2,
            "https://www.redhat.com/security/data/cve/CVE-2019-0201.html": 2,
            "https://access.redhat.com/documentation/en-us/red_hat_fuse/7.5/": 2,
            "https://github.com/cowtowncoder": 2,
            "http://mybatis.github.io/mybatis-3/": 2,
            "commit::master": 2,
            "https://oss.sonatype.org/content/repositories/snapshots/org/mybatis/mybatis/": 2,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&product=rhdm&version=7.4.0": 1,
            "https://access.redhat.com/documentation/en-us/red_hat_decision_manager/7.4/html/release_notes_for_red_hat_decision_manager_7.4/index": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&product=rhpam&version=7.4.0": 1,
            "https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.4/html/release_notes_for_red_hat_process_automation_manager_7.4/index": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1601037": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-10899.html": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?product=jboss.amq.broker&downloadType=securityPatches&version=6.3.0": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=securityPatches&product=jboss.fuse&version=6.3": 1,
            "https://docs.openshift.com/container-platform/4.1/release_notes/ocp-4-1-release-notes.html": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1544620": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1548909": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1572416": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1667188": 1,
            "https://www.redhat.com/security/data/cve/CVE-2016-5397.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1335.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-8088.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-11798.html": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?product=data.services.platform&downloadType=securityPatches&version=6.4": 1,
            "https://access.redhat.com/documentation/en-us/red_hat_jboss_data_virtualization/6.4/html/release_notes/": 1,
            "https://docs.openshift.com/container-platform/3.11/release_notes/ocp_3_11_release_notes.html": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1576492": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1593018": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1607580": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1629083": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1639090": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1663904": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1692755": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1735645": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1735744": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1735745": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1735749": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1758619": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1761912": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1131.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-8009.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-8034.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-11775.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-11796.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1000850.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2019-0204.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2019-9512.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2019-9514.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2019-9515.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2019-9518.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2019-14860.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2019-16869.html": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&product=jboss.fuse&version=7.5.0": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1714359": 1,
            "https://www.redhat.com/security/data/cve/CVE-2019-10158.html": 1,
            "https://access.redhat.com/jbossnetwork/restricted/softwareDetail.html?softwareId=70381&product=data.grid&version=7.3&downloadType=patches": 1,
            "https://access.redhat.com/documentation/en-us/red_hat_data_grid/7.3/html-single/red_hat_data_grid_7.3_release_notes/index": 1,
            "https://console.redhat.com/insights/patch/advisories/RHSA-2019:0782": 1,
            "https://docs.github.com/terms": 1,
            "https://docs.github.com/privacy": 1,
            "https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062": 1,
            "https://github.com/advisories/GHSA-qr7j-h6gg-jmgc": 1,
            "https://github.com/Boaz20": 1,
            "https://github.com/mybatis/mybatis-3/actions?query=workflow%3A%22Java+CI%22": 1,
            "https://coveralls.io/github/mybatis/mybatis-3?branch=master": 1,
            "https://maven-badges.herokuapp.com/maven-central/org.mybatis/mybatis": 1,
            "https://www.apache.org/licenses/LICENSE-2.0.html": 1,
            "https://stackoverflow.com/questions/tagged/mybatis": 1,
            "https://www.openhub.net/p/mybatis": 1,
            "https://camo.githubusercontent.com/587c2237c6d4d94104e33f657a81c6b006e89f77b5afcbdfb86b1bf2e66558d8/68747470733a2f2f6d7962617469732e6f72672f696d616765732f6d7962617469732d6c6f676f2e706e67": 1,
            "https://mybatis.org/mybatis-3": 1,
            "https://github.com/mybatis/mybatis-3/releases": 1,
            "https://github.com/hazendaz": 1,
            "https://github.com/emacarron": 1,
            "https://github.com/harawata": 1,
            "https://github.com/kazuki43zoo": 1,
            "https://github.com/apps/dependabot": 1,
            "https://github.com/simonetripodi": 1,
            "https://github.com/apps/renovate": 1,
            "https://github.com/apps/dependabot-preview": 1,
            "https://github.com/jeffgbutler": 1,
            "https://github.com/nmaves": 1,
            "https://github.com/cbegin": 1,
            "https://github.com/awxiaoxian2020": 1,
            "https://github.com/CodeingBoy": 1,
            "https://github.com/wangdx": 1,
            "https://mvnrepository.com/artifact/com.fasterxml.jackson/jackson-bom/2.8.11.20200310": 1,
            "https://github.com/FasterXML/jackson-dataformat-properties": 1,
            "http://stackoverflow.com/questions/20480090/does-android-support-jdk-6-or-7/22303654#22303654": 1,
            "https://github.com/FasterXML/woodstox": 1,
            "https://github.com/FasterXML/jackson-module-kotlin": 1,
            "https://github.com/FasterXML/jackson-module-kotlin/issues/26": 1,
            "https://github.com/FasterXML/jackson-module-kotlin/issues/29": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1550671": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1573045": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1588306": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1593527": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1599434": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1607624": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1067.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1114.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-10862.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-10894.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-10912.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1000180.html": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&product=catRhoar.thorntail&version=2.4.0": 1,
            "https://access.redhat.com/documentation/en-us/red_hat_openshift_application_runtimes/1/html-single/rhoar_thorntail_release_notes/": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?product=appplatform&downloadType=securityPatches&version=7.2": 1,
            "https://console.redhat.com/insights/patch/advisories/RHSA-2019:1107": 1,
            "https://console.redhat.com/insights/patch/advisories/RHSA-2019:1108": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1679144": 1,
            "https://www.redhat.com/security/data/cve/CVE-2019-3868.html": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=securityPatches&product=core.service.rhsso&version=7.3": 1,
            "https://access.redhat.com/documentation/en-us/red_hat_single_sign-on/7.3/": 1
        },
        "affected_products": [
            "FasterXML",
            "Use",
            "n/a",
            "jackson",
            "iBatis",
            "Jackson"
        ],
        "versions": {
            "status": "affected",
            "version": "n/a"
        },
        "files": [
            "FasterXML",
            "jackson-databind"
        ],
        "keywords": [
            "databind",
            "gadget",
            "type",
            "exfiltration",
            "issue",
            "discover",
            "class",
            "ibatis",
            "content",
            "jackson",
            "default",
            "fasterxml",
            "allow"
        ],
        "files_extension": [],
        "has_fixing_commit": true
    },
    "commits": [
        {
            "commit_id": "27b4defc270454dea6842bd9279f17387eceb737",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526001512,
            "hunks": 2,
            "message": "Fix #2032",
            "diff": [
                "diff --git a/release-notes/VERSION b/release-notes/VERSION",
                "index 9c0b3bd5c..49e4fd87a 100644",
                "--- a/release-notes/VERSION",
                "+++ b/release-notes/VERSION",
                "@@ -6,2 +6,6 @@ Project: jackson-databind",
                "+2.7.9.4 (not yet released)",
                "+",
                "+#2032: Blacklist another serialization gadget (ibatis)",
                "+",
                " 2.7.9.3 (11-Feb-2018)",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java",
                "index 777637a75..cae5a9e97 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java",
                "@@ -56,2 +56,4 @@ public class SubTypeValidator",
                "         s.add(\"com.sun.org.apache.bcel.internal.util.ClassLoader\");",
                "+        // [databind#2032]: more 3rd party; data exfiltration via xml parsed ext entities",
                "+        s.add(\"org.apache.ibatis.parsing.XPathParser\");"
            ],
            "changed_files": [
                "release-notes/VERSION",
                "src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "2032": "(bogus report) #2295 CVE-2018-11307 Medium Severity Vulnerability detected by WhiteSource PennyLin1127/Remediate#40 CVE-2018-11307 (High) detected in jackson-databind-2.9.3.jar D-M-Moriarty/Mail-Parser#10 CVE-2018-11307 (Medium) detected in jackson-databind-2.8.9.jar reflectoring/infiniboard#422 CVE-2018-11307 (Medium) detected in jackson-databind-2.9.3.jar olivialancaster/generator-jhipster#8 CVE-2018-11307 (Critical) detected in jackson-databind-2.6.3.jar hiucimon/zookeeper#7 CVE-2018-11307 (Critical) detected in jackson-databind-2.8.7.jar hiucimon/KotlinSpringBoot#9 CVE-2018-11307 (Critical) detected in jackson-databind-2.8.5.jar hiucimon/ClamScanService#5 CVE-2018-11307 (Medium) detected in jackson-databind-2.9.5.jar AlfrescoArchive/alfresco-repository#433 CVE-2018-11307 (Medium) detected in jackson-databind-2.8.10.jar orange-cloudfoundry/cf-ops-automation-broker#94 CVE-2018-11307 (Medium) detected in jackson-databind-2.8.10.jar orange-cloudfoundry/cf-ops-automation-broker#95 CVE-2018-11307 (Critical) detected in jackson-databind-2.8.10.jar heltondoria/DemoApplication#12 CVE-2018-11307 (Critical) detected in jackson-databind-2.7.8.jar berez23/daf#6 CVE-2018-11307 (Medium) detected in jackson-databind-2.8.10.jar dexmo007/spring-boot-ws-test#7 CVE-2018-11307 (Medium) detected in jackson-databind-2.7.1.jar dexmo007/play-sil-seed-exp#28 CVE-2018-11307 (Medium) detected in jackson-databind-2.8.10.jar dexmo007/blockchain-demo#29 CVE-2018-11307 (Medium) detected in jackson-databind-2.8.10.jar dexmo007/imadex#31 CVE-2018-11307 (Medium) detected in jackson-databind-2.8.9.jar alansanie/Premium-Generator-API#3 CVE-2018-11307 (High) detected in jackson-databind-2.0.4.jar mwilliams7197/WebGoat-Legacy#4 CVE-2018-11307 (Critical) detected in jackson-databind-2.0.4.jar developerone12/WebGoat-WhiteSource-Bolt#96 CVE-2018-11307 (Critical) detected in multiple libraries interserver/mailbaby-api-samples#135 CVE-2018-11307 (Critical) detected in jackson-databind-2.8.5.jar ar-abed/sample#79 CVE-2018-11307 (High) detected in jackson-databind-2.6.3.jar - autoclosed sultanabubaker/basic-gradle-template#34 mmtf-serialization-1.0.8.jar: 64 vulnerabilities (highest severity is: 10.0) sultanabubaker/basic-gradle-template#77 Fix CVE\u20132018\u201311307 philomather/example-bazel-maven#11 CVE-2018-11307 (High) detected in jackson-databind-2.8.7.jar djaffe5858/Home-assignment#20 CVE-2018-11307 (Critical) detected in jackson-databind-2.8.7.jar davidjj58/Home-assignment#19 CVE-2018-11307 (High) detected in jackson-databind-2.6.7.3.jar - autoclosed Gal-Doron/LicenseTest#19 CVE-2018-11307 (High) detected in jackson-databind-2.6.7.3.jar - autoclosed Gal-Doron/LicenseTest2#18 CVE-2018-11307 (Medium) detected in jackson-databind-2.7.9.jar - autoclosed KaterinaOrg/monorepo#128 CVE-2018-11307 (High) detected in jackson-databind-2.1.3.jar - autoclosed AlexRogalskiy/openimagecv#31 CVE-2018-11307 (High) detected in jackson-databind-2.1.3.jar AlexRogalskiy/roadmap#80 CVE-2018-11307 (High) detected in jackson-databind-2.3.4.jar - autoclosed jgeraigery/dynatrace-service-broker#171 CVE-2018-11307 (High) detected in jackson-databind-2.3.4.jar jgeraigery/dynatrace-service-broker#172 CVE-2018-11307 - high detected in com.fasterxml.jackson.core:jackson-databind rhicksiii91/java-goof-test#85 CVE-2018-11307 - high detected in com.fasterxml.jackson.core:jackson-databind rhicksiii91/java-goof-test#182 CVE-2018-11307 (High) detected in jackson-databind-2.1.3.jar AlexRogalskiy/roadmap#158 CVE-2018-11307 (High) detected in jackson-databind-2.6.7.3.jar - autoclosed Gal-Doron/GeneralMaven#20 CVE-2018-11307 (High) detected in jackson-databind-2.6.7.3.jar - autoclosed Gal-Doron/IssueBodyTooBig#19 CVE-2018-11307 (High) detected in jackson-databind-2.6.7.3.jar - autoclosed Gal-Doron/LicenseTest4#54 CVE-2018-11307 (High) detected in jackson-databind-2.6.7.3.jar - autoclosed Gal-Doron/localConfig#23 CVE-2018-11307 @ Maven-com.fasterxml.jackson.core:jackson-databind-2.6.7.1 scott-cx/edgemere#111 CVE-2018-11307 @ Maven-com.fasterxml.jackson.core:jackson-databind-2.0.4 cxronen/BookStore_VSCode#121 CVE-2018-11307 @ Maven-com.fasterxml.jackson.core:jackson-databind-2.8.9 margaritalm/BookStore_Small_CLI_small#49 CVE-2018-11307 @ Maven-com.fasterxml.jackson.core:jackson-databind-2.0.4 cxronen/BookStore_VSCode#334 CVE-2018-11307 @ Maven-com.fasterxml.jackson.core:jackson-databind-2.0.4 cxronen/BookStore_VSCode#562 Findings for Critical davisbarillas/shiftleft-java-demo2#57 Findings for Critical davisbarillas/JavaVulnerableLab#15 CVE-2018-11307 @ Maven-com.fasterxml.jackson.core:jackson-databind-2.0.4 cxronen/BookStore_VSCode#912"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.7.9.4",
                "jackson-databind-2.7.9.5",
                "jackson-databind-2.7.9.6",
                "jackson-databind-2.7.9.7",
                "jackson-databind-2.8.11.2",
                "jackson-databind-2.8.11.3",
                "jackson-databind-2.8.11.4",
                "jackson-databind-2.8.11.5",
                "jackson-databind-2.8.11.6",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 2032",
                    "relevance": 32
                },
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 5 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java",
                    "relevance": 8
                },
                {
                    "id": "SEC_KEYWORDS_IN_LINKED_GH",
                    "message": "The github issue 2032 contains some security-related terms: vulnerability",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: type, fasterxml",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 2032",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "69416ee9bbecfbe3e9c18a31cc541a548e789c1b",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526536644,
            "hunks": 5,
            "message": "Fix #955. Added DeserializationFeature USE BASE TYPE AS DEFAULT (#2036)",
            "diff": [
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java b/src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java",
                "index 5fd5ca48e..7d5ccbc49 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java",
                "@@ -461,2 +461,10 @@ public enum DeserializationFeature implements ConfigFeature",
                "+    /**",
                "+     * Feature that specifies whether the given concrete class is used",
                "+     * if type property is missing.",
                "+     *",
                "+     * @since 2.9",
                "+     */",
                "+    USE_BASE_TYPE_AS_DEFAULT(false),",
                "+",
                "     /*",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java",
                "index 17d5ec72f..c21470511 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java",
                "@@ -122,6 +122,32 @@ public class StdTypeResolverBuilder",
                "-        JavaType defaultImpl;",
                "+        JavaType defaultImpl = defineDefaultImpl(config, baseType);",
                "+        // First, method for converting type info to type id:",
                "+        switch (_includeAs) {",
                "+        case WRAPPER_ARRAY:",
                "+            return new AsArrayTypeDeserializer(baseType, idRes,",
                "+                    _typeProperty, _typeIdVisible, defaultImpl);",
                "+        case PROPERTY:",
                "+        case EXISTING_PROPERTY: // as per [#528] same class as PROPERTY",
                "+            return new AsPropertyTypeDeserializer(baseType, idRes,",
                "+                    _typeProperty, _typeIdVisible, defaultImpl, _includeAs);",
                "+        case WRAPPER_OBJECT:",
                "+            return new AsWrapperTypeDeserializer(baseType, idRes,",
                "+                    _typeProperty, _typeIdVisible, defaultImpl);",
                "+        case EXTERNAL_PROPERTY:",
                "+            return new AsExternalTypeDeserializer(baseType, idRes,",
                "+                    _typeProperty, _typeIdVisible, defaultImpl);",
                "+        }",
                "+        throw new IllegalStateException(\"Do not know how to construct standard type serializer for inclusion type: \"+_includeAs);",
                "+    }",
                "+",
                "+    protected JavaType defineDefaultImpl(DeserializationConfig config, JavaType baseType) {",
                "+        JavaType defaultImpl;",
                "         if (_defaultImpl == null) {",
                "-            defaultImpl = null;",
                "+            //Fis of issue #955",
                "+            if (config.isEnabled(DeserializationFeature.USE_BASE_TYPE_AS_DEFAULT) && !baseType.isAbstract()) {",
                "+                defaultImpl = baseType;",
                "+            } else {",
                "+                defaultImpl = null;",
                "+            }",
                "         } else {",
                "@@ -134,3 +160,3 @@ public class StdTypeResolverBuilder",
                "             if ((_defaultImpl == Void.class)",
                "-                     || (_defaultImpl == NoClass.class)) {",
                "+                    || (_defaultImpl == NoClass.class)) {",
                "                 defaultImpl = config.getTypeFactory().constructType(_defaultImpl);",
                "@@ -158,20 +184,3 @@ public class StdTypeResolverBuilder",
                "         }",
                "-",
                "-        // First, method for converting type info to type id:",
                "-        switch (_includeAs) {",
                "-        case WRAPPER_ARRAY:",
                "-            return new AsArrayTypeDeserializer(baseType, idRes,",
                "-                    _typeProperty, _typeIdVisible, defaultImpl);",
                "-        case PROPERTY:",
                "-        case EXISTING_PROPERTY: // as per [#528] same class as PROPERTY",
                "-            return new AsPropertyTypeDeserializer(baseType, idRes,",
                "-                    _typeProperty, _typeIdVisible, defaultImpl, _includeAs);",
                "-        case WRAPPER_OBJECT:",
                "-            return new AsWrapperTypeDeserializer(baseType, idRes,",
                "-                    _typeProperty, _typeIdVisible, defaultImpl);",
                "-        case EXTERNAL_PROPERTY:",
                "-            return new AsExternalTypeDeserializer(baseType, idRes,",
                "-                    _typeProperty, _typeIdVisible, defaultImpl);",
                "-        }",
                "-        throw new IllegalStateException(\"Do not know how to construct standard type serializer for inclusion type: \"+_includeAs);",
                "+        return defaultImpl;",
                "     }"
            ],
            "changed_files": [
                "src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java",
                "src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "955": "Polymorphic deserialization fails when defaultImpl is specified and a subtype contains a subtype property that is set to null #1538",
                "2036": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java, src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: type, default",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: type, fasterxml",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 955, 2036",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "98068c70753a0465ab78962a643acb65c2c22904",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526566965,
            "hunks": 1,
            "message": "Accessor for module typeIds registered in an ObjectMapper (#2035) Add accessor for registered modules in `ObjectMapper`",
            "diff": [
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
                "index a049ae4b1..adfb09b49 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
                "@@ -954,3 +954,15 @@ public class ObjectMapper",
                "     }",
                "-    ",
                "+",
                "+    /**",
                "+     * The set of {@link Module} typeIds that are registered in this",
                "+     * ObjectMapper. By default the typeId for a module is it's full",
                "+     * class name (see {@link Module#getTypeId()}).",
                "+     *",
                "+     * @since 2.9.6",
                "+     */",
                "+    public Set<Object> getRegisteredModuleIds()",
                "+    {",
                "+        return Collections.unmodifiableSet(_registeredModuleTypes);",
                "+    }",
                "+",
                "     /**"
            ],
            "changed_files": [
                "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "2035": "Allow inspection of modules registered in the current ObjectMapper #1478"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: type",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: fasterxml",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 2035",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6d5e2bae2ac7fccdbfeace3526c3cc140d7745a9",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525465851,
            "hunks": 3,
            "message": "Minor fix to `JacksonAnnotationIntrospector` to allow use of `@JsonSetter` without masking name",
            "diff": [
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
                "index 057d95a52..580f972a3 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
                "@@ -1230,6 +1230,13 @@ public class JacksonAnnotationIntrospector",
                "         // @JsonSetter has precedence over @JsonProperty, being more specific",
                "-        // @JsonDeserialize implies that there is a property, but no name",
                "+",
                "+        boolean useDefault = false;",
                "         JsonSetter js = _findAnnotation(a, JsonSetter.class);",
                "         if (js != null) {",
                "-            return PropertyName.construct(js.value());",
                "+            String s = js.value();",
                "+            // 04-May-2018, tatu: Need to allow for \"nameless\" `@JsonSetter` too",
                "+            if (s.isEmpty()) {",
                "+                useDefault = true;",
                "+            } else {",
                "+                return PropertyName.construct(s);",
                "+            }",
                "         }",
                "@@ -1239,3 +1246,3 @@ public class JacksonAnnotationIntrospector",
                "         }",
                "-        if (_hasOneOf(a, ANNOTATIONS_TO_INFER_DESER)) {",
                "+        if (useDefault || _hasOneOf(a, ANNOTATIONS_TO_INFER_DESER)) {",
                "             return PropertyName.USE_DEFAULT;"
            ],
            "changed_files": [
                "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: allow",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: fasterxml",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "ac82499e5ac9ecbf39e497462aa9542ca0195158",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525475061,
            "hunks": 15,
            "message": "Fix #2021",
            "diff": [
                "diff --git a/release-notes/VERSION-2.x b/release-notes/VERSION-2.x",
                "index 7954b56d4..29ceb9d47 100644",
                "--- a/release-notes/VERSION-2.x",
                "+++ b/release-notes/VERSION-2.x",
                "@@ -27,2 +27,3 @@ Project: jackson-databind",
                "  (reported by asger82@github)",
                "+#2021: Delegating JsonCreator disregards `JsonDeserialize.using` annotation",
                " #2023: `JsonFormat.Feature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT` not working",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
                "index 3cf861c64..73c99d40e 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
                "@@ -341,3 +341,3 @@ public abstract class BasicDeserializerFactory",
                "         }",
                "-        return creators.constructValueInstantiator(config);",
                "+        return creators.constructValueInstantiator(ctxt);",
                "     }",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
                "index cefa096e6..6ce41f783 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
                "@@ -619,4 +619,6 @@ public abstract class BeanDeserializerBase",
                "-    private JsonDeserializer<Object> _findDelegateDeserializer(DeserializationContext ctxt, JavaType delegateType,",
                "-            AnnotatedWithParams delegateCreator) throws JsonMappingException {",
                "+    @SuppressWarnings(\"unchecked\")",
                "+    private JsonDeserializer<Object> _findDelegateDeserializer(DeserializationContext ctxt,",
                "+            JavaType delegateType, AnnotatedWithParams delegateCreator) throws JsonMappingException",
                "+    {",
                "         // Need to create a temporary property to allow contextual deserializers:",
                "@@ -625,3 +627,2 @@ public abstract class BeanDeserializerBase",
                "                 PropertyMetadata.STD_OPTIONAL);",
                "-",
                "         TypeDeserializer td = delegateType.getTypeHandler();",
                "@@ -630,3 +631,10 @@ public abstract class BeanDeserializerBase",
                "         }",
                "-        JsonDeserializer<Object> dd = findDeserializer(ctxt, delegateType, property);",
                "+        // 04-May-2018, tatu: [databind#2021] check if there's custom deserializer attached",
                "+        //    to type (resolved from parameter)",
                "+        JsonDeserializer<Object> dd = delegateType.getValueHandler();",
                "+        if (dd == null) {",
                "+            dd = findDeserializer(ctxt, delegateType, property);",
                "+        } else {",
                "+            dd = (JsonDeserializer<Object>) ctxt.handleSecondaryContextualization(dd, property, delegateType);",
                "+        }",
                "         if (td != null) {",
                "@@ -638,3 +646,2 @@ public abstract class BeanDeserializerBase",
                "-",
                "     /**",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
                "index 1b204b6ea..978c4086b 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
                "@@ -83,8 +83,9 @@ public class CreatorCollector {",
                "-    public ValueInstantiator constructValueInstantiator(DeserializationConfig config)",
                "+    public ValueInstantiator constructValueInstantiator(DeserializationContext ctxt)",
                "         throws JsonMappingException",
                "     {",
                "-        final JavaType delegateType = _computeDelegateType(config,",
                "+        final DeserializationConfig config = ctxt.getConfig();",
                "+        final JavaType delegateType = _computeDelegateType(ctxt,",
                "                 _creators[C_DELEGATE], _delegateArgs);",
                "-        final JavaType arrayDelegateType = _computeDelegateType(config,",
                "+        final JavaType arrayDelegateType = _computeDelegateType(ctxt,",
                "                 _creators[C_ARRAY_DELEGATE], _arrayDelegateArgs);",
                "@@ -226,3 +227,3 @@ public class CreatorCollector {",
                "-    private JavaType _computeDelegateType(MapperConfig<?> config,",
                "+    private JavaType _computeDelegateType(DeserializationContext ctxt,",
                "             AnnotatedWithParams creator, SettableBeanProperty[] delegateArgs)",
                "@@ -243,7 +244,24 @@ public class CreatorCollector {",
                "         }",
                "-        // 03-May-2018, tatu: [databind#2016] need to check possible annotation-based",
                "-        //    type refinement(s)",
                "+        final DeserializationConfig config = ctxt.getConfig();",
                "+",
                "+        // 03-May-2018, tatu: need to check possible annotation-based",
                "+        //   custom deserializer [databind#2012],",
                "+        //   type refinement(s) [databind#2016]. ",
                "         JavaType baseType = creator.getParameterType(ix);",
                "-        return config.getAnnotationIntrospector().refineDeserializationType(config,",
                "-                creator.getParameter(ix), baseType);",
                "+        AnnotationIntrospector intr = config.getAnnotationIntrospector();",
                "+        if (intr != null) {",
                "+            AnnotatedParameter delegate = creator.getParameter(ix);",
                "+            ",
                "+            // First: custom deserializer(s):",
                "+            Object deserDef = intr.findDeserializer(delegate);",
                "+            if (deserDef != null) {",
                "+                JsonDeserializer<Object> deser = ctxt.deserializerInstance(delegate, deserDef);",
                "+                baseType = baseType.withValueHandler(deser);",
                "+            } else {",
                "+                // Second: type refinement(s), if no explicit deserializer was located",
                "+                baseType = intr.refineDeserializationType(config,",
                "+                        delegate, baseType);",
                "+            }",
                "+        }",
                "+        return baseType;",
                "     }",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
                "index 580f972a3..823deb622 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
                "@@ -999,5 +999,11 @@ public class JacksonAnnotationIntrospector",
                "     {",
                "+        boolean useDefault = false;",
                "         JsonGetter jg = _findAnnotation(a, JsonGetter.class);",
                "         if (jg != null) {",
                "-            return PropertyName.construct(jg.value());",
                "+            String s = jg.value();",
                "+            // 04-May-2018, tatu: Should allow for \"nameless\" `@JsonGetter` too",
                "+            if (!s.isEmpty()) {",
                "+                return PropertyName.construct(s);",
                "+            }",
                "+            useDefault = true;",
                "         }",
                "@@ -1007,3 +1013,3 @@ public class JacksonAnnotationIntrospector",
                "         }",
                "-        if (_hasOneOf(a, ANNOTATIONS_TO_INFER_SER)) {",
                "+        if (useDefault || _hasOneOf(a, ANNOTATIONS_TO_INFER_SER)) {",
                "             return PropertyName.USE_DEFAULT;"
            ],
            "changed_files": [
                "release-notes/VERSION-2.x",
                "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
                "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
                "src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
                "src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "2021": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java, src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java, src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java, src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: fasterxml",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 2021",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f2d2c313bc2c81aa1e64a5e30abb43d92db2cf13",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525219764,
            "hunks": 2,
            "message": "Fix #2019",
            "diff": [
                "diff --git a/release-notes/VERSION-2.x b/release-notes/VERSION-2.x",
                "index 847d17ba9..8eceed3f2 100644",
                "--- a/release-notes/VERSION-2.x",
                "+++ b/release-notes/VERSION-2.x",
                "@@ -20,2 +20,4 @@ Project: jackson-databind",
                "  (reported by Ondrej Z)",
                "+#2019: Abstract Type mapping in 2.9 fails when multiple modules are registered",
                "+ (reported by asger82@github)",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
                "index 60800a0c2..645073328 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
                "@@ -218,3 +218,3 @@ public abstract class BasicDeserializerFactory",
                "                 JavaType concrete = resolver.findTypeMapping(config, type);",
                "-                if (ClassUtil.rawClass(concrete) != currClass) {",
                "+                if ((concrete != null) && !concrete.hasRawClass(currClass)) {",
                "                     return concrete;"
            ],
            "changed_files": [
                "release-notes/VERSION-2.x",
                "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "2019": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: fasterxml",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 2019",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9dee833e979d972fe53c7f36e7747a3cd3ebae90",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525465997,
            "hunks": 7,
            "message": "Fix #2023",
            "diff": [
                "diff --git a/release-notes/VERSION-2.x b/release-notes/VERSION-2.x",
                "index ee58d0daf..7954b56d4 100644",
                "--- a/release-notes/VERSION-2.x",
                "+++ b/release-notes/VERSION-2.x",
                "@@ -27,2 +27,4 @@ Project: jackson-databind",
                "  (reported by asger82@github)",
                "+#2023: `JsonFormat.Feature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT` not working",
                "+  with `null` coercion with `@JsonSetter`",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/FieldProperty.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/FieldProperty.java",
                "index f9f1536a1..d8b38bb02 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/FieldProperty.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/FieldProperty.java",
                "@@ -136,2 +136,9 @@ public final class FieldProperty",
                "             value = _valueDeserializer.deserialize(p, ctxt);",
                "+            // 04-May-2018, tatu: [databind#2023] Coercion from String (mostly) can give null",
                "+            if (value == null) {",
                "+                if (_skipNulls) {",
                "+                    return;",
                "+                }",
                "+                value = _nullProvider.getNullValue(ctxt);",
                "+            }",
                "         } else {",
                "@@ -158,2 +165,9 @@ public final class FieldProperty",
                "             value = _valueDeserializer.deserialize(p, ctxt);",
                "+            // 04-May-2018, tatu: [databind#2023] Coercion from String (mostly) can give null",
                "+            if (value == null) {",
                "+                if (_skipNulls) {",
                "+                    return instance;",
                "+                }",
                "+                value = _nullProvider.getNullValue(ctxt);",
                "+            }",
                "         } else {",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/MethodProperty.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/MethodProperty.java",
                "index 7bf931aeb..aeeeba6b7 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/MethodProperty.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/MethodProperty.java",
                "@@ -127,2 +127,9 @@ public final class MethodProperty",
                "             value = _valueDeserializer.deserialize(p, ctxt);",
                "+            // 04-May-2018, tatu: [databind#2023] Coercion from String (mostly) can give null",
                "+            if (value == null) {",
                "+                if (_skipNulls) {",
                "+                    return;",
                "+                }",
                "+                value = _nullProvider.getNullValue(ctxt);",
                "+            }",
                "         } else {",
                "@@ -149,2 +156,9 @@ public final class MethodProperty",
                "             value = _valueDeserializer.deserialize(p, ctxt);",
                "+            // 04-May-2018, tatu: [databind#2023] Coercion from String (mostly) can give null",
                "+            if (value == null) {",
                "+                if (_skipNulls) {",
                "+                    return instance;",
                "+                }",
                "+                value = _nullProvider.getNullValue(ctxt);",
                "+            }",
                "         } else {",
                "@@ -167,3 +181,3 @@ public final class MethodProperty",
                "         } catch (Exception e) {",
                "-            // 15-Sep-2015, tatu: How coud we get a ref to JsonParser?",
                "+            // 15-Sep-2015, tatu: How could we get a ref to JsonParser?",
                "             _throwAsIOE(e, value);",
                "@@ -179,3 +193,3 @@ public final class MethodProperty",
                "         } catch (Exception e) {",
                "-            // 15-Sep-2015, tatu: How coud we get a ref to JsonParser?",
                "+            // 15-Sep-2015, tatu: How could we get a ref to JsonParser?",
                "             _throwAsIOE(e, value);"
            ],
            "changed_files": [
                "release-notes/VERSION-2.x",
                "src/main/java/com/fasterxml/jackson/databind/deser/impl/FieldProperty.java",
                "src/main/java/com/fasterxml/jackson/databind/deser/impl/MethodProperty.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "2023": "@Jsonsetter with Nulls.SKIP collides with DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL when parsing enum #2015"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/deser/impl/FieldProperty.java, src/main/java/com/fasterxml/jackson/databind/deser/impl/MethodProperty.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: fasterxml",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 2023",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a3bd2f55fdc24001f360a307ae2a45cdd472e17d",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525833097,
            "hunks": 8,
            "message": "Remove mutability from `BeanPropertyMap`, to try to address #2027",
            "diff": [
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
                "index c8c47ac8b..b015bb5a2 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
                "@@ -45,3 +45,3 @@ public class BeanPropertyMap",
                "     private int _size;",
                "-    ",
                "+",
                "     private int _spillCount;",
                "@@ -57,3 +57,3 @@ public class BeanPropertyMap",
                "      */",
                "-    private SettableBeanProperty[] _propsInOrder;",
                "+    private final SettableBeanProperty[] _propsInOrder;",
                "@@ -77,3 +77,3 @@ public class BeanPropertyMap",
                "     private final Map<String,String> _aliasMapping;",
                "-    ",
                "+",
                "     /**",
                "@@ -91,2 +91,66 @@ public class BeanPropertyMap",
                "+    /* Copy constructors used when a property can replace existing one",
                "+     *",
                "+     * @since 2.9.6",
                "+     */",
                "+    private BeanPropertyMap(BeanPropertyMap src,",
                "+            SettableBeanProperty newProp, int hashIndex, int orderedIndex)",
                "+    {",
                "+        // First, copy most fields as is:",
                "+        _caseInsensitive = src._caseInsensitive;",
                "+        _hashMask = src._hashMask;",
                "+        _size = src._size;",
                "+        _spillCount = src._spillCount;",
                "+        _aliasDefs = src._aliasDefs;",
                "+        _aliasMapping = src._aliasMapping;",
                "+",
                "+        // but then make deep copy of arrays to modify",
                "+        _hashArea = Arrays.copyOf(src._hashArea, src._hashArea.length);",
                "+        _propsInOrder = Arrays.copyOf(src._propsInOrder, src._propsInOrder.length);",
                "+        _hashArea[hashIndex] = newProp;",
                "+        _propsInOrder[orderedIndex] = newProp;",
                "+    }",
                "+",
                "+    /* Copy constructors used when a property needs to be appended (can't replace)",
                "+     *",
                "+     * @since 2.9.6",
                "+     */",
                "+    private BeanPropertyMap(BeanPropertyMap src,",
                "+            SettableBeanProperty newProp, String key, int slot)",
                "+    {",
                "+        // First, copy most fields as is:",
                "+        _caseInsensitive = src._caseInsensitive;",
                "+        _hashMask = src._hashMask;",
                "+        _size = src._size;",
                "+        _spillCount = src._spillCount;",
                "+        _aliasDefs = src._aliasDefs;",
                "+        _aliasMapping = src._aliasMapping;",
                "+",
                "+        // but then make deep copy of arrays to modify",
                "+        _hashArea = Arrays.copyOf(src._hashArea, src._hashArea.length);",
                "+        int last = src._propsInOrder.length;",
                "+        // and append property at the end of ordering",
                "+        _propsInOrder = Arrays.copyOf(src._propsInOrder, last+1);",
                "+        _propsInOrder[last] = newProp;",
                "+",
                "+        final int hashSize = _hashMask+1;",
                "+        int ix = (slot<<1);",
                "+",
                "+        // primary slot not free?",
                "+        if (_hashArea[ix] != null) {",
                "+            // secondary?",
                "+            ix = (hashSize + (slot >> 1)) << 1;",
                "+            if (_hashArea[ix] != null) {",
                "+                // ok, spill over.",
                "+                ix = ((hashSize + (hashSize >> 1) ) << 1) + _spillCount;",
                "+                _spillCount += 2;",
                "+                if (ix >= _hashArea.length) {",
                "+                    _hashArea = Arrays.copyOf(_hashArea, _hashArea.length + 4);",
                "+                }",
                "+            }",
                "+        }",
                "+        _hashArea[ix] = key;",
                "+        _hashArea[ix+1] = newProp;",
                "+    }",
                "+",
                "     @Deprecated // since 2.8",
                "@@ -161,3 +225,2 @@ public class BeanPropertyMap",
                "             }",
                "-//System.err.println(\" add '\"+key+\" at #\"+(ix>>1)+\"/\"+size+\" (hashed at \"+slot+\")\");             ",
                "             hashed[ix] = key;",
                "@@ -167,5 +230,2 @@ public class BeanPropertyMap",
                "         }",
                "-//for (int i = 0; i < hashed.length; i += 2) {",
                "-//System.err.printf(\"#%02d: %s\\n\", i>>1, (hashed[i] == null) ? \"-\" : hashed[i]);",
                "-//}",
                "         _hashArea = hashed;",
                "@@ -219,5 +279,3 @@ public class BeanPropertyMap",
                "             if ((prop != null) && prop.getName().equals(key)) {",
                "-                _hashArea[i] = newProp;",
                "-                _propsInOrder[_findFromOrdered(prop)] = newProp;",
                "-                return this;",
                "+                return new BeanPropertyMap(this, newProp, i, _findFromOrdered(prop));",
                "             }",
                "@@ -226,35 +284,4 @@ public class BeanPropertyMap",
                "         final int slot = _hashCode(key);",
                "-        final int hashSize = _hashMask+1;",
                "-        int ix = (slot<<1);",
                "-        ",
                "-        // primary slot not free?",
                "-        if (_hashArea[ix] != null) {",
                "-            // secondary?",
                "-            ix = (hashSize + (slot >> 1)) << 1;",
                "-            if (_hashArea[ix] != null) {",
                "-                // ok, spill over.",
                "-                ix = ((hashSize + (hashSize >> 1) ) << 1) + _spillCount;",
                "-                _spillCount += 2;",
                "-                if (ix >= _hashArea.length) {",
                "-                    _hashArea = Arrays.copyOf(_hashArea, _hashArea.length + 4);",
                "-// Uncomment for debugging only",
                "-//for (int i = 0; i < _hashArea.length; i += 2) {",
                "-//    if (_hashArea[i] != null) {",
                "-//        System.err.println(\"Property #\"+(i/2)+\" '\"+_hashArea[i]+\"'...\");",
                "-//    }",
                "-//}",
                "-//System.err.println(\"And new propr #\"+slot+\" '\"+key+\"'\");",
                "-                }",
                "-            }",
                "-        }",
                "-        _hashArea[ix] = key;",
                "-        _hashArea[ix+1] = newProp;",
                "-",
                "-        int last = _propsInOrder.length;",
                "-        _propsInOrder = Arrays.copyOf(_propsInOrder, last+1);",
                "-        _propsInOrder[last] = newProp;",
                "-        // should we just create a new one? Or is resetting ok?",
                "-        ",
                "-        return this;",
                "+        return new BeanPropertyMap(this, newProp, key, slot);",
                "     }"
            ],
            "changed_files": [
                "src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "2027": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: fasterxml",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 2027",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9e72a25324abe749559bbc13018555caca269570",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525224550,
            "hunks": 1,
            "message": "Fix #2001 remove renamed properties from ignored (#2002)",
            "diff": [
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
                "index 5046f78f1..03be2e4de 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
                "@@ -792,2 +792,7 @@ public class POJOPropertiesCollector",
                "                 _updateCreatorProperty(prop, _creatorProperties);",
                "+",
                "+                // New name of property was ignored previously - remove from ignored [#2001]",
                "+                if (_ignoredPropertyNames != null) {",
                "+                  _ignoredPropertyNames.remove(name);",
                "+                }",
                "             }"
            ],
            "changed_files": [
                "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "2001": "Fix #2001 remove renamed properties from ignored #2002 2.9.4 doesn\u2019t handle @JsonIgnored field with the same name as @JsonProperty(name) of other field FasterXML/jackson-module-kotlin#124 #2283 - Renaming Read Only Properties with USE_GETTERS_AS_SETTERS #2284 Jackson JsonIgnore does not work in Kotlin FasterXML/jackson-module-kotlin#308",
                "2002": "2.9.4 doesn\u2019t handle @JsonIgnored field with the same name as @JsonProperty(name) of other field FasterXML/jackson-module-kotlin#124 Jackson JsonIgnore does not work in Kotlin FasterXML/jackson-module-kotlin#308"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: fasterxml",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 2001, 2002",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bfeb1fa9dc4c889f8027b80abb2f77996efd9b70",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526341055,
            "hunks": 3,
            "message": "Fix #2034",
            "diff": [
                "diff --git a/release-notes/CREDITS-2.x b/release-notes/CREDITS-2.x",
                "index a8c021287..76a1ba146 100644",
                "--- a/release-notes/CREDITS-2.x",
                "+++ b/release-notes/CREDITS-2.x",
                "@@ -790 +790,5 @@ Carter Kozak (cakofony@github)",
                "    (2.9.6)",
                "+",
                "+Reinhard Prechtl (dnno@github)",
                "+  * Reported #2034: Serialization problem with type specialization of nested generic types",
                "+   (2.9.6)",
                "diff --git a/release-notes/VERSION-2.x b/release-notes/VERSION-2.x",
                "index ec09fbd16..5631a8e95 100644",
                "--- a/release-notes/VERSION-2.x",
                "+++ b/release-notes/VERSION-2.x",
                "@@ -37,2 +37,4 @@ Project: jackson-databind",
                "  (reported by Guixiong Wu)",
                "+#2034: Serialization problem with type specialization of nested generic types",
                "+ (reported by Reinhard P)",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java b/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java",
                "index ba56b4691..8b0ac18f2 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java",
                "@@ -457,2 +457,8 @@ public final class TypeFactory",
                "             if (!_verifyAndResolvePlaceholders(exp, act)) {",
                "+                // 14-May-2018, tatu: As per [databind#2034] it seems we better relax assignment",
                "+                //   rules further -- at least likely \"raw\" (untyped, non-generic) base should probably",
                "+                //   allow specialization.",
                "+                if (exp.hasRawClass(Object.class)) {",
                "+                    continue;",
                "+                }",
                "                 // 19-Apr-2018, tatu: Hack for [databind#1964] -- allow type demotion"
            ],
            "changed_files": [
                "release-notes/CREDITS-2.x",
                "release-notes/VERSION-2.x",
                "src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "2034": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: type, fasterxml",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 2034",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2e2f4e1d1b39f81672c4adac859db62c9365cb81",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526588541,
            "hunks": 4,
            "message": "Fixed #955 (or rather, added release notes, refactored earlier merge)",
            "diff": [
                "diff --git a/release-notes/VERSION-2.x b/release-notes/VERSION-2.x",
                "index 42b6db1a8..460316248 100644",
                "--- a/release-notes/VERSION-2.x",
                "+++ b/release-notes/VERSION-2.x",
                "@@ -8,2 +8,5 @@ Project: jackson-databind",
                "+#955: Add `MapperFeature.USE_BASE_TYPE_AS_DEFAULT_IMPL` to use declared base type",
                "+   as `defaultImpl` for polymorphic deserialization",
                "+  (contributed by mikeldpl@github)",
                " #1565: Deserialization failure with Polymorphism using JsonTypeInfo `defaultImpl`,",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java b/src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java",
                "index 7d5ccbc49..5fd5ca48e 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java",
                "@@ -461,10 +461,2 @@ public enum DeserializationFeature implements ConfigFeature",
                "-    /**",
                "-     * Feature that specifies whether the given concrete class is used",
                "-     * if type property is missing.",
                "-     *",
                "-     * @since 2.9",
                "-     */",
                "-    USE_BASE_TYPE_AS_DEFAULT(false),",
                "-",
                "     /*",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/MapperFeature.java b/src/main/java/com/fasterxml/jackson/databind/MapperFeature.java",
                "index 967fb8964..81884adea 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/MapperFeature.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/MapperFeature.java",
                "@@ -288,2 +288,16 @@ public enum MapperFeature implements ConfigFeature",
                "+    /**",
                "+     * Feature that specifies whether the declared base type of a polymorphic value",
                "+     * is to be used as the \"default\" implementation, if no explicit default class",
                "+     * is specified via {@code @JsonTypeInfo.defaultImpl} annotation.",
                "+     *<p>",
                "+     * Note that feature only has effect on deserialization of regular polymorphic properties:",
                "+     * it does NOT affect non-polymorphic cases, and is unlikely to work with Default Typing.",
                "+     *<p>",
                "+     * Feature is disabled by default for backwards compatibility.",
                "+     *",
                "+     * @since 2.9.6",
                "+     */",
                "+    USE_BASE_TYPE_AS_DEFAULT_IMPL(false),",
                "+",
                "     /*",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java",
                "index c21470511..98e9f90e6 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java",
                "@@ -147,3 +147,3 @@ public class StdTypeResolverBuilder",
                "             //Fis of issue #955",
                "-            if (config.isEnabled(DeserializationFeature.USE_BASE_TYPE_AS_DEFAULT) && !baseType.isAbstract()) {",
                "+            if (config.isEnabled(MapperFeature.USE_BASE_TYPE_AS_DEFAULT_IMPL) && !baseType.isAbstract()) {",
                "                 defaultImpl = baseType;"
            ],
            "changed_files": [
                "release-notes/VERSION-2.x",
                "src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java",
                "src/main/java/com/fasterxml/jackson/databind/MapperFeature.java",
                "src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "955": "Polymorphic deserialization fails when defaultImpl is specified and a subtype contains a subtype property that is set to null #1538"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/DeserializationFeature.java, src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java, src/main/java/com/fasterxml/jackson/databind/MapperFeature.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: type, fasterxml",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 955",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fbe64a268541deaf3debabe42b51fdb663a1470d",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525405256,
            "hunks": 12,
            "message": "Fix #2016",
            "diff": [
                "diff --git a/release-notes/CREDITS-2.x b/release-notes/CREDITS-2.x",
                "index 3e77eacfc..e80c26bbf 100644",
                "--- a/release-notes/CREDITS-2.x",
                "+++ b/release-notes/CREDITS-2.x",
                "@@ -782 +782,5 @@ Jakub Skierbiszewski (jskierbi@github)",
                "    (2.9.6)",
                "+",
                "+Carter Kozak (cakofony@github)",
                "+  * Reported #2016: Delegating JsonCreator disregards JsonDeserialize info",
                "+   (2.9.6)",
                "diff --git a/release-notes/VERSION-2.x b/release-notes/VERSION-2.x",
                "index 80c90ddd7..ee58d0daf 100644",
                "--- a/release-notes/VERSION-2.x",
                "+++ b/release-notes/VERSION-2.x",
                "@@ -23,2 +23,4 @@ Project: jackson-databind",
                "  (reported, fix contributed by Jakub S)",
                "+#2016: Delegating JsonCreator disregards JsonDeserialize info",
                "+ (reported by Carter K)",
                " #2019: Abstract Type mapping in 2.9 fails when multiple modules are registered",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
                "index 645073328..3cf861c64 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
                "@@ -277,3 +277,4 @@ public abstract class BasicDeserializerFactory",
                "             final AnnotatedWithParams ctor = nonAnnotatedParam.getOwner();",
                "-            throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()+\" of constructor \"+ctor+\" has no property name annotation; must have name when multiple-parameter constructor annotated as Creator\");",
                "+            throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()",
                "+                +\" of constructor \"+ctor+\" has no property name annotation; must have name when multiple-parameter constructor annotated as Creator\");",
                "         }",
                "@@ -2145,32 +2146,2 @@ nonAnnotatedParamIndex, ctor);",
                "         }",
                "-",
                "-        // First, deserializers for key/value types?",
                "-        /*",
                "-        if (type.isMapLikeType()) {",
                "-            JavaType keyType = type.getKeyType();",
                "-            // 21-Mar-2011, tatu: ... and associated deserializer too (unless already assigned)",
                "-            //  (not 100% why or how, but this does seem to get called more than once, which",
                "-            //   is not good: for now, let's just avoid errors)",
                "-            if (keyType != null && keyType.getValueHandler() == null) {",
                "-                Object kdDef = intr.findKeyDeserializer(a);",
                "-                KeyDeserializer kd = ctxt.keyDeserializerInstance(a, kdDef);",
                "-                if (kd != null) {",
                "-                    type = (T) ((MapLikeType) type).withKeyValueHandler(kd);",
                "-                    keyType = type.getKeyType(); // just in case it's used below",
                "-                }",
                "-            }            ",
                "-        }",
                "-        JavaType contentType = type.getContentType();",
                "-        if (contentType != null) {",
                "-           // ... as well as deserializer for contents:",
                "-           if (contentType.getValueHandler() == null) { // as with above, avoid resetting (which would trigger exception)",
                "-               Object cdDef = intr.findContentDeserializer(a);",
                "-                JsonDeserializer<?> cd = ctxt.deserializerInstance(a, cdDef);",
                "-                if (cd != null) {",
                "-                    type = (T) type.withContentValueHandler(cd);",
                "-                }",
                "-            }",
                "-        }",
                "-        */",
                "-        // then: type refinement(s)?",
                "         return intr.refineDeserializationType(ctxt.getConfig(), a, type);",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
                "index ae9dede3f..1b204b6ea 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
                "@@ -70,4 +70,2 @@ public class CreatorCollector {",
                "-    protected AnnotatedParameter _incompleteParameter;",
                "-",
                "     /*",
                "@@ -85,7 +83,8 @@ public class CreatorCollector {",
                "-    public ValueInstantiator constructValueInstantiator(",
                "-            DeserializationConfig config) {",
                "-        final JavaType delegateType = _computeDelegateType(",
                "+    public ValueInstantiator constructValueInstantiator(DeserializationConfig config)",
                "+        throws JsonMappingException",
                "+    {",
                "+        final JavaType delegateType = _computeDelegateType(config,",
                "                 _creators[C_DELEGATE], _delegateArgs);",
                "-        final JavaType arrayDelegateType = _computeDelegateType(",
                "+        final JavaType arrayDelegateType = _computeDelegateType(config,",
                "                 _creators[C_ARRAY_DELEGATE], _arrayDelegateArgs);",
                "@@ -110,3 +109,2 @@ public class CreatorCollector {",
                "         inst.configureFromBooleanCreator(_creators[C_BOOLEAN]);",
                "-        inst.configureIncompleteParameter(_incompleteParameter);",
                "         return inst;",
                "@@ -195,8 +193,2 @@ public class CreatorCollector {",
                "-    public void addIncompeteParameter(AnnotatedParameter parameter) {",
                "-        if (_incompleteParameter == null) {",
                "-            _incompleteParameter = parameter;",
                "-        }",
                "-    }",
                "-",
                "     /*",
                "@@ -234,4 +226,6 @@ public class CreatorCollector {",
                "-    private JavaType _computeDelegateType(AnnotatedWithParams creator,",
                "-            SettableBeanProperty[] delegateArgs) {",
                "+    private JavaType _computeDelegateType(MapperConfig<?> config,",
                "+            AnnotatedWithParams creator, SettableBeanProperty[] delegateArgs)",
                "+        throws JsonMappingException",
                "+    {",
                "         if (!_hasNonDefaultCreator || (creator == null)) {",
                "@@ -249,3 +243,7 @@ public class CreatorCollector {",
                "         }",
                "-        return creator.getParameterType(ix);",
                "+        // 03-May-2018, tatu: [databind#2016] need to check possible annotation-based",
                "+        //    type refinement(s)",
                "+        JavaType baseType = creator.getParameterType(ix);",
                "+        return config.getAnnotationIntrospector().refineDeserializationType(config,",
                "+                creator.getParameter(ix), baseType);",
                "     }",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java",
                "index 5ce7bcd30..3d112e489 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java",
                "@@ -511,4 +511,3 @@ public class StdValueInstantiator",
                "-    private Object _createUsingDelegate(",
                "-            AnnotatedWithParams delegateCreator,",
                "+    private Object _createUsingDelegate(AnnotatedWithParams delegateCreator,",
                "             SettableBeanProperty[] delegateArguments,"
            ],
            "changed_files": [
                "release-notes/CREDITS-2.x",
                "release-notes/VERSION-2.x",
                "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
                "src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
                "src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "2016": "Delegating JsonCreator disregards JsonDeserialize.using annotation #2021"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java, src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java, src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: fasterxml",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 2016",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ba45be2fe6d41a837e76da443db9cba61b483baa",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525227650,
            "hunks": 3,
            "message": "Backport #2001 fix for 2.9(.6)",
            "diff": [
                "diff --git a/release-notes/CREDITS-2.x b/release-notes/CREDITS-2.x",
                "index 5792c751c..3e77eacfc 100644",
                "--- a/release-notes/CREDITS-2.x",
                "+++ b/release-notes/CREDITS-2.x",
                "@@ -777 +777,6 @@ Ondrej Zizka (OndraZizk@github)",
                "    (2.9.6)",
                "+",
                "+Jakub Skierbiszewski (jskierbi@github)",
                "+  * Reported, contributed fix for #2001: Deserialization issue with `@JsonIgnore` and",
                "+    `@JsonCreator` + `@JsonProperty` for same property name",
                "+   (2.9.6)",
                "diff --git a/release-notes/VERSION-2.x b/release-notes/VERSION-2.x",
                "index 8eceed3f2..80c90ddd7 100644",
                "--- a/release-notes/VERSION-2.x",
                "+++ b/release-notes/VERSION-2.x",
                "@@ -20,2 +20,5 @@ Project: jackson-databind",
                "  (reported by Ondrej Z)",
                "+#2001: Deserialization issue with `@JsonIgnore` and `@JsonCreator` + `@JsonProperty`",
                "+  for same property name",
                "+ (reported, fix contributed by Jakub S)",
                " #2019: Abstract Type mapping in 2.9 fails when multiple modules are registered",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
                "index 0dc1bbefb..f7609a7fc 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
                "@@ -824,2 +824,8 @@ public class POJOPropertiesCollector",
                "                 _updateCreatorProperty(prop, _creatorProperties);",
                "+                // [databind#2001]: New name of property was ignored previously? Remove from ignored",
                "+                // 01-May-2018, tatu: I have a feeling this will need to be revisited at some point,",
                "+                //   to avoid removing some types of removals, possibly. But will do for now.",
                "+                if (_ignoredPropertyNames != null) {",
                "+                    _ignoredPropertyNames.remove(name);",
                "+                }",
                "             }"
            ],
            "changed_files": [
                "release-notes/CREDITS-2.x",
                "release-notes/VERSION-2.x",
                "src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "2001": "Fix #2001 remove renamed properties from ignored #2002 2.9.4 doesn\u2019t handle @JsonIgnored field with the same name as @JsonProperty(name) of other field FasterXML/jackson-module-kotlin#124 #2283 - Renaming Read Only Properties with USE_GETTERS_AS_SETTERS #2284 Jackson JsonIgnore does not work in Kotlin FasterXML/jackson-module-kotlin#308"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: fasterxml",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 2001",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3010de7f6571fa83059445f5ee56ac7d15748287",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525224251,
            "hunks": 60,
            "message": "fix #2014",
            "diff": [
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java b/src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java",
                "index bba902bb8..c83b1f137 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java",
                "@@ -3,2 +3,3 @@ package com.fasterxml.jackson.databind;",
                " import com.fasterxml.jackson.core.*;",
                "+",
                " import com.fasterxml.jackson.databind.cfg.*;",
                "@@ -9,3 +10,2 @@ import com.fasterxml.jackson.databind.type.TypeFactory;",
                " import com.fasterxml.jackson.databind.util.ArrayIterator;",
                "-import com.fasterxml.jackson.databind.util.ClassUtil;",
                " import com.fasterxml.jackson.databind.util.LinkedNode;",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
                "index bc3aa771f..fa1435b8f 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
                "@@ -14,3 +14,3 @@ import com.fasterxml.jackson.databind.*;",
                " import com.fasterxml.jackson.databind.deser.impl.*;",
                "-import com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer;",
                "+import com.fasterxml.jackson.databind.deser.std.StdConvertingDeserializer;",
                " import com.fasterxml.jackson.databind.deser.std.StdDeserializer;",
                "@@ -649,3 +649,3 @@ public abstract class BeanDeserializerBase",
                "                 JsonDeserializer<?> deser = ctxt.findNonContextualValueDeserializer(delegateType);",
                "-                return new StdDelegatingDeserializer<Object>(conv, delegateType, deser);",
                "+                return new StdConvertingDeserializer<Object>(conv, delegateType, deser);",
                "             }",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java b/src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
                "index 88b593cdb..8326a2f49 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
                "@@ -8,3 +8,3 @@ import com.fasterxml.jackson.databind.*;",
                " import com.fasterxml.jackson.databind.cfg.MapperConfig;",
                "-import com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer;",
                "+import com.fasterxml.jackson.databind.deser.std.StdConvertingDeserializer;",
                " import com.fasterxml.jackson.databind.introspect.Annotated;",
                "@@ -364,3 +364,3 @@ public final class DeserializerCache",
                "         }",
                "-        return new StdDelegatingDeserializer<Object>(conv, delegateType,",
                "+        return new StdConvertingDeserializer<Object>(conv, delegateType,",
                "                 _createDeserializer2(ctxt, factory, delegateType, beanDesc));",
                "@@ -454,3 +454,3 @@ public final class DeserializerCache",
                "         JavaType delegateType = conv.getInputType(ctxt.getTypeFactory());",
                "-        return (JsonDeserializer<Object>) new StdDelegatingDeserializer<Object>(conv, delegateType, deser);",
                "+        return (JsonDeserializer<Object>) new StdConvertingDeserializer<Object>(conv, delegateType, deser);",
                "     }",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/JavaUtilCollectionsDeserializers.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/JavaUtilCollectionsDeserializers.java",
                "index ce27bbc59..4077a5207 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/JavaUtilCollectionsDeserializers.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/JavaUtilCollectionsDeserializers.java",
                "@@ -8,3 +8,3 @@ import com.fasterxml.jackson.databind.JsonDeserializer;",
                " import com.fasterxml.jackson.databind.JsonMappingException;",
                "-import com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer;",
                "+import com.fasterxml.jackson.databind.deser.std.StdConvertingDeserializer;",
                " import com.fasterxml.jackson.databind.type.TypeFactory;",
                "@@ -78,3 +78,3 @@ public abstract class JavaUtilCollectionsDeserializers",
                "         }",
                "-        return new StdDelegatingDeserializer<Object>(conv);",
                "+        return new StdConvertingDeserializer<Object>(conv);",
                "     }",
                "@@ -95,3 +95,3 @@ public abstract class JavaUtilCollectionsDeserializers",
                "         }",
                "-        return new StdDelegatingDeserializer<Object>(conv);",
                "+        return new StdConvertingDeserializer<Object>(conv);",
                "     }",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/DelegatingDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/DelegatingDeserializer.java",
                "index 46b9ba465..ddbef1a4d 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/DelegatingDeserializer.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/DelegatingDeserializer.java",
                "@@ -72,2 +72,8 @@ public abstract class DelegatingDeserializer",
                "+    @Override",
                "+    public SettableBeanProperty findBackReference(String logicalName) {",
                "+        // [databind#253]: Hope this works....",
                "+        return _delegatee.findBackReference(logicalName);",
                "+    }",
                "+",
                "     @Override",
                "@@ -117,10 +123,2 @@ public abstract class DelegatingDeserializer",
                "-    @Override",
                "-    public boolean isCachable() { return _delegatee.isCachable(); }",
                "-",
                "-    @Override // since 2.9",
                "-    public Boolean supportsUpdate(DeserializationConfig config) {",
                "-        return _delegatee.supportsUpdate(config);",
                "-    }",
                "-",
                "     @Override",
                "@@ -130,8 +128,2 @@ public abstract class DelegatingDeserializer",
                "-    @Override",
                "-    public SettableBeanProperty findBackReference(String logicalName) {",
                "-        // [databind#253]: Hope this works....",
                "-        return _delegatee.findBackReference(logicalName);",
                "-    }",
                "-",
                "     @Override",
                "@@ -158,2 +150,12 @@ public abstract class DelegatingDeserializer",
                "     }",
                "+",
                "+    @Override",
                "+    public boolean isCachable() {",
                "+        return (_delegatee != null) && _delegatee.isCachable();",
                "+    }",
                "+",
                "+    @Override",
                "+    public Boolean supportsUpdate(DeserializationConfig config) {",
                "+        return _delegatee.supportsUpdate(config);",
                "+    }",
                " }",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdConvertingDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdConvertingDeserializer.java",
                "new file mode 100644",
                "index 000000000..ddf67b8b5",
                "--- /dev/null",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdConvertingDeserializer.java",
                "@@ -0,0 +1,245 @@",
                "+package com.fasterxml.jackson.databind.deser.std;",
                "+",
                "+import java.io.IOException;",
                "+",
                "+import com.fasterxml.jackson.core.JsonParser;",
                "+",
                "+import com.fasterxml.jackson.databind.*;",
                "+import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;",
                "+import com.fasterxml.jackson.databind.util.ClassUtil;",
                "+import com.fasterxml.jackson.databind.util.Converter;",
                "+",
                "+/**",
                "+ * Deserializer implementation where given Java type is first deserialized",
                "+ * by a standard Jackson deserializer into a delegate type; and then",
                "+ * this delegate type is converted using a configured",
                "+ * {@link Converter} into desired target type.",
                "+ * Common delegate types to use are {@link java.util.Map}",
                "+ * and {@link com.fasterxml.jackson.databind.JsonNode}.",
                "+ *<p>",
                "+ * Note that although types (delegate, target) may be related, they must not be same; trying",
                "+ * to do this will result in an exception.",
                "+ *<p>",
                "+ * Also note that in Jackson 2.x, this class was named {@code StdDelegatingDeserializer}",
                "+ * ",
                "+ * @param <T> Target type to convert to, from delegate type",
                "+ * ",
                "+ * @see StdNodeBasedDeserializer",
                "+ * @see Converter",
                "+ */",
                "+public class StdConvertingDeserializer<T>",
                "+    extends StdDeserializer<T>",
                "+{",
                "+    private static final long serialVersionUID = 1L;",
                "+",
                "+    /**",
                "+     * Converter that was used for creating {@link #_delegateDeserializer}.",
                "+     */",
                "+    protected final Converter<Object,T> _converter;",
                "+",
                "+    /**",
                "+     * Fully resolved delegate type, with generic information if any available.",
                "+     */",
                "+    protected final JavaType _delegateType;",
                "+",
                "+    /**",
                "+     * Underlying serializer for type <code>T</code>.",
                "+     */",
                "+    protected final JsonDeserializer<Object> _delegateDeserializer;",
                "+",
                "+    /*",
                "+    /**********************************************************************",
                "+    /* Life-cycle",
                "+    /**********************************************************************",
                "+     */",
                "+",
                "+    @SuppressWarnings(\"unchecked\")",
                "+    public StdConvertingDeserializer(Converter<?,T> converter)",
                "+    {",
                "+        super(Object.class);",
                "+        _converter = (Converter<Object,T>)converter;",
                "+        _delegateType = null;",
                "+        _delegateDeserializer = null;",
                "+    }",
                "+",
                "+    @SuppressWarnings(\"unchecked\")",
                "+    public StdConvertingDeserializer(Converter<Object,T> converter,",
                "+            JavaType delegateType, JsonDeserializer<?> delegateDeserializer)",
                "+    {",
                "+        super(delegateType);",
                "+        _converter = converter;",
                "+        _delegateType = delegateType;",
                "+        _delegateDeserializer = (JsonDeserializer<Object>) delegateDeserializer;",
                "+    }",
                "+",
                "+    protected StdConvertingDeserializer(StdConvertingDeserializer<T> src)",
                "+    {",
                "+        super(src);",
                "+        _converter = src._converter;",
                "+        _delegateType = src._delegateType;",
                "+        _delegateDeserializer = src._delegateDeserializer;",
                "+    }",
                "+",
                "+    /**",
                "+     * Method used for creating resolved contextual instances. Must be",
                "+     * overridden when sub-classing.",
                "+     */",
                "+    protected StdConvertingDeserializer<T> withDelegate(Converter<Object,T> converter,",
                "+            JavaType delegateType, JsonDeserializer<?> delegateDeserializer)",
                "+    {",
                "+        ClassUtil.verifyMustOverride(StdConvertingDeserializer.class, this, \"withDelegate\");",
                "+        return new StdConvertingDeserializer<T>(converter, delegateType, delegateDeserializer);",
                "+    }",
                "+",
                "+    /*",
                "+    /**********************************************************************",
                "+    /* Contextualization",
                "+    /**********************************************************************",
                "+     */",
                "+",
                "+    // Note: unlikely to get called since most likely instances explicitly constructed;",
                "+    // if so, caller must ensure delegating deserializer is properly resolve()d.",
                "+    @Override",
                "+    public void resolve(DeserializationContext ctxt)",
                "+        throws JsonMappingException",
                "+    {",
                "+        if (_delegateDeserializer != null) {",
                "+            _delegateDeserializer.resolve(ctxt);",
                "+        }",
                "+    }",
                "+",
                "+    @Override",
                "+    public JsonDeserializer<?> createContextual(DeserializationContext ctxt, BeanProperty property)",
                "+        throws JsonMappingException",
                "+    {",
                "+        // First: if already got deserializer to delegate to, contextualize it:",
                "+        if (_delegateDeserializer != null) {",
                "+            JsonDeserializer<?> deser = ctxt.handleSecondaryContextualization(_delegateDeserializer,",
                "+                    property, _delegateType);",
                "+            if (deser != _delegateDeserializer) {",
                "+                return withDelegate(_converter, _delegateType, deser);",
                "+            }",
                "+            return this;",
                "+        }",
                "+        // Otherwise: figure out what is the fully generic delegate type, then find deserializer",
                "+        JavaType delegateType = _converter.getInputType(ctxt.getTypeFactory());",
                "+        return withDelegate(_converter, delegateType,",
                "+                ctxt.findContextualValueDeserializer(delegateType, property));",
                "+    }",
                "+",
                "+    /*",
                "+    /**********************************************************************",
                "+    /* Accessors",
                "+    /**********************************************************************",
                "+     */",
                "+",
                "+    @Override",
                "+    public JsonDeserializer<?> getDelegatee() {",
                "+        return _delegateDeserializer;",
                "+    }",
                "+",
                "+    @Override",
                "+    public Class<?> handledType() {",
                "+        return _delegateDeserializer.handledType();",
                "+    }",
                "+",
                "+    /**",
                "+     * Let's assume that as long as delegate is cachable, we are too.",
                "+     */",
                "+    @Override",
                "+    public boolean isCachable() {",
                "+        return (_delegateDeserializer != null) && _delegateDeserializer.isCachable();",
                "+    }",
                "+",
                "+    @Override",
                "+    public Boolean supportsUpdate(DeserializationConfig config) {",
                "+        return _delegateDeserializer.supportsUpdate(config);",
                "+    }",
                "+",
                "+    /*",
                "+    /**********************************************************************",
                "+    /* Serialization",
                "+    /**********************************************************************",
                "+     */",
                "+",
                "+    @Override",
                "+    public T deserialize(JsonParser p, DeserializationContext ctxt) throws IOException",
                "+    {",
                "+        Object delegateValue = _delegateDeserializer.deserialize(p, ctxt);",
                "+        if (delegateValue == null) {",
                "+            return null;",
                "+        }",
                "+        return convertValue(delegateValue);",
                "+    }",
                "+",
                "+    @Override",
                "+    public Object deserializeWithType(JsonParser p, DeserializationContext ctxt,",
                "+            TypeDeserializer typeDeserializer) throws IOException",
                "+    {",
                "+        /* 12-Apr-2016, tatu: As predicted, earlier handling does not work",
                "+         *   (see [databind#1189] for details). There does not seem to be any compelling",
                "+         *   way to combine polymorphic types, Converters, but the least sucky way",
                "+         *   is probably to use Converter and ignore polymorphic type. Alternative",
                "+         *   would be to try to change `TypeDeserializer` to accept `Converter` to",
                "+         *   invoke... but that is more intrusive, yet not guaranteeing success.",
                "+         */",
                "+        // method called up to 2.7.3:",
                "+//        Object delegateValue = _delegateDeserializer.deserializeWithType(p, ctxt, typeDeserializer);",
                "+",
                "+        // method called since 2.7.4",
                "+        Object delegateValue = _delegateDeserializer.deserialize(p, ctxt);",
                "+        if (delegateValue == null) {",
                "+            return null;",
                "+        }",
                "+        return convertValue(delegateValue);",
                "+    }",
                "+",
                "+    @SuppressWarnings(\"unchecked\")",
                "+    @Override",
                "+    public T deserialize(JsonParser p, DeserializationContext ctxt, Object intoValue)",
                "+        throws IOException",
                "+    {",
                "+        if (_delegateType.getRawClass().isAssignableFrom(intoValue.getClass())){",
                "+            return (T) _delegateDeserializer.deserialize(p, ctxt, intoValue);",
                "+        }",
                "+        return (T) _handleIncompatibleUpdateValue(p, ctxt, intoValue);",
                "+    }",
                "+",
                "+    /**",
                "+     * Overridable handler method called when {@link #deserialize(JsonParser, DeserializationContext, Object)}",
                "+     * has been called with a value that is not compatible with delegate value.",
                "+     * Since no conversion are expected for such \"updateValue\" case, this is normally not",
                "+     * an operation that can be permitted, and the default behavior is to throw exception.",
                "+     * Sub-classes may choose to try alternative approach if they have more information on",
                "+     * exact usage and constraints.",
                "+     */",
                "+    protected Object _handleIncompatibleUpdateValue(JsonParser p, DeserializationContext ctxt, Object intoValue)",
                "+        throws IOException",
                "+    {",
                "+        throw new UnsupportedOperationException(String.format",
                "+                (\"Cannot update object of type %s (using deserializer for type %s)\"",
                "+                        +intoValue.getClass().getName(), _delegateType));",
                "+    }",
                "+",
                "+    /*",
                "+    /**********************************************************************",
                "+    /* Overridable methods",
                "+    /**********************************************************************",
                "+     */",
                "+",
                "+    /**",
                "+     * Method called to convert from \"delegate value\" (which was deserialized",
                "+     * from JSON using standard Jackson deserializer for delegate type)",
                "+     * into desired target type.",
                "+     *<P>",
                "+     * The default implementation uses configured {@link Converter} to do",
                "+     * conversion.",
                "+     * ",
                "+     * @param delegateValue",
                "+     * ",
                "+     * @return Result of conversion",
                "+     */",
                "+    protected T convertValue(Object delegateValue) {",
                "+        return _converter.convert(delegateValue);",
                "+    }",
                "+}",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
                "index 3e27f0e44..0efa942d4 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
                "@@ -76,5 +76,5 @@ public abstract class StdDeserializer<T>",
                "     /*",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "     /* Accessors",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "      */",
                "@@ -85,5 +85,5 @@ public abstract class StdDeserializer<T>",
                "     /*",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "     /* Extended API",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "      */",
                "@@ -110,7 +110,7 @@ public abstract class StdDeserializer<T>",
                "     }",
                "-    ",
                "+",
                "     /*",
                "-    /**********************************************************",
                "-    /* Partial JsonDeserializer implementation ",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "+    /* Partial deserialize method implementation ",
                "+    /**********************************************************************",
                "      */",
                "@@ -129,3 +129,3 @@ public abstract class StdDeserializer<T>",
                "     /*",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "     /* Helper methods for sub-classes, parsing: while mostly",
                "@@ -133,3 +133,3 @@ public abstract class StdDeserializer<T>",
                "     /* with things serialized as numbers (such as Dates).",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "      */",
                "@@ -254,5 +254,2 @@ public abstract class StdDeserializer<T>",
                "-    /**",
                "-     * @since 2.9",
                "-     */",
                "     protected final int _parseIntPrimitive(DeserializationContext ctxt, String text) throws IOException",
                "@@ -615,6 +612,5 @@ public abstract class StdDeserializer<T>",
                "     /*",
                "-    /**********************************************************",
                "-    /* Helper methods for sub-classes regarding decoding from",
                "-    /* alternate representations",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "+    /* Helper methods for sub-classes regarding decoding from alternate representations",
                "+    /**********************************************************************",
                "      */",
                "@@ -634,4 +630,2 @@ public abstract class StdDeserializer<T>",
                "      * {@link #deserialize(JsonParser, DeserializationContext)}.",
                "-     *",
                "-     * @since 2.9",
                "      */",
                "@@ -687,5 +681,5 @@ public abstract class StdDeserializer<T>",
                "     /*",
                "-    /****************************************************",
                "+    /**********************************************************************",
                "     /* Helper methods for sub-classes, coercions",
                "-    /****************************************************",
                "+    /**********************************************************************",
                "      */",
                "@@ -708,4 +702,2 @@ public abstract class StdDeserializer<T>",
                "      * @see DeserializationFeature#USE_LONG_FOR_INTS",
                "-     *",
                "-     * @since 2.6",
                "      */",
                "@@ -883,5 +875,5 @@ public abstract class StdDeserializer<T>",
                "     /*",
                "-    /****************************************************",
                "+    /**********************************************************************",
                "     /* Helper methods for sub-classes, resolving dependencies",
                "-    /****************************************************",
                "+    /**********************************************************************",
                "      */",
                "@@ -927,5 +919,5 @@ public abstract class StdDeserializer<T>",
                "     /*",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "     /* Helper methods for: deserializer construction",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "      */",
                "@@ -955,3 +947,3 @@ public abstract class StdDeserializer<T>",
                "                     }",
                "-                    return new StdDelegatingDeserializer<Object>(conv, delegateType, existingDeserializer);",
                "+                    return new StdConvertingDeserializer<Object>(conv, delegateType, existingDeserializer);",
                "                 }",
                "@@ -963,5 +955,5 @@ public abstract class StdDeserializer<T>",
                "     /*",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "     /* Helper methods for: accessing contextual config settings",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "      */",
                "@@ -974,4 +966,2 @@ public abstract class StdDeserializer<T>",
                "      * @param typeForDefaults Type (erased) used for finding default format settings, if any",
                "-     *",
                "-     * @since 2.7",
                "      */",
                "@@ -994,4 +984,2 @@ public abstract class StdDeserializer<T>",
                "      * @param typeForDefaults Type (erased) used for finding default format settings, if any",
                "-     *",
                "-     * @since 2.7",
                "      */",
                "@@ -1011,4 +999,2 @@ public abstract class StdDeserializer<T>",
                "      * will return `null`.",
                "-     *",
                "-     * @since 2.9",
                "      */",
                "@@ -1105,5 +1091,5 @@ public abstract class StdDeserializer<T>",
                "     /*",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "     /* Helper methods for sub-classes, problem reporting",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "      */",
                "@@ -1159,10 +1145,7 @@ handledType().getName());",
                "     /*",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "     /* Helper methods, other",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "      */",
                "-    /**",
                "-     * @since 2.9",
                "-     */",
                "     protected final static boolean _neitherNull(Object a, Object b) {",
                "@@ -1171,5 +1154,2 @@ handledType().getName());",
                "-    /**",
                "-     * @since 2.9",
                "-     */",
                "     protected final boolean _byteOverflow(int value) {",
                "@@ -1179,6 +1159,3 @@ handledType().getName());",
                "     }",
                "-    ",
                "-    /**",
                "-     * @since 2.9",
                "-     */",
                "+",
                "     protected final boolean _shortOverflow(int value) {",
                "@@ -1187,5 +1164,2 @@ handledType().getName());",
                "-    /**",
                "-     * @since 2.9",
                "-     */",
                "     protected final boolean _intOverflow(long value) {",
                "@@ -1194,5 +1168,2 @@ handledType().getName());",
                "-    /**",
                "-     * @since 2.9",
                "-     */",
                "     protected Number _nonNullNumber(Number n) {",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdNodeBasedDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdNodeBasedDeserializer.java",
                "index 735820ddc..d08a2c5ac 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdNodeBasedDeserializer.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdNodeBasedDeserializer.java",
                "@@ -11,3 +11,3 @@ import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;",
                "  * intermediate tree representation ({@link JsonNode}).",
                "- * Note that this is a slightly simplified alternative to {@link StdDelegatingDeserializer}).",
                "+ * Note that this is a slightly simplified alternative to {@link StdConvertingDeserializer}).",
                "  *",
                "@@ -24,5 +24,5 @@ public abstract class StdNodeBasedDeserializer<T>",
                "     /*",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "     /* Life-cycle",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "      */",
                "@@ -52,5 +52,5 @@ public abstract class StdNodeBasedDeserializer<T>",
                "     /*",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "     /* Abstract methods for sub-classes",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "      */",
                "@@ -60,5 +60,5 @@ public abstract class StdNodeBasedDeserializer<T>",
                "     /*",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "     /* JsonDeserializer impl",
                "-    /**********************************************************",
                "+    /**********************************************************************",
                "      */",
                "@@ -66,4 +66,4 @@ public abstract class StdNodeBasedDeserializer<T>",
                "     @Override",
                "-    public T deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException {",
                "-        JsonNode n = (JsonNode) _treeDeserializer.deserialize(jp, ctxt);",
                "+    public T deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {",
                "+        JsonNode n = (JsonNode) _treeDeserializer.deserialize(p, ctxt);",
                "         return convert(n, ctxt);",
                "@@ -72,10 +72,9 @@ public abstract class StdNodeBasedDeserializer<T>",
                "     @Override",
                "-    public Object deserializeWithType(JsonParser jp, DeserializationContext ctxt,",
                "+    public Object deserializeWithType(JsonParser p, DeserializationContext ctxt,",
                "             TypeDeserializer td)",
                "-        throws IOException, JsonProcessingException",
                "+        throws IOException",
                "     {",
                "-        /* 19-Nov-2014, tatu: Quite likely we'd have some issues but... let's",
                "-         *   try, just in case.",
                "-         */",
                "-        JsonNode n = (JsonNode) _treeDeserializer.deserializeWithType(jp, ctxt, td);",
                "+        // 19-Nov-2014, tatu: Quite likely we'd have some issues but... let's",
                "+        //   try, just in case.",
                "+        JsonNode n = (JsonNode) _treeDeserializer.deserializeWithType(p, ctxt, td);",
                "         return convert(n, ctxt);",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/util/Converter.java b/src/main/java/com/fasterxml/jackson/databind/util/Converter.java",
                "index 102a487fe..8c865de3e 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/util/Converter.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/util/Converter.java",
                "@@ -17,3 +17,3 @@ import com.fasterxml.jackson.databind.type.TypeFactory;",
                "  * @see com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
                "- * @see com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer",
                "+ * @see com.fasterxml.jackson.databind.deser.std.StdConvertingDeserializer",
                "  *"
            ],
            "changed_files": [
                "src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java",
                "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java",
                "src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
                "src/main/java/com/fasterxml/jackson/databind/deser/impl/JavaUtilCollectionsDeserializers.java",
                "src/main/java/com/fasterxml/jackson/databind/deser/std/DelegatingDeserializer.java",
                "src/main/java/com/fasterxml/jackson/databind/deser/std/StdConvertingDeserializer.java",
                "src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
                "src/main/java/com/fasterxml/jackson/databind/deser/std/StdNodeBasedDeserializer.java",
                "src/main/java/com/fasterxml/jackson/databind/util/Converter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "2014": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/deser/std/StdNodeBasedDeserializer.java, src/main/java/com/fasterxml/jackson/databind/deser/impl/JavaUtilCollectionsDeserializers.java, src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java, src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java, src/main/java/com/fasterxml/jackson/databind/deser/std/StdConvertingDeserializer.java, src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java, src/main/java/com/fasterxml/jackson/databind/util/Converter.java, src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java, src/main/java/com/fasterxml/jackson/databind/deser/std/DelegatingDeserializer.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: fasterxml",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 2014",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d7b8e87c294b29881dcbd179f29e34649f863900",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525467133,
            "hunks": 2,
            "message": "Some additions to null handling via coercion",
            "diff": [
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java b/src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java",
                "index df7f6cf19..31a5bb056 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java",
                "@@ -528,3 +528,8 @@ public abstract class SettableBeanProperty",
                "         }",
                "-        return _valueDeserializer.deserialize(p, ctxt);",
                "+        // 04-May-2018, tatu: [databind#2023] Coercion from String (mostly) can give null",
                "+        Object value =  _valueDeserializer.deserialize(p, ctxt);",
                "+        if (value == null) {",
                "+            value = _nullProvider.getNullValue(ctxt);",
                "+        }",
                "+        return value;",
                "     }",
                "@@ -553,3 +558,11 @@ public abstract class SettableBeanProperty",
                "         }",
                "-        return _valueDeserializer.deserialize(p, ctxt, toUpdate);",
                "+        // 04-May-2018, tatu: [databind#2023] Coercion from String (mostly) can give null",
                "+        Object value = _valueDeserializer.deserialize(p, ctxt, toUpdate);",
                "+        if (value == null) {",
                "+            if (NullsConstantProvider.isSkipper(_nullProvider)) {",
                "+                return toUpdate;",
                "+            }",
                "+            value = _nullProvider.getNullValue(ctxt);",
                "+        }",
                "+        return value;",
                "     }"
            ],
            "changed_files": [
                "src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: fasterxml",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "afee726c62eee156eaeacaa1cb994c9aeb701390",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526014754,
            "hunks": 7,
            "message": "Changing usage of `Shape.OBJECT` to `Shape.POJO` for cases where this makes sense",
            "diff": [
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java b/src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
                "index 8326a2f49..bba9e0cc8 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
                "@@ -388,3 +388,3 @@ public final class DeserializerCache",
                "                 JsonFormat.Value format = beanDesc.findExpectedFormat(type.getRawClass());",
                "-                if (format.getShape() != JsonFormat.Shape.OBJECT) {",
                "+                if (format.getShape() != JsonFormat.Shape.POJO) {",
                "                     MapLikeType mlt = (MapLikeType) type;",
                "@@ -397,9 +397,8 @@ public final class DeserializerCache",
                "             if (type.isCollectionLikeType()) {",
                "-                /* 03-Aug-2012, tatu: As per [databind#40], one exception is if shape",
                "-                 *   is to be Shape.OBJECT. Ideally we'd determine it bit later on",
                "-                 *   (to allow custom handler checks), but that won't work for other",
                "-                 *   reasons. So do it here.",
                "+                /* One exception is if shape is to be Shape.POJO (or, as alias, OBJECT).",
                "+                 * Ideally we'd determine it bit later on (to allow custom handler checks),",
                "+                 * but that won't work for other reasons. So do it here.",
                "                  */",
                "                 JsonFormat.Value format = beanDesc.findExpectedFormat(type.getRawClass());",
                "-                if (format.getShape() != JsonFormat.Shape.OBJECT) {",
                "+                if (format.getShape() != JsonFormat.Shape.POJO) {",
                "                     CollectionLikeType clt = (CollectionLikeType) type;",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java b/src/main/java/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
                "index d53ccb59e..c47e0d146 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
                "@@ -642,4 +642,4 @@ public abstract class BasicSerializerFactory",
                "                 // We may also want to use serialize Collections \"as beans\", if (and only if)",
                "-                // this is specified with `@JsonFormat(shape=Object)`",
                "-                if (format.getShape() == JsonFormat.Shape.OBJECT) {",
                "+                // shape specified as \"POJO\"",
                "+                if (format.getShape() == JsonFormat.Shape.POJO) {",
                "                     return null;",
                "@@ -734,3 +734,3 @@ public abstract class BasicSerializerFactory",
                "         // nasty to undo, and does not apply on per-property basis. So, hardly optimal",
                "-        if (format.getShape() == JsonFormat.Shape.OBJECT) {",
                "+        if (format.getShape() == JsonFormat.Shape.POJO) {",
                "             return null;",
                "@@ -842,3 +842,3 @@ public abstract class BasicSerializerFactory",
                "         //   serialization as `Shape.NATURAL` instead; that's JSON Object too.",
                "-        if (effectiveFormat.getShape() == JsonFormat.Shape.OBJECT) {",
                "+        if (effectiveFormat.getShape() == JsonFormat.Shape.POJO) {",
                "             return null;",
                "@@ -1136,3 +1136,3 @@ public abstract class BasicSerializerFactory",
                "         // otherwise pass it to EnumSerializer.",
                "-        if (effectiveFormat.getShape() == JsonFormat.Shape.OBJECT) {",
                "+        if (effectiveFormat.getShape() == JsonFormat.Shape.POJO) {",
                "             // one special case: suppress serialization of \"getDeclaringClass()\"..."
            ],
            "changed_files": [
                "src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
                "src/main/java/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java, src/main/java/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: fasterxml",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "cf0741bed68700ecb88860a64f5e649620e6b296",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526082693,
            "hunks": 7,
            "message": "yet more shape-shifting support",
            "diff": [
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/BeanProperty.java b/src/main/java/com/fasterxml/jackson/databind/BeanProperty.java",
                "index 4344d2771..278409278 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/BeanProperty.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/BeanProperty.java",
                "@@ -119,2 +119,12 @@ public interface BeanProperty extends FullyNamed",
                "     public JsonFormat.Value findPropertyFormat(MapperConfig<?> config, Class<?> baseType);",
                "+",
                "+    /**",
                "+     * Helper method used to only access property-specified format overrides, if any,",
                "+     * not considering type or global default format settings.",
                "+     *",
                "+     * @return Format override settings if any; `null` if no overrides",
                "+     *",
                "+     * @since 3.0",
                "+     */",
                "+    public JsonFormat.Value findFormatOverrides(MapperConfig<?> config);",
                "@@ -212,2 +222,7 @@ public interface BeanProperty extends FullyNamed",
                "+        @Override",
                "+        public JsonFormat.Value findFormatOverrides(MapperConfig<?> config) {",
                "+            return null;",
                "+        }",
                "+        ",
                "         @Override",
                "@@ -328,2 +343,7 @@ public interface BeanProperty extends FullyNamed",
                "+        @Override",
                "+        public JsonFormat.Value findFormatOverrides(MapperConfig<?> config) {",
                "+            return null;",
                "+        }",
                "+        ",
                "         @Override",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java b/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
                "index 1fdb24d76..a7e712dfd 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
                "@@ -881,9 +881,7 @@ public abstract class SerializerProvider",
                "         _serializerCache.addAndResolveNonTypedSerializer(rawType, fullType, ser, this);",
                "-",
                "-        // Ok: first part fine. But now the property overrides, if any...",
                "-",
                "-        // !!! TODO",
                "-//        JsonFormat.Value overrides = prop.",
                "-//        JsonSerializer<?> ser2 = ser.withFormatOverrides(_config, prop.",
                "-        return ser;",
                "+        // Fine, we have to base instance. But how about per-property format overrides?",
                "+        if (prop == null) {",
                "+            return ser;",
                "+        }",
                "+        return _checkShapeShifting(fullType, beanDesc, prop, ser);",
                "     }",
                "@@ -906,6 +904,26 @@ public abstract class SerializerProvider",
                "         _serializerCache.addAndResolveNonTypedSerializer(type, ser, this);",
                "+        // Fine, we have to base instance. But how about per-property format overrides?",
                "+        if (prop == null) {",
                "+            return ser;",
                "+        }",
                "+        return _checkShapeShifting(type, beanDesc, prop, ser);",
                "+    }",
                "-        // Ok: first part fine. But now the property overrides, if any...",
                "-// !!! TODO",
                "-        return ser;",
                "+    @SuppressWarnings(\"unchecked\")",
                "+    private JsonSerializer<Object> _checkShapeShifting(JavaType type, BeanDescription beanDesc,",
                "+            BeanProperty prop, JsonSerializer<?> ser)",
                "+        throws JsonMappingException",
                "+    {",
                "+        JsonFormat.Value overrides = prop.findFormatOverrides(_config);",
                "+        if (overrides != null) {",
                "+            // First: it may be completely fine to use serializer, despite some overrides",
                "+            JsonSerializer<?> ser2 = ser.withFormatOverrides(_config, overrides);",
                "+            if (ser2 != null) {",
                "+                ser = ser2;",
                "+            } else {",
                "+                // But if not, we need to re-create it via factory",
                "+                ser = _serializerFactory.createSerializer(this, type, beanDesc, overrides);",
                "+            }",
                "+        }",
                "+        return (JsonSerializer<Object>) ser;",
                "     }",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/ConcreteBeanPropertyBase.java b/src/main/java/com/fasterxml/jackson/databind/introspect/ConcreteBeanPropertyBase.java",
                "index ab8e6da01..9f7a2f303 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/introspect/ConcreteBeanPropertyBase.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/ConcreteBeanPropertyBase.java",
                "@@ -52,2 +52,14 @@ public abstract class ConcreteBeanPropertyBase",
                "+    @Override",
                "+    public JsonFormat.Value findFormatOverrides(MapperConfig<?> config) {",
                "+        AnnotationIntrospector intr = config.getAnnotationIntrospector();",
                "+        if (intr != null) {",
                "+            AnnotatedMember member = getMember();",
                "+            if (member != null) {",
                "+                return intr.findFormat(member);",
                "+            }",
                "+        }",
                "+        return null;",
                "+    }",
                "+",
                "     @Override",
                "@@ -60,10 +72,3 @@ public abstract class ConcreteBeanPropertyBase",
                "             JsonFormat.Value v1 = config.getDefaultPropertyFormat(baseType);",
                "-            JsonFormat.Value v2 = null;",
                "-            AnnotationIntrospector intr = config.getAnnotationIntrospector();",
                "-            if (intr != null) {",
                "-                AnnotatedMember member = getMember();",
                "-                if (member != null) {",
                "-                    v2 = intr.findFormat(member);",
                "-                }",
                "-            }",
                "+            JsonFormat.Value v2 = findFormatOverrides(config);",
                "             if (v1 == null) {"
            ],
            "changed_files": [
                "src/main/java/com/fasterxml/jackson/databind/BeanProperty.java",
                "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
                "src/main/java/com/fasterxml/jackson/databind/introspect/ConcreteBeanPropertyBase.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java, src/main/java/com/fasterxml/jackson/databind/BeanProperty.java, src/main/java/com/fasterxml/jackson/databind/introspect/ConcreteBeanPropertyBase.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: fasterxml",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "0cfa075703f1cade1b6b8591f94a15249f300c7b",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526075104,
            "hunks": 35,
            "message": "Bit more incremental work on \"shape-shifting\" serializers",
            "diff": [
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/JsonSerializer.java b/src/main/java/com/fasterxml/jackson/databind/JsonSerializer.java",
                "index ee3477847..390bdf25f 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/JsonSerializer.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/JsonSerializer.java",
                "@@ -183,3 +183,3 @@ public abstract class JsonSerializer<T>",
                "      */",
                "-    public JsonSerializer<?> withFormatOverride(SerializationConfig config,",
                "+    public JsonSerializer<?> withFormatOverrides(SerializationConfig config,",
                "             JsonFormat.Value formatOverrides)",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java b/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
                "index accd9054c..1fdb24d76 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
                "@@ -574,3 +574,3 @@ public abstract class SerializerProvider",
                "         if (ser == null) {",
                "-            ser = _createAndCacheUntypedSerializer(valueType);",
                "+            ser = _createAndCachePropertySerializer(valueType, property);",
                "         }",
                "@@ -588,3 +588,3 @@ public abstract class SerializerProvider",
                "             if (ser == null) {",
                "-                ser = _createAndCacheUntypedSerializer(rawType, fullType);",
                "+                ser = _createAndCachePropertySerializer(rawType, fullType, property);",
                "             }",
                "@@ -600,3 +600,3 @@ public abstract class SerializerProvider",
                "         if (ser == null) {",
                "-            ser = _createAndCacheUntypedSerializer(valueType);",
                "+            ser = _createAndCachePropertySerializer(valueType, property);",
                "         }",
                "@@ -614,3 +614,3 @@ public abstract class SerializerProvider",
                "             if (ser == null) {",
                "-                ser = _createAndCacheUntypedSerializer(rawType, fullType);",
                "+                ser = _createAndCachePropertySerializer(rawType, fullType, property);",
                "             }",
                "@@ -662,3 +662,3 @@ public abstract class SerializerProvider",
                "     /**********************************************************************",
                "-    /* Serializer discovery: other kinds of serializers; type, key",
                "+    /* Serializer discovery: type serializers",
                "     /**********************************************************************",
                "@@ -672,4 +672,3 @@ public abstract class SerializerProvider",
                "     public TypeSerializer findTypeSerializer(JavaType baseType) throws JsonMappingException {",
                "-        return _config.getTypeResolverProvider().findTypeSerializer(this, baseType,",
                "-                introspectClassAnnotations(baseType).getClassInfo());",
                "+        return findTypeSerializer(baseType, introspectClassAnnotations(baseType));",
                "     }",
                "@@ -709,2 +708,8 @@ public abstract class SerializerProvider",
                "+    /*",
                "+    /**********************************************************************",
                "+    /* Serializer discovery: key serializers",
                "+    /**********************************************************************",
                "+     */",
                "+",
                "     /**",
                "@@ -754,2 +759,8 @@ public abstract class SerializerProvider",
                "+    /*",
                "+    /**********************************************************************",
                "+    /* Serializer discovery: other misc serializers, null value, unknown",
                "+    /**********************************************************************",
                "+     */",
                "+",
                "     /**",
                "@@ -821,3 +832,2 @@ public abstract class SerializerProvider",
                "             JavaType fullType)",
                "-            ",
                "         throws JsonMappingException",
                "@@ -855,2 +865,49 @@ public abstract class SerializerProvider",
                "+    /**",
                "+     * Alternative to {@link #_createAndCacheUntypedSerializer(Class, JavaType)}, used",
                "+     * when serializer is requested for given property.",
                "+     */",
                "+    protected JsonSerializer<Object> _createAndCachePropertySerializer(Class<?> rawType,",
                "+            JavaType fullType, BeanProperty prop)",
                "+        throws JsonMappingException",
                "+    {",
                "+        BeanDescription beanDesc = introspect(fullType);",
                "+        JsonSerializer<Object> ser;",
                "+        try {",
                "+            ser = _serializerFactory.createSerializer(this, fullType, beanDesc, null);",
                "+        } catch (IllegalArgumentException iae) {",
                "+            throw _mappingProblem(iae, iae.getMessage());",
                "+        }",
                "+        _serializerCache.addAndResolveNonTypedSerializer(rawType, fullType, ser, this);",
                "+",
                "+        // Ok: first part fine. But now the property overrides, if any...",
                "+",
                "+        // !!! TODO",
                "+//        JsonFormat.Value overrides = prop.",
                "+//        JsonSerializer<?> ser2 = ser.withFormatOverrides(_config, prop.",
                "+        return ser;",
                "+    }",
                "+",
                "+    /**",
                "+     * Alternative to {@link #_createAndCacheUntypedSerializer(JavaType)}, used",
                "+     * when serializer is requested for given property.",
                "+     */",
                "+    protected JsonSerializer<Object> _createAndCachePropertySerializer(JavaType type,",
                "+            BeanProperty prop)",
                "+        throws JsonMappingException",
                "+    {",
                "+        BeanDescription beanDesc = introspect(type);",
                "+        JsonSerializer<Object> ser;",
                "+        try {",
                "+            ser = _serializerFactory.createSerializer(this, type, beanDesc, null);",
                "+        } catch (IllegalArgumentException iae) {",
                "+            throw _mappingProblem(iae, iae.getMessage());",
                "+        }",
                "+        _serializerCache.addAndResolveNonTypedSerializer(type, ser, this);",
                "+",
                "+        // Ok: first part fine. But now the property overrides, if any...",
                "+// !!! TODO",
                "+        return ser;",
                "+    }",
                "+",
                "     @SuppressWarnings(\"unchecked\")",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
                "index 0efa942d4..55ca57603 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
                "@@ -1016,4 +1016,2 @@ public abstract class StdDeserializer<T>",
                "      * will return given value deserializer (which is a null value provider itself).",
                "-     *",
                "-     * @since 2.9",
                "      */",
                "@@ -1043,3 +1041,2 @@ public abstract class StdDeserializer<T>",
                "-    // @since 2.9",
                "     protected final NullValueProvider _findNullProvider(DeserializationContext ctxt,",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/Serializers.java b/src/main/java/com/fasterxml/jackson/databind/ser/Serializers.java",
                "index 47d9bf07c..2dea0bbaa 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/ser/Serializers.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/ser/Serializers.java",
                "@@ -32,4 +32,7 @@ public interface Serializers",
                "      */",
                "-    public JsonSerializer<?> findSerializer(SerializationConfig config,",
                "-            JavaType type, BeanDescription beanDesc, JsonFormat.Value formatOverrides);",
                "+    default JsonSerializer<?> findSerializer(SerializationConfig config,",
                "+            JavaType type, BeanDescription beanDesc, JsonFormat.Value formatOverrides)",
                "+    {",
                "+        return null;",
                "+    }",
                "@@ -43,5 +46,8 @@ public interface Serializers",
                "      */",
                "-    public JsonSerializer<?> findReferenceSerializer(SerializationConfig config,",
                "+    default JsonSerializer<?> findReferenceSerializer(SerializationConfig config,",
                "             ReferenceType type, BeanDescription beanDesc, JsonFormat.Value formatOverrides,",
                "-            TypeSerializer contentTypeSerializer, JsonSerializer<Object> contentValueSerializer);",
                "+            TypeSerializer contentTypeSerializer, JsonSerializer<Object> contentValueSerializer)",
                "+    {",
                "+        return null;",
                "+    }",
                "@@ -57,5 +63,8 @@ public interface Serializers",
                "      */",
                "-    public JsonSerializer<?> findArraySerializer(SerializationConfig config, ArrayType type,",
                "+    default JsonSerializer<?> findArraySerializer(SerializationConfig config, ArrayType type,",
                "             BeanDescription beanDesc, JsonFormat.Value formatOverrides,",
                "-            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer);",
                "+            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)",
                "+    {",
                "+        return null;",
                "+    }",
                "@@ -71,5 +80,8 @@ public interface Serializers",
                "      */",
                "-    public JsonSerializer<?> findCollectionSerializer(SerializationConfig config,",
                "+    default JsonSerializer<?> findCollectionSerializer(SerializationConfig config,",
                "             CollectionType type, BeanDescription beanDesc, JsonFormat.Value formatOverrides,",
                "-            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer);",
                "+            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)",
                "+    {",
                "+        return null;",
                "+    }",
                "@@ -86,5 +98,8 @@ public interface Serializers",
                "      */",
                "-    public JsonSerializer<?> findCollectionLikeSerializer(SerializationConfig config,",
                "+    default JsonSerializer<?> findCollectionLikeSerializer(SerializationConfig config,",
                "             CollectionLikeType type, BeanDescription beanDesc, JsonFormat.Value formatOverrides,",
                "-            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer);",
                "+            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)",
                "+    {",
                "+        return null;",
                "+    }",
                "@@ -100,6 +115,9 @@ public interface Serializers",
                "      */",
                "-    public JsonSerializer<?> findMapSerializer(SerializationConfig config,",
                "+    default JsonSerializer<?> findMapSerializer(SerializationConfig config,",
                "             MapType type, BeanDescription beanDesc, JsonFormat.Value formatOverrides,",
                "             JsonSerializer<Object> keySerializer,",
                "-            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer);",
                "+            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)",
                "+    {",
                "+        return null;",
                "+    }",
                "@@ -116,6 +134,24 @@ public interface Serializers",
                "      */",
                "-    public JsonSerializer<?> findMapLikeSerializer(SerializationConfig config,",
                "+    default JsonSerializer<?> findMapLikeSerializer(SerializationConfig config,",
                "             MapLikeType type, BeanDescription beanDesc, JsonFormat.Value formatOverrides,",
                "             JsonSerializer<Object> keySerializer,",
                "-            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer);",
                "+            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)",
                "+    {",
                "+        return null;",
                "+    }",
                "+",
                "+    /**",
                "+     * Method called in case that a given type or property is declared to use shape",
                "+     * {@link JsonFormat.Shape#POJO} and is expected to be serialized \"as POJO\", that is,",
                "+     * as an (JSON) Object. This is usually NOT handled by extension modules as core",
                "+     * databind knows how to do this, but sometimes it may be necessary to override",
                "+     * this behavior.",
                "+     *",
                "+     * @since 3.0",
                "+     */",
                "+    default JsonSerializer<?> findExplicitPOJOSerializer(SerializationConfig config,",
                "+            JavaType type, BeanDescription beanDesc, JsonFormat.Value formatOverrides)",
                "+    {",
                "+        return null;",
                "+    }",
                "@@ -184,2 +220,9 @@ public interface Serializers",
                "+        @Override",
                "+        public JsonSerializer<?> findExplicitPOJOSerializer(SerializationConfig config,",
                "+                JavaType type, BeanDescription beanDesc, JsonFormat.Value formatOverrides)",
                "+        {",
                "+            return null;",
                "+        }",
                "+        ",
                "         /*",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java",
                "index 7f12270b1..c2ff26456 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java",
                "@@ -75,9 +75,2 @@ public class StdDelegatingSerializer",
                "-    @Deprecated // since 3.0",
                "-    public StdDelegatingSerializer(Converter<Object,?> converter,",
                "-            JavaType delegateType, JsonSerializer<?> delegateSerializer)",
                "-    {",
                "-        this(converter, delegateType, delegateSerializer, null);",
                "-    }",
                "-",
                "     /**",
                "diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdSerializer.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdSerializer.java",
                "index b3013c955..044d031b3 100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdSerializer.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdSerializer.java",
                "@@ -306,3 +306,3 @@ public abstract class StdSerializer<T>",
                "     protected JsonSerializer<?> findContextualConvertingSerializer(SerializerProvider provider,",
                "-            BeanProperty property, JsonSerializer<?> existingSerializer)",
                "+            BeanProperty prop, JsonSerializer<?> existingSerializer)",
                "         throws JsonMappingException",
                "@@ -314,3 +314,3 @@ public abstract class StdSerializer<T>",
                "         if (conversions != null) {",
                "-            Object lock = conversions.get(property);",
                "+            Object lock = conversions.get(prop);",
                "             if (lock != null) {",
                "@@ -322,10 +322,14 @@ public abstract class StdSerializer<T>",
                "         }",
                "-        conversions.put(property, Boolean.TRUE);",
                "-        try {",
                "-            JsonSerializer<?> ser = findConvertingContentSerializer(provider, property, existingSerializer);",
                "-            if (ser != null) {",
                "-                return provider.handleSecondaryContextualization(ser, property);",
                "+        final AnnotationIntrospector intr = provider.getAnnotationIntrospector();",
                "+        if (_neitherNull(intr, prop)) {",
                "+            conversions.put(prop, Boolean.TRUE);",
                "+            try {",
                "+                JsonSerializer<?> ser = _findConvertingContentSerializer(provider, intr,",
                "+                        prop, existingSerializer);",
                "+                if (ser != null) {",
                "+                    return provider.handleSecondaryContextualization(ser, prop);",
                "+                }",
                "+            } finally {",
                "+                conversions.remove(prop);",
                "             }",
                "-        } finally {",
                "-            conversions.remove(property);",
                "         }",
                "@@ -334,24 +338,17 @@ public abstract class StdSerializer<T>",
                "-    /**",
                "-     * @deprecated Since 2.9 use {link {@link #findContextualConvertingSerializer} instead",
                "-     */",
                "-    @Deprecated",
                "-    protected JsonSerializer<?> findConvertingContentSerializer(SerializerProvider provider,",
                "-            BeanProperty prop, JsonSerializer<?> existingSerializer)",
                "+    private JsonSerializer<?> _findConvertingContentSerializer(SerializerProvider provider,",
                "+            AnnotationIntrospector intr, BeanProperty prop, JsonSerializer<?> existingSerializer)",
                "         throws JsonMappingException",
                "     {",
                "-        final AnnotationIntrospector intr = provider.getAnnotationIntrospector();",
                "-        if (_neitherNull(intr, prop)) {",
                "-            AnnotatedMember m = prop.getMember();",
                "-            if (m != null) {",
                "-                Object convDef = intr.findSerializationContentConverter(provider.getConfig(), m);",
                "-                if (convDef != null) {",
                "-                    Converter<Object,Object> conv = provider.converterInstance(prop.getMember(), convDef);",
                "-                    JavaType delegateType = conv.getOutputType(provider.getTypeFactory());",
                "-                    // [databind#731]: Should skip if nominally java.lang.Object",
                "-                    if ((existingSerializer == null) && !delegateType.isJavaLangObject()) {",
                "-                        existingSerializer = provider.findValueSerializer(delegateType);",
                "-                    }",
                "-                    return new StdDelegatingSerializer(conv, delegateType, existingSerializer);",
                "+        AnnotatedMember m = prop.getMember();",
                "+        if (m != null) {",
                "+            Object convDef = intr.findSerializationContentConverter(provider.getConfig(), m);",
                "+            if (convDef != null) {",
                "+                Converter<Object,Object> conv = provider.converterInstance(prop.getMember(), convDef);",
                "+                JavaType delegateType = conv.getOutputType(provider.getTypeFactory());",
                "+                // [databind#731]: Should skip if nominally java.lang.Object",
                "+                if ((existingSerializer == null) && !delegateType.isJavaLangObject()) {",
                "+                    existingSerializer = provider.findValueSerializer(delegateType);",
                "                 }",
                "+                return new StdDelegatingSerializer(conv, delegateType, existingSerializer, prop);",
                "             }"
            ],
            "changed_files": [
                "src/main/java/com/fasterxml/jackson/databind/JsonSerializer.java",
                "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
                "src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
                "src/main/java/com/fasterxml/jackson/databind/ser/Serializers.java",
                "src/main/java/com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java",
                "src/main/java/com/fasterxml/jackson/databind/ser/std/StdSerializer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/main/java/com/fasterxml/jackson/databind/JsonSerializer.java, src/main/java/com/fasterxml/jackson/databind/ser/Serializers.java, src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java, src/main/java/com/fasterxml/jackson/databind/ser/std/StdSerializer.java, src/main/java/com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java, src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: fasterxml",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "ee96ce00cea553ce17d06a7aae7894f4f6bf7aea",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526590072,
            "hunks": 19,
            "message": "Merge branch '2.9'",
            "diff": [
                "diff --cc src/main/java/com/fasterxml/jackson/databind/MapperFeature.java",
                "index e5a17629c,81884adea..5e0653329",
                "--- a/src/main/java/com/fasterxml/jackson/databind/MapperFeature.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/MapperFeature.java",
                "@@@ -190,14 -288,16 +190,28 @@@ public enum MapperFeature implements Co",
                " +    /**",
                " +     * Feature that enables inferring builder type bindings from the value type",
                " +     * being deserialized. This requires that the generic type declaration on",
                " +     * the value type match that on the builder exactly.",
                " +     *<p>",
                " +     * Feature is disabled by default which means that deserialization does",
                " +     * not support deserializing types via builders with type parameters.",
                " +     *<p>",
                " +     * See: https://github.com/FasterXML/jackson-databind/issues/921",
                " +     */",
                " +    INFER_BUILDER_TYPE_BINDINGS(false),",
                " +",
                "+     /**",
                "+      * Feature that specifies whether the declared base type of a polymorphic value",
                "+      * is to be used as the \"default\" implementation, if no explicit default class",
                "+      * is specified via {@code @JsonTypeInfo.defaultImpl} annotation.",
                "+      *<p>",
                "+      * Note that feature only has effect on deserialization of regular polymorphic properties:",
                "+      * it does NOT affect non-polymorphic cases, and is unlikely to work with Default Typing.",
                "+      *<p>",
                "+      * Feature is disabled by default for backwards compatibility.",
                "+      *",
                "+      * @since 2.9.6",
                "+      */",
                "+     USE_BASE_TYPE_AS_DEFAULT_IMPL(false),",
                "+ ",
                "      /*",
                "diff --cc src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
                "index 3f61b4653,adfb09b49..a3c984dc5",
                "--- a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
                "@@@ -5,3 -5,6 +5,4 @@@ import java.lang.reflect.Type",
                "  import java.net.URL;",
                " -import java.security.AccessController;",
                " -import java.security.PrivilegedAction;",
                "  import java.text.DateFormat;",
                " -import java.util.*;",
                "++import java.util.Collection;",
                "  import java.util.concurrent.ConcurrentHashMap;",
                "@@@ -521,7 -1929,6 +522,6 @@@ public class ObjectMappe",
                "- ",
                "      /*",
                " -    /**********************************************************",
                " -    /* Configuration, simple features: MapperFeature",
                " -    /**********************************************************",
                " +    /**********************************************************************",
                " +    /* Configuration, accessing features",
                " +    /**********************************************************************",
                "       */",
                "@@@ -564,7 -1989,34 +564,23 @@@",
                " -    /**",
                " -     * Method for changing state of an on/off serialization feature for",
                " -     * this object mapper.",
                " -     */",
                " -    public ObjectMapper configure(SerializationFeature f, boolean state) {",
                " -        _serializationConfig = state ?",
                " -                _serializationConfig.with(f) : _serializationConfig.without(f);",
                " -        return this;",
                " -    }",
                " -",
                " -    /**",
                " -     * Method for enabling specified {@link DeserializationConfig} feature.",
                " -     * Modifies and returns this instance; no new object is created.",
                "++    /*",
                "++    /**********************************************************************",
                "++    /* Configuration, accessing module information",
                "++    /**********************************************************************",
                "+      */",
                " -    public ObjectMapper enable(SerializationFeature f) {",
                " -        _serializationConfig = _serializationConfig.with(f);",
                " -        return this;",
                " -    }",
                "+ ",
                "+     /**",
                " -     * Method for enabling specified {@link DeserializationConfig} features.",
                " -     * Modifies and returns this instance; no new object is created.",
                "++     * Method that may be used to find out {@link Module}s that were registered",
                "++     * when creating this mapper (if any).",
                "++     *",
                "++     * @since 3.0",
                "+      */",
                " -    public ObjectMapper enable(SerializationFeature first,",
                " -            SerializationFeature... f) {",
                " -        _serializationConfig = _serializationConfig.with(first, f);",
                " -        return this;",
                "++    public Collection<com.fasterxml.jackson.databind.Module> getRegisteredModules() {",
                "++        return _savedBuilderState.modules();",
                "+     }",
                "+     ",
                " -    /**",
                " -     * Method for enabling specified {@link DeserializationConfig} features.",
                " -     * Modifies and returns this instance; no new object is created.",
                " +    /*",
                " +    /**********************************************************************",
                " +    /* Public API: constructing Parsers that are properly linked",
                " +    /* to `ObjectReadContext`",
                " +    /**********************************************************************",
                "       */",
                "diff --cc src/main/java/com/fasterxml/jackson/databind/cfg/MapperBuilderState.java",
                "index c306226d9,000000000..a7e92153f",
                "mode 100644,000000..100644",
                "--- a/src/main/java/com/fasterxml/jackson/databind/cfg/MapperBuilderState.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/cfg/MapperBuilderState.java",
                "@@@ -1,181 -1,0 +1,196 @@@",
                " +package com.fasterxml.jackson.databind.cfg;",
                " +",
                "++import java.util.Arrays;",
                " +import java.util.Collection;",
                "++import java.util.Collections;",
                " +",
                " +import com.fasterxml.jackson.core.PrettyPrinter;",
                " +import com.fasterxml.jackson.core.TokenStreamFactory;",
                " +import com.fasterxml.jackson.core.util.Snapshottable;",
                " +",
                " +import com.fasterxml.jackson.databind.*;",
                " +import com.fasterxml.jackson.databind.deser.DeserializationProblemHandler;",
                " +import com.fasterxml.jackson.databind.deser.DeserializerFactory;",
                " +import com.fasterxml.jackson.databind.introspect.ClassIntrospector;",
                " +import com.fasterxml.jackson.databind.introspect.MixInHandler;",
                " +import com.fasterxml.jackson.databind.jsontype.SubtypeResolver;",
                " +import com.fasterxml.jackson.databind.jsontype.TypeResolverProvider;",
                " +import com.fasterxml.jackson.databind.ser.FilterProvider;",
                " +import com.fasterxml.jackson.databind.ser.SerializerFactory;",
                " +import com.fasterxml.jackson.databind.type.TypeFactory;",
                " +import com.fasterxml.jackson.databind.util.LinkedNode;",
                " +",
                " +/**",
                " + * Interface for State object used for preserving initial state of a",
                " + * {@link MapperBuilder} before modules are configured and resulting",
                " + * {@link com.fasterxml.jackson.databind.ObjectMapper} isn't constructed.",
                " + * It is passed to mapper to allow \"re-building\" via newly created builder.",
                " + *<p>",
                " + * Note that JDK serialization is supported by switching this object in place",
                " + * of mapper. This requires some acrobatics on return direction.",
                " + */",
                " +public abstract class MapperBuilderState",
                " +    implements java.io.Serializable // important!",
                " +{",
                " +    private static final long serialVersionUID = 3L;",
                " +",
                " +    /*",
                " +    /**********************************************************************",
                " +    /* Basic settings",
                " +    /**********************************************************************",
                " +     */",
                " +",
                " +    protected final BaseSettings _baseSettings;",
                " +    protected final TokenStreamFactory _streamFactory;",
                " +    protected final ConfigOverrides _configOverrides;",
                " +",
                " +    /*",
                " +    /**********************************************************************",
                " +    /* Feature flags",
                " +    /**********************************************************************",
                " +     */",
                " +",
                " +    protected final int _mapperFeatures, _serFeatures, _deserFeatures;",
                " +    protected final int _parserFeatures, _generatorFeatures;",
                " +    protected final int _formatParserFeatures, _formatGeneratorFeatures;",
                " +",
                " +    /*",
                " +    /**********************************************************************",
                " +    /* Modules",
                " +    /**********************************************************************",
                " +     */",
                " +",
                " +    /**",
                " +     * Modules registered in registration order, if any; `null` if none.",
                " +     */",
                " +    protected final com.fasterxml.jackson.databind.Module[] _modules;",
                " +",
                " +    /*",
                " +    /**********************************************************************",
                " +    /* Handlers, introspection",
                " +    /**********************************************************************",
                " +     */",
                " +",
                " +    protected final TypeFactory _typeFactory;",
                " +    protected final ClassIntrospector _classIntrospector;",
                " +    protected final TypeResolverProvider _typeResolverProvider;",
                " +    protected final SubtypeResolver _subtypeResolver;",
                " +    protected final MixInHandler _mixInHandler;",
                " +",
                " +    /*",
                " +    /**********************************************************************",
                " +    /* Factories for serialization",
                " +    /**********************************************************************",
                " +     */",
                " +",
                " +    protected final SerializationContexts _serializationContexts;",
                " +    protected final SerializerFactory _serializerFactory;",
                " +    protected final FilterProvider _filterProvider;",
                " +    protected final PrettyPrinter _defaultPrettyPrinter;",
                " +",
                " +    /*",
                " +    /**********************************************************************",
                " +    /* Factories for deserialization",
                " +    /**********************************************************************",
                " +     */",
                " +",
                " +    protected final DeserializationContexts _deserializationContexts;",
                " +    protected final DeserializerFactory _deserializerFactory;",
                " +    protected final InjectableValues _injectableValues;",
                " +",
                " +    /**",
                " +     * Optional handlers that application may register to try to work-around",
                " +     * various problem situations during deserialization",
                " +     */",
                " +    protected final LinkedNode<DeserializationProblemHandler> _problemHandlers;",
                " +",
                " +    protected final AbstractTypeResolver[] _abstractTypeResolvers;",
                " +",
                " +    /*",
                " +    /**********************************************************************",
                " +    /* Construction",
                " +    /**********************************************************************",
                " +     */",
                " +",
                " +    /**",
                " +     * Constructor called when \"saving\" state of mapper, to be used as base for",
                " +     * {@link ObjectMapper#rebuild()} functionality.",
                " +     */",
                " +    public MapperBuilderState(MapperBuilder<?,?> src)",
                " +    {",
                " +        // Basic settings",
                " +        _baseSettings = src._baseSettings; // immutable",
                " +        _streamFactory = src._streamFactory; // immutable",
                " +        _configOverrides = Snapshottable.takeSnapshot(src._configOverrides);",
                " +",
                " +        // Feature flags (simple ints, no copy needed)",
                " +        _mapperFeatures = src._mapperFeatures;",
                " +        _serFeatures = src._serFeatures;",
                " +        _deserFeatures = src._deserFeatures;",
                " +        _parserFeatures = src._parserFeatures;",
                " +        _generatorFeatures = src._generatorFeatures;",
                " +        _formatParserFeatures = src._formatParserFeatures;",
                " +        _formatGeneratorFeatures = src._formatGeneratorFeatures;",
                " +",
                " +        // Handlers, introspection",
                " +        _typeFactory = Snapshottable.takeSnapshot(src._typeFactory);",
                " +        _classIntrospector = src._classIntrospector; // no snapshot needed (uses `forMapper()`)",
                " +        _typeResolverProvider = src._typeResolverProvider;",
                " +        _subtypeResolver = Snapshottable.takeSnapshot(src._subtypeResolver);",
                " +        _mixInHandler = (MixInHandler) Snapshottable.takeSnapshot(src._mixInHandler);",
                " +",
                " +        // Factories for serialization",
                " +        _serializerFactory = src._serializerFactory;",
                " +        _serializationContexts = src._serializationContexts; // no snapshot needed (uses `forMapper()`)",
                " +        _filterProvider = Snapshottable.takeSnapshot(src._filterProvider);",
                " +        _defaultPrettyPrinter = src._defaultPrettyPrinter;",
                " +",
                " +        // Factories for deserialization",
                " +        _deserializerFactory = src._deserializerFactory;",
                " +        _deserializationContexts = src._deserializationContexts;",
                " +        _injectableValues = Snapshottable.takeSnapshot(src._injectableValues);",
                " +        // assume our usage of LinkedNode-based list is immutable here (should be)",
                " +        _problemHandlers = src._problemHandlers;",
                " +        _abstractTypeResolvers = src._abstractTypeResolvers;",
                " +",
                " +        // Modules",
                " +        if (src._modules == null) {",
                " +            _modules = null;",
                " +        } else {",
                " +            _modules = _toArray(src._modules.values());",
                " +        }",
                " +    }",
                " +",
                " +    private static com.fasterxml.jackson.databind.Module[] _toArray(Collection<?> coll)",
                " +    {",
                " +        if (coll == null || coll.isEmpty()) {",
                " +            return null;",
                " +        }",
                " +        return coll.toArray(new com.fasterxml.jackson.databind.Module[coll.size()]);",
                " +    }",
                " +",
                "++    /*",
                "++    /**********************************************************************",
                "++    /* Configuration access by ObjectMapper",
                "++    /**********************************************************************",
                "++     */",
                "++",
                "++    public Collection<com.fasterxml.jackson.databind.Module> modules() {",
                "++        if (_modules == null) {",
                "++            return Collections.emptyList();",
                "++        }",
                "++        return Collections.unmodifiableList(Arrays.asList(_modules));",
                "++    }",
                "++",
                " +    /*",
                " +    /**********************************************************************",
                " +    /* JDK deserialization support",
                " +    /**********************************************************************",
                " +     */",
                " +",
                " +    /**",
                " +     * Method required to support JDK deserialization; made `abstract` here to ensure",
                " +     * sub-classes must implement it.",
                " +     */",
                " +    protected abstract Object readResolve();",
                " +}",
                "diff --cc src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java",
                "index e0edf03c3,98e9f90e6..f7f10fc46",
                "--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java",
                "@@@ -146,3 -121,4 +146,3 @@@ public class StdTypeResolverBuilde",
                "          TypeIdResolver idRes = idResolver(config, baseType, subtypes, false, true);",
                "-         JavaType defaultImpl;",
                " -",
                "+         JavaType defaultImpl = defineDefaultImpl(config, baseType);",
                "diff --cc src/test/java/com/fasterxml/jackson/databind/jsontype/TestBaseTypeAsDefault.java",
                "index 000000000,407d1e4bf..615932644",
                "mode 000000,100644..100644",
                "--- a/src/test/java/com/fasterxml/jackson/databind/jsontype/TestBaseTypeAsDefault.java",
                "+++ b/src/test/java/com/fasterxml/jackson/databind/jsontype/TestBaseTypeAsDefault.java",
                "@@@ -1,0 -1,91 +1,93 @@@",
                "+ package com.fasterxml.jackson.databind.jsontype;",
                "+ ",
                "+ import com.fasterxml.jackson.annotation.JsonTypeInfo;",
                "+ ",
                "+ import com.fasterxml.jackson.databind.BaseMapTest;",
                "+ import com.fasterxml.jackson.databind.JsonMappingException;",
                "+ import com.fasterxml.jackson.databind.MapperFeature;",
                "+ import com.fasterxml.jackson.databind.ObjectMapper;",
                "+ ",
                "+ import java.io.IOException;",
                "+ ",
                "+ public class TestBaseTypeAsDefault extends BaseMapTest",
                "+ {",
                "+     @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, property = \"@class\")",
                "+     static class Parent {",
                "+     }",
                "+ ",
                "+ ",
                "+     static class Child extends Parent {",
                "+     }",
                "+ ",
                "+ ",
                "+     @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, property = \"@class\", defaultImpl = ChildOfChild.class)",
                "+     static abstract class AbstractParentWithDefault {",
                "+     }",
                "+ ",
                "+ ",
                "+     static class ChildOfAbstract extends AbstractParentWithDefault {",
                "+     }",
                "+ ",
                "+     static class ChildOfChild extends ChildOfAbstract {",
                "+     }",
                "+ ",
                "+     /*",
                "+     /**********************************************************",
                "+     /* Test methods",
                "+     /**********************************************************",
                "+      */",
                "+ ",
                " -    protected ObjectMapper MAPPER_WITH_BASE = new ObjectMapper()",
                " -                .enable(MapperFeature.USE_BASE_TYPE_AS_DEFAULT_IMPL);",
                "++    protected ObjectMapper MAPPER_WITH_BASE =  objectMapperBuilder()",
                "++                .enable(MapperFeature.USE_BASE_TYPE_AS_DEFAULT_IMPL)",
                "++                .build();",
                "+ ",
                " -    protected ObjectMapper MAPPER_WITHOUT_BASE = new ObjectMapper()",
                " -            .disable(MapperFeature.USE_BASE_TYPE_AS_DEFAULT_IMPL);",
                "++    protected ObjectMapper MAPPER_WITHOUT_BASE = objectMapperBuilder()",
                "++            .disable(MapperFeature.USE_BASE_TYPE_AS_DEFAULT_IMPL)",
                "++            .build();",
                "+     ",
                "+     public void testPositiveForParent() throws IOException {",
                "+         Object o = MAPPER_WITH_BASE.readerFor(Parent.class).readValue(\"{}\");",
                "+         assertEquals(o.getClass(), Parent.class);",
                "+     }",
                "+ ",
                "+     public void testPositiveForChild() throws IOException {",
                "+         Object o = MAPPER_WITH_BASE.readerFor(Child.class).readValue(\"{}\");",
                "+         assertEquals(o.getClass(), Child.class);",
                "+     }",
                "+ ",
                "+     public void testNegativeForParent() throws IOException {",
                "+         try {",
                "+             /*Object o =*/ MAPPER_WITHOUT_BASE.readerFor(Parent.class).readValue(\"{}\");",
                "+             fail(\"Should not pass\");",
                "+         } catch (JsonMappingException ex) {",
                "+             assertTrue(ex.getMessage().contains(\"missing type id property '@class'\"));",
                "+         }",
                "+     }",
                "+ ",
                "+     public void testNegativeForChild() throws IOException {",
                "+         try {",
                "+             /*Object o =*/ MAPPER_WITHOUT_BASE.readerFor(Child.class).readValue(\"{}\");",
                "+             fail(\"Should not pass\");",
                "+         } catch (JsonMappingException ex) {",
                "+             assertTrue(ex.getMessage().contains(\"missing type id property '@class'\"));",
                "+         }",
                "+     }",
                "+ ",
                "+     public void testConversionForAbstractWithDefault() throws IOException {",
                "+         // should pass shouldn't it?",
                "+         Object o = MAPPER_WITH_BASE.readerFor(AbstractParentWithDefault.class).readValue(\"{}\");",
                "+         assertEquals(o.getClass(), ChildOfChild.class);",
                "+     }",
                "+ ",
                "+     public void testPositiveWithTypeSpecification() throws IOException {",
                "+         Object o = MAPPER_WITH_BASE.readerFor(Parent.class)",
                "+                 .readValue(\"{\\\"@class\\\":\\\"\"+Child.class.getName()+\"\\\"}\");",
                "+         assertEquals(o.getClass(), Child.class);",
                "+     }",
                "+ ",
                "+     public void testPositiveWithManualDefault() throws IOException {",
                "+         Object o = MAPPER_WITH_BASE.readerFor(ChildOfAbstract.class).readValue(\"{}\");",
                "+ ",
                "+         assertEquals(o.getClass(), ChildOfChild.class);",
                "+     }",
                "+ }",
                "diff --cc src/test/java/com/fasterxml/jackson/databind/module/SimpleModuleTest.java",
                "index 66f333279,40a189e69..0ca36de26",
                "--- a/src/test/java/com/fasterxml/jackson/databind/module/SimpleModuleTest.java",
                "+++ b/src/test/java/com/fasterxml/jackson/databind/module/SimpleModuleTest.java",
                "@@@ -137,2 -148,32 +137,13 @@@ public class SimpleModuleTest extends B",
                "+     /**",
                "+      * Test module that is different from MySimpleModule. Used to test registration",
                "+      * of multiple modules.",
                "+      */",
                "+     protected static class AnotherSimpleModule extends SimpleModule",
                "+     {",
                "+         public AnotherSimpleModule(String name, Version version) {",
                "+             super(name, version);",
                "+         }",
                "+     }",
                "+ ",
                " -    protected static class ContextVerifierModule extends com.fasterxml.jackson.databind.Module",
                " -    {",
                " -        @Override",
                " -        public String getModuleName() { return \"x\"; }",
                " -",
                " -        @Override",
                " -        public Version version() { return Version.unknownVersion(); }",
                " -",
                " -        @Override",
                " -        public void setupModule(SetupContext context)",
                " -        {",
                " -            ObjectCodec c = context.getOwner();",
                " -            assertNotNull(c);",
                " -            assertTrue(c instanceof ObjectMapper);",
                " -            ObjectMapper m = context.getOwner();",
                " -            assertNotNull(m);",
                " -        }",
                " -    }",
                " -",
                "      static class TestModule626 extends SimpleModule {",
                "@@@ -286,2 -315,17 +297,19 @@@",
                "+     public void testGetRegisteredModules()",
                "+     {",
                "+         MySimpleModule mod1 = new MySimpleModule(\"test1\", Version.unknownVersion());",
                "+         AnotherSimpleModule mod2 = new AnotherSimpleModule(\"test2\", Version.unknownVersion());",
                "+ ",
                " -        ObjectMapper mapper = new ObjectMapper();",
                " -        mapper.registerModule(mod1);",
                " -        mapper.registerModule(mod2);",
                "++        ObjectMapper mapper = objectMapperBuilder()",
                "++                .addModule(mod1)",
                "++                .addModule(mod2)",
                "++                .build();",
                "+ ",
                " -        Set<Object> registeredModuleIds = mapper.getRegisteredModuleIds();",
                " -        assertEquals(2, registeredModuleIds.size());",
                " -        assertTrue(registeredModuleIds.contains(mod1.getTypeId()));",
                " -        assertTrue(registeredModuleIds.contains(mod2.getTypeId()));",
                "++        List<com.fasterxml.jackson.databind.Module> mods = new ArrayList<>(mapper.getRegisteredModules());",
                "++        assertEquals(2, mods.size());",
                "++        // Should retain ordering even if not mandated",
                "++        assertEquals(\"test1\", mods.get(0).getModuleName());",
                "++        assertEquals(\"test2\", mods.get(1).getModuleName());",
                "+     }",
                "+ ",
                "      /*"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: FasterXML",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "aa578ee68c89e105b628c65b7bf48aa9971a0983",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525405577,
            "hunks": 0,
            "message": "Merge branch 'master' of github.com:FasterXML/jackson-databind",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: fasterxml",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "ea28d497fba24366b0a858f60d6d46ce65745860",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526490821,
            "hunks": 1,
            "message": "Fix #2038 (or rather add a test; real fix in `jackson-core`)",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 3a65f201b..4c9a17345 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -7,3 +7,3 @@",
                "     <artifactId>jackson-base</artifactId>",
                "-    <version>2.9.5</version>",
                "+    <version>2.9.6-SNAPSHOT</version>",
                "   </parent>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "2038": "Failing to link ObjectCodec with JsonFactory copy constructor FasterXML/jackson-core#460 JsonParser#getCodec() is null in a custom JsonDeserializer #4461"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 2038",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f6dfe1f73803f4ccb8d8065c8a4e0378f5e09255",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525387577,
            "hunks": 1,
            "message": "update assertj-core version to 3.9.1 (#2017) http://joel-costigliola.github.io/assertj/assertj-news.html",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 049d8315b..c8d21ee60 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -82,3 +82,3 @@",
                "       <artifactId>assertj-core</artifactId>",
                "-      <version>3.8.0</version>",
                "+      <version>3.9.1</version>",
                "       <scope>test</scope>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "2017": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 2017",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "eea460bedb90196486435afdaa8253e180403bc8",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525549382,
            "hunks": 1,
            "message": "Fix #2015 (or, rather, add test to verify, likely fixed with #2023)",
            "diff": [
                "diff --git a/release-notes/VERSION-2.x b/release-notes/VERSION-2.x",
                "index 29ceb9d47..1f56feeea 100644",
                "--- a/release-notes/VERSION-2.x",
                "+++ b/release-notes/VERSION-2.x",
                "@@ -23,2 +23,5 @@ Project: jackson-databind",
                "  (reported, fix contributed by Jakub S)",
                "+#2015: `@Jsonsetter with Nulls.SKIP` collides with",
                "+  `DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL` when parsing enum",
                "+ (reported by ndori@github)",
                " #2016: Delegating JsonCreator disregards JsonDeserialize info"
            ],
            "changed_files": [
                "release-notes/VERSION-2.x"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "2015": "",
                "2023": "@Jsonsetter with Nulls.SKIP collides with DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL when parsing enum #2015"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 2015, 2023",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "324b2d7a5b92892a6279af04f90afaad7f5a5330",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526490958,
            "hunks": 2,
            "message": "update release notes",
            "diff": [
                "diff --git a/release-notes/CREDITS-2.x b/release-notes/CREDITS-2.x",
                "index 76a1ba146..45c571ce0 100644",
                "--- a/release-notes/CREDITS-2.x",
                "+++ b/release-notes/CREDITS-2.x",
                "@@ -794 +794,7 @@ Reinhard Prechtl (dnno@github)",
                "    (2.9.6)",
                "+",
                "+Chetan Narsude (243826@github)",
                "+  * Reported #2038: JDK Serializing and using Deserialized `ObjectMapper` loses linkage",
                "+    back from `JsonParser.getCodec()`",
                "+  (2.9.6)",
                "+  ",
                "diff --git a/release-notes/VERSION-2.x b/release-notes/VERSION-2.x",
                "index 5631a8e95..42b6db1a8 100644",
                "--- a/release-notes/VERSION-2.x",
                "+++ b/release-notes/VERSION-2.x",
                "@@ -39,2 +39,5 @@ Project: jackson-databind",
                "  (reported by Reinhard P)",
                "+#2038: JDK Serializing and using Deserialized `ObjectMapper` loses linkage",
                "+  back from `JsonParser.getCodec()`",
                "+ (reported by Chetan N)"
            ],
            "changed_files": [
                "release-notes/CREDITS-2.x",
                "release-notes/VERSION-2.x"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "63d790a6b792cfd708fd1a5dfee2f4ce07177e2f",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525405570,
            "hunks": 39,
            "message": "Merge branch '2.9'",
            "diff": [
                "diff --cc src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
                "index 741ab7881,3cf861c64..9474dcd6a",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
                "@@@ -218,10 -272,11 +218,2 @@@ public abstract class BasicDeserializer",
                "          }",
                "--",
                "--        // Sanity check: does the chosen ValueInstantiator have incomplete creators?",
                "--        if (instantiator.getIncompleteParameter() != null) {",
                "--            final AnnotatedParameter nonAnnotatedParam = instantiator.getIncompleteParameter();",
                "--            final AnnotatedWithParams ctor = nonAnnotatedParam.getOwner();",
                "-             throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()+\" of constructor \"+ctor+\" has no property name annotation; must have name when multiple-parameter constructor annotated as Creator\");",
                " -            throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()",
                " -                +\" of constructor \"+ctor+\" has no property name annotation; must have name when multiple-parameter constructor annotated as Creator\");",
                "--        }",
                "--",
                "          return instantiator;",
                "diff --cc src/main/java/com/fasterxml/jackson/databind/deser/ValueInstantiator.java",
                "index ebc8adf04,a7a695168..78bc234d7",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/ValueInstantiator.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/ValueInstantiator.java",
                "@@@ -6,3 -6,3 +6,2 @@@ import com.fasterxml.jackson.databind.*",
                "  import com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer;",
                "--import com.fasterxml.jackson.databind.introspect.AnnotatedParameter;",
                "  import com.fasterxml.jackson.databind.introspect.AnnotatedWithParams;",
                "@@@ -33,5 -33,5 +32,5 @@@ public abstract class ValueInstantiato",
                "      /*",
                " -    /**********************************************************",
                " -    /* Metadata accessors",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                " +    /* Introspection",
                "-     /**********************************************************",
                "++    /**********************************************************************",
                "       */",
                "@@@ -45,8 -51,2 +44,8 @@@",
                "      }",
                " +    ",
                " +    /*",
                "-     /**********************************************************",
                "++    /**********************************************************************",
                " +    /* Metadata accessors",
                "-     /**********************************************************",
                "++    /**********************************************************************",
                " +     */",
                "@@@ -124,4 -125,4 +123,2 @@@",
                "       * is available for this instantiator",
                "--     *",
                "--     * @since 2.7",
                "       */",
                "@@@ -169,5 -172,5 +166,5 @@@",
                "      /*",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "      /* Instantiation methods for JSON Object",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "       */",
                "@@@ -245,6 -250,6 +242,5 @@@",
                "      /*",
                "--    /**********************************************************",
                "--    /* Instantiation methods for JSON scalar types",
                "--    /* (String, Number, Boolean)",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "++    /* Instantiation methods for JSON scalar types (String, Number, Boolean)",
                "++    /**********************************************************************",
                "       */",
                "@@@ -280,5 -285,5 +276,5 @@@",
                "      /*",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "      /* Accessors for underlying creator objects (optional)",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "       */",
                "@@@ -328,12 -333,12 +324,6 @@@",
                "--    /**",
                "--     * If an incomplete creator was found, this is the first parameter that",
                "--     * needs further annotation to help make the creator complete.",
                "--     */",
                "--    public AnnotatedParameter getIncompleteParameter() { return null; }",
                "--",
                "      /*",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "      /* Helper methods",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "       */",
                "@@@ -368,5 -376,5 +358,5 @@@",
                "      /*",
                " -    /**********************************************************",
                " -    /* Introspection",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                " +    /* Std method overrides for testing",
                "-     /**********************************************************",
                "++    /**********************************************************************",
                "       */",
                "@@@ -387,5 -389,5 +377,5 @@@",
                "      /*",
                " -    /**********************************************************",
                " -    /* Standard Base implementation (since 2.8)",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                " +    /* Standard Base implementation",
                "-     /**********************************************************",
                "++    /**********************************************************************",
                "       */",
                "diff --cc src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java",
                "index 42de47b9c,3d112e489..c37c7000d",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java",
                "@@@ -8,4 -8,5 +8,3 @@@ import com.fasterxml.jackson.databind.a",
                "  import com.fasterxml.jackson.databind.deser.*;",
                "--import com.fasterxml.jackson.databind.introspect.AnnotatedParameter;",
                "  import com.fasterxml.jackson.databind.introspect.AnnotatedWithParams;",
                " -import com.fasterxml.jackson.databind.util.ClassUtil;",
                "@@@ -64,9 -68,9 +63,6 @@@ public class StdValueInstantiato",
                "--    // // // Incomplete creator",
                "--    protected AnnotatedParameter  _incompleteParameter;",
                "--    ",
                "      /*",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "      /* Life-cycle",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "       */",
                "@@@ -159,10 -167,10 +155,6 @@@",
                "--    public void configureIncompleteParameter(AnnotatedParameter parameter) {",
                "--        _incompleteParameter = parameter;",
                "--    }",
                "--    ",
                "      /*",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "      /* Public API implementation; metadata",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "       */",
                "@@@ -247,7 -255,7 +239,7 @@@",
                "      }",
                "--    ",
                "++",
                "      /*",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "      /* Public API implementation; instantiation from JSON Object",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "       */",
                "@@@ -305,5 -313,5 +297,5 @@@",
                "      /*",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "      /* Public API implementation; instantiation from JSON scalars",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "       */",
                "@@@ -396,5 -404,5 +388,5 @@@",
                "      /*",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "      /* Extended API: configuration mutators, accessors",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "       */",
                "@@@ -421,11 -429,11 +413,6 @@@",
                "--    @Override",
                "--    public AnnotatedParameter getIncompleteParameter() {",
                "--        return _incompleteParameter;",
                "--    }",
                "--",
                "      /*",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "      /* Internal methods",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "       */",
                "@@@ -471,5 -506,5 +458,5 @@@",
                "      /*",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "      /* Helper methods",
                "--    /**********************************************************",
                "++    /**********************************************************************",
                "       */"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "051bd5e447fbc9539e12a4fe90eb989dba0c656e",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526001967,
            "hunks": 3,
            "message": "Merge branch '2.7' into 2.8",
            "diff": [
                "diff --cc release-notes/CREDITS",
                "index fc773f1a8,092a4f0b9..cf0ad6952",
                "--- a/release-notes/CREDITS",
                "+++ b/release-notes/CREDITS",
                "@@@ -501,139 -498,1 +501,143 @@@ Kevin Hogeland (khogeland@github",
                "     (2.7.9)",
                " +",
                " +Artur Jonkisz (ajonkisz@github)",
                " +  * Reported #960: `@JsonCreator` not working on a factory with no arguments for ae enum type",
                " +   (2.8.0)",
                " +",
                " +Mikhail Kokho (mkokho@github)",
                " +  * Contributed impl for #990: Allow failing on `null` values for creator (add",
                " +  `DeserializationFeature.FAIL_ON_NULL_CREATOR_PROPERTIES`)",
                " +   (2.8.0)",
                " +",
                " +Aleksandr Oksenenko (oleksandr-oksenenko@github)",
                " +  * Reported #999: External property is not deserialized",
                " +   (2.8.0)",
                " +",
                " +Lokesh Kumar (LokeshN@github)",
                " +  * Contributed impl for #1082: Can not use static Creator factory methods for `Enum`s,",
                " +    with JsonCreator.Mode.PROPERTIES",
                " +   (2.8.0)",
                " +  * Reported #1217: `@JsonIgnoreProperties` on Pojo fields not working for deserialization",
                " +   (2.8.0)",
                " +",
                " +Ross Goldberg",
                " +  * Reported #1165, provided fix for: `CoreXMLDeserializers` does not handle",
                " +    time-only `XMLGregorianCalendar`s",
                " +   (2.8.0)",
                " +",
                " +Maarten Billemont (lhunath@github)",
                " +  * Suggested #1184: Allow overriding of `transient` with explicit inclusion with `@JsonProperty`",
                " +   (2.8.0)",
                " +",
                " +Vladimir Kulev (lightoze@github)",
                " +  * Reported #1028: Ignore USE_BIG_DECIMAL_FOR_FLOATS for NaN/Infinity",
                " +   (2.8.0)",
                " +",
                " +Ari Fogel (arifogel@github)",
                " +  * Reported #1261, contributed fix for: `@JsonIdentityInfo` deserialization fails with",
                " +    combination of forward references, `@JsonCreator`",
                " +   (2.8.0)",
                " +",
                " +Andriy Plokhotnyuk (plokhotnyuk@github)",
                " +  * Requested #1277: Add caching of resolved generic types for `TypeFactory`",
                " +   (2.8.0)",
                " +",
                " +Arek Gabiga (arekgabiga@github)",
                " +  * Reported #1297: Deserialization of generic type with Map.class",
                " +   (2.8.1)",
                " +",
                " +Chris Jester-Young (cky@github)",
                " +  * Contributed #1335: Unconditionally call `TypeIdResolver.getDescForKnownTypeIds`",
                " +   (2.8.2)",
                " +",
                " +Andrew Snare (asnare@github)",
                " +  * Reported #1315: Binding numeric values can BigDecimal lose precision",
                " +   (2.8.2)",
                " +",
                " +Gili Tzabari (cowwoc@github)",
                " +  * Reported #1351: `@JsonInclude(NON_DEFAULT)` doesn't omit null fields",
                " +   (2.8.3)",
                " +",
                " +Oleg Zhukov (OlegZhukov@github)",
                " +  * Reported #1384: `@JsonDeserialize(keyUsing = ...)` does not work correctly",
                " +   together with `DefaultTyping.NON_FINAL`",
                " +   (2.8.4)",
                " +",
                " +Pavel Popov (tolkonepiu@github)",
                " +  * Contributed fix #1389: Problem with handling of multi-argument creator with Enums",
                " +   (2.8.4)",
                " +",
                " +Josh Gruenberg (joshng@github)",
                " +  * Reported #1403: Reference-chain hints use incorrect class-name for inner classes",
                " +   (2.8.4)",
                " +",
                " +Kevin Donnelly (kpdonn@github)",
                " +  * Reported #1432: Off by 1 bug in PropertyValueBuffer",
                " +   (2.8.5)",
                " +",
                " +Nathanial Ofiesh (ofiesh@github)",
                " +  * Reported #1441: Failure with custom Enum key deserializer, polymorphic types",
                " +   (2.8.5)",
                " +",
                " +Fr\u00c3\u00a9d\u00c3\u00a9ric Camblor (fcamblor@github)",
                " +  * Reported #1451: Type parameter not passed by `ObjectWriter` if serializer pre-fetch disabled",
                " +   (2.8.6)",
                " +",
                " +Stephan Schroevers (Stephan202@github)",
                " +  * Reported #1505: @JsonEnumDefaultValue should take precedence over FAIL_ON_NUMBERS_FOR_ENUMS",
                " +   (2.8.7)",
                " +",
                " +Alex Panchenko (panchenko@github)",
                " +  * Reported #1543: JsonFormat.Shape.NUMBER_INT does not work when defined on enum type in 2.8",
                " +   (2.8.8)",
                " +",
                " +Joshua Jones",
                " +  * Reported #1573, contributed fix: Missing properties when deserializing using a builder class",
                " +   with a non-default constructor and a mutator annotated with `@JsonUnwrapped`",
                " +   (2.8.8)",
                " +",
                " +Ivo Studens (istudens@redhat.com)",
                " +  * Contributed #1585: Invoke ServiceLoader.load() inside of a privileged block",
                " +    when loading modules using `ObjectMapper.findModules()`",
                " +   (2.8.9)",
                " +",
                " +Javy Luo (AnywnYu@github)",
                " +  * Reported #1595: `JsonIgnoreProperties.allowSetters` is not working in Jackson 2.8",
                " +   (2.8.9)",
                " +",
                " +Marco Catania (catanm@github.com)",
                " +  * Contributed #1597: Escape JSONP breaking characters",
                " +   (2.8.9)",
                " +",
                " +Andrew Joseph (apjoseph@github)",
                " +  * Reported #1629 `FromStringDeserializer` ignores registered `DeserializationProblemHandler`",
                " +    for `java.util.UUID`",
                " +   (2.8.9)",
                " +",
                " +Joe Littlejohn (joelittlejohn@github)",
                " +  * Contributed #1642: Support `READ_UNKNOWN_ENUM_VALUES_AS_NULL` with `@JsonCreator`",
                " +   (2.8.9)",
                " +",
                " +Slobodan Pejic (slobo-showbie@github)",
                " +  * Reported #1647, contributed fix: Missing properties from base class when recursive",
                " +    types are involved",
                " +   (2.8.9)",
                " +",
                " +Bertrand Renuart (brenuart@github)",
                " +  * Reported #1648: `DateTimeSerializerBase` ignores configured date format when creating contextual",
                " +   (2.8.9)",
                " +  * Reported #1651: `StdDateFormat` fails to parse 'zulu' date when TimeZone other than UTC",
                " +   (2.8.9)",
                " +",
                " +Kevin Gallardo (newkek@github)",
                " +  * Reported #1658: Infinite recursion when deserializing a class extending a Map,",
                " +    with a recursive value type",
                " +   (2.8.10)",
                " +",
                "++Guixiong Wu (\u00e5\u0090\u00b4\u00e6\u00a1\u0082\u00e9\u009b\u0084)",
                "++  * Reported #2032: Blacklist another serialization gadget (ibatis)",
                "++   (2.8.11.2)",
                "++",
                " +Connor Kuhn (ckuhn@github)",
                " +  * Contributed #1341: FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY",
                " +   (2.9.0)",
                "diff --cc release-notes/VERSION",
                "index 1e024b6a8,49e4fd87a..b52019b41",
                "--- a/release-notes/VERSION",
                "+++ b/release-notes/VERSION",
                "@@@ -7,5 -8,3 +7,7 @@@ Project: jackson-databin",
                " +#1941: `TypeFactory.constructFromCanonical()` throws NPE for Unparameterized",
                " +  generic canonical strings",
                " + (reported by ayushgp@github)",
                "+ #2032: Blacklist another serialization gadget (ibatis)",
                "++ (reported by Guixiong Wu)",
                "diff --cc src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java",
                "index 3388cb580,cae5a9e97..ec530a581",
                "--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java",
                "@@@ -56,5 -56,4 +56,7 @@@ public class SubTypeValidato",
                "          s.add(\"com.sun.org.apache.bcel.internal.util.ClassLoader\");",
                " +        // [databind#1899]: more 3rd party",
                " +        s.add(\"org.hibernate.jmx.StatisticsService\");",
                " +        s.add(\"org.apache.ibatis.datasource.jndi.JndiDataSourceFactory\");",
                "+         // [databind#2032]: more 3rd party; data exfiltration via xml parsed ext entities",
                "+         s.add(\"org.apache.ibatis.parsing.XPathParser\");"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.8.11.2",
                "jackson-databind-2.8.11.3",
                "jackson-databind-2.8.11.4",
                "jackson-databind-2.8.11.5",
                "jackson-databind-2.8.11.6",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ba0df204de86ffea4ebdcb3362fcf05bee1105a3",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525833230,
            "hunks": 1,
            "message": "Update release notes",
            "diff": [
                "diff --git a/release-notes/VERSION-2.x b/release-notes/VERSION-2.x",
                "index 1f56feeea..d06d90ec6 100644",
                "--- a/release-notes/VERSION-2.x",
                "+++ b/release-notes/VERSION-2.x",
                "@@ -33,2 +33,4 @@ Project: jackson-databind",
                "   with `null` coercion with `@JsonSetter`",
                "+#2027: Concurrency error causes `IllegalStateException` on `BeanPropertyMap`",
                "+ (reported by franboragina@github)"
            ],
            "changed_files": [
                "release-notes/VERSION-2.x"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "9c6a56cc7fbf467ba6a55fe1051c20362bd97c38",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526491078,
            "hunks": 0,
            "message": "Merge branch '2.9'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "dda25f7e9110eca4c3a52310f5f1a4994c7b625e",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525466085,
            "hunks": 0,
            "message": "Merge branch '2.9'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "7bb3c441a42ee28fd872d2b03ab478e519a78074",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525475318,
            "hunks": 2,
            "message": "Merge branch '2.9'",
            "diff": [
                "diff --cc src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
                "index 8a952dbc2,978c4086b..525ba57e9",
                "--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java",
                "@@@ -239,4 -250,18 +243,18 @@@ public class CreatorCollecto",
                "          JavaType baseType = creator.getParameterType(ix);",
                "-         return config.getAnnotationIntrospector().refineDeserializationType(config,",
                "-                 creator.getParameter(ix), baseType);",
                "+         AnnotationIntrospector intr = config.getAnnotationIntrospector();",
                "+         if (intr != null) {",
                "+             AnnotatedParameter delegate = creator.getParameter(ix);",
                "+             ",
                "+             // First: custom deserializer(s):",
                " -            Object deserDef = intr.findDeserializer(delegate);",
                "++            Object deserDef = intr.findDeserializer(config, delegate);",
                "+             if (deserDef != null) {",
                "+                 JsonDeserializer<Object> deser = ctxt.deserializerInstance(delegate, deserDef);",
                "+                 baseType = baseType.withValueHandler(deser);",
                "+             } else {",
                "+                 // Second: type refinement(s), if no explicit deserializer was located",
                "+                 baseType = intr.refineDeserializationType(config,",
                "+                         delegate, baseType);",
                "+             }",
                "+         }",
                "+         return baseType;",
                "      }"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "61966e58e37658a2b7536137a11353a3645ccb61",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525412374,
            "hunks": 0,
            "message": "Merge branch '2.9'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "bd428a152c38a92449a39f13c7ce46e0766debdb",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526002138,
            "hunks": 0,
            "message": "Merge branch '2.9'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "2f627ddacb82b12821cb2245d7f543360ccb20e0",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525227886,
            "hunks": 3,
            "message": "Merge branch '2.9'",
            "diff": [
                "diff --cc src/test/java/com/fasterxml/jackson/databind/introspect/IgnoredFieldPresentInCreatorProperty2001Test.java",
                "index 1ee5ba5bc,a551c0ae0..ae9eb0bf5",
                "--- a/src/test/java/com/fasterxml/jackson/databind/introspect/IgnoredFieldPresentInCreatorProperty2001Test.java",
                "+++ b/src/test/java/com/fasterxml/jackson/databind/introspect/IgnoredFieldPresentInCreatorProperty2001Test.java",
                "@@@ -2,17 -2,11 +2,13 @@@ package com.fasterxml.jackson.databind.",
                "+ import java.beans.ConstructorProperties;",
                "+ ",
                " -import com.fasterxml.jackson.annotation.*;",
                " -",
                " +import com.fasterxml.jackson.annotation.JsonCreator;",
                " +import com.fasterxml.jackson.annotation.JsonIgnore;",
                " +import com.fasterxml.jackson.annotation.JsonProperty;",
                "  import com.fasterxml.jackson.databind.BaseMapTest;",
                "- import com.fasterxml.jackson.databind.ObjectMapper;",
                "- import org.junit.Test;",
                "- ",
                "- import java.beans.ConstructorProperties;",
                "- import java.io.IOException;",
                " -public class IgnoredFieldPresentInCreatorProperty2001Test extends BaseMapTest",
                " -{",
                " -   static public class Foo {",
                " +// Tests for [databind#2001]",
                " +public class IgnoredFieldPresentInCreatorProperty2001Test extends BaseMapTest {",
                "- ",
                " +    static public class Foo {",
                " +",
                "          @JsonIgnore"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "0b8f29eaa4d33e56185fe81cb55c5d9c2994e5bb",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525219966,
            "hunks": 1,
            "message": "Merge branch '2.9'",
            "diff": [
                "diff --cc src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java",
                "index ecc56b908,8867935fc..bba902bb8",
                "--- a/src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java",
                "+++ b/src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java",
                "@@@ -527,62 -699,3 +527,62 @@@ public final class DeserializationConfi",
                "      /*",
                " -    /**********************************************************",
                " +    /**********************************************************************",
                " +    /* Abstract type mapping",
                " +    /**********************************************************************",
                " +     */",
                " +",
                " +    /**",
                " +     * @since 3.0",
                " +     */",
                " +    public boolean hasAbstractTypeResolvers() { return _abstractTypeResolvers.length > 0; }",
                " +",
                " +    /**",
                " +     * @since 3.0",
                " +     */",
                " +    public Iterable<AbstractTypeResolver> abstractTypeResolvers() {",
                " +        return new ArrayIterator<AbstractTypeResolver>(_abstractTypeResolvers);",
                " +    }",
                " +",
                " +    /**",
                " +     * @since 3.0",
                " +     */",
                " +    public JavaType mapAbstractType(JavaType type)",
                " +    {",
                " +        if (!hasAbstractTypeResolvers()) {",
                " +            return type;",
                " +        }",
                " +        // first, general mappings",
                " +        while (true) {",
                " +            JavaType next = _mapAbstractType2(type);",
                " +            if (next == null) {",
                " +                return type;",
                " +            }",
                " +            // Should not have to worry about cycles; but better verify since they will invariably occur... :-)",
                " +            // (also: guard against invalid resolution to a non-related type)",
                " +            Class<?> prevCls = type.getRawClass();",
                " +            Class<?> nextCls = next.getRawClass();",
                " +            if ((prevCls == nextCls) || !prevCls.isAssignableFrom(nextCls)) {",
                " +                throw new IllegalArgumentException(\"Invalid abstract type resolution from \"+type+\" to \"+next+\": latter is not a subtype of former\");",
                " +            }",
                " +            type = next;",
                " +        }",
                " +    }",
                " +",
                " +    /**",
                " +     * Method that will find abstract type mapping for specified type, doing a single",
                " +     * lookup through registered abstract type resolvers; will not do recursive lookups.",
                " +     */",
                " +    private JavaType _mapAbstractType2(JavaType type)",
                " +    {",
                " +        Class<?> currClass = type.getRawClass();",
                " +        for (AbstractTypeResolver resolver : abstractTypeResolvers()) {",
                " +            JavaType concrete = resolver.findTypeMapping(this, type);",
                "-             if (ClassUtil.rawClass(concrete) != currClass) {",
                "++            if ((concrete != null) && !concrete.hasRawClass(currClass)) {",
                " +                return concrete;",
                " +            }",
                " +        }",
                " +        return null;",
                " +    }",
                " +",
                " +    /*",
                " +    /**********************************************************************",
                "      /* Other configuration"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "c14e122a142bf44d02deb34eec0254f3713f7e5f",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525405753,
            "hunks": 0,
            "message": "Merge branch '2.9'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "bfa972827800930ed170738cef383dc70ecd3ce7",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525219352,
            "hunks": 0,
            "message": "Merge branch '2.9'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "40b2f737aa8481a8cbb4b181c978d26a03753ff6",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525833376,
            "hunks": 0,
            "message": "Merge branch '2.9'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "85fef42385b2855a158583f33bbf58062996293f",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525236109,
            "hunks": 0,
            "message": "Merge branch '2.9'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "78e78738d69adcb59fdac9fc12d9053ce8809f3d",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526002122,
            "hunks": 1,
            "message": "Merge branch '2.8' into 2.9",
            "diff": [
                "diff --cc release-notes/VERSION-2.x",
                "index d06d90ec6,b52019b41..ec09fbd16",
                "--- a/release-notes/VERSION-2.x",
                "+++ b/release-notes/VERSION-2.x",
                "@@@ -6,33 -5,3 +6,35 @@@ Project: jackson-databin",
                " -2.8.11.2 (not yet released)",
                " +2.9.6 (not yet released)",
                " +",
                " +#1565: Deserialization failure with Polymorphism using JsonTypeInfo `defaultImpl`,",
                " +  subtype as target",
                " +#1964: Failed to specialize `Map` type during serialization where key type",
                " +  incompatibility overidden via \"raw\" types",
                " + (reported by ptirador@github)",
                " +#1990: MixIn `@JsonProperty` for `Object.hashCode()` is ignored",
                " + (reported by Freddy B)",
                " +#1998: Removing \"type\" attribute with Mixin not taken in account if",
                " +  using ObjectMapper.copy()",
                " + (reported by SBKila@github)",
                " +#1999: \"Duplicate property\" issue should mention which class it complains about",
                " + (reported by Ondrej Z)",
                " +#2001: Deserialization issue with `@JsonIgnore` and `@JsonCreator` + `@JsonProperty`",
                " +  for same property name",
                " + (reported, fix contributed by Jakub S)",
                " +#2015: `@Jsonsetter with Nulls.SKIP` collides with",
                " +  `DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL` when parsing enum",
                " + (reported by ndori@github)",
                " +#2016: Delegating JsonCreator disregards JsonDeserialize info",
                " + (reported by Carter K)",
                " +#2019: Abstract Type mapping in 2.9 fails when multiple modules are registered",
                " + (reported by asger82@github)",
                " +#2021: Delegating JsonCreator disregards `JsonDeserialize.using` annotation",
                " +#2023: `JsonFormat.Feature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT` not working",
                " +  with `null` coercion with `@JsonSetter`",
                " +#2027: Concurrency error causes `IllegalStateException` on `BeanPropertyMap`",
                " + (reported by franboragina@github)",
                "++#2032: Blacklist another serialization gadget (ibatis)",
                "++ (reported by Guixiong Wu)",
                " +",
                " +2.9.5 (26-Mar-2018)"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "jackson-databind-2.10.0",
                "jackson-databind-2.10.0.pr1",
                "jackson-databind-2.10.0.pr2",
                "jackson-databind-2.10.0.pr3",
                "jackson-databind-2.10.1",
                "jackson-databind-2.10.2",
                "jackson-databind-2.10.3",
                "jackson-databind-2.10.4",
                "jackson-databind-2.10.5",
                "jackson-databind-2.10.5.1",
                "jackson-databind-2.11.0",
                "jackson-databind-2.11.0.rc1",
                "jackson-databind-2.11.1",
                "jackson-databind-2.11.2",
                "jackson-databind-2.11.3",
                "jackson-databind-2.11.4",
                "jackson-databind-2.12.0",
                "jackson-databind-2.12.0-rc1",
                "jackson-databind-2.12.0-rc2",
                "jackson-databind-2.12.1",
                "jackson-databind-2.12.2",
                "jackson-databind-2.12.3",
                "jackson-databind-2.12.4",
                "jackson-databind-2.12.5",
                "jackson-databind-2.12.6",
                "jackson-databind-2.12.6.1",
                "jackson-databind-2.12.7",
                "jackson-databind-2.12.7.1",
                "jackson-databind-2.12.7.2",
                "jackson-databind-2.13.0",
                "jackson-databind-2.13.0-rc1",
                "jackson-databind-2.13.0-rc2",
                "jackson-databind-2.13.1",
                "jackson-databind-2.13.2",
                "jackson-databind-2.13.2.1",
                "jackson-databind-2.13.2.2",
                "jackson-databind-2.13.3",
                "jackson-databind-2.13.4",
                "jackson-databind-2.13.4.1",
                "jackson-databind-2.13.4.2",
                "jackson-databind-2.13.5",
                "jackson-databind-2.14.0",
                "jackson-databind-2.14.0-rc1",
                "jackson-databind-2.14.0-rc2",
                "jackson-databind-2.14.0-rc3",
                "jackson-databind-2.14.1",
                "jackson-databind-2.14.2",
                "jackson-databind-2.14.3",
                "jackson-databind-2.15.0",
                "jackson-databind-2.15.0-rc1",
                "jackson-databind-2.15.0-rc2",
                "jackson-databind-2.15.0-rc3",
                "jackson-databind-2.15.1",
                "jackson-databind-2.15.2",
                "jackson-databind-2.15.3",
                "jackson-databind-2.15.4",
                "jackson-databind-2.16.0",
                "jackson-databind-2.16.0-rc1",
                "jackson-databind-2.16.1",
                "jackson-databind-2.16.2",
                "jackson-databind-2.17.0",
                "jackson-databind-2.17.0-rc1",
                "jackson-databind-2.17.1",
                "jackson-databind-2.17.2",
                "jackson-databind-2.9.10",
                "jackson-databind-2.9.10.1",
                "jackson-databind-2.9.10.2",
                "jackson-databind-2.9.10.3",
                "jackson-databind-2.9.10.4",
                "jackson-databind-2.9.10.5",
                "jackson-databind-2.9.10.6",
                "jackson-databind-2.9.10.7",
                "jackson-databind-2.9.10.8",
                "jackson-databind-2.9.6",
                "jackson-databind-2.9.7",
                "jackson-databind-2.9.8",
                "jackson-databind-2.9.9",
                "jackson-databind-2.9.9.1",
                "jackson-databind-2.9.9.2",
                "jackson-databind-2.9.9.3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "022074aef3a2283c3b5b59d21e3aa14438351e39",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525231578,
            "hunks": 3,
            "message": "Merge branch '2.9'",
            "diff": [
                "diff --cc src/test/java/com/fasterxml/jackson/databind/deser/creators/TestCreators3.java",
                "index 000000000,ca1257ddf..7cd1e0fac",
                "mode 000000,100644..100644",
                "--- a/src/test/java/com/fasterxml/jackson/databind/deser/creators/TestCreators3.java",
                "+++ b/src/test/java/com/fasterxml/jackson/databind/deser/creators/TestCreators3.java",
                "@@@ -1,0 -1,209 +1,202 @@@",
                "+ package com.fasterxml.jackson.databind.deser.creators;",
                "+ ",
                "+ import java.util.List;",
                "+ import java.util.Map;",
                "+ ",
                "+ import com.fasterxml.jackson.annotation.*;",
                "+ ",
                "+ import com.fasterxml.jackson.databind.*;",
                "+ import com.fasterxml.jackson.databind.introspect.AnnotatedMember;",
                "+ import com.fasterxml.jackson.databind.introspect.AnnotatedParameter;",
                "+ import com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector;",
                "+ ",
                "+ // Misc Creator tests, part 3",
                "+ public class TestCreators3 extends BaseMapTest",
                "+ {",
                "+     static final class Foo {",
                "+ ",
                "+         @JsonProperty(\"foo\")",
                "+         protected Map<Integer, Bar> foo;",
                "+         @JsonProperty(\"anumber\")",
                "+         protected long anumber;",
                "+ ",
                "+         public Foo() {",
                "+             anumber = 0;",
                "+         }",
                "+ ",
                "+         public Map<Integer, Bar> getFoo() {",
                "+             return foo;",
                "+         }",
                "+ ",
                "+         public long getAnumber() {",
                "+             return anumber;",
                "+         }",
                "+     }",
                "+ ",
                "+     static final class Bar {",
                "+ ",
                "+         private final long p;",
                "+         private final List<String> stuff;",
                "+ ",
                "+         @JsonCreator",
                "+         public Bar(@JsonProperty(\"p\") long p, @JsonProperty(\"stuff\") List<String> stuff) {",
                "+             this.p = p;",
                "+             this.stuff = stuff;",
                "+         }",
                "+ ",
                "+         @JsonProperty(\"s\")",
                "+         public List<String> getStuff() {",
                "+             return stuff;",
                "+         }",
                "+ ",
                "+         @JsonProperty(\"stuff\")",
                "+         private List<String> getStuffDeprecated() {",
                "+             return stuff;",
                "+         }",
                "+ ",
                "+         public long getP() {",
                "+             return p;",
                "+         }",
                "+     }",
                "+ ",
                "+     // [databind#421]",
                "+ ",
                "+     static class MultiCtor",
                "+     {",
                "+         protected String _a, _b;",
                "+         ",
                "+         private MultiCtor() { }",
                "+         private MultiCtor(String a, String b, Boolean c) {",
                "+             if (c == null) {",
                "+                 throw new RuntimeException(\"Wrong factory!\");",
                "+             }",
                "+             _a = a;",
                "+             _b = b;",
                "+         }",
                "+ ",
                "+         @JsonCreator",
                "+         static MultiCtor factory(@JsonProperty(\"a\") String a, @JsonProperty(\"b\") String b) {",
                "+             return new MultiCtor(a, b, Boolean.TRUE);",
                "+         }",
                "+     }",
                "+ ",
                "+     @SuppressWarnings(\"serial\")",
                "+     static class MyParamIntrospector extends JacksonAnnotationIntrospector",
                "+     {",
                "+         @Override",
                "+         public String findImplicitPropertyName(AnnotatedMember param) {",
                "+             if (param instanceof AnnotatedParameter) {",
                "+                 AnnotatedParameter ap = (AnnotatedParameter) param;",
                "+                 switch (ap.getIndex()) {",
                "+                 case 0: return \"a\";",
                "+                 case 1: return \"b\";",
                "+                 case 2: return \"c\";",
                "+                 default:",
                "+                     return \"param\"+ap.getIndex();",
                "+                 }",
                "+             }",
                "+             return super.findImplicitPropertyName(param);",
                "+         }",
                "+     }",
                "+  ",
                "+     // [databind#1853]",
                "+     public static class Product {",
                "+         String name;",
                "+ ",
                "+         public Object other, errors;",
                "+ ",
                "+         @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)",
                "+         public Product(@JsonProperty(\"name\") String name) {",
                "+             this.name = \"PROP:\" + name;",
                "+         }",
                "+ ",
                "+         @JsonCreator(mode = JsonCreator.Mode.DELEGATING)",
                "+         public static Product from(String name){",
                "+             return new Product(false, \"DELEG:\"+name);",
                "+         }",
                "+ ",
                "+         private Product(boolean bogus, String name) {",
                "+             this.name = name;",
                "+         }",
                "+ ",
                "+         @JsonValue",
                "+         public String getName(){",
                "+             return name;",
                "+         }",
                "+     }",
                "+ ",
                "+     /*",
                "+     /**********************************************************",
                "+     /* Test methods",
                "+     /**********************************************************",
                "+      */",
                "+ ",
                "+     private final ObjectMapper MAPPER = newObjectMapper();",
                "+     ",
                "+     public void testCreator541() throws Exception",
                "+     {",
                " -        ObjectMapper mapper = new ObjectMapper();",
                " -        mapper.disable(",
                " -                MapperFeature.AUTO_DETECT_CREATORS,",
                " -                MapperFeature.AUTO_DETECT_FIELDS,",
                " -                MapperFeature.AUTO_DETECT_GETTERS,",
                " -                MapperFeature.AUTO_DETECT_IS_GETTERS,",
                " -                MapperFeature.AUTO_DETECT_SETTERS,",
                " -                MapperFeature.USE_GETTERS_AS_SETTERS",
                " -        );",
                " -        mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);",
                " -        mapper.disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);",
                " -        mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);  ",
                " -",
                "++        ObjectMapper mapper = ObjectMapper.builder()",
                "++                .disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES)",
                "++                .disable(SerializationFeature.FAIL_ON_EMPTY_BEANS)",
                "++                .disable(MapperFeature.USE_GETTERS_AS_SETTERS)",
                "++                .changeDefaultPropertyInclusion(incl -> incl.withValueInclusion(JsonInclude.Include.NON_NULL))",
                "++                .build();",
                "+         final String JSON = \"{\\n\"",
                "+                 + \"    \\\"foo\\\": {\\n\"",
                "+                 + \"        \\\"0\\\": {\\n\"",
                "+                 + \"            \\\"p\\\": 0,\\n\"",
                "+                 + \"            \\\"stuff\\\": [\\n\"",
                "+                 + \"              \\\"a\\\", \\\"b\\\" \\n\"",
                "+                 + \"            ]   \\n\"",
                "+                 + \"        },\\n\"",
                "+                 + \"        \\\"1\\\": {\\n\"",
                "+                 + \"            \\\"p\\\": 1000,\\n\"",
                "+                 + \"            \\\"stuff\\\": [\\n\"",
                "+                 + \"              \\\"c\\\", \\\"d\\\" \\n\"",
                "+                 + \"            ]   \\n\"",
                "+                 + \"        },\\n\"",
                "+                 + \"        \\\"2\\\": {\\n\"",
                "+                 + \"            \\\"p\\\": 2000,\\n\"",
                "+                 + \"            \\\"stuff\\\": [\\n\"",
                "+                 + \"            ]   \\n\"",
                "+                 + \"        }\\n\"",
                "+                 + \"    },\\n\"",
                "+                 + \"    \\\"anumber\\\": 25385874\\n\"",
                "+                 + \"}\";",
                "+ ",
                "+         Foo obj = mapper.readValue(JSON, Foo.class);",
                "+         assertNotNull(obj);",
                "+         assertNotNull(obj.foo);",
                "+         assertEquals(3, obj.foo.size());",
                "+         assertEquals(25385874L, obj.getAnumber());",
                "+     }",
                "+ ",
                "+     // [databind#421]",
                "+     public void testMultiCtor421() throws Exception",
                "+     {",
                " -        final ObjectMapper mapper = newObjectMapper();",
                " -        mapper.setAnnotationIntrospector(new MyParamIntrospector());",
                " -",
                "++        final ObjectMapper mapper = ObjectMapper.builder()",
                "++                .annotationIntrospector(new MyParamIntrospector())",
                "++                .build();",
                "+         MultiCtor bean = mapper.readValue(aposToQuotes(\"{'a':'123','b':'foo'}\"), MultiCtor.class);",
                "+         assertNotNull(bean);",
                "+         assertEquals(\"123\", bean._a);",
                "+         assertEquals(\"foo\", bean._b);",
                "+     }",
                "+ ",
                "+     // [databind#1853]",
                "+     public void testSerialization() throws Exception {",
                "+         assertEquals(quote(\"testProduct\"),",
                "+                 MAPPER.writeValueAsString(new Product(false, \"testProduct\")));",
                "+     }",
                "+ ",
                "+     public void testDeserializationFromObject() throws Exception {",
                "+         final String EXAMPLE_DATA = \"{\\\"name\\\":\\\"dummy\\\",\\\"other\\\":{},\\\"errors\\\":{}}\";",
                "+         assertEquals(\"PROP:dummy\", MAPPER.readValue(EXAMPLE_DATA, Product.class).getName());",
                "+     }",
                "+ ",
                "+     public void testDeserializationFromString() throws Exception {",
                "+         assertEquals(\"DELEG:testProduct\",",
                "+                 MAPPER.readValue(quote(\"testProduct\"), Product.class).getName());",
                "+     }",
                "+ }",
                "+ "
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "87cdc13e9fb98c3903f047e72a3856aed7c1be67",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1526341150,
            "hunks": 0,
            "message": "Merge branch '2.9'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        },
        {
            "commit_id": "3399c09690753df7b14b288eabff4b1d041f9eec",
            "repository": "https://github.com/FasterXML/jackson-databind",
            "timestamp": 1525233530,
            "hunks": 0,
            "message": "Merge branch '2.9'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        }
    ]
}
