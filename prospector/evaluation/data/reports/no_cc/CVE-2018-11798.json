{
    "advisory_record": {
        "cve_id": "CVE-2018-11798",
        "description": "The Apache Thrift Node.js static web server in versions 0.9.2 through 0.11.0 have been determined to contain a security vulnerability in which a remote user has the ability to access files outside the set webservers docroot path.",
        "reserved_timestamp": 1528156800,
        "published_timestamp": 1546884000,
        "updated_timestamp": 1571331988,
        "repository_url": null,
        "references": {
            "": 215,
            "https://access.redhat.com/support/": 21,
            "https://access.redhat.com/downloads/": 17,
            "https://access.redhat.com/labs/": 13,
            "https://access.redhat.com/errata/": 12,
            "https://access.redhat.com/management/": 8,
            "https://access.redhat.com/": 8,
            "https://access.redhat.com/documentation": 8,
            "https://access.redhat.com/product-life-cycles/": 8,
            "https://access.redhat.com/security": 8,
            "https://access.redhat.com/security/security-updates/#/security-advisories": 8,
            "https://access.redhat.com/security/security-updates/#/cve": 8,
            "https://access.redhat.com/support/contact/": 8,
            "https://status.redhat.com": 8,
            "https://access.redhat.com/products/red-hat-enterprise-linux/": 7,
            "https://access.redhat.com/products/red-hat-openshift-container-platform": 7,
            "https://access.redhat.com/products/red-hat-ansible-automation-platform/": 7,
            "https://access.redhat.com/products/": 7,
            "https://access.redhat.com/errata/RHSA-2019:1545": 4,
            "https://access.redhat.com/errata/RHSA-2019:3140": 4,
            "https://access.redhat.com/downloads/content/package-browser": 4,
            "https://catalog.redhat.com/software/containers/explore/": 4,
            "https://access.redhat.com/articles/1202803": 4,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Solution": 4,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Article": 4,
            "https://access.redhat.com/documentation/en/red_hat_enterprise_linux": 4,
            "https://access.redhat.com/documentation/en/openshift_container_platform": 4,
            "https://access.redhat.com/documentation/en/red_hat_ansible_automation_platform": 4,
            "https://access.redhat.com/documentation/": 4,
            "https://access.redhat.com/security/": 4,
            "https://access.redhat.com/security/vulnerabilities": 4,
            "https://access.redhat.com/security/data": 4,
            "https://access.redhat.com/security/security-updates/#/security-labs": 4,
            "https://access.redhat.com/security/updates/backporting/": 4,
            "https://access.redhat.com/support/cases/": 4,
            "https://access.redhat.com/support/cases/#/troubleshoot": 4,
            "https://access.redhat.com/community": 4,
            "https://access.redhat.com/community/": 4,
            "https://access.redhat.com/discussions/": 4,
            "https://access.redhat.com/announcements/": 4,
            "https://access.redhat.com/accelerators/": 4,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html": 4,
            "https://cloud.redhat.com/insights": 4,
            "https://access.redhat.com/changeLanguage?language=en": 4,
            "https://access.redhat.com/changeLanguage?language=ko": 4,
            "https://access.redhat.com/changeLanguage?language=ja": 4,
            "https://access.redhat.com/changeLanguage?language=zh_CN": 4,
            "https://redhat.com/en": 4,
            "https://twitter.com/RedHat": 4,
            "https://access.redhat.com/management": 4,
            "https://access.redhat.com/support": 4,
            "https://access.redhat.com/support/customer-service": 4,
            "https://access.redhat.com/articles/33844": 4,
            "https://access.redhat.com/help/login_assistance": 4,
            "https://www.redhat.com/en/trust": 4,
            "https://www.redhat.com/en/about/browser-support": 4,
            "https://www.redhat.com/en/about/digital-accessibility": 4,
            "https://access.redhat.com/recognition/": 4,
            "https://access.redhat.com/help/colophon/": 4,
            "https://www.redhat.com/": 4,
            "http://developers.redhat.com/": 4,
            "https://connect.redhat.com/": 4,
            "https://cloud.redhat.com/": 4,
            "https://access.redhat.com/subscription-value": 4,
            "https://www.redhat.com/about/": 4,
            "http://jobs.redhat.com": 4,
            "https://redhat.com/en/about/company": 4,
            "https://redhat.com/en/jobs": 4,
            "https://redhat.com/en/events": 4,
            "https://redhat.com/en/about/office-locations": 4,
            "https://redhat.com/en/contact": 4,
            "https://redhat.com/en/blog": 4,
            "https://redhat.com/en/about/our-culture/diversity-equity-inclusion": 4,
            "https://coolstuff.redhat.com/": 4,
            "https://www.redhat.com/en/summit": 4,
            "https://redhat.com/en/about/privacy-policy": 4,
            "https://redhat.com/en/about/terms-use": 4,
            "https://redhat.com/en/about/all-policies-guidelines": 4,
            "https://redhat.com/en/about/digital-accessibility": 4,
            "commit::2a2b72f6c8aef200ecee4984f011e06052288ff2": 3,
            "https://access.redhat.com/changeLanguage?language=fr": 3,
            "https://access.redhat.com/products/red-hat-satellite/": 3,
            "https://access.redhat.com/products/red-hat-subscription-management/": 3,
            "https://access.redhat.com/products/red-hat-insights/": 3,
            "https://access.redhat.com/products/red-hat-openstack-platform/": 3,
            "https://access.redhat.com/products/red-hat-openshift-container-platform/": 3,
            "https://access.redhat.com/products/red-hat-openshift-ai/": 3,
            "https://access.redhat.com/products/openshift-dedicated-red-hat/": 3,
            "https://access.redhat.com/products/red-hat-advanced-cluster-security-for-kubernetes/": 3,
            "https://access.redhat.com/products/red-hat-advanced-cluster-management-for-kubernetes/": 3,
            "https://access.redhat.com/products/red-hat-quay/": 3,
            "https://access.redhat.com/products/red-hat-openshift-dev-spaces": 3,
            "https://access.redhat.com/products/red-hat-openshift-service-aws": 3,
            "https://access.redhat.com/products/red-hat-storage/": 3,
            "https://access.redhat.com/products/red-hat-hyperconverged-infrastructure/": 3,
            "https://access.redhat.com/products/red-hat-ceph-storage/": 3,
            "https://access.redhat.com/products/red-hat-openshift-data-foundation": 3,
            "https://access.redhat.com/products/red-hat-runtimes/": 3,
            "https://access.redhat.com/products/red-hat-jboss-enterprise-application-platform/": 3,
            "https://access.redhat.com/products/red-hat-data-grid/": 3,
            "https://access.redhat.com/products/red-hat-jboss-web-server/": 3,
            "https://access.redhat.com/products/red-hat-build-of-keycloak/": 3,
            "https://access.redhat.com/products/spring-boot/": 3,
            "https://access.redhat.com/products/nodejs/": 3,
            "https://access.redhat.com/products/quarkus/": 3,
            "https://access.redhat.com/products/red-hat-application-foundations/": 3,
            "https://access.redhat.com/products/red-hat-fuse/": 3,
            "https://access.redhat.com/products/red-hat-amq/": 3,
            "https://access.redhat.com/products/red-hat-3scale/": 3,
            "commit::cfa52d62f55f5aa5fa351b9d64e6dc731c94619f": 3,
            "http://www.securityfocus.com/bid/106501": 2,
            "https://lists.apache.org/thread.html/6e9edd282684896cedf615fb67a02bebfe6007f2d5baf03ba52e34fd%40%3Cuser.thrift.apache.org%3E": 2,
            "https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html": 2,
            "https://issues.apache.org/jira/browse/THRIFT-4647": 2,
            "https://lists.apache.org/thread.html/6e9edd282684896cedf615fb67a02bebfe6007f2d5baf03ba52e34fd@%3Cuser.thrift.apache.org%3E": 2,
            "https://github.com/apache/thrift/pull/1606": 2,
            "https://access.redhat.com/support/policy/updates/jboss_notes": 2,
            "https://access.redhat.com/security/cve/cve-2018-11798": 2,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1667188": 2,
            "https://www.redhat.com/security/data/cve/CVE-2018-11798.html": 2,
            "https://access.redhat.com/security/updates/classification/#important": 2,
            "https://access.redhat.com/security/team/contact/": 2,
            "https://docs.atlassian.com/jira/jcore-docs-0820/": 2,
            "http://www.atlassian.com/software/jira": 2,
            "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax": 2,
            "https://access.redhat.com/support/policy/updates/red_hat_build_of_quarkus_notes": 2,
            "https://access.redhat.com/articles/7060671": 2,
            "https://access.redhat.com/documentation/en-us/red_hat_fuse/7.3/": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1310647": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1443635": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1572463": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1640615": 1,
            "https://www.redhat.com/security/data/cve/CVE-2016-2510.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2017-5645.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2017-15691.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-3258.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2019-17571.html": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&product=jboss.fuse&version=7.3.1": 1,
            "https://access.redhat.com/documentation/en-us/red_hat_fuse/7.3": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1544620": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1548909": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1572416": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1666415": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1666418": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1666482": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1666484": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1666489": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1671096": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1671097": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1677341": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1715197": 1,
            "https://www.redhat.com/security/data/cve/CVE-2016-5397.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1335.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-8088.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-11307.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-12022.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-12023.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-14718.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-14719.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-19360.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-19361.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-19362.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2019-0201.html": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?product=data.services.platform&downloadType=securityPatches&version=6.4": 1,
            "https://access.redhat.com/documentation/en-us/red_hat_jboss_data_virtualization/6.4/html/release_notes/": 1,
            "https://issues.apache.org/jira/secure/MyJiraHome.jspa": 1,
            "https://selfserve.apache.org/jira-account.html": 1,
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=2018-11798": 1,
            "https://www.atlassian.com/software/jira": 1,
            "http://www.atlassian.com/": 1,
            "https://github.com/features/actions": 1,
            "https://github.com/features/packages": 1,
            "https://github.com/features/security": 1,
            "https://github.com/features/codespaces": 1,
            "https://github.com/features/copilot": 1,
            "https://github.com/features/code-review": 1,
            "https://github.com/features/issues": 1,
            "https://github.com/features/discussions": 1,
            "https://github.com/features": 1,
            "https://docs.github.com": 1,
            "https://skills.github.com": 1,
            "https://github.blog": 1,
            "https://github.com/enterprise": 1,
            "https://github.com/team": 1,
            "https://github.com/enterprise/startups": 1,
            "https://github.com/solutions/industries/healthcare": 1,
            "https://github.com/solutions/industries/financial-services": 1,
            "https://github.com/solutions/industries/manufacturing": 1,
            "https://github.com/solutions/ci-cd": 1,
            "https://github.com/solutions/devops": 1,
            "https://github.com/solutions/devsecops": 1,
            "https://resources.github.com/learn/pathways": 1,
            "https://resources.github.com": 1,
            "https://github.com/customer-stories": 1,
            "https://partner.github.com": 1,
            "https://github.com/readme": 1,
            "https://github.com/topics": 1,
            "https://github.com/trending": 1,
            "https://github.com/collections": 1,
            "https://github.com/enterprise/advanced-security": 1,
            "https://github.com/pricing": 1,
            "https://docs.github.com/terms": 1,
            "https://docs.github.com/privacy": 1,
            "https://github.co/hiddenchars": 1,
            "https://docs.github.com/articles/managing-disruptive-comments/#hiding-a-comment": 1,
            "commit::7a5e210baa8783d46e5b183e036680d4b317b2a0": 1,
            "https://github.com/apache/thrift/pull/1606#event-1898348663": 1,
            "https://github.com": 1,
            "https://docs.github.com/site-policy/github-terms/github-terms-of-service": 1,
            "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement": 1,
            "https://github.com/security": 1,
            "https://www.githubstatus.com/": 1,
            "https://docs.github.com/": 1,
            "https://support.github.com?tags=dotcom-footer": 1,
            "https://access.redhat.com/product-life-cycles": 1,
            "https://access.redhat.com/articles/7019023": 1,
            "https://access.redhat.com/articles/6200982": 1,
            "https://access.redhat.com/search/#/knowledgebase": 1,
            "https://access.redhat.com/search/#/discussions": 1,
            "https://access.redhat.com/support/policy/updates/jboss_eap_xp_notes": 1,
            "https://access.redhat.com/articles/7037218": 1,
            "https://github.com/nodejs/Release": 1,
            "https://access.redhat.com/articles/4544981": 1,
            "https://access.redhat.com/support/policy/updates/jboss_notes#p_rhbocamel": 1,
            "https://access.redhat.com/solutions/6342381": 1,
            "https://access.redhat.com/solutions/5941551": 1,
            "https://access.redhat.com/support/policy/updates/service-interconnect": 1,
            "https://access.redhat.com/articles/6975608": 1,
            "https://access.redhat.com/articles/6999674": 1,
            "https://access.redhat.com/articles/6371801": 1
        },
        "affected_products": [
            "static",
            "Apache",
            "Apache Thrift",
            "Thrift"
        ],
        "versions": {
            "status": "affected",
            "version": "Apache Thrift 0.9.2 to 0.11.0"
        },
        "files": [],
        "keywords": [
            "determine",
            "security",
            "have",
            "file",
            "docroot",
            "webserver",
            "thrift",
            "vulnerability",
            "static",
            "contain",
            "user",
            "ability",
            "path",
            "apache",
            "server",
            "access",
            "version"
        ],
        "files_extension": [],
        "has_fixing_commit": true
    },
    "commits": [
        {
            "commit_id": "2a2b72f6c8aef200ecee4984f011e06052288ff2",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1538708428,
            "hunks": 1,
            "message": "Thrift-4647: Node.js Filesever webroot fixed path Updates the node.js fileserver to have a fixed based webroot which can not be escaped by end users.",
            "diff": [
                "diff --git a/lib/nodejs/lib/thrift/web_server.js b/lib/nodejs/lib/thrift/web_server.js",
                "index 0093c8a08..a33f47aed 100644",
                "--- a/lib/nodejs/lib/thrift/web_server.js",
                "+++ b/lib/nodejs/lib/thrift/web_server.js",
                "@@ -417,3 +417,11 @@ exports.createWebServer = function(options) {",
                "     var uri = url.parse(request.url).pathname;",
                "-    var filename = path.join(baseDir, uri);",
                "+    var filename = path.resolve(path.join(baseDir, uri));",
                "+",
                "+    //Ensure the basedir path is not able to be escaped",
                "+    if (filename.indexOf(baseDir) != 0) {",
                "+      response.writeHead(400, \"Invalid request path\", {});",
                "+      response.end();",
                "+      return;",
                "+    }",
                "+",
                "     fs.exists(filename, function(exists) {"
            ],
            "changed_files": [
                "lib/nodejs/lib/thrift/web_server.js"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 3 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: user, have, file, path, server",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "961fa701346a3aaa804db8845f5eb38ea230b353",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1539344260,
            "hunks": 7,
            "message": "THRIFT-4618: Use poll() instead of select() in C++ TNonblockingServer if available (#1580)",
            "diff": [
                "diff --git a/build/cmake/ConfigureChecks.cmake b/build/cmake/ConfigureChecks.cmake",
                "index 6b9c6a32f..457bfe05d 100644",
                "--- a/build/cmake/ConfigureChecks.cmake",
                "+++ b/build/cmake/ConfigureChecks.cmake",
                "@@ -47,2 +47,3 @@ check_include_file(sys/time.h HAVE_SYS_TIME_H)",
                " check_include_file(sys/un.h HAVE_SYS_UN_H)",
                "+check_include_file(poll.h HAVE_POLL_H)",
                " check_include_file(sys/poll.h HAVE_SYS_POLL_H)",
                "diff --git a/build/cmake/config.h.in b/build/cmake/config.h.in",
                "index c5d4d307d..39d8270aa 100644",
                "--- a/build/cmake/config.h.in",
                "+++ b/build/cmake/config.h.in",
                "@@ -123,2 +123,5 @@",
                "+/* Define to 1 if you have the <poll.h> header file. */",
                "+#cmakedefine HAVE_POLL_H 1",
                "+",
                " /* Define to 1 if you have the <sys/poll.h> header file. */",
                "diff --git a/configure.ac b/configure.ac",
                "index 917f6fa22..14a8c2e0b 100755",
                "--- a/configure.ac",
                "+++ b/configure.ac",
                "@@ -642,2 +642,3 @@ AC_CHECK_HEADERS([sys/time.h])",
                " AC_CHECK_HEADERS([sys/un.h])",
                "+AC_CHECK_HEADERS([poll.h])",
                " AC_CHECK_HEADERS([sys/poll.h])",
                "diff --git a/lib/cpp/src/thrift/server/TNonblockingServer.cpp b/lib/cpp/src/thrift/server/TNonblockingServer.cpp",
                "index f89b5f793..194d59fa0 100644",
                "--- a/lib/cpp/src/thrift/server/TNonblockingServer.cpp",
                "+++ b/lib/cpp/src/thrift/server/TNonblockingServer.cpp",
                "@@ -30,3 +30,7 @@",
                "-#ifdef HAVE_SYS_SELECT_H",
                "+#ifdef HAVE_POLL_H",
                "+#include <poll.h>",
                "+#elif HAVE_SYS_POLL_H",
                "+#include <sys/poll.h>",
                "+#elif HAVE_SYS_SELECT_H",
                " #include <sys/select.h>",
                "@@ -1293,6 +1297,40 @@ bool TNonblockingIOThread::notify(TNonblockingServer::TConnection* conn) {",
                "-  fd_set wfds, efds;",
                "-  long ret = -1;",
                "+  int ret = -1;",
                "   long kSize = sizeof(conn);",
                "-  const char* pos = reinterpret_cast<const char*>(&conn);",
                "+  const char * pos = (const char *)const_cast_sockopt(&conn);",
                "+",
                "+#if defined(HAVE_POLL_H) || defined(HAVE_SYS_POLL_H)",
                "+  struct pollfd pfd = {fd, POLLOUT, 0};",
                "+",
                "+  while (kSize > 0) {",
                "+    pfd.revents = 0;",
                "+    ret = poll(&pfd, 1, -1);",
                "+    if (ret < 0) {",
                "+      return false;",
                "+    } else if (ret == 0) {",
                "+      continue;",
                "+    }",
                "+",
                "+    if (pfd.revents & POLLHUP || pfd.revents & POLLERR) {",
                "+      ::THRIFT_CLOSESOCKET(fd);",
                "+      return false;",
                "+    }",
                "+",
                "+    if (pfd.revents & POLLOUT) {",
                "+      ret = send(fd, pos, kSize, 0);",
                "+      if (ret < 0) {",
                "+        if (errno == EAGAIN) {",
                "+          continue;",
                "+        }",
                "+",
                "+        ::THRIFT_CLOSESOCKET(fd);",
                "+        return false;",
                "+      }",
                "+",
                "+      kSize -= ret;",
                "+      pos += ret;",
                "+    }",
                "+  }",
                "+#else",
                "+  fd_set wfds, efds;",
                "@@ -1330,2 +1368,3 @@ bool TNonblockingIOThread::notify(TNonblockingServer::TConnection* conn) {",
                "   }",
                "+#endif"
            ],
            "changed_files": [
                "build/cmake/ConfigureChecks.cmake",
                "build/cmake/config.h.in",
                "configure.ac",
                "lib/cpp/src/thrift/server/TNonblockingServer.cpp"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4618": ""
            },
            "ghissue_refs": {
                "1580": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: server",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4618",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1580",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "eb31a6cd7e647e582c0e9efb5ad6b9e741932792",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1538773507,
            "hunks": 1,
            "message": "THRIFT-4499: Remove Magic Number In TFIleTransport (#1607)",
            "diff": [
                "diff --git a/lib/java/src/org/apache/thrift/transport/TFileTransport.java b/lib/java/src/org/apache/thrift/transport/TFileTransport.java",
                "index 915fa7328..c011c52a7 100644",
                "--- a/lib/java/src/org/apache/thrift/transport/TFileTransport.java",
                "+++ b/lib/java/src/org/apache/thrift/transport/TFileTransport.java",
                "@@ -368,3 +368,3 @@ public class TFileTransport extends TTransport {",
                "       if(!readOnly_)",
                "-        outputStream_ = new BufferedOutputStream(inputFile_.getOutputStream(), 8192);",
                "+        outputStream_ = new BufferedOutputStream(inputFile_.getOutputStream());",
                "     } catch (IOException iox) {"
            ],
            "changed_files": [
                "lib/java/src/org/apache/thrift/transport/TFileTransport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4499": ""
            },
            "ghissue_refs": {
                "1607": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4499",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1607",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c64389a194fe1516fef5830151dfb8b35f6c6bb2",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1537616184,
            "hunks": 6,
            "message": "THRIFT-4625: Pin dart version to 1.x in build",
            "diff": [
                "diff --git a/build/docker/ubuntu-artful/Dockerfile b/build/docker/ubuntu-artful/Dockerfile",
                "index 4ea95d589..abe84d11c 100644",
                "--- a/build/docker/ubuntu-artful/Dockerfile",
                "+++ b/build/docker/ubuntu-artful/Dockerfile",
                "@@ -17,3 +17,3 @@",
                " # - d: dmd does not come with Ubuntu",
                "-# - dart: does not come with Ubuntu",
                "+# - dart: does not come with Ubuntu. Pinned to last 1.x release",
                " # - dotnet: does not come with Ubuntu",
                "@@ -49,2 +49,3 @@ RUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - &",
                "       /etc/apt/sources.list.d/dart_stable.list",
                "+ENV DART_VERSION 1.24.3-1",
                "@@ -124,3 +125,3 @@ RUN apt-get install -y --no-install-recommends \\",
                "       `# Dart dependencies` \\",
                "-      dart/stable",
                "+      dart=$DART_VERSION",
                " ENV PATH /usr/lib/dart/bin:$PATH",
                "diff --git a/build/docker/ubuntu-bionic/Dockerfile b/build/docker/ubuntu-bionic/Dockerfile",
                "index da574e18b..795c086e9 100644",
                "--- a/build/docker/ubuntu-bionic/Dockerfile",
                "+++ b/build/docker/ubuntu-bionic/Dockerfile",
                "@@ -17,3 +17,3 @@",
                " # - d: dmd does not come with Ubuntu",
                "-# - dart: does not come with Ubuntu",
                "+# - dart: does not come with Ubuntu. Pinned to last 1.x release",
                " # - dotnet: does not come with Ubuntu",
                "@@ -48,2 +48,3 @@ RUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - &",
                "       /etc/apt/sources.list.d/dart_stable.list",
                "+ENV DART_VERSION 1.24.3-1",
                "@@ -121,3 +122,3 @@ RUN apt-get install -y --no-install-recommends \\",
                "       `# Dart dependencies` \\",
                "-      dart/stable",
                "+      dart=$DART_VERSION",
                " ENV PATH /usr/lib/dart/bin:$PATH"
            ],
            "changed_files": [
                "build/docker/ubuntu-artful/Dockerfile",
                "build/docker/ubuntu-bionic/Dockerfile"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4625": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4625",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "98acf189a78c3c6a78cf27c35450e1876d6500d5",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1537972474,
            "hunks": 1,
            "message": "fix Ubuntu Xenial docker build environment (lock deimos for openssl to older version)",
            "diff": [
                "diff --git a/build/docker/ubuntu-xenial/Dockerfile b/build/docker/ubuntu-xenial/Dockerfile",
                "index c69bec29b..c745a597d 100644",
                "--- a/build/docker/ubuntu-xenial/Dockerfile",
                "+++ b/build/docker/ubuntu-xenial/Dockerfile",
                "@@ -117,6 +117,6 @@ RUN mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/i",
                "     rm -rf libevent-master",
                "-RUN curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz| tar xz && \\",
                "-    mv openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\",
                "-    mv openssl-master/C/* /usr/include/dmd/druntime/import/C/ && \\",
                "-    rm -rf openssl-master",
                "+RUN curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/v1.1.6+1.0.1g.tar.gz | tar xz && \\",
                "+    mv openssl-1.1.6-1.0.1g/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\",
                "+    mv openssl-1.1.6-1.0.1g/C/* /usr/include/dmd/druntime/import/C/ && \\",
                "+    rm -rf openssl-1.1.6-1.0.1g"
            ],
            "changed_files": [
                "build/docker/ubuntu-xenial/Dockerfile"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "b5d6ea390fc5732ed1c1772709ab3731555dc3fc",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1535254769,
            "hunks": 182,
            "message": "THRIFT-4625: Use let/const variable decorators in ES6 Javascript",
            "diff": [
                "diff --git a/build/docker/ubuntu-artful/Dockerfile b/build/docker/ubuntu-artful/Dockerfile",
                "index 153ce61e0..4ea95d589 100644",
                "--- a/build/docker/ubuntu-artful/Dockerfile",
                "+++ b/build/docker/ubuntu-artful/Dockerfile",
                "@@ -185,2 +185,7 @@ RUN apt-get install -y --no-install-recommends \\",
                "+# Test dependencies for running puppeteer",
                "+RUN apt-get install -y --no-install-recommends \\",
                "+`# JS dependencies` \\",
                "+      libxss1",
                "+",
                " RUN apt-get install -y --no-install-recommends \\",
                "diff --git a/build/docker/ubuntu-bionic/Dockerfile b/build/docker/ubuntu-bionic/Dockerfile",
                "index 1fe4c3d9a..da574e18b 100644",
                "--- a/build/docker/ubuntu-bionic/Dockerfile",
                "+++ b/build/docker/ubuntu-bionic/Dockerfile",
                "@@ -183,2 +183,7 @@ RUN apt-get install -y --no-install-recommends \\",
                "+# Test dependencies for running puppeteer",
                "+RUN apt-get install -y --no-install-recommends \\",
                "+`# JS dependencies` \\",
                "+      libxss1",
                "+",
                " RUN apt-get install -y --no-install-recommends \\",
                "diff --git a/build/docker/ubuntu-xenial/Dockerfile b/build/docker/ubuntu-xenial/Dockerfile",
                "index c745a597d..3372b4dbd 100644",
                "--- a/build/docker/ubuntu-xenial/Dockerfile",
                "+++ b/build/docker/ubuntu-xenial/Dockerfile",
                "@@ -62,3 +62,3 @@ RUN curl -sL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add",
                "     echo \"deb https://deb.nodesource.com/node_6.x xenial main\" | tee /etc/apt/sources.list.d/nodesource.list",
                "-    ",
                "+",
                " ### install general dependencies",
                "@@ -192,2 +192,9 @@ RUN apt-get install -y --no-install-recommends \\",
                "+# Test dependencies for running puppeteer",
                "+RUN apt-get install -y --no-install-recommends \\",
                "+`# JS dependencies` \\",
                "+      libxss1 \\",
                "+      libatk-bridge2.0-0 \\",
                "+      libgtk-3-0",
                "+",
                " # THRIFT-4517: causes stack overflows; version too old; skip ocaml in xenial",
                "diff --git a/compiler/cpp/src/thrift/generate/t_js_generator.cc b/compiler/cpp/src/thrift/generate/t_js_generator.cc",
                "index 4d1cea6d2..1ae81671a 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_js_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_js_generator.cc",
                "@@ -99,2 +99,11 @@ public:",
                "+    // Depending on the processing flags, we will update these to be ES6 compatible",
                "+    js_const_type_ = \"var \";",
                "+    js_let_type_ = \"var \";",
                "+    js_var_type_ = \"var \";",
                "+    if (gen_es6_) {",
                "+      js_const_type_ = \"const \";",
                "+      js_let_type_ = \"let \";",
                "+    }",
                "+",
                "     if (gen_node_) {",
                "@@ -353,2 +362,17 @@ private:",
                "+  /**",
                "+   * The variable decorator for \"const\" variables. Will default to \"var\" if in an incompatible language.",
                "+   */",
                "+  string js_const_type_;",
                "+",
                "+   /**",
                "+   * The variable decorator for \"let\" variables. Will default to \"var\" if in an incompatible language.",
                "+   */",
                "+  string js_let_type_;",
                "+",
                "+   /**",
                "+   * The default variable decorator. Supports all javascript languages, but is not scoped to functions or closures.",
                "+   */",
                "+  string js_var_type_;",
                "+",
                "   /**",
                "@@ -397,3 +421,3 @@ void t_js_generator::init_generator() {",
                "   if (gen_node_) {",
                "-    f_types_ << \"var ttypes = module.exports = {};\" << endl;",
                "+    f_types_ << js_const_type_ << \"ttypes = module.exports = {};\" << endl;",
                "   }",
                "@@ -424,7 +448,6 @@ string t_js_generator::js_includes() {",
                "   if (gen_node_) {",
                "-    string result = string(",
                "-        \"var thrift = require('thrift');\\n\"",
                "-        \"var Thrift = thrift.Thrift;\\n\");",
                "+    string result = js_const_type_ + \"thrift = require('thrift');\\n\"",
                "+        + js_const_type_ + \"Thrift = thrift.Thrift;\\n\";",
                "     if (!gen_es6_) {",
                "-      result += \"var Q = thrift.Q;\\n\";",
                "+      result += js_const_type_ + \"Q = thrift.Q;\\n\";",
                "     }",
                "@@ -445,3 +468,3 @@ string t_js_generator::render_includes() {",
                "     for (size_t i = 0; i < includes.size(); ++i) {",
                "-      result += \"var \" + make_valid_nodeJs_identifier(includes[i]->get_name()) + \"_ttypes = require('./\" + includes[i]->get_name()",
                "+      result += js_const_type_ + make_valid_nodeJs_identifier(includes[i]->get_name()) + \"_ttypes = require('./\" + includes[i]->get_name()",
                "                 + \"_types');\\n\";",
                "@@ -534,3 +557,3 @@ void t_js_generator::generate_const(t_const* tconst) {",
                "   if (gen_ts_) {",
                "-    f_types_ts_ << ts_print_doc(tconst) << ts_indent() << ts_declare() << \"var \" << name << \": \"",
                "+    f_types_ts_ << ts_print_doc(tconst) << ts_indent() << ts_declare() << js_const_type_ << name << \": \"",
                "                 << ts_get_type(type) << \";\" << endl;",
                "@@ -696,3 +719,3 @@ void t_js_generator::generate_js_struct_definition(ostream& out,",
                "   if (gen_node_) {",
                "-    string prefix = has_js_namespace(tstruct->get_program()) ? js_namespace(tstruct->get_program()) : \"var \";",
                "+    string prefix = has_js_namespace(tstruct->get_program()) ? js_namespace(tstruct->get_program()) : js_const_type_;",
                "     if (is_exported) {",
                "@@ -862,10 +885,11 @@ void t_js_generator::generate_js_struct_reader(ostream& out, t_struct* tstruct)",
                "   // Loop over reading in fields",
                "-  indent(out) << \"while (true)\" << endl;",
                "+  indent(out) << \"while (true) {\" << endl;",
                "-  scope_up(out);",
                "+  indent_up();",
                "-  indent(out) << \"var ret = input.readFieldBegin();\" << endl;",
                "-  indent(out) << \"var fname = ret.fname;\" << endl;",
                "-  indent(out) << \"var ftype = ret.ftype;\" << endl;",
                "-  indent(out) << \"var fid = ret.fid;\" << endl;",
                "+  indent(out) << js_const_type_ << \"ret = input.readFieldBegin();\" << endl;",
                "+  indent(out) << js_const_type_ << \"ftype = ret.ftype;\" << endl;",
                "+  if (!fields.empty()) {",
                "+    indent(out) << js_const_type_ << \"fid = ret.fid;\" << endl;",
                "+  }",
                "@@ -879,5 +903,5 @@ void t_js_generator::generate_js_struct_reader(ostream& out, t_struct* tstruct)",
                "     // Switch statement on the field we are reading",
                "-    indent(out) << \"switch (fid)\" << endl;",
                "+    indent(out) << \"switch (fid) {\" << endl;",
                "-    scope_up(out);",
                "+    indent_up();",
                "@@ -1003,7 +1027,7 @@ void t_js_generator::generate_service(t_service* tservice) {",
                "     if (tservice->get_extends() != NULL) {",
                "-      f_service_ << \"var \" << tservice->get_extends()->get_name() << \" = require('./\"",
                "-                 << tservice->get_extends()->get_name() << \"');\" << endl << \"var \"",
                "+      f_service_ << js_const_type_ <<  tservice->get_extends()->get_name() << \" = require('./\"",
                "+                 << tservice->get_extends()->get_name() << \"');\" << endl << js_const_type_",
                "                  << tservice->get_extends()->get_name()",
                "                  << \"Client = \" << tservice->get_extends()->get_name() << \".Client;\" << endl",
                "-                 << \"var \" << tservice->get_extends()->get_name()",
                "+                 << js_const_type_ << tservice->get_extends()->get_name()",
                "                  << \"Processor = \" << tservice->get_extends()->get_name() << \".Processor;\" << endl;",
                "@@ -1011,3 +1035,3 @@ void t_js_generator::generate_service(t_service* tservice) {",
                "-    f_service_ << \"var ttypes = require('./\" + program_->get_name() + \"_types');\" << endl;",
                "+    f_service_ << js_const_type_ << \"ttypes = require('./\" + program_->get_name() + \"_types');\" << endl;",
                "   }",
                "@@ -1041,15 +1065,13 @@ void t_js_generator::generate_service_processor(t_service* tservice) {",
                "   if (gen_node_) {",
                "-    string prefix = has_js_namespace(tservice->get_program()) ? js_namespace(tservice->get_program()) : \"var \";",
                "-    f_service_ << prefix << service_name_ << \"Processor = \" << \"exports.Processor = function(handler) \";",
                "+    string prefix = has_js_namespace(tservice->get_program()) ? js_namespace(tservice->get_program()) : js_const_type_;",
                "+    f_service_ << prefix << service_name_ << \"Processor = \" << \"exports.Processor = function(handler) {\" << endl;",
                "   } else {",
                "     f_service_ << js_namespace(tservice->get_program()) << service_name_ << \"Processor = \"",
                "-             << \"exports.Processor = function(handler) \";",
                "+             << \"exports.Processor = function(handler) {\" << endl;",
                "   }",
                "-  scope_up(f_service_);",
                "-",
                "-  f_service_ << indent() << \"this._handler = handler;\" << endl;",
                "-",
                "-  scope_down(f_service_);",
                "-  f_service_ << \";\" << endl;",
                "+  indent_up();",
                "+  indent(f_service_) << \"this._handler = handler;\" << endl;",
                "+  indent_down();",
                "+  f_service_ << \"};\" << endl;",
                "@@ -1063,7 +1085,7 @@ void t_js_generator::generate_service_processor(t_service* tservice) {",
                "   indent(f_service_) << js_namespace(tservice->get_program()) << service_name_",
                "-                     << \"Processor.prototype.process = function(input, output) \";",
                "+                     << \"Processor.prototype.process = function(input, output) {\" << endl;",
                "-  scope_up(f_service_);",
                "+  indent_up();",
                "-  f_service_ << indent() << \"var r = input.readMessageBegin();\" << endl << indent()",
                "+  indent(f_service_) << js_const_type_ << \"r = input.readMessageBegin();\" << endl << indent()",
                "              << \"if (this['process_' + r.fname]) {\" << endl << indent()",
                "@@ -1072,3 +1094,3 @@ void t_js_generator::generate_service_processor(t_service* tservice) {",
                "              << endl << indent() << \"  input.readMessageEnd();\" << endl << indent()",
                "-             << \"  var x = new \"",
                "+             << \"  \" << js_const_type_ << \"x = new \"",
                "                 \"Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, \"",
                "@@ -1080,4 +1102,4 @@ void t_js_generator::generate_service_processor(t_service* tservice) {",
                "-  scope_down(f_service_);",
                "-  f_service_ << \";\" << endl;",
                "+  indent_down();",
                "+  f_service_ << \"};\" << endl;",
                "@@ -1097,5 +1119,5 @@ void t_js_generator::generate_process_function(t_service* tservice, t_function*",
                "                      << \"Processor.prototype.process_\" + tfunction->get_name()",
                "-                        + \" = function(seqid, input, output) \";",
                "+                        + \" = function(seqid, input, output) {\" << endl;",
                "-  scope_up(f_service_);",
                "+  indent_up();",
                "@@ -1105,3 +1127,3 @@ void t_js_generator::generate_process_function(t_service* tservice, t_function*",
                "-  f_service_ << indent() << \"var args = new \" << argsname << \"();\" << endl << indent()",
                "+  indent(f_service_) << js_const_type_ << \"args = new \" << argsname << \"();\" << endl << indent()",
                "              << \"args.read(input);\" << endl << indent() << \"input.readMessageEnd();\" << endl;",
                "@@ -1128,4 +1150,4 @@ void t_js_generator::generate_process_function(t_service* tservice, t_function*",
                "     f_service_ << \");\" << endl;",
                "-    scope_down(f_service_);",
                "-    f_service_ << \";\" << endl;",
                "+    indent_down();",
                "+    f_service_ << \"};\" << endl;",
                "     return;",
                "@@ -1133,16 +1155,29 @@ void t_js_generator::generate_process_function(t_service* tservice, t_function*",
                "-  f_service_ << indent() << \"if (this._handler.\" << tfunction->get_name()",
                "+  indent(f_service_) << \"if (this._handler.\" << tfunction->get_name()",
                "              << \".length === \" << fields.size() << \") {\" << endl;",
                "   indent_up();",
                "-  indent(f_service_) << \"Q.fcall(this._handler.\" << tfunction->get_name() << \".bind(this._handler)\";",
                "-  for (f_iter = fields.begin(); f_iter != fields.end(); ++f_iter) {",
                "-    f_service_ << \", args.\" << (*f_iter)->get_name();",
                "+  if (gen_es6_) {",
                "+    indent(f_service_) << \"Promise.resolve(this._handler.\" << tfunction->get_name() << \".bind(this._handler)(\" << endl;",
                "+  } else {",
                "+    string maybeComma = (fields.size() > 0 ? \",\" : \"\");",
                "+    indent(f_service_) << \"Q.fcall(this._handler.\" << tfunction->get_name() << \".bind(this._handler)\"",
                "+                       << maybeComma << endl;",
                "   }",
                "-  f_service_ << \")\" << endl;",
                "   indent_up();",
                "-  indent(f_service_) << \".then(function(result) {\" << endl;",
                "+  for (f_iter = fields.begin(); f_iter != fields.end(); ++f_iter) {",
                "+    string maybeComma = (f_iter != fields.end() - 1 ? \",\" : \"\");",
                "+    indent(f_service_) << \"args.\" << (*f_iter)->get_name() << maybeComma << endl;",
                "+  }",
                "+  indent_down();",
                "+",
                "+  if (gen_es6_) {",
                "+    indent(f_service_) << \")).then(function(result) {\" << endl;",
                "+  } else {",
                "+    indent(f_service_) << \").then(function(result) {\" << endl;",
                "+  }",
                "+",
                "   indent_up();",
                "-  f_service_ << indent() << \"var result_obj = new \" << resultname << \"({success: result});\" << endl",
                "+  f_service_ << indent() << js_const_type_ << \"result_obj = new \" << resultname << \"({success: result});\" << endl",
                "              << indent() << \"output.writeMessageBegin(\\\"\" << tfunction->get_name()",
                "@@ -1152,5 +1187,6 @@ void t_js_generator::generate_process_function(t_service* tservice, t_function*",
                "   indent_down();",
                "-  indent(f_service_) << \"}, function (err) {\" << endl;",
                "+",
                "+  indent(f_service_) << \"}).catch(function (err) {\" << endl;",
                "   indent_up();",
                "-  indent(f_service_) << \"var result;\" << endl;",
                "+  indent(f_service_) << js_let_type_ << \"result;\" << endl;",
                "@@ -1202,3 +1238,2 @@ void t_js_generator::generate_process_function(t_service* tservice, t_function*",
                "   indent_down();",
                "-  indent_down();",
                "   indent(f_service_) << \"} else {\" << endl;",
                "@@ -1213,3 +1248,3 @@ void t_js_generator::generate_process_function(t_service* tservice, t_function*",
                "   indent_up();",
                "-  indent(f_service_) << \"var result_obj;\" << endl;",
                "+  indent(f_service_) << js_let_type_ << \"result_obj;\" << endl;",
                "@@ -1322,3 +1357,3 @@ void t_js_generator::generate_service_client(t_service* tservice) {",
                "   if (gen_node_) {",
                "-    string prefix = has_js_namespace(tservice->get_program()) ? js_namespace(tservice->get_program()) : \"var \";",
                "+    string prefix = has_js_namespace(tservice->get_program()) ? js_namespace(tservice->get_program()) : js_const_type_;",
                "     f_service_ << prefix << service_name_ << \"Client = \"",
                "@@ -1408,3 +1443,3 @@ void t_js_generator::generate_service_client(t_service* tservice) {",
                "       f_service_ << indent() << \"this._seqid = this.new_seqid();\" << endl;",
                "-      f_service_ << indent() << \"var self = this;\" << endl << indent()",
                "+      f_service_ << indent() << js_const_type_ << \"self = this;\" << endl << indent()",
                "                  << \"return new Promise(function(resolve, reject) {\" << endl;",
                "@@ -1431,3 +1466,3 @@ void t_js_generator::generate_service_client(t_service* tservice) {",
                "       indent_up();",
                "-      f_service_ << indent() << \"var _defer = Q.defer();\" << endl << indent()",
                "+      f_service_ << indent() << js_const_type_ << \"_defer = Q.defer();\" << endl << indent()",
                "                  << \"this._reqs[this.seqid()] = function(error, result) {\" << endl;",
                "@@ -1455,3 +1490,3 @@ void t_js_generator::generate_service_client(t_service* tservice) {",
                "     } else if (gen_es6_) {",
                "-      f_service_ << indent() << \"var self = this;\" << endl << indent()",
                "+      f_service_ << indent() << js_const_type_ << \"self = this;\" << endl << indent()",
                "                  << \"return new Promise(function(resolve, reject) {\" << endl;",
                "@@ -1485,3 +1520,3 @@ void t_js_generator::generate_service_client(t_service* tservice) {",
                "       indent_up();",
                "-      f_service_ << indent() << \"var postData = this.send_\" << funname << \"(\" << arglist",
                "+      f_service_ << indent() << js_const_type_ << \"postData = this.send_\" << funname << \"(\" << arglist",
                "                  << (arglist.empty() ? \"\" : \", \") << \"true);\" << endl;",
                "@@ -1520,3 +1555,3 @@ void t_js_generator::generate_service_client(t_service* tservice) {",
                "     if (gen_node_) {",
                "-      f_service_ << indent() << \"var output = new this.pClass(this.output);\" << endl;",
                "+      f_service_ << indent() << js_const_type_ << \"output = new this.pClass(this.output);\" << endl;",
                "       outputVar = \"output\";",
                "@@ -1533,3 +1568,3 @@ void t_js_generator::generate_service_client(t_service* tservice) {",
                "     if (fields.size() > 0){",
                "-      f_service_ << indent() << \"var params = {\" << endl;",
                "+      f_service_ << indent() << js_const_type_ << \"params = {\" << endl;",
                "       for (fld_iter = fields.begin(); fld_iter != fields.end(); ++fld_iter) {",
                "@@ -1543,5 +1578,5 @@ void t_js_generator::generate_service_client(t_service* tservice) {",
                "       f_service_ << indent() << \"};\" << endl;",
                "-      f_service_ << indent() << \"var args = new \" << argsname << \"(params);\" << endl;",
                "+      f_service_ << indent() << js_const_type_ << \"args = new \" << argsname << \"(params);\" << endl;",
                "     } else {",
                "-      f_service_ << indent() << \"var args = new \" << argsname << \"();\" << endl;",
                "+      f_service_ << indent() << js_const_type_ << \"args = new \" << argsname << \"();\" << endl;",
                "     }",
                "@@ -1569,3 +1604,3 @@ void t_js_generator::generate_service_client(t_service* tservice) {",
                "         f_service_ << indent() << \"this.output.flush();\" << endl;",
                "-        f_service_ << indent() << \"var callback = this._reqs[this.seqid()] || function() {};\" << endl;",
                "+        f_service_ << indent() << js_const_type_ << \"callback = this._reqs[this.seqid()] || function() {};\" << endl;",
                "         f_service_ << indent() << \"delete this._reqs[this.seqid()];\" << endl;",
                "@@ -1579,3 +1614,3 @@ void t_js_generator::generate_service_client(t_service* tservice) {",
                "       } else if (gen_es6_) {",
                "-        f_service_ << indent() << \"var self = this;\" << endl;",
                "+        f_service_ << indent() << js_const_type_ << \"self = this;\" << endl;",
                "         if((*f_iter)->is_oneway()) {",
                "@@ -1586,3 +1621,3 @@ void t_js_generator::generate_service_client(t_service* tservice) {",
                "           indent_up();",
                "-          f_service_ << indent() << \"var error = null, result = null;\" << endl;",
                "+          f_service_ << indent() << js_let_type_ << \"error = null, result = null;\" << endl;",
                "           f_service_ << indent() << \"try {\" << endl;",
                "@@ -1598,17 +1633,21 @@ void t_js_generator::generate_service_client(t_service* tservice) {",
                "         f_service_ << indent() << \"if (callback) {\" << endl;",
                "+        indent_up();",
                "         if((*f_iter)->is_oneway()) {",
                "-          f_service_ << indent() << \"  this.output.getTransport().flush(true, null);\" << endl;",
                "-          f_service_ << indent() << \"  callback();\" << endl;",
                "+          f_service_ << indent() << \"this.output.getTransport().flush(true, null);\" << endl;",
                "+          f_service_ << indent() << \"callback();\" << endl;",
                "         } else {",
                "-          f_service_ << indent() << \"  var self = this;\" << endl;",
                "-          f_service_ << indent() << \"  this.output.getTransport().flush(true, function() {\" << endl;",
                "-          f_service_ << indent() << \"    var result = null;\" << endl;",
                "-          f_service_ << indent() << \"    try {\" << endl;",
                "-          f_service_ << indent() << \"      result = self.recv_\" << funname << \"();\" << endl;",
                "-          f_service_ << indent() << \"    } catch (e) {\" << endl;",
                "-          f_service_ << indent() << \"      result = e;\" << endl;",
                "-          f_service_ << indent() << \"    }\" << endl;",
                "-          f_service_ << indent() << \"    callback(result);\" << endl;",
                "-          f_service_ << indent() << \"  });\" << endl;",
                "+          f_service_ << indent() << js_const_type_ << \"self = this;\" << endl;",
                "+          f_service_ << indent() << \"this.output.getTransport().flush(true, function() {\" << endl;",
                "+          indent_up();",
                "+          f_service_ << indent() << js_let_type_ << \"result = null;\" << endl;",
                "+          f_service_ << indent() << \"try {\" << endl;",
                "+          f_service_ << indent() << \"  result = self.recv_\" << funname << \"();\" << endl;",
                "+          f_service_ << indent() << \"} catch (e) {\" << endl;",
                "+          f_service_ << indent() << \"  result = e;\" << endl;",
                "+          f_service_ << indent() << \"}\" << endl;",
                "+          f_service_ << indent() << \"callback(result);\" << endl;",
                "+          indent_down();",
                "+          f_service_ << indent() << \"});\" << endl;",
                "         }",
                "+        indent_down();",
                "         f_service_ << indent() << \"} else {\" << endl;",
                "@@ -1673,17 +1712,19 @@ void t_js_generator::generate_service_client(t_service* tservice) {",
                "       if (gen_node_) {",
                "-        f_service_ << indent() << \"var callback = this._reqs[rseqid] || function() {};\" << endl",
                "+        f_service_ << indent() << js_const_type_ << \"callback = this._reqs[rseqid] || function() {};\" << endl",
                "                    << indent() << \"delete this._reqs[rseqid];\" << endl;",
                "       } else {",
                "-        f_service_ << indent() << \"var ret = this.input.readMessageBegin();\" << endl << indent()",
                "-                   << \"var fname = ret.fname;\" << endl << indent() << \"var mtype = ret.mtype;\"",
                "-                   << endl << indent() << \"var rseqid = ret.rseqid;\" << endl;",
                "+        f_service_ << indent() << js_const_type_ << \"ret = this.input.readMessageBegin();\" << endl",
                "+                   << indent() << js_const_type_ << \"mtype = ret.mtype;\" << endl;",
                "       }",
                "-      f_service_ << indent() << \"if (mtype == Thrift.MessageType.EXCEPTION) {\" << endl << indent()",
                "-                 << \"  var x = new Thrift.TApplicationException();\" << endl << indent()",
                "-                 << \"  x.read(\" << inputVar << \");\" << endl << indent() << \"  \" << inputVar",
                "-                 << \".readMessageEnd();\" << endl << indent() << \"  \" << render_recv_throw(\"x\")",
                "-                 << endl << indent() << \"}\" << endl;",
                "+      f_service_ << indent() << \"if (mtype == Thrift.MessageType.EXCEPTION) {\" << endl;",
                "-      f_service_ << indent() << \"var result = new \" << resultname << \"();\" << endl << indent()",
                "+      indent_up();",
                "+      f_service_ << indent() << js_const_type_ << \"x = new Thrift.TApplicationException();\" << endl",
                "+                 << indent() << \"x.read(\" << inputVar << \");\" << endl",
                "+                 << indent() << inputVar << \".readMessageEnd();\" << endl",
                "+                 << indent() << render_recv_throw(\"x\") << endl;",
                "+      scope_down(f_service_);",
                "+",
                "+      f_service_ << indent() << js_const_type_ << \"result = new \" << resultname << \"();\" << endl << indent()",
                "                  << \"result.read(\" << inputVar << \");\" << endl;",
                "@@ -1825,5 +1866,2 @@ void t_js_generator::generate_deserialize_container(ostream& out, t_type* ttype,",
                "   string size = tmp(\"_size\");",
                "-  string ktype = tmp(\"_ktype\");",
                "-  string vtype = tmp(\"_vtype\");",
                "-  string etype = tmp(\"_etype\");",
                "   string rtmp3 = tmp(\"_rtmp3\");",
                "@@ -1831,8 +1869,2 @@ void t_js_generator::generate_deserialize_container(ostream& out, t_type* ttype,",
                "   t_field fsize(g_type_i32, size);",
                "-  t_field fktype(g_type_i8, ktype);",
                "-  t_field fvtype(g_type_i8, vtype);",
                "-  t_field fetype(g_type_i8, etype);",
                "-",
                "-  out << indent() << \"var \" << size << \" = 0;\" << endl;",
                "-  out << indent() << \"var \" << rtmp3 << \";\" << endl;",
                "@@ -1840,9 +1872,6 @@ void t_js_generator::generate_deserialize_container(ostream& out, t_type* ttype,",
                "   if (ttype->is_map()) {",
                "-    out << indent() << prefix << \" = {};\" << endl << indent() << \"var \" << ktype << \" = 0;\" << endl",
                "-        << indent() << \"var \" << vtype << \" = 0;\" << endl;",
                "+    out << indent() << prefix << \" = {};\" << endl;",
                "-    out << indent() << rtmp3 << \" = input.readMapBegin();\" << endl;",
                "-    out << indent() << ktype << \" = \" << rtmp3 << \".ktype;\" << endl;",
                "-    out << indent() << vtype << \" = \" << rtmp3 << \".vtype;\" << endl;",
                "-    out << indent() << size << \" = \" << rtmp3 << \".size;\" << endl;",
                "+    out << indent() << js_const_type_ << rtmp3 << \" = input.readMapBegin();\" << endl;",
                "+    out << indent() << js_const_type_ << size << \" = \" << rtmp3 << \".size || 0;\" << endl;",
                "@@ -1850,5 +1879,5 @@ void t_js_generator::generate_deserialize_container(ostream& out, t_type* ttype,",
                "-    out << indent() << prefix << \" = [];\" << endl << indent() << \"var \" << etype << \" = 0;\" << endl",
                "-        << indent() << rtmp3 << \" = input.readSetBegin();\" << endl << indent() << etype << \" = \"",
                "-        << rtmp3 << \".etype;\" << endl << indent() << size << \" = \" << rtmp3 << \".size;\" << endl;",
                "+    out << indent() << prefix << \" = [];\" << endl",
                "+        << indent() << js_const_type_ << rtmp3 << \" = input.readSetBegin();\" << endl",
                "+        << indent() << js_const_type_ << size << \" = \" << rtmp3 << \".size || 0;\" << endl;",
                "@@ -1856,5 +1885,5 @@ void t_js_generator::generate_deserialize_container(ostream& out, t_type* ttype,",
                "-    out << indent() << prefix << \" = [];\" << endl << indent() << \"var \" << etype << \" = 0;\" << endl",
                "-        << indent() << rtmp3 << \" = input.readListBegin();\" << endl << indent() << etype << \" = \"",
                "-        << rtmp3 << \".etype;\" << endl << indent() << size << \" = \" << rtmp3 << \".size;\" << endl;",
                "+    out << indent() << prefix << \" = [];\" << endl",
                "+        << indent() << js_const_type_ << rtmp3 << \" = input.readListBegin();\" << endl",
                "+        << indent() << js_const_type_ << size << \" = \" << rtmp3 << \".size || 0;\" << endl;",
                "   }",
                "@@ -1863,5 +1892,5 @@ void t_js_generator::generate_deserialize_container(ostream& out, t_type* ttype,",
                "   string i = tmp(\"_i\");",
                "-  indent(out) << \"for (var \" << i << \" = 0; \" << i << \" < \" << size << \"; ++\" << i << \")\" << endl;",
                "+  indent(out) << \"for (\" << js_let_type_ << i << \" = 0; \" << i << \" < \" << size << \"; ++\" << i << \") {\" << endl;",
                "-  scope_up(out);",
                "+  indent_up();",
                "@@ -1916,3 +1945,3 @@ void t_js_generator::generate_deserialize_set_element(ostream& out, t_set* tset,",
                "-  indent(out) << \"var \" << elem << \" = null;\" << endl;",
                "+  indent(out) << js_let_type_ << elem << \" = null;\" << endl;",
                "@@ -1929,3 +1958,3 @@ void t_js_generator::generate_deserialize_list_element(ostream& out,",
                "-  indent(out) << \"var \" << elem << \" = null;\" << endl;",
                "+  indent(out) << js_let_type_ << elem << \" = null;\" << endl;",
                "@@ -2039,7 +2068,7 @@ void t_js_generator::generate_serialize_container(ostream& out, t_type* ttype, s",
                "     string viter = tmp(\"viter\");",
                "-    indent(out) << \"for (var \" << kiter << \" in \" << prefix << \")\" << endl;",
                "-    scope_up(out);",
                "-    indent(out) << \"if (\" << prefix << \".hasOwnProperty(\" << kiter << \"))\" << endl;",
                "-    scope_up(out);",
                "-    indent(out) << \"var \" << viter << \" = \" << prefix << \"[\" << kiter << \"];\" << endl;",
                "+    indent(out) << \"for (\" << js_let_type_ << kiter << \" in \" << prefix << \") {\" << endl;",
                "+    indent_up();",
                "+    indent(out) << \"if (\" << prefix << \".hasOwnProperty(\" << kiter << \")) {\" << endl;",
                "+    indent_up();",
                "+    indent(out) << js_let_type_ << viter << \" = \" << prefix << \"[\" << kiter << \"];\" << endl;",
                "     generate_serialize_map_element(out, (t_map*)ttype, kiter, viter);",
                "@@ -2050,6 +2079,6 @@ void t_js_generator::generate_serialize_container(ostream& out, t_type* ttype, s",
                "     string iter = tmp(\"iter\");",
                "-    indent(out) << \"for (var \" << iter << \" in \" << prefix << \")\" << endl;",
                "-    scope_up(out);",
                "-    indent(out) << \"if (\" << prefix << \".hasOwnProperty(\" << iter << \"))\" << endl;",
                "-    scope_up(out);",
                "+    indent(out) << \"for (\" << js_let_type_ << iter << \" in \" << prefix << \") {\" << endl;",
                "+    indent_up();",
                "+    indent(out) << \"if (\" << prefix << \".hasOwnProperty(\" << iter << \")) {\" << endl;",
                "+    indent_up();",
                "     indent(out) << iter << \" = \" << prefix << \"[\" << iter << \"];\" << endl;",
                "@@ -2061,6 +2090,6 @@ void t_js_generator::generate_serialize_container(ostream& out, t_type* ttype, s",
                "     string iter = tmp(\"iter\");",
                "-    indent(out) << \"for (var \" << iter << \" in \" << prefix << \")\" << endl;",
                "-    scope_up(out);",
                "-    indent(out) << \"if (\" << prefix << \".hasOwnProperty(\" << iter << \"))\" << endl;",
                "-    scope_up(out);",
                "+    indent(out) << \"for (\" << js_let_type_ << iter << \" in \" << prefix << \") {\" << endl;",
                "+    indent_up();",
                "+    indent(out) << \"if (\" << prefix << \".hasOwnProperty(\" << iter << \")) {\" << endl;",
                "+    indent_up();",
                "     indent(out) << iter << \" = \" << prefix << \"[\" << iter << \"];\" << endl;",
                "@@ -2120,3 +2149,3 @@ string t_js_generator::declare_field(t_field* tfield, bool init, bool obj) {",
                "   if (!obj) {",
                "-    result = \"var \" + tfield->get_name();",
                "+    result = js_let_type_ + tfield->get_name();",
                "   }",
                "diff --git a/lib/js/Gruntfile.js b/lib/js/Gruntfile.js",
                "index 1dcead650..fd290d29e 100644",
                "--- a/lib/js/Gruntfile.js",
                "+++ b/lib/js/Gruntfile.js",
                "@@ -5,2 +5,3 @@",
                " // Grunt Setup -  npm install  //reads the ./package.json and installs project dependencies",
                "+// Run grunt -    npx grunt  // uses project-local installed version of grunt (from package.json)",
                "@@ -40,3 +41,3 @@ module.exports = function(grunt) {",
                "       InstallThriftJS: {",
                "-        command: 'mkdir test/build; mkdir test/build/js; mkdir test/build/js/lib; cp src/thrift.js test/build/js/thrift.js'",
                "+        command: 'mkdir -p test/build/js/lib; cp src/thrift.js test/build/js/thrift.js'",
                "       },",
                "@@ -49,3 +50,15 @@ module.exports = function(grunt) {",
                "       ThriftGen: {",
                "-        command: '../../compiler/cpp/thrift -gen js -gen js:node -o test ../../test/ThriftTest.thrift'",
                "+        command: [",
                "+          'mkdir -p test/gen-js',",
                "+          '../../compiler/cpp/thrift -gen js --out test/gen-js ../../test/ThriftTest.thrift',",
                "+          '../../compiler/cpp/thrift -gen js --out test/gen-js ../../test/JsDeepConstructorTest.thrift',",
                "+          'mkdir -p test/gen-js-jquery',",
                "+          '../../compiler/cpp/thrift -gen js:jquery --out test/gen-js-jquery ../../test/ThriftTest.thrift',",
                "+          'mkdir -p test/gen-nodejs',",
                "+          '../../compiler/cpp/thrift -gen js:node --out test/gen-nodejs ../../test/ThriftTest.thrift',",
                "+          'mkdir -p test/gen-js-es6',",
                "+          '../../compiler/cpp/thrift -gen js:es6 --out test/gen-js-es6 ../../test/ThriftTest.thrift',",
                "+          'mkdir -p test/gen-nodejs-es6',",
                "+          '../../compiler/cpp/thrift -gen js:node,es6 --out ./test/gen-nodejs-es6 ../../test/ThriftTest.thrift',",
                "+        ].join(' && ')",
                "       },",
                "@@ -60,5 +73,2 @@ module.exports = function(grunt) {",
                "       },",
                "-      ThriftGenES6: {",
                "-        command: '../../compiler/cpp/thrift -gen js -gen js:es6 -o test ../../test/ThriftTest.thrift'",
                "-      },",
                "       ThriftTestServer: {",
                "@@ -73,2 +83,12 @@ module.exports = function(grunt) {",
                "       },",
                "+      ThriftTestServerES6: {",
                "+        options: {",
                "+          async: true,",
                "+          execOptions: {",
                "+            cwd: \"./test\",",
                "+            env: {NODE_PATH: \"../../nodejs/lib:../../../node_modules\"}",
                "+          }",
                "+        },",
                "+        command: \"node server_http.js --es6\",",
                "+      },",
                "       ThriftTestServer_TLS: {",
                "@@ -83,2 +103,12 @@ module.exports = function(grunt) {",
                "       },",
                "+      ThriftTestServerES6_TLS: {",
                "+        options: {",
                "+          async: true,",
                "+          execOptions: {",
                "+            cwd: \"./test\",",
                "+            env: {NODE_PATH: \"../../nodejs/lib:../../../node_modules\"}",
                "+          }",
                "+        },",
                "+        command: \"node server_https.js --es6\",",
                "+      },",
                "     },",
                "@@ -88,4 +118,8 @@ module.exports = function(grunt) {",
                "           urls: [",
                "-            'http://localhost:8088/test-nojq.html'",
                "-          ]",
                "+            'http://localhost:8089/test-nojq.html'",
                "+          ],",
                "+          puppeteer: {",
                "+            headless: true,",
                "+            args: ['--no-sandbox'],",
                "+          },",
                "         }",
                "@@ -95,4 +129,8 @@ module.exports = function(grunt) {",
                "           urls: [",
                "-            'http://localhost:8088/test.html'",
                "-          ]",
                "+            'http://localhost:8089/test.html'",
                "+          ],",
                "+          puppeteer: {",
                "+            headless: true,",
                "+            args: ['--no-sandbox'],",
                "+          },",
                "         }",
                "@@ -101,6 +139,10 @@ module.exports = function(grunt) {",
                "         options: {",
                "-          '--ignore-ssl-errors': true,",
                "           urls: [",
                "-            'http://localhost:8088/test-double-rendering.html'",
                "-          ]",
                "+            'http://localhost:8089/test-double-rendering.html'",
                "+          ],",
                "+          puppeteer: {",
                "+            headless: true,",
                "+            args: ['--no-sandbox'],",
                "+            ignoreHTTPSErrors: true,",
                "+          },",
                "         }",
                "@@ -110,4 +152,8 @@ module.exports = function(grunt) {",
                "           urls: [",
                "-            'http://localhost:8088/testws.html'",
                "-          ]",
                "+            'http://localhost:8089/testws.html'",
                "+          ],",
                "+          puppeteer: {",
                "+            headless: true,",
                "+            args: ['--no-sandbox'],",
                "+          },",
                "         }",
                "@@ -116,6 +162,10 @@ module.exports = function(grunt) {",
                "         options: {",
                "-          '--ignore-ssl-errors': true,",
                "           urls: [",
                "-            'https://localhost:8089/test-nojq.html'",
                "-          ]",
                "+            'https://localhost:8091/test-nojq.html'",
                "+          ],",
                "+          puppeteer: {",
                "+            headless: true,",
                "+            args: ['--no-sandbox'],",
                "+            ignoreHTTPSErrors: true,",
                "+          },",
                "         }",
                "@@ -124,6 +174,10 @@ module.exports = function(grunt) {",
                "         options: {",
                "-          '--ignore-ssl-errors': true,",
                "           urls: [",
                "-            'https://localhost:8089/test.html'",
                "-          ]",
                "+            'https://localhost:8091/test.html'",
                "+          ],",
                "+          puppeteer: {",
                "+            headless: true,",
                "+            args: ['--no-sandbox'],",
                "+            ignoreHTTPSErrors: true,",
                "+          },",
                "         }",
                "@@ -132,6 +186,10 @@ module.exports = function(grunt) {",
                "         options: {",
                "-          '--ignore-ssl-errors': true,",
                "           urls: [",
                "-            'https://localhost:8089/testws.html'",
                "-          ]",
                "+            'https://localhost:8091/testws.html'",
                "+          ],",
                "+          puppeteer: {",
                "+            headless: true,",
                "+            args: ['--no-sandbox'],",
                "+            ignoreHTTPSErrors: true,",
                "+          },",
                "         }",
                "@@ -141,4 +199,8 @@ module.exports = function(grunt) {",
                "           urls: [",
                "-            'http://localhost:8088/test-deep-constructor.html'",
                "-          ]",
                "+            'http://localhost:8089/test-deep-constructor.html'",
                "+          ],",
                "+          puppeteer: {",
                "+            headless: true,",
                "+            args: ['--no-sandbox'],",
                "+          },",
                "         }",
                "@@ -149,3 +211,7 @@ module.exports = function(grunt) {",
                "             'http://localhost:8088/test-es6.html'",
                "-          ]",
                "+          ],",
                "+          puppeteer: {",
                "+            headless: true,",
                "+            args: ['--no-sandbox'],",
                "+          },",
                "         }",
                "@@ -154,13 +220,30 @@ module.exports = function(grunt) {",
                "     jshint: {",
                "-      files: ['Gruntfile.js', 'src/**/*.js', 'test/*.js'],",
                "-      options: {",
                "-        // options here to override JSHint defaults",
                "-        globals: {",
                "-          jQuery: true,",
                "-          console: true,",
                "-          module: true,",
                "-          document: true",
                "+      // The main thrift library file. not es6 yet :(",
                "+      lib: {",
                "+        src: ['src/**/*.js'],",
                "+        options: {",
                "+          // options here to override JSHint defaults",
                "+          globals: {",
                "+            jQuery: true,",
                "+            console: true,",
                "+            module: true,",
                "+            document: true,",
                "+          },",
                "         }",
                "-      }",
                "-    },",
                "+      },",
                "+      // The test files use es6",
                "+      test: {",
                "+        src: ['Gruntfile.js', 'test/*.js'],",
                "+        options: {",
                "+          // options here to override JSHint defaults",
                "+          globals: {",
                "+            jQuery: true,",
                "+            console: true,",
                "+            module: true,",
                "+            document: true,",
                "+          },",
                "+          esversion: 6,",
                "+        }",
                "+      },",
                "+    }",
                "   });",
                "@@ -181,13 +264,22 @@ module.exports = function(grunt) {",
                "-  grunt.registerTask('test', ['jshint', 'shell:InstallThriftJS', 'shell:InstallThriftNodeJSDep', 'shell:ThriftGen',",
                "-                              'shell:InstallTestLibs',",
                "-                              'shell:ThriftTestServer', 'shell:ThriftTestServer_TLS',",
                "-                              'wait',",
                "-                              'shell:ThriftGenDeepConstructor', 'qunit:ThriftDeepConstructor',",
                "-                              'qunit:ThriftJS', 'qunit:ThriftJS_TLS',",
                "-                              'qunit:ThriftWS',",
                "-                              'shell:ThriftGenJQ', 'qunit:ThriftJSJQ', 'qunit:ThriftJSJQ_TLS',",
                "-                              'shell:ThriftGenES6', 'qunit:ThriftWSES6',",
                "-                              'shell:ThriftTestServer:kill', 'shell:ThriftTestServer_TLS:kill',",
                "-                             ]);",
                "+  grunt.registerTask('installAndGenerate', [",
                "+    'shell:InstallThriftJS', 'shell:InstallThriftNodeJSDep', 'shell:ThriftGen',",
                "+    'shell:ThriftGenDeepConstructor',",
                "+    'shell:InstallTestLibs',",
                "+  ]);",
                "+",
                "+  grunt.registerTask('test', [",
                "+    'jshint',",
                "+    'installAndGenerate',",
                "+    'shell:ThriftTestServer', 'shell:ThriftTestServer_TLS',",
                "+    'shell:ThriftTestServerES6', 'shell:ThriftTestServerES6_TLS',",
                "+    'wait',",
                "+    'qunit:ThriftDeepConstructor',",
                "+    'qunit:ThriftJS', 'qunit:ThriftJS_TLS',",
                "+    'qunit:ThriftWS',",
                "+    'qunit:ThriftJSJQ', 'qunit:ThriftJSJQ_TLS',",
                "+    'qunit:ThriftWSES6',",
                "+    'shell:ThriftTestServer:kill', 'shell:ThriftTestServer_TLS:kill',",
                "+    'shell:ThriftTestServerES6:kill', 'shell:ThriftTestServerES6_TLS:kill',",
                "+  ]);",
                "   grunt.registerTask('default', ['test', 'concat', 'uglify', 'jsdoc']);",
                "diff --git a/lib/js/package-lock.json b/lib/js/package-lock.json",
                "index 02347cfa5..f0943b022 100644",
                "--- a/lib/js/package-lock.json",
                "+++ b/lib/js/package-lock.json",
                "@@ -11,12 +11,9 @@",
                "     },",
                "-    \"ajv\": {",
                "-      \"version\": \"5.5.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-5.5.2.tgz\",",
                "-      \"integrity\": \"sha1-c7Xuyj+rZT49P5Qis0GtQiBdyWU=\",",
                "+    \"agent-base\": {",
                "+      \"version\": \"4.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/agent-base/-/agent-base-4.2.1.tgz\",",
                "+      \"integrity\": \"sha512-JVwXMr9nHYTUXsBFKUqhJwvlcYU/blreOEUkhNR2eXZIvwd+c+o5V4MgDPKWnMS/56awN3TRzIP+KoPn+roQtg==\",",
                "       \"dev\": true,",
                "       \"requires\": {",
                "-        \"co\": \"4.6.0\",",
                "-        \"fast-deep-equal\": \"1.1.0\",",
                "-        \"fast-json-stable-stringify\": \"2.0.0\",",
                "-        \"json-schema-traverse\": \"0.3.1\"",
                "+        \"es6-promisify\": \"5.0.0\"",
                "       }",
                "@@ -69,14 +66,2 @@",
                "     },",
                "-    \"asn1\": {",
                "-      \"version\": \"0.2.3\",",
                "-      \"resolved\": \"https://registry.npmjs.org/asn1/-/asn1-0.2.3.tgz\",",
                "-      \"integrity\": \"sha1-2sh4dxPJlmhJ/IGAd36+nB3fO4Y=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"assert-plus\": {",
                "-      \"version\": \"1.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz\",",
                "-      \"integrity\": \"sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"async\": {",
                "@@ -87,18 +72,6 @@",
                "     },",
                "-    \"asynckit\": {",
                "-      \"version\": \"0.4.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",",
                "-      \"integrity\": \"sha1-x57Zf380y48robyXkLzDZkdLS3k=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"aws-sign2\": {",
                "-      \"version\": \"0.7.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz\",",
                "-      \"integrity\": \"sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"aws4\": {",
                "-      \"version\": \"1.6.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/aws4/-/aws4-1.6.0.tgz\",",
                "-      \"integrity\": \"sha1-g+9cqGCysy5KDe7e6MdxudtXRx4=\",",
                "+    \"async-limiter\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/async-limiter/-/async-limiter-1.0.0.tgz\",",
                "+      \"integrity\": \"sha512-jp/uFnooOiO+L211eZOoSyzpOITMXx1rBITauYykG3BRYPu8h0UcxsPNB04RR5vo4Tyz3+ay17tR6JVf9qzYWg==\",",
                "       \"dev\": true",
                "@@ -116,12 +89,2 @@",
                "     },",
                "-    \"bcrypt-pbkdf\": {",
                "-      \"version\": \"1.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.1.tgz\",",
                "-      \"integrity\": \"sha1-Y7xdy2EzG5K8Bf1SiVPDNGKgb40=\",",
                "-      \"dev\": true,",
                "-      \"optional\": true,",
                "-      \"requires\": {",
                "-        \"tweetnacl\": \"0.14.5\"",
                "-      }",
                "-    },",
                "     \"bluebird\": {",
                "@@ -131,11 +94,2 @@",
                "     },",
                "-    \"boom\": {",
                "-      \"version\": \"4.3.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/boom/-/boom-4.3.1.tgz\",",
                "-      \"integrity\": \"sha1-T4owBctKfjiJ90kDD9JbluAdLjE=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"hoek\": \"4.2.1\"",
                "-      }",
                "-    },",
                "     \"brace-expansion\": {",
                "@@ -159,2 +113,8 @@",
                "     },",
                "+    \"buffer-from\": {",
                "+      \"version\": \"1.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz\",",
                "+      \"integrity\": \"sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A==\",",
                "+      \"dev\": true",
                "+    },",
                "     \"buffer-shims\": {",
                "@@ -187,8 +147,2 @@",
                "     },",
                "-    \"caseless\": {",
                "-      \"version\": \"0.12.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz\",",
                "-      \"integrity\": \"sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"catharsis\": {",
                "@@ -270,8 +224,2 @@",
                "     },",
                "-    \"co\": {",
                "-      \"version\": \"4.6.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/co/-/co-4.6.0.tgz\",",
                "-      \"integrity\": \"sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"coffeescript\": {",
                "@@ -288,11 +236,2 @@",
                "     },",
                "-    \"combined-stream\": {",
                "-      \"version\": \"1.0.6\",",
                "-      \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.6.tgz\",",
                "-      \"integrity\": \"sha1-cj599ugBrFYTETp+RFqbactjKBg=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"delayed-stream\": \"1.0.0\"",
                "-      }",
                "-    },",
                "     \"concat-map\": {",
                "@@ -392,22 +331,2 @@",
                "     },",
                "-    \"cryptiles\": {",
                "-      \"version\": \"3.1.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/cryptiles/-/cryptiles-3.1.2.tgz\",",
                "-      \"integrity\": \"sha1-qJ+7Ig9c4l7FboxKqKT9e1sNKf4=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"boom\": \"5.2.0\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"boom\": {",
                "-          \"version\": \"5.2.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/boom/-/boom-5.2.0.tgz\",",
                "-          \"integrity\": \"sha1-XdnabuOl8wIHdDYpDLcX0/SlTgI=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"hoek\": \"4.2.1\"",
                "-          }",
                "-        }",
                "-      }",
                "-    },",
                "     \"currently-unhandled\": {",
                "@@ -421,11 +340,2 @@",
                "     },",
                "-    \"dashdash\": {",
                "-      \"version\": \"1.14.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz\",",
                "-      \"integrity\": \"sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"assert-plus\": \"1.0.0\"",
                "-      }",
                "-    },",
                "     \"date-now\": {",
                "@@ -447,5 +357,5 @@",
                "     \"debug\": {",
                "-      \"version\": \"2.6.9\",",
                "-      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",",
                "-      \"integrity\": \"sha1-XRKFFd8TT/Mn6QpMk/Tgd6U2NB8=\",",
                "+      \"version\": \"3.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.1.0.tgz\",",
                "+      \"integrity\": \"sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==\",",
                "       \"dev\": true,",
                "@@ -461,8 +371,2 @@",
                "     },",
                "-    \"delayed-stream\": {",
                "-      \"version\": \"1.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",",
                "-      \"integrity\": \"sha1-3zrhmayt+31ECqrgsp4icrJOxhk=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"dom-serializer\": {",
                "@@ -516,12 +420,2 @@",
                "     },",
                "-    \"ecc-jsbn\": {",
                "-      \"version\": \"0.1.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.1.tgz\",",
                "-      \"integrity\": \"sha1-D8c6ntXw1Tw4GTOYUj735UN3dQU=\",",
                "-      \"dev\": true,",
                "-      \"optional\": true,",
                "-      \"requires\": {",
                "-        \"jsbn\": \"0.1.1\"",
                "-      }",
                "-    },",
                "     \"entities\": {",
                "@@ -547,2 +441,11 @@",
                "     },",
                "+    \"es6-promisify\": {",
                "+      \"version\": \"5.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/es6-promisify/-/es6-promisify-5.0.0.tgz\",",
                "+      \"integrity\": \"sha1-UQnWLz5W6pZ8S2NQWu8IKRyKUgM=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"es6-promise\": \"4.2.4\"",
                "+      }",
                "+    },",
                "     \"escape-string-regexp\": {",
                "@@ -570,17 +473,11 @@",
                "     },",
                "-    \"extend\": {",
                "-      \"version\": \"3.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/extend/-/extend-3.0.1.tgz\",",
                "-      \"integrity\": \"sha1-p1Xqe8Gt/MWjHOfnYtuq3F5jZEQ=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"extract-zip\": {",
                "-      \"version\": \"1.6.6\",",
                "-      \"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-1.6.6.tgz\",",
                "-      \"integrity\": \"sha1-EpDt6NINCHK0Kf0/NRyhKOxe+Fw=\",",
                "+      \"version\": \"1.6.7\",",
                "+      \"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-1.6.7.tgz\",",
                "+      \"integrity\": \"sha1-qEC0uK9kAyZMjbV/Txp0Mz74H+k=\",",
                "       \"dev\": true,",
                "       \"requires\": {",
                "-        \"concat-stream\": \"1.6.0\",",
                "+        \"concat-stream\": \"1.6.2\",",
                "         \"debug\": \"2.6.9\",",
                "-        \"mkdirp\": \"0.5.0\",",
                "+        \"mkdirp\": \"0.5.1\",",
                "         \"yauzl\": \"2.4.1\"",
                "@@ -588,9 +485,51 @@",
                "       \"dependencies\": {",
                "-        \"mkdirp\": {",
                "-          \"version\": \"0.5.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.0.tgz\",",
                "-          \"integrity\": \"sha1-HXMHam35hs2TROFecfzAWkyavxI=\",",
                "+        \"concat-stream\": {",
                "+          \"version\": \"1.6.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz\",",
                "+          \"integrity\": \"sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"buffer-from\": \"1.1.1\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"readable-stream\": \"2.3.6\",",
                "+            \"typedarray\": \"0.0.6\"",
                "+          }",
                "+        },",
                "+        \"debug\": {",
                "+          \"version\": \"2.6.9\",",
                "+          \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",",
                "+          \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",",
                "           \"dev\": true,",
                "           \"requires\": {",
                "-            \"minimist\": \"0.0.8\"",
                "+            \"ms\": \"2.0.0\"",
                "+          }",
                "+        },",
                "+        \"isarray\": {",
                "+          \"version\": \"1.0.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\",",
                "+          \"integrity\": \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"readable-stream\": {",
                "+          \"version\": \"2.3.6\",",
                "+          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",",
                "+          \"integrity\": \"sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"core-util-is\": \"1.0.2\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"isarray\": \"1.0.0\",",
                "+            \"process-nextick-args\": \"2.0.0\",",
                "+            \"safe-buffer\": \"5.1.1\",",
                "+            \"string_decoder\": \"1.1.1\",",
                "+            \"util-deprecate\": \"1.0.2\"",
                "+          }",
                "+        },",
                "+        \"string_decoder\": {",
                "+          \"version\": \"1.1.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",",
                "+          \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"safe-buffer\": \"5.1.1\"",
                "           }",
                "@@ -599,20 +538,2 @@",
                "     },",
                "-    \"extsprintf\": {",
                "-      \"version\": \"1.3.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz\",",
                "-      \"integrity\": \"sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"fast-deep-equal\": {",
                "-      \"version\": \"1.1.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-1.1.0.tgz\",",
                "-      \"integrity\": \"sha1-wFNHeBfIa1HaqFPIHgWbcz0CNhQ=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"fast-json-stable-stringify\": {",
                "-      \"version\": \"2.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz\",",
                "-      \"integrity\": \"sha1-1RQsDK7msRifh9OnYREGT4bIu/I=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"fd-slicer\": {",
                "@@ -670,41 +591,2 @@",
                "     },",
                "-    \"forever-agent\": {",
                "-      \"version\": \"0.6.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz\",",
                "-      \"integrity\": \"sha1-+8cfDEGt6zf5bFd60e1C2P2sypE=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"form-data\": {",
                "-      \"version\": \"2.3.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-2.3.2.tgz\",",
                "-      \"integrity\": \"sha1-SXBJi+YEwgwAXU9cI67NIda0kJk=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"asynckit\": \"0.4.0\",",
                "-        \"combined-stream\": \"1.0.6\",",
                "-        \"mime-types\": \"2.1.18\"",
                "-      }",
                "-    },",
                "-    \"fs-extra\": {",
                "-      \"version\": \"1.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-1.0.0.tgz\",",
                "-      \"integrity\": \"sha1-zTzl9+fLYUWIP8rjGR6Yd/hYeVA=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"graceful-fs\": \"4.1.11\",",
                "-        \"jsonfile\": \"2.4.0\",",
                "-        \"klaw\": \"1.3.1\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"klaw\": {",
                "-          \"version\": \"1.3.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/klaw/-/klaw-1.3.1.tgz\",",
                "-          \"integrity\": \"sha1-QIhDO0azsbolnXh4XY6W9zugJDk=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"graceful-fs\": \"4.1.11\"",
                "-          }",
                "-        }",
                "-      }",
                "-    },",
                "     \"fs.realpath\": {",
                "@@ -727,11 +609,2 @@",
                "     },",
                "-    \"getpass\": {",
                "-      \"version\": \"0.1.7\",",
                "-      \"resolved\": \"https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz\",",
                "-      \"integrity\": \"sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"assert-plus\": \"1.0.0\"",
                "-      }",
                "-    },",
                "     \"glob\": {",
                "@@ -866,8 +739,18 @@",
                "     \"grunt-contrib-qunit\": {",
                "-      \"version\": \"1.3.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/grunt-contrib-qunit/-/grunt-contrib-qunit-1.3.0.tgz\",",
                "-      \"integrity\": \"sha1-naxijP1OyBWZhjPbc7Ur2z3byZ4=\",",
                "+      \"version\": \"3.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/grunt-contrib-qunit/-/grunt-contrib-qunit-3.0.1.tgz\",",
                "+      \"integrity\": \"sha512-s994+ipKwc+oUUIWaGIw1soyID4pExSGMd/cHQN5h0p8KbIjR1Le3ZC3giSDDKXtZFE0i+Obf0uIjNvjftX2Cw==\",",
                "       \"dev\": true,",
                "       \"requires\": {",
                "-        \"grunt-lib-phantomjs\": \"1.1.0\"",
                "+        \"eventemitter2\": \"5.0.1\",",
                "+        \"p-each-series\": \"1.0.0\",",
                "+        \"puppeteer\": \"1.7.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"eventemitter2\": {",
                "+          \"version\": \"5.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/eventemitter2/-/eventemitter2-5.0.1.tgz\",",
                "+          \"integrity\": \"sha1-YZegldX7a1folC9v1+qtY6CclFI=\",",
                "+          \"dev\": true",
                "+        }",
                "       }",
                "@@ -972,49 +855,2 @@",
                "     },",
                "-    \"grunt-lib-phantomjs\": {",
                "-      \"version\": \"1.1.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/grunt-lib-phantomjs/-/grunt-lib-phantomjs-1.1.0.tgz\",",
                "-      \"integrity\": \"sha1-np7c3Z/S3UDgwYHJQ3HVcqpe6tI=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"eventemitter2\": \"0.4.14\",",
                "-        \"phantomjs-prebuilt\": \"2.1.16\",",
                "-        \"rimraf\": \"2.6.2\",",
                "-        \"semver\": \"5.5.0\",",
                "-        \"temporary\": \"0.0.8\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"glob\": {",
                "-          \"version\": \"7.1.2\",",
                "-          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.2.tgz\",",
                "-          \"integrity\": \"sha1-wZyd+aAocC1nhhI4SmVSQExjbRU=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"fs.realpath\": \"1.0.0\",",
                "-            \"inflight\": \"1.0.6\",",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"minimatch\": \"3.0.4\",",
                "-            \"once\": \"1.4.0\",",
                "-            \"path-is-absolute\": \"1.0.1\"",
                "-          }",
                "-        },",
                "-        \"minimatch\": {",
                "-          \"version\": \"3.0.4\",",
                "-          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",",
                "-          \"integrity\": \"sha1-UWbihkV/AzBgZL5Ul+jbsMPTIIM=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"brace-expansion\": \"1.1.11\"",
                "-          }",
                "-        },",
                "-        \"rimraf\": {",
                "-          \"version\": \"2.6.2\",",
                "-          \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.6.2.tgz\",",
                "-          \"integrity\": \"sha1-LtgVDSShbqhlHm1u8PR8QVjOejY=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"glob\": \"7.1.2\"",
                "-          }",
                "-        }",
                "-      }",
                "-    },",
                "     \"grunt-shell-spawn\": {",
                "@@ -1039,18 +875,2 @@",
                "     },",
                "-    \"har-schema\": {",
                "-      \"version\": \"2.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz\",",
                "-      \"integrity\": \"sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"har-validator\": {",
                "-      \"version\": \"5.0.3\",",
                "-      \"resolved\": \"https://registry.npmjs.org/har-validator/-/har-validator-5.0.3.tgz\",",
                "-      \"integrity\": \"sha1-ukAsJmGU8VlW7xXg/PJCmT9qff0=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"ajv\": \"5.5.2\",",
                "-        \"har-schema\": \"2.0.0\"",
                "-      }",
                "-    },",
                "     \"has-ansi\": {",
                "@@ -1064,30 +884,2 @@",
                "     },",
                "-    \"hasha\": {",
                "-      \"version\": \"2.2.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/hasha/-/hasha-2.2.0.tgz\",",
                "-      \"integrity\": \"sha1-eNfL/B5tZjA/55g3NlmEUXsvbuE=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"is-stream\": \"1.1.0\",",
                "-        \"pinkie-promise\": \"2.0.1\"",
                "-      }",
                "-    },",
                "-    \"hawk\": {",
                "-      \"version\": \"6.0.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/hawk/-/hawk-6.0.2.tgz\",",
                "-      \"integrity\": \"sha1-r02RTrBl+bXOTZ0RwcshJu7MMDg=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"boom\": \"4.3.1\",",
                "-        \"cryptiles\": \"3.1.2\",",
                "-        \"hoek\": \"4.2.1\",",
                "-        \"sntp\": \"2.1.0\"",
                "-      }",
                "-    },",
                "-    \"hoek\": {",
                "-      \"version\": \"4.2.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/hoek/-/hoek-4.2.1.tgz\",",
                "-      \"integrity\": \"sha512-QLg82fGkfnJ/4iy1xZ81/9SIJiq1NGFUMGs6ParyjBZr6jW2Ufj/snDqTHixNlHdPNwN2RLVD0Pi3igeK9+JfA==\",",
                "-      \"dev\": true",
                "-    },",
                "     \"hooker\": {",
                "@@ -1117,11 +909,10 @@",
                "     },",
                "-    \"http-signature\": {",
                "-      \"version\": \"1.2.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz\",",
                "-      \"integrity\": \"sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=\",",
                "+    \"https-proxy-agent\": {",
                "+      \"version\": \"2.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-2.2.1.tgz\",",
                "+      \"integrity\": \"sha512-HPCTS1LW51bcyMYbxUIOO4HEOlQ1/1qRaFWcyxvwaqUS9TY88aoEuHUY33kuAh1YhVVaDQhLZsnPd+XNARWZlQ==\",",
                "       \"dev\": true,",
                "       \"requires\": {",
                "-        \"assert-plus\": \"1.0.0\",",
                "-        \"jsprim\": \"1.4.1\",",
                "-        \"sshpk\": \"1.13.1\"",
                "+        \"agent-base\": \"4.2.1\",",
                "+        \"debug\": \"3.1.0\"",
                "       }",
                "@@ -1189,14 +980,2 @@",
                "     },",
                "-    \"is-stream\": {",
                "-      \"version\": \"1.1.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz\",",
                "-      \"integrity\": \"sha1-EtSj3U5o4Lec6428hBc66A2RykQ=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"is-typedarray\": {",
                "-      \"version\": \"1.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz\",",
                "-      \"integrity\": \"sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"is-utf8\": {",
                "@@ -1219,8 +998,2 @@",
                "     },",
                "-    \"isstream\": {",
                "-      \"version\": \"0.1.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz\",",
                "-      \"integrity\": \"sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"js-yaml\": {",
                "@@ -1243,9 +1016,2 @@",
                "     },",
                "-    \"jsbn\": {",
                "-      \"version\": \"0.1.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz\",",
                "-      \"integrity\": \"sha1-peZUwuWi3rXyAdls77yoDA7y9RM=\",",
                "-      \"dev\": true,",
                "-      \"optional\": true",
                "-    },",
                "     \"jsdoc\": {",
                "@@ -1372,47 +1138,2 @@",
                "     },",
                "-    \"json-schema\": {",
                "-      \"version\": \"0.2.3\",",
                "-      \"resolved\": \"https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz\",",
                "-      \"integrity\": \"sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"json-schema-traverse\": {",
                "-      \"version\": \"0.3.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.3.1.tgz\",",
                "-      \"integrity\": \"sha1-NJptRMU6Ud6JtAgFxdXlm0F9M0A=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"json-stringify-safe\": {",
                "-      \"version\": \"5.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz\",",
                "-      \"integrity\": \"sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"jsonfile\": {",
                "-      \"version\": \"2.4.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/jsonfile/-/jsonfile-2.4.0.tgz\",",
                "-      \"integrity\": \"sha1-NzaitCi4e72gzIO1P6PWM6NcKug=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"graceful-fs\": \"4.1.11\"",
                "-      }",
                "-    },",
                "-    \"jsprim\": {",
                "-      \"version\": \"1.4.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz\",",
                "-      \"integrity\": \"sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"assert-plus\": \"1.0.0\",",
                "-        \"extsprintf\": \"1.3.0\",",
                "-        \"json-schema\": \"0.2.3\",",
                "-        \"verror\": \"1.10.0\"",
                "-      }",
                "-    },",
                "-    \"kew\": {",
                "-      \"version\": \"0.7.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/kew/-/kew-0.7.0.tgz\",",
                "-      \"integrity\": \"sha1-edk9LTM2PW/dKXCzNdkUGtWR15s=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"kind-of\": {",
                "@@ -1524,17 +1245,8 @@",
                "     },",
                "-    \"mime-db\": {",
                "-      \"version\": \"1.33.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.33.0.tgz\",",
                "-      \"integrity\": \"sha512-BHJ/EKruNIqJf/QahvxwQZXKygOQ256myeN/Ew+THcAa5q+PjyTTMMeNQC4DZw5AwfvelsUrA6B67NKMqXDbzQ==\",",
                "+    \"mime\": {",
                "+      \"version\": \"2.3.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-2.3.1.tgz\",",
                "+      \"integrity\": \"sha512-OEUllcVoydBHGN1z84yfQDimn58pZNNNXgZlHXSboxMlFvgI6MXSWpWKpFRra7H1HxpVhHTkrghfRW49k6yjeg==\",",
                "       \"dev\": true",
                "     },",
                "-    \"mime-types\": {",
                "-      \"version\": \"2.1.18\",",
                "-      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.18.tgz\",",
                "-      \"integrity\": \"sha512-lc/aahn+t4/SWV/qcmumYjymLsWfN3ELhpmVuUFjgsORruuZPVSwAQryq+HHGvO/SI2KVX26bx+En+zhM8g8hQ==\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"mime-db\": \"1.33.0\"",
                "-      }",
                "-    },",
                "     \"minimatch\": {",
                "@@ -1594,8 +1306,2 @@",
                "     },",
                "-    \"oauth-sign\": {",
                "-      \"version\": \"0.8.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.8.2.tgz\",",
                "-      \"integrity\": \"sha1-Rqarfwrq2N6unsBWV4C31O/rnUM=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"object-assign\": {",
                "@@ -1634,6 +1340,15 @@",
                "     },",
                "-    \"package\": {",
                "-      \"version\": \"1.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/package/-/package-1.0.1.tgz\",",
                "-      \"integrity\": \"sha1-0lofmeJQbcsn1nBLg9yooxLk7cw=\",",
                "+    \"p-each-series\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/p-each-series/-/p-each-series-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-kw89Et0fUOdDRFeiLNbwSsatf3E=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"p-reduce\": \"1.0.0\"",
                "+      }",
                "+    },",
                "+    \"p-reduce\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/p-reduce/-/p-reduce-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-GMKw3ZNqRpClKfgjH1ig/bakffo=\",",
                "       \"dev\": true",
                "@@ -1687,36 +1402,2 @@",
                "     },",
                "-    \"performance-now\": {",
                "-      \"version\": \"2.1.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz\",",
                "-      \"integrity\": \"sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"phantomjs-prebuilt\": {",
                "-      \"version\": \"2.1.16\",",
                "-      \"resolved\": \"https://registry.npmjs.org/phantomjs-prebuilt/-/phantomjs-prebuilt-2.1.16.tgz\",",
                "-      \"integrity\": \"sha1-79ISpKOWbTZHaE6ouniFSb4q7+8=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"es6-promise\": \"4.2.4\",",
                "-        \"extract-zip\": \"1.6.6\",",
                "-        \"fs-extra\": \"1.0.0\",",
                "-        \"hasha\": \"2.2.0\",",
                "-        \"kew\": \"0.7.0\",",
                "-        \"progress\": \"1.1.8\",",
                "-        \"request\": \"2.83.0\",",
                "-        \"request-progress\": \"2.0.1\",",
                "-        \"which\": \"1.3.0\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"which\": {",
                "-          \"version\": \"1.3.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/which/-/which-1.3.0.tgz\",",
                "-          \"integrity\": \"sha1-/wS9/AEO5UfXgL7DjhrBwnd9JTo=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"isexe\": \"2.0.0\"",
                "-          }",
                "-        }",
                "-      }",
                "-    },",
                "     \"pify\": {",
                "@@ -1759,5 +1440,11 @@",
                "     \"progress\": {",
                "-      \"version\": \"1.1.8\",",
                "-      \"resolved\": \"https://registry.npmjs.org/progress/-/progress-1.1.8.tgz\",",
                "-      \"integrity\": \"sha1-4mDHj2Fhzdmw5WzD4Khd4Xx6V74=\",",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/progress/-/progress-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-ihvjZr+Pwj2yvSPxDG/pILQ4nR8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"proxy-from-env\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-M8UDmPcOp+uW0h97gXYwpVeRx+4=\",",
                "       \"dev\": true",
                "@@ -1770,13 +1457,28 @@",
                "     },",
                "-    \"punycode\": {",
                "-      \"version\": \"1.4.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz\",",
                "-      \"integrity\": \"sha1-wNWmOycYgArY4esPpSachN1BhF4=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"qs\": {",
                "-      \"version\": \"6.5.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.5.1.tgz\",",
                "-      \"integrity\": \"sha1-NJzfbu+J7EXBLX1es/wMhwNDptg=\",",
                "-      \"dev\": true",
                "+    \"puppeteer\": {",
                "+      \"version\": \"1.7.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/puppeteer/-/puppeteer-1.7.0.tgz\",",
                "+      \"integrity\": \"sha512-f+1DxKHPqce6CXUBz2eVO2WcATeVeQSOPG9GYaGObEZDCiCEUwG+gogjMsrvn7he2wHTqNVb5p6RUrwmr8XFBA==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"debug\": \"3.1.0\",",
                "+        \"extract-zip\": \"1.6.7\",",
                "+        \"https-proxy-agent\": \"2.2.1\",",
                "+        \"mime\": \"2.3.1\",",
                "+        \"progress\": \"2.0.0\",",
                "+        \"proxy-from-env\": \"1.0.0\",",
                "+        \"rimraf\": \"2.6.2\",",
                "+        \"ws\": \"5.2.2\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"rimraf\": {",
                "+          \"version\": \"2.6.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.6.2.tgz\",",
                "+          \"integrity\": \"sha512-lreewLK/BlghmxtfH36YYVg1i8IAce4TI7oao75I1g245+6BctqTVQiBP3YUJ9C6DQOXJmkYR9X9fCLtCOJc5w==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"glob\": \"7.0.6\"",
                "+          }",
                "+        }",
                "+      }",
                "     },",
                "@@ -1840,41 +1542,2 @@",
                "     },",
                "-    \"request\": {",
                "-      \"version\": \"2.83.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/request/-/request-2.83.0.tgz\",",
                "-      \"integrity\": \"sha1-ygtl2gLtYpNYh4COb1EDgQNOM1Y=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"aws-sign2\": \"0.7.0\",",
                "-        \"aws4\": \"1.6.0\",",
                "-        \"caseless\": \"0.12.0\",",
                "-        \"combined-stream\": \"1.0.6\",",
                "-        \"extend\": \"3.0.1\",",
                "-        \"forever-agent\": \"0.6.1\",",
                "-        \"form-data\": \"2.3.2\",",
                "-        \"har-validator\": \"5.0.3\",",
                "-        \"hawk\": \"6.0.2\",",
                "-        \"http-signature\": \"1.2.0\",",
                "-        \"is-typedarray\": \"1.0.0\",",
                "-        \"isstream\": \"0.1.2\",",
                "-        \"json-stringify-safe\": \"5.0.1\",",
                "-        \"mime-types\": \"2.1.18\",",
                "-        \"oauth-sign\": \"0.8.2\",",
                "-        \"performance-now\": \"2.1.0\",",
                "-        \"qs\": \"6.5.1\",",
                "-        \"safe-buffer\": \"5.1.1\",",
                "-        \"stringstream\": \"0.0.5\",",
                "-        \"tough-cookie\": \"2.3.4\",",
                "-        \"tunnel-agent\": \"0.6.0\",",
                "-        \"uuid\": \"3.2.1\"",
                "-      }",
                "-    },",
                "-    \"request-progress\": {",
                "-      \"version\": \"2.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/request-progress/-/request-progress-2.0.1.tgz\",",
                "-      \"integrity\": \"sha1-XTa7V5YcZzqlt4jbyBQf3yO0Tgg=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"throttleit\": \"1.0.0\"",
                "-      }",
                "-    },",
                "     \"requizzle\": {",
                "@@ -1939,11 +1602,2 @@",
                "     },",
                "-    \"sntp\": {",
                "-      \"version\": \"2.1.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/sntp/-/sntp-2.1.0.tgz\",",
                "-      \"integrity\": \"sha1-LGzsFP7cIiJznK+bXD2F0cxaLMg=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"hoek\": \"4.2.1\"",
                "-      }",
                "-    },",
                "     \"source-map\": {",
                "@@ -1992,18 +1646,2 @@",
                "     },",
                "-    \"sshpk\": {",
                "-      \"version\": \"1.13.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/sshpk/-/sshpk-1.13.1.tgz\",",
                "-      \"integrity\": \"sha1-US322mKHFEMW3EwY/hzx2UBzm+M=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"asn1\": \"0.2.3\",",
                "-        \"assert-plus\": \"1.0.0\",",
                "-        \"bcrypt-pbkdf\": \"1.0.1\",",
                "-        \"dashdash\": \"1.14.1\",",
                "-        \"ecc-jsbn\": \"0.1.1\",",
                "-        \"getpass\": \"0.1.7\",",
                "-        \"jsbn\": \"0.1.1\",",
                "-        \"tweetnacl\": \"0.14.5\"",
                "-      }",
                "-    },",
                "     \"string_decoder\": {",
                "@@ -2014,8 +1652,2 @@",
                "     },",
                "-    \"stringstream\": {",
                "-      \"version\": \"0.0.5\",",
                "-      \"resolved\": \"https://registry.npmjs.org/stringstream/-/stringstream-0.0.5.tgz\",",
                "-      \"integrity\": \"sha1-TkhM1N5aC7vuGORjB3EKioFiGHg=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"strip-ansi\": {",
                "@@ -2069,26 +1701,2 @@",
                "     },",
                "-    \"temporary\": {",
                "-      \"version\": \"0.0.8\",",
                "-      \"resolved\": \"https://registry.npmjs.org/temporary/-/temporary-0.0.8.tgz\",",
                "-      \"integrity\": \"sha1-oYqYHSi6jKNgJ/s8MFOMPst0CsA=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"package\": \"1.0.1\"",
                "-      }",
                "-    },",
                "-    \"throttleit\": {",
                "-      \"version\": \"1.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/throttleit/-/throttleit-1.0.0.tgz\",",
                "-      \"integrity\": \"sha1-nnhYNtr0Z0MUWlmEtiaNgoUorGw=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"tough-cookie\": {",
                "-      \"version\": \"2.3.4\",",
                "-      \"resolved\": \"https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.3.4.tgz\",",
                "-      \"integrity\": \"sha512-TZ6TTfI5NtZnuyy/Kecv+CnoROnyXn2DN97LontgQpCwsX2XyLYCC0ENhYkehSOwAp8rTQKc/NUIF7BkQ5rKLA==\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"punycode\": \"1.4.1\"",
                "-      }",
                "-    },",
                "     \"trim-newlines\": {",
                "@@ -2099,18 +1707,2 @@",
                "     },",
                "-    \"tunnel-agent\": {",
                "-      \"version\": \"0.6.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz\",",
                "-      \"integrity\": \"sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"safe-buffer\": \"5.1.1\"",
                "-      }",
                "-    },",
                "-    \"tweetnacl\": {",
                "-      \"version\": \"0.14.5\",",
                "-      \"resolved\": \"https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz\",",
                "-      \"integrity\": \"sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=\",",
                "-      \"dev\": true,",
                "-      \"optional\": true",
                "-    },",
                "     \"typedarray\": {",
                "@@ -2189,8 +1781,2 @@",
                "     },",
                "-    \"uuid\": {",
                "-      \"version\": \"3.2.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-3.2.1.tgz\",",
                "-      \"integrity\": \"sha512-jZnMwlb9Iku/O3smGWvZhauCf6cvvpKi4BKRiliS3cxnI+Gz9j5MEpTz2UFuXiKPJocb7gnsLHwiS05ige5BEA==\",",
                "-      \"dev\": true",
                "-    },",
                "     \"validate-npm-package-license\": {",
                "@@ -2205,13 +1791,2 @@",
                "     },",
                "-    \"verror\": {",
                "-      \"version\": \"1.10.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/verror/-/verror-1.10.0.tgz\",",
                "-      \"integrity\": \"sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"assert-plus\": \"1.0.0\",",
                "-        \"core-util-is\": \"1.0.2\",",
                "-        \"extsprintf\": \"1.3.0\"",
                "-      }",
                "-    },",
                "     \"which\": {",
                "@@ -2243,2 +1818,11 @@",
                "     },",
                "+    \"ws\": {",
                "+      \"version\": \"5.2.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ws/-/ws-5.2.2.tgz\",",
                "+      \"integrity\": \"sha512-jaHFD6PFv6UgoIVda6qZllptQsMlDEJkTQcybzzXDYM1XO9Y8em691FGMPmM46WGyLU4z9KMgQN+qrux/nhlHA==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"async-limiter\": \"1.0.0\"",
                "+      }",
                "+    },",
                "     \"xmlcreate\": {",
                "diff --git a/lib/js/package.json b/lib/js/package.json",
                "index f3ed3e1e8..a59cdc484 100644",
                "--- a/lib/js/package.json",
                "+++ b/lib/js/package.json",
                "@@ -8,3 +8,3 @@",
                "     \"grunt-contrib-jshint\": \"^1.0.0\",",
                "-    \"grunt-contrib-qunit\": \"^1.2.0\",",
                "+    \"grunt-contrib-qunit\": \"^3.0.1\",",
                "     \"grunt-contrib-uglify\": \"^1.0.1\",",
                "diff --git a/package-lock.json b/package-lock.json",
                "index 4b1689963..7add8536e 100644",
                "--- a/package-lock.json",
                "+++ b/package-lock.json",
                "@@ -12,14 +12,2 @@",
                "     },",
                "-    \"ajv\": {",
                "-      \"version\": \"5.5.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-5.5.2.tgz\",",
                "-      \"integrity\": \"sha1-c7Xuyj+rZT49P5Qis0GtQiBdyWU=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"co\": \"4.6.0\",",
                "-        \"fast-deep-equal\": \"1.1.0\",",
                "-        \"fast-json-stable-stringify\": \"2.0.0\",",
                "-        \"json-schema-traverse\": \"0.3.1\"",
                "-      }",
                "-    },",
                "     \"align-text\": {",
                "@@ -72,14 +60,2 @@",
                "     },",
                "-    \"asn1\": {",
                "-      \"version\": \"0.2.3\",",
                "-      \"resolved\": \"https://registry.npmjs.org/asn1/-/asn1-0.2.3.tgz\",",
                "-      \"integrity\": \"sha1-2sh4dxPJlmhJ/IGAd36+nB3fO4Y=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"assert-plus\": {",
                "-      \"version\": \"1.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz\",",
                "-      \"integrity\": \"sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"async\": {",
                "@@ -95,20 +71,2 @@",
                "     },",
                "-    \"asynckit\": {",
                "-      \"version\": \"0.4.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",",
                "-      \"integrity\": \"sha1-x57Zf380y48robyXkLzDZkdLS3k=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"aws-sign2\": {",
                "-      \"version\": \"0.7.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz\",",
                "-      \"integrity\": \"sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"aws4\": {",
                "-      \"version\": \"1.6.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/aws4/-/aws4-1.6.0.tgz\",",
                "-      \"integrity\": \"sha1-g+9cqGCysy5KDe7e6MdxudtXRx4=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"babylon\": {",
                "@@ -125,12 +83,2 @@",
                "     },",
                "-    \"bcrypt-pbkdf\": {",
                "-      \"version\": \"1.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.1.tgz\",",
                "-      \"integrity\": \"sha1-Y7xdy2EzG5K8Bf1SiVPDNGKgb40=\",",
                "-      \"dev\": true,",
                "-      \"optional\": true,",
                "-      \"requires\": {",
                "-        \"tweetnacl\": \"0.14.5\"",
                "-      }",
                "-    },",
                "     \"bindings\": {",
                "@@ -184,11 +132,2 @@",
                "     },",
                "-    \"boom\": {",
                "-      \"version\": \"4.3.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/boom/-/boom-4.3.1.tgz\",",
                "-      \"integrity\": \"sha1-T4owBctKfjiJ90kDD9JbluAdLjE=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"hoek\": \"4.2.1\"",
                "-      }",
                "-    },",
                "     \"brace-expansion\": {",
                "@@ -216,8 +155,2 @@",
                "     },",
                "-    \"caseless\": {",
                "-      \"version\": \"0.12.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz\",",
                "-      \"integrity\": \"sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"catharsis\": {",
                "@@ -269,8 +202,2 @@",
                "     },",
                "-    \"co\": {",
                "-      \"version\": \"4.6.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/co/-/co-4.6.0.tgz\",",
                "-      \"integrity\": \"sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"code-point-at\": {",
                "@@ -281,11 +208,2 @@",
                "     },",
                "-    \"combined-stream\": {",
                "-      \"version\": \"1.0.6\",",
                "-      \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.6.tgz\",",
                "-      \"integrity\": \"sha1-cj599ugBrFYTETp+RFqbactjKBg=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"delayed-stream\": \"1.0.0\"",
                "-      }",
                "-    },",
                "     \"commander\": {",
                "@@ -302,13 +220,2 @@",
                "     },",
                "-    \"concat-stream\": {",
                "-      \"version\": \"1.6.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.0.tgz\",",
                "-      \"integrity\": \"sha1-CqxmL9Ur54lk1VMvaUeE5wEQrPc=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"inherits\": \"2.0.3\",",
                "-        \"readable-stream\": \"2.3.5\",",
                "-        \"typedarray\": \"0.0.6\"",
                "-      }",
                "-    },",
                "     \"connect\": {",
                "@@ -337,31 +244,2 @@",
                "     },",
                "-    \"cryptiles\": {",
                "-      \"version\": \"3.1.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/cryptiles/-/cryptiles-3.1.2.tgz\",",
                "-      \"integrity\": \"sha1-qJ+7Ig9c4l7FboxKqKT9e1sNKf4=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"boom\": \"5.2.0\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"boom\": {",
                "-          \"version\": \"5.2.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/boom/-/boom-5.2.0.tgz\",",
                "-          \"integrity\": \"sha512-Z5BTk6ZRe4tXXQlkqftmsAUANpXmuwlsF5Oov8ThoMbQRzdGTA1ngYRW160GexgOgjsFOKJz0LYhoNi+2AMBUw==\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"hoek\": \"4.2.1\"",
                "-          }",
                "-        }",
                "-      }",
                "-    },",
                "-    \"dashdash\": {",
                "-      \"version\": \"1.14.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz\",",
                "-      \"integrity\": \"sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"assert-plus\": \"1.0.0\"",
                "-      }",
                "-    },",
                "     \"debug\": {",
                "@@ -412,8 +290,2 @@",
                "     },",
                "-    \"delayed-stream\": {",
                "-      \"version\": \"1.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",",
                "-      \"integrity\": \"sha1-3zrhmayt+31ECqrgsp4icrJOxhk=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"delegates\": {",
                "@@ -424,12 +296,2 @@",
                "     },",
                "-    \"ecc-jsbn\": {",
                "-      \"version\": \"0.1.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.1.tgz\",",
                "-      \"integrity\": \"sha1-D8c6ntXw1Tw4GTOYUj735UN3dQU=\",",
                "-      \"dev\": true,",
                "-      \"optional\": true,",
                "-      \"requires\": {",
                "-        \"jsbn\": \"0.1.1\"",
                "-      }",
                "-    },",
                "     \"ee-first\": {",
                "@@ -479,8 +341,2 @@",
                "     },",
                "-    \"es6-promise\": {",
                "-      \"version\": \"4.2.4\",",
                "-      \"resolved\": \"https://registry.npmjs.org/es6-promise/-/es6-promise-4.2.4.tgz\",",
                "-      \"integrity\": \"sha512-/NdNZVJg+uZgtm9eS3O6lrOLYmQag2DjdEXuPaHlZ6RuVqgqaVZfgYCepEIKsLqwdQArOPtC3XzRLqGGfT8KQQ==\",",
                "-      \"dev\": true",
                "-    },",
                "     \"escape-html\": {",
                "@@ -534,55 +390,2 @@",
                "     },",
                "-    \"extend\": {",
                "-      \"version\": \"3.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/extend/-/extend-3.0.1.tgz\",",
                "-      \"integrity\": \"sha1-p1Xqe8Gt/MWjHOfnYtuq3F5jZEQ=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"extract-zip\": {",
                "-      \"version\": \"1.6.6\",",
                "-      \"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-1.6.6.tgz\",",
                "-      \"integrity\": \"sha1-EpDt6NINCHK0Kf0/NRyhKOxe+Fw=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"concat-stream\": \"1.6.0\",",
                "-        \"debug\": \"2.6.9\",",
                "-        \"mkdirp\": \"0.5.0\",",
                "-        \"yauzl\": \"2.4.1\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"minimist\": {",
                "-          \"version\": \"0.0.8\",",
                "-          \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz\",",
                "-          \"integrity\": \"sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"mkdirp\": {",
                "-          \"version\": \"0.5.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.0.tgz\",",
                "-          \"integrity\": \"sha1-HXMHam35hs2TROFecfzAWkyavxI=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"minimist\": \"0.0.8\"",
                "-          }",
                "-        }",
                "-      }",
                "-    },",
                "-    \"extsprintf\": {",
                "-      \"version\": \"1.3.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz\",",
                "-      \"integrity\": \"sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"fast-deep-equal\": {",
                "-      \"version\": \"1.1.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-1.1.0.tgz\",",
                "-      \"integrity\": \"sha1-wFNHeBfIa1HaqFPIHgWbcz0CNhQ=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"fast-json-stable-stringify\": {",
                "-      \"version\": \"2.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz\",",
                "-      \"integrity\": \"sha1-1RQsDK7msRifh9OnYREGT4bIu/I=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"fast-levenshtein\": {",
                "@@ -593,11 +396,2 @@",
                "     },",
                "-    \"fd-slicer\": {",
                "-      \"version\": \"1.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.0.1.tgz\",",
                "-      \"integrity\": \"sha1-i1vL2ewyfFBBv5qwI/1nUPEXfmU=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"pend\": \"1.2.0\"",
                "-      }",
                "-    },",
                "     \"finalhandler\": {",
                "@@ -632,41 +426,2 @@",
                "     },",
                "-    \"forever-agent\": {",
                "-      \"version\": \"0.6.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz\",",
                "-      \"integrity\": \"sha1-+8cfDEGt6zf5bFd60e1C2P2sypE=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"form-data\": {",
                "-      \"version\": \"2.3.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-2.3.2.tgz\",",
                "-      \"integrity\": \"sha1-SXBJi+YEwgwAXU9cI67NIda0kJk=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"asynckit\": \"0.4.0\",",
                "-        \"combined-stream\": \"1.0.6\",",
                "-        \"mime-types\": \"2.1.18\"",
                "-      }",
                "-    },",
                "-    \"fs-extra\": {",
                "-      \"version\": \"1.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-1.0.0.tgz\",",
                "-      \"integrity\": \"sha1-zTzl9+fLYUWIP8rjGR6Yd/hYeVA=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"graceful-fs\": \"4.1.11\",",
                "-        \"jsonfile\": \"2.4.0\",",
                "-        \"klaw\": \"1.3.1\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"klaw\": {",
                "-          \"version\": \"1.3.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/klaw/-/klaw-1.3.1.tgz\",",
                "-          \"integrity\": \"sha1-QIhDO0azsbolnXh4XY6W9zugJDk=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"graceful-fs\": \"4.1.11\"",
                "-          }",
                "-        }",
                "-      }",
                "-    },",
                "     \"fs.realpath\": {",
                "@@ -699,11 +454,2 @@",
                "     },",
                "-    \"getpass\": {",
                "-      \"version\": \"0.1.7\",",
                "-      \"resolved\": \"https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz\",",
                "-      \"integrity\": \"sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"assert-plus\": \"1.0.0\"",
                "-      }",
                "-    },",
                "     \"github-from-package\": {",
                "@@ -756,18 +502,2 @@",
                "     },",
                "-    \"har-schema\": {",
                "-      \"version\": \"2.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz\",",
                "-      \"integrity\": \"sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"har-validator\": {",
                "-      \"version\": \"5.0.3\",",
                "-      \"resolved\": \"https://registry.npmjs.org/har-validator/-/har-validator-5.0.3.tgz\",",
                "-      \"integrity\": \"sha1-ukAsJmGU8VlW7xXg/PJCmT9qff0=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"ajv\": \"5.5.2\",",
                "-        \"har-schema\": \"2.0.0\"",
                "-      }",
                "-    },",
                "     \"has\": {",
                "@@ -793,41 +523,2 @@",
                "     },",
                "-    \"hasha\": {",
                "-      \"version\": \"2.2.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/hasha/-/hasha-2.2.0.tgz\",",
                "-      \"integrity\": \"sha1-eNfL/B5tZjA/55g3NlmEUXsvbuE=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"is-stream\": \"1.1.0\",",
                "-        \"pinkie-promise\": \"2.0.1\"",
                "-      }",
                "-    },",
                "-    \"hawk\": {",
                "-      \"version\": \"6.0.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/hawk/-/hawk-6.0.2.tgz\",",
                "-      \"integrity\": \"sha512-miowhl2+U7Qle4vdLqDdPt9m09K6yZhkLDTWGoUiUzrQCn+mHHSmfJgAyGaLRZbPmTqfFFjRV1QWCW0VWUJBbQ==\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"boom\": \"4.3.1\",",
                "-        \"cryptiles\": \"3.1.2\",",
                "-        \"hoek\": \"4.2.1\",",
                "-        \"sntp\": \"2.1.0\"",
                "-      }",
                "-    },",
                "-    \"hoek\": {",
                "-      \"version\": \"4.2.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/hoek/-/hoek-4.2.1.tgz\",",
                "-      \"integrity\": \"sha512-QLg82fGkfnJ/4iy1xZ81/9SIJiq1NGFUMGs6ParyjBZr6jW2Ufj/snDqTHixNlHdPNwN2RLVD0Pi3igeK9+JfA==\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"http-signature\": {",
                "-      \"version\": \"1.2.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz\",",
                "-      \"integrity\": \"sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"assert-plus\": \"1.0.0\",",
                "-        \"jsprim\": \"1.4.1\",",
                "-        \"sshpk\": \"1.13.1\"",
                "-      }",
                "-    },",
                "     \"inflight\": {",
                "@@ -896,8 +587,2 @@",
                "     },",
                "-    \"is-stream\": {",
                "-      \"version\": \"1.1.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz\",",
                "-      \"integrity\": \"sha1-EtSj3U5o4Lec6428hBc66A2RykQ=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"is-symbol\": {",
                "@@ -908,8 +593,2 @@",
                "     },",
                "-    \"is-typedarray\": {",
                "-      \"version\": \"1.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz\",",
                "-      \"integrity\": \"sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"isarray\": {",
                "@@ -926,8 +605,2 @@",
                "     },",
                "-    \"isstream\": {",
                "-      \"version\": \"0.1.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz\",",
                "-      \"integrity\": \"sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"istanbul\": {",
                "@@ -981,9 +654,2 @@",
                "     },",
                "-    \"jsbn\": {",
                "-      \"version\": \"0.1.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz\",",
                "-      \"integrity\": \"sha1-peZUwuWi3rXyAdls77yoDA7y9RM=\",",
                "-      \"dev\": true,",
                "-      \"optional\": true",
                "-    },",
                "     \"jsdoc\": {",
                "@@ -1008,47 +674,2 @@",
                "     },",
                "-    \"json-schema\": {",
                "-      \"version\": \"0.2.3\",",
                "-      \"resolved\": \"https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz\",",
                "-      \"integrity\": \"sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"json-schema-traverse\": {",
                "-      \"version\": \"0.3.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.3.1.tgz\",",
                "-      \"integrity\": \"sha1-NJptRMU6Ud6JtAgFxdXlm0F9M0A=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"json-stringify-safe\": {",
                "-      \"version\": \"5.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz\",",
                "-      \"integrity\": \"sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"jsonfile\": {",
                "-      \"version\": \"2.4.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/jsonfile/-/jsonfile-2.4.0.tgz\",",
                "-      \"integrity\": \"sha1-NzaitCi4e72gzIO1P6PWM6NcKug=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"graceful-fs\": \"4.1.11\"",
                "-      }",
                "-    },",
                "-    \"jsprim\": {",
                "-      \"version\": \"1.4.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz\",",
                "-      \"integrity\": \"sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"assert-plus\": \"1.0.0\",",
                "-        \"extsprintf\": \"1.3.0\",",
                "-        \"json-schema\": \"0.2.3\",",
                "-        \"verror\": \"1.10.0\"",
                "-      }",
                "-    },",
                "-    \"kew\": {",
                "-      \"version\": \"0.7.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/kew/-/kew-0.7.0.tgz\",",
                "-      \"integrity\": \"sha1-edk9LTM2PW/dKXCzNdkUGtWR15s=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"kind-of\": {",
                "@@ -1100,17 +721,2 @@",
                "     },",
                "-    \"mime-db\": {",
                "-      \"version\": \"1.33.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.33.0.tgz\",",
                "-      \"integrity\": \"sha512-BHJ/EKruNIqJf/QahvxwQZXKygOQ256myeN/Ew+THcAa5q+PjyTTMMeNQC4DZw5AwfvelsUrA6B67NKMqXDbzQ==\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"mime-types\": {",
                "-      \"version\": \"2.1.18\",",
                "-      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.18.tgz\",",
                "-      \"integrity\": \"sha512-lc/aahn+t4/SWV/qcmumYjymLsWfN3ELhpmVuUFjgsORruuZPVSwAQryq+HHGvO/SI2KVX26bx+En+zhM8g8hQ==\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"mime-db\": \"1.33.0\"",
                "-      }",
                "-    },",
                "     \"minimatch\": {",
                "@@ -1206,8 +812,2 @@",
                "     },",
                "-    \"oauth-sign\": {",
                "-      \"version\": \"0.8.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.8.2.tgz\",",
                "-      \"integrity\": \"sha1-Rqarfwrq2N6unsBWV4C31O/rnUM=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"object-assign\": {",
                "@@ -1298,46 +898,2 @@",
                "     },",
                "-    \"pend\": {",
                "-      \"version\": \"1.2.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/pend/-/pend-1.2.0.tgz\",",
                "-      \"integrity\": \"sha1-elfrVQpng/kRUzH89GY9XI4AelA=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"performance-now\": {",
                "-      \"version\": \"2.1.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz\",",
                "-      \"integrity\": \"sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"phantomjs-prebuilt\": {",
                "-      \"version\": \"2.1.16\",",
                "-      \"resolved\": \"https://registry.npmjs.org/phantomjs-prebuilt/-/phantomjs-prebuilt-2.1.16.tgz\",",
                "-      \"integrity\": \"sha1-79ISpKOWbTZHaE6ouniFSb4q7+8=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"es6-promise\": \"4.2.4\",",
                "-        \"extract-zip\": \"1.6.6\",",
                "-        \"fs-extra\": \"1.0.0\",",
                "-        \"hasha\": \"2.2.0\",",
                "-        \"kew\": \"0.7.0\",",
                "-        \"progress\": \"1.1.8\",",
                "-        \"request\": \"2.83.0\",",
                "-        \"request-progress\": \"2.0.1\",",
                "-        \"which\": \"1.3.0\"",
                "-      }",
                "-    },",
                "-    \"pinkie\": {",
                "-      \"version\": \"2.0.4\",",
                "-      \"resolved\": \"https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz\",",
                "-      \"integrity\": \"sha1-clVrgM+g1IqXToDnckjoDtT3+HA=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"pinkie-promise\": {",
                "-      \"version\": \"2.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz\",",
                "-      \"integrity\": \"sha1-ITXW36ejWMBprJsXh3YogihFD/o=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"pinkie\": \"2.0.4\"",
                "-      }",
                "-    },",
                "     \"prebuild-install\": {",
                "@@ -1396,8 +952,2 @@",
                "     },",
                "-    \"progress\": {",
                "-      \"version\": \"1.1.8\",",
                "-      \"resolved\": \"https://registry.npmjs.org/progress/-/progress-1.1.8.tgz\",",
                "-      \"integrity\": \"sha1-4mDHj2Fhzdmw5WzD4Khd4Xx6V74=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"pump\": {",
                "@@ -1412,8 +962,2 @@",
                "     },",
                "-    \"punycode\": {",
                "-      \"version\": \"1.4.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz\",",
                "-      \"integrity\": \"sha1-wNWmOycYgArY4esPpSachN1BhF4=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"q\": {",
                "@@ -1423,8 +967,2 @@",
                "     },",
                "-    \"qs\": {",
                "-      \"version\": \"6.5.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.5.1.tgz\",",
                "-      \"integrity\": \"sha512-eRzhrN1WSINYCDCbrz796z37LOe3m5tmW7RQf6oBntukAG1nmovJvhnwHHRMAfeoItc1m2Hk02WER2aQ/iqs+A==\",",
                "-      \"dev\": true",
                "-    },",
                "     \"rc\": {",
                "@@ -1470,41 +1008,2 @@",
                "     },",
                "-    \"request\": {",
                "-      \"version\": \"2.83.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/request/-/request-2.83.0.tgz\",",
                "-      \"integrity\": \"sha512-lR3gD69osqm6EYLk9wB/G1W/laGWjzH90t1vEa2xuxHD5KUrSzp9pUSfTm+YC5Nxt2T8nMPEvKlhbQayU7bgFw==\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"aws-sign2\": \"0.7.0\",",
                "-        \"aws4\": \"1.6.0\",",
                "-        \"caseless\": \"0.12.0\",",
                "-        \"combined-stream\": \"1.0.6\",",
                "-        \"extend\": \"3.0.1\",",
                "-        \"forever-agent\": \"0.6.1\",",
                "-        \"form-data\": \"2.3.2\",",
                "-        \"har-validator\": \"5.0.3\",",
                "-        \"hawk\": \"6.0.2\",",
                "-        \"http-signature\": \"1.2.0\",",
                "-        \"is-typedarray\": \"1.0.0\",",
                "-        \"isstream\": \"0.1.2\",",
                "-        \"json-stringify-safe\": \"5.0.1\",",
                "-        \"mime-types\": \"2.1.18\",",
                "-        \"oauth-sign\": \"0.8.2\",",
                "-        \"performance-now\": \"2.1.0\",",
                "-        \"qs\": \"6.5.1\",",
                "-        \"safe-buffer\": \"5.1.1\",",
                "-        \"stringstream\": \"0.0.5\",",
                "-        \"tough-cookie\": \"2.3.4\",",
                "-        \"tunnel-agent\": \"0.6.0\",",
                "-        \"uuid\": \"3.2.1\"",
                "-      }",
                "-    },",
                "-    \"request-progress\": {",
                "-      \"version\": \"2.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/request-progress/-/request-progress-2.0.1.tgz\",",
                "-      \"integrity\": \"sha1-XTa7V5YcZzqlt4jbyBQf3yO0Tgg=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"throttleit\": \"1.0.0\"",
                "-      }",
                "-    },",
                "     \"requizzle\": {",
                "@@ -1594,11 +1093,2 @@",
                "     },",
                "-    \"sntp\": {",
                "-      \"version\": \"2.1.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/sntp/-/sntp-2.1.0.tgz\",",
                "-      \"integrity\": \"sha512-FL1b58BDrqS3A11lJ0zEdnJ3UOKqVxawAkF3k7F0CVN7VQ34aZrV+G8BZ1WC9ZL7NyrwsW0oviwsWDgRuVYtJg==\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"hoek\": \"4.2.1\"",
                "-      }",
                "-    },",
                "     \"source-map\": {",
                "@@ -1619,18 +1109,2 @@",
                "     },",
                "-    \"sshpk\": {",
                "-      \"version\": \"1.13.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/sshpk/-/sshpk-1.13.1.tgz\",",
                "-      \"integrity\": \"sha1-US322mKHFEMW3EwY/hzx2UBzm+M=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"asn1\": \"0.2.3\",",
                "-        \"assert-plus\": \"1.0.0\",",
                "-        \"bcrypt-pbkdf\": \"1.0.1\",",
                "-        \"dashdash\": \"1.14.1\",",
                "-        \"ecc-jsbn\": \"0.1.1\",",
                "-        \"getpass\": \"0.1.7\",",
                "-        \"jsbn\": \"0.1.1\",",
                "-        \"tweetnacl\": \"0.14.5\"",
                "-      }",
                "-    },",
                "     \"statuses\": {",
                "@@ -1672,8 +1146,2 @@",
                "     },",
                "-    \"stringstream\": {",
                "-      \"version\": \"0.0.5\",",
                "-      \"resolved\": \"https://registry.npmjs.org/stringstream/-/stringstream-0.0.5.tgz\",",
                "-      \"integrity\": \"sha1-TkhM1N5aC7vuGORjB3EKioFiGHg=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"strip-ansi\": {",
                "@@ -1804,8 +1272,2 @@",
                "     },",
                "-    \"throttleit\": {",
                "-      \"version\": \"1.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/throttleit/-/throttleit-1.0.0.tgz\",",
                "-      \"integrity\": \"sha1-nnhYNtr0Z0MUWlmEtiaNgoUorGw=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"through\": {",
                "@@ -1816,11 +1278,2 @@",
                "     },",
                "-    \"tough-cookie\": {",
                "-      \"version\": \"2.3.4\",",
                "-      \"resolved\": \"https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.3.4.tgz\",",
                "-      \"integrity\": \"sha512-TZ6TTfI5NtZnuyy/Kecv+CnoROnyXn2DN97LontgQpCwsX2XyLYCC0ENhYkehSOwAp8rTQKc/NUIF7BkQ5rKLA==\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"punycode\": \"1.4.1\"",
                "-      }",
                "-    },",
                "     \"tunnel-agent\": {",
                "@@ -1834,9 +1287,2 @@",
                "     },",
                "-    \"tweetnacl\": {",
                "-      \"version\": \"0.14.5\",",
                "-      \"resolved\": \"https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz\",",
                "-      \"integrity\": \"sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=\",",
                "-      \"dev\": true,",
                "-      \"optional\": true",
                "-    },",
                "     \"type-check\": {",
                "@@ -1850,8 +1296,2 @@",
                "     },",
                "-    \"typedarray\": {",
                "-      \"version\": \"0.0.6\",",
                "-      \"resolved\": \"https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz\",",
                "-      \"integrity\": \"sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"uglify-js\": {",
                "@@ -1942,19 +1382,2 @@",
                "     },",
                "-    \"uuid\": {",
                "-      \"version\": \"3.2.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-3.2.1.tgz\",",
                "-      \"integrity\": \"sha512-jZnMwlb9Iku/O3smGWvZhauCf6cvvpKi4BKRiliS3cxnI+Gz9j5MEpTz2UFuXiKPJocb7gnsLHwiS05ige5BEA==\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"verror\": {",
                "-      \"version\": \"1.10.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/verror/-/verror-1.10.0.tgz\",",
                "-      \"integrity\": \"sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"assert-plus\": \"1.0.0\",",
                "-        \"core-util-is\": \"1.0.2\",",
                "-        \"extsprintf\": \"1.3.0\"",
                "-      }",
                "-    },",
                "     \"which\": {",
                "@@ -2022,11 +1445,2 @@",
                "       }",
                "-    },",
                "-    \"yauzl\": {",
                "-      \"version\": \"2.4.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/yauzl/-/yauzl-2.4.1.tgz\",",
                "-      \"integrity\": \"sha1-lSj0QtqxsihOWLQ3m7GU4i4MQAU=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"fd-slicer\": \"1.0.1\"",
                "-      }",
                "     }",
                "diff --git a/package.json b/package.json",
                "index 47bce6782..94ff766fd 100644",
                "--- a/package.json",
                "+++ b/package.json",
                "@@ -47,3 +47,2 @@",
                "     \"jsdoc\": \"^3.5.5\",",
                "-    \"phantomjs-prebuilt\": \"^2.1.16\",",
                "     \"prettier\": \"1.11.1\","
            ],
            "changed_files": [
                "build/docker/ubuntu-artful/Dockerfile",
                "build/docker/ubuntu-bionic/Dockerfile",
                "build/docker/ubuntu-xenial/Dockerfile",
                "compiler/cpp/src/thrift/generate/t_js_generator.cc",
                "lib/js/Gruntfile.js",
                "lib/js/package-lock.json",
                "lib/js/package.json",
                "package-lock.json",
                "package.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4625": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4625",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e1aacb9546ac1419df65ba4e5e15d9f4d054fd70",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1538578150,
            "hunks": 2,
            "message": "THRIFT-3863: fix automake lua library list dependency ordering",
            "diff": [
                "diff --git a/lib/lua/Makefile.am b/lib/lua/Makefile.am",
                "index 3dfc27c86..5b0f17a35 100644",
                "--- a/lib/lua/Makefile.am",
                "+++ b/lib/lua/Makefile.am",
                "@@ -25,5 +25,5 @@ lib_LTLIBRARIES = \\",
                " \t\t\tlibluasocket.la \\",
                "+\t\t\tliblualongnumber.la \\",
                " \t\t\tlibluabpack.la \\",
                "-\t\t\tlibluabitwise.la \\",
                "-\t\t\tliblualongnumber.la",
                "+\t\t\tlibluabitwise.la"
            ],
            "changed_files": [
                "lib/lua/Makefile.am"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-3863": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-3863",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7a51220c02d31c831e446906784836e9b3cd53b6",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1539782447,
            "hunks": 1,
            "message": "Remove redundant source files in project libthrift.vcxproj (#1614) delete redundant configuration of three files",
            "diff": [
                "diff --git a/lib/cpp/libthrift.vcxproj b/lib/cpp/libthrift.vcxproj",
                "index 307b1217d..d1097ecd3 100644",
                "--- a/lib/cpp/libthrift.vcxproj",
                "+++ b/lib/cpp/libthrift.vcxproj",
                "@@ -55,8 +55,5 @@",
                "     <ClCompile Include=\"src\\thrift\\server\\TThreadedServer.cpp\"/>",
                "-\t<ClCompile Include=\"src\\thrift\\server\\TConnectedClient.cpp\"/>",
                "-\t<ClCompile Include=\"src\\thrift\\server\\TNonblockingServer.cpp\"/>",
                "-\t<ClCompile Include=\"src\\thrift\\server\\TServerFramework.cpp\"/>",
                "-\t<ClCompile Include=\"src\\thrift\\server\\TSimpleServer.cpp\"/>",
                "-\t<ClCompile Include=\"src\\thrift\\server\\TThreadedServer.cpp\"/>",
                "-\t<ClCompile Include=\"src\\thrift\\server\\TThreadPoolServer.cpp\"/>",
                "+    <ClCompile Include=\"src\\thrift\\server\\TConnectedClient.cpp\"/>",
                "+    <ClCompile Include=\"src\\thrift\\server\\TNonblockingServer.cpp\"/>",
                "+    <ClCompile Include=\"src\\thrift\\server\\TServerFramework.cpp\"/>",
                "     <ClCompile Include=\"src\\thrift\\TApplicationException.cpp\"/>"
            ],
            "changed_files": [
                "lib/cpp/libthrift.vcxproj"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1614": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1614",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8a130f63e5bd09e5c39f9760ba04b5ea0837ff4c",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1539762522,
            "hunks": 239,
            "message": "THRIFT-4382: Replace the use of Indirect Object Syntax calls to new()",
            "diff": [
                "diff --git a/compiler/cpp/src/thrift/generate/t_perl_generator.cc b/compiler/cpp/src/thrift/generate/t_perl_generator.cc",
                "index 5a308cfea..8924a7600 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_perl_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_perl_generator.cc",
                "@@ -356,3 +356,3 @@ string t_perl_generator::render_const_value(t_type* type, t_const_value* value)",
                "   } else if (type->is_struct() || type->is_xception()) {",
                "-    out << \"new \" << perl_namespace(type->get_program()) << type->get_name() << \"({\" << endl;",
                "+    out << perl_namespace(type->get_program()) << type->get_name() << \"->new({\" << endl;",
                "     indent_up();",
                "@@ -548,3 +548,3 @@ void t_perl_generator::generate_perl_struct_reader(ostream& out, t_struct* tstru",
                "   // Loop over reading in fields",
                "-  indent(out) << \"while (1) \" << endl;",
                "+  indent(out) << \"while (1)\" << endl;",
                "@@ -760,3 +760,3 @@ void t_perl_generator::generate_service_processor(t_service* tservice) {",
                "              << \"$input->readMessageEnd();\" << endl << indent()",
                "-             << \"my $x = new Thrift::TApplicationException('Function '.$fname.' not implemented.', \"",
                "+             << \"my $x = Thrift::TApplicationException->new('Function '.$fname.' not implemented.', \"",
                "                 \"Thrift::TApplicationException::UNKNOWN_METHOD);\" << endl << indent()",
                "@@ -800,3 +800,3 @@ void t_perl_generator::generate_process_function(t_service* tservice, t_function",
                "-  f_service_ << indent() << \"my $args = new \" << argsname << \"();\" << endl << indent()",
                "+  f_service_ << indent() << \"my $args = \" << argsname << \"->new();\" << endl << indent()",
                "              << \"$args->read($input);\" << endl;",
                "@@ -811,3 +811,3 @@ void t_perl_generator::generate_process_function(t_service* tservice, t_function",
                "   if (!tfunction->is_oneway()) {",
                "-    f_service_ << indent() << \"my $result = new \" << resultname << \"();\" << endl;",
                "+    f_service_ << indent() << \"my $result = \" << resultname << \"->new();\" << endl;",
                "   }",
                "@@ -860,3 +860,3 @@ void t_perl_generator::generate_process_function(t_service* tservice, t_function",
                "     f_service_ << indent() << \"$@ =~ s/^\\\\s+|\\\\s+$//g;\" << endl",
                "-               << indent() << \"my $err = new Thrift::TApplicationException(\\\"Unexpected Exception: \\\" . $@, Thrift::TApplicationException::INTERNAL_ERROR);\" << endl",
                "+               << indent() << \"my $err = Thrift::TApplicationException->new(\\\"Unexpected Exception: \\\" . $@, Thrift::TApplicationException::INTERNAL_ERROR);\" << endl",
                "                << indent() << \"$output->writeMessageBegin('\" << tfunction->get_name() << \"', Thrift::TMessageType::EXCEPTION, $seqid);\" << endl",
                "@@ -1108,3 +1108,3 @@ void t_perl_generator::generate_service_client(t_service* tservice) {",
                "-    f_service_ << indent() << \"my $args = new \" << argsname << \"();\" << endl;",
                "+    f_service_ << indent() << \"my $args = \" << argsname << \"->new();\" << endl;",
                "@@ -1142,3 +1142,3 @@ void t_perl_generator::generate_service_client(t_service* tservice) {",
                "                  << endl << indent() << \"if ($mtype == Thrift::TMessageType::EXCEPTION) {\" << endl",
                "-                 << indent() << \"  my $x = new Thrift::TApplicationException();\" << endl << indent()",
                "+                 << indent() << \"  my $x = Thrift::TApplicationException->new();\" << endl << indent()",
                "                  << \"  $x->read($self->{input});\" << endl << indent()",
                "@@ -1147,3 +1147,3 @@ void t_perl_generator::generate_service_client(t_service* tservice) {",
                "-      f_service_ << indent() << \"my $result = new \" << resultname << \"();\" << endl << indent()",
                "+      f_service_ << indent() << \"my $result = \" << resultname << \"->new();\" << endl << indent()",
                "                  << \"$result->read($self->{input});\" << endl;",
                "@@ -1588,3 +1588,3 @@ string t_perl_generator::declare_field(t_field* tfield, bool init, bool obj) {",
                "       if (obj) {",
                "-        result += \" = new \" + perl_namespace(type->get_program()) + type->get_name() + \"()\";",
                "+        result += \" = \" + perl_namespace(type->get_program()) + type->get_name() + \"->new()\";",
                "       } else {",
                "diff --git a/lib/perl/lib/Thrift/BinaryProtocol.pm b/lib/perl/lib/Thrift/BinaryProtocol.pm",
                "index 61937e4d9..d62509a56 100644",
                "--- a/lib/perl/lib/Thrift/BinaryProtocol.pm",
                "+++ b/lib/perl/lib/Thrift/BinaryProtocol.pm",
                "@@ -41,3 +41,3 @@ use constant VERSION_MASK   => 0xffff0000;",
                " use constant VERSION_1      => 0x80010000;",
                "-use constant IS_BIG_ENDIAN  => unpack(\"h*\", pack(\"s\", 1)) =~ /01/;",
                "+use constant IS_BIG_ENDIAN  => unpack('h*', pack('s', 1)) =~ m/01/;",
                "@@ -69,3 +69,4 @@ sub writeMessageEnd",
                "-sub writeStructBegin{",
                "+sub writeStructBegin",
                "+{",
                "     my $self = shift;",
                "@@ -255,3 +256,3 @@ sub readMessageBegin",
                "       if (($version & VERSION_MASK) != VERSION_1) {",
                "-        die new Thrift::TProtocolException('Missing version identifier',",
                "+        die Thrift::TProtocolException->new('Missing version identifier',",
                "                                            Thrift::TProtocolException::BAD_VERSION);",
                "@@ -263,3 +264,4 @@ sub readMessageBegin",
                "           $self->readI32($seqid);",
                "-    } else { # old client support code",
                "+    }",
                "+    else { # old client support code",
                "       return",
                "@@ -429,3 +431,3 @@ sub readI64",
                "-    my $vec = new Bit::Vector(64);",
                "+    my $vec = Bit::Vector->new(64);",
                "@@ -469,3 +471,4 @@ sub readString",
                "       $$value = $self->{trans}->readAll($len);",
                "-    } else {",
                "+    }",
                "+    else {",
                "       $$value = '';",
                "@@ -484,3 +487,4 @@ sub readStringBody",
                "       $$value = $self->{trans}->readAll($len);",
                "-    } else {",
                "+    }",
                "+    else {",
                "       $$value = '';",
                "@@ -510,3 +514,3 @@ sub getProtocol{",
                "-    return new Thrift::BinaryProtocol($trans);",
                "+    return Thrift::BinaryProtocol->new($trans);",
                " }",
                "diff --git a/lib/perl/lib/Thrift/Exception.pm b/lib/perl/lib/Thrift/Exception.pm",
                "index 5f0d8fb7f..e4040689c 100644",
                "--- a/lib/perl/lib/Thrift/Exception.pm",
                "+++ b/lib/perl/lib/Thrift/Exception.pm",
                "@@ -31,7 +31,6 @@ use overload '\"\"' => sub {",
                "     return",
                "-          ref( $_[0] )",
                "-        . \" error: \"",
                "-        . ( $_[0]->{message} || 'empty message' )",
                "-        . \" (code \"",
                "-        . ( defined $_[0]->{code} ? $_[0]->{code} : 'undefined' ) . \")\";",
                "+        sprintf '%s error: %s (code %s)',",
                "+          ref( $_[0] ),",
                "+          ( $_[0]->{message} || 'empty message' ),",
                "+          ( defined $_[0]->{code} ? $_[0]->{code} : 'undefined' );",
                "     };",
                "@@ -93,3 +92,4 @@ sub read {",
                "                   $xfer += $input->readString(\\$self->{message});",
                "-              } else {",
                "+              }",
                "+              else {",
                "                   $xfer += $input->skip($ftype);",
                "@@ -103,3 +103,4 @@ sub read {",
                "                   $xfer += $input->readI32(\\$self->{code});",
                "-              } else {",
                "+              }",
                "+              else {",
                "                   $xfer += $input->skip($ftype);",
                "diff --git a/lib/perl/lib/Thrift/FramedTransport.pm b/lib/perl/lib/Thrift/FramedTransport.pm",
                "index ee842e61a..ba89ba3e0 100644",
                "--- a/lib/perl/lib/Thrift/FramedTransport.pm",
                "+++ b/lib/perl/lib/Thrift/FramedTransport.pm",
                "@@ -72,3 +72,3 @@ sub close",
                "     if (defined $self->{transport}) {",
                "-      $self->{transport}->close();",
                "+        $self->{transport}->close();",
                "     }",
                "diff --git a/lib/perl/lib/Thrift/HttpClient.pm b/lib/perl/lib/Thrift/HttpClient.pm",
                "index 6e6a63193..40ec9ce20 100644",
                "--- a/lib/perl/lib/Thrift/HttpClient.pm",
                "+++ b/lib/perl/lib/Thrift/HttpClient.pm",
                "@@ -63,3 +63,3 @@ sub setRecvTimeout",
                " {",
                "-    warn \"setRecvTimeout is deprecated - use setTimeout instead\";",
                "+    warn 'setRecvTimeout is deprecated - use setTimeout instead';",
                "     # note: recvTimeout was never used so we do not need to do anything here",
                "@@ -72,3 +72,3 @@ sub setSendTimeout",
                "-    warn \"setSendTimeout is deprecated - use setTimeout instead\";",
                "+    warn 'setSendTimeout is deprecated - use setTimeout instead';",
                "@@ -104,4 +104,4 @@ sub close",
                "     if (defined($self->{io})) {",
                "-      close($self->{io});",
                "-      $self->{io} = undef;",
                "+        close($self->{io});",
                "+        $self->{io} = undef;",
                "     }",
                "@@ -123,3 +123,3 @@ sub readAll",
                "     if (!defined($buf)) {",
                "-      die new Thrift::TTransportException(\"TSocket: Could not read $len bytes from input buffer\",",
                "+        die Thrift::TTransportException->new(\"TSocket: Could not read $len bytes from input buffer\",",
                "                                           Thrift::TTransportException::END_OF_FILE);",
                "@@ -142,3 +142,3 @@ sub read",
                "     if (!defined($in)) {",
                "-      die new Thrift::TTransportException(\"Response buffer is empty, no request.\",",
                "+        die Thrift::TTransportException->new('Response buffer is empty, no request.',",
                "                                           Thrift::TTransportException::END_OF_FILE);",
                "@@ -146,9 +146,10 @@ sub read",
                "     eval {",
                "-      my $ret = sysread($in, $buf, $len);",
                "-      if (! defined($ret)) {",
                "-        die new Thrift::TTransportException(\"No more data available.\",",
                "+        my $ret = sysread($in, $buf, $len);",
                "+        if (! defined($ret)) {",
                "+            die Thrift::TTransportException->new('No more data available.',",
                "                                             Thrift::TTransportException::TIMED_OUT);",
                "-      }",
                "-    }; if($@){",
                "-      die new Thrift::TTransportException(\"$@\", Thrift::TTransportException::UNKNOWN);",
                "+        }",
                "+    };",
                "+    if($@){",
                "+        die Thrift::TTransportException->new(\"$@\", Thrift::TTransportException::UNKNOWN);",
                "     }",
                "@@ -175,4 +176,5 @@ sub flush",
                "-    my $ua = LWP::UserAgent->new('timeout' => ($self->{timeout} / 1000),",
                "-      'agent' => 'Perl/THttpClient'",
                "+    my $ua = LWP::UserAgent->new(",
                "+        'timeout' => ($self->{timeout} / 1000),",
                "+        'agent'   => 'Perl/THttpClient'",
                "      );",
                "@@ -186,4 +188,3 @@ sub flush",
                "-    my $request = new HTTP::Request(POST => $self->{url}, undef, $buf);",
                "-    map { $request->header($_ => $self->{headers}->{$_}) } keys %{$self->{headers}};",
                "+    my $request = HTTP::Request->new(POST => $self->{url}, ($self->{headers} || undef), $buf);",
                "     my $response = $ua->request($request);",
                "diff --git a/lib/perl/lib/Thrift/MemoryBuffer.pm b/lib/perl/lib/Thrift/MemoryBuffer.pm",
                "index 1e5123929..be97ce4f8 100644",
                "--- a/lib/perl/lib/Thrift/MemoryBuffer.pm",
                "+++ b/lib/perl/lib/Thrift/MemoryBuffer.pm",
                "@@ -37,6 +37,6 @@ sub new",
                "     my $self = {",
                "-        buffer    => '',",
                "-        bufferSize=> $bufferSize,",
                "-        wPos      => 0,",
                "-        rPos      => 0,",
                "+        buffer     => '',",
                "+        bufferSize => $bufferSize,",
                "+        wPos       => 0,",
                "+        rPos       => 0,",
                "     };",
                "@@ -119,3 +119,3 @@ sub readAll",
                "     if ($avail < $len) {",
                "-        die new TTransportException(\"Attempt to readAll($len) found only $avail available\",",
                "+        die TTransportException->new(\"Attempt to readAll($len) found only $avail available\",",
                "                                     Thrift::TTransportException::END_OF_FILE);",
                "diff --git a/lib/perl/lib/Thrift/MultiplexedProcessor.pm b/lib/perl/lib/Thrift/MultiplexedProcessor.pm",
                "index 05c4ead9c..ae925d7cd 100644",
                "--- a/lib/perl/lib/Thrift/MultiplexedProcessor.pm",
                "+++ b/lib/perl/lib/Thrift/MultiplexedProcessor.pm",
                "@@ -103,3 +103,3 @@ sub process {",
                "     if ($mtype ne Thrift::TMessageType::CALL && $mtype ne Thrift::TMessageType::ONEWAY) {",
                "-        die new Thrift::TException(\"This should not have happened!?\");",
                "+        die Thrift::TException->new('This should not have happened!?');",
                "     }",
                "@@ -110,7 +110,7 @@ sub process {",
                "             return $self->{defaultProcessor}->process(",
                "-                new Thrift::StoredMessageProtocol($input, $fname, $mtype, $rseqid), $output",
                "+                Thrift::StoredMessageProtocol->new($input, $fname, $mtype, $rseqid), $output",
                "             );",
                "         } else {",
                "-            die new Thrift::TException(\"Service name not found in message name: {$fname} and no default processor defined. Did you \" .",
                "-                \"forget to use a MultiplexProtocol in your client?\");",
                "+            die Thrift::TException->new(\"Service name not found in message name: {$fname} and no default processor defined. Did you \" .",
                "+                'forget to use a MultiplexProtocol in your client?');",
                "         }",
                "@@ -121,4 +121,4 @@ sub process {",
                "     if (!exists($self->{serviceProcessorMap}->{$serviceName})) {",
                "-        die new Thrift::TException(\"Service name not found: {$serviceName}.  Did you forget \" .",
                "-            \"to call registerProcessor()?\");",
                "+        die Thrift::TException->new(\"Service name not found: {$serviceName}.  Did you forget \" .",
                "+            'to call registerProcessor()?');",
                "     }",
                "@@ -128,3 +128,3 @@ sub process {",
                "     return $processor->process(",
                "-        new Thrift::StoredMessageProtocol($input, $messageName, $mtype, $rseqid), $output",
                "+        Thrift::StoredMessageProtocol->new($input, $messageName, $mtype, $rseqid), $output",
                "     );",
                "diff --git a/lib/perl/lib/Thrift/MultiplexedProtocol.pm b/lib/perl/lib/Thrift/MultiplexedProtocol.pm",
                "index 903211f10..5b5b60bc7 100644",
                "--- a/lib/perl/lib/Thrift/MultiplexedProtocol.pm",
                "+++ b/lib/perl/lib/Thrift/MultiplexedProtocol.pm",
                "@@ -55,3 +55,3 @@ sub writeMessageBegin",
                " {",
                "-  my $self = shift;",
                "+    my $self = shift;",
                "     my ($name, $type, $seqid) = @_;",
                "diff --git a/lib/perl/lib/Thrift/Protocol.pm b/lib/perl/lib/Thrift/Protocol.pm",
                "index c681f6082..26ef46a00 100644",
                "--- a/lib/perl/lib/Thrift/Protocol.pm",
                "+++ b/lib/perl/lib/Thrift/Protocol.pm",
                "@@ -83,3 +83,3 @@ sub writeMessageBegin",
                "     my ($name, $type, $seqid);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -90,3 +90,3 @@ sub writeMessageBegin",
                " sub writeMessageEnd {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -103,3 +103,3 @@ sub writeStructBegin {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -113,3 +113,3 @@ sub writeStructBegin {",
                " sub writeStructEnd {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -128,3 +128,3 @@ sub writeFieldBegin {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -132,3 +132,3 @@ sub writeFieldBegin {",
                " sub writeFieldEnd {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -136,3 +136,3 @@ sub writeFieldEnd {",
                " sub writeFieldStop {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -142,3 +142,3 @@ sub writeMapBegin {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -146,3 +146,3 @@ sub writeMapBegin {",
                " sub writeMapEnd {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -151,3 +151,3 @@ sub writeListBegin {",
                "     my ($elemType, $size);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -155,3 +155,3 @@ sub writeListBegin {",
                " sub writeListEnd {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -160,3 +160,3 @@ sub writeSetBegin {",
                "     my ($elemType, $size);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -164,3 +164,3 @@ sub writeSetBegin {",
                " sub writeSetEnd {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -169,3 +169,3 @@ sub writeBool {",
                "     my ($bool);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -174,3 +174,3 @@ sub writeByte {",
                "     my ($byte);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -179,3 +179,3 @@ sub writeI16 {",
                "     my ($i16);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -184,3 +184,3 @@ sub writeI32 {",
                "     my ($i32);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -189,3 +189,3 @@ sub writeI64 {",
                "     my ($i64);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -194,3 +194,3 @@ sub writeDouble {",
                "     my ($dub);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -200,3 +200,3 @@ sub writeString",
                "     my ($str);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -213,3 +213,3 @@ sub readMessageBegin",
                "     my ($name, $type, $seqid);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -221,3 +221,3 @@ sub readMessageEnd",
                " {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -228,3 +228,3 @@ sub readStructBegin",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -233,3 +233,3 @@ sub readStructEnd",
                " {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -239,3 +239,3 @@ sub readFieldBegin",
                "     my ($name, $fieldType, $fieldId);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -244,3 +244,3 @@ sub readFieldEnd",
                " {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -250,3 +250,3 @@ sub readMapBegin",
                "     my ($keyType, $valType, $size);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -255,3 +255,3 @@ sub readMapEnd",
                " {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -261,3 +261,3 @@ sub readListBegin",
                "     my ($elemType, $size);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -266,3 +266,3 @@ sub readListEnd",
                " {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -272,3 +272,3 @@ sub readSetBegin",
                "     my ($elemType, $size);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -277,3 +277,3 @@ sub readSetEnd",
                " {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -283,3 +283,3 @@ sub readBool",
                "     my ($bool);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -289,3 +289,3 @@ sub readByte",
                "     my ($byte);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -295,3 +295,3 @@ sub readI16",
                "     my ($i16);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -301,3 +301,3 @@ sub readI32",
                "     my ($i32);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -307,3 +307,3 @@ sub readI64",
                "     my ($i64);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -313,3 +313,3 @@ sub readDouble",
                "     my ($dub);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -319,3 +319,3 @@ sub readString",
                "     my ($str);",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -407,3 +407,3 @@ sub skip",
                "-    die new Thrift::TProtocolException(\"Type $type not recognized --- corrupt data?\",",
                "+    die Thrift::TProtocolException->new(\"Type $type not recognized --- corrupt data?\",",
                "                                        Thrift::TProtocolException::INVALID_DATA);",
                "@@ -426,3 +426,3 @@ sub skipBinary",
                "     {",
                "-      return $itrans->readAll(1);",
                "+        return $itrans->readAll(1);",
                "     }",
                "@@ -461,13 +461,13 @@ sub skipBinary",
                "         while (1) {",
                "-          my $ftype = 0;",
                "-          my $fid = 0;",
                "-          my $data = $itrans->readAll(1);",
                "-          my @arr = unpack('c', $data);",
                "-          $ftype = $arr[0];",
                "-          if ($ftype == Thrift::TType::STOP) {",
                "-            last;",
                "-          }",
                "-          # I16 field id",
                "-          $result += $itrans->readAll(2);",
                "-          $result += $self->skipBinary($itrans, $ftype);",
                "+            my $ftype = 0;",
                "+            my $fid = 0;",
                "+            my $data = $itrans->readAll(1);",
                "+            my @arr = unpack('c', $data);",
                "+            $ftype = $arr[0];",
                "+            if ($ftype == Thrift::TType::STOP) {",
                "+                last;",
                "+            }",
                "+            # I16 field id",
                "+            $result += $itrans->readAll(2);",
                "+            $result += $self->skipBinary($itrans, $ftype);",
                "         }",
                "@@ -519,3 +519,3 @@ sub skipBinary",
                "-    die new Thrift::TProtocolException(\"Type $type not recognized --- corrupt data?\",",
                "+    die Thrift::TProtocolException->new(\"Type $type not recognized --- corrupt data?\",",
                "                                        Thrift::TProtocolException::INVALID_DATA);",
                "@@ -544,3 +544,3 @@ sub getProtocol",
                "     my ($trans);",
                "-    die \"interface\";",
                "+    die 'interface';",
                " }",
                "diff --git a/lib/perl/lib/Thrift/SSLServerSocket.pm b/lib/perl/lib/Thrift/SSLServerSocket.pm",
                "index d29671bfe..7b0643102 100644",
                "--- a/lib/perl/lib/Thrift/SSLServerSocket.pm",
                "+++ b/lib/perl/lib/Thrift/SSLServerSocket.pm",
                "@@ -50,3 +50,3 @@ sub __client",
                " {",
                "-  return new Thrift::SSLSocket();",
                "+  return Thrift::SSLSocket->new();",
                " }",
                "diff --git a/lib/perl/lib/Thrift/SSLSocket.pm b/lib/perl/lib/Thrift/SSLSocket.pm",
                "index 4bdf63729..e34924df4 100644",
                "--- a/lib/perl/lib/Thrift/SSLSocket.pm",
                "+++ b/lib/perl/lib/Thrift/SSLSocket.pm",
                "@@ -36,3 +36,3 @@ use version 0.77; our $VERSION = version->declare(\"$Thrift::VERSION\");",
                " # my $opts = {}",
                "-# my $socket = new Thrift::SSLSocket(\\%opts);",
                "+# my $socket = Thrift::SSLSocket->new(\\%opts);",
                " #",
                "diff --git a/lib/perl/lib/Thrift/Server.pm b/lib/perl/lib/Thrift/Server.pm",
                "index f265d45f9..28822e874 100644",
                "--- a/lib/perl/lib/Thrift/Server.pm",
                "+++ b/lib/perl/lib/Thrift/Server.pm",
                "@@ -53,3 +53,3 @@ sub new",
                "     {",
                "-      $self = _init($args[0], $args[1],",
                "+        $self = _init($args[0], $args[1],",
                "                     Thrift::BufferedTransportFactory->new(),",
                "@@ -69,3 +69,3 @@ sub new",
                "     {",
                "-      die new Thrift::TException(\"Thrift::Server expects exactly 2, 4, or 6 args\");",
                "+      die Thrift::TException->new('Thrift::Server expects exactly 2, 4, or 6 args');",
                "     }",
                "@@ -96,3 +96,3 @@ sub serve",
                " {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -117,3 +117,3 @@ sub _handleException",
                "-    if ($e->isa(\"Thrift::TException\") and exists $e->{message}) {",
                "+    if ($e->isa('Thrift::TException') and exists $e->{message}) {",
                "         my $message = $e->{message};",
                "@@ -125,6 +125,8 @@ sub _handleException",
                "             # suppress Socket messages",
                "-        } else {",
                "+        }",
                "+        else {",
                "             warn $out;",
                "         }",
                "-    } else {",
                "+    }",
                "+    else {",
                "         warn $e;",
                "@@ -153,3 +155,3 @@ sub serve",
                "     my $stop = 0;",
                "-    ",
                "+",
                "     $self->{serverTransport}->listen();",
                "@@ -168,6 +170,6 @@ sub serve",
                "                 }",
                "-            }; if($@) {",
                "+            };",
                "+            if($@) {",
                "                 $self->_handleException($@);",
                "             }",
                "-",
                "             $itrans->close();",
                "@@ -186,3 +188,3 @@ package Thrift::ForkingServer;",
                " use parent -norequire, 'Thrift::Server';",
                "-use POSIX \":sys_wait_h\";",
                "+use POSIX ':sys_wait_h';",
                " use version 0.77; our $VERSION = version->declare(\"$Thrift::VERSION\");",
                "@@ -233,6 +235,8 @@ sub _client",
                "             $self->_parent($pid, $itrans, $otrans);",
                "-        } else {",
                "+        }",
                "+        else {",
                "             $self->_child($itrans, $otrans, $iprot, $oprot);",
                "         }",
                "-    }; if($@) {",
                "+    };",
                "+    if($@) {",
                "         $self->_handleException($@);",
                "@@ -269,3 +273,4 @@ sub _child",
                "         }",
                "-    }; if($@) {",
                "+    };",
                "+    if($@) {",
                "         $ecode = 1;",
                "@@ -290,4 +295,5 @@ sub tryClose",
                "         }",
                "-    }; if($@) {",
                "-        if ($@->isa(\"Thrift::TException\") and exists $@->{message}) {",
                "+    };",
                "+    if($@) {",
                "+        if ($@->isa('Thrift::TException') and exists $@->{message}) {",
                "             my $message = $@->{message};",
                "@@ -297,3 +303,4 @@ sub tryClose",
                "             warn $out;",
                "-        } else {",
                "+        }",
                "+        else {",
                "             warn $@;",
                "diff --git a/lib/perl/lib/Thrift/ServerSocket.pm b/lib/perl/lib/Thrift/ServerSocket.pm",
                "index 2c4d906c4..39726438b 100644",
                "--- a/lib/perl/lib/Thrift/ServerSocket.pm",
                "+++ b/lib/perl/lib/Thrift/ServerSocket.pm",
                "@@ -40,3 +40,3 @@ use version 0.77; our $VERSION = version->declare(\"$Thrift::VERSION\");",
                " # @param[in]  queue  the listen queue size (default if not specified is 128)",
                "-# @example    my $serversock = new Thrift::ServerSocket(host => undef, port => port)",
                "+# @example    my $serversock = Thrift::ServerSocket->new(host => undef, port => port)",
                " #",
                "@@ -51,3 +51,4 @@ sub new",
                "         $self = $args;",
                "-    } else {",
                "+    }",
                "+    else {",
                "         $self = { port => $args };",
                "@@ -73,3 +74,3 @@ sub listen",
                "-        die new Thrift::TTransportException($error, Thrift::TTransportException::NOT_OPEN);",
                "+        die Thrift::TTransportException->new($error, Thrift::TTransportException::NOT_OPEN);",
                "     };",
                "@@ -86,3 +87,3 @@ sub accept",
                "         my $result        = $self->__client();",
                "-        $result->{handle} = new IO::Select($client);",
                "+        $result->{handle} = IO::Select->new($client);",
                "         return $result;",
                "@@ -95,4 +96,4 @@ sub close",
                " {",
                "-\tmy $self = shift;",
                "-\t",
                "+    my $self = shift;",
                "+",
                "     if ( exists $self->{handle} and defined $self->{handle} )",
                "@@ -100,3 +101,3 @@ sub close",
                "         $self->{handle}->close();",
                "-\t}",
                "+    }",
                " }",
                "@@ -109,3 +110,3 @@ sub __client",
                " {",
                "-  return new Thrift::Socket();",
                "+  return Thrift::Socket->new();",
                " }",
                "diff --git a/lib/perl/lib/Thrift/Socket.pm b/lib/perl/lib/Thrift/Socket.pm",
                "index ae248df8a..ba0db5eb4 100644",
                "--- a/lib/perl/lib/Thrift/Socket.pm",
                "+++ b/lib/perl/lib/Thrift/Socket.pm",
                "@@ -38,3 +38,3 @@ use version 0.77; our $VERSION = version->declare(\"$Thrift::VERSION\");",
                " # my $opts = {}",
                "-# my $socket = new Thrift::Socket(\\%opts);",
                "+# my $socket = Thrift::Socket->new(\\%opts);",
                " #",
                "@@ -122,6 +122,6 @@ sub open",
                "         my $error = ref($self).': Could not connect to '.$self->{host}.':'.$self->{port}.' ('.$!.')';",
                "-        die new Thrift::TTransportException($error, Thrift::TTransportException::NOT_OPEN);",
                "+        die Thrift::TTransportException->new($error, Thrift::TTransportException::NOT_OPEN);",
                "     };",
                "-    $self->{handle} = new IO::Select( $sock );",
                "+    $self->{handle} = IO::Select->new( $sock );",
                " }",
                "@@ -161,6 +161,7 @@ sub readAll",
                "-            die new Thrift::TTransportException(ref($self).': Could not read '.$len.' bytes from '.",
                "+            die Thrift::TTransportException->new(ref($self).': Could not read '.$len.' bytes from '.",
                "                                $self->{host}.':'.$self->{port}, Thrift::TTransportException::END_OF_FILE);",
                "-        } elsif ((my $sz = length($buf)) < $len) {",
                "+        }",
                "+        elsif ((my $sz = length($buf)) < $len) {",
                "@@ -169,3 +170,4 @@ sub readAll",
                "-        } else {",
                "+        }",
                "+        else {",
                "             return $pre.$buf;",
                "@@ -193,3 +195,3 @@ sub read",
                "-        die new Thrift::TTransportException(ref($self).': Could not read '.$len.' bytes from '.",
                "+        die Thrift::TTransportException->new(ref($self).': Could not read '.$len.' bytes from '.",
                "                            $self->{host}.':'.$self->{port}, Thrift::TTransportException::END_OF_FILE);",
                "@@ -219,3 +221,3 @@ sub write",
                "         if(@sockets == 0){",
                "-            die new Thrift::TTransportException(ref($self).': timed out writing to bytes from '.",
                "+            die Thrift::TTransportException->new(ref($self).': timed out writing to bytes from '.",
                "                                        $self->{host}.':'.$self->{port}, Thrift::TTransportException::TIMED_OUT);",
                "@@ -227,3 +229,3 @@ sub write",
                "-            die new Thrift::TTransportException(ref($self).': Could not write '.length($buf).' bytes '.",
                "+            die Thrift::TTransportException->new(ref($self).': Could not write '.length($buf).' bytes '.",
                "                                  $self->{host}.':'.$self->{host}, Thrift::TTransportException::END_OF_FILE);",
                "@@ -316,3 +318,3 @@ sub __wait",
                "     if (@sockets == 0) {",
                "-        die new Thrift::TTransportException(ref($self).': timed out reading from '.",
                "+        die Thrift::TTransportException->new(ref($self).': timed out reading from '.",
                "                                    $self->{host}.':'.$self->{port}, Thrift::TTransportException::TIMED_OUT);",
                "diff --git a/lib/perl/lib/Thrift/Transport.pm b/lib/perl/lib/Thrift/Transport.pm",
                "index 10c8ce2e5..41b7e150f 100644",
                "--- a/lib/perl/lib/Thrift/Transport.pm",
                "+++ b/lib/perl/lib/Thrift/Transport.pm",
                "@@ -56,3 +56,3 @@ sub isOpen",
                " {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -66,3 +66,3 @@ sub open",
                " {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -74,3 +74,3 @@ sub close",
                " {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -86,3 +86,3 @@ sub read",
                " {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -118,3 +118,3 @@ sub write",
                " {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -164,3 +164,3 @@ sub listen",
                " {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -169,3 +169,3 @@ sub accept",
                " {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "@@ -174,3 +174,3 @@ sub close",
                " {",
                "-    die \"abstract\";",
                "+    die 'abstract';",
                " }",
                "diff --git a/lib/perl/lib/Thrift/UnixServerSocket.pm b/lib/perl/lib/Thrift/UnixServerSocket.pm",
                "index 7b857ce1e..875e8049a 100644",
                "--- a/lib/perl/lib/Thrift/UnixServerSocket.pm",
                "+++ b/lib/perl/lib/Thrift/UnixServerSocket.pm",
                "@@ -39,4 +39,4 @@ use version 0.77; our $VERSION = version->declare(\"$Thrift::VERSION\");",
                " # @param[in]  queue  the listen queue size (default is not specified is supplied by ServerSocket)",
                "-# @example    my $serversock = new Thrift::UnixServerSocket($path);",
                "-# @example    my $serversock = new Thrift::UnixServerSocket(path => \"somepath\", queue => 64);",
                "+# @example    my $serversock = Thrift::UnixServerSocket->new($path);",
                "+# @example    my $serversock = Thrift::UnixServerSocket->new(path => \"somepath\", queue => 64);",
                " #",
                "@@ -60,3 +60,3 @@ sub __client",
                " {",
                "-  return new Thrift::UnixSocket();",
                "+  return Thrift::UnixSocket->new();",
                " }",
                "@@ -77,3 +77,3 @@ sub __listen",
                "         }",
                "-        die new Thrift::TTransportException($error, Thrift::TTransportException::NOT_OPEN);",
                "+        die Thrift::TTransportException->new($error, Thrift::TTransportException::NOT_OPEN);",
                "     };",
                "diff --git a/lib/perl/lib/Thrift/UnixSocket.pm b/lib/perl/lib/Thrift/UnixSocket.pm",
                "index 8b0045024..ba386d1ce 100644",
                "--- a/lib/perl/lib/Thrift/UnixSocket.pm",
                "+++ b/lib/perl/lib/Thrift/UnixSocket.pm",
                "@@ -37,3 +37,3 @@ use version 0.77; our $VERSION = version->declare(\"$Thrift::VERSION\");",
                " # @param[in]  path   path to unix socket file",
                "-# @example    my $sock = new Thrift::UnixSocket($path);",
                "+# @example    my $sock = Thrift::UnixSocket->new($path);",
                " #",
                "@@ -60,3 +60,3 @@ sub __open",
                "         }",
                "-        die new Thrift::TTransportException($error, Thrift::TTransportException::NOT_OPEN);",
                "+        die Thrift::TTransportException->new($error, Thrift::TTransportException::NOT_OPEN);",
                "     };",
                "diff --git a/test/perl/TestClient.pl b/test/perl/TestClient.pl",
                "index 990274c5e..96e3bec77 100755",
                "--- a/test/perl/TestClient.pl",
                "+++ b/test/perl/TestClient.pl",
                "@@ -47,3 +47,3 @@ $|++;",
                " sub usage {",
                "-    print <<EOF;",
                "+    print <<\"EOF\";",
                " Usage: $0 [OPTIONS]",
                "@@ -93,8 +93,10 @@ if ($opts{help}) {",
                " my $socket = undef;",
                "-if ($opts{\"domain-socket\"}) {",
                "-    $socket = new Thrift::UnixSocket($opts{\"domain-socket\"});",
                "-} elsif ($opts{ssl}) {",
                "-  $socket = new Thrift::SSLSocket(\\%opts);",
                "-} else {",
                "-  $socket = new Thrift::Socket($opts{host}, $opts{port});",
                "+if ($opts{'domain-socket'}) {",
                "+    $socket = Thrift::UnixSocket->new($opts{'domain-socket'});",
                "+}",
                "+elsif ($opts{ssl}) {",
                "+  $socket = Thrift::SSLSocket->new(\\%opts);",
                "+}",
                "+else {",
                "+  $socket = Thrift::Socket->new($opts{host}, $opts{port});",
                " }",
                "@@ -103,6 +105,8 @@ my $transport;",
                " if ($opts{transport} eq 'buffered') {",
                "-    $transport = new Thrift::BufferedTransport($socket, 1024, 1024);",
                "-} elsif ($opts{transport} eq 'framed') {",
                "-    $transport = new Thrift::FramedTransport($socket);",
                "-} else {",
                "+    $transport = Thrift::BufferedTransport->new($socket, 1024, 1024);",
                "+}",
                "+elsif ($opts{transport} eq 'framed') {",
                "+    $transport = Thrift::FramedTransport->new($socket);",
                "+}",
                "+else {",
                "     usage();",
                "@@ -114,4 +118,5 @@ my $protocol2;",
                " if ($opts{protocol} eq 'binary' || $opts{protocol} eq 'multi') {",
                "-    $protocol = new Thrift::BinaryProtocol($transport);",
                "-} else {",
                "+    $protocol = Thrift::BinaryProtocol->new($transport);",
                "+}",
                "+else {",
                "     usage();",
                "@@ -122,8 +127,8 @@ my $secondService = undef;",
                " if (index($opts{protocol}, 'multi') == 0) {",
                "-  $protocol2 = new Thrift::MultiplexedProtocol($protocol, \"SecondService\");",
                "-  $protocol = new Thrift::MultiplexedProtocol($protocol, \"ThriftTest\");",
                "-  $secondService = new ThriftTest::SecondServiceClient($protocol2);",
                "+  $protocol2     = Thrift::MultiplexedProtocol->new($protocol, 'SecondService');",
                "+  $protocol      = Thrift::MultiplexedProtocol->new($protocol, 'ThriftTest');",
                "+  $secondService = ThriftTest::SecondServiceClient->new($protocol2);",
                " }",
                "-my $testClient = new ThriftTest::ThriftTestClient($protocol);",
                "+my $testClient = ThriftTest::ThriftTestClient->new($protocol);",
                "@@ -148,3 +153,3 @@ my $start = gettimeofday();",
                " #",
                "-print(\"testVoid()\");",
                "+print('testVoid()');",
                " $testClient->testVoid();",
                "@@ -155,5 +160,5 @@ print(\" = void\\n\");",
                " #",
                "-print(\"testString(\\\"Test\\\")\");",
                "-my $s = $testClient->testString(\"Test\");",
                "-print(\" = \\\"$s\\\"\\n\");",
                "+print('testString(\"Test\")');",
                "+my $s = $testClient->testString('Test');",
                "+print(qq| = \"$s\"\\n|);",
                " exit(ERR_BASETYPES) if ($s ne 'Test');",
                "@@ -164,5 +169,5 @@ exit(ERR_BASETYPES) if ($s ne 'Test');",
                " if (index($opts{protocol}, 'multi') == 0) {",
                "-    print(\"secondtestString(\\\"Test2\\\")\");",
                "-    $s = $secondService->secondtestString(\"Test2\");",
                "-    print(\" = \\\"$s\\\"\\n\");",
                "+    print('secondtestString(\"Test2\")');",
                "+    $s = $secondService->secondtestString('Test2');",
                "+    print(qq| = \"$s\"\\n|);",
                "     exit(ERR_PROTOCOL) if ($s ne 'testString(\"Test2\")');",
                "@@ -173,3 +178,3 @@ if (index($opts{protocol}, 'multi') == 0) {",
                " #",
                "-print(\"testBool(1)\");",
                "+print('testBool(1)');",
                " my $t = $testClient->testBool(1);",
                "@@ -177,6 +182,6 @@ print(\" = $t\\n\");",
                " exit(ERR_BASETYPES) if ($t ne 1);",
                "-print(\"testBool(0)\");",
                "+print('testBool(0)');",
                " my $f = $testClient->testBool(0);",
                " print(\" = $f\\n\");",
                "-exit(ERR_BASETYPES) if ($f ne \"\");",
                "+exit(ERR_BASETYPES) if ($f ne q||);",
                "@@ -186,3 +191,3 @@ exit(ERR_BASETYPES) if ($f ne \"\");",
                " #",
                "-print(\"testByte(1)\");",
                "+print('testByte(1)');",
                " my $u8 = $testClient->testByte(1);",
                "@@ -193,3 +198,3 @@ print(\" = $u8\\n\");",
                " #",
                "-print(\"testI32(-1)\");",
                "+print('testI32(-1)');",
                " my $i32 = $testClient->testI32(-1);",
                "@@ -201,3 +206,3 @@ exit(ERR_BASETYPES) if ($i32 ne -1);",
                " #",
                "-print(\"testI64(-34359738368)\");",
                "+print('testI64(-34359738368)');",
                " my $i64 = $testClient->testI64(-34359738368);",
                "@@ -209,3 +214,3 @@ exit(ERR_BASETYPES) if ($i64 ne -34359738368);",
                " #",
                "-print(\"testDouble(-852.234234234)\");",
                "+print('testDouble(-852.234234234)');",
                " my $dub = $testClient->testDouble(-852.234234234);",
                "@@ -222,5 +227,5 @@ exit(ERR_BASETYPES) if ($dub ne -852.234234234);",
                " #",
                "-print(\"testStruct({\\\"Zero\\\", 1, -3, -5})\");",
                "-my $out = new ThriftTest::Xtruct();",
                "-$out->string_thing(\"Zero\");",
                "+print('testStruct({\"Zero\", 1, -3, -5})');",
                "+my $out = ThriftTest::Xtruct->new();",
                "+$out->string_thing('Zero');",
                " $out->byte_thing(1);",
                "@@ -229,5 +234,5 @@ $out->i64_thing(-5);",
                " my $in = $testClient->testStruct($out);",
                "-print(\" = {\\\"\".$in->string_thing.\"\\\", \".",
                "-        $in->byte_thing.\", \".",
                "-        $in->i32_thing.\", \".",
                "+print(' = {\"'.$in->string_thing.'\", '.",
                "+        $in->byte_thing.', '.",
                "+        $in->i32_thing.', '.",
                "         $in->i64_thing.\"}\\n\");",
                "@@ -237,4 +242,4 @@ print(\" = {\\\"\".$in->string_thing.\"\\\", \".",
                " #",
                "-print(\"testNest({1, {\\\"Zero\\\", 1, -3, -5}, 5}\");",
                "-my $out2 = new ThriftTest::Xtruct2();",
                "+print('testNest({1, {\"Zero\", 1, -3, -5}, 5}');",
                "+my $out2 = ThriftTest::Xtruct2->new();",
                " $out2->byte_thing(1);",
                "@@ -244,7 +249,7 @@ my $in2 = $testClient->testNest($out2);",
                " $in = $in2->struct_thing;",
                "-print(\" = {\".$in2->byte_thing.\", {\\\"\".",
                "-      $in->string_thing.\"\\\", \".",
                "-      $in->byte_thing.\", \".",
                "-      $in->i32_thing.\", \".",
                "-      $in->i64_thing.\"}, \".",
                "+print(' = {'.$in2->byte_thing.', {\"'.",
                "+      $in->string_thing.'\", '.",
                "+      $in->byte_thing.', '.",
                "+      $in->i32_thing.', '.",
                "+      $in->i64_thing.'}, '.",
                "       $in2->i32_thing.\"}\\n\");",
                "@@ -258,3 +263,3 @@ for (my $i = 0; $i < 5; ++$i) {",
                " }",
                "-print(\"testMap({\");",
                "+print('testMap({');",
                " my $first = 1;",
                "@@ -263,4 +268,5 @@ while( my($key,$val) = each %$mapout) {",
                "         $first = 0;",
                "-    } else {",
                "-        print(\", \");",
                "+    }",
                "+    else {",
                "+        print(', ');",
                "     }",
                "@@ -268,3 +274,3 @@ while( my($key,$val) = each %$mapout) {",
                " }",
                "-print(\"})\");",
                "+print('})');",
                "@@ -272,3 +278,3 @@ print(\"})\");",
                " my $mapin = $testClient->testMap($mapout);",
                "-print(\" = {\");",
                "+print(' = {');",
                "@@ -278,4 +284,5 @@ while( my($key,$val) = each %$mapin){",
                "         $first = 0;",
                "-    } else {",
                "-        print(\", \");",
                "+    }",
                "+    else {",
                "+        print(', ');",
                "     }",
                "@@ -293,3 +300,3 @@ for (my $i = -2; $i < 3; ++$i) {",
                "-print(\"testSet({\".join(\",\",@$setout).\"})\");",
                "+print('testSet({'.join(',',@$setout).'})');",
                "@@ -297,3 +304,3 @@ my $setin = $testClient->testSet($setout);",
                "-print(\" = {\".join(\",\",@$setout).\"}\\n\");",
                "+print(' = {'.join(',',@$setout).\"}\\n\");",
                "@@ -307,3 +314,3 @@ for (my $i = -2; $i < 3; ++$i) {",
                "-print(\"testList({\".join(\",\",@$listout).\"})\");",
                "+print('testList({'.join(',',@$listout).'})');",
                "@@ -311,3 +318,3 @@ my $listin = $testClient->testList($listout);",
                "-print(\" = {\".join(\",\",@$listin).\"}\\n\");",
                "+print(' = {'.join(',',@$listin).\"}\\n\");",
                "@@ -316,3 +323,3 @@ print(\" = {\".join(\",\",@$listin).\"}\\n\");",
                " #",
                "-print(\"testEnum(ONE)\");",
                "+print('testEnum(ONE)');",
                " my $ret = $testClient->testEnum(ThriftTest::Numberz::ONE);",
                "@@ -320,3 +327,3 @@ print(\" = $ret\\n\");",
                "-print(\"testEnum(TWO)\");",
                "+print('testEnum(TWO)');",
                " $ret = $testClient->testEnum(ThriftTest::Numberz::TWO);",
                "@@ -324,3 +331,3 @@ print(\" = $ret\\n\");",
                "-print(\"testEnum(THREE)\");",
                "+print('testEnum(THREE)');",
                " $ret = $testClient->testEnum(ThriftTest::Numberz::THREE);",
                "@@ -328,3 +335,3 @@ print(\" = $ret\\n\");",
                "-print(\"testEnum(FIVE)\");",
                "+print('testEnum(FIVE)');",
                " $ret = $testClient->testEnum(ThriftTest::Numberz::FIVE);",
                "@@ -332,3 +339,3 @@ print(\" = $ret\\n\");",
                "-print(\"testEnum(EIGHT)\");",
                "+print('testEnum(EIGHT)');",
                " $ret = $testClient->testEnum(ThriftTest::Numberz::EIGHT);",
                "@@ -339,3 +346,3 @@ print(\" = $ret\\n\");",
                " #",
                "-print(\"testTypedef(309858235082523)\");",
                "+print('testTypedef(309858235082523)');",
                " my $uid = $testClient->testTypedef(309858235082523);",
                "@@ -346,5 +353,5 @@ print(\" = $uid\\n\");",
                " #",
                "-print(\"testMapMap(1)\");",
                "+print('testMapMap(1)');",
                " my $mm = $testClient->testMapMap(1);",
                "-print(\" = {\");",
                "+print(' = {');",
                " while( my ($key,$val) = each %$mm) {",
                "@@ -354,3 +361,3 @@ while( my ($key,$val) = each %$mm) {",
                "     }",
                "-    print(\"}, \");",
                "+    print('}, ');",
                " }",
                "@@ -361,6 +368,6 @@ print(\"}\\n\");",
                " #",
                "-my $insane = new ThriftTest::Insanity();",
                "+my $insane = ThriftTest::Insanity->new();",
                " $insane->{userMap}->{ThriftTest::Numberz::FIVE} = 5000;",
                "-my $truck = new ThriftTest::Xtruct();",
                "-$truck->string_thing(\"Hello2\");",
                "+my $truck = ThriftTest::Xtruct->new();",
                "+$truck->string_thing('Hello2');",
                " $truck->byte_thing(2);",
                "@@ -368,4 +375,4 @@ $truck->i32_thing(2);",
                " $truck->i64_thing(2);",
                "-my $truck2 = new ThriftTest::Xtruct();",
                "-$truck2->string_thing(\"Goodbye4\");",
                "+my $truck2 = ThriftTest::Xtruct->new();",
                "+$truck2->string_thing('Goodbye4');",
                " $truck2->byte_thing(4);",
                "@@ -376,5 +383,5 @@ push(@{$insane->{xtructs}}, $truck2);",
                "-print(\"testInsanity()\");",
                "+print('testInsanity()');",
                " my $whoa = $testClient->testInsanity($insane);",
                "-print(\" = {\");",
                "+print(' = {');",
                " while( my ($key,$val) = each %$whoa) {",
                "@@ -384,4 +391,4 @@ while( my ($key,$val) = each %$whoa) {",
                "         my $userMap = $v2->{userMap};",
                "-        print(\"{\");",
                "-        if (ref($userMap) eq \"HASH\") {",
                "+        print('{');",
                "+        if (ref($userMap) eq 'HASH') {",
                "             while( my($k3,$v3) = each %$userMap) {",
                "@@ -390,17 +397,17 @@ while( my ($key,$val) = each %$whoa) {",
                "         }",
                "-        print(\"}, \");",
                "+        print('}, ');",
                "         my $xtructs = $v2->{xtructs};",
                "-        print(\"{\");",
                "-        if (ref($xtructs) eq \"ARRAY\") {",
                "+        print('{');",
                "+        if (ref($xtructs) eq 'ARRAY') {",
                "             foreach my $x (@$xtructs) {",
                "-                print(\"{\\\"\".$x->{string_thing}.\"\\\", \".",
                "-                      $x->{byte_thing}.\", \".$x->{i32_thing}.\", \".$x->{i64_thing}.\"}, \");",
                "+                print('{\"'.$x->{string_thing}.'\", '.",
                "+                      $x->{byte_thing}.', '.$x->{i32_thing}.', '.$x->{i64_thing}.'}, ');",
                "             }",
                "         }",
                "-        print(\"}\");",
                "+        print('}');",
                "-        print(\"}, \");",
                "+        print('}, ');",
                "     }",
                "-    print(\"}, \");",
                "+    print('}, ');",
                " }",
                "@@ -411,3 +418,3 @@ print(\"}\\n\");",
                " #",
                "-print(\"testException('Xception')\");",
                "+print(q|testException('Xception')|);",
                " eval {",
                "@@ -424,3 +431,3 @@ eval {",
                " my $stop = gettimeofday();",
                "-my $elp  = sprintf(\"%d\",1000*($stop - $start), 0);",
                "+my $elp  = sprintf('%d',1000*($stop - $start), 0);",
                " print(\"Total time: $elp ms\\n\");",
                "diff --git a/test/perl/TestServer.pl b/test/perl/TestServer.pl",
                "index e8c1cfa9e..d2b9a38ab 100644",
                "--- a/test/perl/TestServer.pl",
                "+++ b/test/perl/TestServer.pl",
                "@@ -29,3 +29,3 @@ use Time::HiRes qw(gettimeofday);",
                " $SIG{INT} = \\&sigint_handler;",
                "- ",
                "+",
                " use lib '../../lib/perl/lib';",
                "@@ -50,3 +50,3 @@ $|++;",
                " sub usage {",
                "-    print <<EOF;",
                "+    print <<\"EOF\";",
                " Usage: $0 [OPTIONS]",
                "@@ -101,14 +101,17 @@ if ($opts{ssl} and not defined $opts{cert}) {",
                "-my $handler = new ThriftTestHandler();",
                "-my $handler2 = new SecondServiceHandler();",
                "-my $processor = new ThriftTest::ThriftTestProcessor($handler);",
                "-my $processor2 = new ThriftTest::SecondServiceProcessor($handler2);",
                "+my $handler    = ThriftTestHandler->new();",
                "+my $handler2   = SecondServiceHandler->new();",
                "+my $processor  = ThriftTest::ThriftTestProcessor->new($handler);",
                "+my $processor2 = ThriftTest::SecondServiceProcessor->new($handler2);",
                "+",
                " my $serversocket;",
                "-if ($opts{\"domain-socket\"}) {",
                "-    unlink($opts{\"domain-socket\"});",
                "-    $serversocket = new Thrift::UnixServerSocket($opts{\"domain-socket\"});",
                "-} elsif ($opts{ssl}) {",
                "-    $serversocket = new Thrift::SSLServerSocket(\\%opts);",
                "-} else {",
                "-    $serversocket = new Thrift::ServerSocket(\\%opts);",
                "+if ($opts{'domain-socket'}) {",
                "+    unlink($opts{'domain-socket'});",
                "+    $serversocket = Thrift::UnixServerSocket->new($opts{'domain-socket'});",
                "+}",
                "+elsif ($opts{ssl}) {",
                "+    $serversocket = Thrift::SSLServerSocket->new(\\%opts);",
                "+}",
                "+else {",
                "+    $serversocket = Thrift::ServerSocket->new(\\%opts);",
                " }",
                "@@ -116,6 +119,8 @@ my $transport;",
                " if ($opts{transport} eq 'buffered') {",
                "-    $transport = new Thrift::BufferedTransportFactory();",
                "-} elsif ($opts{transport} eq 'framed') {",
                "-    $transport = new Thrift::FramedTransportFactory();",
                "-} else {",
                "+    $transport = Thrift::BufferedTransportFactory->new();",
                "+}",
                "+elsif ($opts{transport} eq 'framed') {",
                "+    $transport = Thrift::FramedTransportFactory->new();",
                "+}",
                "+else {",
                "     usage();",
                "@@ -125,4 +130,5 @@ my $protocol;",
                " if ($opts{protocol} eq 'binary' || $opts{protocol} eq 'multi') {",
                "-    $protocol = new Thrift::BinaryProtocolFactory();",
                "-} else {",
                "+    $protocol = Thrift::BinaryProtocolFactory->new();",
                "+}",
                "+else {",
                "     usage();",
                "@@ -132,6 +138,6 @@ if ($opts{protocol} eq 'binary' || $opts{protocol} eq 'multi') {",
                " if (index($opts{protocol}, 'multi') == 0) {",
                "-  my $newProcessor = new Thrift::MultiplexedProcessor($protocol);",
                "+  my $newProcessor = Thrift::MultiplexedProcessor->new($protocol);",
                "   $newProcessor->defaultProcessor($processor);",
                "-  $newProcessor->registerProcessor(\"ThriftTest\", $processor);",
                "-  $newProcessor->registerProcessor(\"SecondService\", $processor2);",
                "+  $newProcessor->registerProcessor('ThriftTest', $processor);",
                "+  $newProcessor->registerProcessor('SecondService', $processor2);",
                "   $processor = $newProcessor;",
                "@@ -141,10 +147,10 @@ my $ssltag = '';",
                " if ($opts{ssl}) {",
                "-    $ssltag = \"(SSL)\";",
                "+    $ssltag = '(SSL)';",
                " }",
                " my $listening_on = \"$opts{port} $ssltag\";",
                "-if ($opts{\"domain-socket\"}) {",
                "-    $listening_on = $opts{\"domain-socket\"};",
                "+if ($opts{'domain-socket'}) {",
                "+    $listening_on = $opts{'domain-socket'};",
                " }",
                "-my $server = new Thrift::SimpleServer($processor, $serversocket, $transport, $protocol);",
                "-print \"Starting \\\"simple\\\" server ($opts{transport}/$opts{protocol}) listen on: $listening_on\\n\";",
                "+my $server = Thrift::SimpleServer->new($processor, $serversocket, $transport, $protocol);",
                "+print qq|Starting \"simple\" server ($opts{transport}/$opts{protocol}) listen on: $listening_on\\n|;",
                " $server->serve();",
                "@@ -171,3 +177,3 @@ sub new {",
                "-sub testVoid() {",
                "+sub testVoid {",
                "   print(\"testVoid()\\n\");",
                "@@ -175,3 +181,3 @@ sub testVoid() {",
                "-sub testString() {",
                "+sub testString {",
                "   my $self = shift;",
                "@@ -182,6 +188,6 @@ sub testString() {",
                "-sub testBool() {",
                "+sub testBool {",
                "   my $self = shift;",
                "   my $thing = shift;",
                "-  my $str = $thing ? \"true\" : \"false\";",
                "+  my $str = $thing ? 'true' : 'false';",
                "   print(\"testBool($str)\\n\");",
                "@@ -190,3 +196,3 @@ sub testBool() {",
                "-sub testByte() {",
                "+sub testByte {",
                "   my $self = shift;",
                "@@ -197,3 +203,3 @@ sub testByte() {",
                "-sub testI32() {",
                "+sub testI32 {",
                "   my $self = shift;",
                "@@ -204,3 +210,3 @@ sub testI32() {",
                "-sub testI64() {",
                "+sub testI64 {",
                "   my $self = shift;",
                "@@ -211,3 +217,3 @@ sub testI64() {",
                "-sub testDouble() {",
                "+sub testDouble {",
                "   my $self = shift;",
                "@@ -218,3 +224,3 @@ sub testDouble() {",
                "-sub testBinary() {",
                "+sub testBinary {",
                "     my $self = shift;",
                "@@ -222,8 +228,5 @@ sub testBinary() {",
                "     my @bytes = split //, $thing;",
                "-    print(\"testBinary(\");",
                "-    foreach (@bytes)",
                "-    {",
                "-        printf \"%02lx\", ord $_;",
                "-    }",
                "-    print(\")\\n\");",
                "+    print 'testBinary(';",
                "+    printf( '%02lx', ord $_ ) foreach (@bytes);",
                "+    print \")\\n\";",
                "     return $thing;",
                "@@ -231,6 +234,6 @@ sub testBinary() {",
                "-sub testStruct() {",
                "+sub testStruct {",
                "   my $self = shift;",
                "   my $thing = shift;",
                "-  printf(\"testStruct({\\\"%s\\\", %d, %d, %lld})\\n\",",
                "+  printf(qq|testStruct({\"%s\", %d, %d, %lld})\\n|,",
                "            $thing->{string_thing},",
                "@@ -242,3 +245,3 @@ sub testStruct() {",
                "-sub testNest() {",
                "+sub testNest {",
                "   my $self = shift;",
                "@@ -246,3 +249,3 @@ sub testNest() {",
                "   my $thing = $nest->{struct_thing};",
                "-  printf(\"testNest({%d, {\\\"%s\\\", %d, %d, %lld}, %d})\\n\",",
                "+  printf(qq|testNest({%d, {\"%s\", %d, %d, %lld}, %d})\\n|,",
                "            $nest->{byte_thing},",
                "@@ -256,16 +259,10 @@ sub testNest() {",
                "-sub testMap() {",
                "+sub testMap {",
                "   my $self = shift;",
                "   my $thing = shift;",
                "-  print(\"testMap({\");",
                "-  my $first = 1;",
                "-  foreach my $key (keys %$thing) {",
                "-    if ($first) {",
                "-        $first = 0;",
                "-    } else {",
                "-        print(\", \");",
                "-    }",
                "-    print(\"$key => $thing->{$key}\");",
                "-  }",
                "-  print(\"})\\n\");",
                "+  printf \"testMap({%s})\\n\",",
                "+    join( ', ',",
                "+          map { $_ . ' => ' . $thing->{$_} }",
                "+          sort keys %$thing",
                "+    );",
                "   return $thing;",
                "@@ -273,16 +270,10 @@ sub testMap() {",
                "-sub testStringMap() {",
                "+sub testStringMap {",
                "   my $self = shift;",
                "   my $thing = shift;",
                "-  print(\"testStringMap({\");",
                "-  my $first = 1;",
                "-  foreach my $key (keys %$thing) {",
                "-    if ($first) {",
                "-        $first = 0;",
                "-    } else {",
                "-        print(\", \");",
                "-    }",
                "-    print(\"$key => $thing->{$key}\");",
                "-  }",
                "-  print(\"})\\n\");",
                "+  printf \"testStringMap({%s})\\n\",",
                "+    join( ', ',",
                "+          map { $_ . ' => ' . $thing->{$_} }",
                "+          sort keys %$thing",
                "+    );",
                "   return $thing;",
                "@@ -290,36 +281,14 @@ sub testStringMap() {",
                "-sub testSet() {",
                "+sub testSet {",
                "   my $self = shift;",
                "   my $thing = shift;",
                "-  my @arr;",
                "-  my $result = \\@arr;",
                "-  print(\"testSet({\");",
                "-  my $first = 1;",
                "-  foreach my $key (keys %$thing) {",
                "-    if ($first) {",
                "-        $first = 0;",
                "-    } else {",
                "-        print(\", \");",
                "-    }",
                "-    print(\"$key\");",
                "-    push(@arr, $key);",
                "-  }",
                "-  print(\"})\\n\");",
                "-  return $result;",
                "+  my @result = sort keys %$thing;",
                "+  printf \"testSet({%s})\\n\", join(', ', @result );",
                "+  return \\@result;",
                " }",
                "-sub testList() {",
                "+sub testList {",
                "   my $self = shift;",
                "   my $thing = shift;",
                "-  print(\"testList({\");",
                "-  my $first = 1;",
                "-  foreach my $key (@$thing) {",
                "-    if ($first) {",
                "-        $first = 0;",
                "-    } else {",
                "-        print(\", \");",
                "-    }",
                "-    print(\"$key\");",
                "-  }",
                "-  print(\"})\\n\");",
                "+  print \"testList({%s})\\n\", join(', ', @$thing);",
                "   return $thing;",
                "@@ -327,6 +296,6 @@ sub testList() {",
                "-sub testEnum() {",
                "+sub testEnum {",
                "   my $self = shift;",
                "   my $thing = shift;",
                "-  print(\"testEnum($thing)\\n\");",
                "+  print \"testEnum($thing)\\n\";",
                "   return $thing;",
                "@@ -334,3 +303,3 @@ sub testEnum() {",
                "-sub testTypedef() {",
                "+sub testTypedef {",
                "   my $self = shift;",
                "@@ -341,3 +310,3 @@ sub testTypedef() {",
                "-sub testMapMap() {",
                "+sub testMapMap {",
                "   my $self = shift;",
                "@@ -350,3 +319,3 @@ sub testMapMap() {",
                "-sub testInsanity() {",
                "+sub testInsanity {",
                "   my $self = shift;",
                "@@ -355,10 +324,10 @@ sub testInsanity() {",
                "-  my $hello = new ThriftTest::Xtruct({string_thing => \"Hello2\", byte_thing => 2, i32_thing => 2, i64_thing => 2});",
                "+  my $hello = ThriftTest::Xtruct->new({string_thing => 'Hello2', byte_thing => 2, i32_thing => 2, i64_thing => 2});",
                "   my @hellos;",
                "   push(@hellos, $hello);",
                "-  my $goodbye = new ThriftTest::Xtruct({string_thing => \"Goodbye4\", byte_thing => 4, i32_thing => 4, i64_thing => 4});",
                "+  my $goodbye = ThriftTest::Xtruct->new({string_thing => 'Goodbye4', byte_thing => 4, i32_thing => 4, i64_thing => 4});",
                "   my @goodbyes;",
                "   push(@goodbyes, $goodbye);",
                "-  my $crazy = new ThriftTest::Insanity({userMap => { ThriftTest::Numberz::EIGHT => 8 }, xtructs => \\@goodbyes});",
                "-  my $loony = new ThriftTest::Insanity();",
                "+  my $crazy = ThriftTest::Insanity->new({userMap => { ThriftTest::Numberz::EIGHT => 8 }, xtructs => \\@goodbyes});",
                "+  my $loony = ThriftTest::Insanity->new();",
                "   my $result = { 1 => { ThriftTest::Numberz::TWO => $argument, ThriftTest::Numberz::THREE => $argument },",
                "@@ -368,3 +337,3 @@ sub testInsanity() {",
                "-sub testMulti() {",
                "+sub testMulti {",
                "   my $self = shift;",
                "@@ -378,6 +347,6 @@ sub testMulti() {",
                "   print(\"testMulti()\\n\");",
                "-  return new ThriftTest::Xtruct({string_thing => \"Hello2\", byte_thing => $arg0, i32_thing => $arg1, i64_thing => $arg2});",
                "+  return ThriftTest::Xtruct->new({string_thing => 'Hello2', byte_thing => $arg0, i32_thing => $arg1, i64_thing => $arg2});",
                " }",
                "-sub testException() {",
                "+sub testException {",
                "   my $self = shift;",
                "@@ -385,8 +354,10 @@ sub testException() {",
                "   print(\"testException($arg)\\n\");",
                "-  if ($arg eq \"Xception\") {",
                "-    die new ThriftTest::Xception({errorCode => 1001, message => $arg});",
                "-  } elsif ($arg eq \"TException\") {",
                "-    die \"astring\"; # all unhandled exceptions become TExceptions",
                "-  } else {",
                "-    return new ThriftTest::Xtruct({string_thing => $arg});",
                "+  if ($arg eq 'Xception') {",
                "+      die ThriftTest::Xception->new({errorCode => 1001, message => $arg});",
                "+  }",
                "+  elsif ($arg eq 'TException') {",
                "+      die 'astring'; # all unhandled exceptions become TExceptions",
                "+  }",
                "+  else {",
                "+      return ThriftTest::Xtruct->new({string_thing => $arg});",
                "   }",
                "@@ -394,3 +365,3 @@ sub testException() {",
                "-sub testMultiException() {",
                "+sub testMultiException {",
                "   my $self = shift;",
                "@@ -400,9 +371,11 @@ sub testMultiException() {",
                "   printf(\"testMultiException(%s, %s)\\n\", $arg0, $arg1);",
                "-  if ($arg0 eq \"Xception\") {",
                "-    die new ThriftTest::Xception({errorCode => 1001, message => \"This is an Xception\"});",
                "-  } elsif ($arg0 eq \"Xception2\") {",
                "-    my $struct_thing = new ThriftTest::Xtruct({string_thing => \"This is an Xception2\"});",
                "-    die new ThriftTest::Xception2({errorCode => 2002, struct_thing => $struct_thing});",
                "-  } else {",
                "-    return new ThriftTest::Xtruct({string_thing => $arg1});",
                "+  if ($arg0 eq 'Xception') {",
                "+    die ThriftTest::Xception->new({errorCode => 1001, message => 'This is an Xception'});",
                "+  }",
                "+  elsif ($arg0 eq 'Xception2') {",
                "+    my $struct_thing = ThriftTest::Xtruct->new({string_thing => 'This is an Xception2'});",
                "+    die ThriftTest::Xception2->new({errorCode => 2002, struct_thing => $struct_thing});",
                "+  }",
                "+  else {",
                "+    return ThriftTest::Xtruct->new({string_thing => $arg1});",
                "   }",
                "@@ -410,3 +383,3 @@ sub testMultiException() {",
                "-sub testOneway() {",
                "+sub testOneway {",
                "   my $self = shift;",
                "@@ -430,3 +403,3 @@ sub new {",
                "-sub secondtestString() {",
                "+sub secondtestString {",
                "   my $self = shift;",
                "@@ -434,3 +407,3 @@ sub secondtestString() {",
                "   print(\"testString($thing)\\n\");",
                "-  return \"testString(\\\"\" . $thing . \"\\\")\";",
                "+  return qq|testString(\"$thing\")|;",
                " }",
                "diff --git a/tutorial/perl/PerlClient.pl b/tutorial/perl/PerlClient.pl",
                "index 1d596568d..7c23289ce 100644",
                "--- a/tutorial/perl/PerlClient.pl",
                "+++ b/tutorial/perl/PerlClient.pl",
                "@@ -39,6 +39,6 @@ use Data::Dumper;",
                "-my $socket    = new Thrift::Socket('localhost',9090);",
                "-my $transport = new Thrift::BufferedTransport($socket,1024,1024);",
                "-my $protocol  = new Thrift::BinaryProtocol($transport);",
                "-my $client    = new tutorial::CalculatorClient($protocol);",
                "+my $socket    = Thrift::Socket->new('localhost',9090);",
                "+my $transport = Thrift::BufferedTransport->new($socket,1024,1024);",
                "+my $protocol  = Thrift::BinaryProtocol->new($transport);",
                "+my $client    = tutorial::CalculatorClient->new($protocol);",
                "@@ -55,3 +55,3 @@ eval{",
                "-    my $work = new tutorial::Work();",
                "+    my $work = tutorial::Work->new();",
                "@@ -65,3 +65,3 @@ eval{",
                "     }; if($@) {",
                "-        warn \"InvalidOperation: \".Dumper($@);",
                "+        warn 'InvalidOperation: '.Dumper($@);",
                "     }",
                "diff --git a/tutorial/perl/PerlServer.pl b/tutorial/perl/PerlServer.pl",
                "index adec97863..dfe6b89a1 100644",
                "--- a/tutorial/perl/PerlServer.pl",
                "+++ b/tutorial/perl/PerlServer.pl",
                "@@ -1,2 +1,2 @@",
                "-#!/usr/bin/perl",
                "+#!/usr/bin/env perl",
                "@@ -69,3 +69,3 @@ sub calculate",
                "     {",
                "-      my $x = new tutorial::InvalidOperation;",
                "+      my $x = tutorial::InvalidOperation->new();",
                "       $x->whatOp($op);",
                "@@ -76,3 +76,3 @@ sub calculate",
                "   } else {",
                "-    my $x = new tutorial::InvalidOperation;",
                "+    my $x = tutorial::InvalidOperation->new();",
                "     $x->whatOp($op);",
                "@@ -82,3 +82,3 @@ sub calculate",
                "-  my $log = new shared::SharedStruct;",
                "+  my $log = shared::SharedStruct->new();",
                "   $log->key($logid);",
                "@@ -106,6 +106,6 @@ sub zip",
                " eval {",
                "-  my $handler       = new CalculatorHandler;",
                "-  my $processor     = new tutorial::CalculatorProcessor($handler);",
                "-  my $serversocket  = new Thrift::ServerSocket(9090);",
                "-  my $forkingserver = new Thrift::ForkingServer($processor, $serversocket);",
                "+  my $handler       = CalculatorHandler->new();",
                "+  my $processor     = tutorial::CalculatorProcessor->new($handler);",
                "+  my $serversocket  = Thrift::ServerSocket->new(9090);",
                "+  my $forkingserver = Thrift::ForkingServer->new($processor, $serversocket);",
                "   print \"Starting the server...\\n\";"
            ],
            "changed_files": [
                "compiler/cpp/src/thrift/generate/t_perl_generator.cc",
                "lib/perl/lib/Thrift/BinaryProtocol.pm",
                "lib/perl/lib/Thrift/Exception.pm",
                "lib/perl/lib/Thrift/FramedTransport.pm",
                "lib/perl/lib/Thrift/HttpClient.pm",
                "lib/perl/lib/Thrift/MemoryBuffer.pm",
                "lib/perl/lib/Thrift/MultiplexedProcessor.pm",
                "lib/perl/lib/Thrift/MultiplexedProtocol.pm",
                "lib/perl/lib/Thrift/Protocol.pm",
                "lib/perl/lib/Thrift/SSLServerSocket.pm",
                "lib/perl/lib/Thrift/SSLSocket.pm",
                "lib/perl/lib/Thrift/Server.pm",
                "lib/perl/lib/Thrift/ServerSocket.pm",
                "lib/perl/lib/Thrift/Socket.pm",
                "lib/perl/lib/Thrift/Transport.pm",
                "lib/perl/lib/Thrift/UnixServerSocket.pm",
                "lib/perl/lib/Thrift/UnixSocket.pm",
                "test/perl/TestClient.pl",
                "test/perl/TestServer.pl",
                "tutorial/perl/PerlClient.pl",
                "tutorial/perl/PerlServer.pl"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4382": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4382",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9ee29516c419b7eaa95ed89a93b135ea1c683576",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1539758688,
            "hunks": 6,
            "message": "Replace git.apache.org imports with github.com Client: go",
            "diff": [
                "diff --git a/compiler/cpp/src/thrift/generate/t_go_generator.cc b/compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "index 0807efbe9..235a0b759 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "@@ -63,3 +63,3 @@ bool format_go_output(const string& file_path);",
                "-const string DEFAULT_THRIFT_IMPORT = \"git.apache.org/thrift.git/lib/go/thrift\";",
                "+const string DEFAULT_THRIFT_IMPORT = \"github.com/apache/thrift/lib/go/thrift\";",
                " static std::string package_flag;",
                "diff --git a/tutorial/go/Makefile.am b/tutorial/go/Makefile.am",
                "index 87a8f5a71..bd57d656f 100644",
                "--- a/tutorial/go/Makefile.am",
                "+++ b/tutorial/go/Makefile.am",
                "@@ -24,3 +24,3 @@ all-local: gen-go/tutorial/calculator.go",
                "-check: src/git.apache.org/thrift.git/lib/go/thrift thirdparty-dep",
                "+check: src/github.com/apache/thrift/lib/go/thrift thirdparty-dep",
                " \t$(THRIFT) -r --gen go$(COMPILER_EXTRAFLAG) $(top_srcdir)/tutorial/tutorial.thrift",
                "@@ -30,5 +30,5 @@ check: src/git.apache.org/thrift.git/lib/go/thrift thirdparty-dep",
                "-src/git.apache.org/thrift.git/lib/go/thrift:",
                "-\tmkdir -p src/git.apache.org/thrift.git/lib/go",
                "-\tln -sf $(realpath $(top_srcdir)/lib/go/thrift) src/git.apache.org/thrift.git/lib/go/thrift",
                "+src/github.com/apache/thrift/lib/go/thrift:",
                "+\tmkdir -p src/github.com/apache/thrift/lib/go",
                "+\tln -sf $(realpath $(top_srcdir)/lib/go/thrift) src/github.com/apache/thrift/lib/go/thrift",
                "diff --git a/tutorial/go/src/client.go b/tutorial/go/src/client.go",
                "index 1d658b954..e3ebe00df 100644",
                "--- a/tutorial/go/src/client.go",
                "+++ b/tutorial/go/src/client.go",
                "@@ -27,3 +27,3 @@ import (",
                "-\t\"git.apache.org/thrift.git/lib/go/thrift\"",
                "+\t\"github.com/apache/thrift/lib/go/thrift\"",
                " )",
                "diff --git a/tutorial/go/src/main.go b/tutorial/go/src/main.go",
                "index 63154e3b8..7730d7b32 100644",
                "--- a/tutorial/go/src/main.go",
                "+++ b/tutorial/go/src/main.go",
                "@@ -24,3 +24,3 @@ import (",
                " \t\"fmt\"",
                "-\t\"git.apache.org/thrift.git/lib/go/thrift\"",
                "+\t\"github.com/apache/thrift/lib/go/thrift\"",
                " \t\"os\"",
                "diff --git a/tutorial/go/src/server.go b/tutorial/go/src/server.go",
                "index e4c4b9707..95708eb87 100644",
                "--- a/tutorial/go/src/server.go",
                "+++ b/tutorial/go/src/server.go",
                "@@ -24,3 +24,3 @@ import (",
                " \t\"fmt\"",
                "-\t\"git.apache.org/thrift.git/lib/go/thrift\"",
                "+\t\"github.com/apache/thrift/lib/go/thrift\"",
                " \t\"tutorial\""
            ],
            "changed_files": [
                "compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "tutorial/go/Makefile.am",
                "tutorial/go/src/client.go",
                "tutorial/go/src/main.go",
                "tutorial/go/src/server.go"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file, server",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d566da7739c9aae63fe7fc9d267887fa73e5dda7",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1538773540,
            "hunks": 2,
            "message": "THRIFT-4494: Increase Java Socket Buffer Size (#1608)",
            "diff": [
                "diff --git a/lib/java/src/org/apache/thrift/transport/TSocket.java b/lib/java/src/org/apache/thrift/transport/TSocket.java",
                "index 148122f7e..b20b32b78 100644",
                "--- a/lib/java/src/org/apache/thrift/transport/TSocket.java",
                "+++ b/lib/java/src/org/apache/thrift/transport/TSocket.java",
                "@@ -82,4 +82,4 @@ public class TSocket extends TIOStreamTransport {",
                "       try {",
                "-        inputStream_ = new BufferedInputStream(socket_.getInputStream(), 1024);",
                "-        outputStream_ = new BufferedOutputStream(socket_.getOutputStream(), 1024);",
                "+        inputStream_ = new BufferedInputStream(socket_.getInputStream());",
                "+        outputStream_ = new BufferedOutputStream(socket_.getOutputStream());",
                "       } catch (IOException iox) {",
                "@@ -221,4 +221,4 @@ public class TSocket extends TIOStreamTransport {",
                "       socket_.connect(new InetSocketAddress(host_, port_), connectTimeout_);",
                "-      inputStream_ = new BufferedInputStream(socket_.getInputStream(), 1024);",
                "-      outputStream_ = new BufferedOutputStream(socket_.getOutputStream(), 1024);",
                "+      inputStream_ = new BufferedInputStream(socket_.getInputStream());",
                "+      outputStream_ = new BufferedOutputStream(socket_.getOutputStream());",
                "     } catch (IOException iox) {"
            ],
            "changed_files": [
                "lib/java/src/org/apache/thrift/transport/TSocket.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4494": ""
            },
            "ghissue_refs": {
                "1608": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4494",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1608",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5c1ecb67cde4d9aff7ed3188ab11566184b27bf0",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1539672013,
            "hunks": 2,
            "message": "THRIFT-4650: fix required fields incorrectly being marked as set This closes #1610. Client: go",
            "diff": [
                "diff --git a/compiler/cpp/src/thrift/generate/t_go_generator.cc b/compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "index b5742f6ec..0807efbe9 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "@@ -1593,2 +1593,9 @@ void t_go_generator::generate_go_struct_reader(ostream& out,",
                "     out << indent() << \"  }\" << endl;",
                "+",
                "+    // Mark required field as read",
                "+    if ((*f_iter)->get_req() == t_field::T_REQUIRED) {",
                "+      const string field_name(publicize(escape_string((*f_iter)->get_name())));",
                "+      out << indent() << \"  isset\" << field_name << \" = true\" << endl;",
                "+    }",
                "+",
                "     out << indent() << \"} else {\" << endl;",
                "@@ -1599,7 +1606,2 @@ void t_go_generator::generate_go_struct_reader(ostream& out,",
                "-    // Mark required field as read",
                "-    if ((*f_iter)->get_req() == t_field::T_REQUIRED) {",
                "-      const string field_name(publicize(escape_string((*f_iter)->get_name())));",
                "-      out << indent() << \"isset\" << field_name << \" = true\" << endl;",
                "-    }"
            ],
            "changed_files": [
                "compiler/cpp/src/thrift/generate/t_go_generator.cc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4650": ""
            },
            "ghissue_refs": {
                "1610": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4650",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1610",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6644a9ce1e0e57d8c3b754885168a59e0866f72f",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1538708977,
            "hunks": 0,
            "message": "Merge pull request #1603 from jeking3/THRIFT-3863 THRIFT-3863: fix automake lua library list dependency ordering",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-3863": ""
            },
            "ghissue_refs": {
                "1603": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-3863",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1603",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cd829a0b9a5c66203b63350fa029589669ec43f6",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1539886858,
            "hunks": 4,
            "message": "update some bionic build components",
            "diff": [
                "diff --git a/build/docker/ubuntu-bionic/Dockerfile b/build/docker/ubuntu-bionic/Dockerfile",
                "index 795c086e9..a8c1417ac 100644",
                "--- a/build/docker/ubuntu-bionic/Dockerfile",
                "+++ b/build/docker/ubuntu-bionic/Dockerfile",
                "@@ -91,3 +91,3 @@ RUN apt-get install -y --no-install-recommends \\",
                "-ENV SBCL_VERSION 1.4.9",
                "+ENV SBCL_VERSION 1.4.12",
                " RUN \\",
                "@@ -103,4 +103,4 @@ RUN \\",
                "-ENV D_VERSION     2.081.0",
                "-ENV DMD_DEB       dmd_2.081.0-0_amd64.deb",
                "+ENV D_VERSION     2.082.1",
                "+ENV DMD_DEB       dmd_2.082.1-0_amd64.deb",
                " RUN \\",
                "@@ -142,5 +142,5 @@ RUN apt-get install -y --no-install-recommends \\",
                " # golang",
                "-ENV GOLANG_VERSION 1.10.3",
                "+ENV GOLANG_VERSION 1.11.1",
                " ENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz",
                "-ENV GOLANG_DOWNLOAD_SHA256 fa1b0e45d3b647c252f51f5e1204aba049cde4af177ef9f2181f43004f901035",
                "+ENV GOLANG_DOWNLOAD_SHA256 2871270d8ff0c8c69f161aaae42f9f28739855ff5c5204752a8d92a1c9f63993",
                " RUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz && \\"
            ],
            "changed_files": [
                "build/docker/ubuntu-bionic/Dockerfile"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "014f53f6582fbae8146ae291d471382016091a06",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1538147481,
            "hunks": 10,
            "message": "THRIFT-4496: python specific list of keywords for python generator (#1567) Client: py",
            "diff": [
                "diff --git a/compiler/cpp/src/thrift/generate/t_generator.cc b/compiler/cpp/src/thrift/generate/t_generator.cc",
                "index 7549d5dc2..ca3f5dd68 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_generator.cc",
                "@@ -78,2 +78,73 @@ void t_generator::generate_program() {",
                "+std::set<std::string> t_generator::lang_keywords() const {",
                "+  std::string keywords[] = { \"BEGIN\", \"END\", \"__CLASS__\", \"__DIR__\", \"__FILE__\", \"__FUNCTION__\",",
                "+      \"__LINE__\", \"__METHOD__\", \"__NAMESPACE__\", \"abstract\", \"alias\", \"and\", \"args\", \"as\",",
                "+      \"assert\", \"begin\", \"break\", \"case\", \"catch\", \"class\", \"clone\", \"continue\", \"declare\",",
                "+      \"def\", \"default\", \"del\", \"delete\", \"do\", \"dynamic\", \"elif\", \"else\", \"elseif\", \"elsif\",",
                "+      \"end\", \"enddeclare\", \"endfor\", \"endforeach\", \"endif\", \"endswitch\", \"endwhile\", \"ensure\",",
                "+      \"except\", \"exec\", \"finally\", \"float\", \"for\", \"foreach\", \"from\", \"function\", \"global\",",
                "+      \"goto\", \"if\", \"implements\", \"import\", \"in\", \"inline\", \"instanceof\", \"interface\", \"is\",",
                "+      \"lambda\", \"module\", \"native\", \"new\", \"next\", \"nil\", \"not\", \"or\", \"package\", \"pass\",",
                "+      \"public\", \"print\", \"private\", \"protected\", \"raise\", \"redo\", \"rescue\", \"retry\", \"register\",",
                "+      \"return\", \"self\", \"sizeof\", \"static\", \"super\", \"switch\", \"synchronized\", \"then\", \"this\",",
                "+      \"throw\", \"transient\", \"try\", \"undef\", \"unless\", \"unsigned\", \"until\", \"use\", \"var\",",
                "+      \"virtual\", \"volatile\", \"when\", \"while\", \"with\", \"xor\", \"yield\" };",
                "+  return std::set<std::string>(keywords, keywords + sizeof(keywords)/sizeof(keywords[0]) );",
                "+}",
                "+",
                "+void t_generator::validate_input() const {",
                "+  validate(program_->get_enums());",
                "+  validate(program_->get_typedefs());",
                "+  validate(program_->get_objects());",
                "+  validate(program_->get_consts());",
                "+  validate(program_->get_services());",
                "+}",
                "+",
                "+template <typename T>",
                "+void t_generator::validate(const vector<T>& list) const{",
                "+  typename vector<T>::const_iterator it;",
                "+  for(it=list.begin(); it != list.end(); ++it) {",
                "+      validate(*it);",
                "+  }",
                "+}",
                "+",
                "+void t_generator::validate(t_function const* f) const {",
                "+  validate_id(f->get_name());",
                "+  validate(f->get_arglist());",
                "+  validate(f->get_xceptions());",
                "+}",
                "+",
                "+void t_generator::validate(t_service const* s) const {",
                "+  validate_id(s->get_name());",
                "+  validate(s->get_functions());",
                "+}",
                "+",
                "+void t_generator::validate(t_enum const* en) const {",
                "+  validate_id(en->get_name());",
                "+  validate(en->get_constants());",
                "+}",
                "+void t_generator::validate(t_struct const* s) const {",
                "+  validate_id(s->get_name());",
                "+  validate(s->get_members());",
                "+}",
                "+",
                "+void t_generator::validate(t_enum_value const* en_val) const {",
                "+  validate_id(en_val->get_name());",
                "+}",
                "+void t_generator::validate(t_typedef const* td) const {",
                "+  validate_id(td->get_name());",
                "+}",
                "+void t_generator::validate(t_const const* c) const {",
                "+  validate_id(c->get_name());",
                "+}",
                "+void t_generator::validate(t_field const* f) const {",
                "+  validate_id(f->get_name());",
                "+}",
                "+",
                "+void t_generator::validate_id(const string& id) const {",
                "+  if (keywords_.find(id) != keywords_.end()) {",
                "+    failure(\"Cannot use reserved language keyword: \\\"%s\\\"\", id.c_str());",
                "+  }",
                "+}",
                "+",
                " string t_generator::escape_string(const string& in) const {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_generator.h b/compiler/cpp/src/thrift/generate/t_generator.h",
                "index abe31fec9..cb9d076b5 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_generator.h",
                "+++ b/compiler/cpp/src/thrift/generate/t_generator.h",
                "@@ -44,3 +44,4 @@ class t_generator {",
                " public:",
                "-  t_generator(t_program* program) {",
                "+  t_generator(t_program* program)",
                "+    : keywords_(lang_keywords()){",
                "     tmp_ = 0;",
                "@@ -98,3 +99,29 @@ public:",
                "+  /**",
                "+   * Check if all identifiers are valid for the target language",
                "+   */",
                "+  virtual void validate_input() const;",
                "+",
                " protected:",
                "+  virtual std::set<std::string> lang_keywords() const;",
                "+",
                "+  /**",
                "+   * A list of reserved words that cannot be used as identifiers.",
                "+   */",
                "+  const std::set<std::string> keywords_;",
                "+",
                "+  virtual void validate_id(const std::string& id) const;",
                "+",
                "+  virtual void validate(t_enum const* en) const;",
                "+  virtual void validate(t_enum_value const* en_val) const;",
                "+  virtual void validate(t_typedef const* td) const;",
                "+  virtual void validate(t_const const* c) const;",
                "+  virtual void validate(t_service const* s) const;",
                "+  virtual void validate(t_struct const* c) const;",
                "+  virtual void validate(t_field const* f) const;",
                "+  virtual void validate(t_function const* f) const;",
                "+",
                "+  template <typename T>",
                "+  void validate(const std::vector<T>& list) const;",
                "+",
                "   /**",
                "diff --git a/compiler/cpp/src/thrift/generate/t_py_generator.cc b/compiler/cpp/src/thrift/generate/t_py_generator.cc",
                "index fba9f9daa..93ba3d0ec 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_py_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_py_generator.cc",
                "@@ -53,6 +53,5 @@ public:",
                "                  const std::string& option_string)",
                "-    : t_generator(program) {",
                "+    : t_generator (program) {",
                "     std::map<std::string, std::string>::const_iterator iter;",
                "-",
                "     gen_newstyle_ = true;",
                "@@ -336,2 +335,11 @@ private:",
                "   std::string module_;",
                "+",
                "+protected:",
                "+  virtual std::set<std::string> lang_keywords() {",
                "+    std::string keywords[] = { \"False\", \"None\", \"True\", \"and\", \"as\", \"assert\", \"break\", \"class\",",
                "+          \"continue\", \"def\", \"del\", \"elif\", \"else\", \"except\", \"exec\", \"finally\", \"for\", \"from\",",
                "+          \"global\", \"if\", \"import\", \"in\", \"is\", \"lambda\", \"nonlocal\", \"not\", \"or\", \"pass\", \"print\",",
                "+          \"raise\", \"return\", \"try\", \"while\", \"with\", \"yield\" };",
                "+    return std::set<std::string>(keywords, keywords + sizeof(keywords)/sizeof(keywords[0]) );",
                "+  }",
                " };",
                "diff --git a/compiler/cpp/src/thrift/main.cc b/compiler/cpp/src/thrift/main.cc",
                "index 0c21e0281..cdc171c7a 100644",
                "--- a/compiler/cpp/src/thrift/main.cc",
                "+++ b/compiler/cpp/src/thrift/main.cc",
                "@@ -1030,2 +1030,3 @@ void generate(t_program* program, const vector<string>& generator_strings) {",
                "       } else if (generator) {",
                "+        generator->validate_input();",
                "         pverbose(\"Generating \\\"%s\\\"\\n\", iter->c_str());",
                "diff --git a/compiler/cpp/src/thrift/thriftl.ll b/compiler/cpp/src/thrift/thriftl.ll",
                "index 30669a49d..4f783be96 100644",
                "--- a/compiler/cpp/src/thrift/thriftl.ll",
                "+++ b/compiler/cpp/src/thrift/thriftl.ll",
                "@@ -78,7 +78,2 @@",
                "-void thrift_reserved_keyword(char* keyword) {",
                "-  yyerror(\"Cannot use reserved language keyword: \\\"%s\\\"\\n\", keyword);",
                "-  exit(1);",
                "-}",
                "-",
                " void integer_overflow(char* text) {",
                "@@ -271,107 +266,2 @@ literal_begin (['\\\"])",
                "-",
                "-\"BEGIN\"              { thrift_reserved_keyword(yytext); }",
                "-\"END\"                { thrift_reserved_keyword(yytext); }",
                "-\"__CLASS__\"          { thrift_reserved_keyword(yytext); }",
                "-\"__DIR__\"            { thrift_reserved_keyword(yytext); }",
                "-\"__FILE__\"           { thrift_reserved_keyword(yytext); }",
                "-\"__FUNCTION__\"       { thrift_reserved_keyword(yytext); }",
                "-\"__LINE__\"           { thrift_reserved_keyword(yytext); }",
                "-\"__METHOD__\"         { thrift_reserved_keyword(yytext); }",
                "-\"__NAMESPACE__\"      { thrift_reserved_keyword(yytext); }",
                "-\"abstract\"           { thrift_reserved_keyword(yytext); }",
                "-\"alias\"              { thrift_reserved_keyword(yytext); }",
                "-\"and\"                { thrift_reserved_keyword(yytext); }",
                "-\"args\"               { thrift_reserved_keyword(yytext); }",
                "-\"as\"                 { thrift_reserved_keyword(yytext); }",
                "-\"assert\"             { thrift_reserved_keyword(yytext); }",
                "-\"begin\"              { thrift_reserved_keyword(yytext); }",
                "-\"break\"              { thrift_reserved_keyword(yytext); }",
                "-\"case\"               { thrift_reserved_keyword(yytext); }",
                "-\"catch\"              { thrift_reserved_keyword(yytext); }",
                "-\"class\"              { thrift_reserved_keyword(yytext); }",
                "-\"clone\"              { thrift_reserved_keyword(yytext); }",
                "-\"continue\"           { thrift_reserved_keyword(yytext); }",
                "-\"declare\"            { thrift_reserved_keyword(yytext); }",
                "-\"def\"                { thrift_reserved_keyword(yytext); }",
                "-\"default\"            { thrift_reserved_keyword(yytext); }",
                "-\"del\"                { thrift_reserved_keyword(yytext); }",
                "-\"delete\"             { thrift_reserved_keyword(yytext); }",
                "-\"do\"                 { thrift_reserved_keyword(yytext); }",
                "-\"dynamic\"            { thrift_reserved_keyword(yytext); }",
                "-\"elif\"               { thrift_reserved_keyword(yytext); }",
                "-\"else\"               { thrift_reserved_keyword(yytext); }",
                "-\"elseif\"             { thrift_reserved_keyword(yytext); }",
                "-\"elsif\"              { thrift_reserved_keyword(yytext); }",
                "-\"end\"                { thrift_reserved_keyword(yytext); }",
                "-\"enddeclare\"         { thrift_reserved_keyword(yytext); }",
                "-\"endfor\"             { thrift_reserved_keyword(yytext); }",
                "-\"endforeach\"         { thrift_reserved_keyword(yytext); }",
                "-\"endif\"              { thrift_reserved_keyword(yytext); }",
                "-\"endswitch\"          { thrift_reserved_keyword(yytext); }",
                "-\"endwhile\"           { thrift_reserved_keyword(yytext); }",
                "-\"ensure\"             { thrift_reserved_keyword(yytext); }",
                "-\"except\"             { thrift_reserved_keyword(yytext); }",
                "-\"exec\"               { thrift_reserved_keyword(yytext); }",
                "-\"finally\"            { thrift_reserved_keyword(yytext); }",
                "-\"float\"              { thrift_reserved_keyword(yytext); }",
                "-\"for\"                { thrift_reserved_keyword(yytext); }",
                "-\"foreach\"            { thrift_reserved_keyword(yytext); }",
                "-\"from\"               { thrift_reserved_keyword(yytext); }",
                "-\"function\"           { thrift_reserved_keyword(yytext); }",
                "-\"global\"             { thrift_reserved_keyword(yytext); }",
                "-\"goto\"               { thrift_reserved_keyword(yytext); }",
                "-\"if\"                 { thrift_reserved_keyword(yytext); }",
                "-\"implements\"         { thrift_reserved_keyword(yytext); }",
                "-\"import\"             { thrift_reserved_keyword(yytext); }",
                "-\"in\"                 { thrift_reserved_keyword(yytext); }",
                "-\"inline\"             { thrift_reserved_keyword(yytext); }",
                "-\"instanceof\"         { thrift_reserved_keyword(yytext); }",
                "-\"interface\"          { thrift_reserved_keyword(yytext); }",
                "-\"is\"                 { thrift_reserved_keyword(yytext); }",
                "-\"lambda\"             { thrift_reserved_keyword(yytext); }",
                "-\"module\"             { thrift_reserved_keyword(yytext); }",
                "-\"native\"             { thrift_reserved_keyword(yytext); }",
                "-\"new\"                { thrift_reserved_keyword(yytext); }",
                "-\"next\"               { thrift_reserved_keyword(yytext); }",
                "-\"nil\"                { thrift_reserved_keyword(yytext); }",
                "-\"not\"                { thrift_reserved_keyword(yytext); }",
                "-\"or\"                 { thrift_reserved_keyword(yytext); }",
                "-\"package\"            { thrift_reserved_keyword(yytext); }",
                "-\"pass\"               { thrift_reserved_keyword(yytext); }",
                "-\"public\"             { thrift_reserved_keyword(yytext); }",
                "-\"print\"              { thrift_reserved_keyword(yytext); }",
                "-\"private\"            { thrift_reserved_keyword(yytext); }",
                "-\"protected\"          { thrift_reserved_keyword(yytext); }",
                "-\"raise\"              { thrift_reserved_keyword(yytext); }",
                "-\"redo\"               { thrift_reserved_keyword(yytext); }",
                "-\"rescue\"             { thrift_reserved_keyword(yytext); }",
                "-\"retry\"              { thrift_reserved_keyword(yytext); }",
                "-\"register\"           { thrift_reserved_keyword(yytext); }",
                "-\"return\"             { thrift_reserved_keyword(yytext); }",
                "-\"self\"               { thrift_reserved_keyword(yytext); }",
                "-\"sizeof\"             { thrift_reserved_keyword(yytext); }",
                "-\"static\"             { thrift_reserved_keyword(yytext); }",
                "-\"super\"              { thrift_reserved_keyword(yytext); }",
                "-\"switch\"             { thrift_reserved_keyword(yytext); }",
                "-\"synchronized\"       { thrift_reserved_keyword(yytext); }",
                "-\"then\"               { thrift_reserved_keyword(yytext); }",
                "-\"this\"               { thrift_reserved_keyword(yytext); }",
                "-\"throw\"              { thrift_reserved_keyword(yytext); }",
                "-\"transient\"          { thrift_reserved_keyword(yytext); }",
                "-\"try\"                { thrift_reserved_keyword(yytext); }",
                "-\"undef\"              { thrift_reserved_keyword(yytext); }",
                "-\"unless\"             { thrift_reserved_keyword(yytext); }",
                "-\"unsigned\"           { thrift_reserved_keyword(yytext); }",
                "-\"until\"              { thrift_reserved_keyword(yytext); }",
                "-\"use\"                { thrift_reserved_keyword(yytext); }",
                "-\"var\"                { thrift_reserved_keyword(yytext); }",
                "-\"virtual\"            { thrift_reserved_keyword(yytext); }",
                "-\"volatile\"           { thrift_reserved_keyword(yytext); }",
                "-\"when\"               { thrift_reserved_keyword(yytext); }",
                "-\"while\"              { thrift_reserved_keyword(yytext); }",
                "-\"with\"               { thrift_reserved_keyword(yytext); }",
                "-\"xor\"                { thrift_reserved_keyword(yytext); }",
                "-\"yield\"              { thrift_reserved_keyword(yytext); }",
                "-",
                " {intconstant} {"
            ],
            "changed_files": [
                "compiler/cpp/src/thrift/generate/t_generator.cc",
                "compiler/cpp/src/thrift/generate/t_generator.h",
                "compiler/cpp/src/thrift/generate/t_py_generator.cc",
                "compiler/cpp/src/thrift/main.cc",
                "compiler/cpp/src/thrift/thriftl.ll"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4496": ""
            },
            "ghissue_refs": {
                "1567": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4496",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1567",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "14190de4cb44d7d6cfd09a1332795ee8e4a46035",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1538567837,
            "hunks": 1,
            "message": "THRIFT-4644: Compiler cannot be compiled on macOS (#1601) Client: compiler",
            "diff": [
                "diff --git a/compiler/cpp/src/thrift/generate/t_py_generator.cc b/compiler/cpp/src/thrift/generate/t_py_generator.cc",
                "index 93ba3d0ec..9c82b6cf2 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_py_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_py_generator.cc",
                "@@ -337,3 +337,3 @@ private:",
                " protected:",
                "-  virtual std::set<std::string> lang_keywords() {",
                "+  virtual std::set<std::string> lang_keywords() const {",
                "     std::string keywords[] = { \"False\", \"None\", \"True\", \"and\", \"as\", \"assert\", \"break\", \"class\","
            ],
            "changed_files": [
                "compiler/cpp/src/thrift/generate/t_py_generator.cc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4644": ""
            },
            "ghissue_refs": {
                "1601": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4644",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1601",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4a983069a63a6b0be0ae07e6dc4b0b23be44d93a",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1538526642,
            "hunks": 3,
            "message": "THRIFT-4645: TCurlClient: include failure reason in exception When curl_exec fails, more detailed failure information is available by calling curl_error.  Include this error information in the message in the thrown TTransportException. Also change the comparison of the return value of curl_exec to explicitly check for boolean false, so as to distinguish from an empty response body (per the PHP documentation on this subject).",
            "diff": [
                "diff --git a/lib/php/lib/Transport/TCurlClient.php b/lib/php/lib/Transport/TCurlClient.php",
                "index 2ca4f65bb..3d4908d90 100644",
                "--- a/lib/php/lib/Transport/TCurlClient.php",
                "+++ b/lib/php/lib/Transport/TCurlClient.php",
                "@@ -221,2 +221,3 @@ class TCurlClient extends TTransport",
                "         $this->response_ = curl_exec(self::$curlHandle);",
                "+        $responseError = curl_error(self::$curlHandle);",
                "@@ -225,3 +226,3 @@ class TCurlClient extends TTransport",
                "         // Handle non 200 status code / connect failure",
                "-        if (!$this->response_ || $code !== 200) {",
                "+        if ($this->response_ === false || $code !== 200) {",
                "             curl_close(self::$curlHandle);",
                "@@ -230,2 +231,5 @@ class TCurlClient extends TTransport",
                "             $error = 'TCurlClient: Could not connect to ' . $fullUrl;",
                "+            if ($responseError) {",
                "+                $error .= ', ' . $responseError;",
                "+            }",
                "             if ($code) {"
            ],
            "changed_files": [
                "lib/php/lib/Transport/TCurlClient.php"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4645": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4645",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2853da436f9ba5c0673c645dd92c9e4fff9badec",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1538937473,
            "hunks": 9,
            "message": "THRIFT-4648: Use correct namespace in type names Client: c_glib",
            "diff": [
                "diff --git a/compiler/cpp/src/thrift/generate/t_c_glib_generator.cc b/compiler/cpp/src/thrift/generate/t_c_glib_generator.cc",
                "index b1e80421d..be3bad161 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_c_glib_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_c_glib_generator.cc",
                "@@ -252,7 +252,17 @@ void t_c_glib_generator::init_generator() {",
                "   const vector<t_program*>& includes = program_->get_includes();",
                "-  for (size_t i = 0; i < includes.size(); ++i) {",
                "-    f_types_ << \"/* other thrift includes */\" << endl << \"#include \\\"\" << this->nspace_lc",
                "-             << initial_caps_to_underscores(includes[i]->get_name()) << \"_types.h\\\"\" << endl;",
                "+  if (!includes.empty()) {",
                "+    f_types_ << \"/* other thrift includes */\" << endl;",
                "+",
                "+    for (vector<t_program*>::const_iterator iter = includes.begin();",
                "+         iter != includes.end();",
                "+         ++iter) {",
                "+      const std::string& include_nspace = (*iter)->get_namespace(\"c_glib\");",
                "+      std::string include_nspace_prefix =",
                "+        include_nspace.empty() ? \"\" : initial_caps_to_underscores(include_nspace) + \"_\";",
                "+",
                "+      f_types_ << \"#include \\\"\" << include_nspace_prefix",
                "+               << initial_caps_to_underscores((*iter)->get_name()) << \"_types.h\\\"\" << endl;",
                "+    }",
                "+    f_types_ << endl;",
                "   }",
                "-  f_types_ << endl;",
                "@@ -604,3 +614,4 @@ string t_c_glib_generator::type_name(t_type* ttype, bool in_typedef, bool is_con",
                "   // check for a namespace",
                "-  string pname = this->nspace + ttype->get_name();",
                "+  t_program* tprogram = ttype->get_program();",
                "+  string pname = (tprogram ? tprogram->get_namespace(\"c_glib\") : \"\") + ttype->get_name();",
                "@@ -1833,4 +1844,6 @@ void t_c_glib_generator::generate_service_handler(t_service* tservice) {",
                "-  string class_name = this->nspace + service_name_ + \"Handler\";",
                "-  string class_name_lc = to_lower_case(initial_caps_to_underscores(class_name));",
                "+  string service_handler_name = service_name_ + \"Handler\";",
                "+",
                "+  string class_name = this->nspace + service_handler_name;",
                "+  string class_name_lc = this->nspace_lc + initial_caps_to_underscores(service_handler_name);",
                "   string class_name_uc = to_upper_case(class_name_lc);",
                "@@ -2053,4 +2066,6 @@ void t_c_glib_generator::generate_service_processor(t_service* tservice) {",
                "-  string class_name = this->nspace + service_name_ + \"Processor\";",
                "-  string class_name_lc = to_lower_case(initial_caps_to_underscores(class_name));",
                "+  string service_processor_name = service_name_ + \"Processor\";",
                "+",
                "+  string class_name = this->nspace + service_processor_name;",
                "+  string class_name_lc = this->nspace_lc + initial_caps_to_underscores(service_processor_name);",
                "   string class_name_uc = to_upper_case(class_name_lc);",
                "@@ -2786,3 +2801,3 @@ void t_c_glib_generator::generate_object(t_struct* tstruct) {",
                "   string class_name = this->nspace + name;",
                "-  string class_name_lc = to_lower_case(initial_caps_to_underscores(class_name));",
                "+  string class_name_lc = this->nspace_lc + initial_caps_to_underscores(name);",
                "   string class_name_uc = to_upper_case(class_name_lc);",
                "@@ -3126,3 +3141,4 @@ void t_c_glib_generator::generate_object(t_struct* tstruct) {",
                "   for (m_iter = members.begin(); m_iter != members.end(); ++m_iter) {",
                "-    t_type* t = get_true_type((*m_iter)->get_type());",
                "+    t_type* member_type = (*m_iter)->get_type();",
                "+    t_type* t = get_true_type(member_type);",
                "     if (t->is_base_type()) {",
                "@@ -3141,6 +3157,10 @@ void t_c_glib_generator::generate_object(t_struct* tstruct) {",
                "       string name = (*m_iter)->get_name();",
                "-      string type_name_uc",
                "-          = to_upper_case(initial_caps_to_underscores((*m_iter)->get_type()->get_name()));",
                "-      indent(f_types_impl_) << \"object->\" << name << \" = g_object_new (\" << this->nspace_uc",
                "-                            << \"TYPE_\" << type_name_uc << \", NULL);\" << endl;",
                "+      t_program* type_program = member_type->get_program();",
                "+      string type_nspace = type_program ? type_program->get_namespace(\"c_glib\") : \"\";",
                "+      string type_nspace_prefix =",
                "+        type_nspace.empty() ? \"\" : initial_caps_to_underscores(type_nspace) + \"_\";",
                "+      string type_name_uc = to_upper_case(initial_caps_to_underscores(member_type->get_name()));",
                "+      indent(f_types_impl_) << \"object->\" << name << \" = g_object_new (\"",
                "+                            << to_upper_case(type_nspace_prefix) << \"TYPE_\" << type_name_uc",
                "+                            << \", NULL);\" << endl;",
                "     } else if (t->is_xception()) {",
                "@@ -3426,3 +3446,8 @@ void t_c_glib_generator::generate_object(t_struct* tstruct) {",
                "       } else if (member_type->is_struct() || member_type->is_xception()) {",
                "-        string param_type = this->nspace_uc + \"TYPE_\"",
                "+        t_program* type_program = member_type->get_program();",
                "+        string type_nspace = type_program ? type_program->get_namespace(\"c_glib\") : \"\";",
                "+        string type_nspace_prefix =",
                "+          type_nspace.empty() ? \"\" : initial_caps_to_underscores(type_nspace) + \"_\";",
                "+",
                "+        string param_type = to_upper_case(type_nspace_prefix) + \"TYPE_\"",
                "                             + to_upper_case(initial_caps_to_underscores(member_type->get_name()));"
            ],
            "changed_files": [
                "compiler/cpp/src/thrift/generate/t_c_glib_generator.cc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4648": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4648",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "031f57122f26656ce79c8d5dfe0a0822938afdb5",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1538603539,
            "hunks": 3,
            "message": "THRIFT-4646: change dart generation of exception to exception Generator: Dart",
            "diff": [
                "diff --git a/compiler/cpp/src/thrift/generate/t_dart_generator.cc b/compiler/cpp/src/thrift/generate/t_dart_generator.cc",
                "index d190e1682..414c333b4 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_dart_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_dart_generator.cc",
                "@@ -779,6 +779,6 @@ void t_dart_generator::generate_dart_struct_definition(ostream& out,",
                "+  out << \"implements TBase\";",
                "   if (is_exception) {",
                "-    out << \"extends Error \";",
                "+    out << \", Exception \";",
                "   }",
                "-  out << \"implements TBase\";",
                "   scope_up(out);"
            ],
            "changed_files": [
                "compiler/cpp/src/thrift/generate/t_dart_generator.cc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4646": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4646",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "53f0859639856d0d65278845ebab00c4c9fba8e9",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1538675790,
            "hunks": 4,
            "message": "fix appveyor mingw64 build",
            "diff": [
                "diff --git a/build/appveyor/MING-appveyor-build.bat b/build/appveyor/MING-appveyor-build.bat",
                "index 6ebdb906e..b37a95a79 100644",
                "--- a/build/appveyor/MING-appveyor-build.bat",
                "+++ b/build/appveyor/MING-appveyor-build.bat",
                "@@ -28,2 +28,3 @@ SET CMAKEARGS=^",
                "   -DCMAKE_CXX_COMPILER=/mingw%NORM_PLATFORM%/bin/g++.exe ^",
                "+  -DOPENSSL_ROOT_DIR=/mingw%NORM_PLATFORM% ^",
                "   -DWITH_PYTHON=OFF ^",
                "diff --git a/build/appveyor/MING-appveyor-install.bat b/build/appveyor/MING-appveyor-install.bat",
                "index ce8fc7d12..1069b058b 100644",
                "--- a/build/appveyor/MING-appveyor-install.bat",
                "+++ b/build/appveyor/MING-appveyor-install.bat",
                "@@ -27,9 +27,5 @@ CALL cl_showenv.bat                        || EXIT /B",
                "-:: We're going to keep boost at a version cmake understands",
                "-SET BOOSTVER=1.64.0-3",
                "-SET BOOSTPKG=mingw-w64-%MINGWPLAT%-boost-%BOOSTVER%-any.pkg.tar.xz",
                "-SET IGNORE=--ignore mingw-w64-x86_64-boost --ignore mingw-w64-i686-boost",
                "-",
                " SET PACKAGES=^",
                "   --needed -S bison flex make ^",
                "+  mingw-w64-%MINGWPLAT%-boost ^",
                "   mingw-w64-%MINGWPLAT%-cmake ^",
                "@@ -48,8 +44,2 @@ SET PACKAGES=^",
                " %BASH% -lc \"pacman --noconfirm -Su %IGNORE%\"                        || EXIT /B",
                "-%BASH% -lc \"pacman --noconfirm %PACKAGES%\"                          || EXIT /B",
                "-",
                "-:: Install a slightly older boost (BOOSTVER) as cmake in mingw",
                "-:: does not have built-in dependencies for boost 1.66.0 yet",
                "-:: -- this cuts down on build warning output --",
                "-",
                "-%BASH% -lc \"if [[ $(pacman --query | grep '%MINGWPLAT%-boost') ^!= *\"%BOOSTVER%\"* ]]; then wget http://repo.msys2.org/mingw/%MINGWPLAT%/%BOOSTPKG% && pacman --noconfirm --needed -U %BOOSTPKG% && rm %BOOSTPKG%; fi\" || EXIT /B",
                "+%BASH% -lc \"pacman --noconfirm %PACKAGES%\"                          || EXIT /B",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "build/appveyor/MING-appveyor-build.bat",
                "build/appveyor/MING-appveyor-install.bat"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": []
        }
    ]
}
