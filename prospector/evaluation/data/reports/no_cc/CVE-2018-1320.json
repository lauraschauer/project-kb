{
    "advisory_record": {
        "cve_id": "CVE-2018-1320",
        "description": "Apache Thrift Java client library versions 0.5.0 through 0.11.0 can bypass SASL negotiation isComplete validation in the org.apache.thrift.transport.TSaslTransport class. An assert used to determine if the SASL handshake had successfully completed could be disabled in production settings making the validation incomplete.",
        "reserved_timestamp": 1512604800,
        "published_timestamp": 1546884000,
        "updated_timestamp": 1632499573,
        "repository_url": null,
        "references": {
            "": 207,
            "https://access.redhat.com/support/": 16,
            "https://access.redhat.com/downloads/": 13,
            "https://access.redhat.com/labs/": 10,
            "https://access.redhat.com/errata/": 9,
            "https://access.redhat.com/management/": 6,
            "https://access.redhat.com/": 6,
            "https://access.redhat.com/documentation": 6,
            "https://access.redhat.com/product-life-cycles/": 6,
            "https://access.redhat.com/security": 6,
            "https://access.redhat.com/security/security-updates/#/security-advisories": 6,
            "https://access.redhat.com/security/security-updates/#/cve": 6,
            "https://access.redhat.com/support/contact/": 6,
            "https://status.redhat.com": 6,
            "https://access.redhat.com/products/red-hat-enterprise-linux/": 5,
            "https://access.redhat.com/products/red-hat-openshift-container-platform": 5,
            "https://access.redhat.com/products/red-hat-ansible-automation-platform/": 5,
            "https://access.redhat.com/products/": 5,
            "https://access.redhat.com/errata/RHSA-2019:2413": 4,
            "commit::d973409661f820d80d72c0034d06a12348c8705e": 3,
            "https://access.redhat.com/downloads/content/package-browser": 3,
            "https://catalog.redhat.com/software/containers/explore/": 3,
            "https://access.redhat.com/articles/1202803": 3,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Solution": 3,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Article": 3,
            "https://access.redhat.com/documentation/en/red_hat_enterprise_linux": 3,
            "https://access.redhat.com/documentation/en/openshift_container_platform": 3,
            "https://access.redhat.com/documentation/en/red_hat_ansible_automation_platform": 3,
            "https://access.redhat.com/documentation/": 3,
            "https://access.redhat.com/security/": 3,
            "https://access.redhat.com/security/vulnerabilities": 3,
            "https://access.redhat.com/security/data": 3,
            "https://access.redhat.com/security/security-updates/#/security-labs": 3,
            "https://access.redhat.com/security/updates/backporting/": 3,
            "https://access.redhat.com/support/cases/": 3,
            "https://access.redhat.com/support/cases/#/troubleshoot": 3,
            "https://access.redhat.com/community": 3,
            "https://access.redhat.com/community/": 3,
            "https://access.redhat.com/discussions/": 3,
            "https://access.redhat.com/announcements/": 3,
            "https://access.redhat.com/accelerators/": 3,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html": 3,
            "https://cloud.redhat.com/insights": 3,
            "https://access.redhat.com/changeLanguage?language=en": 3,
            "https://access.redhat.com/changeLanguage?language=ko": 3,
            "https://access.redhat.com/changeLanguage?language=ja": 3,
            "https://access.redhat.com/changeLanguage?language=zh_CN": 3,
            "https://redhat.com/en": 3,
            "https://twitter.com/RedHat": 3,
            "https://access.redhat.com/management": 3,
            "https://access.redhat.com/support": 3,
            "https://access.redhat.com/support/customer-service": 3,
            "https://access.redhat.com/articles/33844": 3,
            "https://access.redhat.com/help/login_assistance": 3,
            "https://www.redhat.com/en/trust": 3,
            "https://www.redhat.com/en/about/browser-support": 3,
            "https://www.redhat.com/en/about/digital-accessibility": 3,
            "https://access.redhat.com/recognition/": 3,
            "https://access.redhat.com/help/colophon/": 3,
            "https://www.redhat.com/": 3,
            "http://developers.redhat.com/": 3,
            "https://connect.redhat.com/": 3,
            "https://cloud.redhat.com/": 3,
            "https://access.redhat.com/subscription-value": 3,
            "https://www.redhat.com/about/": 3,
            "http://jobs.redhat.com": 3,
            "https://redhat.com/en/about/company": 3,
            "https://redhat.com/en/jobs": 3,
            "https://redhat.com/en/events": 3,
            "https://redhat.com/en/about/office-locations": 3,
            "https://redhat.com/en/contact": 3,
            "https://redhat.com/en/blog": 3,
            "https://redhat.com/en/about/our-culture/diversity-equity-inclusion": 3,
            "https://coolstuff.redhat.com/": 3,
            "https://www.redhat.com/en/summit": 3,
            "https://redhat.com/en/about/privacy-policy": 3,
            "https://redhat.com/en/about/terms-use": 3,
            "https://redhat.com/en/about/all-policies-guidelines": 3,
            "https://redhat.com/en/about/digital-accessibility": 3,
            "https://lists.apache.org/thread.html/da5234b5e78f1c99190407f791dfe1bf6c58de8d30d15974a9669be3%40%3Cuser.thrift.apache.org%3E": 2,
            "http://www.securityfocus.com/bid/106551": 2,
            "https://lists.debian.org/debian-lts-announce/2019/02/msg00008.html": 2,
            "https://lists.apache.org/thread.html/187684ac8b94d55256253f5220cb55e8bd568afdf9a8a86e9bbb66c9%40%3Cdevnull.infra.apache.org%3E": 2,
            "https://support.f5.com/csp/article/K36361684": 2,
            "https://lists.apache.org/thread.html/dbe3a39b48900318ad44494e8721f786901ba4520cd412c7698f534f%40%3Cdev.storm.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/dfee89880c84874058c6a584d8128468f8d3c2ac25068ded91073adc%40%3Cuser.storm.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/e825ff2f4e129c0ecdb6a19030b53c1ccdf810a8980667628d0c6a80%40%3Cannounce.apache.org%3E": 2,
            "http://www.openwall.com/lists/oss-security/2019/07/24/3": 2,
            "https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html": 2,
            "https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442%40%3Cdev.drill.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f%40%3Cdev.drill.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc%40%3Cissues.drill.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/3d3b6849fcf4cd1e87703b3dde0d57aabeb9ba0193dc0cf3c97f545d%40%3Ccommits.cassandra.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/6b07f6f618155c777191b4fad8ade0f0cf4ed4c12a1a746ce903d816%40%3Ccommits.cassandra.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/07c3cd5a2953a4b253eee4437b1397b1603d0f886437e19b657d2c54%40%3Ccommits.cassandra.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/8be5b16c02567fff61b1284e5df433a4e38617bc7de4804402bf62be%40%3Ccommits.cassandra.apache.org%3E": 2,
            "https://www.oracle.com/security-alerts/cpuapr2020.html": 2,
            "https://lists.apache.org/thread.html/r4d3f1d3e333d9c2b2f6e6ae8ed8750d4de03410ac294bcd12c7eefa3%40%3Ccommits.cassandra.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/r2278846f7ab06ec07a0aa31457235e0ded9191b216cba55f3f315f16%40%3Ccommits.cassandra.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/r261972a3b14cf6f1dcd94b1b265e9ef644a38ccdf0d0238fa0c4d459%40%3Ccommits.cassandra.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/r09c3dcdccf4b74ad13bda79b354e6b793255ccfe245cca1b8cee23f5%40%3Ccommits.cassandra.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/r3d71a6dbb063aa61ba81278fe622b20bfe7501bb3821c27695641ac3%40%3Ccommits.cassandra.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/r1015eaadef8314daa9348aa423086a732cfeb998ceb5d42605c9b0b5%40%3Ccommits.cassandra.apache.org%3E": 2,
            "https://issues.apache.org/jira/browse/THRIFT-4506": 2,
            "https://lists.apache.org/thread.html/da5234b5e78f1c99190407f791dfe1bf6c58de8d30d15974a9669be3@%3Cuser.thrift.apache.org%3E": 2,
            "https://access.redhat.com/support/policy/updates/jboss_notes": 2,
            "https://access.redhat.com/security/cve/cve-2018-1320": 2,
            "https://access.redhat.com/changeLanguage?language=fr": 2,
            "https://access.redhat.com/products/red-hat-satellite/": 2,
            "https://access.redhat.com/products/red-hat-subscription-management/": 2,
            "https://access.redhat.com/products/red-hat-insights/": 2,
            "https://access.redhat.com/products/red-hat-openstack-platform/": 2,
            "https://access.redhat.com/products/red-hat-openshift-container-platform/": 2,
            "https://access.redhat.com/products/red-hat-openshift-ai/": 2,
            "https://access.redhat.com/products/openshift-dedicated-red-hat/": 2,
            "https://access.redhat.com/products/red-hat-advanced-cluster-security-for-kubernetes/": 2,
            "https://access.redhat.com/products/red-hat-advanced-cluster-management-for-kubernetes/": 2,
            "https://access.redhat.com/products/red-hat-quay/": 2,
            "https://access.redhat.com/products/red-hat-openshift-dev-spaces": 2,
            "https://access.redhat.com/products/red-hat-openshift-service-aws": 2,
            "https://access.redhat.com/products/red-hat-storage/": 2,
            "https://access.redhat.com/products/red-hat-hyperconverged-infrastructure/": 2,
            "https://access.redhat.com/products/red-hat-ceph-storage/": 2,
            "https://access.redhat.com/products/red-hat-openshift-data-foundation": 2,
            "https://access.redhat.com/products/red-hat-runtimes/": 2,
            "https://access.redhat.com/products/red-hat-jboss-enterprise-application-platform/": 2,
            "https://access.redhat.com/products/red-hat-data-grid/": 2,
            "https://access.redhat.com/products/red-hat-jboss-web-server/": 2,
            "https://access.redhat.com/products/red-hat-build-of-keycloak/": 2,
            "https://access.redhat.com/products/spring-boot/": 2,
            "https://access.redhat.com/products/nodejs/": 2,
            "https://access.redhat.com/products/quarkus/": 2,
            "https://access.redhat.com/products/red-hat-application-foundations/": 2,
            "https://access.redhat.com/products/red-hat-fuse/": 2,
            "https://access.redhat.com/products/red-hat-amq/": 2,
            "https://access.redhat.com/products/red-hat-3scale/": 2,
            "https://access.redhat.com/documentation/en-us/red_hat_fuse/7.4/": 2,
            "https://docs.atlassian.com/jira/jcore-docs-0820/": 2,
            "http://www.atlassian.com/software/jira": 2,
            "https://access.redhat.com/support/policy/updates/red_hat_build_of_quarkus_notes": 2,
            "https://access.redhat.com/articles/7060671": 2,
            "https://wiki.debian.org/LTS": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1548909": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1578582": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1601037": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1643048": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1660263": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1667204": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1692345": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1713215": 1,
            "https://www.redhat.com/security/data/cve/CVE-2016-10750.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1258.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1320.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-8088.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-10899.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-15758.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2019-0192.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2019-3805.html": 1,
            "https://access.redhat.com/security/updates/classification/#important": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&product=jboss.fuse&version=7.4.0": 1,
            "https://access.redhat.com/security/team/contact/": 1,
            "https://issues.apache.org/jira/secure/MyJiraHome.jspa": 1,
            "https://selfserve.apache.org/jira-account.html": 1,
            "https://github.com/apache/thrift/blob/master/lib/java/src/org/apache/thrift/transport/TSaslTransport.java#L298": 1,
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=2018-1320": 1,
            "https://github.com/apache/thrift/pull/1771": 1,
            "https://www.atlassian.com/software/jira": 1,
            "http://www.atlassian.com/": 1,
            "https://access.redhat.com/product-life-cycles": 1,
            "https://access.redhat.com/articles/7019023": 1,
            "https://access.redhat.com/articles/6200982": 1,
            "https://access.redhat.com/search/#/knowledgebase": 1,
            "https://access.redhat.com/search/#/discussions": 1,
            "https://access.redhat.com/support/policy/updates/jboss_eap_xp_notes": 1,
            "https://access.redhat.com/articles/7037218": 1,
            "https://github.com/nodejs/Release": 1,
            "https://access.redhat.com/articles/4544981": 1,
            "https://access.redhat.com/support/policy/updates/jboss_notes#p_rhbocamel": 1,
            "https://access.redhat.com/solutions/6342381": 1,
            "https://access.redhat.com/solutions/5941551": 1,
            "https://access.redhat.com/support/policy/updates/service-interconnect": 1,
            "https://access.redhat.com/articles/6975608": 1,
            "https://access.redhat.com/articles/6999674": 1,
            "https://access.redhat.com/articles/6371801": 1
        },
        "affected_products": [
            "Java",
            "Apache",
            "SASL",
            "Apache Thrift",
            "Thrift"
        ],
        "versions": {
            "status": "affected",
            "version": "Apache Thrift 0.5.0 to 0.11.0"
        },
        "files": [
            "isComplete",
            "TSaslTransport",
            "SASL",
            "transport"
        ],
        "keywords": [
            "sasl",
            "determine",
            "library",
            "java",
            "make",
            "assert",
            "class",
            "tsasltransport",
            "handshake",
            "thrift",
            "setting",
            "production",
            "complete",
            "negotiation",
            "client",
            "validation",
            "apache",
            "bypass",
            "disable",
            "version"
        ],
        "files_extension": [],
        "has_fixing_commit": true
    },
    "commits": [
        {
            "commit_id": "d973409661f820d80d72c0034d06a12348c8705e",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520267661,
            "hunks": 2,
            "message": "THRIFT-4506: fix use of assert for correctness in Java SASL negotiation Client: java",
            "diff": [
                "diff --git a/lib/java/src/org/apache/thrift/transport/TSaslTransport.java b/lib/java/src/org/apache/thrift/transport/TSaslTransport.java",
                "index a94d9a776..bbd3f9a34 100644",
                "--- a/lib/java/src/org/apache/thrift/transport/TSaslTransport.java",
                "+++ b/lib/java/src/org/apache/thrift/transport/TSaslTransport.java",
                "@@ -289,3 +289,3 @@ abstract class TSaslTransport extends TTransport {",
                "           LOGGER.debug(\"{}: All done!\", getRole());",
                "-          break;",
                "+          continue;",
                "         }",
                "@@ -297,4 +297,2 @@ abstract class TSaslTransport extends TTransport {",
                "-      assert sasl.isComplete();",
                "-",
                "       // If we're the client, and we're complete, but the server isn't"
            ],
            "changed_files": [
                "lib/java/src/org/apache/thrift/transport/TSaslTransport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4506": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "XREF_BUG",
                    "message": "The commit and the advisory (including referenced pages) mention the same bug tracking ticket: THRIFT-4506",
                    "relevance": 32
                },
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 3 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "RELEVANT_WORDS_IN_MESSAGE",
                    "message": "The commit message contains some relevant words: SASL",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: isComplete, TSaslTransport",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: lib/java/src/org/apache/thrift/transport/TSaslTransport.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: sasl, java, assert, negotiation, client",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: sasl, tsasltransport, java",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4506",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5785279e2e809f6c56dbbe0eb41d13fb17c88bdd",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1515191825,
            "hunks": 175,
            "message": "THRIFT-4448: Golang: do something with context.Context. Remove Go1.6 compatibility. Client: go This closes #1459",
            "diff": [
                "diff --git a/build/docker/ubuntu-artful/Dockerfile b/build/docker/ubuntu-artful/Dockerfile",
                "index 416d75e6c..dacaa2879 100644",
                "--- a/build/docker/ubuntu-artful/Dockerfile",
                "+++ b/build/docker/ubuntu-artful/Dockerfile",
                "@@ -20,2 +20,3 @@",
                " # - haxe: version 3.4.2 that comes with Ubuntu cores in our CI build",
                "+# - go: xenial comes with 1.8, we want the latest (supported)",
                " # - nodejs: want v8, Ubuntu comes with v6",
                "@@ -142,6 +143,11 @@ RUN apt-get install -y --no-install-recommends \\",
                "-RUN apt-get install -y --no-install-recommends \\",
                "-`# golang (go) dependencies` \\",
                "-      golang-go \\",
                "-      golang-race-detector-runtime",
                "+# golang",
                "+ENV GOLANG_VERSION 1.9.4",
                "+ENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz",
                "+ENV GOLANG_DOWNLOAD_SHA256 15b0937615809f87321a457bb1265f946f9f6e736c563d6c5e0bd2c22e44f779",
                "+RUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz && \\",
                "+      echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - && \\",
                "+            tar -C /usr/local -xzf golang.tar.gz && \\",
                "+                  ln -s /usr/local/go/bin/go /usr/local/bin && \\",
                "+                        rm golang.tar.gz",
                "diff --git a/build/docker/ubuntu-trusty/Dockerfile b/build/docker/ubuntu-trusty/Dockerfile",
                "index 40f9c55c6..a8e4d3baa 100644",
                "--- a/build/docker/ubuntu-trusty/Dockerfile",
                "+++ b/build/docker/ubuntu-trusty/Dockerfile",
                "@@ -115,5 +115,11 @@ RUN apt-get install -y --no-install-recommends \\",
                "-RUN apt-get install -y --no-install-recommends \\",
                "-`# golang (go) dependencies` \\",
                "-      golang-go",
                "+# golang",
                "+ENV GOLANG_VERSION 1.7.6",
                "+ENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz",
                "+ENV GOLANG_DOWNLOAD_SHA256 ad5808bf42b014c22dd7646458f631385003049ded0bb6af2efc7f1f79fa29ea",
                "+RUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz && \\",
                "+      echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - && \\",
                "+      tar -C /usr/local -xzf golang.tar.gz && \\",
                "+      ln -s /usr/local/go/bin/go /usr/local/bin && \\",
                "+      rm golang.tar.gz",
                "diff --git a/build/docker/ubuntu-xenial/Dockerfile b/build/docker/ubuntu-xenial/Dockerfile",
                "index b69d7ea86..832542ee7 100644",
                "--- a/build/docker/ubuntu-xenial/Dockerfile",
                "+++ b/build/docker/ubuntu-xenial/Dockerfile",
                "@@ -17,3 +17,5 @@",
                " # - dart: does not come with Ubuntu so we're installing 1.22.1 for coverage",
                "-# - nodejs: Ubuntu comes with 4.2.6 which exits LTS April 2018, so we're installing 6.x",
                "+# - dotnet: does not come with Ubuntu",
                "+# - go: Xenial comes with 1.6, but we need 1.7 or later",
                "+# - nodejs: Xenial comes with 4.2.6 which exits LTS April 2018, so we're installing 6.x",
                " #",
                "@@ -140,6 +142,11 @@ RUN apt-get install -y --no-install-recommends \\",
                "-RUN apt-get install -y --no-install-recommends \\",
                "-`# golang (go) dependencies` \\",
                "-      golang-go \\",
                "-      golang-race-detector-runtime",
                "+# golang",
                "+ENV GOLANG_VERSION 1.7.6",
                "+ENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz",
                "+ENV GOLANG_DOWNLOAD_SHA256 ad5808bf42b014c22dd7646458f631385003049ded0bb6af2efc7f1f79fa29ea",
                "+RUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz && \\",
                "+      echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - && \\",
                "+      tar -C /usr/local -xzf golang.tar.gz && \\",
                "+      ln -s /usr/local/go/bin/go /usr/local/bin && \\",
                "+      rm golang.tar.gz",
                "diff --git a/compiler/cpp/src/thrift/generate/t_go_generator.cc b/compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "index 60481fbb3..28725acfe 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "@@ -83,3 +83,2 @@ public:",
                "     read_write_private_ = false;",
                "-    legacy_context_ = false;",
                "     ignore_initialisms_ = false;",
                "@@ -94,4 +93,2 @@ public:",
                "         read_write_private_ = true;",
                "-      } else if( iter->first.compare(\"legacy_context\") == 0) {",
                "-        legacy_context_ = true;",
                "       } else if( iter->first.compare(\"ignore_initialisms\") == 0) {",
                "@@ -289,3 +286,2 @@ private:",
                "   bool read_write_private_;",
                "-  bool legacy_context_;",
                "   bool ignore_initialisms_;",
                "@@ -877,9 +873,2 @@ string t_go_generator::go_imports_begin(bool consts) {",
                "   }",
                "-  if (legacy_context_) {",
                "-    extra +=",
                "-      \"\\t\\\"golang.org/x/net/context\\\"\\n\";",
                "-  } else {",
                "-    extra +=",
                "-      \"\\t\\\"context\\\"\\n\";",
                "-  }",
                "   return string(",
                "@@ -887,2 +876,3 @@ string t_go_generator::go_imports_begin(bool consts) {",
                "       \"\\t\\\"bytes\\\"\\n\"",
                "+      \"\\t\\\"context\\\"\\n\"",
                "       \"\\t\\\"reflect\\\"\\n\"",
                "@@ -2075,5 +2065,2 @@ void t_go_generator::generate_service_remote(t_service* tservice) {",
                "   string ctxPackage = \"context\";",
                "-  if (legacy_context_) {",
                "-    ctxPackage = \"golang.org/x/net/context\";",
                "-  }",
                "@@ -2604,3 +2591,3 @@ void t_go_generator::generate_service_server(t_service* tservice) {",
                "     f_types_ << indent() << \"  oprot.WriteMessageEnd()\" << endl;",
                "-    f_types_ << indent() << \"  oprot.Flush()\" << endl;",
                "+    f_types_ << indent() << \"  oprot.Flush(ctx)\" << endl;",
                "     f_types_ << indent() << \"  return false, \" << x << endl;",
                "@@ -2669,3 +2656,3 @@ void t_go_generator::generate_process_function(t_service* tservice, t_function*",
                "     f_types_ << indent() << \"  oprot.WriteMessageEnd()\" << endl;",
                "-    f_types_ << indent() << \"  oprot.Flush()\" << endl;",
                "+    f_types_ << indent() << \"  oprot.Flush(ctx)\" << endl;",
                "   }",
                "@@ -2737,3 +2724,3 @@ void t_go_generator::generate_process_function(t_service* tservice, t_function*",
                "     f_types_ << indent() << \"  oprot.WriteMessageEnd()\" << endl;",
                "-    f_types_ << indent() << \"  oprot.Flush()\" << endl;",
                "+    f_types_ << indent() << \"  oprot.Flush(ctx)\" << endl;",
                "   }",
                "@@ -2774,3 +2761,3 @@ void t_go_generator::generate_process_function(t_service* tservice, t_function*",
                "     f_types_ << indent() << \"}\" << endl;",
                "-    f_types_ << indent() << \"if err2 = oprot.Flush(); err == nil && err2 != nil {\" << endl;",
                "+    f_types_ << indent() << \"if err2 = oprot.Flush(ctx); err == nil && err2 != nil {\" << endl;",
                "     f_types_ << indent() << \"  err = err2\" << endl;",
                "@@ -3670,4 +3657,2 @@ THRIFT_REGISTER_GENERATOR(go, \"Go\",",
                "                           \"    read_write_private\\n\"",
                "-                          \"                     Make read/write methods private, default is public Read/Write\\n\" \\",
                "-                          \"    legacy_context\\n\"",
                "-                          \"                     Use legacy x/net/context instead of context in go<1.7.\\n\")",
                "+                          \"                     Make read/write methods private, default is public Read/Write\\n\")",
                "diff --git a/compiler/cpp/src/thrift/generate/thrift-t_php_generator.o-a60a38e9 b/compiler/cpp/src/thrift/generate/thrift-t_php_generator.o-a60a38e9",
                "new file mode 100644",
                "index 000000000..e69de29bb",
                "diff --git a/lib/go/Makefile.am b/lib/go/Makefile.am",
                "index 0d5971014..0dfa5fadc 100644",
                "--- a/lib/go/Makefile.am",
                "+++ b/lib/go/Makefile.am",
                "@@ -33,3 +33,2 @@ install:",
                " check-local:",
                "-\tGOPATH=`pwd` $(GO) get golang.org/x/net/context",
                " \tGOPATH=`pwd` $(GO) test -race ./thrift",
                "@@ -40,3 +39,2 @@ clean-local:",
                " all-local:",
                "-\tGOPATH=`pwd` $(GO) get golang.org/x/net/context",
                " \tGOPATH=`pwd` $(GO) build ./thrift",
                "diff --git a/lib/go/thrift/binary_protocol.go b/lib/go/thrift/binary_protocol.go",
                "index 690d34111..de0f6a7a5 100644",
                "--- a/lib/go/thrift/binary_protocol.go",
                "+++ b/lib/go/thrift/binary_protocol.go",
                "@@ -23,2 +23,3 @@ import (",
                " \t\"bytes\"",
                "+\t\"context\"",
                " \t\"encoding/binary\"",
                "@@ -459,4 +460,4 @@ func (p *TBinaryProtocol) ReadBinary() ([]byte, error) {",
                "-func (p *TBinaryProtocol) Flush() (err error) {",
                "-\treturn NewTProtocolException(p.trans.Flush())",
                "+func (p *TBinaryProtocol) Flush(ctx context.Context) (err error) {",
                "+\treturn NewTProtocolException(p.trans.Flush(ctx))",
                " }",
                "diff --git a/lib/go/thrift/buffered_transport.go b/lib/go/thrift/buffered_transport.go",
                "index b754f925d..96702061b 100644",
                "--- a/lib/go/thrift/buffered_transport.go",
                "+++ b/lib/go/thrift/buffered_transport.go",
                "@@ -23,2 +23,3 @@ import (",
                " \t\"bufio\"",
                "+\t\"context\"",
                " )",
                "@@ -80,3 +81,3 @@ func (p *TBufferedTransport) Write(b []byte) (int, error) {",
                "-func (p *TBufferedTransport) Flush() error {",
                "+func (p *TBufferedTransport) Flush(ctx context.Context) error {",
                " \tif err := p.ReadWriter.Flush(); err != nil {",
                "@@ -85,3 +86,3 @@ func (p *TBufferedTransport) Flush() error {",
                " \t}",
                "-\treturn p.tp.Flush()",
                "+\treturn p.tp.Flush(ctx)",
                " }",
                "diff --git a/lib/go/thrift/client.go b/lib/go/thrift/client.go",
                "index 8bdb53d8d..28791ccd0 100644",
                "--- a/lib/go/thrift/client.go",
                "+++ b/lib/go/thrift/client.go",
                "@@ -2,3 +2,10 @@ package thrift",
                "-import \"fmt\"",
                "+import (",
                "+\t\"context\"",
                "+\t\"fmt\"",
                "+)",
                "+",
                "+type TClient interface {",
                "+\tCall(ctx context.Context, method string, args, result TStruct) error",
                "+}",
                "@@ -18,3 +25,3 @@ func NewTStandardClient(inputProtocol, outputProtocol TProtocol) *TStandardClien",
                "-func (p *TStandardClient) Send(oprot TProtocol, seqId int32, method string, args TStruct) error {",
                "+func (p *TStandardClient) Send(ctx context.Context, oprot TProtocol, seqId int32, method string, args TStruct) error {",
                " \tif err := oprot.WriteMessageBegin(method, CALL, seqId); err != nil {",
                "@@ -28,3 +35,3 @@ func (p *TStandardClient) Send(oprot TProtocol, seqId int32, method string, args",
                " \t}",
                "-\treturn oprot.Flush()",
                "+\treturn oprot.Flush(ctx)",
                " }",
                "@@ -63,3 +70,3 @@ func (p *TStandardClient) Recv(iprot TProtocol, seqId int32, method string, resu",
                "-func (p *TStandardClient) call(method string, args, result TStruct) error {",
                "+func (p *TStandardClient) Call(ctx context.Context, method string, args, result TStruct) error {",
                " \tp.seqId++",
                "@@ -67,3 +74,3 @@ func (p *TStandardClient) call(method string, args, result TStruct) error {",
                "-\tif err := p.Send(p.oprot, seqId, method, args); err != nil {",
                "+\tif err := p.Send(ctx, p.oprot, seqId, method, args); err != nil {",
                " \t\treturn err",
                "diff --git a/lib/go/thrift/client_go17.go b/lib/go/thrift/client_go17.go",
                "deleted file mode 100644",
                "index 15c1c52ca..000000000",
                "--- a/lib/go/thrift/client_go17.go",
                "+++ /dev/null",
                "@@ -1,13 +0,0 @@",
                "-// +build go1.7",
                "-",
                "-package thrift",
                "-",
                "-import \"context\"",
                "-",
                "-type TClient interface {",
                "-\tCall(ctx context.Context, method string, args, result TStruct) error",
                "-}",
                "-",
                "-func (p *TStandardClient) Call(ctx context.Context, method string, args, result TStruct) error {",
                "-\treturn p.call(method, args, result)",
                "-}",
                "diff --git a/lib/go/thrift/client_pre_go17.go b/lib/go/thrift/client_pre_go17.go",
                "deleted file mode 100644",
                "index d2e99ef2a..000000000",
                "--- a/lib/go/thrift/client_pre_go17.go",
                "+++ /dev/null",
                "@@ -1,13 +0,0 @@",
                "-// +build !go1.7",
                "-",
                "-package thrift",
                "-",
                "-import \"golang.org/x/net/context\"",
                "-",
                "-type TClient interface {",
                "-\tCall(ctx context.Context, method string, args, result TStruct) error",
                "-}",
                "-",
                "-func (p *TStandardClient) Call(ctx context.Context, method string, args, result TStruct) error {",
                "-\treturn p.call(method, args, result)",
                "-}",
                "diff --git a/lib/go/thrift/common_test_pre_go17.go b/lib/go/thrift/common_test.go",
                "similarity index 95%",
                "rename from lib/go/thrift/common_test_pre_go17.go",
                "rename to lib/go/thrift/common_test.go",
                "index e6d0c4d9a..93597ff8a 100644",
                "--- a/lib/go/thrift/common_test_pre_go17.go",
                "+++ b/lib/go/thrift/common_test.go",
                "@@ -1,3 +1 @@",
                "-// +build !go1.7",
                "-",
                " /*",
                "@@ -23,3 +21,3 @@ package thrift",
                "-import \"golang.org/x/net/context\"",
                "+import \"context\"",
                "diff --git a/lib/go/thrift/compact_protocol.go b/lib/go/thrift/compact_protocol.go",
                "index 0bc5fddeb..fc1d18287 100644",
                "--- a/lib/go/thrift/compact_protocol.go",
                "+++ b/lib/go/thrift/compact_protocol.go",
                "@@ -22,2 +22,3 @@ package thrift",
                " import (",
                "+\t\"context\"",
                " \t\"encoding/binary\"",
                "@@ -601,4 +602,4 @@ func (p *TCompactProtocol) ReadBinary() (value []byte, err error) {",
                "-func (p *TCompactProtocol) Flush() (err error) {",
                "-\treturn NewTProtocolException(p.trans.Flush())",
                "+func (p *TCompactProtocol) Flush(ctx context.Context) (err error) {",
                "+\treturn NewTProtocolException(p.trans.Flush(ctx))",
                " }",
                "diff --git a/test/go/src/bin/testclient/go17.go b/lib/go/thrift/context.go",
                "similarity index 96%",
                "rename from test/go/src/bin/testclient/go17.go",
                "rename to lib/go/thrift/context.go",
                "index a6003a917..d15c1bcf8 100644",
                "--- a/test/go/src/bin/testclient/go17.go",
                "+++ b/lib/go/thrift/context.go",
                "@@ -1,3 +1 @@",
                "-// +build go1.7",
                "-",
                " /*",
                "@@ -21,3 +19,3 @@",
                "-package main",
                "+package thrift",
                "diff --git a/lib/go/thrift/debug_protocol.go b/lib/go/thrift/debug_protocol.go",
                "index d37252cc6..57943e0f3 100644",
                "--- a/lib/go/thrift/debug_protocol.go",
                "+++ b/lib/go/thrift/debug_protocol.go",
                "@@ -22,2 +22,3 @@ package thrift",
                " import (",
                "+\t\"context\"",
                " \t\"log\"",
                "@@ -260,4 +261,4 @@ func (tdp *TDebugProtocol) Skip(fieldType TType) (err error) {",
                " }",
                "-func (tdp *TDebugProtocol) Flush() (err error) {",
                "-\terr = tdp.Delegate.Flush()",
                "+func (tdp *TDebugProtocol) Flush(ctx context.Context) (err error) {",
                "+\terr = tdp.Delegate.Flush(ctx)",
                " \tlog.Printf(\"%sFlush() (err=%#v)\", tdp.LogPrefix, err)",
                "diff --git a/lib/go/thrift/framed_transport.go b/lib/go/thrift/framed_transport.go",
                "index 60b124991..81fa65aaa 100644",
                "--- a/lib/go/thrift/framed_transport.go",
                "+++ b/lib/go/thrift/framed_transport.go",
                "@@ -24,2 +24,3 @@ import (",
                " \t\"bytes\"",
                "+\t\"context\"",
                " \t\"encoding/binary\"",
                "@@ -137,3 +138,3 @@ func (p *TFramedTransport) WriteString(s string) (n int, err error) {",
                "-func (p *TFramedTransport) Flush() error {",
                "+func (p *TFramedTransport) Flush(ctx context.Context) error {",
                " \tsize := p.buf.Len()",
                "@@ -153,3 +154,3 @@ func (p *TFramedTransport) Flush() error {",
                " \t}",
                "-\terr = p.transport.Flush()",
                "+\terr = p.transport.Flush(ctx)",
                " \treturn NewTTransportExceptionFromError(err)",
                "diff --git a/lib/go/thrift/http_client.go b/lib/go/thrift/http_client.go",
                "index 33f2aa4b5..5c82bf538 100644",
                "--- a/lib/go/thrift/http_client.go",
                "+++ b/lib/go/thrift/http_client.go",
                "@@ -23,2 +23,3 @@ import (",
                " \t\"bytes\"",
                "+\t\"context\"",
                " \t\"io\"",
                "@@ -183,3 +184,3 @@ func (p *THttpClient) WriteString(s string) (n int, err error) {",
                "-func (p *THttpClient) Flush() error {",
                "+func (p *THttpClient) Flush(ctx context.Context) error {",
                " \t// Close any previous response body to avoid leaking connections.",
                "@@ -192,2 +193,5 @@ func (p *THttpClient) Flush() error {",
                " \treq.Header = p.header",
                "+\tif ctx != nil {",
                "+\t\treq = req.WithContext(ctx)",
                "+\t}",
                " \tresponse, err := p.client.Do(req)",
                "diff --git a/lib/go/thrift/http_transport.go b/lib/go/thrift/http_transport.go",
                "index 601855b92..66f0f388a 100644",
                "--- a/lib/go/thrift/http_transport.go",
                "+++ b/lib/go/thrift/http_transport.go",
                "@@ -28,2 +28,14 @@ import (",
                "+// NewThriftHandlerFunc is a function that create a ready to use Apache Thrift Handler function",
                "+func NewThriftHandlerFunc(processor TProcessor,",
                "+\tinPfactory, outPfactory TProtocolFactory) func(w http.ResponseWriter, r *http.Request) {",
                "+",
                "+\treturn gz(func(w http.ResponseWriter, r *http.Request) {",
                "+\t\tw.Header().Add(\"Content-Type\", \"application/x-thrift\")",
                "+",
                "+\t\ttransport := NewStreamTransport(r.Body, w)",
                "+\t\tprocessor.Process(r.Context(), inPfactory.GetProtocol(transport), outPfactory.GetProtocol(transport))",
                "+\t})",
                "+}",
                "+",
                " // gz transparently compresses the HTTP response if the client supports it.",
                "diff --git a/lib/go/thrift/http_transport_go17.go b/lib/go/thrift/http_transport_go17.go",
                "deleted file mode 100644",
                "index 1313ac225..000000000",
                "--- a/lib/go/thrift/http_transport_go17.go",
                "+++ /dev/null",
                "@@ -1,38 +0,0 @@",
                "-// +build go1.7",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements. See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership. The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License. You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied. See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-package thrift",
                "-",
                "-import (",
                "-\t\"net/http\"",
                "-)",
                "-",
                "-// NewThriftHandlerFunc is a function that create a ready to use Apache Thrift Handler function",
                "-func NewThriftHandlerFunc(processor TProcessor,",
                "-\tinPfactory, outPfactory TProtocolFactory) func(w http.ResponseWriter, r *http.Request) {",
                "-",
                "-\treturn gz(func(w http.ResponseWriter, r *http.Request) {",
                "-\t\tw.Header().Add(\"Content-Type\", \"application/x-thrift\")",
                "-",
                "-\t\ttransport := NewStreamTransport(r.Body, w)",
                "-\t\tprocessor.Process(r.Context(), inPfactory.GetProtocol(transport), outPfactory.GetProtocol(transport))",
                "-\t})",
                "-}",
                "diff --git a/lib/go/thrift/http_transport_pre_go17.go b/lib/go/thrift/http_transport_pre_go17.go",
                "deleted file mode 100644",
                "index 13aa1c11d..000000000",
                "--- a/lib/go/thrift/http_transport_pre_go17.go",
                "+++ /dev/null",
                "@@ -1,40 +0,0 @@",
                "-// +build !go1.7",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements. See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership. The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License. You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied. See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-package thrift",
                "-",
                "-import (",
                "-\t\"net/http\"",
                "-",
                "-\t\"golang.org/x/net/context\"",
                "-)",
                "-",
                "-// NewThriftHandlerFunc is a function that create a ready to use Apache Thrift Handler function",
                "-func NewThriftHandlerFunc(processor TProcessor,",
                "-\tinPfactory, outPfactory TProtocolFactory) func(w http.ResponseWriter, r *http.Request) {",
                "-",
                "-\treturn gz(func(w http.ResponseWriter, r *http.Request) {",
                "-\t\tw.Header().Add(\"Content-Type\", \"application/x-thrift\")",
                "-",
                "-\t\ttransport := NewStreamTransport(r.Body, w)",
                "-\t\tprocessor.Process(context.Background(), inPfactory.GetProtocol(transport), outPfactory.GetProtocol(transport))",
                "-\t})",
                "-}",
                "diff --git a/lib/go/thrift/iostream_transport.go b/lib/go/thrift/iostream_transport.go",
                "index b18be81c4..fea93bcef 100644",
                "--- a/lib/go/thrift/iostream_transport.go",
                "+++ b/lib/go/thrift/iostream_transport.go",
                "@@ -23,2 +23,3 @@ import (",
                " \t\"bufio\"",
                "+\t\"context\"",
                " \t\"io\"",
                "@@ -140,3 +141,3 @@ func (p *StreamTransport) Close() error {",
                " // Flushes the underlying output stream if not null.",
                "-func (p *StreamTransport) Flush() error {",
                "+func (p *StreamTransport) Flush(ctx context.Context) error {",
                " \tif p.Writer == nil {",
                "diff --git a/lib/go/thrift/json_protocol.go b/lib/go/thrift/json_protocol.go",
                "index 442fa9144..7be685d43 100644",
                "--- a/lib/go/thrift/json_protocol.go",
                "+++ b/lib/go/thrift/json_protocol.go",
                "@@ -22,2 +22,3 @@ package thrift",
                " import (",
                "+\t\"context\"",
                " \t\"encoding/base64\"",
                "@@ -440,6 +441,6 @@ func (p *TJSONProtocol) ReadBinary() ([]byte, error) {",
                "-func (p *TJSONProtocol) Flush() (err error) {",
                "+func (p *TJSONProtocol) Flush(ctx context.Context) (err error) {",
                " \terr = p.writer.Flush()",
                " \tif err == nil {",
                "-\t\terr = p.trans.Flush()",
                "+\t\terr = p.trans.Flush(ctx)",
                " \t}",
                "diff --git a/lib/go/thrift/json_protocol_test.go b/lib/go/thrift/json_protocol_test.go",
                "index 7104ce3a0..0902f1b21 100644",
                "--- a/lib/go/thrift/json_protocol_test.go",
                "+++ b/lib/go/thrift/json_protocol_test.go",
                "@@ -22,2 +22,3 @@ package thrift",
                " import (",
                "+\t\"context\"",
                " \t\"encoding/base64\"",
                "@@ -38,3 +39,3 @@ func TestWriteJSONProtocolBool(t *testing.T) {",
                " \t\t}",
                "-\t\tif e := p.Flush(); e != nil {",
                "+\t\tif e := p.Flush(context.Background()); e != nil {",
                " \t\t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -70,3 +71,3 @@ func TestReadJSONProtocolBool(t *testing.T) {",
                " \t\t}",
                "-\t\ttrans.Flush()",
                "+\t\ttrans.Flush(context.Background())",
                " \t\ts := trans.String()",
                "@@ -96,3 +97,3 @@ func TestWriteJSONProtocolByte(t *testing.T) {",
                " \t\t}",
                "-\t\tif e := p.Flush(); e != nil {",
                "+\t\tif e := p.Flush(context.Background()); e != nil {",
                " \t\t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -118,3 +119,3 @@ func TestReadJSONProtocolByte(t *testing.T) {",
                " \t\ttrans.WriteString(strconv.Itoa(int(value)))",
                "-\t\ttrans.Flush()",
                "+\t\ttrans.Flush(context.Background())",
                " \t\ts := trans.String()",
                "@@ -143,3 +144,3 @@ func TestWriteJSONProtocolI16(t *testing.T) {",
                " \t\t}",
                "-\t\tif e := p.Flush(); e != nil {",
                "+\t\tif e := p.Flush(context.Background()); e != nil {",
                " \t\t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -165,3 +166,3 @@ func TestReadJSONProtocolI16(t *testing.T) {",
                " \t\ttrans.WriteString(strconv.Itoa(int(value)))",
                "-\t\ttrans.Flush()",
                "+\t\ttrans.Flush(context.Background())",
                " \t\ts := trans.String()",
                "@@ -190,3 +191,3 @@ func TestWriteJSONProtocolI32(t *testing.T) {",
                " \t\t}",
                "-\t\tif e := p.Flush(); e != nil {",
                "+\t\tif e := p.Flush(context.Background()); e != nil {",
                " \t\t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -212,3 +213,3 @@ func TestReadJSONProtocolI32(t *testing.T) {",
                " \t\ttrans.WriteString(strconv.Itoa(int(value)))",
                "-\t\ttrans.Flush()",
                "+\t\ttrans.Flush(context.Background())",
                " \t\ts := trans.String()",
                "@@ -237,3 +238,3 @@ func TestWriteJSONProtocolI64(t *testing.T) {",
                " \t\t}",
                "-\t\tif e := p.Flush(); e != nil {",
                "+\t\tif e := p.Flush(context.Background()); e != nil {",
                " \t\t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -259,3 +260,3 @@ func TestReadJSONProtocolI64(t *testing.T) {",
                " \t\ttrans.WriteString(strconv.FormatInt(value, 10))",
                "-\t\ttrans.Flush()",
                "+\t\ttrans.Flush(context.Background())",
                " \t\ts := trans.String()",
                "@@ -284,3 +285,3 @@ func TestWriteJSONProtocolDouble(t *testing.T) {",
                " \t\t}",
                "-\t\tif e := p.Flush(); e != nil {",
                "+\t\tif e := p.Flush(context.Background()); e != nil {",
                " \t\t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -321,3 +322,3 @@ func TestReadJSONProtocolDouble(t *testing.T) {",
                " \t\ttrans.WriteString(n.String())",
                "-\t\ttrans.Flush()",
                "+\t\ttrans.Flush(context.Background())",
                " \t\ts := trans.String()",
                "@@ -360,3 +361,3 @@ func TestWriteJSONProtocolString(t *testing.T) {",
                " \t\t}",
                "-\t\tif e := p.Flush(); e != nil {",
                "+\t\tif e := p.Flush(context.Background()); e != nil {",
                " \t\t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -382,3 +383,3 @@ func TestReadJSONProtocolString(t *testing.T) {",
                " \t\ttrans.WriteString(jsonQuote(value))",
                "-\t\ttrans.Flush()",
                "+\t\ttrans.Flush(context.Background())",
                " \t\ts := trans.String()",
                "@@ -411,3 +412,3 @@ func TestWriteJSONProtocolBinary(t *testing.T) {",
                " \t}",
                "-\tif e := p.Flush(); e != nil {",
                "+\tif e := p.Flush(context.Background()); e != nil {",
                " \t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -443,3 +444,3 @@ func TestReadJSONProtocolBinary(t *testing.T) {",
                " \ttrans.WriteString(jsonQuote(b64String))",
                "-\ttrans.Flush()",
                "+\ttrans.Flush(context.Background())",
                " \ts := trans.String()",
                "@@ -476,3 +477,3 @@ func TestWriteJSONProtocolList(t *testing.T) {",
                " \tp.WriteListEnd()",
                "-\tif e := p.Flush(); e != nil {",
                "+\tif e := p.Flush(context.Background()); e != nil {",
                " \t\tt.Fatalf(\"Unable to write %s due to error flushing: %s\", thetype, e.Error())",
                "@@ -530,3 +531,3 @@ func TestWriteJSONProtocolSet(t *testing.T) {",
                " \tp.WriteSetEnd()",
                "-\tif e := p.Flush(); e != nil {",
                "+\tif e := p.Flush(context.Background()); e != nil {",
                " \t\tt.Fatalf(\"Unable to write %s due to error flushing: %s\", thetype, e.Error())",
                "@@ -587,3 +588,3 @@ func TestWriteJSONProtocolMap(t *testing.T) {",
                " \tp.WriteMapEnd()",
                "-\tif e := p.Flush(); e != nil {",
                "+\tif e := p.Flush(context.Background()); e != nil {",
                " \t\tt.Fatalf(\"Unable to write %s due to error flushing: %s\", thetype, e.Error())",
                "diff --git a/lib/go/thrift/memory_buffer.go b/lib/go/thrift/memory_buffer.go",
                "index 97a4edfa5..5936d2730 100644",
                "--- a/lib/go/thrift/memory_buffer.go",
                "+++ b/lib/go/thrift/memory_buffer.go",
                "@@ -23,2 +23,3 @@ import (",
                " \t\"bytes\"",
                "+\t\"context\"",
                " )",
                "@@ -72,3 +73,3 @@ func (p *TMemoryBuffer) Close() error {",
                " // Flushing a memory buffer is a no-op",
                "-func (p *TMemoryBuffer) Flush() error {",
                "+func (p *TMemoryBuffer) Flush(ctx context.Context) error {",
                " \treturn nil",
                "diff --git a/lib/go/thrift/multiplexed_protocol.go b/lib/go/thrift/multiplexed_protocol.go",
                "index b7f4f8a1c..d028a30b3 100644",
                "--- a/lib/go/thrift/multiplexed_protocol.go",
                "+++ b/lib/go/thrift/multiplexed_protocol.go",
                "@@ -21,2 +21,8 @@ package thrift",
                "+import (",
                "+\t\"context\"",
                "+\t\"fmt\"",
                "+\t\"strings\"",
                "+)",
                "+",
                " /*",
                "@@ -124,2 +130,27 @@ func (t *TMultiplexedProcessor) RegisterProcessor(name string, processor TProces",
                "+func (t *TMultiplexedProcessor) Process(ctx context.Context, in, out TProtocol) (bool, TException) {",
                "+\tname, typeId, seqid, err := in.ReadMessageBegin()",
                "+\tif err != nil {",
                "+\t\treturn false, err",
                "+\t}",
                "+\tif typeId != CALL && typeId != ONEWAY {",
                "+\t\treturn false, fmt.Errorf(\"Unexpected message type %v\", typeId)",
                "+\t}",
                "+\t//extract the service name",
                "+\tv := strings.SplitN(name, MULTIPLEXED_SEPARATOR, 2)",
                "+\tif len(v) != 2 {",
                "+\t\tif t.DefaultProcessor != nil {",
                "+\t\t\tsmb := NewStoredMessageProtocol(in, name, typeId, seqid)",
                "+\t\t\treturn t.DefaultProcessor.Process(ctx, smb, out)",
                "+\t\t}",
                "+\t\treturn false, fmt.Errorf(\"Service name not found in message name: %s.  Did you forget to use a TMultiplexProtocol in your client?\", name)",
                "+\t}",
                "+\tactualProcessor, ok := t.serviceProcessorMap[v[0]]",
                "+\tif !ok {",
                "+\t\treturn false, fmt.Errorf(\"Service name not found: %s.  Did you forget to call registerProcessor()?\", v[0])",
                "+\t}",
                "+\tsmb := NewStoredMessageProtocol(in, v[1], typeId, seqid)",
                "+\treturn actualProcessor.Process(ctx, smb, out)",
                "+}",
                "+",
                " //Protocol that use stored message for ReadMessageBegin",
                "diff --git a/lib/go/thrift/multiplexed_protocol_go17.go b/lib/go/thrift/multiplexed_protocol_go17.go",
                "deleted file mode 100644",
                "index c71035e68..000000000",
                "--- a/lib/go/thrift/multiplexed_protocol_go17.go",
                "+++ /dev/null",
                "@@ -1,53 +0,0 @@",
                "-// +build go1.7",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements. See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership. The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License. You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied. See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-package thrift",
                "-",
                "-import (",
                "-\t\"context\"",
                "-\t\"fmt\"",
                "-\t\"strings\"",
                "-)",
                "-",
                "-func (t *TMultiplexedProcessor) Process(ctx context.Context, in, out TProtocol) (bool, TException) {",
                "-\tname, typeId, seqid, err := in.ReadMessageBegin()",
                "-\tif err != nil {",
                "-\t\treturn false, err",
                "-\t}",
                "-\tif typeId != CALL && typeId != ONEWAY {",
                "-\t\treturn false, fmt.Errorf(\"Unexpected message type %v\", typeId)",
                "-\t}",
                "-\t//extract the service name",
                "-\tv := strings.SplitN(name, MULTIPLEXED_SEPARATOR, 2)",
                "-\tif len(v) != 2 {",
                "-\t\tif t.DefaultProcessor != nil {",
                "-\t\t\tsmb := NewStoredMessageProtocol(in, name, typeId, seqid)",
                "-\t\t\treturn t.DefaultProcessor.Process(ctx, smb, out)",
                "-\t\t}",
                "-\t\treturn false, fmt.Errorf(\"Service name not found in message name: %s.  Did you forget to use a TMultiplexProtocol in your client?\", name)",
                "-\t}",
                "-\tactualProcessor, ok := t.serviceProcessorMap[v[0]]",
                "-\tif !ok {",
                "-\t\treturn false, fmt.Errorf(\"Service name not found: %s.  Did you forget to call registerProcessor()?\", v[0])",
                "-\t}",
                "-\tsmb := NewStoredMessageProtocol(in, v[1], typeId, seqid)",
                "-\treturn actualProcessor.Process(ctx, smb, out)",
                "-}",
                "diff --git a/lib/go/thrift/multiplexed_protocol_pre_go17.go b/lib/go/thrift/multiplexed_protocol_pre_go17.go",
                "deleted file mode 100644",
                "index 5c27b3875..000000000",
                "--- a/lib/go/thrift/multiplexed_protocol_pre_go17.go",
                "+++ /dev/null",
                "@@ -1,54 +0,0 @@",
                "-// +build !go1.7",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements. See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership. The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License. You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied. See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-package thrift",
                "-",
                "-import (",
                "-\t\"fmt\"",
                "-\t\"strings\"",
                "-",
                "-\t\"golang.org/x/net/context\"",
                "-)",
                "-",
                "-func (t *TMultiplexedProcessor) Process(ctx context.Context, in, out TProtocol) (bool, TException) {",
                "-\tname, typeId, seqid, err := in.ReadMessageBegin()",
                "-\tif err != nil {",
                "-\t\treturn false, err",
                "-\t}",
                "-\tif typeId != CALL && typeId != ONEWAY {",
                "-\t\treturn false, fmt.Errorf(\"Unexpected message type %v\", typeId)",
                "-\t}",
                "-\t//extract the service name",
                "-\tv := strings.SplitN(name, MULTIPLEXED_SEPARATOR, 2)",
                "-\tif len(v) != 2 {",
                "-\t\tif t.DefaultProcessor != nil {",
                "-\t\t\tsmb := NewStoredMessageProtocol(in, name, typeId, seqid)",
                "-\t\t\treturn t.DefaultProcessor.Process(ctx, smb, out)",
                "-\t\t}",
                "-\t\treturn false, fmt.Errorf(\"Service name not found in message name: %s.  Did you forget to use a TMultiplexProtocol in your client?\", name)",
                "-\t}",
                "-\tactualProcessor, ok := t.serviceProcessorMap[v[0]]",
                "-\tif !ok {",
                "-\t\treturn false, fmt.Errorf(\"Service name not found: %s.  Did you forget to call registerProcessor()?\", v[0])",
                "-\t}",
                "-\tsmb := NewStoredMessageProtocol(in, v[1], typeId, seqid)",
                "-\treturn actualProcessor.Process(ctx, smb, out)",
                "-}",
                "diff --git a/lib/go/thrift/pre_go17.go b/lib/go/thrift/pre_go17.go",
                "deleted file mode 100644",
                "index cb564b8db..000000000",
                "--- a/lib/go/thrift/pre_go17.go",
                "+++ /dev/null",
                "@@ -1,26 +0,0 @@",
                "-// +build !go1.7",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements. See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership. The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License. You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied. See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-package thrift",
                "-",
                "-import \"golang.org/x/net/context\"",
                "-",
                "-var defaultCtx = context.Background()",
                "diff --git a/lib/go/thrift/processor.go b/lib/go/thrift/processor.go",
                "deleted file mode 100644",
                "index 566aaaf71..000000000",
                "--- a/lib/go/thrift/processor.go",
                "+++ /dev/null",
                "@@ -1,34 +0,0 @@",
                "-// +build !go1.7",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements. See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership. The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License. You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied. See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-package thrift",
                "-",
                "-import \"golang.org/x/net/context\"",
                "-",
                "-// A processor is a generic object which operates upon an input stream and",
                "-// writes to some output stream.",
                "-type TProcessor interface {",
                "-\tProcess(ctx context.Context, in, out TProtocol) (bool, TException)",
                "-}",
                "-",
                "-type TProcessorFunction interface {",
                "-\tProcess(ctx context.Context, seqId int32, in, out TProtocol) (bool, TException)",
                "-}",
                "diff --git a/lib/go/thrift/processor_factory.go b/lib/go/thrift/processor_factory.go",
                "index 9d645df24..e4b132b30 100644",
                "--- a/lib/go/thrift/processor_factory.go",
                "+++ b/lib/go/thrift/processor_factory.go",
                "@@ -21,2 +21,14 @@ package thrift",
                "+import \"context\"",
                "+",
                "+// A processor is a generic object which operates upon an input stream and",
                "+// writes to some output stream.",
                "+type TProcessor interface {",
                "+\tProcess(ctx context.Context, in, out TProtocol) (bool, TException)",
                "+}",
                "+",
                "+type TProcessorFunction interface {",
                "+\tProcess(ctx context.Context, seqId int32, in, out TProtocol) (bool, TException)",
                "+}",
                "+",
                " // The default processor factory just returns a singleton",
                "diff --git a/lib/go/thrift/processor_go17.go b/lib/go/thrift/processor_go17.go",
                "deleted file mode 100644",
                "index fb0b165dc..000000000",
                "--- a/lib/go/thrift/processor_go17.go",
                "+++ /dev/null",
                "@@ -1,34 +0,0 @@",
                "-// +build go1.7",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements. See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership. The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License. You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied. See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-package thrift",
                "-",
                "-import \"context\"",
                "-",
                "-// A processor is a generic object which operates upon an input stream and",
                "-// writes to some output stream.",
                "-type TProcessor interface {",
                "-\tProcess(ctx context.Context, in, out TProtocol) (bool, TException)",
                "-}",
                "-",
                "-type TProcessorFunction interface {",
                "-\tProcess(ctx context.Context, seqId int32, in, out TProtocol) (bool, TException)",
                "-}",
                "diff --git a/lib/go/thrift/protocol.go b/lib/go/thrift/protocol.go",
                "index 25e6d24b9..615b7a4a8 100644",
                "--- a/lib/go/thrift/protocol.go",
                "+++ b/lib/go/thrift/protocol.go",
                "@@ -22,2 +22,3 @@ package thrift",
                " import (",
                "+\t\"context\"",
                " \t\"errors\"",
                "@@ -76,3 +77,3 @@ type TProtocol interface {",
                " \tSkip(fieldType TType) (err error)",
                "-\tFlush() (err error)",
                "+\tFlush(ctx context.Context) (err error)",
                "diff --git a/lib/go/thrift/protocol_test.go b/lib/go/thrift/protocol_test.go",
                "index 2573312d1..2e3b65df9 100644",
                "--- a/lib/go/thrift/protocol_test.go",
                "+++ b/lib/go/thrift/protocol_test.go",
                "@@ -23,2 +23,3 @@ import (",
                " \t\"bytes\"",
                "+\t\"context\"",
                " \t\"io/ioutil\"",
                "@@ -236,3 +237,3 @@ func ReadWriteBool(t testing.TB, p TProtocol, trans TTransport) {",
                " \t}",
                "-\tp.Flush()",
                "+\tp.Flush(context.Background())",
                " \tthetype2, thelen2, err := p.ReadListBegin()",
                "@@ -282,3 +283,3 @@ func ReadWriteByte(t testing.TB, p TProtocol, trans TTransport) {",
                " \t}",
                "-\terr = p.Flush()",
                "+\terr = p.Flush(context.Background())",
                " \tif err != nil {",
                "@@ -322,3 +323,3 @@ func ReadWriteI16(t testing.TB, p TProtocol, trans TTransport) {",
                " \tp.WriteListEnd()",
                "-\tp.Flush()",
                "+\tp.Flush(context.Background())",
                " \tthetype2, thelen2, err := p.ReadListBegin()",
                "@@ -359,3 +360,3 @@ func ReadWriteI32(t testing.TB, p TProtocol, trans TTransport) {",
                " \tp.WriteListEnd()",
                "-\tp.Flush()",
                "+\tp.Flush(context.Background())",
                " \tthetype2, thelen2, err := p.ReadListBegin()",
                "@@ -395,3 +396,3 @@ func ReadWriteI64(t testing.TB, p TProtocol, trans TTransport) {",
                " \tp.WriteListEnd()",
                "-\tp.Flush()",
                "+\tp.Flush(context.Background())",
                " \tthetype2, thelen2, err := p.ReadListBegin()",
                "@@ -431,3 +432,3 @@ func ReadWriteDouble(t testing.TB, p TProtocol, trans TTransport) {",
                " \tp.WriteListEnd()",
                "-\tp.Flush()",
                "+\tp.Flush(context.Background())",
                " \tthetype2, thelen2, err := p.ReadListBegin()",
                "@@ -469,3 +470,3 @@ func ReadWriteString(t testing.TB, p TProtocol, trans TTransport) {",
                " \tp.WriteListEnd()",
                "-\tp.Flush()",
                "+\tp.Flush(context.Background())",
                " \tthetype2, thelen2, err := p.ReadListBegin()",
                "@@ -500,3 +501,3 @@ func ReadWriteBinary(t testing.TB, p TProtocol, trans TTransport) {",
                " \tp.WriteBinary(v)",
                "-\tp.Flush()",
                "+\tp.Flush(context.Background())",
                " \tvalue, err := p.ReadBinary()",
                "diff --git a/lib/go/thrift/serializer.go b/lib/go/thrift/serializer.go",
                "index 771222999..1ff4d3754 100644",
                "--- a/lib/go/thrift/serializer.go",
                "+++ b/lib/go/thrift/serializer.go",
                "@@ -21,2 +21,6 @@ package thrift",
                "+import (",
                "+\t\"context\"",
                "+)",
                "+",
                " type TSerializer struct {",
                "@@ -40,3 +44,3 @@ func NewTSerializer() *TSerializer {",
                "-func (t *TSerializer) WriteString(msg TStruct) (s string, err error) {",
                "+func (t *TSerializer) WriteString(ctx context.Context, msg TStruct) (s string, err error) {",
                " \tt.Transport.Reset()",
                "@@ -47,6 +51,6 @@ func (t *TSerializer) WriteString(msg TStruct) (s string, err error) {",
                "-\tif err = t.Protocol.Flush(); err != nil {",
                "+\tif err = t.Protocol.Flush(ctx); err != nil {",
                " \t\treturn",
                " \t}",
                "-\tif err = t.Transport.Flush(); err != nil {",
                "+\tif err = t.Transport.Flush(ctx); err != nil {",
                " \t\treturn",
                "@@ -57,3 +61,3 @@ func (t *TSerializer) WriteString(msg TStruct) (s string, err error) {",
                "-func (t *TSerializer) Write(msg TStruct) (b []byte, err error) {",
                "+func (t *TSerializer) Write(ctx context.Context, msg TStruct) (b []byte, err error) {",
                " \tt.Transport.Reset()",
                "@@ -64,3 +68,3 @@ func (t *TSerializer) Write(msg TStruct) (b []byte, err error) {",
                "-\tif err = t.Protocol.Flush(); err != nil {",
                "+\tif err = t.Protocol.Flush(ctx); err != nil {",
                " \t\treturn",
                "@@ -68,3 +72,3 @@ func (t *TSerializer) Write(msg TStruct) (b []byte, err error) {",
                "-\tif err = t.Transport.Flush(); err != nil {",
                "+\tif err = t.Transport.Flush(ctx); err != nil {",
                " \t\treturn",
                "diff --git a/lib/go/thrift/serializer_test.go b/lib/go/thrift/serializer_test.go",
                "index 06d27a16b..32227ef49 100644",
                "--- a/lib/go/thrift/serializer_test.go",
                "+++ b/lib/go/thrift/serializer_test.go",
                "@@ -22,2 +22,3 @@ package thrift",
                " import (",
                "+\t\"context\"",
                " \t\"errors\"",
                "@@ -90,3 +91,3 @@ func ProtocolTest1(test *testing.T, pf ProtocolFactory) (bool, error) {",
                "-\ts, err := t.WriteString(&m)",
                "+\ts, err := t.WriteString(context.Background(), &m)",
                " \tif err != nil {",
                "@@ -124,3 +125,3 @@ func ProtocolTest2(test *testing.T, pf ProtocolFactory) (bool, error) {",
                "-\ts, err := t.WriteString(&m)",
                "+\ts, err := t.WriteString(context.Background(), &m)",
                " \tif err != nil {",
                "diff --git a/lib/go/thrift/simple_json_protocol.go b/lib/go/thrift/simple_json_protocol.go",
                "index 735332231..88f569cc1 100644",
                "--- a/lib/go/thrift/simple_json_protocol.go",
                "+++ b/lib/go/thrift/simple_json_protocol.go",
                "@@ -24,2 +24,3 @@ import (",
                " \t\"bytes\"",
                "+\t\"context\"",
                " \t\"encoding/base64\"",
                "@@ -554,3 +555,3 @@ func (p *TSimpleJSONProtocol) ReadBinary() ([]byte, error) {",
                "-func (p *TSimpleJSONProtocol) Flush() (err error) {",
                "+func (p *TSimpleJSONProtocol) Flush(ctx context.Context) (err error) {",
                " \treturn NewTProtocolException(p.writer.Flush())",
                "diff --git a/lib/go/thrift/simple_json_protocol_test.go b/lib/go/thrift/simple_json_protocol_test.go",
                "index 8f0dcc9df..49181ab19 100644",
                "--- a/lib/go/thrift/simple_json_protocol_test.go",
                "+++ b/lib/go/thrift/simple_json_protocol_test.go",
                "@@ -22,2 +22,3 @@ package thrift",
                " import (",
                "+\t\"context\"",
                " \t\"encoding/base64\"",
                "@@ -39,3 +40,3 @@ func TestWriteSimpleJSONProtocolBool(t *testing.T) {",
                " \t\t}",
                "-\t\tif e := p.Flush(); e != nil {",
                "+\t\tif e := p.Flush(context.Background()); e != nil {",
                " \t\t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -65,3 +66,3 @@ func TestReadSimpleJSONProtocolBool(t *testing.T) {",
                " \t\t}",
                "-\t\ttrans.Flush()",
                "+\t\ttrans.Flush(context.Background())",
                " \t\ts := trans.String()",
                "@@ -90,3 +91,3 @@ func TestWriteSimpleJSONProtocolByte(t *testing.T) {",
                " \t\t}",
                "-\t\tif e := p.Flush(); e != nil {",
                "+\t\tif e := p.Flush(context.Background()); e != nil {",
                " \t\t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -112,3 +113,3 @@ func TestReadSimpleJSONProtocolByte(t *testing.T) {",
                " \t\ttrans.WriteString(strconv.Itoa(int(value)))",
                "-\t\ttrans.Flush()",
                "+\t\ttrans.Flush(context.Background())",
                " \t\ts := trans.String()",
                "@@ -137,3 +138,3 @@ func TestWriteSimpleJSONProtocolI16(t *testing.T) {",
                " \t\t}",
                "-\t\tif e := p.Flush(); e != nil {",
                "+\t\tif e := p.Flush(context.Background()); e != nil {",
                " \t\t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -159,3 +160,3 @@ func TestReadSimpleJSONProtocolI16(t *testing.T) {",
                " \t\ttrans.WriteString(strconv.Itoa(int(value)))",
                "-\t\ttrans.Flush()",
                "+\t\ttrans.Flush(context.Background())",
                " \t\ts := trans.String()",
                "@@ -184,3 +185,3 @@ func TestWriteSimpleJSONProtocolI32(t *testing.T) {",
                " \t\t}",
                "-\t\tif e := p.Flush(); e != nil {",
                "+\t\tif e := p.Flush(context.Background()); e != nil {",
                " \t\t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -206,3 +207,3 @@ func TestReadSimpleJSONProtocolI32(t *testing.T) {",
                " \t\ttrans.WriteString(strconv.Itoa(int(value)))",
                "-\t\ttrans.Flush()",
                "+\t\ttrans.Flush(context.Background())",
                " \t\ts := trans.String()",
                "@@ -230,3 +231,3 @@ func TestReadSimpleJSONProtocolI32Null(t *testing.T) {",
                " \ttrans.WriteString(value)",
                "-\ttrans.Flush()",
                "+\ttrans.Flush(context.Background())",
                " \ts := trans.String()",
                "@@ -252,3 +253,3 @@ func TestWriteSimpleJSONProtocolI64(t *testing.T) {",
                " \t\t}",
                "-\t\tif e := p.Flush(); e != nil {",
                "+\t\tif e := p.Flush(context.Background()); e != nil {",
                " \t\t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -274,3 +275,3 @@ func TestReadSimpleJSONProtocolI64(t *testing.T) {",
                " \t\ttrans.WriteString(strconv.FormatInt(value, 10))",
                "-\t\ttrans.Flush()",
                "+\t\ttrans.Flush(context.Background())",
                " \t\ts := trans.String()",
                "@@ -298,3 +299,3 @@ func TestReadSimpleJSONProtocolI64Null(t *testing.T) {",
                " \ttrans.WriteString(value)",
                "-\ttrans.Flush()",
                "+\ttrans.Flush(context.Background())",
                " \ts := trans.String()",
                "@@ -320,3 +321,3 @@ func TestWriteSimpleJSONProtocolDouble(t *testing.T) {",
                " \t\t}",
                "-\t\tif e := p.Flush(); e != nil {",
                "+\t\tif e := p.Flush(context.Background()); e != nil {",
                " \t\t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -357,3 +358,3 @@ func TestReadSimpleJSONProtocolDouble(t *testing.T) {",
                " \t\ttrans.WriteString(n.String())",
                "-\t\ttrans.Flush()",
                "+\t\ttrans.Flush(context.Background())",
                " \t\ts := trans.String()",
                "@@ -396,3 +397,3 @@ func TestWriteSimpleJSONProtocolString(t *testing.T) {",
                " \t\t}",
                "-\t\tif e := p.Flush(); e != nil {",
                "+\t\tif e := p.Flush(context.Background()); e != nil {",
                " \t\t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -418,3 +419,3 @@ func TestReadSimpleJSONProtocolString(t *testing.T) {",
                " \t\ttrans.WriteString(jsonQuote(value))",
                "-\t\ttrans.Flush()",
                "+\t\ttrans.Flush(context.Background())",
                " \t\ts := trans.String()",
                "@@ -442,3 +443,3 @@ func TestReadSimpleJSONProtocolStringNull(t *testing.T) {",
                " \ttrans.WriteString(value)",
                "-\ttrans.Flush()",
                "+\ttrans.Flush(context.Background())",
                " \ts := trans.String()",
                "@@ -466,3 +467,3 @@ func TestWriteSimpleJSONProtocolBinary(t *testing.T) {",
                " \t}",
                "-\tif e := p.Flush(); e != nil {",
                "+\tif e := p.Flush(context.Background()); e != nil {",
                " \t\tt.Fatalf(\"Unable to write %s value %v due to error flushing: %s\", thetype, value, e.Error())",
                "@@ -489,3 +490,3 @@ func TestReadSimpleJSONProtocolBinary(t *testing.T) {",
                " \ttrans.WriteString(jsonQuote(b64String))",
                "-\ttrans.Flush()",
                "+\ttrans.Flush(context.Background())",
                " \ts := trans.String()",
                "@@ -518,3 +519,3 @@ func TestReadSimpleJSONProtocolBinaryNull(t *testing.T) {",
                " \ttrans.WriteString(value)",
                "-\ttrans.Flush()",
                "+\ttrans.Flush(context.Background())",
                " \ts := trans.String()",
                "@@ -544,3 +545,3 @@ func TestWriteSimpleJSONProtocolList(t *testing.T) {",
                " \tp.WriteListEnd()",
                "-\tif e := p.Flush(); e != nil {",
                "+\tif e := p.Flush(context.Background()); e != nil {",
                " \t\tt.Fatalf(\"Unable to write %s due to error flushing: %s\", thetype, e.Error())",
                "@@ -598,3 +599,3 @@ func TestWriteSimpleJSONProtocolSet(t *testing.T) {",
                " \tp.WriteSetEnd()",
                "-\tif e := p.Flush(); e != nil {",
                "+\tif e := p.Flush(context.Background()); e != nil {",
                " \t\tt.Fatalf(\"Unable to write %s due to error flushing: %s\", thetype, e.Error())",
                "@@ -655,3 +656,3 @@ func TestWriteSimpleJSONProtocolMap(t *testing.T) {",
                " \tp.WriteMapEnd()",
                "-\tif e := p.Flush(); e != nil {",
                "+\tif e := p.Flush(context.Background()); e != nil {",
                " \t\tt.Fatalf(\"Unable to write %s due to error flushing: %s\", thetype, e.Error())",
                "diff --git a/lib/go/thrift/socket.go b/lib/go/thrift/socket.go",
                "index 383b1fe3e..885427965 100644",
                "--- a/lib/go/thrift/socket.go",
                "+++ b/lib/go/thrift/socket.go",
                "@@ -22,2 +22,3 @@ package thrift",
                " import (",
                "+\t\"context\"",
                " \t\"net\"",
                "@@ -150,3 +151,3 @@ func (p *TSocket) Write(buf []byte) (int, error) {",
                "-func (p *TSocket) Flush() error {",
                "+func (p *TSocket) Flush(ctx context.Context) error {",
                " \treturn nil",
                "diff --git a/lib/go/thrift/ssl_socket.go b/lib/go/thrift/ssl_socket.go",
                "index c3bd72cc4..ba6337726 100644",
                "--- a/lib/go/thrift/ssl_socket.go",
                "+++ b/lib/go/thrift/ssl_socket.go",
                "@@ -22,2 +22,3 @@ package thrift",
                " import (",
                "+\t\"context\"",
                " \t\"crypto/tls\"",
                "@@ -160,3 +161,3 @@ func (p *TSSLSocket) Write(buf []byte) (int, error) {",
                "-func (p *TSSLSocket) Flush() error {",
                "+func (p *TSSLSocket) Flush(ctx context.Context) error {",
                " \treturn nil",
                "diff --git a/lib/go/thrift/transport.go b/lib/go/thrift/transport.go",
                "index 70a85a848..ba2738a8d 100644",
                "--- a/lib/go/thrift/transport.go",
                "+++ b/lib/go/thrift/transport.go",
                "@@ -22,2 +22,3 @@ package thrift",
                " import (",
                "+\t\"context\"",
                " \t\"errors\"",
                "@@ -32,2 +33,6 @@ type Flusher interface {",
                "+type ContextFlusher interface {",
                "+\tFlush(ctx context.Context) (err error)",
                "+}",
                "+",
                " type ReadSizeProvider interface {",
                "@@ -39,3 +44,3 @@ type TTransport interface {",
                " \tio.ReadWriteCloser",
                "-\tFlusher",
                "+\tContextFlusher",
                " \tReadSizeProvider",
                "@@ -62,3 +67,3 @@ type TRichTransport interface {",
                " \tstringWriter",
                "-\tFlusher",
                "+\tContextFlusher",
                " \tReadSizeProvider",
                "diff --git a/lib/go/thrift/transport_test.go b/lib/go/thrift/transport_test.go",
                "index 864958a9d..01278038e 100644",
                "--- a/lib/go/thrift/transport_test.go",
                "+++ b/lib/go/thrift/transport_test.go",
                "@@ -22,2 +22,3 @@ package thrift",
                " import (",
                "+\t\"context\"",
                " \t\"io\"",
                "@@ -56,3 +57,3 @@ func TransportTest(t *testing.T, writeTrans TTransport, readTrans TTransport) {",
                " \t}",
                "-\terr = writeTrans.Flush()",
                "+\terr = writeTrans.Flush(context.Background())",
                " \tif err != nil {",
                "@@ -76,3 +77,3 @@ func TransportTest(t *testing.T, writeTrans TTransport, readTrans TTransport) {",
                " \t}",
                "-\terr = writeTrans.Flush()",
                "+\terr = writeTrans.Flush(context.Background())",
                " \tif err != nil {",
                "@@ -115,3 +116,3 @@ func TransportHeaderTest(t *testing.T, writeTrans TTransport, readTrans TTranspo",
                " \t}",
                "-\terr = writeTrans.Flush()",
                "+\terr = writeTrans.Flush(context.Background())",
                " \tif err != nil {",
                "diff --git a/lib/go/thrift/zlib_transport.go b/lib/go/thrift/zlib_transport.go",
                "index f2f073222..f3d42673a 100644",
                "--- a/lib/go/thrift/zlib_transport.go",
                "+++ b/lib/go/thrift/zlib_transport.go",
                "@@ -23,2 +23,3 @@ import (",
                " \t\"compress/zlib\"",
                "+\t\"context\"",
                " \t\"io\"",
                "@@ -93,3 +94,3 @@ func (z *TZlibTransport) Close() error {",
                " // Flush flushes the writer and its underlying transport.",
                "-func (z *TZlibTransport) Flush() error {",
                "+func (z *TZlibTransport) Flush(ctx context.Context) error {",
                " \tif err := z.writer.Flush(); err != nil {",
                "@@ -97,3 +98,3 @@ func (z *TZlibTransport) Flush() error {",
                " \t}",
                "-\treturn z.transport.Flush()",
                "+\treturn z.transport.Flush(ctx)",
                " }",
                "diff --git a/test/go/Makefile.am b/test/go/Makefile.am",
                "index 6bc97f582..6da83394b 100644",
                "--- a/test/go/Makefile.am",
                "+++ b/test/go/Makefile.am",
                "@@ -20,5 +20,2 @@",
                " BUILT_SOURCES = gopath",
                "-if GOVERSION_LT_17",
                "-COMPILER_EXTRAFLAG=\",legacy_context\"",
                "-endif",
                "@@ -39,3 +36,2 @@ gopath: $(THRIFT) ThriftTest.thrift",
                " \t$(THRIFTCMD) ../StressTest.thrift",
                "-\tGOPATH=`pwd` $(GO) get golang.org/x/net/context",
                " \tGOPATH=`pwd` $(GO) get github.com/golang/mock/gomock || true",
                "diff --git a/test/go/src/bin/stress/go17.go b/test/go/src/bin/stress/go17.go",
                "deleted file mode 100644",
                "index 81f1ad8ee..000000000",
                "--- a/test/go/src/bin/stress/go17.go",
                "+++ /dev/null",
                "@@ -1,62 +0,0 @@",
                "-// +build go1.7",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements. See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership. The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License. You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied. See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-package main",
                "-",
                "-import (",
                "-\t\"context\"",
                "-\t\"sync/atomic\"",
                "-)",
                "-",
                "-type handler struct{}",
                "-",
                "-func (h *handler) EchoVoid(ctx context.Context) (err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn nil",
                "-}",
                "-func (h *handler) EchoByte(ctx context.Context, arg int8) (r int8, err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn arg, nil",
                "-}",
                "-func (h *handler) EchoI32(ctx context.Context, arg int32) (r int32, err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn arg, nil",
                "-}",
                "-func (h *handler) EchoI64(ctx context.Context, arg int64) (r int64, err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn arg, nil",
                "-}",
                "-func (h *handler) EchoString(ctx context.Context, arg string) (r string, err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn arg, nil",
                "-}",
                "-func (h *handler) EchoList(ctx context.Context, arg []int8) (r []int8, err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn arg, nil",
                "-}",
                "-func (h *handler) EchoSet(ctx context.Context, arg map[int8]struct{}) (r map[int8]struct{}, err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn arg, nil",
                "-}",
                "-func (h *handler) EchoMap(ctx context.Context, arg map[int8]int8) (r map[int8]int8, err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn arg, nil",
                "-}",
                "diff --git a/test/go/src/bin/stress/main.go b/test/go/src/bin/stress/main.go",
                "index e8e6b2a20..f2e0f2073 100644",
                "--- a/test/go/src/bin/stress/main.go",
                "+++ b/test/go/src/bin/stress/main.go",
                "@@ -22,2 +22,3 @@ package main",
                " import (",
                "+\t\"context\"",
                " \t\"flag\"",
                "@@ -218 +219,36 @@ func client(protocolFactory thrift.TProtocolFactory) {",
                " }",
                "+",
                "+type handler struct{}",
                "+",
                "+func (h *handler) EchoVoid(ctx context.Context) (err error) {",
                "+\tatomic.AddInt64(&counter, 1)",
                "+\treturn nil",
                "+}",
                "+func (h *handler) EchoByte(ctx context.Context, arg int8) (r int8, err error) {",
                "+\tatomic.AddInt64(&counter, 1)",
                "+\treturn arg, nil",
                "+}",
                "+func (h *handler) EchoI32(ctx context.Context, arg int32) (r int32, err error) {",
                "+\tatomic.AddInt64(&counter, 1)",
                "+\treturn arg, nil",
                "+}",
                "+func (h *handler) EchoI64(ctx context.Context, arg int64) (r int64, err error) {",
                "+\tatomic.AddInt64(&counter, 1)",
                "+\treturn arg, nil",
                "+}",
                "+func (h *handler) EchoString(ctx context.Context, arg string) (r string, err error) {",
                "+\tatomic.AddInt64(&counter, 1)",
                "+\treturn arg, nil",
                "+}",
                "+func (h *handler) EchoList(ctx context.Context, arg []int8) (r []int8, err error) {",
                "+\tatomic.AddInt64(&counter, 1)",
                "+\treturn arg, nil",
                "+}",
                "+func (h *handler) EchoSet(ctx context.Context, arg map[int8]struct{}) (r map[int8]struct{}, err error) {",
                "+\tatomic.AddInt64(&counter, 1)",
                "+\treturn arg, nil",
                "+}",
                "+func (h *handler) EchoMap(ctx context.Context, arg map[int8]int8) (r map[int8]int8, err error) {",
                "+\tatomic.AddInt64(&counter, 1)",
                "+\treturn arg, nil",
                "+}",
                "diff --git a/test/go/src/bin/stress/pre_go17.go b/test/go/src/bin/stress/pre_go17.go",
                "deleted file mode 100644",
                "index 07ae5c6a2..000000000",
                "--- a/test/go/src/bin/stress/pre_go17.go",
                "+++ /dev/null",
                "@@ -1,63 +0,0 @@",
                "-// +build !go1.7",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements. See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership. The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License. You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied. See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-package main",
                "-",
                "-import (",
                "-\t\"sync/atomic\"",
                "-",
                "-\t\"golang.org/x/net/context\"",
                "-)",
                "-",
                "-type handler struct{}",
                "-",
                "-func (h *handler) EchoVoid(ctx context.Context) (err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn nil",
                "-}",
                "-func (h *handler) EchoByte(ctx context.Context, arg int8) (r int8, err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn arg, nil",
                "-}",
                "-func (h *handler) EchoI32(ctx context.Context, arg int32) (r int32, err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn arg, nil",
                "-}",
                "-func (h *handler) EchoI64(ctx context.Context, arg int64) (r int64, err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn arg, nil",
                "-}",
                "-func (h *handler) EchoString(ctx context.Context, arg string) (r string, err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn arg, nil",
                "-}",
                "-func (h *handler) EchoList(ctx context.Context, arg []int8) (r []int8, err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn arg, nil",
                "-}",
                "-func (h *handler) EchoSet(ctx context.Context, arg map[int8]struct{}) (r map[int8]struct{}, err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn arg, nil",
                "-}",
                "-func (h *handler) EchoMap(ctx context.Context, arg map[int8]int8) (r map[int8]int8, err error) {",
                "-\tatomic.AddInt64(&counter, 1)",
                "-\treturn arg, nil",
                "-}",
                "diff --git a/test/go/src/bin/testclient/main.go b/test/go/src/bin/testclient/main.go",
                "index ab24cbfc7..20104f9e1 100644",
                "--- a/test/go/src/bin/testclient/main.go",
                "+++ b/test/go/src/bin/testclient/main.go",
                "@@ -23,2 +23,3 @@ import (",
                " \t\"common\"",
                "+\t\"context\"",
                " \t\"flag\"",
                "@@ -62,2 +63,3 @@ var xxs = &thrifttest.Xtruct{",
                " var xcept = &thrifttest.Xception{ErrorCode: 1001, Message: \"Xception\"}",
                "+var defaultCtx = context.Background()",
                "diff --git a/test/go/src/bin/testclient/pre_go17.go b/test/go/src/bin/testclient/pre_go17.go",
                "deleted file mode 100644",
                "index 10a6fb8d9..000000000",
                "--- a/test/go/src/bin/testclient/pre_go17.go",
                "+++ /dev/null",
                "@@ -1,26 +0,0 @@",
                "-// +build !go1.7",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements. See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership. The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License. You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied. See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-package main",
                "-",
                "-import \"golang.org/x/net/context\"",
                "-",
                "-var defaultCtx = context.Background()",
                "diff --git a/test/go/src/common/clientserver_test.go b/test/go/src/common/clientserver_test.go",
                "index c4cfd44f3..cb1abf775 100644",
                "--- a/test/go/src/common/clientserver_test.go",
                "+++ b/test/go/src/common/clientserver_test.go",
                "@@ -22,2 +22,3 @@ package common",
                " import (",
                "+\t\"context\"",
                " \t\"errors\"",
                "@@ -97,2 +98,3 @@ var xxs = &thrifttest.Xtruct{",
                " var xcept = &thrifttest.Xception{ErrorCode: 1001, Message: \"some\"}",
                "+var defaultCtx = context.Background()",
                "diff --git a/test/go/src/common/context_test.go b/test/go/src/common/context_test.go",
                "new file mode 100644",
                "index 000000000..e64dbb9ad",
                "--- /dev/null",
                "+++ b/test/go/src/common/context_test.go",
                "@@ -0,0 +1,98 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements. See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership. The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License. You may obtain a copy of the License at",
                "+ *",
                "+ *   http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied. See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+",
                "+package common",
                "+",
                "+import (",
                "+\t\"context\"",
                "+\t\"fmt\"",
                "+\t\"net\"",
                "+\t\"net/http\"",
                "+\t\"net/url\"",
                "+\t\"os\"",
                "+\t\"syscall\"",
                "+\t\"testing\"",
                "+\t\"thrift\"",
                "+\t\"time\"",
                "+)",
                "+",
                "+type slowHttpHandler struct{}",
                "+",
                "+func (slowHttpHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {",
                "+\ttime.Sleep(1 * time.Second)",
                "+}",
                "+",
                "+func TestHttpContextTimeout(t *testing.T) {",
                "+\tcertPath = \"../../../keys\"",
                "+",
                "+\tunit := test_unit{\"127.0.0.1\", 9096, \"\", \"http\", \"binary\", false}",
                "+",
                "+\tserver := &http.Server{Addr: unit.host + fmt.Sprintf(\":%d\", unit.port), Handler: slowHttpHandler{}}",
                "+\tgo server.ListenAndServe()",
                "+",
                "+\tclient, trans, err := StartClient(unit.host, unit.port, unit.domain_socket, unit.transport, unit.protocol, unit.ssl)",
                "+\tif err != nil {",
                "+\t\tt.Errorf(\"Unable to start client: %v\", err)",
                "+\t\treturn",
                "+\t}",
                "+\tdefer trans.Close()",
                "+",
                "+\tunwrapErr := func(err error) error {",
                "+\t\tfor {",
                "+\t\t\tswitch err.(type) {",
                "+\t\t\tcase thrift.TTransportException:",
                "+\t\t\t\terr = err.(thrift.TTransportException).Err()",
                "+\t\t\tcase *url.Error:",
                "+\t\t\t\terr = err.(*url.Error).Err",
                "+\t\t\tcase *net.OpError:",
                "+\t\t\t\terr = err.(*net.OpError).Err",
                "+\t\t\tcase *os.SyscallError:",
                "+\t\t\t\terr = err.(*os.SyscallError).Err",
                "+\t\t\tdefault:",
                "+\t\t\t\treturn err",
                "+\t\t\t}",
                "+\t\t}",
                "+\t}",
                "+",
                "+\tserverStartupDeadline := time.Now().Add(5 * time.Second)",
                "+\tfor {",
                "+\t\tctx, _ := context.WithTimeout(context.Background(), 50*time.Millisecond)",
                "+\t\terr = client.TestVoid(ctx)",
                "+\t\terr = unwrapErr(err)",
                "+\t\tif err != syscall.ECONNREFUSED || time.Now().After(serverStartupDeadline) {",
                "+\t\t\tbreak",
                "+\t\t}",
                "+\t\ttime.Sleep(time.Millisecond)",
                "+\t}",
                "+",
                "+\tif err == nil {",
                "+\t\tt.Errorf(\"Request completed (should have timed out)\")",
                "+\t\treturn",
                "+\t}",
                "+",
                "+\t// We've got to switch on `err.Error()` here since go1.7 doesn't properly return",
                "+\t// `context.DeadlineExceeded` error and `http.errRequestCanceled` is not exported.",
                "+\t// See https://github.com/golang/go/issues/17711",
                "+\tswitch err.Error() {",
                "+\tcase context.DeadlineExceeded.Error(), \"net/http: request canceled\":",
                "+\t\t// Expected error",
                "+\tdefault:",
                "+\t\tt.Errorf(\"Unexpected error: %s\", err)",
                "+\t}",
                "+}",
                "diff --git a/test/go/src/common/go17.go b/test/go/src/common/go17.go",
                "deleted file mode 100644",
                "index 9aca4075c..000000000",
                "--- a/test/go/src/common/go17.go",
                "+++ /dev/null",
                "@@ -1,26 +0,0 @@",
                "-// +build go1.7",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements. See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership. The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License. You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied. See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-package common",
                "-",
                "-import \"context\"",
                "-",
                "-var defaultCtx = context.Background()",
                "diff --git a/test/go/src/common/pre_go17.go b/test/go/src/common/pre_go17.go",
                "deleted file mode 100644",
                "index 6c14579d2..000000000",
                "--- a/test/go/src/common/pre_go17.go",
                "+++ /dev/null",
                "@@ -1,26 +0,0 @@",
                "-// +build !go1.7",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements. See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership. The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License. You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied. See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-package common",
                "-",
                "-import \"golang.org/x/net/context\"",
                "-",
                "-var defaultCtx = context.Background()",
                "diff --git a/test/go/src/common/printing_handler.go b/test/go/src/common/printing_handler.go",
                "index c0a286267..2b22d0c97 100644",
                "--- a/test/go/src/common/printing_handler.go",
                "+++ b/test/go/src/common/printing_handler.go",
                "@@ -1,3 +1 @@",
                "-// +build !go1.7",
                "-",
                " /*",
                "@@ -24,9 +22,8 @@ package common",
                " import (",
                "+\t\"context\"",
                "+\t\"encoding/hex\"",
                " \t\"errors\"",
                " \t\"fmt\"",
                "-\t\"encoding/hex\"",
                " \t. \"gen/thrifttest\"",
                " \t\"time\"",
                "-",
                "-\t\"golang.org/x/net/context\"",
                " )",
                "@@ -282,3 +279,3 @@ func (p *printingHandler) TestInsanity(ctx context.Context, argument *Insanity)",
                " \tr = make(map[UserId]map[Numberz]*Insanity)",
                "-\tr[1] = map[Numberz]*Insanity {",
                "+\tr[1] = map[Numberz]*Insanity{",
                " \t\t2: argument,",
                "@@ -286,3 +283,3 @@ func (p *printingHandler) TestInsanity(ctx context.Context, argument *Insanity)",
                " \t}",
                "-\tr[2] = map[Numberz]*Insanity {",
                "+\tr[2] = map[Numberz]*Insanity{",
                " \t\t6: NewInsanity(),",
                "diff --git a/test/go/src/common/printing_handler_go17.go b/test/go/src/common/printing_handler_go17.go",
                "deleted file mode 100644",
                "index 1efae8676..000000000",
                "--- a/test/go/src/common/printing_handler_go17.go",
                "+++ /dev/null",
                "@@ -1,386 +0,0 @@",
                "-// +build go1.7",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements. See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership. The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License. You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied. See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-package common",
                "-",
                "-import (",
                "-\t\"context\"",
                "-\t\"errors\"",
                "-\t\"fmt\"",
                "-\t\"encoding/hex\"",
                "-\t. \"gen/thrifttest\"",
                "-\t\"time\"",
                "-)",
                "-",
                "-var PrintingHandler = &printingHandler{}",
                "-",
                "-type printingHandler struct{}",
                "-",
                "-// Prints \"testVoid()\" and returns nothing.",
                "-func (p *printingHandler) TestVoid(ctx context.Context) (err error) {",
                "-\tfmt.Println(\"testVoid()\")",
                "-\treturn nil",
                "-}",
                "-",
                "-// Prints 'testString(\"%s\")' with thing as '%s'",
                "-// @param string thing - the string to print",
                "-// @return string - returns the string 'thing'",
                "-//",
                "-// Parameters:",
                "-//  - Thing",
                "-func (p *printingHandler) TestString(ctx context.Context, thing string) (r string, err error) {",
                "-\tfmt.Printf(\"testString(\\\"%s\\\")\\n\", thing)",
                "-\treturn thing, nil",
                "-}",
                "-",
                "-// Prints 'testBool(\"%t\")' with thing as 'true' or 'false'",
                "-// @param bool thing - the bool to print",
                "-// @return bool - returns the bool 'thing'",
                "-//",
                "-// Parameters:",
                "-//  - Thing",
                "-func (p *printingHandler) TestBool(ctx context.Context, thing bool) (r bool, err error) {",
                "-\tfmt.Printf(\"testBool(%t)\\n\", thing)",
                "-\treturn thing, nil",
                "-}",
                "-",
                "-// Prints 'testByte(\"%d\")' with thing as '%d'",
                "-// @param byte thing - the byte to print",
                "-// @return byte - returns the byte 'thing'",
                "-//",
                "-// Parameters:",
                "-//  - Thing",
                "-func (p *printingHandler) TestByte(ctx context.Context, thing int8) (r int8, err error) {",
                "-\tfmt.Printf(\"testByte(%d)\\n\", thing)",
                "-\treturn thing, nil",
                "-}",
                "-",
                "-// Prints 'testI32(\"%d\")' with thing as '%d'",
                "-// @param i32 thing - the i32 to print",
                "-// @return i32 - returns the i32 'thing'",
                "-//",
                "-// Parameters:",
                "-//  - Thing",
                "-func (p *printingHandler) TestI32(ctx context.Context, thing int32) (r int32, err error) {",
                "-\tfmt.Printf(\"testI32(%d)\\n\", thing)",
                "-\treturn thing, nil",
                "-}",
                "-",
                "-// Prints 'testI64(\"%d\")' with thing as '%d'",
                "-// @param i64 thing - the i64 to print",
                "-// @return i64 - returns the i64 'thing'",
                "-//",
                "-// Parameters:",
                "-//  - Thing",
                "-func (p *printingHandler) TestI64(ctx context.Context, thing int64) (r int64, err error) {",
                "-\tfmt.Printf(\"testI64(%d)\\n\", thing)",
                "-\treturn thing, nil",
                "-}",
                "-",
                "-// Prints 'testDouble(\"%f\")' with thing as '%f'",
                "-// @param double thing - the double to print",
                "-// @return double - returns the double 'thing'",
                "-//",
                "-// Parameters:",
                "-//  - Thing",
                "-func (p *printingHandler) TestDouble(ctx context.Context, thing float64) (r float64, err error) {",
                "-\tfmt.Printf(\"testDouble(%f)\\n\", thing)",
                "-\treturn thing, nil",
                "-}",
                "-",
                "-// Prints 'testBinary(\"%s\")' where '%s' is a hex-formatted string of thing's data",
                "-// @param []byte thing - the binary to print",
                "-// @return []byte - returns the binary 'thing'",
                "-//",
                "-// Parameters:",
                "-//  - Thing",
                "-func (p *printingHandler) TestBinary(ctx context.Context, thing []byte) (r []byte, err error) {",
                "-\tfmt.Printf(\"testBinary(%s)\\n\", hex.EncodeToString(thing))",
                "-\treturn thing, nil",
                "-}",
                "-",
                "-// Prints 'testStruct(\"{%s}\")' where thing has been formatted into a string of comma separated values",
                "-// @param Xtruct thing - the Xtruct to print",
                "-// @return Xtruct - returns the Xtruct 'thing'",
                "-//",
                "-// Parameters:",
                "-//  - Thing",
                "-func (p *printingHandler) TestStruct(ctx context.Context, thing *Xtruct) (r *Xtruct, err error) {",
                "-\tfmt.Printf(\"testStruct({\\\"%s\\\", %d, %d, %d})\\n\", thing.StringThing, thing.ByteThing, thing.I32Thing, thing.I64Thing)",
                "-\treturn thing, err",
                "-}",
                "-",
                "-// Prints 'testNest(\"{%s}\")' where thing has been formatted into a string of the nested struct",
                "-// @param Xtruct2 thing - the Xtruct2 to print",
                "-// @return Xtruct2 - returns the Xtruct2 'thing'",
                "-//",
                "-// Parameters:",
                "-//  - Thing",
                "-func (p *printingHandler) TestNest(ctx context.Context, nest *Xtruct2) (r *Xtruct2, err error) {",
                "-\tthing := nest.StructThing",
                "-\tfmt.Printf(\"testNest({%d, {\\\"%s\\\", %d, %d, %d}, %d})\\n\", nest.ByteThing, thing.StringThing, thing.ByteThing, thing.I32Thing, thing.I64Thing, nest.I32Thing)",
                "-\treturn nest, nil",
                "-}",
                "-",
                "-// Prints 'testMap(\"{%s\")' where thing has been formatted into a string of  'key => value' pairs",
                "-//  separated by commas and new lines",
                "-// @param map<i32,i32> thing - the map<i32,i32> to print",
                "-// @return map<i32,i32> - returns the map<i32,i32> 'thing'",
                "-//",
                "-// Parameters:",
                "-//  - Thing",
                "-func (p *printingHandler) TestMap(ctx context.Context, thing map[int32]int32) (r map[int32]int32, err error) {",
                "-\tfmt.Printf(\"testMap({\")",
                "-\tfirst := true",
                "-\tfor k, v := range thing {",
                "-\t\tif first {",
                "-\t\t\tfirst = false",
                "-\t\t} else {",
                "-\t\t\tfmt.Printf(\", \")",
                "-\t\t}",
                "-\t\tfmt.Printf(\"%d => %d\", k, v)",
                "-\t}",
                "-\tfmt.Printf(\"})\\n\")",
                "-\treturn thing, nil",
                "-}",
                "-",
                "-// Prints 'testStringMap(\"{%s}\")' where thing has been formatted into a string of  'key => value' pairs",
                "-//  separated by commas and new lines",
                "-// @param map<string,string> thing - the map<string,string> to print",
                "-// @return map<string,string> - returns the map<string,string> 'thing'",
                "-//",
                "-// Parameters:",
                "-//  - Thing",
                "-func (p *printingHandler) TestStringMap(ctx context.Context, thing map[string]string) (r map[string]string, err error) {",
                "-\tfmt.Printf(\"testStringMap({\")",
                "-\tfirst := true",
                "-\tfor k, v := range thing {",
                "-\t\tif first {",
                "-\t\t\tfirst = false",
                "-\t\t} else {",
                "-\t\t\tfmt.Printf(\", \")",
                "-\t\t}",
                "-\t\tfmt.Printf(\"%s => %s\", k, v)",
                "-\t}",
                "-\tfmt.Printf(\"})\\n\")",
                "-\treturn thing, nil",
                "-}",
                "-",
                "-// Prints 'testSet(\"{%s}\")' where thing has been formatted into a string of  values",
                "-//  separated by commas and new lines",
                "-// @param set<i32> thing - the set<i32> to print",
                "-// @return set<i32> - returns the set<i32> 'thing'",
                "-//",
                "-// Parameters:",
                "-//  - Thing",
                "-func (p *printingHandler) TestSet(ctx context.Context, thing []int32) (r []int32, err error) {",
                "-\tfmt.Printf(\"testSet({\")",
                "-\tfirst := true",
                "-\tfor k, _ := range thing {",
                "-\t\tif first {",
                "-\t\t\tfirst = false",
                "-\t\t} else {",
                "-\t\t\tfmt.Printf(\", \")",
                "-\t\t}",
                "-\t\tfmt.Printf(\"%d\", k)",
                "-\t}",
                "-\tfmt.Printf(\"})\\n\")",
                "-\treturn thing, nil",
                "-}",
                "-",
                "-// Prints 'testList(\"{%s}\")' where thing has been formatted into a string of  values",
                "-//  separated by commas and new lines",
                "-// @param list<i32> thing - the list<i32> to print",
                "-// @return list<i32> - returns the list<i32> 'thing'",
                "-//",
                "-// Parameters:",
                "-//  - Thing",
                "-func (p *printingHandler) TestList(ctx context.Context, thing []int32) (r []int32, err error) {",
                "-\tfmt.Printf(\"testList({\")",
                "-\tfor i, v := range thing {",
                "-\t\tif i != 0 {",
                "-\t\t\tfmt.Printf(\", \")",
                "-\t\t}",
                "-\t\tfmt.Printf(\"%d\", v)",
                "-\t}",
                "-\tfmt.Printf(\"})\\n\")",
                "-\treturn thing, nil",
                "-}",
                "-",
                "-// Prints 'testEnum(\"%d\")' where thing has been formatted into it's numeric value",
                "-// @param Numberz thing - the Numberz to print",
                "-// @return Numberz - returns the Numberz 'thing'",
                "-//",
                "-// Parameters:",
                "-//  - Thing",
                "-func (p *printingHandler) TestEnum(ctx context.Context, thing Numberz) (r Numberz, err error) {",
                "-\tfmt.Printf(\"testEnum(%d)\\n\", thing)",
                "-\treturn thing, nil",
                "-}",
                "-",
                "-// Prints 'testTypedef(\"%d\")' with thing as '%d'",
                "-// @param UserId thing - the UserId to print",
                "-// @return UserId - returns the UserId 'thing'",
                "-//",
                "-// Parameters:",
                "-//  - Thing",
                "-func (p *printingHandler) TestTypedef(ctx context.Context, thing UserId) (r UserId, err error) {",
                "-\tfmt.Printf(\"testTypedef(%d)\\n\", thing)",
                "-\treturn thing, nil",
                "-}",
                "-",
                "-// Prints 'testMapMap(\"%d\")' with hello as '%d'",
                "-// @param i32 hello - the i32 to print",
                "-// @return map<i32,map<i32,i32>> - returns a dictionary with these values:",
                "-//   {-4 => {-4 => -4, -3 => -3, -2 => -2, -1 => -1, }, 4 => {1 => 1, 2 => 2, 3 => 3, 4 => 4, }, }",
                "-//",
                "-// Parameters:",
                "-//  - Hello",
                "-func (p *printingHandler) TestMapMap(ctx context.Context, hello int32) (r map[int32]map[int32]int32, err error) {",
                "-\tfmt.Printf(\"testMapMap(%d)\\n\", hello)",
                "-",
                "-\tr = map[int32]map[int32]int32{",
                "-\t\t-4: map[int32]int32{-4: -4, -3: -3, -2: -2, -1: -1},",
                "-\t\t4:  map[int32]int32{4: 4, 3: 3, 2: 2, 1: 1},",
                "-\t}",
                "-\treturn",
                "-}",
                "-",
                "-// So you think you've got this all worked, out eh?",
                "-//",
                "-// Creates a the returned map with these values and prints it out:",
                "-//   { 1 => { 2 => argument,",
                "-//            3 => argument,",
                "-//          },",
                "-//     2 => { 6 => <empty Insanity struct>, },",
                "-//   }",
                "-// @return map<UserId, map<Numberz,Insanity>> - a map with the above values",
                "-//",
                "-// Parameters:",
                "-//  - Argument",
                "-func (p *printingHandler) TestInsanity(ctx context.Context, argument *Insanity) (r map[UserId]map[Numberz]*Insanity, err error) {",
                "-\tfmt.Printf(\"testInsanity()\\n\")",
                "-\tr = make(map[UserId]map[Numberz]*Insanity)",
                "-\tr[1] = map[Numberz]*Insanity {",
                "-\t\t2: argument,",
                "-\t\t3: argument,",
                "-\t}",
                "-\tr[2] = map[Numberz]*Insanity {",
                "-\t\t6: NewInsanity(),",
                "-\t}",
                "-\treturn",
                "-}",
                "-",
                "-// Prints 'testMulti()'",
                "-// @param byte arg0 -",
                "-// @param i32 arg1 -",
                "-// @param i64 arg2 -",
                "-// @param map<i16, string> arg3 -",
                "-// @param Numberz arg4 -",
                "-// @param UserId arg5 -",
                "-// @return Xtruct - returns an Xtruct with StringThing = \"Hello2, ByteThing = arg0, I32Thing = arg1",
                "-//    and I64Thing = arg2",
                "-//",
                "-// Parameters:",
                "-//  - Arg0",
                "-//  - Arg1",
                "-//  - Arg2",
                "-//  - Arg3",
                "-//  - Arg4",
                "-//  - Arg5",
                "-func (p *printingHandler) TestMulti(ctx context.Context, arg0 int8, arg1 int32, arg2 int64, arg3 map[int16]string, arg4 Numberz, arg5 UserId) (r *Xtruct, err error) {",
                "-\tfmt.Printf(\"testMulti()\\n\")",
                "-\tr = NewXtruct()",
                "-",
                "-\tr.StringThing = \"Hello2\"",
                "-\tr.ByteThing = arg0",
                "-\tr.I32Thing = arg1",
                "-\tr.I64Thing = arg2",
                "-\treturn",
                "-}",
                "-",
                "-// Print 'testException(%s)' with arg as '%s'",
                "-// @param string arg - a string indication what type of exception to throw",
                "-// if arg == \"Xception\" throw Xception with errorCode = 1001 and message = arg",
                "-// elsen if arg == \"TException\" throw TException",
                "-// else do not throw anything",
                "-//",
                "-// Parameters:",
                "-//  - Arg",
                "-func (p *printingHandler) TestException(ctx context.Context, arg string) (err error) {",
                "-\tfmt.Printf(\"testException(%s)\\n\", arg)",
                "-\tswitch arg {",
                "-\tcase \"Xception\":",
                "-\t\te := NewXception()",
                "-\t\te.ErrorCode = 1001",
                "-\t\te.Message = arg",
                "-\t\treturn e",
                "-\tcase \"TException\":",
                "-\t\treturn errors.New(\"Just TException\")",
                "-\t}",
                "-\treturn",
                "-}",
                "-",
                "-// Print 'testMultiException(%s, %s)' with arg0 as '%s' and arg1 as '%s'",
                "-// @param string arg - a string indication what type of exception to throw",
                "-// if arg0 == \"Xception\" throw Xception with errorCode = 1001 and message = \"This is an Xception\"",
                "-// elsen if arg0 == \"Xception2\" throw Xception2 with errorCode = 2002 and message = \"This is an Xception2\"",
                "-// else do not throw anything",
                "-// @return Xtruct - an Xtruct with StringThing = arg1",
                "-//",
                "-// Parameters:",
                "-//  - Arg0",
                "-//  - Arg1",
                "-func (p *printingHandler) TestMultiException(ctx context.Context, arg0 string, arg1 string) (r *Xtruct, err error) {",
                "-\tfmt.Printf(\"testMultiException(%s, %s)\\n\", arg0, arg1)",
                "-\tswitch arg0 {",
                "-",
                "-\tcase \"Xception\":",
                "-\t\te := NewXception()",
                "-\t\te.ErrorCode = 1001",
                "-\t\te.Message = \"This is an Xception\"",
                "-\t\treturn nil, e",
                "-\tcase \"Xception2\":",
                "-\t\te := NewXception2()",
                "-\t\te.ErrorCode = 2002",
                "-\t\te.StructThing = NewXtruct()",
                "-\t\te.StructThing.StringThing = \"This is an Xception2\"",
                "-\t\treturn nil, e",
                "-\tdefault:",
                "-\t\tr = NewXtruct()",
                "-\t\tr.StringThing = arg1",
                "-\t\treturn",
                "-\t}",
                "-}",
                "-",
                "-// Print 'testOneway(%d): Sleeping...' with secondsToSleep as '%d'",
                "-// sleep 'secondsToSleep'",
                "-// Print 'testOneway(%d): done sleeping!' with secondsToSleep as '%d'",
                "-// @param i32 secondsToSleep - the number of seconds to sleep",
                "-//",
                "-// Parameters:",
                "-//  - SecondsToSleep",
                "-func (p *printingHandler) TestOneway(ctx context.Context, secondsToSleep int32) (err error) {",
                "-\tfmt.Printf(\"testOneway(%d): Sleeping...\\n\", secondsToSleep)",
                "-\ttime.Sleep(time.Second * time.Duration(secondsToSleep))",
                "-\tfmt.Printf(\"testOneway(%d): done sleeping!\\n\", secondsToSleep)",
                "-\treturn",
                "-}",
                "diff --git a/tutorial/go/Makefile.am b/tutorial/go/Makefile.am",
                "index a146d5c9f..87a8f5a71 100644",
                "--- a/tutorial/go/Makefile.am",
                "+++ b/tutorial/go/Makefile.am",
                "@@ -19,6 +19,2 @@",
                "-if GOVERSION_LT_17",
                "-COMPILER_EXTRAFLAG=\":legacy_context\"",
                "-endif",
                "-",
                " gen-go/tutorial/calculator.go gen-go/shared/shared_service.go: $(top_srcdir)/tutorial/tutorial.thrift",
                "@@ -39,5 +35,2 @@ src/git.apache.org/thrift.git/lib/go/thrift:",
                " thirdparty-dep:",
                "-\tmkdir -p src/golang.org/x/net",
                "-\tGOPATH=`pwd`/gopath $(GO) get golang.org/x/net/context",
                "-\tln -sf `pwd`/gopath/src/golang.org/x/net/context src/golang.org/x/net/context",
                "@@ -63,5 +56,2 @@ EXTRA_DIST = \\",
                " \tsrc/main.go \\",
                "-\tsrc/go17.go \\",
                "-\tsrc/handler_go17.go \\",
                "-\tsrc/pre_go17.go \\",
                " \tserver.crt \\",
                "diff --git a/tutorial/go/src/client.go b/tutorial/go/src/client.go",
                "index 25616bf4e..1d658b954 100644",
                "--- a/tutorial/go/src/client.go",
                "+++ b/tutorial/go/src/client.go",
                "@@ -22,2 +22,3 @@ package main",
                " import (",
                "+\t\"context\"",
                " \t\"crypto/tls\"",
                "@@ -29,2 +30,4 @@ import (",
                "+var defaultCtx = context.Background()",
                "+",
                " func handleClient(client *tutorial.CalculatorClient) (err error) {",
                "diff --git a/tutorial/go/src/handler.go b/tutorial/go/src/handler.go",
                "index 783b43267..5c0eed006 100644",
                "--- a/tutorial/go/src/handler.go",
                "+++ b/tutorial/go/src/handler.go",
                "@@ -1,3 +1 @@",
                "-// +build !go1.7",
                "-",
                " package main",
                "@@ -24,2 +22,3 @@ package main",
                " import (",
                "+\t\"context\"",
                " \t\"fmt\"",
                "@@ -28,4 +27,2 @@ import (",
                " \t\"tutorial\"",
                "-",
                "-\t\"golang.org/x/net/context\"",
                " )",
                "diff --git a/tutorial/go/src/handler_go17.go b/tutorial/go/src/handler_go17.go",
                "deleted file mode 100644",
                "index d6752cc78..000000000",
                "--- a/tutorial/go/src/handler_go17.go",
                "+++ /dev/null",
                "@@ -1,104 +0,0 @@",
                "-// +build go1.7",
                "-",
                "-package main",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements. See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership. The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License. You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied. See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-import (",
                "-\t\"context\"",
                "-\t\"fmt\"",
                "-\t\"shared\"",
                "-\t\"strconv\"",
                "-\t\"tutorial\"",
                "-)",
                "-",
                "-type CalculatorHandler struct {",
                "-\tlog map[int]*shared.SharedStruct",
                "-}",
                "-",
                "-func NewCalculatorHandler() *CalculatorHandler {",
                "-\treturn &CalculatorHandler{log: make(map[int]*shared.SharedStruct)}",
                "-}",
                "-",
                "-func (p *CalculatorHandler) Ping(ctx context.Context) (err error) {",
                "-\tfmt.Print(\"ping()\\n\")",
                "-\treturn nil",
                "-}",
                "-",
                "-func (p *CalculatorHandler) Add(ctx context.Context, num1 int32, num2 int32) (retval17 int32, err error) {",
                "-\tfmt.Print(\"add(\", num1, \",\", num2, \")\\n\")",
                "-\treturn num1 + num2, nil",
                "-}",
                "-",
                "-func (p *CalculatorHandler) Calculate(ctx context.Context, logid int32, w *tutorial.Work) (val int32, err error) {",
                "-\tfmt.Print(\"calculate(\", logid, \", {\", w.Op, \",\", w.Num1, \",\", w.Num2, \"})\\n\")",
                "-\tswitch w.Op {",
                "-\tcase tutorial.Operation_ADD:",
                "-\t\tval = w.Num1 + w.Num2",
                "-\t\tbreak",
                "-\tcase tutorial.Operation_SUBTRACT:",
                "-\t\tval = w.Num1 - w.Num2",
                "-\t\tbreak",
                "-\tcase tutorial.Operation_MULTIPLY:",
                "-\t\tval = w.Num1 * w.Num2",
                "-\t\tbreak",
                "-\tcase tutorial.Operation_DIVIDE:",
                "-\t\tif w.Num2 == 0 {",
                "-\t\t\touch := tutorial.NewInvalidOperation()",
                "-\t\t\touch.WhatOp = int32(w.Op)",
                "-\t\t\touch.Why = \"Cannot divide by 0\"",
                "-\t\t\terr = ouch",
                "-\t\t\treturn",
                "-\t\t}",
                "-\t\tval = w.Num1 / w.Num2",
                "-\t\tbreak",
                "-\tdefault:",
                "-\t\touch := tutorial.NewInvalidOperation()",
                "-\t\touch.WhatOp = int32(w.Op)",
                "-\t\touch.Why = \"Unknown operation\"",
                "-\t\terr = ouch",
                "-\t\treturn",
                "-\t}",
                "-\tentry := shared.NewSharedStruct()",
                "-\tentry.Key = logid",
                "-\tentry.Value = strconv.Itoa(int(val))",
                "-\tk := int(logid)",
                "-\t/*",
                "-\t   oldvalue, exists := p.log[k]",
                "-\t   if exists {",
                "-\t     fmt.Print(\"Replacing \", oldvalue, \" with \", entry, \" for key \", k, \"\\n\")",
                "-\t   } else {",
                "-\t     fmt.Print(\"Adding \", entry, \" for key \", k, \"\\n\")",
                "-\t   }",
                "-\t*/",
                "-\tp.log[k] = entry",
                "-\treturn val, err",
                "-}",
                "-",
                "-func (p *CalculatorHandler) GetStruct(ctx context.Context, key int32) (*shared.SharedStruct, error) {",
                "-\tfmt.Print(\"getStruct(\", key, \")\\n\")",
                "-\tv, _ := p.log[int(key)]",
                "-\treturn v, nil",
                "-}",
                "-",
                "-func (p *CalculatorHandler) Zip(ctx context.Context) (err error) {",
                "-\tfmt.Print(\"zip()\\n\")",
                "-\treturn nil",
                "-}",
                "diff --git a/tutorial/go/src/pre_go17.go b/tutorial/go/src/pre_go17.go",
                "deleted file mode 100644",
                "index 10a6fb8d9..000000000",
                "--- a/tutorial/go/src/pre_go17.go",
                "+++ /dev/null",
                "@@ -1,26 +0,0 @@",
                "-// +build !go1.7",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one",
                "- * or more contributor license agreements. See the NOTICE file",
                "- * distributed with this work for additional information",
                "- * regarding copyright ownership. The ASF licenses this file",
                "- * to you under the Apache License, Version 2.0 (the",
                "- * \"License\"); you may not use this file except in compliance",
                "- * with the License. You may obtain a copy of the License at",
                "- *",
                "- *   http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing,",
                "- * software distributed under the License is distributed on an",
                "- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "- * KIND, either express or implied. See the License for the",
                "- * specific language governing permissions and limitations",
                "- * under the License.",
                "- */",
                "-",
                "-package main",
                "-",
                "-import \"golang.org/x/net/context\"",
                "-",
                "-var defaultCtx = context.Background()"
            ],
            "changed_files": [
                "build/docker/ubuntu-artful/Dockerfile",
                "build/docker/ubuntu-trusty/Dockerfile",
                "build/docker/ubuntu-xenial/Dockerfile",
                "compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "compiler/cpp/src/thrift/generate/thrift-t_php_generator.o-a60a38e9",
                "lib/go/Makefile.am",
                "lib/go/thrift/binary_protocol.go",
                "lib/go/thrift/buffered_transport.go",
                "lib/go/thrift/client.go",
                "lib/go/thrift/client_go17.go",
                "lib/go/thrift/client_pre_go17.go",
                "lib/go/thrift/common_test.go",
                "lib/go/thrift/common_test_pre_go17.go",
                "lib/go/thrift/compact_protocol.go",
                "lib/go/thrift/context.go",
                "lib/go/thrift/debug_protocol.go",
                "lib/go/thrift/framed_transport.go",
                "lib/go/thrift/http_client.go",
                "lib/go/thrift/http_transport.go",
                "lib/go/thrift/http_transport_go17.go",
                "lib/go/thrift/http_transport_pre_go17.go",
                "lib/go/thrift/iostream_transport.go",
                "lib/go/thrift/json_protocol.go",
                "lib/go/thrift/json_protocol_test.go",
                "lib/go/thrift/memory_buffer.go",
                "lib/go/thrift/multiplexed_protocol.go",
                "lib/go/thrift/multiplexed_protocol_go17.go",
                "lib/go/thrift/multiplexed_protocol_pre_go17.go",
                "lib/go/thrift/pre_go17.go",
                "lib/go/thrift/processor.go",
                "lib/go/thrift/processor_factory.go",
                "lib/go/thrift/processor_go17.go",
                "lib/go/thrift/protocol.go",
                "lib/go/thrift/protocol_test.go",
                "lib/go/thrift/serializer.go",
                "lib/go/thrift/serializer_test.go",
                "lib/go/thrift/simple_json_protocol.go",
                "lib/go/thrift/simple_json_protocol_test.go",
                "lib/go/thrift/socket.go",
                "lib/go/thrift/ssl_socket.go",
                "lib/go/thrift/transport.go",
                "lib/go/thrift/transport_test.go",
                "lib/go/thrift/zlib_transport.go",
                "test/go/Makefile.am",
                "test/go/src/bin/stress/go17.go",
                "test/go/src/bin/stress/main.go",
                "test/go/src/bin/stress/pre_go17.go",
                "test/go/src/bin/testclient/go17.go",
                "test/go/src/bin/testclient/main.go",
                "test/go/src/bin/testclient/pre_go17.go",
                "test/go/src/common/clientserver_test.go",
                "test/go/src/common/context_test.go",
                "test/go/src/common/go17.go",
                "test/go/src/common/pre_go17.go",
                "test/go/src/common/printing_handler.go",
                "test/go/src/common/printing_handler_go17.go",
                "tutorial/go/Makefile.am",
                "tutorial/go/src/client.go",
                "tutorial/go/src/handler.go",
                "tutorial/go/src/handler_go17.go",
                "tutorial/go/src/pre_go17.go"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4448": ""
            },
            "ghissue_refs": {
                "1459": "THRIFT-4448: Golang: do something with context.Context. Remove Go1.6 \u2026 jeking3/thrift#9"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: transport",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: lib/go/thrift/http_transport.go, lib/go/thrift/http_transport_go17.go, lib/go/thrift/transport.go, lib/go/thrift/transport_test.go, lib/go/thrift/framed_transport.go, lib/go/thrift/buffered_transport.go, lib/go/thrift/iostream_transport.go, lib/go/thrift/zlib_transport.go, lib/go/thrift/http_transport_pre_go17.go",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: client, make",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4448",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1459",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8678dfc78b54bd80b3b5bd098733f8bbdcc39150",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1517327981,
            "hunks": 9,
            "message": "THRIFT-4337: Able to set keyStore and trustStore as InputStream in the TSSLTransportFactory.TSSLTransportParameters Client: java This closes #1486",
            "diff": [
                "diff --git a/lib/java/src/org/apache/thrift/transport/TSSLTransportFactory.java b/lib/java/src/org/apache/thrift/transport/TSSLTransportFactory.java",
                "index 9c60ed1ab..14b49e9d0 100644",
                "--- a/lib/java/src/org/apache/thrift/transport/TSSLTransportFactory.java",
                "+++ b/lib/java/src/org/apache/thrift/transport/TSSLTransportFactory.java",
                "@@ -188,3 +188,7 @@ public class TSSLTransportFactory {",
                "         KeyStore ts = KeyStore.getInstance(params.trustStoreType);",
                "-        in = getStoreAsStream(params.trustStore);",
                "+        if (params.trustStoreStream != null) {",
                "+          in = params.trustStoreStream;",
                "+        } else {",
                "+          in = getStoreAsStream(params.trustStore);",
                "+        }",
                "         ts.load(in,",
                "@@ -197,3 +201,7 @@ public class TSSLTransportFactory {",
                "         KeyStore ks = KeyStore.getInstance(params.keyStoreType);",
                "-        is = getStoreAsStream(params.keyStore);",
                "+        if (params.keyStoreStream != null) {",
                "+        \tis = params.keyStoreStream;",
                "+        } else {",
                "+        \tis = getStoreAsStream(params.keyStore);",
                "+        }",
                "         ks.load(is, params.keyPass.toCharArray());",
                "@@ -275,2 +283,3 @@ public class TSSLTransportFactory {",
                "     protected String keyStore;",
                "+    protected InputStream keyStoreStream;",
                "     protected String keyPass;",
                "@@ -279,2 +288,3 @@ public class TSSLTransportFactory {",
                "     protected String trustStore;",
                "+    protected InputStream trustStoreStream;",
                "     protected String trustPass;",
                "@@ -334,3 +344,16 @@ public class TSSLTransportFactory {",
                "     }",
                "-",
                "+    ",
                "+    /**",
                "+     * Set the keystore, password, certificate type and the store type",
                "+     *",
                "+     * @param keyStoreStream Keystore content input stream",
                "+     * @param keyPass Keystore password",
                "+     * @param keyManagerType The default is X509",
                "+     * @param keyStoreType The default is JKS",
                "+     */",
                "+    public void setKeyStore(InputStream keyStoreStream, String keyPass, String keyManagerType, String keyStoreType) {",
                "+    \tthis.keyStoreStream = keyStoreStream;",
                "+    \tsetKeyStore(\"\", keyPass, keyManagerType, keyStoreType);",
                "+    }",
                "+    ",
                "     /**",
                "@@ -344,3 +367,13 @@ public class TSSLTransportFactory {",
                "     }",
                "-",
                "+    ",
                "+    /**",
                "+     * Set the keystore and password",
                "+     *",
                "+     * @param keyStore Keystore content input stream",
                "+     * @param keyPass Keystore password",
                "+     */",
                "+    public void setKeyStore(InputStream keyStoreStream, String keyPass) {",
                "+      setKeyStore(keyStoreStream, keyPass, null, null);",
                "+    }",
                "+    ",
                "     /**",
                "@@ -364,2 +397,15 @@ public class TSSLTransportFactory {",
                "     }",
                "+    ",
                "+    /**",
                "+     * Set the truststore, password, certificate type and the store type",
                "+     *",
                "+     * @param trustStoreStream Truststore content input stream",
                "+     * @param trustPass Truststore password",
                "+     * @param trustManagerType The default is X509",
                "+     * @param trustStoreType The default is JKS",
                "+     */",
                "+    public void setTrustStore(InputStream trustStoreStream, String trustPass, String trustManagerType, String trustStoreType) {",
                "+      this.trustStoreStream = trustStoreStream;",
                "+      setTrustStore(\"\", trustPass, trustManagerType, trustStoreType);",
                "+    }",
                "@@ -374,2 +420,12 @@ public class TSSLTransportFactory {",
                "     }",
                "+    ",
                "+    /**",
                "+     * Set the truststore and password",
                "+     *",
                "+     * @param trustStore Truststore content input stream",
                "+     * @param trustPass Truststore password",
                "+     */",
                "+    public void setTrustStore(InputStream trustStoreStream, String trustPass) {",
                "+      setTrustStore(trustStoreStream, trustPass, null, null);",
                "+    }",
                "@@ -382,4 +438,4 @@ public class TSSLTransportFactory {",
                "       this.clientAuth = clientAuth;",
                "-    }",
                "-  }",
                "+\t\t}",
                "+\t}",
                " }"
            ],
            "changed_files": [
                "lib/java/src/org/apache/thrift/transport/TSSLTransportFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4337": ""
            },
            "ghissue_refs": {
                "1486": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: lib/java/src/org/apache/thrift/transport/TSSLTransportFactory.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client, java",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: java",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4337",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1486",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e93a90171529625966294fb35eaebf35cf4c6ba7",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1505805403,
            "hunks": 47,
            "message": "THRIFT-82: Add Common Lisp support Client: cl There's framed and buffered socket transport, binary protocol, multiplex, simple server, cross-tests, self-tests, tutorial, CL library, CL code generator. Only SBCL is supported for now. This closes #1412",
            "diff": [
                "diff --git a/.gitignore b/.gitignore",
                "index 03e3e9e61..f1a39ae01 100644",
                "--- a/.gitignore",
                "+++ b/.gitignore",
                "@@ -103,2 +103,5 @@ project.lock.json",
                " /install-sh",
                "+/lib/cl/backport-update.zip",
                "+/lib/cl/lib",
                "+/lib/cl/run-tests",
                " /lib/cpp/Debug/",
                "@@ -309,2 +312,4 @@ project.lock.json",
                " /test/c_glib/test_server",
                "+/test/cl/TestServer",
                "+/test/cl/TestClient",
                " /test/cpp/StressTest",
                "@@ -350,2 +355,4 @@ project.lock.json",
                " /test/rs/**/*.iml",
                "+/tutorial/cl/TutorialClient",
                "+/tutorial/cl/TutorialServer",
                " /tutorial/cpp/TutorialClient",
                "@@ -397 +404,5 @@ project.lock.json",
                " /ylwrap",
                "+/lib/cl/quicklisp.lisp",
                "+/lib/cl/externals/",
                "+/lib/cl/run-tests",
                "+/lib/cl/quicklisp/",
                "diff --git a/Makefile.am b/Makefile.am",
                "index 3d71fd4b7..205ea8258 100755",
                "--- a/Makefile.am",
                "+++ b/Makefile.am",
                "@@ -56,3 +56,3 @@ comma := ,",
                "-CROSS_LANGS = @MAYBE_CPP@ @MAYBE_C_GLIB@ @MAYBE_D@ @MAYBE_JAVA@ @MAYBE_CSHARP@ @MAYBE_PYTHON@ @MAYBE_PY3@ @MAYBE_RUBY@ @MAYBE_HASKELL@ @MAYBE_PERL@ @MAYBE_PHP@ @MAYBE_GO@ @MAYBE_NODEJS@ @MAYBE_DART@ @MAYBE_ERLANG@ @MAYBE_LUA@ @MAYBE_RS@ @MAYBE_DOTNETCORE@",
                "+CROSS_LANGS = @MAYBE_CPP@ @MAYBE_C_GLIB@ @MAYBE_CL@ @MAYBE_D@ @MAYBE_JAVA@ @MAYBE_CSHARP@ @MAYBE_PYTHON@ @MAYBE_PY3@ @MAYBE_RUBY@ @MAYBE_HASKELL@ @MAYBE_PERL@ @MAYBE_PHP@ @MAYBE_GO@ @MAYBE_NODEJS@ @MAYBE_DART@ @MAYBE_ERLANG@ @MAYBE_LUA@ @MAYBE_RS@ @MAYBE_DOTNETCORE@",
                " CROSS_LANGS_COMMA_SEPARATED = $(subst $(space),$(comma),$(CROSS_LANGS))",
                "diff --git a/build/docker/ubuntu-artful/Dockerfile b/build/docker/ubuntu-artful/Dockerfile",
                "index d8e7e12f1..b9c30f67a 100644",
                "--- a/build/docker/ubuntu-artful/Dockerfile",
                "+++ b/build/docker/ubuntu-artful/Dockerfile",
                "@@ -98,2 +98,6 @@ RUN apt-get install -y --no-install-recommends \\",
                " ENV D_VERSION 2.077.1-0.1",
                "+RUN apt-get install -y --no-install-recommends \\",
                "+`# Common Lisp (sbcl) dependencies` \\",
                "+      sbcl",
                "+",
                " RUN apt-get install -y --no-install-recommends \\",
                "diff --git a/compiler/cpp/Makefile.am b/compiler/cpp/Makefile.am",
                "index bd2ba800e..0b8ef2e7e 100644",
                "--- a/compiler/cpp/Makefile.am",
                "+++ b/compiler/cpp/Makefile.am",
                "@@ -111,3 +111,4 @@ thrift_SOURCES += src/thrift/generate/t_c_glib_generator.cc \\",
                "                   src/thrift/generate/t_lua_generator.cc \\",
                "-                  src/thrift/generate/t_rs_generator.cc",
                "+                  src/thrift/generate/t_rs_generator.cc \\",
                "+                  src/thrift/generate/t_cl_generator.cc",
                "diff --git a/compiler/cpp/src/thrift/generate/t_cl_generator.cc b/compiler/cpp/src/thrift/generate/t_cl_generator.cc",
                "new file mode 100644",
                "index 000000000..f1fab2553",
                "--- /dev/null",
                "+++ b/compiler/cpp/src/thrift/generate/t_cl_generator.cc",
                "@@ -0,0 +1,558 @@",
                "+/*",
                "+ * Copyright (c) 2008- Patrick Collison <patrick@collison.ie>",
                "+ * Copyright (c) 2006- Facebook",
                "+ *",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements. See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership. The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License. You may obtain a copy of the License at",
                "+ *",
                "+ *   http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied. See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+",
                "+#include <string>",
                "+#include <fstream>",
                "+#include <iostream>",
                "+#include <vector>",
                "+",
                "+#include <stdlib.h>",
                "+#include <boost/tokenizer.hpp>",
                "+#include <sys/stat.h>",
                "+#include <sys/types.h>",
                "+#include <sstream>",
                "+#include <string>",
                "+#include <algorithm>",
                "+",
                "+#include \"thrift/platform.h\"",
                "+#include \"t_oop_generator.h\"",
                "+using namespace std;",
                "+",
                "+",
                "+/**",
                "+ * Common Lisp code generator.",
                "+ *",
                "+ * @author Patrick Collison <patrick@collison.ie>",
                "+ */",
                "+class t_cl_generator : public t_oop_generator {",
                "+ public:",
                "+  t_cl_generator(",
                "+      t_program* program,",
                "+      const std::map<std::string, std::string>& parsed_options,",
                "+      const std::string& option_string)",
                "+    : t_oop_generator(program)",
                "+  {",
                "+    no_asd = false;",
                "+    system_prefix = \"thrift-gen-\";",
                "+",
                "+    std::map<std::string, std::string>::const_iterator iter;",
                "+    ",
                "+    for(iter = parsed_options.begin(); iter != parsed_options.end(); ++iter) {",
                "+      if(iter->first.compare(\"no_asd\") == 0) {",
                "+        no_asd = true;",
                "+      } else if (iter->first.compare(\"sys_pref\") == 0) {",
                "+\tsystem_prefix = iter->second;",
                "+      } else {",
                "+        throw \"unknown option cl:\" + iter->first;",
                "+      }",
                "+    }",
                "+    ",
                "+    out_dir_base_ = \"gen-cl\";",
                "+    copy_options_ = option_string;",
                "+  }",
                "+",
                "+  void init_generator();",
                "+  void close_generator();",
                "+",
                "+  void generate_typedef     (t_typedef*  ttypedef);",
                "+  void generate_enum        (t_enum*     tenum);",
                "+  void generate_const       (t_const*    tconst);",
                "+  void generate_struct      (t_struct*   tstruct);",
                "+  void generate_xception    (t_struct*   txception);",
                "+  void generate_service     (t_service*  tservice);",
                "+  void generate_cl_struct (std::ofstream& out, t_struct* tstruct, bool is_exception);",
                "+  void generate_cl_struct_internal (std::ofstream& out, t_struct* tstruct, bool is_exception);",
                "+  void generate_exception_sig(std::ofstream& out, t_function* f);",
                "+  std::string render_const_value(t_type* type, t_const_value* value);",
                "+",
                "+  std::string cl_autogen_comment();",
                "+  void asdf_def(std::ofstream &out);",
                "+  void package_def(std::ofstream &out);",
                "+  void package_in(std::ofstream &out);",
                "+  std::string generated_package();",
                "+  std::string prefix(std::string name);",
                "+  std::string package_of(t_program* program);",
                "+  std::string package();",
                "+  std::string render_includes();",
                "+",
                "+  std::string type_name(t_type* ttype);",
                "+  std::string typespec (t_type *t);",
                "+  std::string function_signature(t_function* tfunction);",
                "+  std::string argument_list(t_struct* tstruct);",
                "+",
                "+  std::string cl_docstring(std::string raw);",
                "+",
                "+ private:",
                "+",
                "+  int temporary_var;",
                "+  /**",
                "+   * Isolate the variable definitions, as they can require structure definitions",
                "+   */",
                "+  std::ofstream f_asd_;",
                "+  std::ofstream f_types_;",
                "+  std::ofstream f_vars_;",
                "+",
                "+  std::string copy_options_;",
                "+  ",
                "+  bool no_asd;",
                "+  std::string system_prefix;",
                "+};",
                "+",
                "+",
                "+void t_cl_generator::init_generator() {",
                "+  MKDIR(get_out_dir().c_str());",
                "+  string program_dir = get_out_dir() + \"/\" + program_name_;",
                "+  MKDIR(program_dir.c_str());",
                "+",
                "+  temporary_var = 0;",
                "+",
                "+  string f_types_name = program_dir + \"/\" + program_name_ + \"-types.lisp\";",
                "+  string f_vars_name = program_dir + \"/\" + program_name_ + \"-vars.lisp\";",
                "+",
                "+  f_types_.open(f_types_name.c_str());",
                "+  f_types_ << cl_autogen_comment() << endl;",
                "+  f_vars_.open(f_vars_name.c_str());",
                "+  f_vars_ << cl_autogen_comment() << endl;",
                "+",
                "+  package_def(f_types_);",
                "+  package_in(f_types_);",
                "+  package_in(f_vars_);",
                "+",
                "+  if (!no_asd) {",
                "+    string f_asd_name = program_dir + \"/\" + system_prefix + program_name_ + \".asd\";",
                "+    f_asd_.open(f_asd_name.c_str());",
                "+    f_asd_ << cl_autogen_comment() << endl;",
                "+    asdf_def(f_asd_);",
                "+  }",
                "+}",
                "+",
                "+/**",
                "+ * Renders all the imports necessary for including another Thrift program",
                "+ */",
                "+string t_cl_generator::render_includes() {",
                "+  const vector<t_program*>& includes = program_->get_includes();",
                "+  string result = \"\";",
                "+  result += \":depends-on (:thrift\";",
                "+  for (size_t i = 0; i < includes.size(); ++i) {",
                "+    result += \" :\" + system_prefix + underscore(includes[i]->get_name());",
                "+  }",
                "+  result += \")\\n\";",
                "+  return result;",
                "+}",
                "+",
                "+string t_cl_generator::package_of(t_program* program) {",
                "+  string prefix = program->get_namespace(\"cl\");",
                "+  return prefix.empty() ? \"thrift-generated\" : prefix;",
                "+}",
                "+",
                "+string t_cl_generator::package() {",
                "+  return package_of(program_);",
                "+}",
                "+",
                "+string t_cl_generator::prefix(string symbol) {",
                "+  return \"\\\"\" + symbol + \"\\\"\";",
                "+}",
                "+",
                "+string t_cl_generator::cl_autogen_comment() {",
                "+  return",
                "+    std::string(\";;; \") + \"Autogenerated by Thrift\\n\" +",
                "+    \";;; DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\\n\" +",
                "+    \";;; options string: \" + copy_options_ + \"\\n\";",
                "+}",
                "+",
                "+string t_cl_generator::cl_docstring(string raw) {",
                "+  replace(raw.begin(), raw.end(), '\"', '\\'');",
                "+  return raw;",
                "+}",
                "+",
                "+",
                "+void t_cl_generator::close_generator() {",
                "+  f_asd_.close();",
                "+  f_types_.close();",
                "+  f_vars_.close();",
                "+}",
                "+",
                "+string t_cl_generator::generated_package() {",
                "+  return program_->get_namespace(\"cpp\");",
                "+}",
                "+",
                "+void t_cl_generator::asdf_def(std::ofstream &out) {",
                "+  out << \"(asdf:defsystem #:\" << system_prefix << program_name_ << endl;",
                "+  indent_up();",
                "+  out << indent() << render_includes()",
                "+      << indent() << \":serial t\" << endl",
                "+      << indent() << \":components (\"",
                "+      << \"(:file \\\"\" << program_name_ << \"-types\\\") \"",
                "+      << \"(:file \\\"\" << program_name_ << \"-vars\\\")))\" << endl;",
                "+  indent_down();",
                "+}",
                "+",
                "+/***",
                "+ * Generate a package definition. Add use references equivalent to the idl file's include statements.",
                "+ */",
                "+void t_cl_generator::package_def(std::ofstream &out) {",
                "+  const vector<t_program*>& includes = program_->get_includes();",
                "+",
                "+  out << \"(thrift:def-package :\" << package();",
                "+  if ( includes.size() > 0 ) {",
                "+    out << \" :use (\";",
                "+    for (size_t i = 0; i < includes.size(); ++i) {",
                "+      out << \" :\" << includes[i]->get_name();",
                "+    }",
                "+    out << \")\";",
                "+  }",
                "+  out << \")\" << endl << endl;",
                "+}",
                "+",
                "+void t_cl_generator::package_in(std::ofstream &out) {",
                "+  out << \"(cl:in-package :\" << package() << \")\" << endl << endl;",
                "+}",
                "+",
                "+/**",
                "+ * Generates a typedef. This is not done in Common Lisp, types are all implicit.",
                "+ *",
                "+ * @param ttypedef The type definition",
                "+ */",
                "+void t_cl_generator::generate_typedef(t_typedef* ttypedef) {",
                "+  (void)ttypedef;",
                "+}",
                "+",
                "+void t_cl_generator::generate_enum(t_enum* tenum) {",
                "+  f_types_ << \"(thrift:def-enum \" << prefix(tenum->get_name()) << endl;",
                "+",
                "+  vector<t_enum_value*> constants = tenum->get_constants();",
                "+  vector<t_enum_value*>::iterator c_iter;",
                "+  int value = -1;",
                "+",
                "+  indent_up();",
                "+  f_types_ << indent() << \"(\";",
                "+  for (c_iter = constants.begin(); c_iter != constants.end(); ++c_iter) {",
                "+    value = (*c_iter)->get_value();",
                "+",
                "+    if(c_iter != constants.begin()) f_types_ << endl << indent() << \" \";",
                "+",
                "+    f_types_ << \"(\\\"\" << (*c_iter)->get_name() << \"\\\" . \" << value << \")\";",
                "+  }",
                "+  indent_down();",
                "+  f_types_ << \"))\" << endl << endl;",
                "+}",
                "+",
                "+/**",
                "+ * Generate a constant value",
                "+ */",
                "+void t_cl_generator::generate_const(t_const* tconst) {",
                "+  t_type* type = tconst->get_type();",
                "+  string name = tconst->get_name();",
                "+  t_const_value* value = tconst->get_value();",
                "+",
                "+  f_vars_ << \"(thrift:def-constant \" << prefix(name) << \" \" << render_const_value(type, value) << \")\"",
                "+          << endl << endl;",
                "+}",
                "+",
                "+/**",
                "+ * Prints the value of a constant with the given type. Note that type checking",
                "+ * is NOT performed in this function as it is always run beforehand using the",
                "+ * validate_types method in main.cc",
                "+ */",
                "+string t_cl_generator::render_const_value(t_type* type, t_const_value* value) {",
                "+  type = get_true_type(type);",
                "+  std::ostringstream out;",
                "+  if (type->is_base_type()) {",
                "+    t_base_type::t_base tbase = ((t_base_type*)type)->get_base();",
                "+    switch (tbase) {",
                "+    case t_base_type::TYPE_STRING:",
                "+      out << \"\\\"\" << value->get_string() << \"\\\"\";",
                "+      break;",
                "+    case t_base_type::TYPE_BOOL:",
                "+      out << (value->get_integer() > 0 ? \"t\" : \"nil\");",
                "+      break;",
                "+    case t_base_type::TYPE_I8:",
                "+    case t_base_type::TYPE_I16:",
                "+    case t_base_type::TYPE_I32:",
                "+    case t_base_type::TYPE_I64:",
                "+      out << value->get_integer();",
                "+      break;",
                "+    case t_base_type::TYPE_DOUBLE:",
                "+      if (value->get_type() == t_const_value::CV_INTEGER) {",
                "+        out << value->get_integer();",
                "+      } else {",
                "+        out << value->get_double();",
                "+      }",
                "+      break;",
                "+    default:",
                "+      throw \"compiler error: no const of base type \" + t_base_type::t_base_name(tbase);",
                "+    }",
                "+  } else if (type->is_enum()) {",
                "+    indent(out) << value->get_integer();",
                "+  } else if (type->is_struct() || type->is_xception()) {",
                "+    out << (type->is_struct() ? \"(make-instance '\" : \"(make-exception '\") <<",
                "+           lowercase(type->get_name()) << \" \" << endl;",
                "+    indent_up();",
                "+",
                "+    const vector<t_field*>& fields = ((t_struct*)type)->get_members();",
                "+    vector<t_field*>::const_iterator f_iter;",
                "+    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+",
                "+    for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "+      t_type* field_type = NULL;",
                "+      for (f_iter = fields.begin(); f_iter != fields.end(); ++f_iter) {",
                "+        if ((*f_iter)->get_name() == v_iter->first->get_string()) {",
                "+          field_type = (*f_iter)->get_type();",
                "+        }",
                "+      }",
                "+      if (field_type == NULL) {",
                "+        throw \"type error: \" + type->get_name() + \" has no field \" + v_iter->first->get_string();",
                "+      }",
                "+",
                "+      out << indent() << \":\" << v_iter->first->get_string() << \" \" <<",
                "+        render_const_value(field_type, v_iter->second) << endl;",
                "+    }",
                "+    out << indent() << \")\";",
                "+",
                "+    indent_down();",
                "+  } else if (type->is_map()) {",
                "+    // emit an hash form with both keys and values to be evaluated",
                "+    t_type* ktype = ((t_map*)type)->get_key_type();",
                "+    t_type* vtype = ((t_map*)type)->get_val_type();",
                "+    out << \"(thrift:map \";",
                "+    indent_up();",
                "+    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "+      out << endl << indent()",
                "+          << \"(cl:cons \" << render_const_value(ktype, v_iter->first) << \" \"",
                "+          << render_const_value(vtype, v_iter->second) << \")\";",
                "+    }",
                "+    indent_down();",
                "+    out << indent() << \")\";",
                "+  } else if (type->is_list() || type->is_set()) {",
                "+    t_type* etype;",
                "+    if (type->is_list()) {",
                "+      etype = ((t_list*)type)->get_elem_type();",
                "+    } else {",
                "+      etype = ((t_set*)type)->get_elem_type();",
                "+    }",
                "+    if (type->is_set()) {",
                "+      out << \"(thrift:set\" << endl;",
                "+    } else {",
                "+      out << \"(thrift:list\" << endl;",
                "+    }",
                "+    indent_up();",
                "+    indent_up();",
                "+    const vector<t_const_value*>& val = value->get_list();",
                "+    vector<t_const_value*>::const_iterator v_iter;",
                "+    for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "+      out << indent() << render_const_value(etype, *v_iter) << endl;",
                "+    }",
                "+    out << indent() << \")\";",
                "+    indent_down();",
                "+    indent_down();",
                "+  } else {",
                "+    throw \"CANNOT GENERATE CONSTANT FOR TYPE: \" + type->get_name();",
                "+  }",
                "+  return out.str();",
                "+}",
                "+",
                "+void t_cl_generator::generate_struct(t_struct* tstruct) {",
                "+  generate_cl_struct(f_types_, tstruct, false);",
                "+}",
                "+",
                "+void t_cl_generator::generate_xception(t_struct* txception) {",
                "+  generate_cl_struct(f_types_, txception, true);",
                "+}",
                "+",
                "+void t_cl_generator::generate_cl_struct_internal(std::ofstream& out, t_struct* tstruct, bool is_exception) {",
                "+  (void)is_exception;",
                "+  const vector<t_field*>& members = tstruct->get_members();",
                "+  vector<t_field*>::const_iterator m_iter;",
                "+",
                "+  out << \"(\";",
                "+",
                "+  for (m_iter = members.begin(); m_iter != members.end(); ++m_iter) {",
                "+    t_const_value* value = (*m_iter)->get_value();",
                "+    t_type* type = (*m_iter)->get_type();",
                "+",
                "+    if (m_iter != members.begin()) {",
                "+      out << endl << indent() << \" \";",
                "+    }",
                "+    out << \"(\" << prefix((*m_iter)->get_name()) << \" \" <<",
                "+        ( (NULL != value) ? render_const_value(type, value) : \"nil\" ) <<",
                "+        \" :id \" << (*m_iter)->get_key();",
                "+    if ( type->is_base_type() && \"string\" == typespec(type) )",
                "+      if ( ((t_base_type*)type)->is_binary() )",
                "+        out << \" :type binary\";",
                "+      else",
                "+        out << \" :type string\";",
                "+    else",
                "+      out << \" :type \" << typespec(type);",
                "+    if ( (*m_iter)->get_req() == t_field::T_OPTIONAL ) {",
                "+      out << \" :optional t\";",
                "+    }",
                "+    if ( (*m_iter)->has_doc()) {",
                "+      out << \" :documentation \\\"\" << cl_docstring((*m_iter)->get_doc()) << \"\\\"\";",
                "+    }",
                "+    out <<\")\";",
                "+  }",
                "+",
                "+  out << \")\";",
                "+}",
                "+",
                "+void t_cl_generator::generate_cl_struct(std::ofstream& out, t_struct* tstruct, bool is_exception = false) {",
                "+  std::string name = type_name(tstruct);",
                "+  out << (is_exception ? \"(thrift:def-exception \" : \"(thrift:def-struct \") <<",
                "+      prefix(name) << endl;",
                "+  indent_up();",
                "+  if ( tstruct->has_doc() ) {",
                "+    out << indent() ;",
                "+    out << \"\\\"\" << cl_docstring(tstruct->get_doc()) << \"\\\"\" << endl;",
                "+  }",
                "+  out << indent() ;",
                "+  generate_cl_struct_internal(out, tstruct, is_exception);",
                "+  indent_down();",
                "+  out << \")\" << endl << endl;",
                "+}",
                "+",
                "+void t_cl_generator::generate_exception_sig(std::ofstream& out, t_function* f) {",
                "+  generate_cl_struct_internal(out, f->get_xceptions(), true);",
                "+}",
                "+",
                "+void t_cl_generator::generate_service(t_service* tservice) {",
                "+  string extends_client;",
                "+  vector<t_function*> functions = tservice->get_functions();",
                "+  vector<t_function*>::iterator f_iter;",
                "+",
                "+  if (tservice->get_extends() != NULL) {",
                "+    extends_client = type_name(tservice->get_extends());",
                "+  }",
                "+",
                "+  extends_client = extends_client.empty() ? \"nil\" : prefix(extends_client);",
                "+",
                "+  f_types_ << \"(thrift:def-service \" << prefix(service_name_) << \" \"",
                "+           << extends_client;",
                "+",
                "+  indent_up();",
                "+",
                "+  if ( tservice->has_doc()) {",
                "+      f_types_ << endl << indent()",
                "+               << \"(:documentation \\\"\" << cl_docstring(tservice->get_doc()) << \"\\\")\";",
                "+    }",
                "+",
                "+  for (f_iter = functions.begin(); f_iter != functions.end(); ++f_iter) {",
                "+    t_function* function = *f_iter;",
                "+    string fname = function->get_name();",
                "+    string signature = function_signature(function);",
                "+    t_struct* exceptions = function->get_xceptions();",
                "+    const vector<t_field*>& xmembers = exceptions->get_members();",
                "+",
                "+    f_types_ << endl << indent() << \"(:method \" << prefix(fname);",
                "+    f_types_ << \" (\" << signature << \" \"  << typespec((*f_iter)->get_returntype()) << \")\";",
                "+    if (xmembers.size() > 0) {",
                "+      f_types_ << endl << indent() << \" :exceptions \" ;",
                "+      generate_exception_sig(f_types_, function);",
                "+    }",
                "+    if ( (*f_iter)->is_oneway() ) {",
                "+      f_types_ << endl << indent() << \" :oneway t\";",
                "+    }",
                "+    if ( (*f_iter)->has_doc() ) {",
                "+      f_types_ << endl << indent() << \" :documentation \\\"\"",
                "+               << cl_docstring((*f_iter)->get_doc()) << \"\\\"\";",
                "+  }",
                "+    f_types_ << \")\";",
                "+  }",
                "+",
                "+  f_types_ << \")\" << endl << endl;",
                "+",
                "+  indent_down();",
                "+}",
                "+",
                "+string t_cl_generator::typespec(t_type *t) {",
                "+  t = get_true_type(t);",
                "+",
                "+  if (t -> is_binary()){",
                "+    return \"binary\";",
                "+  } else if (t->is_base_type()) {",
                "+    return type_name(t);",
                "+  } else if (t->is_map()) {",
                "+    t_map *m = (t_map*) t;",
                "+    return \"(thrift:map \" + typespec(m->get_key_type()) + \" \" + ",
                "+      typespec(m->get_val_type()) + \")\";",
                "+  } else if (t->is_struct() || t->is_xception()) {",
                "+    return \"(struct \" + prefix(type_name(t)) + \")\";",
                "+  } else if (t->is_list()) {",
                "+    return \"(thrift:list \" + typespec(((t_list*) t)->get_elem_type()) + \")\";",
                "+  } else if (t->is_set()) {",
                "+    return \"(thrift:set \" + typespec(((t_set*) t)->get_elem_type()) + \")\";",
                "+  } else if (t->is_enum()) {",
                "+    return \"(enum \\\"\" + ((t_enum*) t)->get_name() + \"\\\")\";",
                "+  } else {",
                "+    throw \"Sorry, I don't know how to generate this: \" + type_name(t);",
                "+  }",
                "+}",
                "+",
                "+string t_cl_generator::function_signature(t_function* tfunction) {",
                "+  return argument_list(tfunction->get_arglist());",
                "+}",
                "+",
                "+string t_cl_generator::argument_list(t_struct* tstruct) {",
                "+  stringstream res;",
                "+  res << \"(\";",
                "+",
                "+  const vector<t_field*>& fields = tstruct->get_members();",
                "+  vector<t_field*>::const_iterator f_iter;",
                "+  bool first = true;",
                "+  for (f_iter = fields.begin(); f_iter != fields.end(); ++f_iter) {",
                "+    if (first) {",
                "+      first = false;",
                "+    } else {",
                "+      res << \" \";",
                "+    }",
                "+    res << \"(\" + prefix((*f_iter)->get_name()) << \" \" <<",
                "+      typespec((*f_iter)->get_type()) << \" \" <<",
                "+      (*f_iter)->get_key() <<  \")\";",
                "+",
                "+    ",
                "+  }",
                "+  res << \")\";",
                "+  return res.str();",
                "+}",
                "+",
                "+string t_cl_generator::type_name(t_type* ttype) {",
                "+  string prefix = \"\";",
                "+  t_program* program = ttype->get_program();",
                "+",
                "+  if (program != NULL && program != program_)",
                "+    prefix = package_of(program) == package() ? \"\" : package_of(program) + \":\";",
                "+",
                "+  string name = ttype->get_name();",
                "+",
                "+  if (ttype->is_struct() || ttype->is_xception())",
                "+    name = lowercase(ttype->get_name());",
                "+",
                "+  return prefix + name;",
                "+}",
                "+",
                "+THRIFT_REGISTER_GENERATOR(",
                "+    cl,",
                "+    \"Common Lisp\",",
                "+    \"    no_asd:          Do not define ASDF systems for each generated Thrift program.\\n\"",
                "+    \"    sys_pref=        The prefix to give ASDF system names. Default: thrift-gen-\\n\")",
                "diff --git a/configure.ac b/configure.ac",
                "index b20312fd1..76348233c 100755",
                "--- a/configure.ac",
                "+++ b/configure.ac",
                "@@ -121,2 +121,3 @@ if test \"$enable_libs\" = \"no\"; then",
                "   with_c_glib=\"no\"",
                "+  with_cl=\"no\"",
                "   with_java=\"no\"",
                "@@ -455,2 +456,12 @@ AM_CONDITIONAL(WITH_RS, [test \"$have_rs\" = \"yes\"])",
                "+AX_THRIFT_LIB(cl, [Common Lisp], yes)",
                "+have_cl=\"no\"",
                "+if test \"$with_cl\" = \"yes\";  then",
                "+  AC_PATH_PROG([SBCL], [sbcl])",
                "+  if test \"x$SBCL\" != \"x\"; then",
                "+    have_cl=\"yes\"",
                "+  fi",
                "+fi",
                "+AM_CONDITIONAL(WITH_CL, [test \"$have_cl\" = \"yes\"])",
                "+",
                " AX_THRIFT_LIB(haxe, [Haxe], yes)",
                "@@ -786,2 +797,3 @@ AC_CONFIG_FILES([",
                "   lib/Makefile",
                "+  lib/cl/Makefile",
                "   lib/cpp/Makefile",
                "@@ -827,2 +839,3 @@ AC_CONFIG_FILES([",
                "   test/c_glib/Makefile",
                "+  test/cl/Makefile",
                "   test/cpp/Makefile",
                "@@ -845,2 +858,3 @@ AC_CONFIG_FILES([",
                "   tutorial/c_glib/Makefile",
                "+  tutorial/cl/Makefile",
                "   tutorial/cpp/Makefile",
                "@@ -898,2 +912,4 @@ if test \"$have_dotnetcore\" = \"yes\" ; then MAYBE_DOTNETCORE=\"netcore\" ; else MAYB",
                " AC_SUBST([MAYBE_DOTNETCORE])",
                "+if test \"$have_cl\" = \"yes\" ; then MAYBE_CL=\"cl\" ; else MAYBE_CL=\"\" ; fi",
                "+AC_SUBST([MAYBE_CL])",
                "@@ -908,2 +924,3 @@ echo \"Building C# (Mono) Library ... : $have_csharp\"",
                " echo \"Building C++ Library ......... : $have_cpp\"",
                "+echo \"Building Common Lisp Library.. : $have_cl\"",
                " echo \"Building D Library ........... : $have_d\"",
                "@@ -942,2 +959,8 @@ if test \"$have_cpp\" = \"yes\" ; then",
                " fi",
                "+if test \"$have_cl\" = \"yes\" ; then",
                "+  echo",
                "+  echo \"Common Lisp Library:\"",
                "+  echo \"   Using Common Lisp ......... : $SBCL\"",
                "+  echo \"   Using Common Lisp version . : $($SBCL --version)\"",
                "+fi",
                " if test \"$have_d\" = \"yes\" ; then",
                "diff --git a/lib/Makefile.am b/lib/Makefile.am",
                "index 636f42cfc..0401c99e1 100644",
                "--- a/lib/Makefile.am",
                "+++ b/lib/Makefile.am",
                "@@ -99,2 +99,6 @@ endif",
                "+if WITH_CL",
                "+SUBDIRS += cl",
                "+endif",
                "+",
                " # All of the libs that don't use Automake need to go in here",
                "diff --git a/lib/cl/Makefile.am b/lib/cl/Makefile.am",
                "new file mode 100644",
                "index 000000000..34b38861d",
                "--- /dev/null",
                "+++ b/lib/cl/Makefile.am",
                "@@ -0,0 +1,40 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements. See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership. The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License. You may obtain a copy of the License at",
                "+#",
                "+#   http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied. See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                "+",
                "+THRIFT = $(top_builddir)/compiler/cpp/thrift",
                "+",
                "+all-local:",
                "+\tbash ensure-externals.sh",
                "+",
                "+run-tests: test/make-test-binary.lisp",
                "+\t$(SBCL) --script test/make-test-binary.lisp",
                "+",
                "+check-local: run-tests",
                "+\t./run-tests",
                "+",
                "+clean-local:",
                "+\t$(RM) run-tests quicklisp.lisp backport-update.zip",
                "+\t$(RM) -rf lib externals quicklisp",
                "+",
                "+EXTRA_DIST = \\",
                "+\tREADME.md \\",
                "+\tREADMES \\",
                "+\tload-locally.lisp \\",
                "+\ttest \\",
                "+\tensure-externals.sh",
                "diff --git a/lib/cl/ensure-externals.sh b/lib/cl/ensure-externals.sh",
                "new file mode 100755",
                "index 000000000..0495f030c",
                "--- /dev/null",
                "+++ b/lib/cl/ensure-externals.sh",
                "@@ -0,0 +1,16 @@",
                "+#!/bin/bash",
                "+",
                "+set -e",
                "+",
                "+if [[ ! -e quicklisp.lisp ]]; then curl -O https://beta.quicklisp.org/quicklisp.lisp; fi",
                "+sbcl --load quicklisp.lisp \\",
                "+     --eval \"(ignore-errors (quicklisp-quickstart:install :path \\\"quicklisp/\\\"))\" \\",
                "+     --eval \"(load \\\"quicklisp/setup.lisp\\\")\" \\",
                "+     --eval \"(quicklisp:bundle-systems '(#:puri #:usocket #:closer-mop #:trivial-utf-8 #:ieee-floats #:trivial-gray-streams #:alexandria #:bordeaux-threads #:cl-ppcre #:fiasco #:net.didierverna.clon) :to \\\"externals/\\\")\" \\",
                "+     --eval \"(quit)\" \\",
                "+     --no-userinit",
                "+if [[ ! -e backport-update.zip ]]; then",
                "+    curl -O -L https://github.com/TurtleWarePL/de.setf.thrift/archive/backport-update.zip;",
                "+fi",
                "+mkdir -p lib",
                "+unzip -u backport-update.zip -d lib",
                "diff --git a/lib/cl/load-locally.lisp b/lib/cl/load-locally.lisp",
                "new file mode 100644",
                "index 000000000..d12c70476",
                "--- /dev/null",
                "+++ b/lib/cl/load-locally.lisp",
                "@@ -0,0 +1,23 @@",
                "+(in-package #:cl-user)",
                "+",
                "+;;;; Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+;;;; you may not use this file except in compliance with the License.",
                "+;;;; You may obtain a copy of the License at",
                "+;;;;",
                "+;;;;     http://www.apache.org/licenses/LICENSE-2.0",
                "+;;;;",
                "+;;;; Unless required by applicable law or agreed to in writing, software",
                "+;;;; distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+;;;; See the License for the specific language governing permissions and",
                "+;;;; limitations under the License.",
                "+",
                "+;;;; Just a script for loading the library itself, using bundled dependencies.",
                "+;;;; This is here for when we want to build the self-test and cross-test",
                "+;;;; binaries.",
                "+",
                "+(require \"asdf\")",
                "+",
                "+(load (merge-pathnames \"externals/bundle.lisp\" *load-truename*))",
                "+(asdf:load-asd (merge-pathnames \"lib/de.setf.thrift-backport-update/thrift.asd\" *load-truename*))",
                "+(asdf:load-system :thrift)",
                "diff --git a/test/Makefile.am b/test/Makefile.am",
                "index 335bae63a..cb3d9aa64 100755",
                "--- a/test/Makefile.am",
                "+++ b/test/Makefile.am",
                "@@ -27,2 +27,7 @@ endif",
                "+if WITH_CL",
                "+SUBDIRS += cl",
                "+PRECROSS_TARGET += precross-cl",
                "+endif",
                "+",
                " if WITH_MONO",
                "@@ -112,2 +117,3 @@ EXTRA_DIST = \\",
                " \tc_glib \\",
                "+\tcl \\",
                " \tcpp \\",
                "diff --git a/test/cl/Makefile.am b/test/cl/Makefile.am",
                "new file mode 100755",
                "index 000000000..b5e72bcbb",
                "--- /dev/null",
                "+++ b/test/cl/Makefile.am",
                "@@ -0,0 +1,42 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements. See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership. The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License. You may obtain a copy of the License at",
                "+#",
                "+#   http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied. See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                "+",
                "+THRIFT = $(top_builddir)/compiler/cpp/thrift",
                "+",
                "+stubs: ../ThriftTest.thrift",
                "+\t$(THRIFT) --gen cl ../ThriftTest.thrift",
                "+",
                "+TestServer: make-test-server.lisp",
                "+\t$(SBCL) --script make-test-server.lisp",
                "+",
                "+TestClient: make-test-client.lisp",
                "+\t$(SBCL) --script make-test-client.lisp",
                "+",
                "+precross: stubs TestServer TestClient",
                "+",
                "+clean-local:",
                "+\t$(RM) -r gen-cl",
                "+\t$(RM) TestServer",
                "+\t$(RM) TestClient",
                "+",
                "+EXTRA_DIST = \\",
                "+\timplementation.lisp \\",
                "+\tmake-test-client.lisp \\",
                "+\tmake-test-server.lisp \\",
                "+\ttests.lisp",
                "diff --git a/test/cl/implementation.lisp b/test/cl/implementation.lisp",
                "new file mode 100644",
                "index 000000000..65a79b515",
                "--- /dev/null",
                "+++ b/test/cl/implementation.lisp",
                "@@ -0,0 +1,135 @@",
                "+(in-package #:thrift.test-implementation)",
                "+",
                "+;;;; Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+;;;; you may not use this file except in compliance with the License.",
                "+;;;; You may obtain a copy of the License at",
                "+;;;;",
                "+;;;;     http://www.apache.org/licenses/LICENSE-2.0",
                "+;;;;",
                "+;;;; Unless required by applicable law or agreed to in writing, software",
                "+;;;; distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+;;;; See the License for the specific language governing permissions and",
                "+;;;; limitations under the License.",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-void ()",
                "+  (format t \"testVoid()~%\"))",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-string (thing)",
                "+  (format t \"testString(~a)~%\" thing)",
                "+  thing)",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-bool (thing)",
                "+  (format t \"testBool(~a)~%\" (if thing \"true\" \"false\"))",
                "+  thing)",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-byte (thing)",
                "+  (format t \"testByte(~a)~%\" thing)",
                "+  thing)",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-i32 (thing)",
                "+  (format t \"testI32(~a)~%\" thing)",
                "+  thing)",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-i64 (thing)",
                "+  (format t \"testI64(~a)~%\" thing)",
                "+  thing)",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-double (thing)",
                "+  (format t \"testDouble(~a)~%\" thing)",
                "+  thing)",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-binary (thing)",
                "+  (format t \"testBinary(~a)~%\" thing)",
                "+  thing)",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-struct (thing)",
                "+  (format t \"testStruct(~a)~%\" thing)",
                "+  thing)",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-nest (thing)",
                "+  (format t \"testNest(~a)~%\" thing)",
                "+  thing)",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-map (thing)",
                "+  (format t \"testMap(~a)~%\" thing)",
                "+  thing)",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-string-map (thing)",
                "+  (format t \"testStringMap(~a)~%\" thing)",
                "+  thing)",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-set (thing)",
                "+  (format t \"testSet(~a)~%\" thing)",
                "+  thing)",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-list (thing)",
                "+  (format t \"testList(~a)~%\" thing)",
                "+  thing)",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-enum (thing)",
                "+  (format t \"testEnum(~a)~%\" thing)",
                "+  thing)",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-typedef (thing)",
                "+  (format t \"testTypedef(~a)~%\" thing)",
                "+  thing)",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-map-map (hello)",
                "+  (format t \"testMapMap(~a)~%\" hello)",
                "+  '((-4 . ((-4 . -4) (-3 . -3) (-2 . -2) (-1 . -1))) (4 . ((1 . 1) (2 . 2) (3 . 3) (4 . 4)))))",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-insanity (argument)",
                "+  (let ((result `((1 . ((2 . ,argument) (3 . ,argument)))",
                "+                  (2 . ((6 . ,(thrift.test::make-insanity :user-map nil :xtructs nil)))))))",
                "+    (format t \"~a~%\" result)",
                "+    result))",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-multi (arg0 arg1 arg2 arg3 arg4 arg5)",
                "+  (declare (ignorable arg3 arg4 arg5))",
                "+  (format t \"testMulti()~%\")",
                "+  (thrift.test:make-xtruct :string-thing \"Hello2\"",
                "+                           :byte-thing arg0",
                "+                           :i32-thing arg1",
                "+                           :i64-thing arg2))",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-exception (arg)",
                "+  (format t \"testException(~a)~%\" arg)",
                "+  (cond",
                "+    ((string= arg \"Xception\") (error 'thrift.test:xception",
                "+                                     :error-code 1001",
                "+                                     :message arg))",
                "+    ((string= arg \"TException\") (error 'thrift.test:xception",
                "+                                       :error-code 0",
                "+                                       :message \"Stuff!\"))))",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-multi-exception (arg0 arg1)",
                "+  (format t \"testMultiException(~a, ~a)~%\" arg0 arg1)",
                "+  (cond",
                "+    ((string= arg0 \"Xception\") (error 'thrift.test:xception",
                "+                                     :error-code 1001",
                "+                                     :message \"This is an Xception\"))",
                "+    ((string= arg0 \"Xception2\") (error 'thrift.test:xception2",
                "+                                     :error-code 2002",
                "+                                     :struct-thing (thrift.test:make-xtruct :string-thing \"This is an Xception2\"",
                "+                                                                            :byte-thing 0",
                "+                                                                            :i32-thing 0",
                "+                                                                            :i64-thing 0))))",
                "+  (thrift.test:make-xtruct :string-thing arg1",
                "+                           :byte-thing 0",
                "+                           :i32-thing 0",
                "+                           :i64-thing 0))",
                "+",
                "+(defun thrift.test.thrift-test-implementation:test-oneway (seconds)",
                "+  (format t \"testOneway(~a): Sleeping...~%\" seconds)",
                "+  (sleep seconds)",
                "+  (format t \"testOneway(~a): done sleeping!~%\" seconds))",
                "+",
                "+;;; Removed from the IDL definition.",
                "+#+(or)",
                "+(defun thrift.test.second-service-implementation:blah-blah ()",
                "+  (format t \"blahBlah()~%\"))",
                "+",
                "+(defun thrift.test.second-service-implementation:secondtest-string (thing)",
                "+  (format t \"secondtestString(~a)~%\" thing)",
                "+  thing)",
                "diff --git a/test/cl/make-test-client.lisp b/test/cl/make-test-client.lisp",
                "new file mode 100644",
                "index 000000000..509669dd8",
                "--- /dev/null",
                "+++ b/test/cl/make-test-client.lisp",
                "@@ -0,0 +1,93 @@",
                "+(in-package #:cl-user)",
                "+",
                "+;;;; Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+;;;; you may not use this file except in compliance with the License.",
                "+;;;; You may obtain a copy of the License at",
                "+;;;;",
                "+;;;;     http://www.apache.org/licenses/LICENSE-2.0",
                "+;;;;",
                "+;;;; Unless required by applicable law or agreed to in writing, software",
                "+;;;; distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+;;;; See the License for the specific language governing permissions and",
                "+;;;; limitations under the License.",
                "+",
                "+#+(or) (when (not (boundp 'sb-impl::default-external-format)",
                "+                 (setf sb-impl::default-external-format :UTF-8)))",
                "+",
                "+(require \"asdf\")",
                "+(load (merge-pathnames \"../../lib/cl/load-locally.lisp\" *load-truename*))",
                "+(asdf:load-system :net.didierverna.clon)",
                "+(asdf:load-system :fiasco)",
                "+(asdf:load-asd (merge-pathnames \"gen-cl/ThriftTest/thrift-gen-ThriftTest.asd\" *load-truename*))",
                "+(asdf:load-system :thrift-gen-thrifttest)",
                "+",
                "+(net.didierverna.clon:nickname-package)",
                "+",
                "+(defpackage #:thrift-cross",
                "+  (:use #:common-lisp #:fiasco)",
                "+  (:export #:cross-test))",
                "+",
                "+(in-package #:thrift-cross)",
                "+",
                "+(defparameter *prot* nil)",
                "+",
                "+(load (merge-pathnames \"tests.lisp\" *load-truename*) :external-format :UTF-8)",
                "+",
                "+(clon:defsynopsis ()",
                "+  (text :contents \"The Common Lisp client for Thrift's cross-language test suite.\")",
                "+  (group (:header \"Allowed options:\")",
                "+    (flag :short-name \"h\" :long-name \"help\"",
                "+          :description \"Print this help and exit.\")",
                "+    (stropt :long-name \"host\"",
                "+            :description \"The host to connect to.\"",
                "+            :default-value \"localhost\"",
                "+            :argument-name \"ARG\")",
                "+    (stropt :long-name \"port\"",
                "+            :description \"Number of the port to listen for connections on.\"",
                "+            :default-value \"9090\"",
                "+            :argument-name \"ARG\"",
                "+            :argument-type :optional)",
                "+    (stropt :long-name \"transport\"",
                "+            :description \"Transport: transport to use (\\\"buffered\\\", \\\"framed\\\")\"",
                "+            :default-value \"buffered\"",
                "+            :argument-name \"ARG\")",
                "+    (stropt :long-name \"protocol\"",
                "+            :description \"Protocol: protocol to use (\\\"binary\\\", \\\"multi\\\")\"",
                "+            :default-value \"binary\"",
                "+            :argument-name \"ARG\")))",
                "+",
                "+(defun main ()",
                "+  \"Entry point for our standalone application.\"",
                "+  (clon:make-context)",
                "+  (when (clon:getopt :short-name \"h\")",
                "+    (clon:help)",
                "+    (clon:exit))",
                "+  (let ((port \"9090\")",
                "+        (host \"localhost\")",
                "+        (framed nil)",
                "+        (multiplexed nil))",
                "+    (clon:do-cmdline-options (option name value source)",
                "+      (print (list option name value source))",
                "+      (if (string= name \"host\")",
                "+          (setf host value))",
                "+      (if (string= name \"port\")",
                "+          (setf port value))",
                "+      (if (string= name \"transport\")",
                "+          (cond ((string= value \"buffered\") (setf framed nil))",
                "+                ((string= value \"framed\") (setf framed t))",
                "+                (t (error \"Unsupported transport.\"))))",
                "+      (if (string= name \"protocol\")",
                "+          (cond ((string= value \"binary\") (setf multiplexed nil))",
                "+                ((string= value \"multi\") (setf multiplexed t))",
                "+                (t (error \"Unsupported protocol.\")))))",
                "+    (terpri)",
                "+    (setf *prot* (thrift.implementation::client (puri:parse-uri",
                "+                                                 (concatenate 'string \"thrift://\" host \":\" port))",
                "+                                                :framed framed",
                "+                                                :multiplexed multiplexed))",
                "+    (let ((result (cross-test :multiplexed multiplexed)))",
                "+      (thrift.implementation::close *prot*)",
                "+      (clon:exit result))))",
                "+",
                "+(clon:dump \"TestClient\" main)",
                "diff --git a/test/cl/make-test-server.lisp b/test/cl/make-test-server.lisp",
                "new file mode 100644",
                "index 000000000..293c87928",
                "--- /dev/null",
                "+++ b/test/cl/make-test-server.lisp",
                "@@ -0,0 +1,80 @@",
                "+(in-package #:cl-user)",
                "+",
                "+;;;; Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+;;;; you may not use this file except in compliance with the License.",
                "+;;;; You may obtain a copy of the License at",
                "+;;;;",
                "+;;;;     http://www.apache.org/licenses/LICENSE-2.0",
                "+;;;;",
                "+;;;; Unless required by applicable law or agreed to in writing, software",
                "+;;;; distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+;;;; See the License for the specific language governing permissions and",
                "+;;;; limitations under the License.",
                "+",
                "+(require \"asdf\")",
                "+(load (merge-pathnames \"../../lib/cl/load-locally.lisp\" *load-truename*))",
                "+(asdf:load-system :net.didierverna.clon)",
                "+(asdf:load-asd (merge-pathnames \"gen-cl/ThriftTest/thrift-gen-ThriftTest.asd\" *load-truename*))",
                "+(asdf:load-system :thrift-gen-thrifttest)",
                "+(load (merge-pathnames \"implementation.lisp\" *load-truename*))",
                "+",
                "+(net.didierverna.clon:nickname-package)",
                "+",
                "+(clon:defsynopsis ()",
                "+  (text :contents \"The Common Lisp server for Thrift's cross-language test suite.\")",
                "+  (group (:header \"Allowed options:\")",
                "+    (flag :short-name \"h\" :long-name \"help\"",
                "+          :description \"Print this help and exit.\")",
                "+    (stropt :long-name \"port\"",
                "+            :description \"Number of the port to listen for connections on.\"",
                "+            :default-value \"9090\"",
                "+            :argument-name \"ARG\"",
                "+            :argument-type :optional)",
                "+    (stropt :long-name \"server-type\"",
                "+            :description \"The type of server, currently only \\\"simple\\\" is available.\"",
                "+            :default-value \"simple\"",
                "+            :argument-name \"ARG\")",
                "+    (stropt :long-name \"transport\"",
                "+            :description \"Transport: transport to use (\\\"buffered\\\" or \\\"framed\\\")\"",
                "+            :default-value \"buffered\"",
                "+            :argument-name \"ARG\")",
                "+    (stropt :long-name \"protocol\"",
                "+            :description \"Protocol: protocol to use (\\\"binary\\\" or \\\"multi\\\")\"",
                "+            :default-value \"binary\"",
                "+            :argument-name \"ARG\")))",
                "+",
                "+(defun main ()",
                "+  \"Entry point for our standalone application.\"",
                "+  (clon:make-context)",
                "+  (when (clon:getopt :short-name \"h\")",
                "+    (clon:help)",
                "+    (clon:exit))",
                "+  (let ((port \"9090\")",
                "+        (framed nil)",
                "+        (multiplexed nil))",
                "+    (clon:do-cmdline-options (option name value source)",
                "+      (print (list option name value source))",
                "+      (if (string= name \"port\")",
                "+          (setf port value))",
                "+      (if (string= name \"transport\")",
                "+          (cond ((string= value \"buffered\") (setf framed nil))",
                "+                ((string= value \"framed\") (setf framed t))",
                "+                (t (error \"Unsupported transport.\"))))",
                "+      (if (string= name \"protocol\")",
                "+          (cond ((string= value \"binary\") (setf multiplexed nil))",
                "+                ((string= value \"multi\") (setf multiplexed t))",
                "+                (t (error \"Unsupported protocol.\")))))",
                "+    (terpri)",
                "+    (let ((services (if multiplexed",
                "+                        (list thrift.test:thrift-test thrift.test:second-service)",
                "+                        thrift.test:thrift-test)))",
                "+      (thrift:serve (puri:parse-uri (concatenate 'string",
                "+                                                 \"thrift://127.0.0.1:\"",
                "+                                                 port))",
                "+                    services",
                "+                    :framed framed",
                "+                    :multiplexed multiplexed)))",
                "+  (clon:exit))",
                "+",
                "+(clon:dump \"TestServer\" main)",
                "diff --git a/test/cl/tests.lisp b/test/cl/tests.lisp",
                "new file mode 100644",
                "index 000000000..c5035fd98",
                "--- /dev/null",
                "+++ b/test/cl/tests.lisp",
                "@@ -0,0 +1,240 @@",
                "+(in-package #:thrift-cross)",
                "+",
                "+;;;; Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+;;;; you may not use this file except in compliance with the License.",
                "+;;;; You may obtain a copy of the License at",
                "+;;;;",
                "+;;;;     http://www.apache.org/licenses/LICENSE-2.0",
                "+;;;;",
                "+;;;; Unless required by applicable law or agreed to in writing, software",
                "+;;;; distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+;;;; See the License for the specific language governing permissions and",
                "+;;;; limitations under the License.",
                "+",
                "+;;;; The tests here only make sense in the context of a TestServer",
                "+;;;; running and the dynamic variable thrift-cross::*prot*",
                "+;;;; being set with a client connection to the TestServer. Normally,",
                "+;;;; this is handled in make-test-client.lisp.",
                "+",
                "+",
                "+;;; Standard Thrift cross-test error codes",
                "+(defparameter *test_basetypes* 1)",
                "+(defparameter *test_structs* 2)",
                "+(defparameter *test_containers* 4)",
                "+(defparameter *test_exceptions* 8)",
                "+(defparameter *test_unknown* 64)",
                "+(defparameter *test_timeout* 128)",
                "+",
                "+(defun cross-test (&key (multiplexed nil))",
                "+  \"The main cross-test runner.\"",
                "+  (let ((result nil))",
                "+    (handler-case",
                "+        (progn",
                "+          (unless (run-package-tests :package :base-types)",
                "+            (pushnew *test_basetypes* result))",
                "+          (unless (run-package-tests :package :structs)",
                "+            (pushnew *test_structs* result))",
                "+          (unless (run-package-tests :package :containers)",
                "+            (pushnew *test_containers* result))",
                "+          (unless (run-package-tests :package :exceptions)",
                "+            (pushnew *test_exceptions* result))",
                "+          (unless (run-package-tests :package :misc)",
                "+            (pushnew *test_unknown* result))",
                "+",
                "+          ;; It doesn't seem like anyone actually uses",
                "+          ;; the second test service when testing multiplexing,",
                "+          ;; so this would fail against servers in other",
                "+          ;; languages. For now, anyway.",
                "+          #+(or)",
                "+          (when multiplexed",
                "+            (unless (run-package-tests :package :multiplex)",
                "+              (pushnew *test_unknown* result))))",
                "+      (error (e) (pushnew *test_unknown* result)))",
                "+    (apply #'+ result)))",
                "+",
                "+(fiasco:define-test-package #:base-types)",
                "+",
                "+(in-package #:base-types)",
                "+",
                "+(defconstant *lang-string* \"Afrikaans, Alemannisch, Aragon\u00c3\u00a9s, \u00d8\u00a7\u00d9\u0084\u00d8\u00b9\u00d8\u00b1\u00d8\u00a8\u00d9\u008a\u00d8\u00a9, \u00d9\u0085\u00d8\u00b5\u00d8\u00b1\u00d9\u0089, Asturianu, Aymar aru, Az\u00c9\u0099rbaycan, \u00d0\u0091\u00d0\u00b0\u00d1\u0088\u00d2\u00a1\u00d0\u00be\u00d1\u0080\u00d1\u0082, Boarisch, \u00c5\u00bdemait\u00c4\u0097\u00c5\u00a1ka, \u00d0\u0091\u00d0\u00b5\u00d0\u00bb\u00d0\u00b0\u00d1\u0080\u00d1\u0083\u00d1\u0081\u00d0\u00ba\u00d0\u00b0\u00d1\u008f, \u00d0\u0091\u00d0\u00b5\u00d0\u00bb\u00d0\u00b0\u00d1\u0080\u00d1\u0083\u00d1\u0081\u00d0\u00ba\u00d0\u00b0\u00d1\u008f (\u00d1\u0082\u00d0\u00b0\u00d1\u0080\u00d0\u00b0\u00d1\u0088\u00d0\u00ba\u00d0\u00b5\u00d0\u00b2\u00d1\u0096\u00d1\u0086\u00d0\u00b0), \u00d0\u0091\u00d1\u008a\u00d0\u00bb\u00d0\u00b3\u00d0\u00b0\u00d1\u0080\u00d1\u0081\u00d0\u00ba\u00d0\u00b8, Bamanankan, \u00e0\u00a6\u00ac\u00e0\u00a6\u00be\u00e0\u00a6\u0082\u00e0\u00a6\u00b2\u00e0\u00a6\u00be, Brezhoneg, Bosanski, Catal\u00c3\u00a0, M\u00c3\u00acng-d\u00c4\u0095\u00cc\u00a4ng-ng\u00e1\u00b9\u00b3\u00cc\u0084, \u00d0\u009d\u00d0\u00be\u00d1\u0085\u00d1\u0087\u00d0\u00b8\u00d0\u00b9\u00d0\u00bd, Cebuano, \u00e1\u008f\u00a3\u00e1\u008e\u00b3\u00e1\u008e\u00a9, \u00c4\u008cesky, \u00d0\u00a1\u00d0\u00bb\u00d0\u00be\u00d0\u00b2\u00d1\u00a3\u00cc\u0081\u00d0\u00bd\u00d1\u008c\u00d1\u0081\u00d0\u00ba\u00d1\u008a / \u00e2\u00b0\u0094\u00e2\u00b0\u008e\u00e2\u00b0\u0091\u00e2\u00b0\u0082\u00e2\u00b0\u00a1\u00e2\u00b0\u0090\u00e2\u00b0\u00a0\u00e2\u00b0\u0094\u00e2\u00b0\u008d\u00e2\u00b0\u009f, \u00d0\u00a7\u00d3\u0091\u00d0\u00b2\u00d0\u00b0\u00d1\u0088\u00d0\u00bb\u00d0\u00b0, Cymraeg, Dansk, Zazaki, \u00de\u008b\u00de\u00a8\u00de\u0088\u00de\u00ac\u00de\u0080\u00de\u00a8\u00de\u0084\u00de\u00a6\u00de\u0090\u00de\u00b0, \u00ce\u0095\u00ce\u00bb\u00ce\u00bb\u00ce\u00b7\u00ce\u00bd\u00ce\u00b9\u00ce\u00ba\u00ce\u00ac, Emili\u00c3\u00a0n e rumagn\u00c3\u00b2l, English, Esperanto, Espa\u00c3\u00b1ol, Eesti, Euskara, \u00d9\u0081\u00d8\u00a7\u00d8\u00b1\u00d8\u00b3\u00db\u008c, Suomi, V\u00c3\u00b5ro, F\u00c3\u00b8royskt, Fran\u00c3\u00a7ais, Arpetan, Furlan, Frysk, Gaeilge, \u00e8\u00b4\u009b\u00e8\u00aa\u009e, G\u00c3\u00a0idhlig, Galego, Ava\u00c3\u00b1e'\u00e1\u00ba\u00bd, \u00e0\u00aa\u0097\u00e0\u00ab\u0081\u00e0\u00aa\u009c\u00e0\u00aa\u00b0\u00e0\u00aa\u00be\u00e0\u00aa\u00a4\u00e0\u00ab\u0080, Gaelg, \u00d7\u00a2\u00d7\u0091\u00d7\u00a8\u00d7\u0099\u00d7\u00aa, \u00e0\u00a4\u00b9\u00e0\u00a4\u00bf\u00e0\u00a4\u00a8\u00e0\u00a5\u008d\u00e0\u00a4\u00a6\u00e0\u00a5\u0080, Fiji Hindi, Hrvatski, Krey\u00c3\u00b2l ayisyen, Magyar, \u00d5\u0080\u00d5\u00a1\u00d5\u00b5\u00d5\u00a5\u00d6\u0080\u00d5\u00a5\u00d5\u00b6, Interlingua, Bahasa Indonesia, Ilokano, Ido, \u00c3\u008dslenska, Italiano, \u00e6\u0097\u00a5\u00e6\u009c\u00ac\u00e8\u00aa\u009e, Lojban, Basa Jawa, \u00e1\u0083\u00a5\u00e1\u0083\u0090\u00e1\u0083\u00a0\u00e1\u0083\u0097\u00e1\u0083\u00a3\u00e1\u0083\u009a\u00e1\u0083\u0098, Kongo, Kalaallisut, \u00e0\u00b2\u0095\u00e0\u00b2\u00a8\u00e0\u00b3\u008d\u00e0\u00b2\u00a8\u00e0\u00b2\u00a1, \u00ed\u0095\u009c\u00ea\u00b5\u00ad\u00ec\u0096\u00b4, \u00d0\u009a\u00d1\u008a\u00d0\u00b0\u00d1\u0080\u00d0\u00b0\u00d1\u0087\u00d0\u00b0\u00d0\u00b9-\u00d0\u009c\u00d0\u00b0\u00d0\u00bb\u00d0\u00ba\u00d1\u008a\u00d0\u00b0\u00d1\u0080, Ripoarisch, Kurd\u00c3\u00ae, \u00d0\u009a\u00d0\u00be\u00d0\u00bc\u00d0\u00b8, Kernewek, \u00d0\u009a\u00d1\u008b\u00d1\u0080\u00d0\u00b3\u00d1\u008b\u00d0\u00b7\u00d1\u0087\u00d0\u00b0, Latina, Ladino, L\u00c3\u00abtzebuergesch, Limburgs, Ling\u00c3\u00a1la, \u00e0\u00ba\u00a5\u00e0\u00ba\u00b2\u00e0\u00ba\u00a7, Lietuvi\u00c5\u00b3, Latvie\u00c5\u00a1u, Basa Banyumasan, Malagasy, \u00d0\u009c\u00d0\u00b0\u00d0\u00ba\u00d0\u00b5\u00d0\u00b4\u00d0\u00be\u00d0\u00bd\u00d1\u0081\u00d0\u00ba\u00d0\u00b8, \u00e0\u00b4\u00ae\u00e0\u00b4\u00b2\u00e0\u00b4\u00af\u00e0\u00b4\u00be\u00e0\u00b4\u00b3\u00e0\u00b4\u0082, \u00e0\u00a4\u00ae\u00e0\u00a4\u00b0\u00e0\u00a4\u00be\u00e0\u00a4\u00a0\u00e0\u00a5\u0080, \u00d9\u0085\u00d8\u00a7\u00d8\u00b2\u00d9\u0090\u00d8\u00b1\u00d9\u0088\u00d9\u0086\u00db\u008c, Bahasa Melayu, Nnapulitano, Nedersaksisch, \u00e0\u00a4\u00a8\u00e0\u00a5\u0087\u00e0\u00a4\u00aa\u00e0\u00a4\u00be\u00e0\u00a4\u00b2 \u00e0\u00a4\u00ad\u00e0\u00a4\u00be\u00e0\u00a4\u00b7\u00e0\u00a4\u00be, Nederlands, \u00e2\u0080\u00aaNorsk (nynorsk)\u00e2\u0080\u00ac, \u00e2\u0080\u00aaNorsk (bokm\u00c3\u00a5l)\u00e2\u0080\u00ac, Nouormand, Din\u00c3\u00a9 bizaad, Occitan, \u00d0\u0098\u00d1\u0080\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d1\u0083, Papiamentu, Deitsch, Polski, \u00d9\u00be\u00d9\u0086\u00d8\u00ac\u00d8\u00a7\u00d8\u00a8\u00db\u008c, \u00d9\u00be\u00da\u009a\u00d8\u00aa\u00d9\u0088, Norfuk / Pitkern, Portugu\u00c3\u00aas, Runa Simi, Rumantsch, Romani, Rom\u00c3\u00a2n\u00c4\u0083, \u00d0\u00a0\u00d1\u0083\u00d1\u0081\u00d1\u0081\u00d0\u00ba\u00d0\u00b8\u00d0\u00b9, \u00d0\u00a1\u00d0\u00b0\u00d1\u0085\u00d0\u00b0 \u00d1\u0082\u00d1\u008b\u00d0\u00bb\u00d0\u00b0, Sardu, Sicilianu, Scots, S\u00c3\u00a1megiella, Simple English, Sloven\u00c4\u008dina, Sloven\u00c5\u00a1\u00c4\u008dina, \u00d0\u00a1\u00d1\u0080\u00d0\u00bf\u00d1\u0081\u00d0\u00ba\u00d0\u00b8 / Srpski, Seeltersk, Svenska, Kiswahili, \u00e0\u00ae\u00a4\u00e0\u00ae\u00ae\u00e0\u00ae\u00bf\u00e0\u00ae\u00b4\u00e0\u00af\u008d, \u00e0\u00b0\u00a4\u00e0\u00b1\u0086\u00e0\u00b0\u00b2\u00e0\u00b1\u0081\u00e0\u00b0\u0097\u00e0\u00b1\u0081, \u00d0\u00a2\u00d0\u00be\u00d2\u00b7\u00d0\u00b8\u00d0\u00ba\u00d3\u00a3, \u00e0\u00b9\u0084\u00e0\u00b8\u0097\u00e0\u00b8\u00a2, T\u00c3\u00bcrkmen\u00c3\u00a7e, Tagalog, T\u00c3\u00bcrk\u00c3\u00a7e, \u00d0\u00a2\u00d0\u00b0\u00d1\u0082\u00d0\u00b0\u00d1\u0080\u00d1\u0087\u00d0\u00b0/Tatar\u00c3\u00a7a, \u00d0\u00a3\u00d0\u00ba\u00d1\u0080\u00d0\u00b0\u00d1\u0097\u00d0\u00bd\u00d1\u0081\u00d1\u008c\u00d0\u00ba\u00d0\u00b0, \u00d8\u00a7\u00d8\u00b1\u00d8\u00af\u00d9\u0088, Ti\u00e1\u00ba\u00bfng Vi\u00e1\u00bb\u0087t, Volap\u00c3\u00bck, Walon, Winaray, \u00e5\u0090\u00b4\u00e8\u00af\u00ad, isiXhosa, \u00d7\u0099\u00d7\u0099\u00d6\u00b4\u00d7\u0093\u00d7\u0099\u00d7\u00a9, Yor\u00c3\u00b9b\u00c3\u00a1, Ze\u00c3\u00aauws, \u00e4\u00b8\u00ad\u00e6\u0096\u0087, B\u00c3\u00a2n-l\u00c3\u00a2m-g\u00c3\u00ba, \u00e7\u00b2\u00b5\u00e8\u00aa\u009e\")",
                "+",
                "+(defparameter *trick-string* (format nil \"quote: \\\" backslash: \\\\ newline: ~% backspace: ~C ~",
                "+                                          tab: ~T junk: !@#$%&()(&%$#{}{}<><><\" #\\backspace))",
                "+",
                "+(defconstant *binary-sequence* #(128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127))",
                "+",
                "+(deftest void-test ()",
                "+  (is (null (thrift.test.thrift-test:test-void thrift-cross::*prot*))))",
                "+",
                "+(deftest boolean-test ()",
                "+  (is (thrift.test.thrift-test:test-bool thrift-cross::*prot* t))",
                "+  (is (not (thrift.test.thrift-test:test-bool thrift-cross::*prot* nil))))",
                "+",
                "+(deftest integer-test ()",
                "+  (is (= (thrift.test.thrift-test:test-byte thrift-cross::*prot* 127) 127))",
                "+  (is (= (thrift.test.thrift-test:test-byte thrift-cross::*prot* -128) -128))",
                "+  (is (= (thrift.test.thrift-test:test-byte thrift-cross::*prot* 42) 42))",
                "+  (is (= (thrift.test.thrift-test:test-byte thrift-cross::*prot* 0) 0))",
                "+  (is (= (thrift.test.thrift-test:test-i32 thrift-cross::*prot* 0) 0))",
                "+  (is (= (thrift.test.thrift-test:test-i32 thrift-cross::*prot* 2147483647) 2147483647))",
                "+  (is (= (thrift.test.thrift-test:test-i32 thrift-cross::*prot* -2147483648) -2147483648))",
                "+  (is (= (thrift.test.thrift-test:test-i64 thrift-cross::*prot* 0) 0))",
                "+  (is (= (thrift.test.thrift-test:test-i64 thrift-cross::*prot* 9223372036854775807) 9223372036854775807))",
                "+  (is (= (thrift.test.thrift-test:test-i64 thrift-cross::*prot* -9223372036854775808) -9223372036854775808)))",
                "+",
                "+(deftest double-test ()",
                "+  (is (= (thrift.test.thrift-test:test-double thrift-cross::*prot* 0.0) 0))",
                "+  (is (= (thrift.test.thrift-test:test-double thrift-cross::*prot* 42.0) 42))",
                "+  (is (= (thrift.test.thrift-test:test-double thrift-cross::*prot* -555.0) -555))",
                "+  (is (= (thrift.test.thrift-test:test-double thrift-cross::*prot* -52.3678) -52.3678)))",
                "+",
                "+(deftest string-test ()",
                "+  (is (string= (thrift.test.thrift-test:test-string thrift-cross::*prot* \"\") \"\"))",
                "+  (is (string= (thrift.test.thrift-test:test-string thrift-cross::*prot* \"(defun botsbuildbots () (botsbuilsbots))\")",
                "+               \"(defun botsbuildbots () (botsbuilsbots))\"))",
                "+  (is (string= (thrift.test.thrift-test:test-string thrift-cross::*prot* *lang-string*) *lang-string*))",
                "+  (is (string= (thrift.test.thrift-test:test-string thrift-cross::*prot* *trick-string*) *trick-string*)))",
                "+",
                "+(deftest binary-test ()",
                "+  (is (equalp (thrift.test.thrift-test:test-binary thrift-cross::*prot* #()) #()))",
                "+  (is (equalp (thrift.test.thrift-test:test-binary thrift-cross::*prot* *binary-sequence*) *binary-sequence*)))",
                "+",
                "+(deftest enum-test ()",
                "+  (is (= (thrift.test.thrift-test:test-enum thrift-cross::*prot* thrift.test:numberz.five) thrift.test:numberz.five))",
                "+  (is (= (thrift.test.thrift-test:test-enum thrift-cross::*prot* thrift.test:numberz.eight) thrift.test:numberz.eight))",
                "+  (is (= (thrift.test.thrift-test:test-enum thrift-cross::*prot* thrift.test:numberz.one) thrift.test:numberz.one)))",
                "+",
                "+(deftest typedef-test ()",
                "+  (is (= (thrift.test.thrift-test:test-typedef thrift-cross::*prot* 309858235082523) 309858235082523)))",
                "+",
                "+(fiasco:define-test-package #:structs)",
                "+",
                "+(in-package #:structs)",
                "+",
                "+(defparameter *test-struct* (thrift.test:make-xtruct :string-thing \"Hell is empty.\"",
                "+                                                     :byte-thing -2",
                "+                                                     :i32-thing 42",
                "+                                                     :i64-thing 42424242))",
                "+",
                "+(defparameter *test-nest* (thrift.test:make-xtruct2 :byte-thing 42",
                "+                                                    :struct-thing *test-struct*",
                "+                                                    :i32-thing -42))",
                "+",
                "+(deftest struct-test ()",
                "+  (let ((rec-struct (thrift.test.thrift-test:test-struct thrift-cross::*prot* *test-struct*)))",
                "+    (is (string= (thrift.test:xtruct-string-thing *test-struct*)",
                "+                 (thrift.test:xtruct-string-thing rec-struct)))",
                "+    (is (= (thrift.test:xtruct-byte-thing *test-struct*)",
                "+           (thrift.test:xtruct-byte-thing rec-struct)))",
                "+    (is (= (thrift.test:xtruct-i32-thing *test-struct*)",
                "+           (thrift.test:xtruct-i32-thing rec-struct)))",
                "+    (is (= (thrift.test:xtruct-i64-thing *test-struct*)",
                "+           (thrift.test:xtruct-i64-thing rec-struct)))))",
                "+",
                "+(deftest nest-test ()",
                "+  (let* ((rec-nest (thrift.test.thrift-test:test-nest thrift-cross::*prot* *test-nest*))",
                "+         (rec-struct (thrift.test:xtruct2-struct-thing rec-nest)))",
                "+    (is (string= (thrift.test:xtruct-string-thing *test-struct*)",
                "+                 (thrift.test:xtruct-string-thing rec-struct)))",
                "+    (is (= (thrift.test:xtruct-byte-thing *test-struct*)",
                "+           (thrift.test:xtruct-byte-thing rec-struct)))",
                "+    (is (= (thrift.test:xtruct-i32-thing *test-struct*)",
                "+           (thrift.test:xtruct-i32-thing rec-struct)))",
                "+    (is (= (thrift.test:xtruct-i64-thing *test-struct*)",
                "+           (thrift.test:xtruct-i64-thing rec-struct)))",
                "+    (is (= (thrift.test:xtruct2-byte-thing *test-nest*)",
                "+           (thrift.test:xtruct2-byte-thing rec-nest)))",
                "+    (is (= (thrift.test:xtruct2-i32-thing *test-nest*)",
                "+           (thrift.test:xtruct2-i32-thing rec-nest)))))",
                "+",
                "+(fiasco:define-test-package #:containers)",
                "+",
                "+(in-package #:containers)",
                "+",
                "+(deftest list-test ()",
                "+  (is (null (thrift.test.thrift-test:test-list thrift-cross::*prot* nil)))",
                "+  (is (equal (thrift.test.thrift-test:test-list thrift-cross::*prot* '(42 -42 0 5)) '(42 -42 0 5))))",
                "+",
                "+(deftest set-test ()",
                "+  (is (null (thrift.test.thrift-test:test-set thrift-cross::*prot* nil)))",
                "+  (is (equal (sort (thrift.test.thrift-test:test-set thrift-cross::*prot* (list 42 -42 0 5)) #'<)",
                "+             '(-42 0 5 42))))",
                "+",
                "+(defun map= (map1 map2 &key (car-predicate #'equal) (cdr-predicate #'equal))",
                "+  \"Compare two assoc maps according to the predicates given.\"",
                "+  (not (set-exclusive-or map1 map2 :test (lambda (el1 el2)",
                "+                                           (and (funcall car-predicate",
                "+                                                         (car el1)",
                "+                                                         (car el2))",
                "+                                                (funcall cdr-predicate",
                "+                                                         (cdr el1)",
                "+                                                         (cdr el2)))))))",
                "+",
                "+(deftest map-test ()",
                "+  (is (null (thrift.test.thrift-test:test-map thrift-cross::*prot* nil)))",
                "+  (is (map= (thrift.test.thrift-test:test-map thrift-cross::*prot* '((0 . 1) (42 . -42) (5 . 5)))",
                "+            '((0 . 1) (42 . -42) (5 . 5))))",
                "+  (is (map= (thrift.test.thrift-test:test-map-map thrift-cross::*prot* 42)",
                "+            '((-4 . ((-4 . -4) (-3 . -3) (-2 . -2) (-1 . -1)))",
                "+              (4 . ((1 . 1) (2 . 2) (3 . 3) (4 . 4))))",
                "+            :cdr-predicate #'map=)))",
                "+",
                "+(fiasco:define-test-package #:exceptions)",
                "+",
                "+(in-package #:exceptions)",
                "+",
                "+(defun test-xception (expected-code expected-message function &rest args)",
                "+  \"A helper function to test whether xception is signalled, and whether its fields have the expected values.\"",
                "+  (handler-case (progn (apply function args)",
                "+                       nil)",
                "+    (thrift.test:xception (ex) (and (= (thrift.test::xception-error-code ex) expected-code)",
                "+                                    (string= (thrift.test::xception-message ex) expected-message)))))",
                "+",
                "+(defun test-xception2 (expected-code expected-message function &rest args)",
                "+  \"A helper function to test whether xception2 is signalled, and whether its fields have the expected values.\"",
                "+  (handler-case (progn (apply function args)",
                "+                       nil)",
                "+    (thrift.test:xception2 (ex) (and (= (thrift.test::xception2-error-code ex) expected-code)",
                "+                                     (string= (thrift.test::xtruct-string-thing",
                "+                                               (thrift.test::xception2-struct-thing ex))",
                "+                                              expected-message)))))",
                "+",
                "+(deftest exception-test ()",
                "+  (is (test-xception 1001 \"Xception\" #'thrift.test.thrift-test:test-exception thrift-cross::*prot* \"Xception\"))",
                "+  (signals thrift:application-error (thrift.test.thrift-test:test-exception thrift-cross::*prot* \"TException\"))",
                "+  (finishes (thrift.test.thrift-test:test-exception thrift-cross::*prot* \"success\")))",
                "+",
                "+(deftest multi-exception-test ()",
                "+  (is (test-xception 1001",
                "+                     \"This is an Xception\"",
                "+                     #'thrift.test.thrift-test:test-multi-exception",
                "+                     thrift-cross::*prot*",
                "+                     \"Xception\"",
                "+                     \"meaningless\"))",
                "+  (is (test-xception2 2002",
                "+                      \"This is an Xception2\"",
                "+                      #'thrift.test.thrift-test:test-multi-exception",
                "+                      thrift-cross::*prot*",
                "+                      \"Xception2\"",
                "+                      \"meaningless too!\"))",
                "+  (is (string= \"foobar\" (thrift.test:xtruct-string-thing",
                "+                         (thrift.test.thrift-test:test-multi-exception thrift-cross::*prot*",
                "+                                                           \"success!\"",
                "+                                                           \"foobar\")))))",
                "+",
                "+(fiasco:define-test-package #:misc)",
                "+",
                "+(in-package #:misc)",
                "+",
                "+(deftest oneway-test ()",
                "+  (is (null (thrift.test.thrift-test:test-oneway thrift-cross::*prot* 1))))",
                "+",
                "+(fiasco:define-test-package #:multiplex)",
                "+",
                "+(in-package #:multiplex)",
                "+",
                "+(deftest multiplex-test ()",
                "+  ;; Removed from the IDL definition.",
                "+  ;; (finishes (thrift.test.second-service:blah-blah thrift-cross::*prot*))",
                "+  (is (string= \"asd\" (thrift.test.second-service:secondtest-string thrift-cross::*prot* \"asd\"))))",
                "diff --git a/test/features/known_failures_Linux.json b/test/features/known_failures_Linux.json",
                "index 6d1ed1f8a..83769682f 100644",
                "--- a/test/features/known_failures_Linux.json",
                "+++ b/test/features/known_failures_Linux.json",
                "@@ -3,2 +3,4 @@",
                "     \"c_glib-limit_string_length_binary_buffered-ip\",",
                "+    \"cl-limit_string_length_binary_buffered-ip\",",
                "+    \"cl-limit_container_length_binary_buffered-ip\",",
                "     \"cpp-theader_framed_binary_multih-header_buffered-ip\",",
                "@@ -47,2 +49,2 @@",
                "     \"netcore-limit_container_length_compact_buffered-ip\"",
                "-]",
                "\\ No newline at end of file",
                "+]",
                "diff --git a/test/known_failures_Linux.json b/test/known_failures_Linux.json",
                "index a14279646..082496d44 100644",
                "--- a/test/known_failures_Linux.json",
                "+++ b/test/known_failures_Linux.json",
                "@@ -13,2 +13,27 @@",
                "   \"c_glib-rs_multic_framed-ip\",",
                "+  \"cl-c_glib_binary_buffered-ip\",",
                "+  \"cl-c_glib_binary_framed-ip\",",
                "+  \"cl-c_glib_multi_buffered-ip\",",
                "+  \"cl-c_glib_multi_framed-ip\",",
                "+  \"cl-c_glib_multi-binary_buffered-ip\",",
                "+  \"cl-c_glib_multi-binary_framed-ip\",",
                "+  \"cl-csharp_multi_buffered-ip\",",
                "+  \"cl-csharp_multi_framed-ip\",",
                "+  \"cl-go_binary_buffered-ip\",",
                "+  \"cl-go_binary_framed-ip\",",
                "+  \"cl-java_multi_buffered-ip\",",
                "+  \"cl-java_multi_framed-ip\",",
                "+  \"cl-java_multi_framed-fastframed-ip\",",
                "+  \"cl-perl_multi_buffered-ip\",",
                "+  \"cl-perl_multi_framed-ip\",",
                "+  \"cl-rb_binary_buffered-ip\",",
                "+  \"cl-rb_binary_framed-ip\",",
                "+  \"cl-rb_binary-accel_buffered-ip\",",
                "+  \"cl-rb_binary-accel_framed-ip\",",
                "+  \"cl-rs_binary_buffered-ip\",",
                "+  \"cl-rs_binary_framed-ip\",",
                "+  \"cl-rs_multi_buffered-ip\",",
                "+  \"cl-rs_multi_framed-ip\",",
                "+  \"cl-rs_multi-binary_buffered-ip\",",
                "+  \"cl-rs_multi-binary_framed-ip\",",
                "   \"cpp-dart_binary_http-ip\",",
                "@@ -303,7 +328,13 @@",
                "   \"rs-cpp_multic_framed-ip\",",
                "+  \"rs-csharp_binary_buffered-ip\",",
                "   \"rs-csharp_binary_framed-ip\",",
                "+  \"rs-csharp_compact_buffered-ip\",",
                "   \"rs-csharp_compact_framed-ip\",",
                "+  \"rs-csharp_multi-binary_buffered-ip\",",
                "   \"rs-csharp_multi-binary_framed-ip\",",
                "+  \"rs-csharp_multi_buffered-ip\",",
                "   \"rs-csharp_multi_framed-ip\",",
                "+  \"rs-csharp_multic-compact_buffered-ip\",",
                "   \"rs-csharp_multic-compact_framed-ip\",",
                "+  \"rs-csharp_multic_buffered-ip\",",
                "   \"rs-csharp_multic_framed-ip\",",
                "diff --git a/test/tests.json b/test/tests.json",
                "index 1640eac4b..671c667c9 100644",
                "--- a/test/tests.json",
                "+++ b/test/tests.json",
                "@@ -44,2 +44,19 @@",
                "   },",
                "+  {",
                "+    \"name\": \"cl\",",
                "+    \"server\": {",
                "+      \"command\": [\"TestServer\"],",
                "+      \"workdir\": \"cl\",",
                "+      \"protocols\": [\"binary\", \"multi\"],",
                "+      \"transports\": [\"buffered\", \"framed\"],",
                "+      \"sockets\": [\"ip\"]",
                "+    },",
                "+    \"client\": {",
                "+      \"command\": [\"TestClient\"],",
                "+      \"workdir\": \"cl\",",
                "+      \"protocols\": [\"binary\", \"multi\"],",
                "+      \"transports\": [\"buffered\", \"framed\"],",
                "+      \"sockets\": [\"ip\"]",
                "+    }",
                "+  },",
                "   {",
                "diff --git a/tutorial/Makefile.am b/tutorial/Makefile.am",
                "index d8ad09c60..0499460aa 100755",
                "--- a/tutorial/Makefile.am",
                "+++ b/tutorial/Makefile.am",
                "@@ -80,2 +80,6 @@ endif",
                "+if WITH_CL",
                "+SUBDIRS += cl",
                "+endif",
                "+",
                " #",
                "diff --git a/tutorial/cl/Makefile.am b/tutorial/cl/Makefile.am",
                "new file mode 100755",
                "index 000000000..fb6e83a42",
                "--- /dev/null",
                "+++ b/tutorial/cl/Makefile.am",
                "@@ -0,0 +1,47 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements. See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership. The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License. You may obtain a copy of the License at",
                "+#",
                "+#   http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied. See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                "+",
                "+gen-cl: $(top_srcdir)/tutorial/tutorial.thrift",
                "+\t$(THRIFT) --gen cl -r $<",
                "+",
                "+TutorialServer: make-tutorial-server.lisp",
                "+\t$(SBCL) --script make-tutorial-server.lisp",
                "+",
                "+TutorialClient: make-tutorial-client.lisp",
                "+\t$(SBCL) --script make-tutorial-client.lisp",
                "+",
                "+all-local: gen-cl TutorialClient TutorialServer",
                "+",
                "+tutorialserver: all",
                "+\t./TutorialServer",
                "+",
                "+tutorialclient: all",
                "+\t./TutorialClient",
                "+",
                "+clean-local:",
                "+\t$(RM) -r gen-*",
                "+\t$(RM) TutorialServer",
                "+\t$(RM) TutorialClient",
                "+",
                "+EXTRA_DIST = \\",
                "+\ttutorial-implementation.lisp \\",
                "+\tshared-implementation.lisp \\",
                "+\tthrift-tutorial.asd \\",
                "+\tmake-tutorial-server.lisp \\",
                "+\tmake-tutorial-client.lisp",
                "diff --git a/tutorial/cl/make-tutorial-client.lisp b/tutorial/cl/make-tutorial-client.lisp",
                "new file mode 100644",
                "index 000000000..59450a2ea",
                "--- /dev/null",
                "+++ b/tutorial/cl/make-tutorial-client.lisp",
                "@@ -0,0 +1,51 @@",
                "+(in-package #:cl-user)",
                "+",
                "+;;;; Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+;;;; you may not use this file except in compliance with the License.",
                "+;;;; You may obtain a copy of the License at",
                "+;;;;",
                "+;;;;     http://www.apache.org/licenses/LICENSE-2.0",
                "+;;;;",
                "+;;;; Unless required by applicable law or agreed to in writing, software",
                "+;;;; distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+;;;; See the License for the specific language governing permissions and",
                "+;;;; limitations under the License.",
                "+",
                "+(require \"asdf\")",
                "+(load (merge-pathnames \"../../lib/cl/load-locally.lisp\" *load-truename*))",
                "+(asdf:load-system :net.didierverna.clon)",
                "+(asdf:load-asd (merge-pathnames \"gen-cl/shared/thrift-gen-shared.asd\" *load-truename*))",
                "+(asdf:load-asd (merge-pathnames \"gen-cl/tutorial/thrift-gen-tutorial.asd\" *load-truename*))",
                "+(asdf:load-asd (merge-pathnames \"thrift-tutorial.asd\" *load-truename*))",
                "+(asdf:load-system :thrift-tutorial)",
                "+",
                "+(net.didierverna.clon:nickname-package)",
                "+",
                "+(defun main ()",
                "+  \"Entry point for the binary.\"",
                "+  (thrift:with-client (prot #u\"thrift://127.0.0.1:9090\")",
                "+    (tutorial.calculator:ping prot)",
                "+    (format t \"ping()~%\")",
                "+    (format t \"1 + 1 = ~a~%\" (tutorial.calculator:add prot 1 1))",
                "+    (let ((work-instance (tutorial:make-work :num1 5",
                "+                                             :num2 0",
                "+                                             :op tutorial:operation.divide",
                "+                                             :comment \"Booya!\")))",
                "+      (handler-case (format t",
                "+                            \"5 / 0 = ~a - Oh, really? An exception should have been thrown here.~%\"",
                "+                            (tutorial.calculator:calculate prot 1 work-instance))",
                "+        (tutorial:invalidoperation (e)",
                "+          (format t \"---~%(Expected) Invalid Operation caught: ~%~a~%---~%\" e))))",
                "+    (let ((work-instance (tutorial:make-work :num1 15",
                "+                                             :num2 10",
                "+                                             :op tutorial:operation.subtract",
                "+                                             :comment \"Playing nice this time.\")))",
                "+      (handler-case (format t",
                "+                            \"15 - 10 = ~a~%\"",
                "+                            (tutorial.calculator:calculate prot 1 work-instance))",
                "+        (tutorial:invalidoperation (e)",
                "+          (format t \"---~%(Unexpected) Invalid Operation caught: ~%~a~%---~%\" e))))",
                "+    (format t \"Check log: ~a~%\" (shared.shared-service:get-struct prot 1))))",
                "+",
                "+(clon:dump \"TutorialClient\" main)",
                "diff --git a/tutorial/cl/make-tutorial-server.lisp b/tutorial/cl/make-tutorial-server.lisp",
                "new file mode 100644",
                "index 000000000..5621ff366",
                "--- /dev/null",
                "+++ b/tutorial/cl/make-tutorial-server.lisp",
                "@@ -0,0 +1,29 @@",
                "+(in-package #:cl-user)",
                "+",
                "+;;;; Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+;;;; you may not use this file except in compliance with the License.",
                "+;;;; You may obtain a copy of the License at",
                "+;;;;",
                "+;;;;     http://www.apache.org/licenses/LICENSE-2.0",
                "+;;;;",
                "+;;;; Unless required by applicable law or agreed to in writing, software",
                "+;;;; distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+;;;; See the License for the specific language governing permissions and",
                "+;;;; limitations under the License.",
                "+",
                "+(require \"asdf\")",
                "+(load (merge-pathnames \"../../lib/cl/load-locally.lisp\" *load-truename*))",
                "+(asdf:load-system :net.didierverna.clon)",
                "+(asdf:load-asd (merge-pathnames \"gen-cl/shared/thrift-gen-shared.asd\" *load-truename*))",
                "+(asdf:load-asd (merge-pathnames \"gen-cl/tutorial/thrift-gen-tutorial.asd\" *load-truename*))",
                "+(asdf:load-asd (merge-pathnames \"thrift-tutorial.asd\" *load-truename*))",
                "+(asdf:load-system :thrift-tutorial)",
                "+",
                "+(net.didierverna.clon:nickname-package)",
                "+",
                "+(defun main ()",
                "+  \"Entry point for the binary.\"",
                "+  (thrift:serve #u\"thrift://127.0.0.1:9090\" tutorial:calculator))",
                "+",
                "+(clon:dump \"TutorialServer\" main)",
                "diff --git a/tutorial/cl/shared-implementation.lisp b/tutorial/cl/shared-implementation.lisp",
                "new file mode 100644",
                "index 000000000..c197626a5",
                "--- /dev/null",
                "+++ b/tutorial/cl/shared-implementation.lisp",
                "@@ -0,0 +1,25 @@",
                "+(in-package #:shared-implementation)",
                "+",
                "+;;;; Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+;;;; you may not use this file except in compliance with the License.",
                "+;;;; You may obtain a copy of the License at",
                "+;;;;",
                "+;;;;     http://www.apache.org/licenses/LICENSE-2.0",
                "+;;;;",
                "+;;;; Unless required by applicable law or agreed to in writing, software",
                "+;;;; distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+;;;; See the License for the specific language governing permissions and",
                "+;;;; limitations under the License.",
                "+",
                "+(defvar *structs* (make-hash-table))",
                "+",
                "+(defun shared.shared-service-implementation:get-struct (key)",
                "+  (format t \"getStruct(~a)~%\" key)",
                "+  (gethash key *structs*))",
                "+",
                "+(defun add-log (key value)",
                "+  (setf (gethash key *structs*)",
                "+        (make-instance 'shared:sharedstruct",
                "+                       :key key",
                "+                       :value (write-to-string value))))",
                "diff --git a/tutorial/cl/thrift-tutorial.asd b/tutorial/cl/thrift-tutorial.asd",
                "new file mode 100644",
                "index 000000000..8a0353763",
                "--- /dev/null",
                "+++ b/tutorial/cl/thrift-tutorial.asd",
                "@@ -0,0 +1,17 @@",
                "+;;;; Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+;;;; you may not use this file except in compliance with the License.",
                "+;;;; You may obtain a copy of the License at",
                "+;;;;",
                "+;;;;     http://www.apache.org/licenses/LICENSE-2.0",
                "+;;;;",
                "+;;;; Unless required by applicable law or agreed to in writing, software",
                "+;;;; distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+;;;; See the License for the specific language governing permissions and",
                "+;;;; limitations under the License.",
                "+",
                "+(asdf:defsystem #:thrift-tutorial",
                "+  :depends-on (#:thrift-gen-tutorial)",
                "+  :serial t",
                "+  :components ((:file \"shared-implementation\")",
                "+               (:file \"tutorial-implementation\")))",
                "diff --git a/tutorial/cl/tutorial-implementation.lisp b/tutorial/cl/tutorial-implementation.lisp",
                "new file mode 100644",
                "index 000000000..5c92fe405",
                "--- /dev/null",
                "+++ b/tutorial/cl/tutorial-implementation.lisp",
                "@@ -0,0 +1,41 @@",
                "+(in-package #:tutorial-implementation)",
                "+",
                "+;;;; Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+;;;; you may not use this file except in compliance with the License.",
                "+;;;; You may obtain a copy of the License at",
                "+;;;;",
                "+;;;;     http://www.apache.org/licenses/LICENSE-2.0",
                "+;;;;",
                "+;;;; Unless required by applicable law or agreed to in writing, software",
                "+;;;; distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+;;;; See the License for the specific language governing permissions and",
                "+;;;; limitations under the License.",
                "+",
                "+(defun tutorial.calculator-implementation:ping ()",
                "+  (format t \"ping()~%\"))",
                "+",
                "+(defun tutorial.calculator-implementation:add (num1 num2)",
                "+  (format t \"add(~a, ~a)~%\" num1 num2)",
                "+  (+ num1 num2))",
                "+",
                "+(defun tutorial.calculator-implementation:calculate (logid work)",
                "+  (format t \"calculate(~a, ~a)~%\" logid work)",
                "+  (handler-case",
                "+      (let* ((num1 (tutorial:work-num1 work))",
                "+             (num2 (tutorial:work-num2 work))",
                "+             (op (tutorial:work-op work))",
                "+             (result",
                "+              (cond",
                "+                ((= op tutorial:operation.add) (+ num1 num2))",
                "+                ((= op tutorial:operation.subtract) (- num1 num2))",
                "+                ((= op tutorial:operation.multiply) (* num1 num2))",
                "+                ((= op tutorial:operation.divide) (/ num1 num2)))))",
                "+        (shared-implementation::add-log logid result)",
                "+        result)",
                "+    (division-by-zero () (error 'tutorial:invalidoperation",
                "+                                :why \"Division by zero.\"",
                "+                                :what-op (tutorial:work-op work)))))",
                "+",
                "+(defun tutorial.calculator-implementation:zip ()",
                "+  (format t \"zip()~%\"))",
                "diff --git a/tutorial/shared.thrift b/tutorial/shared.thrift",
                "index 3cc1bb34e..f1685bd16 100644",
                "--- a/tutorial/shared.thrift",
                "+++ b/tutorial/shared.thrift",
                "@@ -24,2 +24,3 @@",
                "+namespace cl shared",
                " namespace cpp shared",
                "diff --git a/tutorial/tutorial.thrift b/tutorial/tutorial.thrift",
                "index f8c5320d9..e02754644 100644",
                "--- a/tutorial/tutorial.thrift",
                "+++ b/tutorial/tutorial.thrift",
                "@@ -64,2 +64,4 @@ include \"shared.thrift\"",
                "  */",
                "+",
                "+namespace cl tutorial",
                " namespace cpp tutorial"
            ],
            "changed_files": [
                ".gitignore",
                "Makefile.am",
                "build/docker/ubuntu-artful/Dockerfile",
                "compiler/cpp/Makefile.am",
                "compiler/cpp/src/thrift/generate/t_cl_generator.cc",
                "configure.ac",
                "lib/Makefile.am",
                "lib/cl/Makefile.am",
                "lib/cl/ensure-externals.sh",
                "lib/cl/load-locally.lisp",
                "test/Makefile.am",
                "test/cl/Makefile.am",
                "test/cl/implementation.lisp",
                "test/cl/make-test-client.lisp",
                "test/cl/make-test-server.lisp",
                "test/cl/tests.lisp",
                "test/features/known_failures_Linux.json",
                "test/known_failures_Linux.json",
                "test/tests.json",
                "tutorial/Makefile.am",
                "tutorial/cl/Makefile.am",
                "tutorial/cl/make-tutorial-client.lisp",
                "tutorial/cl/make-tutorial-server.lisp",
                "tutorial/cl/shared-implementation.lisp",
                "tutorial/cl/thrift-tutorial.asd",
                "tutorial/cl/tutorial-implementation.lisp",
                "tutorial/shared.thrift",
                "tutorial/tutorial.thrift"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-82": ""
            },
            "ghissue_refs": {
                "1412": "THRIFT-82: Add Common Lisp support #1410"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: transport",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client, library",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: client, make",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-82",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1412",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8bcb7ac2be2f28e5fddfe578645c2aaa98b94717",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1516556629,
            "hunks": 18,
            "message": "THRIFT-4465: Fix C++ TNonblockingServer and THRIFT_EAGAIN issues Client: cpp This closes #1497",
            "diff": [
                "diff --git a/build/cmake/ConfigureChecks.cmake b/build/cmake/ConfigureChecks.cmake",
                "index 12a50df91..e4793d41e 100644",
                "--- a/build/cmake/ConfigureChecks.cmake",
                "+++ b/build/cmake/ConfigureChecks.cmake",
                "@@ -39,3 +39,3 @@ check_include_file(unistd.h HAVE_UNISTD_H)",
                " check_include_file(pthread.h HAVE_PTHREAD_H)",
                "-check_include_file(sys/time.h HAVE_SYS_TIME_H)",
                "+check_include_file(sys/ioctl.h HAVE_SYS_IOCTL_H)",
                " check_include_file(sys/param.h HAVE_SYS_PARAM_H)",
                "@@ -44,2 +44,3 @@ check_include_file(sys/socket.h HAVE_SYS_SOCKET_H)",
                " check_include_file(sys/stat.h HAVE_SYS_STAT_H)",
                "+check_include_file(sys/time.h HAVE_SYS_TIME_H)",
                " check_include_file(sys/un.h HAVE_SYS_UN_H)",
                "diff --git a/build/cmake/config.h.in b/build/cmake/config.h.in",
                "index 083bc55ec..21561b265 100644",
                "--- a/build/cmake/config.h.in",
                "+++ b/build/cmake/config.h.in",
                "@@ -102,4 +102,4 @@",
                "-/* Define to 1 if you have the <sys/time.h> header file. */",
                "-#cmakedefine HAVE_SYS_TIME_H 1",
                "+/* Define to 1 if you have the <sys/ioctl.h> header file. */",
                "+#cmakedefine HAVE_SYS_IOCTL_H 1",
                "@@ -126,2 +126,5 @@",
                "+/* Define to 1 if you have the <sys/time.h> header file. */",
                "+#cmakedefine HAVE_SYS_TIME_H 1",
                "+",
                " /* Define to 1 if you have the <sched.h> header file. */",
                "diff --git a/configure.ac b/configure.ac",
                "index 76348233c..9efc28b4f 100755",
                "--- a/configure.ac",
                "+++ b/configure.ac",
                "@@ -637,2 +637,3 @@ AC_CHECK_HEADERS([stddef.h])",
                " AC_CHECK_HEADERS([stdlib.h])",
                "+AC_CHECK_HEADERS([sys/ioctl.h])",
                " AC_CHECK_HEADERS([sys/socket.h])",
                "diff --git a/lib/cpp/src/thrift/server/TNonblockingServer.cpp b/lib/cpp/src/thrift/server/TNonblockingServer.cpp",
                "index d17f77c19..e60bffcaf 100644",
                "--- a/lib/cpp/src/thrift/server/TNonblockingServer.cpp",
                "+++ b/lib/cpp/src/thrift/server/TNonblockingServer.cpp",
                "@@ -474,2 +474,14 @@ void TNonblockingServer::TConnection::workSocket() {",
                "     transition();",
                "+",
                "+    // If the socket has more data than the frame header, continue to work on it. This is not strictly necessary for",
                "+    // regular sockets, because if there is more data, libevent will fire the event handler registered for read",
                "+    // readiness, which will in turn call workSocket(). However, some socket types (such as TSSLSocket) may have the",
                "+    // data sitting in their internal buffers and from libevent's perspective, there is no further data available. In",
                "+    // that case, not having this workSocket() call here would result in a hang as we will never get to work the socket,",
                "+    // despite having more data.",
                "+    if (tSocket_->hasPendingDataToRead())",
                "+    {",
                "+        workSocket();",
                "+    }",
                "+",
                "     return;",
                "@@ -679,5 +691,2 @@ void TNonblockingServer::TConnection::transition() {",
                "-      // Try to work the socket immediately",
                "-      // workSocket();",
                "-",
                "       return;",
                "@@ -720,5 +729,2 @@ void TNonblockingServer::TConnection::transition() {",
                "-    // Try to work the socket right away",
                "-    // workSocket();",
                "-",
                "     return;",
                "@@ -755,5 +761,2 @@ void TNonblockingServer::TConnection::transition() {",
                "-    // Work the socket right away",
                "-    workSocket();",
                "-",
                "     return;",
                "@@ -1065,3 +1068,3 @@ void TNonblockingServer::expireClose(stdcxx::shared_ptr<Runnable> task) {",
                "-void TNonblockingServer::stop() { ",
                "+void TNonblockingServer::stop() {",
                "   // Breaks the event loop in all threads so that they end ASAP.",
                "diff --git a/lib/cpp/src/thrift/transport/PlatformSocket.h b/lib/cpp/src/thrift/transport/PlatformSocket.h",
                "index 1890b607d..959105806 100644",
                "--- a/lib/cpp/src/thrift/transport/PlatformSocket.h",
                "+++ b/lib/cpp/src/thrift/transport/PlatformSocket.h",
                "@@ -53,2 +53,4 @@",
                " #  define THRIFT_READ _read",
                "+#  define THRIFT_IOCTL_SOCKET ioctlsocket",
                "+#  define THRIFT_IOCTL_SOCKET_NUM_BYTES_TYPE u_long",
                " #  define THRIFT_FSTAT _fstat",
                "@@ -113,2 +115,4 @@",
                " #  define THRIFT_READ read",
                "+#  define THRIFT_IOCTL_SOCKET ioctl",
                "+#  define THRIFT_IOCTL_SOCKET_NUM_BYTES_TYPE int",
                " #  define THRIFT_STAT stat",
                "diff --git a/lib/cpp/src/thrift/transport/TSSLSocket.cpp b/lib/cpp/src/thrift/transport/TSSLSocket.cpp",
                "index 3f0e28ed8..7bdacb015 100644",
                "--- a/lib/cpp/src/thrift/transport/TSSLSocket.cpp",
                "+++ b/lib/cpp/src/thrift/transport/TSSLSocket.cpp",
                "@@ -251,2 +251,13 @@ TSSLSocket::~TSSLSocket() {",
                "+bool TSSLSocket::hasPendingDataToRead() {",
                "+  if (!isOpen()) {",
                "+    return false;",
                "+  }",
                "+  initializeHandshake();",
                "+  if (!checkHandshake())",
                "+    throw TSSLException(\"TSSLSocket::hasPendingDataToRead: Handshake is not completed\");",
                "+  // data may be available in SSL buffers (note: SSL_pending does not have a failure mode)",
                "+  return SSL_pending(ssl_) > 0 || TSocket::hasPendingDataToRead();",
                "+}",
                "+",
                " void TSSLSocket::init() {",
                "diff --git a/lib/cpp/src/thrift/transport/TSSLSocket.h b/lib/cpp/src/thrift/transport/TSSLSocket.h",
                "index 852720930..ec30cc149 100644",
                "--- a/lib/cpp/src/thrift/transport/TSSLSocket.h",
                "+++ b/lib/cpp/src/thrift/transport/TSSLSocket.h",
                "@@ -80,2 +80,3 @@ public:",
                "   void close();",
                "+  bool hasPendingDataToRead();",
                "   uint32_t read(uint8_t* buf, uint32_t len);",
                "diff --git a/lib/cpp/src/thrift/transport/TSocket.cpp b/lib/cpp/src/thrift/transport/TSocket.cpp",
                "index d93d0ffd4..c90593d75 100644",
                "--- a/lib/cpp/src/thrift/transport/TSocket.cpp",
                "+++ b/lib/cpp/src/thrift/transport/TSocket.cpp",
                "@@ -23,2 +23,5 @@",
                " #include <sstream>",
                "+#ifdef HAVE_SYS_IOCTL_H",
                "+#include <sys/ioctl.h>",
                "+#endif",
                " #ifdef HAVE_SYS_SOCKET_H",
                "@@ -169,2 +172,22 @@ TSocket::~TSocket() {",
                "+bool TSocket::hasPendingDataToRead() {",
                "+  if (!isOpen()) {",
                "+    return false;",
                "+  }",
                "+",
                "+  int32_t retries = 0;",
                "+  THRIFT_IOCTL_SOCKET_NUM_BYTES_TYPE numBytesAvailable;",
                "+try_again:",
                "+  int r = THRIFT_IOCTL_SOCKET(socket_, FIONREAD, &numBytesAvailable);",
                "+  if (r == -1) {",
                "+    int errno_copy = THRIFT_GET_SOCKET_ERROR;",
                "+    if (errno_copy == THRIFT_EINTR && (retries++ < maxRecvRetries_)) {",
                "+      goto try_again;",
                "+    }",
                "+    GlobalOutput.perror(\"TSocket::hasPendingDataToRead() THRIFT_IOCTL_SOCKET() \" + getSocketInfo(), errno_copy);",
                "+    throw TTransportException(TTransportException::UNKNOWN, \"Unknown\", errno_copy);",
                "+  }",
                "+  return numBytesAvailable > 0;",
                "+}",
                "+",
                " bool TSocket::isOpen() {",
                "diff --git a/lib/cpp/src/thrift/transport/TSocket.h b/lib/cpp/src/thrift/transport/TSocket.h",
                "index 1f95e68bd..66d9e6cd3 100644",
                "--- a/lib/cpp/src/thrift/transport/TSocket.h",
                "+++ b/lib/cpp/src/thrift/transport/TSocket.h",
                "@@ -86,3 +86,5 @@ public:",
                "   /**",
                "-   * Calls select on the socket to see if there is more data available.",
                "+   * Checks whether there is more data available in the socket to read.",
                "+   *",
                "+   * This call blocks until at least one byte is available or the socket is closed.",
                "    */",
                "@@ -102,2 +104,13 @@ public:",
                "+  /**",
                "+   * Determines whether there is pending data to read or not.",
                "+   *",
                "+   * This call does not block.",
                "+   * \\throws TTransportException of types:",
                "+   *           NOT_OPEN means the socket has been closed",
                "+   *           UNKNOWN means something unexpected happened",
                "+   * \\returns true if there is pending data to read, false otherwise",
                "+   */",
                "+  virtual bool hasPendingDataToRead();",
                "+",
                "   /**"
            ],
            "changed_files": [
                "build/cmake/ConfigureChecks.cmake",
                "build/cmake/config.h.in",
                "configure.ac",
                "lib/cpp/src/thrift/server/TNonblockingServer.cpp",
                "lib/cpp/src/thrift/transport/PlatformSocket.h",
                "lib/cpp/src/thrift/transport/TSSLSocket.cpp",
                "lib/cpp/src/thrift/transport/TSSLSocket.h",
                "lib/cpp/src/thrift/transport/TSocket.cpp",
                "lib/cpp/src/thrift/transport/TSocket.h"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4465": ""
            },
            "ghissue_refs": {
                "1497": "Remove premature call to workSocket() in TNonblockingServer #1476"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: lib/cpp/src/thrift/transport/TSocket.cpp, lib/cpp/src/thrift/transport/TSSLSocket.h, lib/cpp/src/thrift/transport/PlatformSocket.h, lib/cpp/src/thrift/transport/TSocket.h, lib/cpp/src/thrift/transport/TSSLSocket.cpp",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: make",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4465",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1497",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2bf03270bbead52344daa2252c517f0ccc0db040",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520883334,
            "hunks": 2,
            "message": "THRIFT-4337: fix javadoc build error related to changes",
            "diff": [
                "diff --git a/lib/java/src/org/apache/thrift/transport/TSSLTransportFactory.java b/lib/java/src/org/apache/thrift/transport/TSSLTransportFactory.java",
                "index 14b49e9d0..2232a315c 100644",
                "--- a/lib/java/src/org/apache/thrift/transport/TSSLTransportFactory.java",
                "+++ b/lib/java/src/org/apache/thrift/transport/TSSLTransportFactory.java",
                "@@ -371,3 +371,3 @@ public class TSSLTransportFactory {",
                "      *",
                "-     * @param keyStore Keystore content input stream",
                "+     * @param keyStoreStream Keystore content input stream",
                "      * @param keyPass Keystore password",
                "@@ -424,3 +424,3 @@ public class TSSLTransportFactory {",
                "      *",
                "-     * @param trustStore Truststore content input stream",
                "+     * @param trustStoreStream Truststore content input stream",
                "      * @param trustPass Truststore password"
            ],
            "changed_files": [
                "lib/java/src/org/apache/thrift/transport/TSSLTransportFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4337": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: lib/java/src/org/apache/thrift/transport/TSSLTransportFactory.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: java",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: java",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4337",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3ae304268e1b058dc51642a83921e1d7ce7a1d12",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520854402,
            "hunks": 5,
            "message": "THRIFT-4515: fix windows build Client: cpp",
            "diff": [
                "diff --git a/build/cmake/DefinePlatformSpecifc.cmake b/build/cmake/DefinePlatformSpecifc.cmake",
                "index f4434891c..8af4b6c91 100644",
                "--- a/build/cmake/DefinePlatformSpecifc.cmake",
                "+++ b/build/cmake/DefinePlatformSpecifc.cmake",
                "@@ -92,2 +92,3 @@ endif()",
                " add_definitions(\"-D__STDC_FORMAT_MACROS\")",
                "+add_definitions(\"-D__STDC_LIMIT_MACROS\")",
                "diff --git a/lib/cpp/src/thrift/transport/TBufferTransports.cpp b/lib/cpp/src/thrift/transport/TBufferTransports.cpp",
                "index 1d2692dca..9ac2f844b 100644",
                "--- a/lib/cpp/src/thrift/transport/TBufferTransports.cpp",
                "+++ b/lib/cpp/src/thrift/transport/TBufferTransports.cpp",
                "@@ -370,3 +370,3 @@ void TMemoryBuffer::ensureCanWrite(uint32_t len) {",
                "     }",
                "-    avail = available_write() + (new_size - bufferSize_);",
                "+    avail = available_write() + (static_cast<uint32_t>(new_size) - bufferSize_);",
                "   }",
                "@@ -384,3 +384,3 @@ void TMemoryBuffer::ensureCanWrite(uint32_t len) {",
                "   buffer_ = new_buffer;",
                "-  bufferSize_ = new_size;",
                "+  bufferSize_ = static_cast<uint32_t>(new_size);",
                " }",
                "diff --git a/test/cpp/src/TestServer.cpp b/test/cpp/src/TestServer.cpp",
                "index 6b4df7d7b..b93e5ea20 100644",
                "--- a/test/cpp/src/TestServer.cpp",
                "+++ b/test/cpp/src/TestServer.cpp",
                "@@ -116,3 +116,3 @@ public:",
                "     hexstr << std::hex << thing;",
                "-    printf(\"testBinary(%lu: %s)\\n\", thing.size(), hexstr.str().c_str());",
                "+    printf(\"testBinary(%lu: %s)\\n\", safe_numeric_cast<unsigned long>(thing.size()), hexstr.str().c_str());",
                "     _return = thing;",
                "@@ -798,3 +798,3 @@ int main(int argc, char** argv) {",
                "     while (1) {",
                "-\t\tsleep(1);\t// do something other than chew up CPU like crazy",
                "+\t\t  THRIFT_SLEEP_SEC(1);\t// do something other than chew up CPU like crazy",
                "     }"
            ],
            "changed_files": [
                "build/cmake/DefinePlatformSpecifc.cmake",
                "lib/cpp/src/thrift/transport/TBufferTransports.cpp",
                "test/cpp/src/TestServer.cpp"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4515": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: lib/cpp/src/thrift/transport/TBufferTransports.cpp",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: make",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4515",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "14991f904184cc57b5d3e74a4266a0d6fbaf4832",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520347653,
            "hunks": 1,
            "message": "THRIFT-4354: fix php socket blocking behavior Patch: Robert Lu <robberphex@gmail.com> Client: php This closes #1384",
            "diff": [
                "diff --git a/lib/php/lib/Transport/TSocket.php b/lib/php/lib/Transport/TSocket.php",
                "index 93bd1cfb8..5147efa63 100644",
                "--- a/lib/php/lib/Transport/TSocket.php",
                "+++ b/lib/php/lib/Transport/TSocket.php",
                "@@ -140,2 +140,3 @@ class TSocket extends TTransport",
                "         $this->handle_ = $handle;",
                "+        stream_set_blocking($this->handle_, false);",
                "     }"
            ],
            "changed_files": [
                "lib/php/lib/Transport/TSocket.php"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4354": ""
            },
            "ghissue_refs": {
                "1384": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: lib/php/lib/Transport/TSocket.php",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4354",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1384",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "70b33fb6b48d62859a048cac1bec79cfadb2f310",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520780230,
            "hunks": 11,
            "message": "THRIFT-4515: fix up nonblocking options and enable ssl for nonblocking in cpp server cross Client: cpp",
            "diff": [
                "diff --git a/test/cpp/src/TestServer.cpp b/test/cpp/src/TestServer.cpp",
                "index 78b0a742b..6b4df7d7b 100644",
                "--- a/test/cpp/src/TestServer.cpp",
                "+++ b/test/cpp/src/TestServer.cpp",
                "@@ -35,2 +35,3 @@",
                " #include <thrift/transport/THttpTransport.h>",
                "+#include <thrift/transport/TNonblockingSSLServerSocket.h>",
                " #include <thrift/transport/TNonblockingServerSocket.h>",
                "@@ -678,3 +679,5 @@ int main(int argc, char** argv) {",
                "     sslSocketFactory->ciphers(\"ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH\");",
                "-    serverSocket = stdcxx::shared_ptr<TServerSocket>(new TSSLServerSocket(port, sslSocketFactory));",
                "+    if (server_type != \"nonblocking\") {",
                "+      serverSocket = stdcxx::shared_ptr<TServerSocket>(new TSSLServerSocket(port, sslSocketFactory));",
                "+    }",
                "   } else {",
                "@@ -740,4 +743,2 @@ int main(int argc, char** argv) {",
                "-    stdcxx::shared_ptr<ThreadManager> threadManager = ThreadManager::newSimpleThreadManager(workers);",
                "-",
                "     stdcxx::shared_ptr<PlatformThreadFactory> threadFactory",
                "@@ -745,4 +746,4 @@ int main(int argc, char** argv) {",
                "+    stdcxx::shared_ptr<ThreadManager> threadManager = ThreadManager::newSimpleThreadManager(workers);",
                "     threadManager->threadFactory(threadFactory);",
                "-",
                "     threadManager->start();",
                "@@ -755,3 +756,2 @@ int main(int argc, char** argv) {",
                "   } else if (server_type == \"threaded\") {",
                "-",
                "     server.reset(",
                "@@ -771,6 +771,11 @@ int main(int argc, char** argv) {",
                "       nonblockingServer.serve();",
                "-    } else {",
                "-      stdcxx::shared_ptr<transport::TNonblockingServerSocket> nbSocket;",
                "-      nbSocket.reset(new transport::TNonblockingServerSocket(port));",
                "+    } else if (transport_type == \"framed\") {",
                "+\t  stdcxx::shared_ptr<transport::TNonblockingServerTransport> nbSocket;",
                "+\t  nbSocket.reset(",
                "+\t\tssl ? new transport::TNonblockingSSLServerSocket(port, sslSocketFactory)",
                "+\t\t    : new transport::TNonblockingServerSocket(port));",
                "       server.reset(new TNonblockingServer(testProcessor, protocolFactory, nbSocket));",
                "+    } else {",
                "+\t  cerr << \"server-type nonblocking requires transport of http or framed\" << endl;",
                "+\t  exit(1);",
                "     }",
                "@@ -791,9 +796,7 @@ int main(int argc, char** argv) {",
                "-    // HACK: cross language test suite is unable to handle cin properly",
                "-    //       that's why we stay in a endless loop here",
                "+\t// THRIFT-4515: this needs to be improved",
                "     while (1) {",
                "+\t\tsleep(1);\t// do something other than chew up CPU like crazy",
                "     }",
                "-    // FIXME: find another way to stop the server (e.g. a signal)",
                "-    // cout<<\"Press enter to stop the server.\"<<endl;",
                "-    // cin.ignore(); //wait until a key is pressed",
                "+\t// NOTREACHED"
            ],
            "changed_files": [
                "test/cpp/src/TestServer.cpp"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4515": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: transport",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4515",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "68707d92192ffc82a98488e4cdd1033e20cdf3a5",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1516189239,
            "hunks": 38,
            "message": "THRIFT-4474: Use PSR-4 autoloader by default Client: php This closes #1479",
            "diff": [
                "diff --git a/compiler/cpp/src/thrift/generate/t_php_generator.cc b/compiler/cpp/src/thrift/generate/t_php_generator.cc",
                "index ea2801125..6ab6bf8eb 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_php_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_php_generator.cc",
                "@@ -64,3 +64,3 @@ public:",
                "     nsglobal_ = \"\"; // by default global namespace is empty",
                "-    psr4_ = false;",
                "+    classmap_ = false;",
                "     for (iter = parsed_options.begin(); iter != parsed_options.end(); ++iter) {",
                "@@ -80,4 +80,10 @@ public:",
                "         nsglobal_ = iter->second;",
                "+      } else if (iter->first.compare(\"classmap\") == 0) {",
                "+        classmap_ = true;",
                "       } else if (iter->first.compare(\"psr4\") == 0) {",
                "-        psr4_ = true;",
                "+        if(classmap_){",
                "+          throw \"psr4 and classmap are mutually exclusive.\";",
                "+        } else {",
                "+          pwarning(0, \"psr4 is default option! needn't add psr4 option!\\n\");",
                "+        }",
                "       } else {",
                "@@ -378,5 +384,5 @@ private:",
                "   /**",
                "-   * Whether to hold each class in separate file to allow PSR4-autoloading",
                "+   * Whether to generate old-style PHP file to use classmap autoloading",
                "    */",
                "-  bool psr4_;",
                "+  bool classmap_;",
                "@@ -421,4 +427,4 @@ void t_php_generator::init_generator() {",
                "-  // Prepare output file for all the types in non-psr4 mode",
                "-  if (!psr4_) {",
                "+  // Prepare output file for all the types in classmap mode",
                "+  if (classmap_) {",
                "     // Make output file",
                "@@ -455,3 +461,3 @@ string t_php_generator::php_includes() {",
                " void t_php_generator::close_generator() {",
                "-  if (!psr4_) {",
                "+  if (classmap_) {",
                "     // Close types file",
                "@@ -506,3 +512,3 @@ void t_php_generator::generate_enum(t_enum* tenum) {",
                "   std::ofstream& f_enum = f_types_;",
                "-  if (psr4_) {",
                "+  if (!classmap_) {",
                "     string f_enum_name = package_dir_ + tenum->get_name() + \".php\";",
                "@@ -543,3 +549,3 @@ void t_php_generator::generate_enum(t_enum* tenum) {",
                "   f_enum << \"}\" << endl << endl;",
                "-  if (psr4_) {",
                "+  if (!classmap_) {",
                "     f_enum.close();",
                "@@ -560,3 +566,3 @@ void t_php_generator::generate_consts(vector<t_const*> consts) {",
                "     std::ofstream& f_consts = f_types_;",
                "-    if (psr4_) {",
                "+    if (!classmap_) {",
                "       string f_consts_name = package_dir_ + \"Constant.php\";",
                "@@ -598,3 +604,3 @@ void t_php_generator::generate_consts(vector<t_const*> consts) {",
                "     f_consts << \"}\" << endl;",
                "-    if (psr4_) {",
                "+    if (!classmap_) {",
                "       f_consts.close();",
                "@@ -727,3 +733,3 @@ void t_php_generator::generate_php_struct(t_struct* tstruct, bool is_exception)",
                "   std::ofstream& f_struct = f_types_;",
                "-  if (psr4_) {",
                "+  if (!classmap_) {",
                "     string f_struct_name = package_dir_ + tstruct->get_name() + \".php\";",
                "@@ -733,3 +739,3 @@ void t_php_generator::generate_php_struct(t_struct* tstruct, bool is_exception)",
                "   generate_php_struct_definition(f_struct, tstruct, is_exception);",
                "-  if (psr4_) {",
                "+  if (!classmap_) {",
                "     f_struct.close();",
                "@@ -1246,3 +1252,3 @@ bool t_php_generator::needs_php_read_validator(t_struct* tstruct, bool is_result",
                " void t_php_generator::generate_service(t_service* tservice) {",
                "-  if(!psr4_) {",
                "+  if(classmap_) {",
                "     string f_service_name = package_dir_ + service_name_ + \".php\";",
                "@@ -1263,3 +1269,3 @@ void t_php_generator::generate_service(t_service* tservice) {",
                "-  if(!psr4_) {",
                "+  if(classmap_) {",
                "     // Close service file",
                "@@ -1277,3 +1283,3 @@ void t_php_generator::generate_service_processor(t_service* tservice) {",
                "   std::ofstream& f_service_processor = f_service_;",
                "-  if (psr4_) {",
                "+  if (!classmap_) {",
                "     string f_service_processor_name = package_dir_ + service_name_ + \"Processor.php\";",
                "@@ -1372,3 +1378,3 @@ void t_php_generator::generate_service_processor(t_service* tservice) {",
                "-  if (psr4_) {",
                "+  if (!classmap_) {",
                "     f_service_processor.close();",
                "@@ -1541,3 +1547,3 @@ void t_php_generator::generate_service_helpers(t_service* tservice) {",
                "   std::ofstream& f_struct_definition = f_service_;",
                "-  if (!psr4_) {",
                "+  if (classmap_) {",
                "     f_struct_definition << \"// HELPER FUNCTIONS AND STRUCTURES\" << endl << endl;",
                "@@ -1550,3 +1556,3 @@ void t_php_generator::generate_service_helpers(t_service* tservice) {",
                "-    if (psr4_) {",
                "+    if (!classmap_) {",
                "       string f_struct_definition_name = package_dir_ + service_name_ + \"_\" + name + \".php\";",
                "@@ -1557,3 +1563,3 @@ void t_php_generator::generate_service_helpers(t_service* tservice) {",
                "     generate_php_struct_definition(f_struct_definition, ts);",
                "-    if (psr4_) {",
                "+    if (!classmap_) {",
                "       f_struct_definition.close();",
                "@@ -1587,3 +1593,3 @@ void t_php_generator::generate_php_function_helpers(t_service* tservice, t_funct",
                "     std::ofstream& f_struct_helper = f_service_;",
                "-    if (psr4_) {",
                "+    if (!classmap_) {",
                "       string f_struct_helper_name = package_dir_ + result.get_name() + \".php\";",
                "@@ -1593,3 +1599,3 @@ void t_php_generator::generate_php_function_helpers(t_service* tservice, t_funct",
                "     generate_php_struct_definition(f_struct_helper, &result, false, true);",
                "-    if (psr4_) {",
                "+    if (!classmap_) {",
                "       f_struct_helper.close();",
                "@@ -1606,3 +1612,3 @@ void t_php_generator::generate_service_interface(t_service* tservice) {",
                "   std::ofstream& f_service_interface = f_service_;",
                "-  if (psr4_) {",
                "+  if (!classmap_) {",
                "     string f_service_interface_name = package_dir_ + service_name_ + \"If.php\";",
                "@@ -1635,3 +1641,3 @@ void t_php_generator::generate_service_interface(t_service* tservice) {",
                "   // Close service interface file",
                "-  if (psr4_) {",
                "+  if (!classmap_) {",
                "     f_service_interface.close();",
                "@@ -1645,3 +1651,3 @@ void t_php_generator::generate_service_rest(t_service* tservice) {",
                "   std::ofstream& f_service_rest = f_service_;",
                "-  if (psr4_) {",
                "+  if (!classmap_) {",
                "     string f_service_rest_name = package_dir_ + service_name_ + \"Rest.php\";",
                "@@ -1714,3 +1720,3 @@ void t_php_generator::generate_service_rest(t_service* tservice) {",
                "   f_service_rest << endl;",
                "-  if (psr4_) {",
                "+  if (!classmap_) {",
                "     f_service_rest.close();",
                "@@ -1726,3 +1732,3 @@ void t_php_generator::generate_service_client(t_service* tservice) {",
                "   std::ofstream& f_service_client = f_service_;",
                "-  if (psr4_) {",
                "+  if (!classmap_) {",
                "     string f_service_client_name = package_dir_ + service_name_ + \"Client.php\";",
                "@@ -1981,3 +1987,3 @@ void t_php_generator::generate_service_client(t_service* tservice) {",
                "   // Close service client file",
                "-  if (psr4_) {",
                "+  if (!classmap_) {",
                "     f_service_client.close();",
                "@@ -2774,3 +2780,3 @@ THRIFT_REGISTER_GENERATOR(",
                "     \"    oop:             Generate PHP with object oriented subclasses\\n\"",
                "-    \"    psr4:            Generate each PHP class in separate file (allows PSR4 autoloading)\\n\"",
                "+    \"    classmap:        Generate old-style PHP files (use classmap autoloading)\\n\"",
                "     \"    rest:            Generate PHP REST processors\\n\"",
                "diff --git a/test/php/Makefile.am b/test/php/Makefile.am",
                "index 28357f6be..72f7fc581 100755",
                "--- a/test/php/Makefile.am",
                "+++ b/test/php/Makefile.am",
                "@@ -22,4 +22,4 @@ stubs: ../ThriftTest.thrift",
                " \t$(THRIFT) --gen php:inlined ../ThriftTest.thrift",
                "-\t$(MKDIR_P) gen-php-psr4",
                "-\t$(THRIFT) -out gen-php-psr4 --gen php:psr4 ../ThriftTest.thrift",
                "+\t$(MKDIR_P) gen-php-classmap",
                "+\t$(THRIFT) -out gen-php-classmap --gen php ../ThriftTest.thrift",
                "@@ -35,3 +35,3 @@ check: stubs php_ext_dir",
                " clean-local:",
                "-\t$(RM) -r gen-php gen-phpi gen-php-psr4 php_ext_dir",
                "+\t$(RM) -r gen-php gen-phpi gen-php-classmap php_ext_dir",
                "diff --git a/test/php/TestClassmap.php b/test/php/TestClassmap.php",
                "new file mode 100644",
                "index 000000000..6fd159437",
                "--- /dev/null",
                "+++ b/test/php/TestClassmap.php",
                "@@ -0,0 +1,23 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements. See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership. The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License. You may obtain a copy of the License at",
                "+ *",
                "+ *   http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied. See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+",
                "+<?php",
                "+$GEN_DIR = 'gen-php-classmap';",
                "+include_once('TestClient.php');",
                "+?>",
                "diff --git a/test/php/TestClient.php b/test/php/TestClient.php",
                "index aa42e09d3..acd901d88 100755",
                "--- a/test/php/TestClient.php",
                "+++ b/test/php/TestClient.php",
                "@@ -4,3 +4,4 @@ namespace test\\php;",
                "-require_once __DIR__.'/../../vendor/autoload.php';",
                "+/** @var \\Composer\\Autoload\\ClassLoader $loader */",
                "+$loader = require __DIR__ . '/../../vendor/autoload.php';",
                "@@ -15,9 +16,10 @@ if (!isset($MODE)) {",
                "-$loader = new ThriftClassLoader();",
                "-if ($GEN_DIR === 'gen-php-psr4') {",
                "-  $loader->registerNamespace('ThriftTest', $GEN_DIR);",
                "+",
                "+if ($GEN_DIR == 'gen-php') {",
                "+  $loader->addPsr4('', $GEN_DIR);",
                " } else {",
                "+  $loader = new ThriftClassLoader();",
                "   $loader->registerDefinition('ThriftTest', $GEN_DIR);",
                "+  $loader->register();",
                " }",
                "-$loader->register();",
                "@@ -95,3 +97,3 @@ foreach ($argv as $arg) {",
                "     $PROTO = substr($arg, 11);",
                "-  } ",
                "+  }",
                " }"
            ],
            "changed_files": [
                "compiler/cpp/src/thrift/generate/t_php_generator.cc",
                "test/php/Makefile.am",
                "test/php/TestClassmap.php",
                "test/php/TestClient.php"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4474": "",
                "PSR-4": ""
            },
            "ghissue_refs": {
                "1479": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: class, client, make",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4474, PSR-4",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1479",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "da9a9bac92550f676e170e600d4be24769e14835",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1517303376,
            "hunks": 9,
            "message": "THRIFT-4429: Make TThreadPoolServer.executorService_ available in inherited classes and refactor methods to be able customization Client: java This closes #1485",
            "diff": [
                "diff --git a/lib/java/src/org/apache/thrift/AsyncProcessFunction.java b/lib/java/src/org/apache/thrift/AsyncProcessFunction.java",
                "index 550ebd532..483c8d054 100644",
                "--- a/lib/java/src/org/apache/thrift/AsyncProcessFunction.java",
                "+++ b/lib/java/src/org/apache/thrift/AsyncProcessFunction.java",
                "@@ -22,3 +22,2 @@ import org.apache.thrift.async.AsyncMethodCallback;",
                " import org.apache.thrift.protocol.TMessage;",
                "-import org.apache.thrift.protocol.TMessageType;",
                " import org.apache.thrift.protocol.TProtocol;",
                "diff --git a/lib/java/src/org/apache/thrift/TAsyncProcessor.java b/lib/java/src/org/apache/thrift/TAsyncProcessor.java",
                "index 0a069ea00..533e74d86 100644",
                "--- a/lib/java/src/org/apache/thrift/TAsyncProcessor.java",
                "+++ b/lib/java/src/org/apache/thrift/TAsyncProcessor.java",
                "@@ -20,10 +20,3 @@ package org.apache.thrift;",
                "-import org.apache.thrift.protocol.*;",
                "-",
                "-import org.apache.thrift.server.AbstractNonblockingServer.*;",
                "-import org.slf4j.Logger;",
                "-import org.slf4j.LoggerFactory;",
                "-",
                "-import java.util.Collections;",
                "-import java.util.Map;",
                "+import org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer;",
                "diff --git a/lib/java/src/org/apache/thrift/TEnumHelper.java b/lib/java/src/org/apache/thrift/TEnumHelper.java",
                "index c17d661c2..fbc778751 100644",
                "--- a/lib/java/src/org/apache/thrift/TEnumHelper.java",
                "+++ b/lib/java/src/org/apache/thrift/TEnumHelper.java",
                "@@ -21,3 +21,2 @@ package org.apache.thrift;",
                "-import java.lang.InstantiationException;",
                " import java.lang.NoSuchMethodException;",
                "diff --git a/lib/java/src/org/apache/thrift/server/TThreadPoolServer.java b/lib/java/src/org/apache/thrift/server/TThreadPoolServer.java",
                "index 90d5e5b04..53c20e98f 100644",
                "--- a/lib/java/src/org/apache/thrift/server/TThreadPoolServer.java",
                "+++ b/lib/java/src/org/apache/thrift/server/TThreadPoolServer.java",
                "@@ -147,5 +147,8 @@ public class TThreadPoolServer extends TServer {",
                "-",
                "-  public void serve() {",
                "-    try {",
                "+  protected ExecutorService getExecutorService() {",
                "+    return executorService_;",
                "+  }",
                "+  ",
                "+  protected boolean preServe() {",
                "+  \ttry {",
                "       serverTransport_.listen();",
                "@@ -153,3 +156,3 @@ public class TThreadPoolServer extends TServer {",
                "       LOGGER.error(\"Error occurred during listening.\", ttx);",
                "-      return;",
                "+      return false;",
                "     }",
                "@@ -160,5 +163,20 @@ public class TThreadPoolServer extends TServer {",
                "     }",
                "-",
                "     stopped_ = false;",
                "     setServing(true);",
                "+    ",
                "+    return true;",
                "+  }",
                "+",
                "+  public void serve() {",
                "+  \tif (!preServe()) {",
                "+  \t\treturn;",
                "+  \t}",
                "+",
                "+  \texecute();",
                "+  \twaitForShutdown();",
                "+    ",
                "+    setServing(false);",
                "+  }",
                "+  ",
                "+  protected void execute() {",
                "     int failureCount = 0;",
                "@@ -215,4 +233,6 @@ public class TThreadPoolServer extends TServer {",
                "     }",
                "-",
                "-    executorService_.shutdown();",
                "+  }",
                "+  ",
                "+  protected void waitForShutdown() {",
                "+  \texecutorService_.shutdown();",
                "@@ -234,3 +254,2 @@ public class TThreadPoolServer extends TServer {",
                "     }",
                "-    setServing(false);",
                "   }"
            ],
            "changed_files": [
                "lib/java/src/org/apache/thrift/AsyncProcessFunction.java",
                "lib/java/src/org/apache/thrift/TAsyncProcessor.java",
                "lib/java/src/org/apache/thrift/TEnumHelper.java",
                "lib/java/src/org/apache/thrift/server/TThreadPoolServer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4429": ""
            },
            "ghissue_refs": {
                "1485": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: class, client, make, java",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: java",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4429",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1485",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a9efd1abd4fd4862d8e967ec207015af79494b6c",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1521114757,
            "hunks": 47,
            "message": "THRIFT-4516: Fix \"go vet\" warnings for Go 1.10 Client: go",
            "diff": [
                "diff --git a/build/docker/ubuntu-artful/Dockerfile b/build/docker/ubuntu-artful/Dockerfile",
                "index dacaa2879..181c0fe53 100644",
                "--- a/build/docker/ubuntu-artful/Dockerfile",
                "+++ b/build/docker/ubuntu-artful/Dockerfile",
                "@@ -144,5 +144,5 @@ RUN apt-get install -y --no-install-recommends \\",
                " # golang",
                "-ENV GOLANG_VERSION 1.9.4",
                "+ENV GOLANG_VERSION 1.10",
                " ENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz",
                "-ENV GOLANG_DOWNLOAD_SHA256 15b0937615809f87321a457bb1265f946f9f6e736c563d6c5e0bd2c22e44f779",
                "+ENV GOLANG_DOWNLOAD_SHA256 b5a64335f1490277b585832d1f6c7f8c6c11206cba5cd3f771dcb87b98ad1a33",
                " RUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz && \\",
                "diff --git a/lib/go/thrift/application_exception_test.go b/lib/go/thrift/application_exception_test.go",
                "index b2687a6c8..77433575d 100644",
                "--- a/lib/go/thrift/application_exception_test.go",
                "+++ b/lib/go/thrift/application_exception_test.go",
                "@@ -31,3 +31,3 @@ func TestTApplicationException(t *testing.T) {",
                " \tif exc.TypeId() != UNKNOWN_APPLICATION_EXCEPTION {",
                "-\t\tt.Fatalf(\"Expected type UNKNOWN for exception but found '%s'\", exc.TypeId())",
                "+\t\tt.Fatalf(\"Expected type UNKNOWN for exception but found '%v'\", exc.TypeId())",
                " \t}",
                "@@ -38,3 +38,3 @@ func TestTApplicationException(t *testing.T) {",
                " \tif exc.TypeId() != WRONG_METHOD_NAME {",
                "-\t\tt.Fatalf(\"Expected type WRONG_METHOD_NAME for exception but found '%s'\", exc.TypeId())",
                "+\t\tt.Fatalf(\"Expected type WRONG_METHOD_NAME for exception but found '%v'\", exc.TypeId())",
                " \t}",
                "diff --git a/lib/go/thrift/compact_protocol.go b/lib/go/thrift/compact_protocol.go",
                "index fc1d18287..66fbf5c33 100644",
                "--- a/lib/go/thrift/compact_protocol.go",
                "+++ b/lib/go/thrift/compact_protocol.go",
                "@@ -809,3 +809,3 @@ func (p *TCompactProtocol) getTType(t tCompactType) (TType, error) {",
                " \t}",
                "-\treturn STOP, TException(fmt.Errorf(\"don't know what type: %s\", t&0x0f))",
                "+\treturn STOP, TException(fmt.Errorf(\"don't know what type: %v\", t&0x0f))",
                " }",
                "diff --git a/lib/go/thrift/json_protocol_test.go b/lib/go/thrift/json_protocol_test.go",
                "index 0902f1b21..59c4d64a2 100644",
                "--- a/lib/go/thrift/json_protocol_test.go",
                "+++ b/lib/go/thrift/json_protocol_test.go",
                "@@ -593,3 +593,3 @@ func TestWriteJSONProtocolMap(t *testing.T) {",
                " \tif str[0] != '[' || str[len(str)-1] != ']' {",
                "-\t\tt.Fatalf(\"Bad value for %s, wrote: %q, in go: %q\", thetype, str, DOUBLE_VALUES)",
                "+\t\tt.Fatalf(\"Bad value for %s, wrote: %v, in go: %v\", thetype, str, DOUBLE_VALUES)",
                " \t}",
                "diff --git a/lib/go/thrift/protocol_test.go b/lib/go/thrift/protocol_test.go",
                "index 2e3b65df9..e9118da88 100644",
                "--- a/lib/go/thrift/protocol_test.go",
                "+++ b/lib/go/thrift/protocol_test.go",
                "@@ -230,3 +230,3 @@ func ReadWriteBool(t testing.TB, p TProtocol, trans TTransport) {",
                " \t\tif err != nil {",
                "-\t\t\tt.Errorf(\"%s: %T %T %q Error writing bool in list at index %d: %q\", \"ReadWriteBool\", p, trans, err, k, v)",
                "+\t\t\tt.Errorf(\"%s: %T %T %v Error writing bool in list at index %v: %v\", \"ReadWriteBool\", p, trans, err, k, v)",
                " \t\t}",
                "@@ -235,3 +235,3 @@ func ReadWriteBool(t testing.TB, p TProtocol, trans TTransport) {",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"%s: %T %T %q Error writing list end: %q\", \"ReadWriteBool\", p, trans, err, BOOL_VALUES)",
                "+\t\tt.Errorf(\"%s: %T %T %v Error writing list end: %v\", \"ReadWriteBool\", p, trans, err, BOOL_VALUES)",
                " \t}",
                "@@ -240,3 +240,3 @@ func ReadWriteBool(t testing.TB, p TProtocol, trans TTransport) {",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"%s: %T %T %q Error reading list: %q\", \"ReadWriteBool\", p, trans, err, BOOL_VALUES)",
                "+\t\tt.Errorf(\"%s: %T %T %v Error reading list: %v\", \"ReadWriteBool\", p, trans, err, BOOL_VALUES)",
                " \t}",
                "@@ -248,3 +248,3 @@ func ReadWriteBool(t testing.TB, p TProtocol, trans TTransport) {",
                " \t\tif thelen != thelen2 {",
                "-\t\t\tt.Errorf(\"%s: %T %T len %s != len %s\", \"ReadWriteBool\", p, trans, thelen, thelen2)",
                "+\t\t\tt.Errorf(\"%s: %T %T len %v != len %v\", \"ReadWriteBool\", p, trans, thelen, thelen2)",
                " \t\t}",
                "@@ -254,6 +254,6 @@ func ReadWriteBool(t testing.TB, p TProtocol, trans TTransport) {",
                " \t\tif err != nil {",
                "-\t\t\tt.Errorf(\"%s: %T %T %q Error reading bool at index %d: %q\", \"ReadWriteBool\", p, trans, err, k, v)",
                "+\t\t\tt.Errorf(\"%s: %T %T %v Error reading bool at index %v: %v\", \"ReadWriteBool\", p, trans, err, k, v)",
                " \t\t}",
                " \t\tif v != value {",
                "-\t\t\tt.Errorf(\"%s: index %d %q %q %q != %q\", \"ReadWriteBool\", k, p, trans, v, value)",
                "+\t\t\tt.Errorf(\"%s: index %v %v %v %v != %v\", \"ReadWriteBool\", k, p, trans, v, value)",
                " \t\t}",
                "@@ -297,3 +297,3 @@ func ReadWriteByte(t testing.TB, p TProtocol, trans TTransport) {",
                " \t\tif thelen != thelen2 {",
                "-\t\t\tt.Errorf(\"%s: %T %T len %s != len %s\", \"ReadWriteByte\", p, trans, thelen, thelen2)",
                "+\t\t\tt.Errorf(\"%s: %T %T len %v != len %v\", \"ReadWriteByte\", p, trans, thelen, thelen2)",
                " \t\t}",
                "@@ -334,3 +334,3 @@ func ReadWriteI16(t testing.TB, p TProtocol, trans TTransport) {",
                " \t\tif thelen != thelen2 {",
                "-\t\t\tt.Errorf(\"%s: %T %T len %s != len %s\", \"ReadWriteI16\", p, trans, thelen, thelen2)",
                "+\t\t\tt.Errorf(\"%s: %T %T len %v != len %v\", \"ReadWriteI16\", p, trans, thelen, thelen2)",
                " \t\t}",
                "@@ -371,3 +371,3 @@ func ReadWriteI32(t testing.TB, p TProtocol, trans TTransport) {",
                " \t\tif thelen != thelen2 {",
                "-\t\t\tt.Errorf(\"%s: %T %T len %s != len %s\", \"ReadWriteI32\", p, trans, thelen, thelen2)",
                "+\t\t\tt.Errorf(\"%s: %T %T len %v != len %v\", \"ReadWriteI32\", p, trans, thelen, thelen2)",
                " \t\t}",
                "@@ -407,3 +407,3 @@ func ReadWriteI64(t testing.TB, p TProtocol, trans TTransport) {",
                " \t\tif thelen != thelen2 {",
                "-\t\t\tt.Errorf(\"%s: %T %T len %s != len %s\", \"ReadWriteI64\", p, trans, thelen, thelen2)",
                "+\t\t\tt.Errorf(\"%s: %T %T len %v != len %v\", \"ReadWriteI64\", p, trans, thelen, thelen2)",
                " \t\t}",
                "@@ -435,3 +435,3 @@ func ReadWriteDouble(t testing.TB, p TProtocol, trans TTransport) {",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"%s: %T %T %q Error reading list: %q\", \"ReadWriteDouble\", p, trans, err, DOUBLE_VALUES)",
                "+\t\tt.Errorf(\"%s: %T %T %v Error reading list: %v\", \"ReadWriteDouble\", p, trans, err, DOUBLE_VALUES)",
                " \t}",
                "@@ -441,3 +441,3 @@ func ReadWriteDouble(t testing.TB, p TProtocol, trans TTransport) {",
                " \tif thelen != thelen2 {",
                "-\t\tt.Errorf(\"%s: %T %T len %s != len %s\", \"ReadWriteDouble\", p, trans, thelen, thelen2)",
                "+\t\tt.Errorf(\"%s: %T %T len %v != len %v\", \"ReadWriteDouble\", p, trans, thelen, thelen2)",
                " \t}",
                "@@ -446,3 +446,3 @@ func ReadWriteDouble(t testing.TB, p TProtocol, trans TTransport) {",
                " \t\tif err != nil {",
                "-\t\t\tt.Errorf(\"%s: %T %T %q Error reading double at index %d: %q\", \"ReadWriteDouble\", p, trans, err, k, v)",
                "+\t\t\tt.Errorf(\"%s: %T %T %q Error reading double at index %d: %v\", \"ReadWriteDouble\", p, trans, err, k, v)",
                " \t\t}",
                "@@ -450,6 +450,6 @@ func ReadWriteDouble(t testing.TB, p TProtocol, trans TTransport) {",
                " \t\t\tif !math.IsNaN(value) {",
                "-\t\t\t\tt.Errorf(\"%s: %T %T math.IsNaN(%q) != math.IsNaN(%q)\", \"ReadWriteDouble\", p, trans, v, value)",
                "+\t\t\t\tt.Errorf(\"%s: %T %T math.IsNaN(%v) != math.IsNaN(%v)\", \"ReadWriteDouble\", p, trans, v, value)",
                " \t\t\t}",
                " \t\t} else if v != value {",
                "-\t\t\tt.Errorf(\"%s: %T %T %v != %q\", \"ReadWriteDouble\", p, trans, v, value)",
                "+\t\t\tt.Errorf(\"%s: %T %T %v != %v\", \"ReadWriteDouble\", p, trans, v, value)",
                " \t\t}",
                "@@ -481,3 +481,3 @@ func ReadWriteString(t testing.TB, p TProtocol, trans TTransport) {",
                " \t\tif thelen != thelen2 {",
                "-\t\t\tt.Errorf(\"%s: %T %T len %s != len %s\", \"ReadWriteString\", p, trans, thelen, thelen2)",
                "+\t\t\tt.Errorf(\"%s: %T %T len %v != len %v\", \"ReadWriteString\", p, trans, thelen, thelen2)",
                " \t\t}",
                "@@ -490,3 +490,3 @@ func ReadWriteString(t testing.TB, p TProtocol, trans TTransport) {",
                " \t\tif v != value {",
                "-\t\t\tt.Errorf(\"%s: %T %T %d != %d\", \"ReadWriteString\", p, trans, v, value)",
                "+\t\t\tt.Errorf(\"%s: %T %T %v != %v\", \"ReadWriteString\", p, trans, v, value)",
                " \t\t}",
                "diff --git a/lib/go/thrift/simple_json_protocol.go b/lib/go/thrift/simple_json_protocol.go",
                "index 88f569cc1..2e8a71112 100644",
                "--- a/lib/go/thrift/simple_json_protocol.go",
                "+++ b/lib/go/thrift/simple_json_protocol.go",
                "@@ -1067,3 +1067,3 @@ func (p *TSimpleJSONProtocol) ParseListEnd() error {",
                " \t\tdefault:",
                "-\t\t\te := fmt.Errorf(\"Expecting end of list \\\"]\\\", but found: \\\"\", line, \"\\\"\")",
                "+\t\t\te := fmt.Errorf(\"Expecting end of list \\\"]\\\", but found: \\\"%v\\\"\", line)",
                " \t\t\treturn NewTProtocolExceptionWithType(INVALID_DATA, e)",
                "diff --git a/lib/go/thrift/simple_json_protocol_test.go b/lib/go/thrift/simple_json_protocol_test.go",
                "index 49181ab19..7b98082a4 100644",
                "--- a/lib/go/thrift/simple_json_protocol_test.go",
                "+++ b/lib/go/thrift/simple_json_protocol_test.go",
                "@@ -661,3 +661,3 @@ func TestWriteSimpleJSONProtocolMap(t *testing.T) {",
                " \tif str[0] != '[' || str[len(str)-1] != ']' {",
                "-\t\tt.Fatalf(\"Bad value for %s, wrote: %q, in go: %q\", thetype, str, DOUBLE_VALUES)",
                "+\t\tt.Fatalf(\"Bad value for %s, wrote: %v, in go: %v\", thetype, str, DOUBLE_VALUES)",
                " \t}",
                "diff --git a/test/go/src/common/clientserver_test.go b/test/go/src/common/clientserver_test.go",
                "index cb1abf775..9f93c4c6c 100644",
                "--- a/test/go/src/common/clientserver_test.go",
                "+++ b/test/go/src/common/clientserver_test.go",
                "@@ -131,3 +131,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err = client.TestVoid(defaultCtx); err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestVoid() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestVoid() call: %s\", err)",
                " \t}",
                "@@ -136,3 +136,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestString() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestString() call: %s\", err)",
                " \t}",
                "@@ -144,6 +144,6 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestBool() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestBool() call: %s\", err)",
                " \t}",
                " \tif !bl {",
                "-\t\tt.Errorf(\"Unexpected TestBool() result expected true, got %f \", bl)",
                "+\t\tt.Errorf(\"Unexpected TestBool() result expected true, got %v \", bl)",
                " \t}",
                "@@ -151,6 +151,6 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestBool() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestBool() call: %s\", err)",
                " \t}",
                " \tif bl {",
                "-\t\tt.Errorf(\"Unexpected TestBool() result expected false, got %f \", bl)",
                "+\t\tt.Errorf(\"Unexpected TestBool() result expected false, got %v \", bl)",
                " \t}",
                "@@ -159,3 +159,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestByte() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestByte() call: %s\", err)",
                " \t}",
                "@@ -167,3 +167,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestI32() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestI32() call: %s\", err)",
                " \t}",
                "@@ -175,3 +175,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestI64() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestI64() call: %s\", err)",
                " \t}",
                "@@ -183,3 +183,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestDouble() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestDouble() call: %s\", err)",
                " \t}",
                "@@ -198,3 +198,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestStruct() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestStruct() call: %s\", err)",
                " \t}",
                "@@ -208,3 +208,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestNest() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestNest() call: %s\", err)",
                " \t}",
                "@@ -217,3 +217,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestMap() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestMap() call: %s\", err)",
                " \t}",
                "@@ -226,3 +226,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestStringMap() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestStringMap() call: %s\", err)",
                " \t}",
                "@@ -235,3 +235,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestSet() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestSet() call: %s\", err)",
                " \t}",
                "@@ -251,3 +251,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestList() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestList() call: %s\", err)",
                " \t}",
                "@@ -259,3 +259,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestEnum() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestEnum() call: %s\", err)",
                " \t}",
                "@@ -267,3 +267,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestTypedef() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestTypedef() call: %s\", err)",
                " \t}",
                "@@ -275,3 +275,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestMapmap() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestMapmap() call: %s\", err)",
                " \t}",
                "@@ -283,3 +283,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestMulti() call: %v\", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestMulti() call: %s\", err)",
                " \t}",
                "@@ -327,3 +327,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestOneway() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestOneway() call: %s\", err)",
                " \t}",
                "@@ -332,3 +332,3 @@ func callEverythingWithMock(t *testing.T, client *thrifttest.ThriftTestClient, h",
                " \tif err = client.TestVoid(defaultCtx); err != nil {",
                "-\t\tt.Errorf(\"Unexpected error in TestVoid() call: \", err)",
                "+\t\tt.Errorf(\"Unexpected error in TestVoid() call: %s\", err)",
                " \t}"
            ],
            "changed_files": [
                "build/docker/ubuntu-artful/Dockerfile",
                "lib/go/thrift/application_exception_test.go",
                "lib/go/thrift/compact_protocol.go",
                "lib/go/thrift/json_protocol_test.go",
                "lib/go/thrift/protocol_test.go",
                "lib/go/thrift/simple_json_protocol.go",
                "lib/go/thrift/simple_json_protocol_test.go",
                "test/go/src/common/clientserver_test.go"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4516": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: client",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4516",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "55ddf19cca0dc9f56a974ff5740c21703ab9c4e1",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1514880036,
            "hunks": 2,
            "message": "THRIFT-4436: port nodejs changes from THRIFT-3748 to js lib, test for serialization of nested list, run all tests when building js lib Client: js This closes #1457",
            "diff": [
                "diff --git a/lib/js/Gruntfile.js b/lib/js/Gruntfile.js",
                "index 577a39323..82642438f 100644",
                "--- a/lib/js/Gruntfile.js",
                "+++ b/lib/js/Gruntfile.js",
                "@@ -177,10 +177,3 @@ module.exports = function(grunt) {",
                "                              ]);",
                "-  grunt.registerTask('default', ['jshint', 'shell:InstallThriftJS', 'shell:InstallThriftNodeJSDep', 'shell:ThriftGen',",
                "-                                 'external_daemon:ThriftTestServer', 'external_daemon:ThriftTestServer_TLS',",
                "-                                 'qunit:ThriftJS', 'qunit:ThriftJS_TLS',",
                "-                                 'qunit:ThriftWS',",
                "-                                 'shell:ThriftGenJQ', 'qunit:ThriftJSJQ', 'qunit:ThriftJSJQ_TLS',",
                "-                                 'shell:ThriftGenES6', 'qunit:ThriftWSES6',",
                "-                                 'concat', 'uglify', 'jsdoc'",
                "-                                ]);",
                "+  grunt.registerTask('default', ['test', 'concat', 'uglify', 'jsdoc']);",
                " };",
                "diff --git a/lib/js/src/thrift.js b/lib/js/src/thrift.js",
                "index 5d420a256..eeae873d5 100644",
                "--- a/lib/js/src/thrift.js",
                "+++ b/lib/js/src/thrift.js",
                "@@ -1260,3 +1260,8 @@ Thrift.Protocol.prototype = {",
                "     readListEnd: function() {",
                "-        this.readFieldEnd();",
                "+        var pos = this.rpos.pop() - 2;",
                "+        var st = this.rstack;",
                "+        st.pop();",
                "+        if (st instanceof Array && st.length > pos && st[pos].length > 0) {",
                "+          st.push(st[pos].shift());",
                "+        }",
                "     },"
            ],
            "changed_files": [
                "lib/js/Gruntfile.js",
                "lib/js/src/thrift.js"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4436": "",
                "THRIFT-3748": ""
            },
            "ghissue_refs": {
                "1457": "THRIFT-4436: port nodejs changes from THRIFT-3748 to js lib, #1454"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4436, THRIFT-3748",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1457",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b963e286b4c847dd2692fdf8b025e35263b13e29",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520442116,
            "hunks": 2,
            "message": "THRIFT-4509: remove nodejs browser test Client: nodejs This closes #1501",
            "diff": [
                "diff --git a/package.json b/package.json",
                "index 11e76a214..b03fc5758 100644",
                "--- a/package.json",
                "+++ b/package.json",
                "@@ -47,5 +47,3 @@",
                "     \"jsdoc\": \"^3.5.5\",",
                "-    \"minimatch\": \"^3.0.4\",",
                "     \"phantomjs-prebuilt\": \"^2.1.16\",",
                "-    \"run-browser\": \"^2.0.2\",",
                "     \"tape\": \"^4.9.0\","
            ],
            "changed_files": [
                "package.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4509": ""
            },
            "ghissue_refs": {
                "1501": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4509",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1501",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "50862915ccfd5512e9982d2b75a3df99c5e7cdd3",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520454090,
            "hunks": 1,
            "message": "THRIFT-4024: Skip() throws TProtocolException.INVALID_DATA on unknown data types Client: js This closes #1503",
            "diff": [
                "diff --git a/lib/js/src/thrift.js b/lib/js/src/thrift.js",
                "index eeae873d5..2b385a3a7 100644",
                "--- a/lib/js/src/thrift.js",
                "+++ b/lib/js/src/thrift.js",
                "@@ -1440,2 +1440,5 @@ Thrift.Protocol.prototype = {",
                "                 return null;",
                "+",
                "+            default:",
                "+                throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.INVALID_DATA);",
                "         }"
            ],
            "changed_files": [
                "lib/js/src/thrift.js"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4024": ""
            },
            "ghissue_refs": {
                "1503": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4024",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1503",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e58f75daa8a4e5efec4ff434d9427a05973e86fe",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520552722,
            "hunks": 125,
            "message": "THRIFT-4513: Fix thrift compiler to generate constants in stable order. This closes #1505",
            "diff": [
                "diff --git a/compiler/cpp/src/thrift/audit/t_audit.cpp b/compiler/cpp/src/thrift/audit/t_audit.cpp",
                "index 1386f3bd1..ef39d60c3 100644",
                "--- a/compiler/cpp/src/thrift/audit/t_audit.cpp",
                "+++ b/compiler/cpp/src/thrift/audit/t_audit.cpp",
                "@@ -204,4 +204,4 @@ bool compare_defaults(t_const_value* newStructDefault, t_const_value* oldStructD",
                "          {",
                "-            const std::map<t_const_value*, t_const_value*> newMap = newStructDefault->get_map();",
                "-            const std::map<t_const_value*, t_const_value*> oldMap = oldStructDefault->get_map();",
                "+            const std::map<t_const_value*, t_const_value*, t_const_value::value_compare> newMap = newStructDefault->get_map();",
                "+            const std::map<t_const_value*, t_const_value*, t_const_value::value_compare> oldMap = oldStructDefault->get_map();",
                "diff --git a/compiler/cpp/src/thrift/generate/t_as3_generator.cc b/compiler/cpp/src/thrift/generate/t_as3_generator.cc",
                "index fc92de954..87089b44e 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_as3_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_as3_generator.cc",
                "@@ -473,4 +473,4 @@ void t_as3_generator::print_const_value(std::ofstream& out,",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     out << name << \":\" << type_name(type) << \" = new \" << type_name(type, false, true) << \"();\"",
                "@@ -518,4 +518,4 @@ void t_as3_generator::print_const_value(std::ofstream& out,",
                "     t_type* vtype = ((t_map*)type)->get_val_type();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_c_glib_generator.cc b/compiler/cpp/src/thrift/generate/t_c_glib_generator.cc",
                "index a7beca757..3ae7854f9 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_c_glib_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_c_glib_generator.cc",
                "@@ -999,4 +999,4 @@ void t_c_glib_generator::generate_const_initializer(string name,",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     ostringstream initializers;",
                "@@ -1173,4 +1173,4 @@ void t_c_glib_generator::generate_const_initializer(string name,",
                "     t_type* vtype = ((t_map*)type)->get_val_type();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     ostringstream initializers;",
                "diff --git a/compiler/cpp/src/thrift/generate/t_cl_generator.cc b/compiler/cpp/src/thrift/generate/t_cl_generator.cc",
                "index f1fab2553..d9266d11b 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_cl_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_cl_generator.cc",
                "@@ -57,3 +57,3 @@ class t_cl_generator : public t_oop_generator {",
                "     std::map<std::string, std::string>::const_iterator iter;",
                "-    ",
                "+",
                "     for(iter = parsed_options.begin(); iter != parsed_options.end(); ++iter) {",
                "@@ -67,3 +67,3 @@ class t_cl_generator : public t_oop_generator {",
                "     }",
                "-    ",
                "+",
                "     out_dir_base_ = \"gen-cl\";",
                "@@ -114,3 +114,3 @@ class t_cl_generator : public t_oop_generator {",
                "   std::string copy_options_;",
                "-  ",
                "+",
                "   bool no_asd;",
                "@@ -312,4 +312,4 @@ string t_cl_generator::render_const_value(t_type* type, t_const_value* value) {",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "@@ -338,4 +338,4 @@ string t_cl_generator::render_const_value(t_type* type, t_const_value* value) {",
                "     indent_up();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "@@ -496,3 +496,3 @@ string t_cl_generator::typespec(t_type *t) {",
                "     t_map *m = (t_map*) t;",
                "-    return \"(thrift:map \" + typespec(m->get_key_type()) + \" \" + ",
                "+    return \"(thrift:map \" + typespec(m->get_key_type()) + \" \" +",
                "       typespec(m->get_val_type()) + \")\";",
                "@@ -532,3 +532,3 @@ string t_cl_generator::argument_list(t_struct* tstruct) {",
                "-    ",
                "+",
                "   }",
                "diff --git a/compiler/cpp/src/thrift/generate/t_cocoa_generator.cc b/compiler/cpp/src/thrift/generate/t_cocoa_generator.cc",
                "index c2f09e8e6..0c0e1e0d4 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_cocoa_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_cocoa_generator.cc",
                "@@ -2735,4 +2735,4 @@ void t_cocoa_generator::print_const_value(ostream& out,",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     if (defval)",
                "@@ -2760,4 +2760,4 @@ void t_cocoa_generator::print_const_value(ostream& out,",
                "     t_type* vtype = ((t_map*)type)->get_val_type();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     if (defval)",
                "@@ -2906,4 +2906,4 @@ string t_cocoa_generator::render_const_value(string name,",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     if (val.size() > 0)",
                "@@ -2939,4 +2939,4 @@ string t_cocoa_generator::render_const_value(string name,",
                "     t_type* vtype = ((t_map*)type)->get_val_type();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     bool first = true;",
                "diff --git a/compiler/cpp/src/thrift/generate/t_cpp_generator.cc b/compiler/cpp/src/thrift/generate/t_cpp_generator.cc",
                "index 1c9395715..08e2c970c 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_cpp_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_cpp_generator.cc",
                "@@ -705,4 +705,4 @@ void t_cpp_generator::print_const_value(ofstream& out,",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     bool is_nonrequired_field = false;",
                "@@ -730,4 +730,4 @@ void t_cpp_generator::print_const_value(ofstream& out,",
                "     t_type* vtype = ((t_map*)type)->get_val_type();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "@@ -1798,3 +1798,3 @@ void t_cpp_generator::generate_service(t_service* tservice) {",
                "     }",
                "-   ",
                "+",
                "   }",
                "diff --git a/compiler/cpp/src/thrift/generate/t_csharp_generator.cc b/compiler/cpp/src/thrift/generate/t_csharp_generator.cc",
                "index a6cb09d1f..b108c4564 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_csharp_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_csharp_generator.cc",
                "@@ -513,4 +513,4 @@ void t_csharp_generator::print_const_def_value(std::ofstream& out,",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     prepare_member_name_mapping((t_struct*)type);",
                "@@ -534,4 +534,4 @@ void t_csharp_generator::print_const_def_value(std::ofstream& out,",
                "     t_type* vtype = ((t_map*)type)->get_val_type();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "@@ -990,3 +990,3 @@ void t_csharp_generator::generate_csharp_struct_reader(ofstream& out, t_struct*",
                "           << \"throw new TProtocolException(TProtocolException.INVALID_DATA, \"",
                "-          << \"\\\"required field \" << prop_name((*f_iter)) << \" not set\\\");\" ",
                "+          << \"\\\"required field \" << prop_name((*f_iter)) << \" not set\\\");\"",
                "           << endl;",
                "diff --git a/compiler/cpp/src/thrift/generate/t_d_generator.cc b/compiler/cpp/src/thrift/generate/t_d_generator.cc",
                "index 35f611d93..bbef639ae 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_d_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_d_generator.cc",
                "@@ -559,4 +559,4 @@ private:",
                "         vector<t_field*>::const_iterator f_iter;",
                "-        const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-        map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+        const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+        map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "         for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "@@ -578,4 +578,4 @@ private:",
                "         t_type* vtype = ((t_map*)type)->get_val_type();",
                "-        const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-        map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+        const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+        map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "         for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_dart_generator.cc b/compiler/cpp/src/thrift/generate/t_dart_generator.cc",
                "index f7bd1c28b..c2d07e92a 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_dart_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_dart_generator.cc",
                "@@ -596,4 +596,4 @@ void t_dart_generator::print_const_value(std::ofstream& out,",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     out << type_name(type) << \" \" << name << \" = new \" << type_name(type) << \"()\";",
                "@@ -625,4 +625,4 @@ void t_dart_generator::print_const_value(std::ofstream& out,",
                "     t_type* vtype = ((t_map*)type)->get_val_type();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "diff --git a/compiler/cpp/src/thrift/generate/t_delphi_generator.cc b/compiler/cpp/src/thrift/generate/t_delphi_generator.cc",
                "index 4650a8a19..4db1cf7da 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_delphi_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_delphi_generator.cc",
                "@@ -729,3 +729,3 @@ void t_delphi_generator::init_generator() {",
                "   create_keywords();",
                "-  ",
                "+",
                "   add_delphi_uses_list(\"Classes\");",
                "@@ -736,3 +736,3 @@ void t_delphi_generator::init_generator() {",
                "   }",
                "-  ",
                "+",
                "   add_delphi_uses_list(\"Thrift\");",
                "@@ -1207,4 +1207,4 @@ void t_delphi_generator::print_const_def_value(std::ostream& vars,",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "@@ -1227,4 +1227,4 @@ void t_delphi_generator::print_const_def_value(std::ostream& vars,",
                "     t_type* vtype = ((t_map*)type)->get_val_type();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "@@ -1919,3 +1919,3 @@ void t_delphi_generator::generate_service_client(t_service* tservice) {",
                "   string implements = async_ ? \"Iface, IAsync\" : \"Iface\";",
                "-  ",
                "+",
                "   generate_delphi_doc(s_service, tservice);",
                "@@ -1976,3 +1976,3 @@ void t_delphi_generator::generate_service_client(t_service* tservice) {",
                "   indent_up();",
                "-  ",
                "+",
                "   indent(s_service) << \"// Iface\" << endl;",
                "@@ -1993,3 +1993,3 @@ void t_delphi_generator::generate_service_client(t_service* tservice) {",
                "   }",
                "-  ",
                "+",
                "   indent_down();",
                "@@ -2017,10 +2017,10 @@ void t_delphi_generator::generate_service_client(t_service* tservice) {",
                "       indent_up_impl();",
                "-      ",
                "+",
                "       t_type* ttype = (*f_iter)->get_returntype();",
                "       if( for_async) {",
                "-        if (is_void(ttype)) { ",
                "+        if (is_void(ttype)) {",
                "            // Delphi forces us to specify a type with IFuture<T>, so we use Integer=0 for void methods",
                "           indent_impl(s_service_impl) << \"result := TTask.Future<Integer>(function: Integer\" << endl;",
                "-        } else { ",
                "-          string rettype = type_name(ttype, false, true, false, true);          ",
                "+        } else {",
                "+          string rettype = type_name(ttype, false, true, false, true);",
                "           indent_impl(s_service_impl) << \"result := TTask.Future<\" << rettype << \">(function: \" << rettype << endl;",
                "@@ -2030,5 +2030,5 @@ void t_delphi_generator::generate_service_client(t_service* tservice) {",
                "       }",
                "-      ",
                "+",
                "       indent_impl(s_service_impl) << \"send_\" << funname << \"(\";",
                "-  ",
                "+",
                "       bool first = true;",
                "@@ -2043,3 +2043,3 @@ void t_delphi_generator::generate_service_client(t_service* tservice) {",
                "       s_service_impl << \");\" << endl;",
                "-  ",
                "+",
                "       if (!(*f_iter)->is_oneway()) {",
                "@@ -2051,3 +2051,3 @@ void t_delphi_generator::generate_service_client(t_service* tservice) {",
                "       }",
                "-  ",
                "+",
                "       if( for_async) {",
                "@@ -2059,3 +2059,3 @@ void t_delphi_generator::generate_service_client(t_service* tservice) {",
                "       }",
                "-      ",
                "+",
                "       indent_down_impl();",
                "@@ -2063,3 +2063,3 @@ void t_delphi_generator::generate_service_client(t_service* tservice) {",
                "     }",
                "-    ",
                "+",
                "     t_function send_function(g_type_void,",
                "diff --git a/compiler/cpp/src/thrift/generate/t_erl_generator.cc b/compiler/cpp/src/thrift/generate/t_erl_generator.cc",
                "index 2b644c931..4ddcf683a 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_erl_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_erl_generator.cc",
                "@@ -432,3 +432,3 @@ void t_erl_generator::generate_const_function(t_const* tconst, ostringstream& ex",
                "     // Emit const function definition.",
                "-    map<t_const_value*, t_const_value*>::const_iterator i, end = value->get_map().end();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator i, end = value->get_map().end();",
                "     // The one-argument form throws an error if the key does not exist in the map.",
                "@@ -592,4 +592,4 @@ string t_erl_generator::render_const_value(t_type* type, t_const_value* value) {",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "@@ -628,3 +628,3 @@ string t_erl_generator::render_const_value(t_type* type, t_const_value* value) {",
                "     }",
                "-    map<t_const_value*, t_const_value*>::const_iterator i, end = value->get_map().end();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator i, end = value->get_map().end();",
                "     for (i = value->get_map().begin(); i != end;) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_go_generator.cc b/compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "index 28725acfe..f3c7fee31 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "@@ -1099,4 +1099,4 @@ string t_go_generator::render_const_value(t_type* type, t_const_value* value, co",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "@@ -1125,6 +1125,6 @@ string t_go_generator::render_const_value(t_type* type, t_const_value* value, co",
                "     t_type* vtype = ((t_map*)type)->get_val_type();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "     out << \"map[\" << type_to_go_type(ktype) << \"]\" << type_to_go_type(vtype) << \"{\" << endl;",
                "     indent_up();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "diff --git a/compiler/cpp/src/thrift/generate/t_gv_generator.cc b/compiler/cpp/src/thrift/generate/t_gv_generator.cc",
                "index 14b537712..c2f8b5a9c 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_gv_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_gv_generator.cc",
                "@@ -251,4 +251,4 @@ void t_gv_generator::print_const_value(t_type* type, t_const_value* tvalue) {",
                "     f_out_ << \"\\\\{ \";",
                "-    map<t_const_value*, t_const_value*> map_elems = tvalue->get_map();",
                "-    map<t_const_value*, t_const_value*>::iterator map_iter;",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare> map_elems = tvalue->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::iterator map_iter;",
                "     for (map_iter = map_elems.begin(); map_iter != map_elems.end(); map_iter++) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_haxe_generator.cc b/compiler/cpp/src/thrift/generate/t_haxe_generator.cc",
                "index 97c7d19a3..ce3816d3a 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_haxe_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_haxe_generator.cc",
                "@@ -505,4 +505,4 @@ void t_haxe_generator::print_const_value(std::ofstream& out,",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     out << name << \":\" << type_name(type) << \" = new \" << type_name(type, false, true) << \"();\"",
                "@@ -550,4 +550,4 @@ void t_haxe_generator::print_const_value(std::ofstream& out,",
                "     t_type* vtype = ((t_map*)type)->get_val_type();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_hs_generator.cc b/compiler/cpp/src/thrift/generate/t_hs_generator.cc",
                "index d0a8cb2d6..6c8cb7fc9 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_hs_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_hs_generator.cc",
                "@@ -426,6 +426,6 @@ string t_hs_generator::render_const_value(t_type* type, t_const_value* value) {",
                "     const vector<t_field*>& fields = ((t_struct*)type)->get_members();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "     bool first = true;",
                "-    for (map<t_const_value*, t_const_value*>::const_iterator v_iter = val.begin();",
                "+    for (map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter = val.begin();",
                "          v_iter != val.end();",
                "@@ -460,4 +460,4 @@ string t_hs_generator::render_const_value(t_type* type, t_const_value* value) {",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "diff --git a/compiler/cpp/src/thrift/generate/t_html_generator.cc b/compiler/cpp/src/thrift/generate/t_html_generator.cc",
                "index dfd5df311..5b063707f 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_html_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_html_generator.cc",
                "@@ -779,4 +779,4 @@ void t_html_generator::print_const_value(t_type* type, t_const_value* tvalue) {",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = tvalue->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = tvalue->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "@@ -802,4 +802,4 @@ void t_html_generator::print_const_value(t_type* type, t_const_value* tvalue) {",
                "     f_out_ << \"{ \";",
                "-    map<t_const_value*, t_const_value*> map_elems = tvalue->get_map();",
                "-    map<t_const_value*, t_const_value*>::iterator map_iter;",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare> map_elems = tvalue->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::iterator map_iter;",
                "     for (map_iter = map_elems.begin(); map_iter != map_elems.end(); map_iter++) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_java_generator.cc b/compiler/cpp/src/thrift/generate/t_java_generator.cc",
                "index ebc83505a..2365242e1 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_java_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_java_generator.cc",
                "@@ -598,2 +598,3 @@ void t_java_generator::generate_consts(std::vector<t_const*> consts) {",
                "+",
                " /**",
                "@@ -621,6 +622,8 @@ void t_java_generator::print_const_value(std::ofstream& out,",
                "   } else if (type->is_struct() || type->is_xception()) {",
                "-    const vector<t_field*>& fields = ((t_struct*)type)->get_members();",
                "+    const vector<t_field*>& unsorted_fields = ((t_struct*)type)->get_members();",
                "+    vector<t_field*> fields = unsorted_fields;",
                "+    std::sort(fields.begin(), fields.end(), t_field::key_compare());",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     out << name << \" = new \" << type_name(type, false, true) << \"();\" << endl;",
                "@@ -662,4 +665,4 @@ void t_java_generator::print_const_value(std::ofstream& out,",
                "     t_type* vtype = ((t_map*)type)->get_val_type();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_javame_generator.cc b/compiler/cpp/src/thrift/generate/t_javame_generator.cc",
                "index 24b756004..0f4181dc3 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_javame_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_javame_generator.cc",
                "@@ -456,4 +456,4 @@ void t_javame_generator::print_const_value(std::ofstream& out,",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     out << name << \" = new \" << type_name(type, false, true) << \"();\" << endl;",
                "@@ -491,4 +491,4 @@ void t_javame_generator::print_const_value(std::ofstream& out,",
                "     t_type* vtype = ((t_map*)type)->get_val_type();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_js_generator.cc b/compiler/cpp/src/thrift/generate/t_js_generator.cc",
                "index 269e46a9b..da68cb515 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_js_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_js_generator.cc",
                "@@ -579,4 +579,4 @@ string t_js_generator::render_const_value(t_type* type, t_const_value* value) {",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "@@ -606,4 +606,4 @@ string t_js_generator::render_const_value(t_type* type, t_const_value* value) {",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_json_generator.cc b/compiler/cpp/src/thrift/generate/t_json_generator.cc",
                "index 153ec35d2..cf5f80185 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_json_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_json_generator.cc",
                "@@ -512,4 +512,4 @@ void t_json_generator::write_const_value(t_const_value* value, bool should_force",
                "     start_object(NO_INDENT);",
                "-    std::map<t_const_value*, t_const_value*> map = value->get_map();",
                "-    std::map<t_const_value*, t_const_value*>::iterator mit;",
                "+    std::map<t_const_value*, t_const_value*, t_const_value::value_compare> map = value->get_map();",
                "+    std::map<t_const_value*, t_const_value*, t_const_value::value_compare>::iterator mit;",
                "     for (mit = map.begin(); mit != map.end(); ++mit) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_lua_generator.cc b/compiler/cpp/src/thrift/generate/t_lua_generator.cc",
                "index 92e6749de..b4a6793eb 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_lua_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_lua_generator.cc",
                "@@ -278,4 +278,4 @@ string t_lua_generator::render_const_value(t_type* type, t_const_value* value) {",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end();) {",
                "@@ -310,4 +310,4 @@ string t_lua_generator::render_const_value(t_type* type, t_const_value* value) {",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end();) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_netcore_generator.cc b/compiler/cpp/src/thrift/generate/t_netcore_generator.cc",
                "index 9334f5fe7..dbf2fd0ce 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_netcore_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_netcore_generator.cc",
                "@@ -46,3 +46,3 @@ using std::vector;",
                "-//TODO: check for indentation ",
                "+//TODO: check for indentation",
                " //TODO: Do we need seqId_ in generation?",
                "@@ -330,3 +330,3 @@ void t_netcore_generator::init_keywords()",
                "     netcore_keywords[\"yield\"] = 1;",
                "-\t",
                "+",
                " \tnetcore_keywords[\"when\"] = 1;",
                "@@ -402,3 +402,3 @@ void t_netcore_generator::generate_enum(t_enum* tenum)",
                "     f_enum.open(f_enum_name.c_str());",
                "-    ",
                "+",
                " \tgenerate_enum(f_enum, tenum);",
                "@@ -430,3 +430,3 @@ void t_netcore_generator::generate_enum(ofstream& out, t_enum* tenum)",
                " \tscope_down(out);",
                "-\tend_netcore_namespace(out);\t",
                "+\tend_netcore_namespace(out);",
                " }",
                "@@ -445,3 +445,3 @@ void t_netcore_generator::generate_consts(vector<t_const*> consts)",
                "     generate_consts(f_consts, consts);",
                "-    ",
                "+",
                "     f_consts.close();",
                "@@ -489,5 +489,5 @@ void t_netcore_generator::print_const_def_value(ofstream& out, string name, t_ty",
                "         const vector<t_field*>& fields = static_cast<t_struct*>(type)->get_members();",
                "-        const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "+        const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "         vector<t_field*>::const_iterator f_iter;",
                "-        map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+        map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "         prepare_member_name_mapping(static_cast<t_struct*>(type));",
                "@@ -497,3 +497,3 @@ void t_netcore_generator::print_const_def_value(ofstream& out, string name, t_ty",
                "             t_field* field = NULL;",
                "-            ",
                "+",
                "             for (f_iter = fields.begin(); f_iter != fields.end(); ++f_iter)",
                "@@ -512,3 +512,3 @@ void t_netcore_generator::print_const_def_value(ofstream& out, string name, t_ty",
                "             t_type* field_type = field->get_type();",
                "-            ",
                "+",
                "             string val = render_const_value(out, name, field_type, v_iter->second);",
                "@@ -523,4 +523,4 @@ void t_netcore_generator::print_const_def_value(ofstream& out, string name, t_ty",
                "         t_type* vtype = static_cast<t_map*>(type)->get_val_type();",
                "-        const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-        map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+        const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+        map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "         for (v_iter = val.begin(); v_iter != val.end(); ++v_iter)",
                "@@ -725,3 +725,3 @@ void t_netcore_generator::generate_netcore_struct_definition(ofstream& out, t_st",
                "-    if (is_exception) ",
                "+    if (is_exception)",
                "     {",
                "@@ -788,3 +788,3 @@ void t_netcore_generator::generate_netcore_struct_definition(ofstream& out, t_st",
                "         indent_up();",
                "-        ",
                "+",
                "         for (m_iter = members.begin(); m_iter != members.end(); ++m_iter)",
                "@@ -914,3 +914,3 @@ void t_netcore_generator::generate_netcore_struct_definition(ofstream& out, t_st",
                "     generate_netcore_struct_tostring(out, tstruct);",
                "-    ",
                "+",
                "     indent_down();",
                "@@ -970,3 +970,3 @@ void t_netcore_generator::generate_netcore_struct_reader(ofstream& out, t_struct",
                "     indent_up();",
                "-    ",
                "+",
                "     const vector<t_field*>& fields = tstruct->get_members();",
                "@@ -983,3 +983,3 @@ void t_netcore_generator::generate_netcore_struct_reader(ofstream& out, t_struct",
                "-    out << indent() << \"TField field;\" << endl ",
                "+    out << indent() << \"TField field;\" << endl",
                "         << indent() << \"await iprot.ReadStructBeginAsync(cancellationToken);\" << endl",
                "@@ -998,3 +998,3 @@ void t_netcore_generator::generate_netcore_struct_reader(ofstream& out, t_struct",
                "     indent_up();",
                "-    ",
                "+",
                "     for (f_iter = fields.begin(); f_iter != fields.end(); ++f_iter)",
                "@@ -1052,3 +1052,3 @@ void t_netcore_generator::generate_netcore_struct_reader(ofstream& out, t_struct",
                "     }",
                "-    ",
                "+",
                "     indent_down();",
                "@@ -1149,3 +1149,3 @@ void t_netcore_generator::generate_netcore_struct_result_writer(ofstream& out, t",
                "     out << indent() << \"oprot.IncrementRecursionDepth();\" << endl",
                "-        << indent() << \"try\" << endl ",
                "+        << indent() << \"try\" << endl",
                "         << indent() << \"{\" << endl;",
                "@@ -1335,3 +1335,3 @@ void t_netcore_generator::generate_netcore_union(t_struct* tunion)",
                "     f_union.close();",
                "-    ",
                "+",
                "     indent_validate(ic, \"generate_netcore_union.\");",
                "@@ -1722,3 +1722,3 @@ void t_netcore_generator::generate_service_client(ofstream& out, t_service* tser",
                "-            out << indent() << \"}\" << endl ",
                "+            out << indent() << \"}\" << endl",
                "                 << endl",
                "@@ -1743,3 +1743,3 @@ void t_netcore_generator::generate_service_client(ofstream& out, t_service* tser",
                "                     {",
                "-                        out << indent() << \"if (result.Success.HasValue)\" << endl ",
                "+                        out << indent() << \"if (result.Success.HasValue)\" << endl",
                "                             << indent() << \"{\" << endl;",
                "@@ -1829,3 +1829,3 @@ void t_netcore_generator::generate_service_server(ofstream& out, t_service* tser",
                "-    out << indent() << \"private IAsync _iAsync;\" << endl ",
                "+    out << indent() << \"private IAsync _iAsync;\" << endl",
                "         << endl",
                "@@ -1841,3 +1841,3 @@ void t_netcore_generator::generate_service_server(ofstream& out, t_service* tser",
                "     indent_up();",
                "-    ",
                "+",
                "     out << indent() << \"if (iAsync == null) throw new ArgumentNullException(nameof(iAsync));\" << endl",
                "@@ -1967,3 +1967,3 @@ void t_netcore_generator::generate_process_function_async(ofstream& out, t_servi",
                "     (void)tservice;",
                "-    out << indent() << \"public async Task \" << tfunction->get_name() ",
                "+    out << indent() << \"public async Task \" << tfunction->get_name()",
                "         << \"_ProcessAsync(int seqid, TProtocol iprot, TProtocol oprot, CancellationToken cancellationToken)\" << endl",
                "@@ -2031,3 +2031,3 @@ void t_netcore_generator::generate_process_function_async(ofstream& out, t_servi",
                "     cleanup_member_name_mapping(arg_struct);",
                "-    ",
                "+",
                "     if (!first)",
                "@@ -2046,3 +2046,3 @@ void t_netcore_generator::generate_process_function_async(ofstream& out, t_servi",
                "         out << indent() << \"}\" << endl;",
                "-        ",
                "+",
                "         for (x_iter = xceptions.begin(); x_iter != xceptions.end(); ++x_iter)",
                "@@ -2064,3 +2064,3 @@ void t_netcore_generator::generate_process_function_async(ofstream& out, t_servi",
                "     {",
                "-        out << indent() << \"await oprot.WriteMessageBeginAsync(new TMessage(\\\"\" ",
                "+        out << indent() << \"await oprot.WriteMessageBeginAsync(new TMessage(\\\"\"",
                "                 << correct_function_name_for_async(tfunction->get_name()) << \"\\\", TMessageType.Reply, seqid), cancellationToken); \" << endl",
                "@@ -2276,3 +2276,3 @@ void t_netcore_generator::generate_deserialize_struct(ofstream& out, t_struct* t",
                "     {",
                "-        out << indent() << prefix << \" = new \" << type_name(tstruct) << \"();\" << endl ",
                "+        out << indent() << prefix << \" = new \" << type_name(tstruct) << \"();\" << endl",
                "             << indent() << \"await \" << prefix << \".ReadAsync(iprot, cancellationToken);\" << endl;",
                "@@ -3076,3 +3076,3 @@ void t_netcore_generator::docstring_comment(ofstream& out, const string& comment",
                "-    while (!(docs.eof() || docs.fail())) ",
                "+    while (!(docs.eof() || docs.fail()))",
                "     {",
                "@@ -3082,3 +3082,3 @@ void t_netcore_generator::docstring_comment(ofstream& out, const string& comment",
                "         // Just prnt a newline when the line & prefix are empty.",
                "-        if (strlen(line) == 0 && line_prefix == \"\" && !docs.eof()) ",
                "+        if (strlen(line) == 0 && line_prefix == \"\" && !docs.eof())",
                "         {",
                "@@ -3086,3 +3086,3 @@ void t_netcore_generator::docstring_comment(ofstream& out, const string& comment",
                "         }",
                "-        else if (strlen(line) > 0 || !docs.eof()) ",
                "+        else if (strlen(line) > 0 || !docs.eof())",
                "         { // skip the empty last line",
                "diff --git a/compiler/cpp/src/thrift/generate/t_ocaml_generator.cc b/compiler/cpp/src/thrift/generate/t_ocaml_generator.cc",
                "index 594219ae5..2bf85d1c2 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_ocaml_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_ocaml_generator.cc",
                "@@ -403,4 +403,4 @@ string t_ocaml_generator::render_const_value(t_type* type, t_const_value* value)",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "@@ -427,4 +427,4 @@ string t_ocaml_generator::render_const_value(t_type* type, t_const_value* value)",
                "     t_type* vtype = ((t_map*)type)->get_val_type();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     string hm = tmp(\"_hm\");",
                "diff --git a/compiler/cpp/src/thrift/generate/t_perl_generator.cc b/compiler/cpp/src/thrift/generate/t_perl_generator.cc",
                "index 0c05cda04..76d343e89 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_perl_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_perl_generator.cc",
                "@@ -361,4 +361,4 @@ string t_perl_generator::render_const_value(t_type* type, t_const_value* value)",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "@@ -387,4 +387,4 @@ string t_perl_generator::render_const_value(t_type* type, t_const_value* value)",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_php_generator.cc b/compiler/cpp/src/thrift/generate/t_php_generator.cc",
                "index 5166d0337..ea2801125 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_php_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_php_generator.cc",
                "@@ -644,4 +644,4 @@ string t_php_generator::render_const_value(t_type* type, t_const_value* value) {",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "@@ -669,4 +669,4 @@ string t_php_generator::render_const_value(t_type* type, t_const_value* value) {",
                "     indent_up();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_py_generator.cc b/compiler/cpp/src/thrift/generate/t_py_generator.cc",
                "index 9078da842..ab0227c5f 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_py_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_py_generator.cc",
                "@@ -558,4 +558,4 @@ string t_py_generator::render_const_value(t_type* type, t_const_value* value) {",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "@@ -583,4 +583,4 @@ string t_py_generator::render_const_value(t_type* type, t_const_value* value) {",
                "     indent_up();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_rb_generator.cc b/compiler/cpp/src/thrift/generate/t_rb_generator.cc",
                "index 924f6f6eb..3f2b78e6a 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_rb_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_rb_generator.cc",
                "@@ -457,4 +457,4 @@ t_rb_ofstream& t_rb_generator::render_const_value(t_rb_ofstream& out,",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "@@ -480,4 +480,4 @@ t_rb_ofstream& t_rb_generator::render_const_value(t_rb_ofstream& out,",
                "     out.indent_up();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_rs_generator.cc b/compiler/cpp/src/thrift/generate/t_rs_generator.cc",
                "index 28c57f836..6001d8f66 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_rs_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_rs_generator.cc",
                "@@ -783,4 +783,4 @@ void t_rs_generator::render_const_map(t_type* ttype, t_const_value* tvalue) {",
                "     << endl;",
                "-  const map<t_const_value*, t_const_value*>& elems = tvalue->get_map();",
                "-  map<t_const_value*, t_const_value*>::const_iterator elem_iter;",
                "+  const map<t_const_value*, t_const_value*, t_const_value::value_compare>& elems = tvalue->get_map();",
                "+  map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator elem_iter;",
                "   for (elem_iter = elems.begin(); elem_iter != elems.end(); ++elem_iter) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_st_generator.cc b/compiler/cpp/src/thrift/generate/t_st_generator.cc",
                "index 69ed776a7..c45666ad9 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_st_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_st_generator.cc",
                "@@ -404,4 +404,4 @@ string t_st_generator::render_const_value(t_type* type, t_const_value* value) {",
                "     vector<t_field*>::const_iterator f_iter;",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "@@ -430,4 +430,4 @@ string t_st_generator::render_const_value(t_type* type, t_const_value* value) {",
                "     indent_up();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "diff --git a/compiler/cpp/src/thrift/generate/t_swift_generator.cc b/compiler/cpp/src/thrift/generate/t_swift_generator.cc",
                "index 87dd2f020..7b4d22451 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_swift_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_swift_generator.cc",
                "@@ -1902,4 +1902,4 @@ void t_swift_generator::render_const_value(ostream& out,",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "@@ -1936,4 +1936,4 @@ void t_swift_generator::render_const_value(ostream& out,",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "@@ -1958,4 +1958,4 @@ void t_swift_generator::render_const_value(ostream& out,",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "@@ -1978,4 +1978,4 @@ void t_swift_generator::render_const_value(ostream& out,",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "diff --git a/compiler/cpp/src/thrift/generate/t_xml_generator.cc b/compiler/cpp/src/thrift/generate/t_xml_generator.cc",
                "index e7e01fd8c..a832afd58 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_xml_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_xml_generator.cc",
                "@@ -485,4 +485,4 @@ void t_xml_generator::write_const_value(t_const_value* value) {",
                "     write_element_start(\"map\");",
                "-    std::map<t_const_value*, t_const_value*> map = value->get_map();",
                "-    std::map<t_const_value*, t_const_value*>::iterator mit;",
                "+    std::map<t_const_value*, t_const_value*, t_const_value::value_compare> map = value->get_map();",
                "+    std::map<t_const_value*, t_const_value*, t_const_value::value_compare>::iterator mit;",
                "     for (mit = map.begin(); mit != map.end(); ++mit) {",
                "diff --git a/compiler/cpp/src/thrift/main.cc b/compiler/cpp/src/thrift/main.cc",
                "index 84218405b..0c21e0281 100644",
                "--- a/compiler/cpp/src/thrift/main.cc",
                "+++ b/compiler/cpp/src/thrift/main.cc",
                "@@ -807,4 +807,4 @@ void validate_const_rec(std::string name, t_type* type, t_const_value* value) {",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "@@ -828,4 +828,4 @@ void validate_const_rec(std::string name, t_type* type, t_const_value* value) {",
                "     t_type* v_type = ((t_map*)type)->get_val_type();",
                "-    const map<t_const_value*, t_const_value*>& val = value->get_map();",
                "-    map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+    const map<t_const_value*, t_const_value*, t_const_value::value_compare>& val = value->get_map();",
                "+    map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "     for (v_iter = val.begin(); v_iter != val.end(); ++v_iter) {",
                "diff --git a/compiler/cpp/src/thrift/parse/t_const_value.h b/compiler/cpp/src/thrift/parse/t_const_value.h",
                "index fc2f648e8..f4416e9f4 100644",
                "--- a/compiler/cpp/src/thrift/parse/t_const_value.h",
                "+++ b/compiler/cpp/src/thrift/parse/t_const_value.h",
                "@@ -40,2 +40,13 @@ class t_const_value {",
                " public:",
                "+  /**",
                "+   * Comparator to sort fields in ascending order by key.",
                "+   * Make this a functor instead of a function to help GCC inline it.",
                "+   */",
                "+  struct value_compare {",
                "+  public:",
                "+    bool operator()(t_const_value const* const& left, t_const_value const* const& right) const {",
                "+      return *left < *right;",
                "+    }",
                "+  };",
                "+",
                "   enum t_const_value_type { CV_INTEGER, CV_DOUBLE, CV_STRING, CV_MAP, CV_LIST, CV_IDENTIFIER, CV_UNKNOWN };",
                "@@ -92,3 +103,3 @@ public:",
                "-  const std::map<t_const_value*, t_const_value*>& get_map() const { return mapVal_; }",
                "+  const std::map<t_const_value*, t_const_value*, t_const_value::value_compare>& get_map() const { return mapVal_; }",
                "@@ -138,4 +149,51 @@ public:",
                "+  /**",
                "+   * Comparator to sort map fields in ascending order by key and then value.",
                "+   * This is used for map comparison in lexicographic order.",
                "+   */",
                "+  struct map_entry_compare {",
                "+  private:",
                "+    typedef std::pair<t_const_value*, t_const_value*> ConstPair;",
                "+  public:",
                "+    bool operator()(ConstPair left, ConstPair right) const {",
                "+      if (*(left.first) < *(right.first)) {",
                "+        return true;",
                "+      } else {",
                "+        if (right.first < left.first) {",
                "+          return *(left.second) < *(right.second);",
                "+        } else {",
                "+          return false;",
                "+        }",
                "+      }",
                "+    }",
                "+  };",
                "+",
                "+  bool operator < (const t_const_value& that) const {",
                "+    ::t_const_value::t_const_value_type t1 = get_type();",
                "+    ::t_const_value::t_const_value_type t2 = that.get_type();",
                "+    if (t1 != t2)",
                "+      return t1 < t2;",
                "+    switch (t1) {",
                "+    case ::t_const_value::CV_INTEGER:",
                "+      return intVal_ < that.intVal_;",
                "+    case ::t_const_value::CV_DOUBLE:",
                "+      return doubleVal_ < that.doubleVal_;",
                "+    case ::t_const_value::CV_STRING:",
                "+      return stringVal_ < that.stringVal_;",
                "+    case ::t_const_value::CV_IDENTIFIER:",
                "+      return identifierVal_ < that.identifierVal_;",
                "+    case ::t_const_value::CV_MAP:",
                "+      return std::lexicographical_compare(",
                "+          mapVal_.begin(), mapVal_.end(), that.mapVal_.begin(), that.mapVal_.end(), map_entry_compare());",
                "+    case ::t_const_value::CV_LIST:",
                "+      return std::lexicographical_compare(",
                "+          listVal_.begin(), listVal_.end(), that.listVal_.begin(), that.listVal_.end(), value_compare());",
                "+    case ::t_const_value::CV_UNKNOWN:",
                "+    default:",
                "+      throw \"unknown value type\";",
                "+    }",
                "+  }",
                "+",
                " private:",
                "-  std::map<t_const_value*, t_const_value*> mapVal_;",
                "+  std::map<t_const_value*, t_const_value*, value_compare> mapVal_;",
                "   std::vector<t_const_value*> listVal_;",
                "diff --git a/compiler/cpp/src/thrift/parse/t_scope.h b/compiler/cpp/src/thrift/parse/t_scope.h",
                "index 02aa550bf..6f160a5cc 100644",
                "--- a/compiler/cpp/src/thrift/parse/t_scope.h",
                "+++ b/compiler/cpp/src/thrift/parse/t_scope.h",
                "@@ -78,4 +78,4 @@ public:",
                "     if (ttype->is_map()) {",
                "-      const std::map<t_const_value*, t_const_value*>& map = const_val->get_map();",
                "-      std::map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+      const std::map<t_const_value*, t_const_value*, t_const_value::value_compare>& map = const_val->get_map();",
                "+      std::map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "       for (v_iter = map.begin(); v_iter != map.end(); ++v_iter) {",
                "@@ -98,4 +98,4 @@ public:",
                "       t_struct* tstruct = (t_struct*)ttype;",
                "-      const std::map<t_const_value*, t_const_value*>& map = const_val->get_map();",
                "-      std::map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+      const std::map<t_const_value*, t_const_value*, t_const_value::value_compare>& map = const_val->get_map();",
                "+      std::map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;",
                "       for (v_iter = map.begin(); v_iter != map.end(); ++v_iter) {",
                "@@ -139,4 +139,4 @@ public:",
                "         } else if (const_type->is_map()) {",
                "-          const std::map<t_const_value*, t_const_value*>& map = constant->get_value()->get_map();",
                "-          std::map<t_const_value*, t_const_value*>::const_iterator v_iter;",
                "+          const std::map<t_const_value*, t_const_value*, t_const_value::value_compare>& map = constant->get_value()->get_map();",
                "+          std::map<t_const_value*, t_const_value*, t_const_value::value_compare>::const_iterator v_iter;"
            ],
            "changed_files": [
                "compiler/cpp/src/thrift/audit/t_audit.cpp",
                "compiler/cpp/src/thrift/generate/t_as3_generator.cc",
                "compiler/cpp/src/thrift/generate/t_c_glib_generator.cc",
                "compiler/cpp/src/thrift/generate/t_cl_generator.cc",
                "compiler/cpp/src/thrift/generate/t_cocoa_generator.cc",
                "compiler/cpp/src/thrift/generate/t_cpp_generator.cc",
                "compiler/cpp/src/thrift/generate/t_csharp_generator.cc",
                "compiler/cpp/src/thrift/generate/t_d_generator.cc",
                "compiler/cpp/src/thrift/generate/t_dart_generator.cc",
                "compiler/cpp/src/thrift/generate/t_delphi_generator.cc",
                "compiler/cpp/src/thrift/generate/t_erl_generator.cc",
                "compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "compiler/cpp/src/thrift/generate/t_gv_generator.cc",
                "compiler/cpp/src/thrift/generate/t_haxe_generator.cc",
                "compiler/cpp/src/thrift/generate/t_hs_generator.cc",
                "compiler/cpp/src/thrift/generate/t_html_generator.cc",
                "compiler/cpp/src/thrift/generate/t_java_generator.cc",
                "compiler/cpp/src/thrift/generate/t_javame_generator.cc",
                "compiler/cpp/src/thrift/generate/t_js_generator.cc",
                "compiler/cpp/src/thrift/generate/t_json_generator.cc",
                "compiler/cpp/src/thrift/generate/t_lua_generator.cc",
                "compiler/cpp/src/thrift/generate/t_netcore_generator.cc",
                "compiler/cpp/src/thrift/generate/t_ocaml_generator.cc",
                "compiler/cpp/src/thrift/generate/t_perl_generator.cc",
                "compiler/cpp/src/thrift/generate/t_php_generator.cc",
                "compiler/cpp/src/thrift/generate/t_py_generator.cc",
                "compiler/cpp/src/thrift/generate/t_rb_generator.cc",
                "compiler/cpp/src/thrift/generate/t_rs_generator.cc",
                "compiler/cpp/src/thrift/generate/t_st_generator.cc",
                "compiler/cpp/src/thrift/generate/t_swift_generator.cc",
                "compiler/cpp/src/thrift/generate/t_xml_generator.cc",
                "compiler/cpp/src/thrift/main.cc",
                "compiler/cpp/src/thrift/parse/t_const_value.h",
                "compiler/cpp/src/thrift/parse/t_scope.h"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4513": ""
            },
            "ghissue_refs": {
                "1505": "THRIFT-4513: fix bug in comparator introduced by e58f75d #1517"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: java",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4513",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1505",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8de4bb9c803461811094284486fa5cf402764589",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1519268767,
            "hunks": 1,
            "message": "THRIFT-4498: add phpcs back Client: php This closes #1498",
            "diff": [
                "diff --git a/build/docker/scripts/sca.sh b/build/docker/scripts/sca.sh",
                "index 886548cf7..f17f7035d 100755",
                "--- a/build/docker/scripts/sca.sh",
                "+++ b/build/docker/scripts/sca.sh",
                "@@ -52,5 +52,4 @@ flake8 test/features",
                " # PHP code style",
                "-### causing build failures like https://travis-ci.org/apache/thrift/jobs/341109387",
                "-### composer install --quiet",
                "-### ./vendor/bin/phpcs",
                "+composer install --quiet",
                "+./vendor/bin/phpcs"
            ],
            "changed_files": [
                "build/docker/scripts/sca.sh"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4498": ""
            },
            "ghissue_refs": {
                "1498": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4498",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1498",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1918b21d1c3d9d32dec5f4ce68990b106a79d84f",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1518484284,
            "hunks": 1,
            "message": "THRIFT-4495: Allow `undefined` for non-required Erlang records fields. Client: erl As of Erlang 19, the dialyzer static type-analysis tool no longer implicitly adds `undefined` to the allowed types for a field.  This means that dialyzer will now complain about any non-required fields that are not explicitly initialed when creating a new record. This closes #1494",
            "diff": [
                "diff --git a/compiler/cpp/src/thrift/generate/t_erl_generator.cc b/compiler/cpp/src/thrift/generate/t_erl_generator.cc",
                "index 372c78bf7..9e1e23dac 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_erl_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_erl_generator.cc",
                "@@ -812,2 +812,4 @@ void t_erl_generator::generate_erl_struct_member(ostream& out, t_field* tmember)",
                "   out << \" :: \" << render_member_type(tmember);",
                "+  if (tmember->get_req() != t_field::T_REQUIRED)",
                "+    out << \" | 'undefined'\";",
                " }"
            ],
            "changed_files": [
                "compiler/cpp/src/thrift/generate/t_erl_generator.cc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4495": ""
            },
            "ghissue_refs": {
                "1494": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4495",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1494",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9e0c9272140ea91ea4b3f042d207acbbaa15c093",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1519915353,
            "hunks": 1,
            "message": "THRIFT-4505: Fix python build on Vagrant Windows boxes Client: py This closes #1499",
            "diff": [
                "diff --git a/lib/py/setup.py b/lib/py/setup.py",
                "index 4056b9b90..4c2877abc 100644",
                "--- a/lib/py/setup.py",
                "+++ b/lib/py/setup.py",
                "@@ -33,3 +33,6 @@ import os",
                " if 'vagrant' in str(os.environ):",
                "-    del os.link",
                "+    try:",
                "+        del os.link",
                "+    except AttributeError:",
                "+        pass"
            ],
            "changed_files": [
                "lib/py/setup.py"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4505": ""
            },
            "ghissue_refs": {
                "1499": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4505",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1499",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5066eb484b0569b3290c597b848ee459f0112b11",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520452165,
            "hunks": 17,
            "message": "THRIFT-4509: * switch from grunt-external-daemon and grunt-shell to grunt-shell-spawn * update grunt to 1.0.2 * always use local copy of jquery and qunit * commit the package-lock files for npm keep versions stable Client: js This closes #1506",
            "diff": [
                "diff --git a/.gitignore b/.gitignore",
                "index f1a39ae01..66193db3e 100644",
                "--- a/.gitignore",
                "+++ b/.gitignore",
                "@@ -45,3 +45,2 @@ test-driver",
                " erl_crash.dump",
                "-package-lock.json",
                " project.lock.json",
                "@@ -240,3 +239,2 @@ project.lock.json",
                " /lib/js/doc",
                "-/lib/js/package-lock.json",
                " /lib/js/test/build",
                "diff --git a/lib/js/Gruntfile.js b/lib/js/Gruntfile.js",
                "index 82642438f..4aa450fca 100644",
                "--- a/lib/js/Gruntfile.js",
                "+++ b/lib/js/Gruntfile.js",
                "@@ -40,3 +40,3 @@ module.exports = function(grunt) {",
                "       InstallThriftJS: {",
                "-        command: 'mkdir test/build; mkdir test/build/js; cp src/thrift.js test/build/js/thrift.js'",
                "+        command: 'mkdir test/build; mkdir test/build/js; mkdir test/build/js/lib; cp src/thrift.js test/build/js/thrift.js'",
                "       },",
                "@@ -45,2 +45,5 @@ module.exports = function(grunt) {",
                "       },",
                "+      InstallTestLibs: {",
                "+        command: 'cd test; ant download_jslibs'",
                "+      },",
                "       ThriftGen: {",
                "@@ -57,16 +60,11 @@ module.exports = function(grunt) {",
                "       },",
                "-    },",
                "-    external_daemon: {",
                "       ThriftTestServer: {",
                "         options: {",
                "-          startCheck: function(stdout, stderr) {",
                "-            return (/Thrift Server running on port/).test(stdout);",
                "-          },",
                "-          nodeSpawnOptions: {",
                "-                              cwd: \"test\",",
                "-                              env: {NODE_PATH: \"../../nodejs/lib:../../../node_modules\"}",
                "-                            }",
                "+          async: true,",
                "+          execOptions: {",
                "+            cwd: \"./test\",",
                "+            env: {NODE_PATH: \"../../nodejs/lib:../../../node_modules\"}",
                "+          }",
                "         },",
                "-        cmd: \"node\",",
                "-        args: [\"server_http.js\"]",
                "+        command: \"node server_http.js\",",
                "       },",
                "@@ -74,13 +72,10 @@ module.exports = function(grunt) {",
                "         options: {",
                "-          startCheck: function(stdout, stderr) {",
                "-            return (/Thrift Server running on port/).test(stdout);",
                "-          },",
                "-          nodeSpawnOptions: {",
                "-                              cwd: \"test\",",
                "-                              env: {NODE_PATH: \"../../nodejs/lib:../../../node_modules\"}",
                "-                            }",
                "+          async: true,",
                "+          execOptions: {",
                "+            cwd: \"./test\",",
                "+            env: {NODE_PATH: \"../../nodejs/lib:../../../node_modules\"}",
                "+          }",
                "         },",
                "-        cmd: \"node\",",
                "-        args: [\"server_https.js\"]",
                "-      }",
                "+        command: \"node server_https.js\",",
                "+      },",
                "     },",
                "@@ -166,7 +161,15 @@ module.exports = function(grunt) {",
                "   grunt.loadNpmTasks('grunt-jsdoc');",
                "-  grunt.loadNpmTasks('grunt-external-daemon');",
                "-  grunt.loadNpmTasks('grunt-shell');",
                "+  grunt.loadNpmTasks('grunt-shell-spawn');",
                "+",
                "+  grunt.registerTask('wait', 'Wait just one second for server to start', function () {",
                "+    var done = this.async();",
                "+    setTimeout(function() {",
                "+      done(true);",
                "+    }, 1000);",
                "+  });",
                "   grunt.registerTask('test', ['jshint', 'shell:InstallThriftJS', 'shell:InstallThriftNodeJSDep', 'shell:ThriftGen',",
                "-                              'external_daemon:ThriftTestServer', 'external_daemon:ThriftTestServer_TLS',",
                "+                              'shell:InstallTestLibs',",
                "+                              'shell:ThriftTestServer', 'shell:ThriftTestServer_TLS',",
                "+                              'wait',",
                "                               'shell:ThriftGenDeepConstructor', 'qunit:ThriftDeepConstructor',",
                "@@ -175,3 +178,4 @@ module.exports = function(grunt) {",
                "                               'shell:ThriftGenJQ', 'qunit:ThriftJSJQ', 'qunit:ThriftJSJQ_TLS',",
                "-                              'shell:ThriftGenES6', 'qunit:ThriftWSES6'",
                "+                              'shell:ThriftGenES6', 'qunit:ThriftWSES6',",
                "+                              'shell:ThriftTestServer:kill', 'shell:ThriftTestServer_TLS:kill',",
                "                              ]);",
                "diff --git a/lib/js/package-lock.json b/lib/js/package-lock.json",
                "new file mode 100644",
                "index 000000000..a907ab0cc",
                "--- /dev/null",
                "+++ b/lib/js/package-lock.json",
                "@@ -0,0 +1,2215 @@",
                "+{",
                "+  \"name\": \"thrift\",",
                "+  \"version\": \"1.0.0\",",
                "+  \"lockfileVersion\": 1,",
                "+  \"requires\": true,",
                "+  \"dependencies\": {",
                "+    \"abbrev\": {",
                "+      \"version\": \"1.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz\",",
                "+      \"integrity\": \"sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==\"",
                "+    },",
                "+    \"ajv\": {",
                "+      \"version\": \"5.5.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-5.5.2.tgz\",",
                "+      \"integrity\": \"sha1-c7Xuyj+rZT49P5Qis0GtQiBdyWU=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"co\": \"4.6.0\",",
                "+        \"fast-deep-equal\": \"1.1.0\",",
                "+        \"fast-json-stable-stringify\": \"2.0.0\",",
                "+        \"json-schema-traverse\": \"0.3.1\"",
                "+      }",
                "+    },",
                "+    \"align-text\": {",
                "+      \"version\": \"0.1.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/align-text/-/align-text-0.1.4.tgz\",",
                "+      \"integrity\": \"sha1-DNkKVhCT810KmSVsIrcGlDP60Rc=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"kind-of\": \"3.2.2\",",
                "+        \"longest\": \"1.0.1\",",
                "+        \"repeat-string\": \"1.6.1\"",
                "+      }",
                "+    },",
                "+    \"ansi-regex\": {",
                "+      \"version\": \"2.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz\",",
                "+      \"integrity\": \"sha1-w7M6te42DYbg5ijwRorn7yfWVN8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"ansi-styles\": {",
                "+      \"version\": \"2.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz\",",
                "+      \"integrity\": \"sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"argparse\": {",
                "+      \"version\": \"1.0.10\",",
                "+      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz\",",
                "+      \"integrity\": \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"sprintf-js\": \"1.0.3\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"sprintf-js\": {",
                "+          \"version\": \"1.0.3\",",
                "+          \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz\",",
                "+          \"integrity\": \"sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"array-find-index\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/array-find-index/-/array-find-index-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-3wEKoSh+Fku9pvlyOwqWoexBh6E=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"asn1\": {",
                "+      \"version\": \"0.2.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/asn1/-/asn1-0.2.3.tgz\",",
                "+      \"integrity\": \"sha1-2sh4dxPJlmhJ/IGAd36+nB3fO4Y=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"assert-plus\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"async\": {",
                "+      \"version\": \"1.5.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/async/-/async-1.5.2.tgz\",",
                "+      \"integrity\": \"sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"asynckit\": {",
                "+      \"version\": \"0.4.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",",
                "+      \"integrity\": \"sha1-x57Zf380y48robyXkLzDZkdLS3k=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"aws-sign2\": {",
                "+      \"version\": \"0.7.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz\",",
                "+      \"integrity\": \"sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"aws4\": {",
                "+      \"version\": \"1.6.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/aws4/-/aws4-1.6.0.tgz\",",
                "+      \"integrity\": \"sha1-g+9cqGCysy5KDe7e6MdxudtXRx4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"babylon\": {",
                "+      \"version\": \"7.0.0-beta.19\",",
                "+      \"resolved\": \"https://registry.npmjs.org/babylon/-/babylon-7.0.0-beta.19.tgz\",",
                "+      \"integrity\": \"sha512-Vg0C9s/REX6/WIXN37UKpv5ZhRi6A4pjHlpkE34+8/a6c2W1Q692n3hmc+SZG5lKRnaExLUbxtJ1SVT+KaCQ/A==\"",
                "+    },",
                "+    \"balanced-match\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-ibTRmasr7kneFk6gK4nORi1xt2c=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"bcrypt-pbkdf\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-Y7xdy2EzG5K8Bf1SiVPDNGKgb40=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true,",
                "+      \"requires\": {",
                "+        \"tweetnacl\": \"0.14.5\"",
                "+      }",
                "+    },",
                "+    \"bluebird\": {",
                "+      \"version\": \"3.5.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/bluebird/-/bluebird-3.5.1.tgz\",",
                "+      \"integrity\": \"sha512-MKiLiV+I1AA596t9w1sQJ8jkiSr5+ZKi0WKrYGUn6d1Fx+Ij4tIj+m2WMQSGczs5jZVxV339chE8iwk6F64wjA==\"",
                "+    },",
                "+    \"boom\": {",
                "+      \"version\": \"4.3.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/boom/-/boom-4.3.1.tgz\",",
                "+      \"integrity\": \"sha1-T4owBctKfjiJ90kDD9JbluAdLjE=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"hoek\": \"4.2.1\"",
                "+      }",
                "+    },",
                "+    \"brace-expansion\": {",
                "+      \"version\": \"1.1.11\",",
                "+      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",",
                "+      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"balanced-match\": \"1.0.0\",",
                "+        \"concat-map\": \"0.0.1\"",
                "+      }",
                "+    },",
                "+    \"browserify-zlib\": {",
                "+      \"version\": \"0.1.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/browserify-zlib/-/browserify-zlib-0.1.4.tgz\",",
                "+      \"integrity\": \"sha1-uzX4pRn2AOD6a4SFJByXnQFB+y0=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"pako\": \"0.2.9\"",
                "+      }",
                "+    },",
                "+    \"builtin-modules\": {",
                "+      \"version\": \"1.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/builtin-modules/-/builtin-modules-1.1.1.tgz\",",
                "+      \"integrity\": \"sha1-Jw8HbFpywC9bZaR9+Uxf46J4iS8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"camelcase\": {",
                "+      \"version\": \"2.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-2.1.1.tgz\",",
                "+      \"integrity\": \"sha1-fB0W1nmhu+WcoCys7PsBHiAfWh8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"camelcase-keys\": {",
                "+      \"version\": \"2.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/camelcase-keys/-/camelcase-keys-2.1.0.tgz\",",
                "+      \"integrity\": \"sha1-MIvur/3ygRkFHvodkyITyRuPkuc=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"camelcase\": \"2.1.1\",",
                "+        \"map-obj\": \"1.0.1\"",
                "+      }",
                "+    },",
                "+    \"caseless\": {",
                "+      \"version\": \"0.12.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz\",",
                "+      \"integrity\": \"sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"catharsis\": {",
                "+      \"version\": \"0.8.9\",",
                "+      \"resolved\": \"https://registry.npmjs.org/catharsis/-/catharsis-0.8.9.tgz\",",
                "+      \"integrity\": \"sha1-mMyJDKZS3S7w5ws3klMQ/56Q/Is=\",",
                "+      \"requires\": {",
                "+        \"underscore-contrib\": \"0.3.0\"",
                "+      }",
                "+    },",
                "+    \"center-align\": {",
                "+      \"version\": \"0.1.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/center-align/-/center-align-0.1.3.tgz\",",
                "+      \"integrity\": \"sha1-qg0yYptu6XIgBBHL1EYckHvCt60=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"align-text\": \"0.1.4\",",
                "+        \"lazy-cache\": \"1.0.4\"",
                "+      }",
                "+    },",
                "+    \"chalk\": {",
                "+      \"version\": \"1.1.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz\",",
                "+      \"integrity\": \"sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"ansi-styles\": \"2.2.1\",",
                "+        \"escape-string-regexp\": \"1.0.5\",",
                "+        \"has-ansi\": \"2.0.0\",",
                "+        \"strip-ansi\": \"3.0.1\",",
                "+        \"supports-color\": \"2.0.0\"",
                "+      }",
                "+    },",
                "+    \"cli\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/cli/-/cli-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-IoF1NPJL+klQw01TLUjsvGIbjBQ=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"exit\": \"0.1.2\",",
                "+        \"glob\": \"7.1.2\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"glob\": {",
                "+          \"version\": \"7.1.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.2.tgz\",",
                "+          \"integrity\": \"sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"fs.realpath\": \"1.0.0\",",
                "+            \"inflight\": \"1.0.6\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"minimatch\": \"3.0.4\",",
                "+            \"once\": \"1.4.0\",",
                "+            \"path-is-absolute\": \"1.0.1\"",
                "+          }",
                "+        },",
                "+        \"minimatch\": {",
                "+          \"version\": \"3.0.4\",",
                "+          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",",
                "+          \"integrity\": \"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"brace-expansion\": \"1.1.11\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"cliui\": {",
                "+      \"version\": \"2.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-2.1.0.tgz\",",
                "+      \"integrity\": \"sha1-S0dXYP+AJkx2LDoXGQMukcf+oNE=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"center-align\": \"0.1.3\",",
                "+        \"right-align\": \"0.1.3\",",
                "+        \"wordwrap\": \"0.0.2\"",
                "+      }",
                "+    },",
                "+    \"co\": {",
                "+      \"version\": \"4.6.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/co/-/co-4.6.0.tgz\",",
                "+      \"integrity\": \"sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"coffeescript\": {",
                "+      \"version\": \"1.10.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/coffeescript/-/coffeescript-1.10.0.tgz\",",
                "+      \"integrity\": \"sha1-56qDAZF+9iGzXYo580jc3R234z4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"colors\": {",
                "+      \"version\": \"1.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/colors/-/colors-1.1.2.tgz\",",
                "+      \"integrity\": \"sha1-FopHAXVran9RoSzgyXv6KMCE7WM=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"combined-stream\": {",
                "+      \"version\": \"1.0.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.6.tgz\",",
                "+      \"integrity\": \"sha1-cj599ugBrFYTETp+RFqbactjKBg=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"delayed-stream\": \"1.0.0\"",
                "+      }",
                "+    },",
                "+    \"concat-map\": {",
                "+      \"version\": \"0.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",",
                "+      \"integrity\": \"sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"concat-stream\": {",
                "+      \"version\": \"1.6.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.0.tgz\",",
                "+      \"integrity\": \"sha1-CqxmL9Ur54lk1VMvaUeE5wEQrPc=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"inherits\": \"2.0.3\",",
                "+        \"readable-stream\": \"2.3.5\",",
                "+        \"typedarray\": \"0.0.6\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"isarray\": {",
                "+          \"version\": \"1.0.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\",",
                "+          \"integrity\": \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"readable-stream\": {",
                "+          \"version\": \"2.3.5\",",
                "+          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.5.tgz\",",
                "+          \"integrity\": \"sha512-tK0yDhrkygt/knjowCUiWP9YdV7c5R+8cR0r/kt9ZhBU906Fs6RpQJCEilamRJj1Nx2rWI6LkW9gKqjTkshhEw==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"core-util-is\": \"1.0.2\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"isarray\": \"1.0.0\",",
                "+            \"process-nextick-args\": \"2.0.0\",",
                "+            \"safe-buffer\": \"5.1.1\",",
                "+            \"string_decoder\": \"1.0.3\",",
                "+            \"util-deprecate\": \"1.0.2\"",
                "+          }",
                "+        },",
                "+        \"string_decoder\": {",
                "+          \"version\": \"1.0.3\",",
                "+          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.0.3.tgz\",",
                "+          \"integrity\": \"sha512-4AH6Z5fzNNBcH+6XDMfA/BTt87skxqJlO0lAh3Dker5zThcAxG6mKz+iGu308UKoPPQ8Dcqx/4JhujzltRa+hQ==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"safe-buffer\": \"5.1.1\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"console-browserify\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/console-browserify/-/console-browserify-1.1.0.tgz\",",
                "+      \"integrity\": \"sha1-8CQcRXMKn8YyOyBtvzjtx0HQuxA=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"date-now\": \"0.1.4\"",
                "+      }",
                "+    },",
                "+    \"core-util-is\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-tf1UIgqivFq1eqtxQMlAdUUDwac=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"cross-spawn\": {",
                "+      \"version\": \"3.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-3.0.1.tgz\",",
                "+      \"integrity\": \"sha1-ElYDfsufDF9549bvE14wdwGEuYI=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"lru-cache\": \"4.1.1\",",
                "+        \"which\": \"1.3.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"lru-cache\": {",
                "+          \"version\": \"4.1.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.1.tgz\",",
                "+          \"integrity\": \"sha512-q4spe4KTfsAS1SUHLO0wz8Qiyf1+vMIAgpRYioFYDMNqKfHQbg+AVDH3i4fvpl71/P1L0dBl+fQi+P37UYf0ew==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"pseudomap\": \"1.0.2\",",
                "+            \"yallist\": \"2.1.2\"",
                "+          }",
                "+        },",
                "+        \"which\": {",
                "+          \"version\": \"1.3.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/which/-/which-1.3.0.tgz\",",
                "+          \"integrity\": \"sha512-xcJpopdamTuY5duC/KnTTNBraPK54YwpenP4lzxU8H91GudWpFv38u0CKjclE1Wi2EH2EDz5LRcHcKbCIzqGyg==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"isexe\": \"2.0.0\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"cryptiles\": {",
                "+      \"version\": \"3.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/cryptiles/-/cryptiles-3.1.2.tgz\",",
                "+      \"integrity\": \"sha1-qJ+7Ig9c4l7FboxKqKT9e1sNKf4=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"boom\": \"5.2.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"boom\": {",
                "+          \"version\": \"5.2.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/boom/-/boom-5.2.0.tgz\",",
                "+          \"integrity\": \"sha512-Z5BTk6ZRe4tXXQlkqftmsAUANpXmuwlsF5Oov8ThoMbQRzdGTA1ngYRW160GexgOgjsFOKJz0LYhoNi+2AMBUw==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"hoek\": \"4.2.1\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"currently-unhandled\": {",
                "+      \"version\": \"0.4.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/currently-unhandled/-/currently-unhandled-0.4.1.tgz\",",
                "+      \"integrity\": \"sha1-mI3zP+qxke95mmE2nddsF635V+o=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"array-find-index\": \"1.0.2\"",
                "+      }",
                "+    },",
                "+    \"dashdash\": {",
                "+      \"version\": \"1.14.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz\",",
                "+      \"integrity\": \"sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"assert-plus\": \"1.0.0\"",
                "+      }",
                "+    },",
                "+    \"date-now\": {",
                "+      \"version\": \"0.1.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/date-now/-/date-now-0.1.4.tgz\",",
                "+      \"integrity\": \"sha1-6vQ5/U1ISK105cx9vvIAZyueNFs=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"dateformat\": {",
                "+      \"version\": \"1.0.12\",",
                "+      \"resolved\": \"https://registry.npmjs.org/dateformat/-/dateformat-1.0.12.tgz\",",
                "+      \"integrity\": \"sha1-nxJLZ1lMk3/3BpMuSmQsyo27/uk=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"get-stdin\": \"4.0.1\",",
                "+        \"meow\": \"3.7.0\"",
                "+      }",
                "+    },",
                "+    \"debug\": {",
                "+      \"version\": \"2.6.9\",",
                "+      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",",
                "+      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"ms\": \"2.0.0\"",
                "+      }",
                "+    },",
                "+    \"decamelize\": {",
                "+      \"version\": \"1.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz\",",
                "+      \"integrity\": \"sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"delayed-stream\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-3zrhmayt+31ECqrgsp4icrJOxhk=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"dom-serializer\": {",
                "+      \"version\": \"0.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.1.0.tgz\",",
                "+      \"integrity\": \"sha1-BzxpdUbOB4DOI75KKOKT5AvDDII=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"domelementtype\": \"1.1.3\",",
                "+        \"entities\": \"1.1.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"domelementtype\": {",
                "+          \"version\": \"1.1.3\",",
                "+          \"resolved\": \"https://registry.npmjs.org/domelementtype/-/domelementtype-1.1.3.tgz\",",
                "+          \"integrity\": \"sha1-vSh3PiZCiBrsUVRJJCmcXNgiGFs=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"entities\": {",
                "+          \"version\": \"1.1.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/entities/-/entities-1.1.1.tgz\",",
                "+          \"integrity\": \"sha1-blwtClYhtdra7O+AuQ7ftc13cvA=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"domelementtype\": {",
                "+      \"version\": \"1.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/domelementtype/-/domelementtype-1.3.0.tgz\",",
                "+      \"integrity\": \"sha1-sXrtguirWeUt2cGbF1bg/BhyBMI=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"domhandler\": {",
                "+      \"version\": \"2.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/domhandler/-/domhandler-2.3.0.tgz\",",
                "+      \"integrity\": \"sha1-LeWaCCLVAn+r/28DLCsloqir5zg=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"domelementtype\": \"1.3.0\"",
                "+      }",
                "+    },",
                "+    \"domutils\": {",
                "+      \"version\": \"1.5.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/domutils/-/domutils-1.5.1.tgz\",",
                "+      \"integrity\": \"sha1-3NhIiib1Y9YQeeSMn3t+Mjc2gs8=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"dom-serializer\": \"0.1.0\",",
                "+        \"domelementtype\": \"1.3.0\"",
                "+      }",
                "+    },",
                "+    \"ecc-jsbn\": {",
                "+      \"version\": \"0.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.1.tgz\",",
                "+      \"integrity\": \"sha1-D8c6ntXw1Tw4GTOYUj735UN3dQU=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true,",
                "+      \"requires\": {",
                "+        \"jsbn\": \"0.1.1\"",
                "+      }",
                "+    },",
                "+    \"entities\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/entities/-/entities-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-sph6o4ITR/zeZCsk/fyeT7cSvyY=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"error-ex\": {",
                "+      \"version\": \"1.3.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/error-ex/-/error-ex-1.3.1.tgz\",",
                "+      \"integrity\": \"sha1-+FWobOYa3E6GIcPNoh56dhLDqNw=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"is-arrayish\": \"0.2.1\"",
                "+      }",
                "+    },",
                "+    \"es6-promise\": {",
                "+      \"version\": \"4.2.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/es6-promise/-/es6-promise-4.2.4.tgz\",",
                "+      \"integrity\": \"sha512-/NdNZVJg+uZgtm9eS3O6lrOLYmQag2DjdEXuPaHlZ6RuVqgqaVZfgYCepEIKsLqwdQArOPtC3XzRLqGGfT8KQQ==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"escape-string-regexp\": {",
                "+      \"version\": \"1.0.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",",
                "+      \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\"",
                "+    },",
                "+    \"esprima\": {",
                "+      \"version\": \"2.7.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-2.7.3.tgz\",",
                "+      \"integrity\": \"sha1-luO3DVd59q1JzQMmc9HDEnZ7pYE=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"eventemitter2\": {",
                "+      \"version\": \"0.4.14\",",
                "+      \"resolved\": \"https://registry.npmjs.org/eventemitter2/-/eventemitter2-0.4.14.tgz\",",
                "+      \"integrity\": \"sha1-j2G3XN4BKy6esoTUVFWDtWQ7Yas=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"exit\": {",
                "+      \"version\": \"0.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/exit/-/exit-0.1.2.tgz\",",
                "+      \"integrity\": \"sha1-BjJjj42HfMghB9MKD/8aF8uhzQw=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"extend\": {",
                "+      \"version\": \"3.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/extend/-/extend-3.0.1.tgz\",",
                "+      \"integrity\": \"sha1-p1Xqe8Gt/MWjHOfnYtuq3F5jZEQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"extract-zip\": {",
                "+      \"version\": \"1.6.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-1.6.6.tgz\",",
                "+      \"integrity\": \"sha1-EpDt6NINCHK0Kf0/NRyhKOxe+Fw=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"concat-stream\": \"1.6.0\",",
                "+        \"debug\": \"2.6.9\",",
                "+        \"mkdirp\": \"0.5.0\",",
                "+        \"yauzl\": \"2.4.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"mkdirp\": {",
                "+          \"version\": \"0.5.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.0.tgz\",",
                "+          \"integrity\": \"sha1-HXMHam35hs2TROFecfzAWkyavxI=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"minimist\": \"0.0.8\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"extsprintf\": {",
                "+      \"version\": \"1.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz\",",
                "+      \"integrity\": \"sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"fast-deep-equal\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-1.1.0.tgz\",",
                "+      \"integrity\": \"sha1-wFNHeBfIa1HaqFPIHgWbcz0CNhQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"fast-json-stable-stringify\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-1RQsDK7msRifh9OnYREGT4bIu/I=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"fd-slicer\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-i1vL2ewyfFBBv5qwI/1nUPEXfmU=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"pend\": \"1.2.0\"",
                "+      }",
                "+    },",
                "+    \"figures\": {",
                "+      \"version\": \"1.7.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/figures/-/figures-1.7.0.tgz\",",
                "+      \"integrity\": \"sha1-y+Hjr/zxzUS4DK3+0o3Hk6lwHS4=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"escape-string-regexp\": \"1.0.5\",",
                "+        \"object-assign\": \"4.1.1\"",
                "+      }",
                "+    },",
                "+    \"find-up\": {",
                "+      \"version\": \"1.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz\",",
                "+      \"integrity\": \"sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"path-exists\": \"2.1.0\",",
                "+        \"pinkie-promise\": \"2.0.1\"",
                "+      }",
                "+    },",
                "+    \"findup-sync\": {",
                "+      \"version\": \"0.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/findup-sync/-/findup-sync-0.3.0.tgz\",",
                "+      \"integrity\": \"sha1-N5MKpdgWt3fANEXhlmzGeQpMCxY=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"glob\": \"5.0.15\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"glob\": {",
                "+          \"version\": \"5.0.15\",",
                "+          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-5.0.15.tgz\",",
                "+          \"integrity\": \"sha1-G8k2ueAvSmA/zCIuz3Yz0wuLk7E=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"inflight\": \"1.0.6\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"minimatch\": \"3.0.4\",",
                "+            \"once\": \"1.4.0\",",
                "+            \"path-is-absolute\": \"1.0.1\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"forever-agent\": {",
                "+      \"version\": \"0.6.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz\",",
                "+      \"integrity\": \"sha1-+8cfDEGt6zf5bFd60e1C2P2sypE=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"form-data\": {",
                "+      \"version\": \"2.3.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-2.3.2.tgz\",",
                "+      \"integrity\": \"sha1-SXBJi+YEwgwAXU9cI67NIda0kJk=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"asynckit\": \"0.4.0\",",
                "+        \"combined-stream\": \"1.0.6\",",
                "+        \"mime-types\": \"2.1.18\"",
                "+      }",
                "+    },",
                "+    \"fs-extra\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-zTzl9+fLYUWIP8rjGR6Yd/hYeVA=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"graceful-fs\": \"4.1.11\",",
                "+        \"jsonfile\": \"2.4.0\",",
                "+        \"klaw\": \"1.3.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"klaw\": {",
                "+          \"version\": \"1.3.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/klaw/-/klaw-1.3.1.tgz\",",
                "+          \"integrity\": \"sha1-QIhDO0azsbolnXh4XY6W9zugJDk=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"graceful-fs\": \"4.1.11\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"fs.realpath\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-FQStJSMVjKpA20onh8sBQRmU6k8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"get-stdin\": {",
                "+      \"version\": \"4.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/get-stdin/-/get-stdin-4.0.1.tgz\",",
                "+      \"integrity\": \"sha1-uWjGsKBDhDJJAui/Gl3zJXmkUP4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"getobject\": {",
                "+      \"version\": \"0.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/getobject/-/getobject-0.1.0.tgz\",",
                "+      \"integrity\": \"sha1-BHpEl4n6Fg0Bj1SG7ZEyC27HiFw=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"getpass\": {",
                "+      \"version\": \"0.1.7\",",
                "+      \"resolved\": \"https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz\",",
                "+      \"integrity\": \"sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"assert-plus\": \"1.0.0\"",
                "+      }",
                "+    },",
                "+    \"glob\": {",
                "+      \"version\": \"7.0.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.0.6.tgz\",",
                "+      \"integrity\": \"sha1-IRuvr0nlJbjNkyYNFKsTYVKz9Xo=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"fs.realpath\": \"1.0.0\",",
                "+        \"inflight\": \"1.0.6\",",
                "+        \"inherits\": \"2.0.3\",",
                "+        \"minimatch\": \"3.0.4\",",
                "+        \"once\": \"1.4.0\",",
                "+        \"path-is-absolute\": \"1.0.1\"",
                "+      }",
                "+    },",
                "+    \"graceful-fs\": {",
                "+      \"version\": \"4.1.11\",",
                "+      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz\",",
                "+      \"integrity\": \"sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg=\"",
                "+    },",
                "+    \"grunt\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/grunt/-/grunt-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-TmpeaVtwRy/VME9fqeNCNoNqc7w=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"coffeescript\": \"1.10.0\",",
                "+        \"dateformat\": \"1.0.12\",",
                "+        \"eventemitter2\": \"0.4.14\",",
                "+        \"exit\": \"0.1.2\",",
                "+        \"findup-sync\": \"0.3.0\",",
                "+        \"glob\": \"7.0.6\",",
                "+        \"grunt-cli\": \"1.2.0\",",
                "+        \"grunt-known-options\": \"1.1.0\",",
                "+        \"grunt-legacy-log\": \"1.0.1\",",
                "+        \"grunt-legacy-util\": \"1.0.0\",",
                "+        \"iconv-lite\": \"0.4.19\",",
                "+        \"js-yaml\": \"3.5.5\",",
                "+        \"minimatch\": \"3.0.4\",",
                "+        \"nopt\": \"3.0.6\",",
                "+        \"path-is-absolute\": \"1.0.1\",",
                "+        \"rimraf\": \"2.2.8\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"nopt\": {",
                "+          \"version\": \"3.0.6\",",
                "+          \"resolved\": \"https://registry.npmjs.org/nopt/-/nopt-3.0.6.tgz\",",
                "+          \"integrity\": \"sha1-xkZdvwirzU2zWTF/eaxopkayj/k=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"abbrev\": \"1.1.1\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"grunt-cli\": {",
                "+      \"version\": \"1.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/grunt-cli/-/grunt-cli-1.2.0.tgz\",",
                "+      \"integrity\": \"sha1-VisRnrsGndtGSs4oRVAb6Xs1tqg=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"findup-sync\": \"0.3.0\",",
                "+        \"grunt-known-options\": \"1.1.0\",",
                "+        \"nopt\": \"3.0.6\",",
                "+        \"resolve\": \"1.1.7\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"findup-sync\": {",
                "+          \"version\": \"0.3.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/findup-sync/-/findup-sync-0.3.0.tgz\",",
                "+          \"integrity\": \"sha1-N5MKpdgWt3fANEXhlmzGeQpMCxY=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"glob\": \"5.0.15\"",
                "+          }",
                "+        },",
                "+        \"glob\": {",
                "+          \"version\": \"5.0.15\",",
                "+          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-5.0.15.tgz\",",
                "+          \"integrity\": \"sha1-G8k2ueAvSmA/zCIuz3Yz0wuLk7E=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"inflight\": \"1.0.6\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"minimatch\": \"3.0.4\",",
                "+            \"once\": \"1.4.0\",",
                "+            \"path-is-absolute\": \"1.0.1\"",
                "+          }",
                "+        },",
                "+        \"minimatch\": {",
                "+          \"version\": \"3.0.4\",",
                "+          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",",
                "+          \"integrity\": \"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"brace-expansion\": \"1.1.11\"",
                "+          }",
                "+        },",
                "+        \"nopt\": {",
                "+          \"version\": \"3.0.6\",",
                "+          \"resolved\": \"https://registry.npmjs.org/nopt/-/nopt-3.0.6.tgz\",",
                "+          \"integrity\": \"sha1-xkZdvwirzU2zWTF/eaxopkayj/k=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"abbrev\": \"1.1.1\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"grunt-contrib-concat\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/grunt-contrib-concat/-/grunt-contrib-concat-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-YVCYYwhOhx1+ht5IwBUlntl3Rb0=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"chalk\": \"1.1.3\",",
                "+        \"source-map\": \"0.5.7\"",
                "+      }",
                "+    },",
                "+    \"grunt-contrib-jshint\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/grunt-contrib-jshint/-/grunt-contrib-jshint-1.1.0.tgz\",",
                "+      \"integrity\": \"sha1-Np2QmyWTxA6L55lAshNAhQx5Oaw=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"chalk\": \"1.1.3\",",
                "+        \"hooker\": \"0.2.3\",",
                "+        \"jshint\": \"2.9.5\"",
                "+      }",
                "+    },",
                "+    \"grunt-contrib-qunit\": {",
                "+      \"version\": \"1.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/grunt-contrib-qunit/-/grunt-contrib-qunit-1.3.0.tgz\",",
                "+      \"integrity\": \"sha1-naxijP1OyBWZhjPbc7Ur2z3byZ4=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"grunt-lib-phantomjs\": \"1.1.0\"",
                "+      }",
                "+    },",
                "+    \"grunt-contrib-uglify\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/grunt-contrib-uglify/-/grunt-contrib-uglify-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-rmekb5FT7dTLEYE6Vetpxw19svs=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"chalk\": \"1.1.3\",",
                "+        \"lodash\": \"4.17.5\",",
                "+        \"maxmin\": \"1.1.0\",",
                "+        \"uglify-js\": \"2.6.4\",",
                "+        \"uri-path\": \"1.0.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"lodash\": {",
                "+          \"version\": \"4.17.5\",",
                "+          \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.5.tgz\",",
                "+          \"integrity\": \"sha512-svL3uiZf1RwhH+cWrfZn3A4+U58wbP0tGVTLQPbjplZxZ8ROD9VLuNgsRniTlLe7OlSqR79RUehXgpBW/s0IQw==\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"grunt-jsdoc\": {",
                "+      \"version\": \"2.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/grunt-jsdoc/-/grunt-jsdoc-2.2.1.tgz\",",
                "+      \"integrity\": \"sha512-33QZYBYjv2Ph3H2ygqXHn/o0ttfptw1f9QciOTgvzhzUeiPrnvzMNUApTPtw22T6zgReE5FZ1RR58U2wnK/l+w==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"cross-spawn\": \"3.0.1\",",
                "+        \"jsdoc\": \"3.5.5\",",
                "+        \"marked\": \"0.3.17\"",
                "+      }",
                "+    },",
                "+    \"grunt-known-options\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/grunt-known-options/-/grunt-known-options-1.1.0.tgz\",",
                "+      \"integrity\": \"sha1-pCdO6zL6dl2lp6OxcSYXzjsUQUk=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"grunt-legacy-log\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/grunt-legacy-log/-/grunt-legacy-log-1.0.1.tgz\",",
                "+      \"integrity\": \"sha512-rwuyqNKlI0IPz0DvxzJjcEiQEBaBNVeb1LFoZKxSmHLETFUwhwUrqOsPIxURTKSwNZHZ4ht1YLBYmVU0YZAzHQ==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"colors\": \"1.1.2\",",
                "+        \"grunt-legacy-log-utils\": \"1.0.0\",",
                "+        \"hooker\": \"0.2.3\",",
                "+        \"lodash\": \"4.17.5\",",
                "+        \"underscore.string\": \"3.3.4\"",
                "+      }",
                "+    },",
                "+    \"grunt-legacy-log-utils\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/grunt-legacy-log-utils/-/grunt-legacy-log-utils-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-p7ji0Ps1taUPSvmG/BEnSevJbz0=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"chalk\": \"1.1.3\",",
                "+        \"lodash\": \"4.3.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"lodash\": {",
                "+          \"version\": \"4.3.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.3.0.tgz\",",
                "+          \"integrity\": \"sha1-79nEpuxT87BUEkKZFcPkgk5NJaQ=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"grunt-legacy-util\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/grunt-legacy-util/-/grunt-legacy-util-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-OGqnjcbtUJhsKxiVcmWxtIq7m4Y=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"async\": \"1.5.2\",",
                "+        \"exit\": \"0.1.2\",",
                "+        \"getobject\": \"0.1.0\",",
                "+        \"hooker\": \"0.2.3\",",
                "+        \"lodash\": \"4.3.0\",",
                "+        \"underscore.string\": \"3.2.3\",",
                "+        \"which\": \"1.2.14\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"lodash\": {",
                "+          \"version\": \"4.3.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.3.0.tgz\",",
                "+          \"integrity\": \"sha1-79nEpuxT87BUEkKZFcPkgk5NJaQ=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"underscore.string\": {",
                "+          \"version\": \"3.2.3\",",
                "+          \"resolved\": \"https://registry.npmjs.org/underscore.string/-/underscore.string-3.2.3.tgz\",",
                "+          \"integrity\": \"sha1-gGmSYzZl1eX8tNsfs6hi62jp5to=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"grunt-lib-phantomjs\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/grunt-lib-phantomjs/-/grunt-lib-phantomjs-1.1.0.tgz\",",
                "+      \"integrity\": \"sha1-np7c3Z/S3UDgwYHJQ3HVcqpe6tI=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"eventemitter2\": \"0.4.14\",",
                "+        \"phantomjs-prebuilt\": \"2.1.16\",",
                "+        \"rimraf\": \"2.6.2\",",
                "+        \"semver\": \"5.5.0\",",
                "+        \"temporary\": \"0.0.8\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"glob\": {",
                "+          \"version\": \"7.1.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.2.tgz\",",
                "+          \"integrity\": \"sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"fs.realpath\": \"1.0.0\",",
                "+            \"inflight\": \"1.0.6\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"minimatch\": \"3.0.4\",",
                "+            \"once\": \"1.4.0\",",
                "+            \"path-is-absolute\": \"1.0.1\"",
                "+          }",
                "+        },",
                "+        \"minimatch\": {",
                "+          \"version\": \"3.0.4\",",
                "+          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",",
                "+          \"integrity\": \"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"brace-expansion\": \"1.1.11\"",
                "+          }",
                "+        },",
                "+        \"rimraf\": {",
                "+          \"version\": \"2.6.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.6.2.tgz\",",
                "+          \"integrity\": \"sha512-lreewLK/BlghmxtfH36YYVg1i8IAce4TI7oao75I1g245+6BctqTVQiBP3YUJ9C6DQOXJmkYR9X9fCLtCOJc5w==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"glob\": \"7.1.2\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"grunt-shell-spawn\": {",
                "+      \"version\": \"0.3.10\",",
                "+      \"resolved\": \"https://registry.npmjs.org/grunt-shell-spawn/-/grunt-shell-spawn-0.3.10.tgz\",",
                "+      \"integrity\": \"sha1-gbuNRX7EfTGCqH1jCO+EXd+5SI8=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"grunt\": \"1.0.2\",",
                "+        \"sync-exec\": \"0.6.2\"",
                "+      }",
                "+    },",
                "+    \"gzip-size\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/gzip-size/-/gzip-size-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-Zs+LEBBHInuVus5uodoMF37Vwi8=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"browserify-zlib\": \"0.1.4\",",
                "+        \"concat-stream\": \"1.6.0\"",
                "+      }",
                "+    },",
                "+    \"har-schema\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"har-validator\": {",
                "+      \"version\": \"5.0.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/har-validator/-/har-validator-5.0.3.tgz\",",
                "+      \"integrity\": \"sha1-ukAsJmGU8VlW7xXg/PJCmT9qff0=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"ajv\": \"5.5.2\",",
                "+        \"har-schema\": \"2.0.0\"",
                "+      }",
                "+    },",
                "+    \"has-ansi\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"ansi-regex\": \"2.1.1\"",
                "+      }",
                "+    },",
                "+    \"hasha\": {",
                "+      \"version\": \"2.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/hasha/-/hasha-2.2.0.tgz\",",
                "+      \"integrity\": \"sha1-eNfL/B5tZjA/55g3NlmEUXsvbuE=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"is-stream\": \"1.1.0\",",
                "+        \"pinkie-promise\": \"2.0.1\"",
                "+      }",
                "+    },",
                "+    \"hawk\": {",
                "+      \"version\": \"6.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/hawk/-/hawk-6.0.2.tgz\",",
                "+      \"integrity\": \"sha512-miowhl2+U7Qle4vdLqDdPt9m09K6yZhkLDTWGoUiUzrQCn+mHHSmfJgAyGaLRZbPmTqfFFjRV1QWCW0VWUJBbQ==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"boom\": \"4.3.1\",",
                "+        \"cryptiles\": \"3.1.2\",",
                "+        \"hoek\": \"4.2.1\",",
                "+        \"sntp\": \"2.1.0\"",
                "+      }",
                "+    },",
                "+    \"hoek\": {",
                "+      \"version\": \"4.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/hoek/-/hoek-4.2.1.tgz\",",
                "+      \"integrity\": \"sha512-QLg82fGkfnJ/4iy1xZ81/9SIJiq1NGFUMGs6ParyjBZr6jW2Ufj/snDqTHixNlHdPNwN2RLVD0Pi3igeK9+JfA==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"hooker\": {",
                "+      \"version\": \"0.2.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/hooker/-/hooker-0.2.3.tgz\",",
                "+      \"integrity\": \"sha1-uDT3I8xKJCqmWWNFnfbZhMXT2Vk=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"hosted-git-info\": {",
                "+      \"version\": \"2.5.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.5.0.tgz\",",
                "+      \"integrity\": \"sha512-pNgbURSuab90KbTqvRPsseaTxOJCZBD0a7t+haSN33piP9cCM4l0CqdzAif2hUqm716UovKB2ROmiabGAKVXyg==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"htmlparser2\": {",
                "+      \"version\": \"3.8.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/htmlparser2/-/htmlparser2-3.8.3.tgz\",",
                "+      \"integrity\": \"sha1-mWwosZFRaovoZQGn15dX5ccMEGg=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"domelementtype\": \"1.3.0\",",
                "+        \"domhandler\": \"2.3.0\",",
                "+        \"domutils\": \"1.5.1\",",
                "+        \"entities\": \"1.0.0\",",
                "+        \"readable-stream\": \"1.1.14\"",
                "+      }",
                "+    },",
                "+    \"http-signature\": {",
                "+      \"version\": \"1.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz\",",
                "+      \"integrity\": \"sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"assert-plus\": \"1.0.0\",",
                "+        \"jsprim\": \"1.4.1\",",
                "+        \"sshpk\": \"1.13.1\"",
                "+      }",
                "+    },",
                "+    \"iconv-lite\": {",
                "+      \"version\": \"0.4.19\",",
                "+      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.19.tgz\",",
                "+      \"integrity\": \"sha512-oTZqweIP51xaGPI4uPa56/Pri/480R+mo7SeU+YETByQNhDG55ycFyNLIgta9vXhILrxXDmF7ZGhqZIcuN0gJQ==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"indent-string\": {",
                "+      \"version\": \"2.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/indent-string/-/indent-string-2.1.0.tgz\",",
                "+      \"integrity\": \"sha1-ji1INIdCEhtKghi3oTfppSBJ3IA=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"repeating\": \"2.0.1\"",
                "+      }",
                "+    },",
                "+    \"inflight\": {",
                "+      \"version\": \"1.0.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",",
                "+      \"integrity\": \"sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"once\": \"1.4.0\",",
                "+        \"wrappy\": \"1.0.2\"",
                "+      }",
                "+    },",
                "+    \"inherits\": {",
                "+      \"version\": \"2.0.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz\",",
                "+      \"integrity\": \"sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"is-arrayish\": {",
                "+      \"version\": \"0.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz\",",
                "+      \"integrity\": \"sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"is-buffer\": {",
                "+      \"version\": \"1.1.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz\",",
                "+      \"integrity\": \"sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"is-builtin-module\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-builtin-module/-/is-builtin-module-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-VAVy0096wxGfj3bDDLwbHgN6/74=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"builtin-modules\": \"1.1.1\"",
                "+      }",
                "+    },",
                "+    \"is-finite\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-finite/-/is-finite-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-zGZ3aVYCvlUO8R6LSqYwU0K20Ko=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"number-is-nan\": \"1.0.1\"",
                "+      }",
                "+    },",
                "+    \"is-stream\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz\",",
                "+      \"integrity\": \"sha1-EtSj3U5o4Lec6428hBc66A2RykQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"is-typedarray\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"is-utf8\": {",
                "+      \"version\": \"0.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-utf8/-/is-utf8-0.2.1.tgz\",",
                "+      \"integrity\": \"sha1-Sw2hRCEE0bM2NA6AeX6GXPOffXI=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"isarray\": {",
                "+      \"version\": \"0.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",",
                "+      \"integrity\": \"sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"isexe\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"isstream\": {",
                "+      \"version\": \"0.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz\",",
                "+      \"integrity\": \"sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"js-yaml\": {",
                "+      \"version\": \"3.5.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-3.5.5.tgz\",",
                "+      \"integrity\": \"sha1-A3fDgBfKvHMisNH7zSWkkWQfL74=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"argparse\": \"1.0.10\",",
                "+        \"esprima\": \"2.7.3\"",
                "+      }",
                "+    },",
                "+    \"js2xmlparser\": {",
                "+      \"version\": \"3.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/js2xmlparser/-/js2xmlparser-3.0.0.tgz\",",
                "+      \"integrity\": \"sha1-P7YOqgicVED5MZ9RdgzNB+JJlzM=\",",
                "+      \"requires\": {",
                "+        \"xmlcreate\": \"1.0.2\"",
                "+      }",
                "+    },",
                "+    \"jsbn\": {",
                "+      \"version\": \"0.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz\",",
                "+      \"integrity\": \"sha1-peZUwuWi3rXyAdls77yoDA7y9RM=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true",
                "+    },",
                "+    \"jsdoc\": {",
                "+      \"version\": \"3.5.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/jsdoc/-/jsdoc-3.5.5.tgz\",",
                "+      \"integrity\": \"sha512-6PxB65TAU4WO0Wzyr/4/YhlGovXl0EVYfpKbpSroSj0qBxT4/xod/l40Opkm38dRHRdQgdeY836M0uVnJQG7kg==\",",
                "+      \"requires\": {",
                "+        \"babylon\": \"7.0.0-beta.19\",",
                "+        \"bluebird\": \"3.5.1\",",
                "+        \"catharsis\": \"0.8.9\",",
                "+        \"escape-string-regexp\": \"1.0.5\",",
                "+        \"js2xmlparser\": \"3.0.0\",",
                "+        \"klaw\": \"2.0.0\",",
                "+        \"marked\": \"0.3.17\",",
                "+        \"mkdirp\": \"0.5.1\",",
                "+        \"requizzle\": \"0.2.1\",",
                "+        \"strip-json-comments\": \"2.0.1\",",
                "+        \"taffydb\": \"2.6.2\",",
                "+        \"underscore\": \"1.8.3\"",
                "+      }",
                "+    },",
                "+    \"jshint\": {",
                "+      \"version\": \"2.9.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/jshint/-/jshint-2.9.5.tgz\",",
                "+      \"integrity\": \"sha1-HnJSkVzmgbQIJ+4UJIxG006apiw=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"cli\": \"1.0.1\",",
                "+        \"console-browserify\": \"1.1.0\",",
                "+        \"exit\": \"0.1.2\",",
                "+        \"htmlparser2\": \"3.8.3\",",
                "+        \"lodash\": \"3.7.0\",",
                "+        \"minimatch\": \"3.0.4\",",
                "+        \"shelljs\": \"0.3.0\",",
                "+        \"strip-json-comments\": \"1.0.4\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"lodash\": {",
                "+          \"version\": \"3.7.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-3.7.0.tgz\",",
                "+          \"integrity\": \"sha1-Nni9irmVBXwHreg27S7wh9qBHUU=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"minimatch\": {",
                "+          \"version\": \"3.0.4\",",
                "+          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",",
                "+          \"integrity\": \"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"brace-expansion\": \"1.1.11\"",
                "+          }",
                "+        },",
                "+        \"strip-json-comments\": {",
                "+          \"version\": \"1.0.4\",",
                "+          \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-1.0.4.tgz\",",
                "+          \"integrity\": \"sha1-HhX7ysl9Pumb8tc7TGVrCCu6+5E=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"json-schema\": {",
                "+      \"version\": \"0.2.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz\",",
                "+      \"integrity\": \"sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"json-schema-traverse\": {",
                "+      \"version\": \"0.3.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.3.1.tgz\",",
                "+      \"integrity\": \"sha1-NJptRMU6Ud6JtAgFxdXlm0F9M0A=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"json-stringify-safe\": {",
                "+      \"version\": \"5.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz\",",
                "+      \"integrity\": \"sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"jsonfile\": {",
                "+      \"version\": \"2.4.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/jsonfile/-/jsonfile-2.4.0.tgz\",",
                "+      \"integrity\": \"sha1-NzaitCi4e72gzIO1P6PWM6NcKug=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"graceful-fs\": \"4.1.11\"",
                "+      }",
                "+    },",
                "+    \"jsprim\": {",
                "+      \"version\": \"1.4.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz\",",
                "+      \"integrity\": \"sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"assert-plus\": \"1.0.0\",",
                "+        \"extsprintf\": \"1.3.0\",",
                "+        \"json-schema\": \"0.2.3\",",
                "+        \"verror\": \"1.10.0\"",
                "+      }",
                "+    },",
                "+    \"kew\": {",
                "+      \"version\": \"0.7.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/kew/-/kew-0.7.0.tgz\",",
                "+      \"integrity\": \"sha1-edk9LTM2PW/dKXCzNdkUGtWR15s=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"kind-of\": {",
                "+      \"version\": \"3.2.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz\",",
                "+      \"integrity\": \"sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"is-buffer\": \"1.1.6\"",
                "+      }",
                "+    },",
                "+    \"klaw\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/klaw/-/klaw-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-WcEo4Nxc5BAgEVEZTuucv4WGUPY=\",",
                "+      \"requires\": {",
                "+        \"graceful-fs\": \"4.1.11\"",
                "+      }",
                "+    },",
                "+    \"lazy-cache\": {",
                "+      \"version\": \"1.0.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/lazy-cache/-/lazy-cache-1.0.4.tgz\",",
                "+      \"integrity\": \"sha1-odePw6UEdMuAhF07O24dpJpEbo4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"load-json-file\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz\",",
                "+      \"integrity\": \"sha1-lWkFcI1YtLq0wiYbBPWfMcmTdMA=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"graceful-fs\": \"4.1.11\",",
                "+        \"parse-json\": \"2.2.0\",",
                "+        \"pify\": \"2.3.0\",",
                "+        \"pinkie-promise\": \"2.0.1\",",
                "+        \"strip-bom\": \"2.0.0\"",
                "+      }",
                "+    },",
                "+    \"lodash\": {",
                "+      \"version\": \"4.17.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.5.tgz\",",
                "+      \"integrity\": \"sha512-svL3uiZf1RwhH+cWrfZn3A4+U58wbP0tGVTLQPbjplZxZ8ROD9VLuNgsRniTlLe7OlSqR79RUehXgpBW/s0IQw==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"longest\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/longest/-/longest-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-MKCy2jj3N3DoKUoNIuZiXtd9AJc=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"loud-rejection\": {",
                "+      \"version\": \"1.6.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/loud-rejection/-/loud-rejection-1.6.0.tgz\",",
                "+      \"integrity\": \"sha1-W0b4AUft7leIcPCG0Eghz5mOVR8=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"currently-unhandled\": \"0.4.1\",",
                "+        \"signal-exit\": \"3.0.2\"",
                "+      }",
                "+    },",
                "+    \"map-obj\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/map-obj/-/map-obj-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-2TPOuSBdgr3PSIb2dCvcK03qFG0=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"marked\": {",
                "+      \"version\": \"0.3.17\",",
                "+      \"resolved\": \"https://registry.npmjs.org/marked/-/marked-0.3.17.tgz\",",
                "+      \"integrity\": \"sha512-+AKbNsjZl6jFfLPwHhWmGTqE009wTKn3RTmn9K8oUKHrX/abPJjtcRtXpYB/FFrwPJRUA86LX/de3T0knkPCmQ==\"",
                "+    },",
                "+    \"maxmin\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/maxmin/-/maxmin-1.1.0.tgz\",",
                "+      \"integrity\": \"sha1-cTZehKmd2Piz99X94vANHn9zvmE=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"chalk\": \"1.1.3\",",
                "+        \"figures\": \"1.7.0\",",
                "+        \"gzip-size\": \"1.0.0\",",
                "+        \"pretty-bytes\": \"1.0.4\"",
                "+      }",
                "+    },",
                "+    \"meow\": {",
                "+      \"version\": \"3.7.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/meow/-/meow-3.7.0.tgz\",",
                "+      \"integrity\": \"sha1-cstmi0JSKCkKu/qFaJJYcwioAfs=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"camelcase-keys\": \"2.1.0\",",
                "+        \"decamelize\": \"1.2.0\",",
                "+        \"loud-rejection\": \"1.6.0\",",
                "+        \"map-obj\": \"1.0.1\",",
                "+        \"minimist\": \"1.2.0\",",
                "+        \"normalize-package-data\": \"2.4.0\",",
                "+        \"object-assign\": \"4.1.1\",",
                "+        \"read-pkg-up\": \"1.0.1\",",
                "+        \"redent\": \"1.0.0\",",
                "+        \"trim-newlines\": \"1.0.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"minimist\": {",
                "+          \"version\": \"1.2.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz\",",
                "+          \"integrity\": \"sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"mime-db\": {",
                "+      \"version\": \"1.33.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.33.0.tgz\",",
                "+      \"integrity\": \"sha512-BHJ/EKruNIqJf/QahvxwQZXKygOQ256myeN/Ew+THcAa5q+PjyTTMMeNQC4DZw5AwfvelsUrA6B67NKMqXDbzQ==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"mime-types\": {",
                "+      \"version\": \"2.1.18\",",
                "+      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.18.tgz\",",
                "+      \"integrity\": \"sha512-lc/aahn+t4/SWV/qcmumYjymLsWfN3ELhpmVuUFjgsORruuZPVSwAQryq+HHGvO/SI2KVX26bx+En+zhM8g8hQ==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"mime-db\": \"1.33.0\"",
                "+      }",
                "+    },",
                "+    \"minimatch\": {",
                "+      \"version\": \"3.0.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",",
                "+      \"integrity\": \"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"brace-expansion\": \"1.1.11\"",
                "+      }",
                "+    },",
                "+    \"minimist\": {",
                "+      \"version\": \"0.0.8\",",
                "+      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz\",",
                "+      \"integrity\": \"sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=\"",
                "+    },",
                "+    \"mkdirp\": {",
                "+      \"version\": \"0.5.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz\",",
                "+      \"integrity\": \"sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=\",",
                "+      \"requires\": {",
                "+        \"minimist\": \"0.0.8\"",
                "+      }",
                "+    },",
                "+    \"ms\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"nopt\": {",
                "+      \"version\": \"4.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/nopt/-/nopt-4.0.1.tgz\",",
                "+      \"integrity\": \"sha1-0NRoWv1UFRk8jHUFYC0NF81kR00=\",",
                "+      \"requires\": {",
                "+        \"abbrev\": \"1.1.1\",",
                "+        \"osenv\": \"0.1.5\"",
                "+      }",
                "+    },",
                "+    \"normalize-package-data\": {",
                "+      \"version\": \"2.4.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.4.0.tgz\",",
                "+      \"integrity\": \"sha512-9jjUFbTPfEy3R/ad/2oNbKtW9Hgovl5O1FvFWKkKblNXoN/Oou6+9+KKohPK13Yc3/TyunyWhJp6gvRNR/PPAw==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"hosted-git-info\": \"2.5.0\",",
                "+        \"is-builtin-module\": \"1.0.0\",",
                "+        \"semver\": \"5.5.0\",",
                "+        \"validate-npm-package-license\": \"3.0.3\"",
                "+      }",
                "+    },",
                "+    \"number-is-nan\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"oauth-sign\": {",
                "+      \"version\": \"0.8.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.8.2.tgz\",",
                "+      \"integrity\": \"sha1-Rqarfwrq2N6unsBWV4C31O/rnUM=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"object-assign\": {",
                "+      \"version\": \"4.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",",
                "+      \"integrity\": \"sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"once\": {",
                "+      \"version\": \"1.4.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",",
                "+      \"integrity\": \"sha1-WDsap3WWHUsROsF9nFC6753Xa9E=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"wrappy\": \"1.0.2\"",
                "+      }",
                "+    },",
                "+    \"os-homedir\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-/7xJiDNuDoM94MFox+8VISGqf7M=\"",
                "+    },",
                "+    \"os-tmpdir\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=\"",
                "+    },",
                "+    \"osenv\": {",
                "+      \"version\": \"0.1.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/osenv/-/osenv-0.1.5.tgz\",",
                "+      \"integrity\": \"sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==\",",
                "+      \"requires\": {",
                "+        \"os-homedir\": \"1.0.2\",",
                "+        \"os-tmpdir\": \"1.0.2\"",
                "+      }",
                "+    },",
                "+    \"package\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/package/-/package-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-0lofmeJQbcsn1nBLg9yooxLk7cw=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"pako\": {",
                "+      \"version\": \"0.2.9\",",
                "+      \"resolved\": \"https://registry.npmjs.org/pako/-/pako-0.2.9.tgz\",",
                "+      \"integrity\": \"sha1-8/dSL073gjSNqBYbrZ7P1Rv4OnU=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"parse-json\": {",
                "+      \"version\": \"2.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz\",",
                "+      \"integrity\": \"sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"error-ex\": \"1.3.1\"",
                "+      }",
                "+    },",
                "+    \"path-exists\": {",
                "+      \"version\": \"2.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz\",",
                "+      \"integrity\": \"sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"pinkie-promise\": \"2.0.1\"",
                "+      }",
                "+    },",
                "+    \"path-is-absolute\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"path-type\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-1.1.0.tgz\",",
                "+      \"integrity\": \"sha1-WcRPfuSR2nBNpBXaWkBwuk+P5EE=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"graceful-fs\": \"4.1.11\",",
                "+        \"pify\": \"2.3.0\",",
                "+        \"pinkie-promise\": \"2.0.1\"",
                "+      }",
                "+    },",
                "+    \"pend\": {",
                "+      \"version\": \"1.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/pend/-/pend-1.2.0.tgz\",",
                "+      \"integrity\": \"sha1-elfrVQpng/kRUzH89GY9XI4AelA=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"performance-now\": {",
                "+      \"version\": \"2.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz\",",
                "+      \"integrity\": \"sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"phantomjs-prebuilt\": {",
                "+      \"version\": \"2.1.16\",",
                "+      \"resolved\": \"https://registry.npmjs.org/phantomjs-prebuilt/-/phantomjs-prebuilt-2.1.16.tgz\",",
                "+      \"integrity\": \"sha1-79ISpKOWbTZHaE6ouniFSb4q7+8=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"es6-promise\": \"4.2.4\",",
                "+        \"extract-zip\": \"1.6.6\",",
                "+        \"fs-extra\": \"1.0.0\",",
                "+        \"hasha\": \"2.2.0\",",
                "+        \"kew\": \"0.7.0\",",
                "+        \"progress\": \"1.1.8\",",
                "+        \"request\": \"2.83.0\",",
                "+        \"request-progress\": \"2.0.1\",",
                "+        \"which\": \"1.3.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"which\": {",
                "+          \"version\": \"1.3.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/which/-/which-1.3.0.tgz\",",
                "+          \"integrity\": \"sha512-xcJpopdamTuY5duC/KnTTNBraPK54YwpenP4lzxU8H91GudWpFv38u0CKjclE1Wi2EH2EDz5LRcHcKbCIzqGyg==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"isexe\": \"2.0.0\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"pify\": {",
                "+      \"version\": \"2.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/pify/-/pify-2.3.0.tgz\",",
                "+      \"integrity\": \"sha1-7RQaasBDqEnqWISY59yosVMw6Qw=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"pinkie\": {",
                "+      \"version\": \"2.0.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz\",",
                "+      \"integrity\": \"sha1-clVrgM+g1IqXToDnckjoDtT3+HA=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"pinkie-promise\": {",
                "+      \"version\": \"2.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz\",",
                "+      \"integrity\": \"sha1-ITXW36ejWMBprJsXh3YogihFD/o=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"pinkie\": \"2.0.4\"",
                "+      }",
                "+    },",
                "+    \"pretty-bytes\": {",
                "+      \"version\": \"1.0.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/pretty-bytes/-/pretty-bytes-1.0.4.tgz\",",
                "+      \"integrity\": \"sha1-CiLoIQYJrTVUL4yNXSFZr/B1HIQ=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"get-stdin\": \"4.0.1\",",
                "+        \"meow\": \"3.7.0\"",
                "+      }",
                "+    },",
                "+    \"process-nextick-args\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.0.tgz\",",
                "+      \"integrity\": \"sha512-MtEC1TqN0EU5nephaJ4rAtThHtC86dNN9qCuEhtshvpVBkAW5ZO7BASN9REnF9eoXGcRub+pFuKEpOHE+HbEMw==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"progress\": {",
                "+      \"version\": \"1.1.8\",",
                "+      \"resolved\": \"https://registry.npmjs.org/progress/-/progress-1.1.8.tgz\",",
                "+      \"integrity\": \"sha1-4mDHj2Fhzdmw5WzD4Khd4Xx6V74=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"pseudomap\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-8FKijacOYYkX7wqKw0wa5aaChrM=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"punycode\": {",
                "+      \"version\": \"1.4.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz\",",
                "+      \"integrity\": \"sha1-wNWmOycYgArY4esPpSachN1BhF4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"qs\": {",
                "+      \"version\": \"6.5.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.5.1.tgz\",",
                "+      \"integrity\": \"sha512-eRzhrN1WSINYCDCbrz796z37LOe3m5tmW7RQf6oBntukAG1nmovJvhnwHHRMAfeoItc1m2Hk02WER2aQ/iqs+A==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"read-pkg\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/read-pkg/-/read-pkg-1.1.0.tgz\",",
                "+      \"integrity\": \"sha1-9f+qXs0pyzHAR0vKfXVra7KePyg=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"load-json-file\": \"1.1.0\",",
                "+        \"normalize-package-data\": \"2.4.0\",",
                "+        \"path-type\": \"1.1.0\"",
                "+      }",
                "+    },",
                "+    \"read-pkg-up\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"find-up\": \"1.1.2\",",
                "+        \"read-pkg\": \"1.1.0\"",
                "+      }",
                "+    },",
                "+    \"readable-stream\": {",
                "+      \"version\": \"1.1.14\",",
                "+      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz\",",
                "+      \"integrity\": \"sha1-fPTFTvZI44EwhMY23SB54WbAgdk=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"core-util-is\": \"1.0.2\",",
                "+        \"inherits\": \"2.0.3\",",
                "+        \"isarray\": \"0.0.1\",",
                "+        \"string_decoder\": \"0.10.31\"",
                "+      }",
                "+    },",
                "+    \"redent\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/redent/-/redent-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-z5Fqsf1fHxbfsggi3W7H9zDCr94=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"indent-string\": \"2.1.0\",",
                "+        \"strip-indent\": \"1.0.1\"",
                "+      }",
                "+    },",
                "+    \"repeat-string\": {",
                "+      \"version\": \"1.6.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz\",",
                "+      \"integrity\": \"sha1-jcrkcOHIirwtYA//Sndihtp15jc=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"repeating\": {",
                "+      \"version\": \"2.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/repeating/-/repeating-2.0.1.tgz\",",
                "+      \"integrity\": \"sha1-UhTFOpJtNVJwdSf7q0FdvAjQbdo=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"is-finite\": \"1.0.2\"",
                "+      }",
                "+    },",
                "+    \"request\": {",
                "+      \"version\": \"2.83.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/request/-/request-2.83.0.tgz\",",
                "+      \"integrity\": \"sha512-lR3gD69osqm6EYLk9wB/G1W/laGWjzH90t1vEa2xuxHD5KUrSzp9pUSfTm+YC5Nxt2T8nMPEvKlhbQayU7bgFw==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"aws-sign2\": \"0.7.0\",",
                "+        \"aws4\": \"1.6.0\",",
                "+        \"caseless\": \"0.12.0\",",
                "+        \"combined-stream\": \"1.0.6\",",
                "+        \"extend\": \"3.0.1\",",
                "+        \"forever-agent\": \"0.6.1\",",
                "+        \"form-data\": \"2.3.2\",",
                "+        \"har-validator\": \"5.0.3\",",
                "+        \"hawk\": \"6.0.2\",",
                "+        \"http-signature\": \"1.2.0\",",
                "+        \"is-typedarray\": \"1.0.0\",",
                "+        \"isstream\": \"0.1.2\",",
                "+        \"json-stringify-safe\": \"5.0.1\",",
                "+        \"mime-types\": \"2.1.18\",",
                "+        \"oauth-sign\": \"0.8.2\",",
                "+        \"performance-now\": \"2.1.0\",",
                "+        \"qs\": \"6.5.1\",",
                "+        \"safe-buffer\": \"5.1.1\",",
                "+        \"stringstream\": \"0.0.5\",",
                "+        \"tough-cookie\": \"2.3.4\",",
                "+        \"tunnel-agent\": \"0.6.0\",",
                "+        \"uuid\": \"3.2.1\"",
                "+      }",
                "+    },",
                "+    \"request-progress\": {",
                "+      \"version\": \"2.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/request-progress/-/request-progress-2.0.1.tgz\",",
                "+      \"integrity\": \"sha1-XTa7V5YcZzqlt4jbyBQf3yO0Tgg=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"throttleit\": \"1.0.0\"",
                "+      }",
                "+    },",
                "+    \"requizzle\": {",
                "+      \"version\": \"0.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/requizzle/-/requizzle-0.2.1.tgz\",",
                "+      \"integrity\": \"sha1-aUPDUwxNmn5G8c3dUcFY/GcM294=\",",
                "+      \"requires\": {",
                "+        \"underscore\": \"1.6.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"underscore\": {",
                "+          \"version\": \"1.6.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/underscore/-/underscore-1.6.0.tgz\",",
                "+          \"integrity\": \"sha1-izixDKze9jM3uLJOT/htRa6lKag=\"",
                "+        }",
                "+      }",
                "+    },",
                "+    \"resolve\": {",
                "+      \"version\": \"1.1.7\",",
                "+      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.1.7.tgz\",",
                "+      \"integrity\": \"sha1-IDEU2CrSxe2ejgQRs5ModeiJ6Xs=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"right-align\": {",
                "+      \"version\": \"0.1.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/right-align/-/right-align-0.1.3.tgz\",",
                "+      \"integrity\": \"sha1-YTObci/mo1FWiSENJOFMlhSGE+8=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"align-text\": \"0.1.4\"",
                "+      }",
                "+    },",
                "+    \"rimraf\": {",
                "+      \"version\": \"2.2.8\",",
                "+      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.2.8.tgz\",",
                "+      \"integrity\": \"sha1-5Dm+Kq7jJzIZUnMPmaiSnk/FBYI=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"safe-buffer\": {",
                "+      \"version\": \"5.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.1.tgz\",",
                "+      \"integrity\": \"sha512-kKvNJn6Mm93gAczWVJg7wH+wGYWNrDHdWvpUmHyEsgCtIwwo3bqPtV4tR5tuPaUhTOo/kvhVwd8XwwOllGYkbg==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"semver\": {",
                "+      \"version\": \"5.5.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.5.0.tgz\",",
                "+      \"integrity\": \"sha512-4SJ3dm0WAwWy/NVeioZh5AntkdJoWKxHxcmyP622fOkgHa4z3R0TdBJICINyaSDE6uNwVc8gZr+ZinwZAH4xIA==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"shelljs\": {",
                "+      \"version\": \"0.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/shelljs/-/shelljs-0.3.0.tgz\",",
                "+      \"integrity\": \"sha1-NZbmMHp4FUT1kfN9phg2DzHbV7E=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"signal-exit\": {",
                "+      \"version\": \"3.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz\",",
                "+      \"integrity\": \"sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"sntp\": {",
                "+      \"version\": \"2.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/sntp/-/sntp-2.1.0.tgz\",",
                "+      \"integrity\": \"sha512-FL1b58BDrqS3A11lJ0zEdnJ3UOKqVxawAkF3k7F0CVN7VQ34aZrV+G8BZ1WC9ZL7NyrwsW0oviwsWDgRuVYtJg==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"hoek\": \"4.2.1\"",
                "+      }",
                "+    },",
                "+    \"source-map\": {",
                "+      \"version\": \"0.5.7\",",
                "+      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz\",",
                "+      \"integrity\": \"sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"spdx-correct\": {",
                "+      \"version\": \"3.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.0.0.tgz\",",
                "+      \"integrity\": \"sha512-N19o9z5cEyc8yQQPukRCZ9EUmb4HUpnrmaL/fxS2pBo2jbfcFRVuFZ/oFC+vZz0MNNk0h80iMn5/S6qGZOL5+g==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"spdx-expression-parse\": \"3.0.0\",",
                "+        \"spdx-license-ids\": \"3.0.0\"",
                "+      }",
                "+    },",
                "+    \"spdx-exceptions\": {",
                "+      \"version\": \"2.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.1.0.tgz\",",
                "+      \"integrity\": \"sha512-4K1NsmrlCU1JJgUrtgEeTVyfx8VaYea9J9LvARxhbHtVtohPs/gFGG5yy49beySjlIMhhXZ4QqujIZEfS4l6Cg==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"spdx-expression-parse\": {",
                "+      \"version\": \"3.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.0.tgz\",",
                "+      \"integrity\": \"sha512-Yg6D3XpRD4kkOmTpdgbUiEJFKghJH03fiC1OPll5h/0sO6neh2jqRDVHOQ4o/LMea0tgCkbMgea5ip/e+MkWyg==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"spdx-exceptions\": \"2.1.0\",",
                "+        \"spdx-license-ids\": \"3.0.0\"",
                "+      }",
                "+    },",
                "+    \"spdx-license-ids\": {",
                "+      \"version\": \"3.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.0.tgz\",",
                "+      \"integrity\": \"sha512-2+EPwgbnmOIl8HjGBXXMd9NAu02vLjOO1nWw4kmeRDFyHn+M/ETfHxQUK0oXg8ctgVnl9t3rosNVsZ1jG61nDA==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"sprintf-js\": {",
                "+      \"version\": \"1.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.1.tgz\",",
                "+      \"integrity\": \"sha1-Nr54Mgr+WAH2zqPueLblqrlA6gw=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"sshpk\": {",
                "+      \"version\": \"1.13.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/sshpk/-/sshpk-1.13.1.tgz\",",
                "+      \"integrity\": \"sha1-US322mKHFEMW3EwY/hzx2UBzm+M=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"asn1\": \"0.2.3\",",
                "+        \"assert-plus\": \"1.0.0\",",
                "+        \"bcrypt-pbkdf\": \"1.0.1\",",
                "+        \"dashdash\": \"1.14.1\",",
                "+        \"ecc-jsbn\": \"0.1.1\",",
                "+        \"getpass\": \"0.1.7\",",
                "+        \"jsbn\": \"0.1.1\",",
                "+        \"tweetnacl\": \"0.14.5\"",
                "+      }",
                "+    },",
                "+    \"string_decoder\": {",
                "+      \"version\": \"0.10.31\",",
                "+      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "+      \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"stringstream\": {",
                "+      \"version\": \"0.0.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/stringstream/-/stringstream-0.0.5.tgz\",",
                "+      \"integrity\": \"sha1-TkhM1N5aC7vuGORjB3EKioFiGHg=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"strip-ansi\": {",
                "+      \"version\": \"3.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz\",",
                "+      \"integrity\": \"sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"ansi-regex\": \"2.1.1\"",
                "+      }",
                "+    },",
                "+    \"strip-bom\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"is-utf8\": \"0.2.1\"",
                "+      }",
                "+    },",
                "+    \"strip-indent\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/strip-indent/-/strip-indent-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-DHlipq3vp7vUrDZkYKY4VSrhoKI=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"get-stdin\": \"4.0.1\"",
                "+      }",
                "+    },",
                "+    \"strip-json-comments\": {",
                "+      \"version\": \"2.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz\",",
                "+      \"integrity\": \"sha1-PFMZQukIwml8DsNEhYwobHygpgo=\"",
                "+    },",
                "+    \"supports-color\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"sync-exec\": {",
                "+      \"version\": \"0.6.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/sync-exec/-/sync-exec-0.6.2.tgz\",",
                "+      \"integrity\": \"sha1-cX0izFPwzh3vVZQ2LzqJouu5EQU=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"taffydb\": {",
                "+      \"version\": \"2.6.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/taffydb/-/taffydb-2.6.2.tgz\",",
                "+      \"integrity\": \"sha1-fLy2S1oUG2ou/CxdLGe04VCyomg=\"",
                "+    },",
                "+    \"temporary\": {",
                "+      \"version\": \"0.0.8\",",
                "+      \"resolved\": \"https://registry.npmjs.org/temporary/-/temporary-0.0.8.tgz\",",
                "+      \"integrity\": \"sha1-oYqYHSi6jKNgJ/s8MFOMPst0CsA=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"package\": \"1.0.1\"",
                "+      }",
                "+    },",
                "+    \"throttleit\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/throttleit/-/throttleit-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-nnhYNtr0Z0MUWlmEtiaNgoUorGw=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"tough-cookie\": {",
                "+      \"version\": \"2.3.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.3.4.tgz\",",
                "+      \"integrity\": \"sha512-TZ6TTfI5NtZnuyy/Kecv+CnoROnyXn2DN97LontgQpCwsX2XyLYCC0ENhYkehSOwAp8rTQKc/NUIF7BkQ5rKLA==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"punycode\": \"1.4.1\"",
                "+      }",
                "+    },",
                "+    \"trim-newlines\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/trim-newlines/-/trim-newlines-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-WIeWa7WCpFA6QetST301ARgVphM=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"tunnel-agent\": {",
                "+      \"version\": \"0.6.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz\",",
                "+      \"integrity\": \"sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"safe-buffer\": \"5.1.1\"",
                "+      }",
                "+    },",
                "+    \"tweetnacl\": {",
                "+      \"version\": \"0.14.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz\",",
                "+      \"integrity\": \"sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true",
                "+    },",
                "+    \"typedarray\": {",
                "+      \"version\": \"0.0.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz\",",
                "+      \"integrity\": \"sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"uglify-js\": {",
                "+      \"version\": \"2.6.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/uglify-js/-/uglify-js-2.6.4.tgz\",",
                "+      \"integrity\": \"sha1-ZeovswWck5RpLxX+2HwrNsFrmt8=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"async\": \"0.2.10\",",
                "+        \"source-map\": \"0.5.7\",",
                "+        \"uglify-to-browserify\": \"1.0.2\",",
                "+        \"yargs\": \"3.10.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"async\": {",
                "+          \"version\": \"0.2.10\",",
                "+          \"resolved\": \"https://registry.npmjs.org/async/-/async-0.2.10.tgz\",",
                "+          \"integrity\": \"sha1-trvgsGdLnXGXCMo43owjfLUmw9E=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"uglify-to-browserify\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-bgkk1r2mta/jSeOabWMoUKD4grc=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"underscore\": {",
                "+      \"version\": \"1.8.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/underscore/-/underscore-1.8.3.tgz\",",
                "+      \"integrity\": \"sha1-Tz+1OxBuYJf8+ctBCfKl6b36UCI=\"",
                "+    },",
                "+    \"underscore-contrib\": {",
                "+      \"version\": \"0.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/underscore-contrib/-/underscore-contrib-0.3.0.tgz\",",
                "+      \"integrity\": \"sha1-ZltmwkeD+PorGMn4y7Dix9SMJsc=\",",
                "+      \"requires\": {",
                "+        \"underscore\": \"1.6.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"underscore\": {",
                "+          \"version\": \"1.6.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/underscore/-/underscore-1.6.0.tgz\",",
                "+          \"integrity\": \"sha1-izixDKze9jM3uLJOT/htRa6lKag=\"",
                "+        }",
                "+      }",
                "+    },",
                "+    \"underscore.string\": {",
                "+      \"version\": \"3.3.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/underscore.string/-/underscore.string-3.3.4.tgz\",",
                "+      \"integrity\": \"sha1-LCo/n4PmR2L9xF5s6sZRQoZCE9s=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"sprintf-js\": \"1.1.1\",",
                "+        \"util-deprecate\": \"1.0.2\"",
                "+      }",
                "+    },",
                "+    \"uri-path\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/uri-path/-/uri-path-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-l0fwGDWJM8Md4PzP2C0TjmcmLjI=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"util-deprecate\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"uuid\": {",
                "+      \"version\": \"3.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-3.2.1.tgz\",",
                "+      \"integrity\": \"sha512-jZnMwlb9Iku/O3smGWvZhauCf6cvvpKi4BKRiliS3cxnI+Gz9j5MEpTz2UFuXiKPJocb7gnsLHwiS05ige5BEA==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"validate-npm-package-license\": {",
                "+      \"version\": \"3.0.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.3.tgz\",",
                "+      \"integrity\": \"sha512-63ZOUnL4SIXj4L0NixR3L1lcjO38crAbgrTpl28t8jjrfuiOBL5Iygm+60qPs/KsZGzPNg6Smnc/oY16QTjF0g==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"spdx-correct\": \"3.0.0\",",
                "+        \"spdx-expression-parse\": \"3.0.0\"",
                "+      }",
                "+    },",
                "+    \"verror\": {",
                "+      \"version\": \"1.10.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/verror/-/verror-1.10.0.tgz\",",
                "+      \"integrity\": \"sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"assert-plus\": \"1.0.0\",",
                "+        \"core-util-is\": \"1.0.2\",",
                "+        \"extsprintf\": \"1.3.0\"",
                "+      }",
                "+    },",
                "+    \"which\": {",
                "+      \"version\": \"1.2.14\",",
                "+      \"resolved\": \"https://registry.npmjs.org/which/-/which-1.2.14.tgz\",",
                "+      \"integrity\": \"sha1-mofEN48D6CfOyvGs31bHNsAcFOU=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"isexe\": \"2.0.0\"",
                "+      }",
                "+    },",
                "+    \"window-size\": {",
                "+      \"version\": \"0.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/window-size/-/window-size-0.1.0.tgz\",",
                "+      \"integrity\": \"sha1-VDjNLqk7IC76Ohn+iIeu58lPnJ0=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"wordwrap\": {",
                "+      \"version\": \"0.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.2.tgz\",",
                "+      \"integrity\": \"sha1-t5Zpu0LstAn4PVg8rVLKF+qhZD8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"wrappy\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"xmlcreate\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/xmlcreate/-/xmlcreate-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-+mv3YqYKQT+z3Y9LA8WyaSONMI8=\"",
                "+    },",
                "+    \"yallist\": {",
                "+      \"version\": \"2.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz\",",
                "+      \"integrity\": \"sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"yargs\": {",
                "+      \"version\": \"3.10.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz\",",
                "+      \"integrity\": \"sha1-9+572FfdfB0tOMDnTvvWgdFDH9E=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"camelcase\": \"1.2.1\",",
                "+        \"cliui\": \"2.1.0\",",
                "+        \"decamelize\": \"1.2.0\",",
                "+        \"window-size\": \"0.1.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"camelcase\": {",
                "+          \"version\": \"1.2.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-1.2.1.tgz\",",
                "+          \"integrity\": \"sha1-m7UwTS4LVmmLLHWLCKPqqdqlijk=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"yauzl\": {",
                "+      \"version\": \"2.4.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/yauzl/-/yauzl-2.4.1.tgz\",",
                "+      \"integrity\": \"sha1-lSj0QtqxsihOWLQ3m7GU4i4MQAU=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"fd-slicer\": \"1.0.1\"",
                "+      }",
                "+    }",
                "+  }",
                "+}",
                "diff --git a/lib/js/package.json b/lib/js/package.json",
                "index 526528dd5..5da782216 100644",
                "--- a/lib/js/package.json",
                "+++ b/lib/js/package.json",
                "@@ -4,3 +4,3 @@",
                "   \"devDependencies\": {",
                "-    \"grunt\": \"^0.4.5\",",
                "+    \"grunt\": \"^1.0.2\",",
                "     \"grunt-cli\": \"^1.2.0\",",
                "@@ -10,5 +10,4 @@",
                "     \"grunt-contrib-uglify\": \"^1.0.1\",",
                "-    \"grunt-external-daemon\": \"^1.1.0\",",
                "     \"grunt-jsdoc\": \"^2.2.0\",",
                "-    \"grunt-shell\": \"^1.3.0\"",
                "+    \"grunt-shell-spawn\": \"^0.3.10\"",
                "   },",
                "diff --git a/package-lock.json b/package-lock.json",
                "new file mode 100644",
                "index 000000000..2e5d115e5",
                "--- /dev/null",
                "+++ b/package-lock.json",
                "@@ -0,0 +1,4108 @@",
                "+{",
                "+  \"name\": \"thrift\",",
                "+  \"version\": \"1.0.0-dev\",",
                "+  \"lockfileVersion\": 1,",
                "+  \"requires\": true,",
                "+  \"dependencies\": {",
                "+    \"Base64\": {",
                "+      \"version\": \"0.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/Base64/-/Base64-0.2.1.tgz\",",
                "+      \"integrity\": \"sha1-ujpCMHCOGGcFBl5mur3Uw1z2ACg=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"JSONStream\": {",
                "+      \"version\": \"0.7.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/JSONStream/-/JSONStream-0.7.4.tgz\",",
                "+      \"integrity\": \"sha1-c0KQ5BUR7qfCz+FR+/mlY6l7l4Y=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"jsonparse\": \"0.0.5\",",
                "+        \"through\": \"2.3.8\"",
                "+      }",
                "+    },",
                "+    \"abbrev\": {",
                "+      \"version\": \"1.0.9\",",
                "+      \"resolved\": \"https://registry.npmjs.org/abbrev/-/abbrev-1.0.9.tgz\",",
                "+      \"integrity\": \"sha1-kbR5JYinc4wl813W9jdSovh3YTU=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"acorn\": {",
                "+      \"version\": \"4.0.13\",",
                "+      \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-4.0.13.tgz\",",
                "+      \"integrity\": \"sha1-EFSVrlNh1pe9GVyCUZLhrX8lN4c=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"ajv\": {",
                "+      \"version\": \"5.5.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-5.5.2.tgz\",",
                "+      \"integrity\": \"sha1-c7Xuyj+rZT49P5Qis0GtQiBdyWU=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"co\": \"4.6.0\",",
                "+        \"fast-deep-equal\": \"1.1.0\",",
                "+        \"fast-json-stable-stringify\": \"2.0.0\",",
                "+        \"json-schema-traverse\": \"0.3.1\"",
                "+      }",
                "+    },",
                "+    \"align-text\": {",
                "+      \"version\": \"0.1.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/align-text/-/align-text-0.1.4.tgz\",",
                "+      \"integrity\": \"sha1-DNkKVhCT810KmSVsIrcGlDP60Rc=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"kind-of\": \"3.2.2\",",
                "+        \"longest\": \"1.0.1\",",
                "+        \"repeat-string\": \"1.6.1\"",
                "+      }",
                "+    },",
                "+    \"amdefine\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/amdefine/-/amdefine-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-SlKCrBZHKek2Gbz9OtFR+BfOkfU=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"ansi-regex\": {",
                "+      \"version\": \"2.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz\",",
                "+      \"integrity\": \"sha1-w7M6te42DYbg5ijwRorn7yfWVN8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"ansi-styles\": {",
                "+      \"version\": \"2.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz\",",
                "+      \"integrity\": \"sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"aproba\": {",
                "+      \"version\": \"1.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/aproba/-/aproba-1.2.0.tgz\",",
                "+      \"integrity\": \"sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"are-we-there-yet\": {",
                "+      \"version\": \"1.1.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.1.4.tgz\",",
                "+      \"integrity\": \"sha1-u13KOCu5TwXhUZQ3PRb9O6HKEQ0=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"delegates\": \"1.0.0\",",
                "+        \"readable-stream\": \"2.3.5\"",
                "+      }",
                "+    },",
                "+    \"argparse\": {",
                "+      \"version\": \"1.0.10\",",
                "+      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz\",",
                "+      \"integrity\": \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"sprintf-js\": \"1.0.3\"",
                "+      }",
                "+    },",
                "+    \"asn1\": {",
                "+      \"version\": \"0.2.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/asn1/-/asn1-0.2.3.tgz\",",
                "+      \"integrity\": \"sha1-2sh4dxPJlmhJ/IGAd36+nB3fO4Y=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"assert\": {",
                "+      \"version\": \"1.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/assert/-/assert-1.1.2.tgz\",",
                "+      \"integrity\": \"sha1-raoExGu1jG3R8pTaPrJuYijrbkQ=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"util\": \"0.10.3\"",
                "+      }",
                "+    },",
                "+    \"assert-plus\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"astw\": {",
                "+      \"version\": \"2.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/astw/-/astw-2.2.0.tgz\",",
                "+      \"integrity\": \"sha1-e9QXhNMkk5h66yOba04cV6hzuRc=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"acorn\": \"4.0.13\"",
                "+      }",
                "+    },",
                "+    \"async\": {",
                "+      \"version\": \"1.5.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/async/-/async-1.5.2.tgz\",",
                "+      \"integrity\": \"sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"async-limiter\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/async-limiter/-/async-limiter-1.0.0.tgz\",",
                "+      \"integrity\": \"sha512-jp/uFnooOiO+L211eZOoSyzpOITMXx1rBITauYykG3BRYPu8h0UcxsPNB04RR5vo4Tyz3+ay17tR6JVf9qzYWg==\"",
                "+    },",
                "+    \"asynckit\": {",
                "+      \"version\": \"0.4.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",",
                "+      \"integrity\": \"sha1-x57Zf380y48robyXkLzDZkdLS3k=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"aws-sign2\": {",
                "+      \"version\": \"0.7.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz\",",
                "+      \"integrity\": \"sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"aws4\": {",
                "+      \"version\": \"1.6.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/aws4/-/aws4-1.6.0.tgz\",",
                "+      \"integrity\": \"sha1-g+9cqGCysy5KDe7e6MdxudtXRx4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"babylon\": {",
                "+      \"version\": \"7.0.0-beta.19\",",
                "+      \"resolved\": \"https://registry.npmjs.org/babylon/-/babylon-7.0.0-beta.19.tgz\",",
                "+      \"integrity\": \"sha512-Vg0C9s/REX6/WIXN37UKpv5ZhRi6A4pjHlpkE34+8/a6c2W1Q692n3hmc+SZG5lKRnaExLUbxtJ1SVT+KaCQ/A==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"balanced-match\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-ibTRmasr7kneFk6gK4nORi1xt2c=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"base64-js\": {",
                "+      \"version\": \"0.0.8\",",
                "+      \"resolved\": \"https://registry.npmjs.org/base64-js/-/base64-js-0.0.8.tgz\",",
                "+      \"integrity\": \"sha1-EQHpVE9KdrG8OybUUsqW16NeeXg=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"bcrypt-pbkdf\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-Y7xdy2EzG5K8Bf1SiVPDNGKgb40=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true,",
                "+      \"requires\": {",
                "+        \"tweetnacl\": \"0.14.5\"",
                "+      }",
                "+    },",
                "+    \"bindings\": {",
                "+      \"version\": \"1.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/bindings/-/bindings-1.3.0.tgz\",",
                "+      \"integrity\": \"sha512-DpLh5EzMR2kzvX1KIlVC0VkC3iZtHKTgdtZ0a3pglBZdaQFjt5S9g9xd1lE+YvXyfd6mtCeRnrUfOLYiTMlNSw==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"bl\": {",
                "+      \"version\": \"1.0.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/bl/-/bl-1.0.3.tgz\",",
                "+      \"integrity\": \"sha1-/FQhoo/UImA2w7OJGmaiW8ZNIm4=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"readable-stream\": \"2.0.6\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"process-nextick-args\": {",
                "+          \"version\": \"1.0.7\",",
                "+          \"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-1.0.7.tgz\",",
                "+          \"integrity\": \"sha1-FQ4gt1ZZCtP5EJPyWk8q2L/zC6M=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"readable-stream\": {",
                "+          \"version\": \"2.0.6\",",
                "+          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.0.6.tgz\",",
                "+          \"integrity\": \"sha1-j5A0HmilPMySh4jaz80Rs265t44=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"core-util-is\": \"1.0.2\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"isarray\": \"1.0.0\",",
                "+            \"process-nextick-args\": \"1.0.7\",",
                "+            \"string_decoder\": \"0.10.31\",",
                "+            \"util-deprecate\": \"1.0.2\"",
                "+          }",
                "+        },",
                "+        \"string_decoder\": {",
                "+          \"version\": \"0.10.31\",",
                "+          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "+          \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"bluebird\": {",
                "+      \"version\": \"3.5.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/bluebird/-/bluebird-3.5.1.tgz\",",
                "+      \"integrity\": \"sha512-MKiLiV+I1AA596t9w1sQJ8jkiSr5+ZKi0WKrYGUn6d1Fx+Ij4tIj+m2WMQSGczs5jZVxV339chE8iwk6F64wjA==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"boom\": {",
                "+      \"version\": \"4.3.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/boom/-/boom-4.3.1.tgz\",",
                "+      \"integrity\": \"sha1-T4owBctKfjiJ90kDD9JbluAdLjE=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"hoek\": \"4.2.1\"",
                "+      }",
                "+    },",
                "+    \"brace-expansion\": {",
                "+      \"version\": \"1.1.11\",",
                "+      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",",
                "+      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"balanced-match\": \"1.0.0\",",
                "+        \"concat-map\": \"0.0.1\"",
                "+      }",
                "+    },",
                "+    \"browser-pack\": {",
                "+      \"version\": \"2.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/browser-pack/-/browser-pack-2.0.1.tgz\",",
                "+      \"integrity\": \"sha1-XRxSf1bFgmd0EcTbKhKGSP9r8VA=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"JSONStream\": \"0.6.4\",",
                "+        \"combine-source-map\": \"0.3.0\",",
                "+        \"through\": \"2.3.8\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"JSONStream\": {",
                "+          \"version\": \"0.6.4\",",
                "+          \"resolved\": \"https://registry.npmjs.org/JSONStream/-/JSONStream-0.6.4.tgz\",",
                "+          \"integrity\": \"sha1-SyyAY/j1Enh7I3X37p22kgj6Lcs=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"jsonparse\": \"0.0.5\",",
                "+            \"through\": \"2.2.7\"",
                "+          },",
                "+          \"dependencies\": {",
                "+            \"through\": {",
                "+              \"version\": \"2.2.7\",",
                "+              \"resolved\": \"https://registry.npmjs.org/through/-/through-2.2.7.tgz\",",
                "+              \"integrity\": \"sha1-bo4hIAGR1OtqmfbwEN9Gqhxusr0=\",",
                "+              \"dev\": true",
                "+            }",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"browser-resolve\": {",
                "+      \"version\": \"1.2.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/browser-resolve/-/browser-resolve-1.2.4.tgz\",",
                "+      \"integrity\": \"sha1-Wa54IKgpVezTL1+3xGisIcRyOAY=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"resolve\": \"0.6.3\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"resolve\": {",
                "+          \"version\": \"0.6.3\",",
                "+          \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-0.6.3.tgz\",",
                "+          \"integrity\": \"sha1-3ZV5gufnNt699TtYpN2RdUV13UY=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"browserify\": {",
                "+      \"version\": \"3.46.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/browserify/-/browserify-3.46.1.tgz\",",
                "+      \"integrity\": \"sha1-LC5Kfy9AgXjnjCI7W1ezfCGFrY4=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"JSONStream\": \"0.7.4\",",
                "+        \"assert\": \"1.1.2\",",
                "+        \"browser-pack\": \"2.0.1\",",
                "+        \"browser-resolve\": \"1.2.4\",",
                "+        \"browserify-zlib\": \"0.1.4\",",
                "+        \"buffer\": \"2.1.13\",",
                "+        \"builtins\": \"0.0.7\",",
                "+        \"commondir\": \"0.0.1\",",
                "+        \"concat-stream\": \"1.4.11\",",
                "+        \"console-browserify\": \"1.0.3\",",
                "+        \"constants-browserify\": \"0.0.1\",",
                "+        \"crypto-browserify\": \"1.0.9\",",
                "+        \"deep-equal\": \"0.1.2\",",
                "+        \"defined\": \"0.0.0\",",
                "+        \"deps-sort\": \"0.1.2\",",
                "+        \"derequire\": \"0.8.0\",",
                "+        \"domain-browser\": \"1.1.7\",",
                "+        \"duplexer\": \"0.1.1\",",
                "+        \"events\": \"1.0.2\",",
                "+        \"glob\": \"3.2.11\",",
                "+        \"http-browserify\": \"1.3.2\",",
                "+        \"https-browserify\": \"0.0.1\",",
                "+        \"inherits\": \"2.0.3\",",
                "+        \"insert-module-globals\": \"6.0.0\",",
                "+        \"module-deps\": \"2.0.6\",",
                "+        \"os-browserify\": \"0.1.2\",",
                "+        \"parents\": \"0.0.3\",",
                "+        \"path-browserify\": \"0.0.0\",",
                "+        \"process\": \"0.7.0\",",
                "+        \"punycode\": \"1.2.4\",",
                "+        \"querystring-es3\": \"0.2.0\",",
                "+        \"resolve\": \"0.6.3\",",
                "+        \"shallow-copy\": \"0.0.1\",",
                "+        \"shell-quote\": \"0.0.1\",",
                "+        \"stream-browserify\": \"0.1.3\",",
                "+        \"stream-combiner\": \"0.0.4\",",
                "+        \"string_decoder\": \"0.0.1\",",
                "+        \"subarg\": \"0.0.1\",",
                "+        \"syntax-error\": \"1.1.6\",",
                "+        \"through2\": \"0.4.2\",",
                "+        \"timers-browserify\": \"1.0.3\",",
                "+        \"tty-browserify\": \"0.0.1\",",
                "+        \"umd\": \"2.0.0\",",
                "+        \"url\": \"0.10.3\",",
                "+        \"util\": \"0.10.3\",",
                "+        \"vm-browserify\": \"0.0.4\",",
                "+        \"xtend\": \"3.0.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"concat-stream\": {",
                "+          \"version\": \"1.4.11\",",
                "+          \"resolved\": \"https://registry.npmjs.org/concat-stream/-/concat-stream-1.4.11.tgz\",",
                "+          \"integrity\": \"sha512-X3JMh8+4je3U1cQpG87+f9lXHDrqcb2MVLg9L7o8b1UZ0DzhRrUpdn65ttzu10PpJPPI3MQNkis+oha6TSA9Mw==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"readable-stream\": \"1.1.14\",",
                "+            \"typedarray\": \"0.0.6\"",
                "+          }",
                "+        },",
                "+        \"glob\": {",
                "+          \"version\": \"3.2.11\",",
                "+          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-3.2.11.tgz\",",
                "+          \"integrity\": \"sha1-Spc/Y1uRkPcV0QmH1cAP0oFevj0=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"minimatch\": \"0.3.0\"",
                "+          }",
                "+        },",
                "+        \"isarray\": {",
                "+          \"version\": \"0.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",",
                "+          \"integrity\": \"sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"minimatch\": {",
                "+          \"version\": \"0.3.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-0.3.0.tgz\",",
                "+          \"integrity\": \"sha1-J12O2qxPG7MyZHIInnlJyDlGmd0=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"lru-cache\": \"2.7.3\",",
                "+            \"sigmund\": \"1.0.1\"",
                "+          }",
                "+        },",
                "+        \"process\": {",
                "+          \"version\": \"0.7.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/process/-/process-0.7.0.tgz\",",
                "+          \"integrity\": \"sha1-xSIIFho0rfOBI0SuhdPmFQRpOJ0=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"punycode\": {",
                "+          \"version\": \"1.2.4\",",
                "+          \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-1.2.4.tgz\",",
                "+          \"integrity\": \"sha1-VACKyXKux0F13vnLpt9/qdORh0A=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"readable-stream\": {",
                "+          \"version\": \"1.1.14\",",
                "+          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz\",",
                "+          \"integrity\": \"sha1-fPTFTvZI44EwhMY23SB54WbAgdk=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"core-util-is\": \"1.0.2\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"isarray\": \"0.0.1\",",
                "+            \"string_decoder\": \"0.10.31\"",
                "+          },",
                "+          \"dependencies\": {",
                "+            \"string_decoder\": {",
                "+              \"version\": \"0.10.31\",",
                "+              \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "+              \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "+              \"dev\": true",
                "+            }",
                "+          }",
                "+        },",
                "+        \"resolve\": {",
                "+          \"version\": \"0.6.3\",",
                "+          \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-0.6.3.tgz\",",
                "+          \"integrity\": \"sha1-3ZV5gufnNt699TtYpN2RdUV13UY=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"string_decoder\": {",
                "+          \"version\": \"0.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.0.1.tgz\",",
                "+          \"integrity\": \"sha1-9UctCo0WUOyCN1LSTm/WJ7Ob8UE=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"browserify-istanbul\": {",
                "+      \"version\": \"0.1.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/browserify-istanbul/-/browserify-istanbul-0.1.5.tgz\",",
                "+      \"integrity\": \"sha1-AcjjHWo1juUVD0Mhw/KJlalkw58=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"istanbul\": \"0.2.16\",",
                "+        \"minimatch\": \"0.2.14\",",
                "+        \"through\": \"2.3.8\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"async\": {",
                "+          \"version\": \"0.9.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/async/-/async-0.9.2.tgz\",",
                "+          \"integrity\": \"sha1-rqdNXmHB+JlhO/ZL2mbUx48v0X0=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"escodegen\": {",
                "+          \"version\": \"1.3.3\",",
                "+          \"resolved\": \"https://registry.npmjs.org/escodegen/-/escodegen-1.3.3.tgz\",",
                "+          \"integrity\": \"sha1-8CQBb1qI4Eb9EgBQVek5gC5sXyM=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"esprima\": \"1.1.1\",",
                "+            \"estraverse\": \"1.5.1\",",
                "+            \"esutils\": \"1.0.0\",",
                "+            \"source-map\": \"0.1.43\"",
                "+          },",
                "+          \"dependencies\": {",
                "+            \"esprima\": {",
                "+              \"version\": \"1.1.1\",",
                "+              \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-1.1.1.tgz\",",
                "+              \"integrity\": \"sha1-W28VR/TRAuZw4UDFCb5ncdautUk=\",",
                "+              \"dev\": true",
                "+            }",
                "+          }",
                "+        },",
                "+        \"esprima\": {",
                "+          \"version\": \"1.2.5\",",
                "+          \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-1.2.5.tgz\",",
                "+          \"integrity\": \"sha1-CZNQL+r2aBODJXVvMPmlH+7sEek=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"estraverse\": {",
                "+          \"version\": \"1.5.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-1.5.1.tgz\",",
                "+          \"integrity\": \"sha1-hno+jlip+EYYr7bC3bzZFrfLr3E=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"esutils\": {",
                "+          \"version\": \"1.0.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-1.0.0.tgz\",",
                "+          \"integrity\": \"sha1-gVHTWOIMisx/t0XnRywAJf5JZXA=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"handlebars\": {",
                "+          \"version\": \"1.3.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/handlebars/-/handlebars-1.3.0.tgz\",",
                "+          \"integrity\": \"sha1-npsTCpPjiUkTItl1zz7BgYw3zjQ=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"optimist\": \"0.3.7\",",
                "+            \"uglify-js\": \"2.3.6\"",
                "+          }",
                "+        },",
                "+        \"istanbul\": {",
                "+          \"version\": \"0.2.16\",",
                "+          \"resolved\": \"https://registry.npmjs.org/istanbul/-/istanbul-0.2.16.tgz\",",
                "+          \"integrity\": \"sha1-hwVFoNT0tM4WEDnp6AWpjCxwC9k=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"abbrev\": \"1.0.9\",",
                "+            \"async\": \"0.9.2\",",
                "+            \"escodegen\": \"1.3.3\",",
                "+            \"esprima\": \"1.2.5\",",
                "+            \"fileset\": \"0.1.8\",",
                "+            \"handlebars\": \"1.3.0\",",
                "+            \"js-yaml\": \"3.11.0\",",
                "+            \"mkdirp\": \"0.5.1\",",
                "+            \"nopt\": \"3.0.6\",",
                "+            \"resolve\": \"0.7.4\",",
                "+            \"which\": \"1.0.9\",",
                "+            \"wordwrap\": \"0.0.3\"",
                "+          }",
                "+        },",
                "+        \"minimatch\": {",
                "+          \"version\": \"0.2.14\",",
                "+          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-0.2.14.tgz\",",
                "+          \"integrity\": \"sha1-x054BXT2PG+aCQ6Q775u9TpqdWo=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"lru-cache\": \"2.7.3\",",
                "+            \"sigmund\": \"1.0.1\"",
                "+          }",
                "+        },",
                "+        \"optimist\": {",
                "+          \"version\": \"0.3.7\",",
                "+          \"resolved\": \"https://registry.npmjs.org/optimist/-/optimist-0.3.7.tgz\",",
                "+          \"integrity\": \"sha1-yQlBrVnkJzMokjB00s8ufLxuwNk=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"wordwrap\": \"0.0.3\"",
                "+          }",
                "+        },",
                "+        \"resolve\": {",
                "+          \"version\": \"0.7.4\",",
                "+          \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-0.7.4.tgz\",",
                "+          \"integrity\": \"sha1-OVqe+ehz+/4SvRRAi9kbuTYAPWk=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"source-map\": {",
                "+          \"version\": \"0.1.43\",",
                "+          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.1.43.tgz\",",
                "+          \"integrity\": \"sha1-wkvBRspRfBRx9drL4lcbK3+eM0Y=\",",
                "+          \"dev\": true,",
                "+          \"optional\": true,",
                "+          \"requires\": {",
                "+            \"amdefine\": \"1.0.1\"",
                "+          }",
                "+        },",
                "+        \"uglify-js\": {",
                "+          \"version\": \"2.3.6\",",
                "+          \"resolved\": \"https://registry.npmjs.org/uglify-js/-/uglify-js-2.3.6.tgz\",",
                "+          \"integrity\": \"sha1-+gmEdwtCi3qbKoBY9GNV0U/vIRo=\",",
                "+          \"dev\": true,",
                "+          \"optional\": true,",
                "+          \"requires\": {",
                "+            \"async\": \"0.2.10\",",
                "+            \"optimist\": \"0.3.7\",",
                "+            \"source-map\": \"0.1.43\"",
                "+          },",
                "+          \"dependencies\": {",
                "+            \"async\": {",
                "+              \"version\": \"0.2.10\",",
                "+              \"resolved\": \"https://registry.npmjs.org/async/-/async-0.2.10.tgz\",",
                "+              \"integrity\": \"sha1-trvgsGdLnXGXCMo43owjfLUmw9E=\",",
                "+              \"dev\": true,",
                "+              \"optional\": true",
                "+            }",
                "+          }",
                "+        },",
                "+        \"which\": {",
                "+          \"version\": \"1.0.9\",",
                "+          \"resolved\": \"https://registry.npmjs.org/which/-/which-1.0.9.tgz\",",
                "+          \"integrity\": \"sha1-RgwdoPgQED0DIam2M6+eV15kSG8=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"wordwrap\": {",
                "+          \"version\": \"0.0.3\",",
                "+          \"resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz\",",
                "+          \"integrity\": \"sha1-o9XabNXAvAAI03I0u68b7WMFkQc=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"browserify-zlib\": {",
                "+      \"version\": \"0.1.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/browserify-zlib/-/browserify-zlib-0.1.4.tgz\",",
                "+      \"integrity\": \"sha1-uzX4pRn2AOD6a4SFJByXnQFB+y0=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"pako\": \"0.2.9\"",
                "+      }",
                "+    },",
                "+    \"buffer\": {",
                "+      \"version\": \"2.1.13\",",
                "+      \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-2.1.13.tgz\",",
                "+      \"integrity\": \"sha1-yIg46/efMLi0pwd4hHC+qKYsI1U=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"base64-js\": \"0.0.8\",",
                "+        \"ieee754\": \"1.1.8\"",
                "+      }",
                "+    },",
                "+    \"buffer-equals\": {",
                "+      \"version\": \"1.0.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/buffer-equals/-/buffer-equals-1.0.4.tgz\",",
                "+      \"integrity\": \"sha1-A1O1T9B/2VZBcGca5vZrnPENJ/U=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"builtins\": {",
                "+      \"version\": \"0.0.7\",",
                "+      \"resolved\": \"https://registry.npmjs.org/builtins/-/builtins-0.0.7.tgz\",",
                "+      \"integrity\": \"sha1-NVIZzWzxjb58Acx/0tznZc/cVJo=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"callsite\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/callsite/-/callsite-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-KAOY5dZkvXQDi28JBRU+borxvCA=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"camelcase\": {",
                "+      \"version\": \"1.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-1.2.1.tgz\",",
                "+      \"integrity\": \"sha1-m7UwTS4LVmmLLHWLCKPqqdqlijk=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"caseless\": {",
                "+      \"version\": \"0.12.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz\",",
                "+      \"integrity\": \"sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"catharsis\": {",
                "+      \"version\": \"0.8.9\",",
                "+      \"resolved\": \"https://registry.npmjs.org/catharsis/-/catharsis-0.8.9.tgz\",",
                "+      \"integrity\": \"sha1-mMyJDKZS3S7w5ws3klMQ/56Q/Is=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"underscore-contrib\": \"0.3.0\"",
                "+      }",
                "+    },",
                "+    \"center-align\": {",
                "+      \"version\": \"0.1.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/center-align/-/center-align-0.1.3.tgz\",",
                "+      \"integrity\": \"sha1-qg0yYptu6XIgBBHL1EYckHvCt60=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true,",
                "+      \"requires\": {",
                "+        \"align-text\": \"0.1.4\",",
                "+        \"lazy-cache\": \"1.0.4\"",
                "+      }",
                "+    },",
                "+    \"chalk\": {",
                "+      \"version\": \"1.1.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz\",",
                "+      \"integrity\": \"sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"ansi-styles\": \"2.2.1\",",
                "+        \"escape-string-regexp\": \"1.0.5\",",
                "+        \"has-ansi\": \"2.0.0\",",
                "+        \"strip-ansi\": \"3.0.1\",",
                "+        \"supports-color\": \"2.0.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"supports-color\": {",
                "+          \"version\": \"2.0.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz\",",
                "+          \"integrity\": \"sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"chownr\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/chownr/-/chownr-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-4qdQQqlVGQi+vSW4Uj1fl2nXkYE=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"cliui\": {",
                "+      \"version\": \"2.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-2.1.0.tgz\",",
                "+      \"integrity\": \"sha1-S0dXYP+AJkx2LDoXGQMukcf+oNE=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true,",
                "+      \"requires\": {",
                "+        \"center-align\": \"0.1.3\",",
                "+        \"right-align\": \"0.1.3\",",
                "+        \"wordwrap\": \"0.0.2\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"wordwrap\": {",
                "+          \"version\": \"0.0.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.2.tgz\",",
                "+          \"integrity\": \"sha1-t5Zpu0LstAn4PVg8rVLKF+qhZD8=\",",
                "+          \"dev\": true,",
                "+          \"optional\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"co\": {",
                "+      \"version\": \"4.6.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/co/-/co-4.6.0.tgz\",",
                "+      \"integrity\": \"sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"code-point-at\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz\",",
                "+      \"integrity\": \"sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"combine-source-map\": {",
                "+      \"version\": \"0.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/combine-source-map/-/combine-source-map-0.3.0.tgz\",",
                "+      \"integrity\": \"sha1-2edPWT2c1DgHMSy12EbUUe+qnrc=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"convert-source-map\": \"0.3.5\",",
                "+        \"inline-source-map\": \"0.3.1\",",
                "+        \"source-map\": \"0.1.43\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"source-map\": {",
                "+          \"version\": \"0.1.43\",",
                "+          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.1.43.tgz\",",
                "+          \"integrity\": \"sha1-wkvBRspRfBRx9drL4lcbK3+eM0Y=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"amdefine\": \"1.0.1\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"combined-stream\": {",
                "+      \"version\": \"1.0.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.6.tgz\",",
                "+      \"integrity\": \"sha1-cj599ugBrFYTETp+RFqbactjKBg=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"delayed-stream\": \"1.0.0\"",
                "+      }",
                "+    },",
                "+    \"commander\": {",
                "+      \"version\": \"2.14.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-2.14.1.tgz\",",
                "+      \"integrity\": \"sha512-+YR16o3rK53SmWHU3rEM3tPAh2rwb1yPcQX5irVn7mb0gXbwuCCrnkbV5+PBfETdfg1vui07nM6PCG1zndcjQw==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"commondir\": {",
                "+      \"version\": \"0.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/commondir/-/commondir-0.0.1.tgz\",",
                "+      \"integrity\": \"sha1-ifAP3NUbUZxXhzP+xWPmptp/W+I=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"concat-map\": {",
                "+      \"version\": \"0.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",",
                "+      \"integrity\": \"sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"concat-stream\": {",
                "+      \"version\": \"1.6.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.0.tgz\",",
                "+      \"integrity\": \"sha1-CqxmL9Ur54lk1VMvaUeE5wEQrPc=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"inherits\": \"2.0.3\",",
                "+        \"readable-stream\": \"2.3.5\",",
                "+        \"typedarray\": \"0.0.6\"",
                "+      }",
                "+    },",
                "+    \"connect\": {",
                "+      \"version\": \"3.6.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/connect/-/connect-3.6.6.tgz\",",
                "+      \"integrity\": \"sha1-Ce/2xVr3I24TcTWnJXSFi2eG9SQ=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"debug\": \"2.6.9\",",
                "+        \"finalhandler\": \"1.1.0\",",
                "+        \"parseurl\": \"1.3.2\",",
                "+        \"utils-merge\": \"1.0.1\"",
                "+      }",
                "+    },",
                "+    \"console-browserify\": {",
                "+      \"version\": \"1.0.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/console-browserify/-/console-browserify-1.0.3.tgz\",",
                "+      \"integrity\": \"sha1-04mNLDqTEC82QZf4h0tPkrUoao4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"console-control-strings\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/console-control-strings/-/console-control-strings-1.1.0.tgz\",",
                "+      \"integrity\": \"sha1-PXz0Rk22RG6mRL9LOVB/mFEAjo4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"constants-browserify\": {",
                "+      \"version\": \"0.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/constants-browserify/-/constants-browserify-0.0.1.tgz\",",
                "+      \"integrity\": \"sha1-kld9tSe6bEzwpFaNhLwDH0QeIfI=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"convert-source-map\": {",
                "+      \"version\": \"0.3.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-0.3.5.tgz\",",
                "+      \"integrity\": \"sha1-8dgClQr33SYxof6+BZZVDIarMZA=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"core-util-is\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-tf1UIgqivFq1eqtxQMlAdUUDwac=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"cryptiles\": {",
                "+      \"version\": \"3.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/cryptiles/-/cryptiles-3.1.2.tgz\",",
                "+      \"integrity\": \"sha1-qJ+7Ig9c4l7FboxKqKT9e1sNKf4=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"boom\": \"5.2.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"boom\": {",
                "+          \"version\": \"5.2.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/boom/-/boom-5.2.0.tgz\",",
                "+          \"integrity\": \"sha512-Z5BTk6ZRe4tXXQlkqftmsAUANpXmuwlsF5Oov8ThoMbQRzdGTA1ngYRW160GexgOgjsFOKJz0LYhoNi+2AMBUw==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"hoek\": \"4.2.1\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"crypto-browserify\": {",
                "+      \"version\": \"1.0.9\",",
                "+      \"resolved\": \"https://registry.npmjs.org/crypto-browserify/-/crypto-browserify-1.0.9.tgz\",",
                "+      \"integrity\": \"sha1-zFRJaF37hesRyYKKzHy4erW7/MA=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"dashdash\": {",
                "+      \"version\": \"1.14.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz\",",
                "+      \"integrity\": \"sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"assert-plus\": \"1.0.0\"",
                "+      }",
                "+    },",
                "+    \"debug\": {",
                "+      \"version\": \"2.6.9\",",
                "+      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",",
                "+      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"ms\": \"2.0.0\"",
                "+      }",
                "+    },",
                "+    \"decamelize\": {",
                "+      \"version\": \"1.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz\",",
                "+      \"integrity\": \"sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"deep-equal\": {",
                "+      \"version\": \"0.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/deep-equal/-/deep-equal-0.1.2.tgz\",",
                "+      \"integrity\": \"sha1-skbCuApXCkfBG+HZvRBw7IeLh84=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"deep-extend\": {",
                "+      \"version\": \"0.4.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/deep-extend/-/deep-extend-0.4.2.tgz\",",
                "+      \"integrity\": \"sha1-SLaZwn4zS/ifEIkr5DL25MfTSn8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"deep-is\": {",
                "+      \"version\": \"0.1.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/deep-is/-/deep-is-0.1.3.tgz\",",
                "+      \"integrity\": \"sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"define-properties\": {",
                "+      \"version\": \"1.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/define-properties/-/define-properties-1.1.2.tgz\",",
                "+      \"integrity\": \"sha1-g6c/L+pWmJj7c3GTyPhzyvbUXJQ=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"foreach\": \"2.0.5\",",
                "+        \"object-keys\": \"1.0.11\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"object-keys\": {",
                "+          \"version\": \"1.0.11\",",
                "+          \"resolved\": \"https://registry.npmjs.org/object-keys/-/object-keys-1.0.11.tgz\",",
                "+          \"integrity\": \"sha1-xUYBd4rVYPEULODgG8yotW0TQm0=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"defined\": {",
                "+      \"version\": \"0.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/defined/-/defined-0.0.0.tgz\",",
                "+      \"integrity\": \"sha1-817qfXBekzuvE7LwOz+D2SFAOz4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"delayed-stream\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-3zrhmayt+31ECqrgsp4icrJOxhk=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"delegates\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/delegates/-/delegates-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-hMbhWbgZBP3KWaDvRM2HDTElD5o=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"deps-sort\": {",
                "+      \"version\": \"0.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/deps-sort/-/deps-sort-0.1.2.tgz\",",
                "+      \"integrity\": \"sha1-2qL7YUoXyWN9gB4vVTOa43DzYRo=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"JSONStream\": \"0.6.4\",",
                "+        \"minimist\": \"0.0.10\",",
                "+        \"through\": \"2.3.8\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"JSONStream\": {",
                "+          \"version\": \"0.6.4\",",
                "+          \"resolved\": \"https://registry.npmjs.org/JSONStream/-/JSONStream-0.6.4.tgz\",",
                "+          \"integrity\": \"sha1-SyyAY/j1Enh7I3X37p22kgj6Lcs=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"jsonparse\": \"0.0.5\",",
                "+            \"through\": \"2.2.7\"",
                "+          },",
                "+          \"dependencies\": {",
                "+            \"through\": {",
                "+              \"version\": \"2.2.7\",",
                "+              \"resolved\": \"https://registry.npmjs.org/through/-/through-2.2.7.tgz\",",
                "+              \"integrity\": \"sha1-bo4hIAGR1OtqmfbwEN9Gqhxusr0=\",",
                "+              \"dev\": true",
                "+            }",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"derequire\": {",
                "+      \"version\": \"0.8.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/derequire/-/derequire-0.8.0.tgz\",",
                "+      \"integrity\": \"sha1-wffx2izt5Ere3gRzePA/RE6cTA0=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"esprima-fb\": \"3001.1.0-dev-harmony-fb\",",
                "+        \"esrefactor\": \"0.1.0\",",
                "+        \"estraverse\": \"1.5.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"esprima-fb\": {",
                "+          \"version\": \"3001.1.0-dev-harmony-fb\",",
                "+          \"resolved\": \"https://registry.npmjs.org/esprima-fb/-/esprima-fb-3001.0001.0000-dev-harmony-fb.tgz\",",
                "+          \"integrity\": \"sha1-t303q8046gt3Qmu4vCkizmtCZBE=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"estraverse\": {",
                "+          \"version\": \"1.5.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-1.5.1.tgz\",",
                "+          \"integrity\": \"sha1-hno+jlip+EYYr7bC3bzZFrfLr3E=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"detective\": {",
                "+      \"version\": \"3.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/detective/-/detective-3.1.0.tgz\",",
                "+      \"integrity\": \"sha1-d3gkRKt1K4jKG+Lp0KA5Xx2iXu0=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"escodegen\": \"1.1.0\",",
                "+        \"esprima-fb\": \"3001.1.0-dev-harmony-fb\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"escodegen\": {",
                "+          \"version\": \"1.1.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/escodegen/-/escodegen-1.1.0.tgz\",",
                "+          \"integrity\": \"sha1-xmOSP24gqtSNDA+knzHG1PSTYM8=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"esprima\": \"1.0.4\",",
                "+            \"estraverse\": \"1.5.1\",",
                "+            \"esutils\": \"1.0.0\",",
                "+            \"source-map\": \"0.1.43\"",
                "+          },",
                "+          \"dependencies\": {",
                "+            \"esprima\": {",
                "+              \"version\": \"1.0.4\",",
                "+              \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-1.0.4.tgz\",",
                "+              \"integrity\": \"sha1-n1V+CPw7TSbs6d00+Pv0drYlha0=\",",
                "+              \"dev\": true",
                "+            }",
                "+          }",
                "+        },",
                "+        \"esprima-fb\": {",
                "+          \"version\": \"3001.1.0-dev-harmony-fb\",",
                "+          \"resolved\": \"https://registry.npmjs.org/esprima-fb/-/esprima-fb-3001.0001.0000-dev-harmony-fb.tgz\",",
                "+          \"integrity\": \"sha1-t303q8046gt3Qmu4vCkizmtCZBE=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"estraverse\": {",
                "+          \"version\": \"1.5.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-1.5.1.tgz\",",
                "+          \"integrity\": \"sha1-hno+jlip+EYYr7bC3bzZFrfLr3E=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"esutils\": {",
                "+          \"version\": \"1.0.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-1.0.0.tgz\",",
                "+          \"integrity\": \"sha1-gVHTWOIMisx/t0XnRywAJf5JZXA=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"source-map\": {",
                "+          \"version\": \"0.1.43\",",
                "+          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.1.43.tgz\",",
                "+          \"integrity\": \"sha1-wkvBRspRfBRx9drL4lcbK3+eM0Y=\",",
                "+          \"dev\": true,",
                "+          \"optional\": true,",
                "+          \"requires\": {",
                "+            \"amdefine\": \"1.0.1\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"dom-walk\": {",
                "+      \"version\": \"0.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/dom-walk/-/dom-walk-0.1.1.tgz\",",
                "+      \"integrity\": \"sha1-ZyIm3HTI95mtNTB9+TaroRrNYBg=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"domain-browser\": {",
                "+      \"version\": \"1.1.7\",",
                "+      \"resolved\": \"https://registry.npmjs.org/domain-browser/-/domain-browser-1.1.7.tgz\",",
                "+      \"integrity\": \"sha1-hnqksJP6oF8d4IwG9NeyH9+GmLw=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"duplexer\": {",
                "+      \"version\": \"0.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/duplexer/-/duplexer-0.1.1.tgz\",",
                "+      \"integrity\": \"sha1-rOb/gIwc5mtX0ev5eXessCM0z8E=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"duplexer2\": {",
                "+      \"version\": \"0.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/duplexer2/-/duplexer2-0.0.2.tgz\",",
                "+      \"integrity\": \"sha1-xhTc9n4vsUmVqRcR5aYX6KYKMds=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"readable-stream\": \"1.1.14\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"isarray\": {",
                "+          \"version\": \"0.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",",
                "+          \"integrity\": \"sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"readable-stream\": {",
                "+          \"version\": \"1.1.14\",",
                "+          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz\",",
                "+          \"integrity\": \"sha1-fPTFTvZI44EwhMY23SB54WbAgdk=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"core-util-is\": \"1.0.2\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"isarray\": \"0.0.1\",",
                "+            \"string_decoder\": \"0.10.31\"",
                "+          }",
                "+        },",
                "+        \"string_decoder\": {",
                "+          \"version\": \"0.10.31\",",
                "+          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "+          \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"ecc-jsbn\": {",
                "+      \"version\": \"0.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.1.tgz\",",
                "+      \"integrity\": \"sha1-D8c6ntXw1Tw4GTOYUj735UN3dQU=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true,",
                "+      \"requires\": {",
                "+        \"jsbn\": \"0.1.1\"",
                "+      }",
                "+    },",
                "+    \"ee-first\": {",
                "+      \"version\": \"1.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",",
                "+      \"integrity\": \"sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"encodeurl\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"end-of-stream\": {",
                "+      \"version\": \"1.4.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.1.tgz\",",
                "+      \"integrity\": \"sha512-1MkrZNvWTKCaigbn+W15elq2BB/L22nqrSY5DKlo3X6+vclJm8Bb5djXJBmEX6fS3+zCh/F4VBK5Z2KxJt4s2Q==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"once\": \"1.4.0\"",
                "+      }",
                "+    },",
                "+    \"es-abstract\": {",
                "+      \"version\": \"1.10.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/es-abstract/-/es-abstract-1.10.0.tgz\",",
                "+      \"integrity\": \"sha512-/uh/DhdqIOSkAWifU+8nG78vlQxdLckUdI/sPgy0VhuXi2qJ7T8czBmqIYtLQVpCIFYafChnsRsB5pyb1JdmCQ==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"es-to-primitive\": \"1.1.1\",",
                "+        \"function-bind\": \"1.1.1\",",
                "+        \"has\": \"1.0.1\",",
                "+        \"is-callable\": \"1.1.3\",",
                "+        \"is-regex\": \"1.0.4\"",
                "+      }",
                "+    },",
                "+    \"es-to-primitive\": {",
                "+      \"version\": \"1.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.1.1.tgz\",",
                "+      \"integrity\": \"sha1-RTVSSKiJeQNLZ5Lhm7gfK3l13Q0=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"is-callable\": \"1.1.3\",",
                "+        \"is-date-object\": \"1.0.1\",",
                "+        \"is-symbol\": \"1.0.1\"",
                "+      }",
                "+    },",
                "+    \"es6-promise\": {",
                "+      \"version\": \"4.2.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/es6-promise/-/es6-promise-4.2.4.tgz\",",
                "+      \"integrity\": \"sha512-/NdNZVJg+uZgtm9eS3O6lrOLYmQag2DjdEXuPaHlZ6RuVqgqaVZfgYCepEIKsLqwdQArOPtC3XzRLqGGfT8KQQ==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"escape-html\": {",
                "+      \"version\": \"1.0.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",",
                "+      \"integrity\": \"sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"escape-string-regexp\": {",
                "+      \"version\": \"1.0.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",",
                "+      \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"escodegen\": {",
                "+      \"version\": \"1.8.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/escodegen/-/escodegen-1.8.1.tgz\",",
                "+      \"integrity\": \"sha1-WltTr0aTEQvrsIZ6o0MN07cKEBg=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"esprima\": \"2.7.3\",",
                "+        \"estraverse\": \"1.9.3\",",
                "+        \"esutils\": \"2.0.2\",",
                "+        \"optionator\": \"0.8.2\",",
                "+        \"source-map\": \"0.2.0\"",
                "+      }",
                "+    },",
                "+    \"escope\": {",
                "+      \"version\": \"0.0.16\",",
                "+      \"resolved\": \"https://registry.npmjs.org/escope/-/escope-0.0.16.tgz\",",
                "+      \"integrity\": \"sha1-QYx6CvynIdr+ZZGT/Zhig+dGU48=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"estraverse\": \"1.9.3\"",
                "+      }",
                "+    },",
                "+    \"esprima\": {",
                "+      \"version\": \"2.7.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-2.7.3.tgz\",",
                "+      \"integrity\": \"sha1-luO3DVd59q1JzQMmc9HDEnZ7pYE=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"esrefactor\": {",
                "+      \"version\": \"0.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/esrefactor/-/esrefactor-0.1.0.tgz\",",
                "+      \"integrity\": \"sha1-0UJ5WigjOauB6Ta1t6IbEb8ZexM=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"escope\": \"0.0.16\",",
                "+        \"esprima\": \"1.0.4\",",
                "+        \"estraverse\": \"0.0.4\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"esprima\": {",
                "+          \"version\": \"1.0.4\",",
                "+          \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-1.0.4.tgz\",",
                "+          \"integrity\": \"sha1-n1V+CPw7TSbs6d00+Pv0drYlha0=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"estraverse\": {",
                "+          \"version\": \"0.0.4\",",
                "+          \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-0.0.4.tgz\",",
                "+          \"integrity\": \"sha1-AaCTLf7ldGhKWYr1pnw7+bZCjbI=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"estraverse\": {",
                "+      \"version\": \"1.9.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-1.9.3.tgz\",",
                "+      \"integrity\": \"sha1-r2fy3JIlgkFZUJJgkaQAXSnJu0Q=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"esutils\": {",
                "+      \"version\": \"2.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.2.tgz\",",
                "+      \"integrity\": \"sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"events\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/events/-/events-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-dYSdz+k9EPsFfDAFWv29UdBqjiQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"expand-template\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/expand-template/-/expand-template-1.1.0.tgz\",",
                "+      \"integrity\": \"sha512-kkjwkMqj0h4w/sb32ERCDxCQkREMCAgS39DscDnSwDsbxnwwM1BTZySdC3Bn1lhY7vL08n9GoO/fVTynjDgRyQ==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"extend\": {",
                "+      \"version\": \"3.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/extend/-/extend-3.0.1.tgz\",",
                "+      \"integrity\": \"sha1-p1Xqe8Gt/MWjHOfnYtuq3F5jZEQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"extract-zip\": {",
                "+      \"version\": \"1.6.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-1.6.6.tgz\",",
                "+      \"integrity\": \"sha1-EpDt6NINCHK0Kf0/NRyhKOxe+Fw=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"concat-stream\": \"1.6.0\",",
                "+        \"debug\": \"2.6.9\",",
                "+        \"mkdirp\": \"0.5.0\",",
                "+        \"yauzl\": \"2.4.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"minimist\": {",
                "+          \"version\": \"0.0.8\",",
                "+          \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz\",",
                "+          \"integrity\": \"sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"mkdirp\": {",
                "+          \"version\": \"0.5.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.0.tgz\",",
                "+          \"integrity\": \"sha1-HXMHam35hs2TROFecfzAWkyavxI=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"minimist\": \"0.0.8\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"extsprintf\": {",
                "+      \"version\": \"1.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz\",",
                "+      \"integrity\": \"sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"fast-deep-equal\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-1.1.0.tgz\",",
                "+      \"integrity\": \"sha1-wFNHeBfIa1HaqFPIHgWbcz0CNhQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"fast-json-stable-stringify\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-1RQsDK7msRifh9OnYREGT4bIu/I=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"fast-levenshtein\": {",
                "+      \"version\": \"2.0.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz\",",
                "+      \"integrity\": \"sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"fd-slicer\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-i1vL2ewyfFBBv5qwI/1nUPEXfmU=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"pend\": \"1.2.0\"",
                "+      }",
                "+    },",
                "+    \"fileset\": {",
                "+      \"version\": \"0.1.8\",",
                "+      \"resolved\": \"https://registry.npmjs.org/fileset/-/fileset-0.1.8.tgz\",",
                "+      \"integrity\": \"sha1-UGuRqTluqn4y+0KoQHfHoMc2t0E=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"glob\": \"3.2.11\",",
                "+        \"minimatch\": \"0.4.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"glob\": {",
                "+          \"version\": \"3.2.11\",",
                "+          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-3.2.11.tgz\",",
                "+          \"integrity\": \"sha1-Spc/Y1uRkPcV0QmH1cAP0oFevj0=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"minimatch\": \"0.3.0\"",
                "+          },",
                "+          \"dependencies\": {",
                "+            \"minimatch\": {",
                "+              \"version\": \"0.3.0\",",
                "+              \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-0.3.0.tgz\",",
                "+              \"integrity\": \"sha1-J12O2qxPG7MyZHIInnlJyDlGmd0=\",",
                "+              \"dev\": true,",
                "+              \"requires\": {",
                "+                \"lru-cache\": \"2.7.3\",",
                "+                \"sigmund\": \"1.0.1\"",
                "+              }",
                "+            }",
                "+          }",
                "+        },",
                "+        \"minimatch\": {",
                "+          \"version\": \"0.4.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-0.4.0.tgz\",",
                "+          \"integrity\": \"sha1-vSx9Bg0sjI/Xzefx8u0tWycP2xs=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"lru-cache\": \"2.7.3\",",
                "+            \"sigmund\": \"1.0.1\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"finalhandler\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.0.tgz\",",
                "+      \"integrity\": \"sha1-zgtoVbRYU+eRsvzGgARtiCU91/U=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"debug\": \"2.6.9\",",
                "+        \"encodeurl\": \"1.0.2\",",
                "+        \"escape-html\": \"1.0.3\",",
                "+        \"on-finished\": \"2.3.0\",",
                "+        \"parseurl\": \"1.3.2\",",
                "+        \"statuses\": \"1.3.1\",",
                "+        \"unpipe\": \"1.0.0\"",
                "+      }",
                "+    },",
                "+    \"for-each\": {",
                "+      \"version\": \"0.3.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/for-each/-/for-each-0.3.2.tgz\",",
                "+      \"integrity\": \"sha1-LEBFC5NI6X8oEyJZO6lnBLmr1NQ=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"is-function\": \"1.0.1\"",
                "+      }",
                "+    },",
                "+    \"foreach\": {",
                "+      \"version\": \"2.0.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/foreach/-/foreach-2.0.5.tgz\",",
                "+      \"integrity\": \"sha1-C+4AUBiusmDQo6865ljdATbsG5k=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"forever-agent\": {",
                "+      \"version\": \"0.6.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz\",",
                "+      \"integrity\": \"sha1-+8cfDEGt6zf5bFd60e1C2P2sypE=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"form-data\": {",
                "+      \"version\": \"2.3.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-2.3.2.tgz\",",
                "+      \"integrity\": \"sha1-SXBJi+YEwgwAXU9cI67NIda0kJk=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"asynckit\": \"0.4.0\",",
                "+        \"combined-stream\": \"1.0.6\",",
                "+        \"mime-types\": \"2.1.18\"",
                "+      }",
                "+    },",
                "+    \"fs-extra\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-zTzl9+fLYUWIP8rjGR6Yd/hYeVA=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"graceful-fs\": \"4.1.11\",",
                "+        \"jsonfile\": \"2.4.0\",",
                "+        \"klaw\": \"1.3.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"klaw\": {",
                "+          \"version\": \"1.3.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/klaw/-/klaw-1.3.1.tgz\",",
                "+          \"integrity\": \"sha1-QIhDO0azsbolnXh4XY6W9zugJDk=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"graceful-fs\": \"4.1.11\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"fs.realpath\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-FQStJSMVjKpA20onh8sBQRmU6k8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"function-bind\": {",
                "+      \"version\": \"1.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz\",",
                "+      \"integrity\": \"sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"gauge\": {",
                "+      \"version\": \"2.7.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/gauge/-/gauge-2.7.4.tgz\",",
                "+      \"integrity\": \"sha1-LANAXHU4w51+s3sxcCLjJfsBi/c=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"aproba\": \"1.2.0\",",
                "+        \"console-control-strings\": \"1.1.0\",",
                "+        \"has-unicode\": \"2.0.1\",",
                "+        \"object-assign\": \"4.1.1\",",
                "+        \"signal-exit\": \"3.0.2\",",
                "+        \"string-width\": \"1.0.2\",",
                "+        \"strip-ansi\": \"3.0.1\",",
                "+        \"wide-align\": \"1.1.2\"",
                "+      }",
                "+    },",
                "+    \"generate-function\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/generate-function/-/generate-function-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-aFj+fAlpt9TpCTM3ZHrHn2DfvnQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"generate-object-property\": {",
                "+      \"version\": \"1.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/generate-object-property/-/generate-object-property-1.2.0.tgz\",",
                "+      \"integrity\": \"sha1-nA4cQDCM6AT0eDYYuTf6iPmdUNA=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"is-property\": \"1.0.2\"",
                "+      }",
                "+    },",
                "+    \"getpass\": {",
                "+      \"version\": \"0.1.7\",",
                "+      \"resolved\": \"https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz\",",
                "+      \"integrity\": \"sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"assert-plus\": \"1.0.0\"",
                "+      }",
                "+    },",
                "+    \"github-from-package\": {",
                "+      \"version\": \"0.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/github-from-package/-/github-from-package-0.0.0.tgz\",",
                "+      \"integrity\": \"sha1-l/tdlr/eiXMxPyDoKI75oWf6ZM4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"glob\": {",
                "+      \"version\": \"5.0.15\",",
                "+      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-5.0.15.tgz\",",
                "+      \"integrity\": \"sha1-G8k2ueAvSmA/zCIuz3Yz0wuLk7E=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"inflight\": \"1.0.6\",",
                "+        \"inherits\": \"2.0.3\",",
                "+        \"minimatch\": \"3.0.4\",",
                "+        \"once\": \"1.4.0\",",
                "+        \"path-is-absolute\": \"1.0.1\"",
                "+      }",
                "+    },",
                "+    \"global\": {",
                "+      \"version\": \"4.3.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/global/-/global-4.3.2.tgz\",",
                "+      \"integrity\": \"sha1-52mJJopsdMOJCLEwWxD8DjlOnQ8=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"min-document\": \"2.19.0\",",
                "+        \"process\": \"0.5.2\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"process\": {",
                "+          \"version\": \"0.5.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/process/-/process-0.5.2.tgz\",",
                "+          \"integrity\": \"sha1-FjjYqONML0QKkduVq5rrZ3/Bhc8=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"graceful-fs\": {",
                "+      \"version\": \"4.1.11\",",
                "+      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz\",",
                "+      \"integrity\": \"sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"handlebars\": {",
                "+      \"version\": \"4.0.11\",",
                "+      \"resolved\": \"https://registry.npmjs.org/handlebars/-/handlebars-4.0.11.tgz\",",
                "+      \"integrity\": \"sha1-Ywo13+ApS8KB7a5v/F0yn8eYLcw=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"async\": \"1.5.2\",",
                "+        \"optimist\": \"0.6.1\",",
                "+        \"source-map\": \"0.4.4\",",
                "+        \"uglify-js\": \"2.8.29\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"source-map\": {",
                "+          \"version\": \"0.4.4\",",
                "+          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.4.4.tgz\",",
                "+          \"integrity\": \"sha1-66T12pwNyZneaAMti092FzZSA2s=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"amdefine\": \"1.0.1\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"har-schema\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"har-validator\": {",
                "+      \"version\": \"5.0.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/har-validator/-/har-validator-5.0.3.tgz\",",
                "+      \"integrity\": \"sha1-ukAsJmGU8VlW7xXg/PJCmT9qff0=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"ajv\": \"5.5.2\",",
                "+        \"har-schema\": \"2.0.0\"",
                "+      }",
                "+    },",
                "+    \"has\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/has/-/has-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-hGFzP1OLCDfJNh45qauelwTcLyg=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"function-bind\": \"1.1.1\"",
                "+      }",
                "+    },",
                "+    \"has-ansi\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"ansi-regex\": \"2.1.1\"",
                "+      }",
                "+    },",
                "+    \"has-flag\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-nZ55MWXOAXoA8AQYxD+UKnsdEfo=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"has-unicode\": {",
                "+      \"version\": \"2.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz\",",
                "+      \"integrity\": \"sha1-4Ob+aijPUROIVeCG0Wkedx3iqLk=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"hasha\": {",
                "+      \"version\": \"2.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/hasha/-/hasha-2.2.0.tgz\",",
                "+      \"integrity\": \"sha1-eNfL/B5tZjA/55g3NlmEUXsvbuE=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"is-stream\": \"1.1.0\",",
                "+        \"pinkie-promise\": \"2.0.1\"",
                "+      }",
                "+    },",
                "+    \"hawk\": {",
                "+      \"version\": \"6.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/hawk/-/hawk-6.0.2.tgz\",",
                "+      \"integrity\": \"sha512-miowhl2+U7Qle4vdLqDdPt9m09K6yZhkLDTWGoUiUzrQCn+mHHSmfJgAyGaLRZbPmTqfFFjRV1QWCW0VWUJBbQ==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"boom\": \"4.3.1\",",
                "+        \"cryptiles\": \"3.1.2\",",
                "+        \"hoek\": \"4.2.1\",",
                "+        \"sntp\": \"2.1.0\"",
                "+      }",
                "+    },",
                "+    \"hoek\": {",
                "+      \"version\": \"4.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/hoek/-/hoek-4.2.1.tgz\",",
                "+      \"integrity\": \"sha512-QLg82fGkfnJ/4iy1xZ81/9SIJiq1NGFUMGs6ParyjBZr6jW2Ufj/snDqTHixNlHdPNwN2RLVD0Pi3igeK9+JfA==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"http-browserify\": {",
                "+      \"version\": \"1.3.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/http-browserify/-/http-browserify-1.3.2.tgz\",",
                "+      \"integrity\": \"sha1-tWLDRHk0mmkNemWX30la76jGBPU=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"Base64\": \"0.2.1\",",
                "+        \"inherits\": \"2.0.3\"",
                "+      }",
                "+    },",
                "+    \"http-signature\": {",
                "+      \"version\": \"1.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz\",",
                "+      \"integrity\": \"sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"assert-plus\": \"1.0.0\",",
                "+        \"jsprim\": \"1.4.1\",",
                "+        \"sshpk\": \"1.13.1\"",
                "+      }",
                "+    },",
                "+    \"https-browserify\": {",
                "+      \"version\": \"0.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/https-browserify/-/https-browserify-0.0.1.tgz\",",
                "+      \"integrity\": \"sha1-P5E2XKvmC3ftDruiS0VOPgnZWoI=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"ieee754\": {",
                "+      \"version\": \"1.1.8\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ieee754/-/ieee754-1.1.8.tgz\",",
                "+      \"integrity\": \"sha1-vjPUCsEO8ZJnAfbwii2G+/0a0+Q=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"indexof\": {",
                "+      \"version\": \"0.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/indexof/-/indexof-0.0.1.tgz\",",
                "+      \"integrity\": \"sha1-gtwzbSMrkGIXnQWrMpOmYFn9Q10=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"inflight\": {",
                "+      \"version\": \"1.0.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",",
                "+      \"integrity\": \"sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"once\": \"1.4.0\",",
                "+        \"wrappy\": \"1.0.2\"",
                "+      }",
                "+    },",
                "+    \"inherits\": {",
                "+      \"version\": \"2.0.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz\",",
                "+      \"integrity\": \"sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"ini\": {",
                "+      \"version\": \"1.3.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ini/-/ini-1.3.5.tgz\",",
                "+      \"integrity\": \"sha512-RZY5huIKCMRWDUqZlEi72f/lmXKMvuszcMBduliQ3nnWbx9X/ZBQO7DijMEYS9EhHBb2qacRUMtC7svLwe0lcw==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"inline-source-map\": {",
                "+      \"version\": \"0.3.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/inline-source-map/-/inline-source-map-0.3.1.tgz\",",
                "+      \"integrity\": \"sha1-pSi1FOaJ/OkNswiehw2S9Sestes=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"source-map\": \"0.3.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"source-map\": {",
                "+          \"version\": \"0.3.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.3.0.tgz\",",
                "+          \"integrity\": \"sha1-hYb7mloAXltQHiHNGLbyG0V60fk=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"amdefine\": \"1.0.1\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"insert-module-globals\": {",
                "+      \"version\": \"6.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/insert-module-globals/-/insert-module-globals-6.0.0.tgz\",",
                "+      \"integrity\": \"sha1-7orrne4WgZ4zqhRYilWIJK8MFdw=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"JSONStream\": \"0.7.4\",",
                "+        \"concat-stream\": \"1.4.11\",",
                "+        \"lexical-scope\": \"1.1.1\",",
                "+        \"process\": \"0.6.0\",",
                "+        \"through\": \"2.3.8\",",
                "+        \"xtend\": \"3.0.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"concat-stream\": {",
                "+          \"version\": \"1.4.11\",",
                "+          \"resolved\": \"https://registry.npmjs.org/concat-stream/-/concat-stream-1.4.11.tgz\",",
                "+          \"integrity\": \"sha512-X3JMh8+4je3U1cQpG87+f9lXHDrqcb2MVLg9L7o8b1UZ0DzhRrUpdn65ttzu10PpJPPI3MQNkis+oha6TSA9Mw==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"readable-stream\": \"1.1.14\",",
                "+            \"typedarray\": \"0.0.6\"",
                "+          }",
                "+        },",
                "+        \"isarray\": {",
                "+          \"version\": \"0.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",",
                "+          \"integrity\": \"sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"process\": {",
                "+          \"version\": \"0.6.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/process/-/process-0.6.0.tgz\",",
                "+          \"integrity\": \"sha1-fdm+gP+q7dTLYo8YJ/HLq23AkY8=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"readable-stream\": {",
                "+          \"version\": \"1.1.14\",",
                "+          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz\",",
                "+          \"integrity\": \"sha1-fPTFTvZI44EwhMY23SB54WbAgdk=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"core-util-is\": \"1.0.2\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"isarray\": \"0.0.1\",",
                "+            \"string_decoder\": \"0.10.31\"",
                "+          }",
                "+        },",
                "+        \"string_decoder\": {",
                "+          \"version\": \"0.10.31\",",
                "+          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "+          \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"is-buffer\": {",
                "+      \"version\": \"1.1.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz\",",
                "+      \"integrity\": \"sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"is-callable\": {",
                "+      \"version\": \"1.1.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-callable/-/is-callable-1.1.3.tgz\",",
                "+      \"integrity\": \"sha1-hut1OSgF3cM69xySoO7fdO52BLI=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"is-date-object\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"is-fullwidth-code-point\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-754xOG8DGn8NZDr4L95QxFfvAMs=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"number-is-nan\": \"1.0.1\"",
                "+      }",
                "+    },",
                "+    \"is-function\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-function/-/is-function-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-Es+5i2W1fdPRk6MSH19uL0N2ArU=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"is-my-ip-valid\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-my-ip-valid/-/is-my-ip-valid-1.0.0.tgz\",",
                "+      \"integrity\": \"sha512-gmh/eWXROncUzRnIa1Ubrt5b8ep/MGSnfAUI3aRp+sqTCs1tv1Isl8d8F6JmkN3dXKc3ehZMrtiPN9eL03NuaQ==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"is-my-json-valid\": {",
                "+      \"version\": \"2.17.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-my-json-valid/-/is-my-json-valid-2.17.2.tgz\",",
                "+      \"integrity\": \"sha512-IBhBslgngMQN8DDSppmgDv7RNrlFotuuDsKcrCP3+HbFaVivIBU7u9oiiErw8sH4ynx3+gOGQ3q2otkgiSi6kg==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"generate-function\": \"2.0.0\",",
                "+        \"generate-object-property\": \"1.2.0\",",
                "+        \"is-my-ip-valid\": \"1.0.0\",",
                "+        \"jsonpointer\": \"4.0.1\",",
                "+        \"xtend\": \"4.0.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"xtend\": {",
                "+          \"version\": \"4.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz\",",
                "+          \"integrity\": \"sha1-pcbVMr5lbiPbgg77lDofBJmNY68=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"is-property\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-property/-/is-property-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-V/4cTkhHTt1lsJkR8msc1Ald2oQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"is-regex\": {",
                "+      \"version\": \"1.0.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-regex/-/is-regex-1.0.4.tgz\",",
                "+      \"integrity\": \"sha1-VRdIm1RwkbCTDglWVM7SXul+lJE=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"has\": \"1.0.1\"",
                "+      }",
                "+    },",
                "+    \"is-stream\": {",
                "+      \"version\": \"1.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz\",",
                "+      \"integrity\": \"sha1-EtSj3U5o4Lec6428hBc66A2RykQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"is-symbol\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-PMWfAAJRlLarLjjbrmaJJWtmBXI=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"is-typedarray\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"isarray\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"isexe\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"isstream\": {",
                "+      \"version\": \"0.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz\",",
                "+      \"integrity\": \"sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"istanbul\": {",
                "+      \"version\": \"0.4.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/istanbul/-/istanbul-0.4.5.tgz\",",
                "+      \"integrity\": \"sha1-ZcfXPUxNqE1POsMQuRj7C4Azczs=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"abbrev\": \"1.0.9\",",
                "+        \"async\": \"1.5.2\",",
                "+        \"escodegen\": \"1.8.1\",",
                "+        \"esprima\": \"2.7.3\",",
                "+        \"glob\": \"5.0.15\",",
                "+        \"handlebars\": \"4.0.11\",",
                "+        \"js-yaml\": \"3.11.0\",",
                "+        \"mkdirp\": \"0.5.1\",",
                "+        \"nopt\": \"3.0.6\",",
                "+        \"once\": \"1.4.0\",",
                "+        \"resolve\": \"1.1.7\",",
                "+        \"supports-color\": \"3.2.3\",",
                "+        \"which\": \"1.3.0\",",
                "+        \"wordwrap\": \"1.0.0\"",
                "+      }",
                "+    },",
                "+    \"js-yaml\": {",
                "+      \"version\": \"3.11.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-3.11.0.tgz\",",
                "+      \"integrity\": \"sha512-saJstZWv7oNeOyBh3+Dx1qWzhW0+e6/8eDzo7p5rDFqxntSztloLtuKu+Ejhtq82jsilwOIZYsCz+lIjthg1Hw==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"argparse\": \"1.0.10\",",
                "+        \"esprima\": \"4.0.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"esprima\": {",
                "+          \"version\": \"4.0.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.0.tgz\",",
                "+          \"integrity\": \"sha512-oftTcaMu/EGrEIu904mWteKIv8vMuOgGYo7EhVJJN00R/EED9DCua/xxHRdYnKtcECzVg7xOWhflvJMnqcFZjw==\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"js2xmlparser\": {",
                "+      \"version\": \"3.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/js2xmlparser/-/js2xmlparser-3.0.0.tgz\",",
                "+      \"integrity\": \"sha1-P7YOqgicVED5MZ9RdgzNB+JJlzM=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"xmlcreate\": \"1.0.2\"",
                "+      }",
                "+    },",
                "+    \"jsbn\": {",
                "+      \"version\": \"0.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz\",",
                "+      \"integrity\": \"sha1-peZUwuWi3rXyAdls77yoDA7y9RM=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true",
                "+    },",
                "+    \"jsdoc\": {",
                "+      \"version\": \"3.5.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/jsdoc/-/jsdoc-3.5.5.tgz\",",
                "+      \"integrity\": \"sha512-6PxB65TAU4WO0Wzyr/4/YhlGovXl0EVYfpKbpSroSj0qBxT4/xod/l40Opkm38dRHRdQgdeY836M0uVnJQG7kg==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"babylon\": \"7.0.0-beta.19\",",
                "+        \"bluebird\": \"3.5.1\",",
                "+        \"catharsis\": \"0.8.9\",",
                "+        \"escape-string-regexp\": \"1.0.5\",",
                "+        \"js2xmlparser\": \"3.0.0\",",
                "+        \"klaw\": \"2.0.0\",",
                "+        \"marked\": \"0.3.17\",",
                "+        \"mkdirp\": \"0.5.1\",",
                "+        \"requizzle\": \"0.2.1\",",
                "+        \"strip-json-comments\": \"2.0.1\",",
                "+        \"taffydb\": \"2.6.2\",",
                "+        \"underscore\": \"1.8.3\"",
                "+      }",
                "+    },",
                "+    \"json-schema\": {",
                "+      \"version\": \"0.2.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz\",",
                "+      \"integrity\": \"sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"json-schema-traverse\": {",
                "+      \"version\": \"0.3.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.3.1.tgz\",",
                "+      \"integrity\": \"sha1-NJptRMU6Ud6JtAgFxdXlm0F9M0A=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"json-stringify-safe\": {",
                "+      \"version\": \"5.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz\",",
                "+      \"integrity\": \"sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"jsonfile\": {",
                "+      \"version\": \"2.4.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/jsonfile/-/jsonfile-2.4.0.tgz\",",
                "+      \"integrity\": \"sha1-NzaitCi4e72gzIO1P6PWM6NcKug=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"graceful-fs\": \"4.1.11\"",
                "+      }",
                "+    },",
                "+    \"jsonparse\": {",
                "+      \"version\": \"0.0.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/jsonparse/-/jsonparse-0.0.5.tgz\",",
                "+      \"integrity\": \"sha1-MwVCrT8KZUZlt3jz6y2an6UHrGQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"jsonpointer\": {",
                "+      \"version\": \"4.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/jsonpointer/-/jsonpointer-4.0.1.tgz\",",
                "+      \"integrity\": \"sha1-T9kss04OnbPInIYi7PUfm5eMbLk=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"jsonstream2\": {",
                "+      \"version\": \"1.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/jsonstream2/-/jsonstream2-1.1.1.tgz\",",
                "+      \"integrity\": \"sha1-vnDtBy0HkiyQbpbBAOI6I5dG19k=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"jsonparse\": \"0.0.6\",",
                "+        \"through2\": \"0.6.5\",",
                "+        \"type-component\": \"0.0.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"isarray\": {",
                "+          \"version\": \"0.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",",
                "+          \"integrity\": \"sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"jsonparse\": {",
                "+          \"version\": \"0.0.6\",",
                "+          \"resolved\": \"https://registry.npmjs.org/jsonparse/-/jsonparse-0.0.6.tgz\",",
                "+          \"integrity\": \"sha1-q1mfGTJNSuF4+iGpMBkqsRq2Gk4=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"readable-stream\": {",
                "+          \"version\": \"1.0.34\",",
                "+          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz\",",
                "+          \"integrity\": \"sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"core-util-is\": \"1.0.2\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"isarray\": \"0.0.1\",",
                "+            \"string_decoder\": \"0.10.31\"",
                "+          }",
                "+        },",
                "+        \"string_decoder\": {",
                "+          \"version\": \"0.10.31\",",
                "+          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "+          \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"through2\": {",
                "+          \"version\": \"0.6.5\",",
                "+          \"resolved\": \"https://registry.npmjs.org/through2/-/through2-0.6.5.tgz\",",
                "+          \"integrity\": \"sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"readable-stream\": \"1.0.34\",",
                "+            \"xtend\": \"4.0.1\"",
                "+          }",
                "+        },",
                "+        \"xtend\": {",
                "+          \"version\": \"4.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz\",",
                "+          \"integrity\": \"sha1-pcbVMr5lbiPbgg77lDofBJmNY68=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"jsprim\": {",
                "+      \"version\": \"1.4.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz\",",
                "+      \"integrity\": \"sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"assert-plus\": \"1.0.0\",",
                "+        \"extsprintf\": \"1.3.0\",",
                "+        \"json-schema\": \"0.2.3\",",
                "+        \"verror\": \"1.10.0\"",
                "+      }",
                "+    },",
                "+    \"kew\": {",
                "+      \"version\": \"0.7.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/kew/-/kew-0.7.0.tgz\",",
                "+      \"integrity\": \"sha1-edk9LTM2PW/dKXCzNdkUGtWR15s=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"kind-of\": {",
                "+      \"version\": \"3.2.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz\",",
                "+      \"integrity\": \"sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"is-buffer\": \"1.1.6\"",
                "+      }",
                "+    },",
                "+    \"klaw\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/klaw/-/klaw-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-WcEo4Nxc5BAgEVEZTuucv4WGUPY=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"graceful-fs\": \"4.1.11\"",
                "+      }",
                "+    },",
                "+    \"lazy-cache\": {",
                "+      \"version\": \"1.0.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/lazy-cache/-/lazy-cache-1.0.4.tgz\",",
                "+      \"integrity\": \"sha1-odePw6UEdMuAhF07O24dpJpEbo4=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true",
                "+    },",
                "+    \"levn\": {",
                "+      \"version\": \"0.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/levn/-/levn-0.3.0.tgz\",",
                "+      \"integrity\": \"sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"prelude-ls\": \"1.1.2\",",
                "+        \"type-check\": \"0.3.2\"",
                "+      }",
                "+    },",
                "+    \"lexical-scope\": {",
                "+      \"version\": \"1.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/lexical-scope/-/lexical-scope-1.1.1.tgz\",",
                "+      \"integrity\": \"sha1-3rrBBnQ18TWdkPz9npS8su5Hsr8=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"astw\": \"2.2.0\"",
                "+      }",
                "+    },",
                "+    \"lodash\": {",
                "+      \"version\": \"4.17.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.5.tgz\",",
                "+      \"integrity\": \"sha512-svL3uiZf1RwhH+cWrfZn3A4+U58wbP0tGVTLQPbjplZxZ8ROD9VLuNgsRniTlLe7OlSqR79RUehXgpBW/s0IQw==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"longest\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/longest/-/longest-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-MKCy2jj3N3DoKUoNIuZiXtd9AJc=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"lru-cache\": {",
                "+      \"version\": \"2.7.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-2.7.3.tgz\",",
                "+      \"integrity\": \"sha1-bUUk6LlV+V1PW1iFHOId1y+06VI=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"marked\": {",
                "+      \"version\": \"0.3.17\",",
                "+      \"resolved\": \"https://registry.npmjs.org/marked/-/marked-0.3.17.tgz\",",
                "+      \"integrity\": \"sha512-+AKbNsjZl6jFfLPwHhWmGTqE009wTKn3RTmn9K8oUKHrX/abPJjtcRtXpYB/FFrwPJRUA86LX/de3T0knkPCmQ==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"mime-db\": {",
                "+      \"version\": \"1.33.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.33.0.tgz\",",
                "+      \"integrity\": \"sha512-BHJ/EKruNIqJf/QahvxwQZXKygOQ256myeN/Ew+THcAa5q+PjyTTMMeNQC4DZw5AwfvelsUrA6B67NKMqXDbzQ==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"mime-types\": {",
                "+      \"version\": \"2.1.18\",",
                "+      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.18.tgz\",",
                "+      \"integrity\": \"sha512-lc/aahn+t4/SWV/qcmumYjymLsWfN3ELhpmVuUFjgsORruuZPVSwAQryq+HHGvO/SI2KVX26bx+En+zhM8g8hQ==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"mime-db\": \"1.33.0\"",
                "+      }",
                "+    },",
                "+    \"min-document\": {",
                "+      \"version\": \"2.19.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/min-document/-/min-document-2.19.0.tgz\",",
                "+      \"integrity\": \"sha1-e9KC4/WELtKVu3SM3Z8f+iyCRoU=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"dom-walk\": \"0.1.1\"",
                "+      }",
                "+    },",
                "+    \"minimatch\": {",
                "+      \"version\": \"3.0.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",",
                "+      \"integrity\": \"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"brace-expansion\": \"1.1.11\"",
                "+      }",
                "+    },",
                "+    \"minimist\": {",
                "+      \"version\": \"0.0.10\",",
                "+      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-0.0.10.tgz\",",
                "+      \"integrity\": \"sha1-3j+YVD2/lggr5IrRoMfNqDYwHc8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"mkdirp\": {",
                "+      \"version\": \"0.5.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz\",",
                "+      \"integrity\": \"sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"minimist\": \"0.0.8\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"minimist\": {",
                "+          \"version\": \"0.0.8\",",
                "+          \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz\",",
                "+          \"integrity\": \"sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"module-deps\": {",
                "+      \"version\": \"2.0.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/module-deps/-/module-deps-2.0.6.tgz\",",
                "+      \"integrity\": \"sha1-uZkyHHOsM1gPAHEsDzB1/cpCVj8=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"JSONStream\": \"0.7.4\",",
                "+        \"browser-resolve\": \"1.2.4\",",
                "+        \"concat-stream\": \"1.4.11\",",
                "+        \"detective\": \"3.1.0\",",
                "+        \"duplexer2\": \"0.0.2\",",
                "+        \"inherits\": \"2.0.3\",",
                "+        \"minimist\": \"0.0.10\",",
                "+        \"parents\": \"0.0.2\",",
                "+        \"readable-stream\": \"1.1.14\",",
                "+        \"resolve\": \"0.6.3\",",
                "+        \"stream-combiner\": \"0.1.0\",",
                "+        \"through2\": \"0.4.2\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"concat-stream\": {",
                "+          \"version\": \"1.4.11\",",
                "+          \"resolved\": \"https://registry.npmjs.org/concat-stream/-/concat-stream-1.4.11.tgz\",",
                "+          \"integrity\": \"sha512-X3JMh8+4je3U1cQpG87+f9lXHDrqcb2MVLg9L7o8b1UZ0DzhRrUpdn65ttzu10PpJPPI3MQNkis+oha6TSA9Mw==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"readable-stream\": \"1.1.14\",",
                "+            \"typedarray\": \"0.0.6\"",
                "+          }",
                "+        },",
                "+        \"isarray\": {",
                "+          \"version\": \"0.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",",
                "+          \"integrity\": \"sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"parents\": {",
                "+          \"version\": \"0.0.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/parents/-/parents-0.0.2.tgz\",",
                "+          \"integrity\": \"sha1-ZxR4JuSX1AdZqvW6TJllm2A00wI=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"readable-stream\": {",
                "+          \"version\": \"1.1.14\",",
                "+          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz\",",
                "+          \"integrity\": \"sha1-fPTFTvZI44EwhMY23SB54WbAgdk=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"core-util-is\": \"1.0.2\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"isarray\": \"0.0.1\",",
                "+            \"string_decoder\": \"0.10.31\"",
                "+          }",
                "+        },",
                "+        \"resolve\": {",
                "+          \"version\": \"0.6.3\",",
                "+          \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-0.6.3.tgz\",",
                "+          \"integrity\": \"sha1-3ZV5gufnNt699TtYpN2RdUV13UY=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"stream-combiner\": {",
                "+          \"version\": \"0.1.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/stream-combiner/-/stream-combiner-0.1.0.tgz\",",
                "+          \"integrity\": \"sha1-DcOJo8ID+PTVY2j5Xd5S65Jptb4=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"duplexer\": \"0.1.1\",",
                "+            \"through\": \"2.3.8\"",
                "+          }",
                "+        },",
                "+        \"string_decoder\": {",
                "+          \"version\": \"0.10.31\",",
                "+          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "+          \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"ms\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"nan\": {",
                "+      \"version\": \"2.8.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/nan/-/nan-2.8.0.tgz\",",
                "+      \"integrity\": \"sha1-7XFfP+neArV6XmJS2QqWZ14fCFo=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"node-abi\": {",
                "+      \"version\": \"2.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/node-abi/-/node-abi-2.3.0.tgz\",",
                "+      \"integrity\": \"sha512-zwm6vU3SsVgw3e9fu48JBaRBCJGIvAgysDsqtf5+vEexFE71bEOtaMWb5zr/zODZNzTPtQlqUUpC79k68Hspow==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"semver\": \"5.5.0\"",
                "+      }",
                "+    },",
                "+    \"node-int64\": {",
                "+      \"version\": \"0.4.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/node-int64/-/node-int64-0.4.0.tgz\",",
                "+      \"integrity\": \"sha1-h6kGXNs1XTGC2PlM4RGIuCXGijs=\"",
                "+    },",
                "+    \"noop-logger\": {",
                "+      \"version\": \"0.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/noop-logger/-/noop-logger-0.1.1.tgz\",",
                "+      \"integrity\": \"sha1-lKKxYzxPExdVMAfYlm/Q6EG2pMI=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"nopt\": {",
                "+      \"version\": \"3.0.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/nopt/-/nopt-3.0.6.tgz\",",
                "+      \"integrity\": \"sha1-xkZdvwirzU2zWTF/eaxopkayj/k=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"abbrev\": \"1.0.9\"",
                "+      }",
                "+    },",
                "+    \"npmlog\": {",
                "+      \"version\": \"4.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/npmlog/-/npmlog-4.1.2.tgz\",",
                "+      \"integrity\": \"sha512-2uUqazuKlTaSI/dC8AzicUck7+IrEaOnN/e0jd3Xtt1KcGpwx30v50mL7oPyr/h9bL3E4aZccVwpwP+5W9Vjkg==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"are-we-there-yet\": \"1.1.4\",",
                "+        \"console-control-strings\": \"1.1.0\",",
                "+        \"gauge\": \"2.7.4\",",
                "+        \"set-blocking\": \"2.0.0\"",
                "+      }",
                "+    },",
                "+    \"number-is-nan\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"oauth-sign\": {",
                "+      \"version\": \"0.8.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.8.2.tgz\",",
                "+      \"integrity\": \"sha1-Rqarfwrq2N6unsBWV4C31O/rnUM=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"object-assign\": {",
                "+      \"version\": \"4.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",",
                "+      \"integrity\": \"sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"object-inspect\": {",
                "+      \"version\": \"1.5.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.5.0.tgz\",",
                "+      \"integrity\": \"sha512-UmOFbHbwvv+XHj7BerrhVq+knjceBdkvU5AriwLMvhv2qi+e7DJzxfBeFpILEjVzCp+xA+W/pIf06RGPWlZNfw==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"object-keys\": {",
                "+      \"version\": \"0.4.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/object-keys/-/object-keys-0.4.0.tgz\",",
                "+      \"integrity\": \"sha1-KKaq50KN0sOpLz2V8hM13SBOAzY=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"on-finished\": {",
                "+      \"version\": \"2.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz\",",
                "+      \"integrity\": \"sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"ee-first\": \"1.1.1\"",
                "+      }",
                "+    },",
                "+    \"once\": {",
                "+      \"version\": \"1.4.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",",
                "+      \"integrity\": \"sha1-WDsap3WWHUsROsF9nFC6753Xa9E=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"wrappy\": \"1.0.2\"",
                "+      }",
                "+    },",
                "+    \"optimist\": {",
                "+      \"version\": \"0.6.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/optimist/-/optimist-0.6.1.tgz\",",
                "+      \"integrity\": \"sha1-2j6nRob6IaGaERwybpDrFaAZZoY=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"minimist\": \"0.0.10\",",
                "+        \"wordwrap\": \"0.0.3\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"wordwrap\": {",
                "+          \"version\": \"0.0.3\",",
                "+          \"resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz\",",
                "+          \"integrity\": \"sha1-o9XabNXAvAAI03I0u68b7WMFkQc=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"optionator\": {",
                "+      \"version\": \"0.8.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/optionator/-/optionator-0.8.2.tgz\",",
                "+      \"integrity\": \"sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"deep-is\": \"0.1.3\",",
                "+        \"fast-levenshtein\": \"2.0.6\",",
                "+        \"levn\": \"0.3.0\",",
                "+        \"prelude-ls\": \"1.1.2\",",
                "+        \"type-check\": \"0.3.2\",",
                "+        \"wordwrap\": \"1.0.0\"",
                "+      }",
                "+    },",
                "+    \"os-browserify\": {",
                "+      \"version\": \"0.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/os-browserify/-/os-browserify-0.1.2.tgz\",",
                "+      \"integrity\": \"sha1-ScoCk+CxlZCl9d4Qx/JlphfY/lQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"os-homedir\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-/7xJiDNuDoM94MFox+8VISGqf7M=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"pako\": {",
                "+      \"version\": \"0.2.9\",",
                "+      \"resolved\": \"https://registry.npmjs.org/pako/-/pako-0.2.9.tgz\",",
                "+      \"integrity\": \"sha1-8/dSL073gjSNqBYbrZ7P1Rv4OnU=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"parents\": {",
                "+      \"version\": \"0.0.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/parents/-/parents-0.0.3.tgz\",",
                "+      \"integrity\": \"sha1-+iEvAk2fpjGNu2tM5nbIvkk7nEM=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"path-platform\": \"0.0.1\"",
                "+      }",
                "+    },",
                "+    \"parse-headers\": {",
                "+      \"version\": \"2.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/parse-headers/-/parse-headers-2.0.1.tgz\",",
                "+      \"integrity\": \"sha1-aug6eqJanZtwCswoaYzR8e1+lTY=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"for-each\": \"0.3.2\",",
                "+        \"trim\": \"0.0.1\"",
                "+      }",
                "+    },",
                "+    \"parseurl\": {",
                "+      \"version\": \"1.3.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.2.tgz\",",
                "+      \"integrity\": \"sha1-/CidTtiZMRlGDBViUyYs3I3mW/M=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"path-browserify\": {",
                "+      \"version\": \"0.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/path-browserify/-/path-browserify-0.0.0.tgz\",",
                "+      \"integrity\": \"sha1-oLhwcpquIUAFt9UDLsLLuw+0RRo=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"path-is-absolute\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"path-parse\": {",
                "+      \"version\": \"1.0.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.5.tgz\",",
                "+      \"integrity\": \"sha1-PBrfhx6pzWyUMbbqK9dKD/BVxME=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"path-platform\": {",
                "+      \"version\": \"0.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/path-platform/-/path-platform-0.0.1.tgz\",",
                "+      \"integrity\": \"sha1-tVhdfDxGPYmqAGDYZhHPGv1hfio=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"pend\": {",
                "+      \"version\": \"1.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/pend/-/pend-1.2.0.tgz\",",
                "+      \"integrity\": \"sha1-elfrVQpng/kRUzH89GY9XI4AelA=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"performance-now\": {",
                "+      \"version\": \"2.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz\",",
                "+      \"integrity\": \"sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"phantomjs-prebuilt\": {",
                "+      \"version\": \"2.1.16\",",
                "+      \"resolved\": \"https://registry.npmjs.org/phantomjs-prebuilt/-/phantomjs-prebuilt-2.1.16.tgz\",",
                "+      \"integrity\": \"sha1-79ISpKOWbTZHaE6ouniFSb4q7+8=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"es6-promise\": \"4.2.4\",",
                "+        \"extract-zip\": \"1.6.6\",",
                "+        \"fs-extra\": \"1.0.0\",",
                "+        \"hasha\": \"2.2.0\",",
                "+        \"kew\": \"0.7.0\",",
                "+        \"progress\": \"1.1.8\",",
                "+        \"request\": \"2.83.0\",",
                "+        \"request-progress\": \"2.0.1\",",
                "+        \"which\": \"1.3.0\"",
                "+      }",
                "+    },",
                "+    \"pinkie\": {",
                "+      \"version\": \"2.0.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz\",",
                "+      \"integrity\": \"sha1-clVrgM+g1IqXToDnckjoDtT3+HA=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"pinkie-promise\": {",
                "+      \"version\": \"2.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz\",",
                "+      \"integrity\": \"sha1-ITXW36ejWMBprJsXh3YogihFD/o=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"pinkie\": \"2.0.4\"",
                "+      }",
                "+    },",
                "+    \"prebuild-install\": {",
                "+      \"version\": \"2.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/prebuild-install/-/prebuild-install-2.3.0.tgz\",",
                "+      \"integrity\": \"sha512-gzjq2oHB8oMbzJSsSh9MQ64zrXZGt092/uT4TLZlz2qnrPxpWqp4vYB7LZrDxnlxf5RfbCjkgDI/z0EIVuYzAw==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"expand-template\": \"1.1.0\",",
                "+        \"github-from-package\": \"0.0.0\",",
                "+        \"minimist\": \"1.2.0\",",
                "+        \"mkdirp\": \"0.5.1\",",
                "+        \"node-abi\": \"2.3.0\",",
                "+        \"noop-logger\": \"0.1.1\",",
                "+        \"npmlog\": \"4.1.2\",",
                "+        \"os-homedir\": \"1.0.2\",",
                "+        \"pump\": \"1.0.3\",",
                "+        \"rc\": \"1.2.5\",",
                "+        \"simple-get\": \"1.4.3\",",
                "+        \"tar-fs\": \"1.16.0\",",
                "+        \"tunnel-agent\": \"0.6.0\",",
                "+        \"xtend\": \"4.0.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"minimist\": {",
                "+          \"version\": \"1.2.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz\",",
                "+          \"integrity\": \"sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"xtend\": {",
                "+          \"version\": \"4.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz\",",
                "+          \"integrity\": \"sha1-pcbVMr5lbiPbgg77lDofBJmNY68=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"prelude-ls\": {",
                "+      \"version\": \"1.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz\",",
                "+      \"integrity\": \"sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"process\": {",
                "+      \"version\": \"0.9.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/process/-/process-0.9.0.tgz\",",
                "+      \"integrity\": \"sha1-R9amrPUbh5QowyaWCJksfFp5C+Q=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"process-nextick-args\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.0.tgz\",",
                "+      \"integrity\": \"sha512-MtEC1TqN0EU5nephaJ4rAtThHtC86dNN9qCuEhtshvpVBkAW5ZO7BASN9REnF9eoXGcRub+pFuKEpOHE+HbEMw==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"progress\": {",
                "+      \"version\": \"1.1.8\",",
                "+      \"resolved\": \"https://registry.npmjs.org/progress/-/progress-1.1.8.tgz\",",
                "+      \"integrity\": \"sha1-4mDHj2Fhzdmw5WzD4Khd4Xx6V74=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"pump\": {",
                "+      \"version\": \"1.0.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/pump/-/pump-1.0.3.tgz\",",
                "+      \"integrity\": \"sha512-8k0JupWme55+9tCVE+FS5ULT3K6AbgqrGa58lTT49RpyfwwcGedHqaC5LlQNdEAumn/wFsu6aPwkuPMioy8kqw==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"end-of-stream\": \"1.4.1\",",
                "+        \"once\": \"1.4.0\"",
                "+      }",
                "+    },",
                "+    \"punycode\": {",
                "+      \"version\": \"1.4.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz\",",
                "+      \"integrity\": \"sha1-wNWmOycYgArY4esPpSachN1BhF4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"q\": {",
                "+      \"version\": \"1.5.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/q/-/q-1.5.1.tgz\",",
                "+      \"integrity\": \"sha1-fjL3W0E4EpHQRhHxvxQQmsAGUdc=\"",
                "+    },",
                "+    \"qs\": {",
                "+      \"version\": \"6.5.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.5.1.tgz\",",
                "+      \"integrity\": \"sha512-eRzhrN1WSINYCDCbrz796z37LOe3m5tmW7RQf6oBntukAG1nmovJvhnwHHRMAfeoItc1m2Hk02WER2aQ/iqs+A==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"querystring\": {",
                "+      \"version\": \"0.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz\",",
                "+      \"integrity\": \"sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"querystring-es3\": {",
                "+      \"version\": \"0.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/querystring-es3/-/querystring-es3-0.2.0.tgz\",",
                "+      \"integrity\": \"sha1-w2WgimnEQ6zP6zqd6rNePwq6pHY=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"rc\": {",
                "+      \"version\": \"1.2.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/rc/-/rc-1.2.5.tgz\",",
                "+      \"integrity\": \"sha1-J1zWh/bjs2zHVrqibf7oCnkDAf0=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"deep-extend\": \"0.4.2\",",
                "+        \"ini\": \"1.3.5\",",
                "+        \"minimist\": \"1.2.0\",",
                "+        \"strip-json-comments\": \"2.0.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"minimist\": {",
                "+          \"version\": \"1.2.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz\",",
                "+          \"integrity\": \"sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"readable-stream\": {",
                "+      \"version\": \"2.3.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.5.tgz\",",
                "+      \"integrity\": \"sha512-tK0yDhrkygt/knjowCUiWP9YdV7c5R+8cR0r/kt9ZhBU906Fs6RpQJCEilamRJj1Nx2rWI6LkW9gKqjTkshhEw==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"core-util-is\": \"1.0.2\",",
                "+        \"inherits\": \"2.0.3\",",
                "+        \"isarray\": \"1.0.0\",",
                "+        \"process-nextick-args\": \"2.0.0\",",
                "+        \"safe-buffer\": \"5.1.1\",",
                "+        \"string_decoder\": \"1.0.3\",",
                "+        \"util-deprecate\": \"1.0.2\"",
                "+      }",
                "+    },",
                "+    \"repeat-string\": {",
                "+      \"version\": \"1.6.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz\",",
                "+      \"integrity\": \"sha1-jcrkcOHIirwtYA//Sndihtp15jc=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"request\": {",
                "+      \"version\": \"2.83.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/request/-/request-2.83.0.tgz\",",
                "+      \"integrity\": \"sha512-lR3gD69osqm6EYLk9wB/G1W/laGWjzH90t1vEa2xuxHD5KUrSzp9pUSfTm+YC5Nxt2T8nMPEvKlhbQayU7bgFw==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"aws-sign2\": \"0.7.0\",",
                "+        \"aws4\": \"1.6.0\",",
                "+        \"caseless\": \"0.12.0\",",
                "+        \"combined-stream\": \"1.0.6\",",
                "+        \"extend\": \"3.0.1\",",
                "+        \"forever-agent\": \"0.6.1\",",
                "+        \"form-data\": \"2.3.2\",",
                "+        \"har-validator\": \"5.0.3\",",
                "+        \"hawk\": \"6.0.2\",",
                "+        \"http-signature\": \"1.2.0\",",
                "+        \"is-typedarray\": \"1.0.0\",",
                "+        \"isstream\": \"0.1.2\",",
                "+        \"json-stringify-safe\": \"5.0.1\",",
                "+        \"mime-types\": \"2.1.18\",",
                "+        \"oauth-sign\": \"0.8.2\",",
                "+        \"performance-now\": \"2.1.0\",",
                "+        \"qs\": \"6.5.1\",",
                "+        \"safe-buffer\": \"5.1.1\",",
                "+        \"stringstream\": \"0.0.5\",",
                "+        \"tough-cookie\": \"2.3.4\",",
                "+        \"tunnel-agent\": \"0.6.0\",",
                "+        \"uuid\": \"3.2.1\"",
                "+      }",
                "+    },",
                "+    \"request-progress\": {",
                "+      \"version\": \"2.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/request-progress/-/request-progress-2.0.1.tgz\",",
                "+      \"integrity\": \"sha1-XTa7V5YcZzqlt4jbyBQf3yO0Tgg=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"throttleit\": \"1.0.0\"",
                "+      }",
                "+    },",
                "+    \"requizzle\": {",
                "+      \"version\": \"0.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/requizzle/-/requizzle-0.2.1.tgz\",",
                "+      \"integrity\": \"sha1-aUPDUwxNmn5G8c3dUcFY/GcM294=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"underscore\": \"1.6.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"underscore\": {",
                "+          \"version\": \"1.6.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/underscore/-/underscore-1.6.0.tgz\",",
                "+          \"integrity\": \"sha1-izixDKze9jM3uLJOT/htRa6lKag=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"resolve\": {",
                "+      \"version\": \"1.1.7\",",
                "+      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.1.7.tgz\",",
                "+      \"integrity\": \"sha1-IDEU2CrSxe2ejgQRs5ModeiJ6Xs=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"resumer\": {",
                "+      \"version\": \"0.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/resumer/-/resumer-0.0.0.tgz\",",
                "+      \"integrity\": \"sha1-8ej0YeQGS6Oegq883CqMiT0HZ1k=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"through\": \"2.3.8\"",
                "+      }",
                "+    },",
                "+    \"rfile\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/rfile/-/rfile-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-WXCM+Qyh50xUw8/Fw2/bmBBDUmE=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"callsite\": \"1.0.0\",",
                "+        \"resolve\": \"0.3.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"resolve\": {",
                "+          \"version\": \"0.3.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-0.3.1.tgz\",",
                "+          \"integrity\": \"sha1-NMY0R8ZkxwWY0cmxJvxDsqJDEKQ=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"right-align\": {",
                "+      \"version\": \"0.1.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/right-align/-/right-align-0.1.3.tgz\",",
                "+      \"integrity\": \"sha1-YTObci/mo1FWiSENJOFMlhSGE+8=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true,",
                "+      \"requires\": {",
                "+        \"align-text\": \"0.1.4\"",
                "+      }",
                "+    },",
                "+    \"rimraf\": {",
                "+      \"version\": \"2.6.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.6.2.tgz\",",
                "+      \"integrity\": \"sha512-lreewLK/BlghmxtfH36YYVg1i8IAce4TI7oao75I1g245+6BctqTVQiBP3YUJ9C6DQOXJmkYR9X9fCLtCOJc5w==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"glob\": \"7.1.2\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"glob\": {",
                "+          \"version\": \"7.1.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.2.tgz\",",
                "+          \"integrity\": \"sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"fs.realpath\": \"1.0.0\",",
                "+            \"inflight\": \"1.0.6\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"minimatch\": \"3.0.4\",",
                "+            \"once\": \"1.4.0\",",
                "+            \"path-is-absolute\": \"1.0.1\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"ruglify\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ruglify/-/ruglify-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-3Ikw4qlUSidDAcyZcldMDQmGtnU=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"rfile\": \"1.0.0\",",
                "+        \"uglify-js\": \"2.2.5\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"optimist\": {",
                "+          \"version\": \"0.3.7\",",
                "+          \"resolved\": \"https://registry.npmjs.org/optimist/-/optimist-0.3.7.tgz\",",
                "+          \"integrity\": \"sha1-yQlBrVnkJzMokjB00s8ufLxuwNk=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"wordwrap\": \"0.0.3\"",
                "+          }",
                "+        },",
                "+        \"source-map\": {",
                "+          \"version\": \"0.1.43\",",
                "+          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.1.43.tgz\",",
                "+          \"integrity\": \"sha1-wkvBRspRfBRx9drL4lcbK3+eM0Y=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"amdefine\": \"1.0.1\"",
                "+          }",
                "+        },",
                "+        \"uglify-js\": {",
                "+          \"version\": \"2.2.5\",",
                "+          \"resolved\": \"https://registry.npmjs.org/uglify-js/-/uglify-js-2.2.5.tgz\",",
                "+          \"integrity\": \"sha1-puAqcNg5eSuXgEiLe4sYTAlcmcc=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"optimist\": \"0.3.7\",",
                "+            \"source-map\": \"0.1.43\"",
                "+          }",
                "+        },",
                "+        \"wordwrap\": {",
                "+          \"version\": \"0.0.3\",",
                "+          \"resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz\",",
                "+          \"integrity\": \"sha1-o9XabNXAvAAI03I0u68b7WMFkQc=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"run-browser\": {",
                "+      \"version\": \"2.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/run-browser/-/run-browser-2.0.2.tgz\",",
                "+      \"integrity\": \"sha1-rPVJatoZTaKKLEFldpnmkUobyh0=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"browserify\": \"3.46.1\",",
                "+        \"browserify-istanbul\": \"0.1.5\",",
                "+        \"function-bind\": \"1.1.1\",",
                "+        \"glob\": \"3.2.11\",",
                "+        \"global\": \"4.3.2\",",
                "+        \"istanbul\": \"0.3.22\",",
                "+        \"jsonstream2\": \"1.1.1\",",
                "+        \"minimist\": \"0.0.8\",",
                "+        \"phantomjs\": \"1.9.20\",",
                "+        \"process\": \"0.9.0\",",
                "+        \"tap-finished\": \"0.0.1\",",
                "+        \"through2-spy\": \"1.2.0\",",
                "+        \"xhr\": \"1.17.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"assert-plus\": {",
                "+          \"version\": \"0.2.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-0.2.0.tgz\",",
                "+          \"integrity\": \"sha1-104bh+ev/A24qttwIfP+SBAasjQ=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"aws-sign2\": {",
                "+          \"version\": \"0.6.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.6.0.tgz\",",
                "+          \"integrity\": \"sha1-FDQt0428yU0OW4fXY81jYSwOeU8=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"boom\": {",
                "+          \"version\": \"2.10.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/boom/-/boom-2.10.1.tgz\",",
                "+          \"integrity\": \"sha1-OciRjO/1eZ+D+UkqhI9iWt0Mdm8=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"hoek\": \"2.16.3\"",
                "+          }",
                "+        },",
                "+        \"caseless\": {",
                "+          \"version\": \"0.11.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/caseless/-/caseless-0.11.0.tgz\",",
                "+          \"integrity\": \"sha1-cVuW6phBWTzDMGeSP17GDr2k99c=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"concat-stream\": {",
                "+          \"version\": \"1.5.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/concat-stream/-/concat-stream-1.5.0.tgz\",",
                "+          \"integrity\": \"sha1-U/fUPFHF5D+ByP3QMyHGMb5o1hE=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"readable-stream\": \"2.0.6\",",
                "+            \"typedarray\": \"0.0.6\"",
                "+          }",
                "+        },",
                "+        \"cryptiles\": {",
                "+          \"version\": \"2.0.5\",",
                "+          \"resolved\": \"https://registry.npmjs.org/cryptiles/-/cryptiles-2.0.5.tgz\",",
                "+          \"integrity\": \"sha1-O9/s3GCBR8HGcgL6KR59ylnqo7g=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"boom\": \"2.10.1\"",
                "+          }",
                "+        },",
                "+        \"debug\": {",
                "+          \"version\": \"0.7.4\",",
                "+          \"resolved\": \"https://registry.npmjs.org/debug/-/debug-0.7.4.tgz\",",
                "+          \"integrity\": \"sha1-BuHqgILCyxTjmAbiLi9vdX+Srzk=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"escodegen\": {",
                "+          \"version\": \"1.7.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/escodegen/-/escodegen-1.7.1.tgz\",",
                "+          \"integrity\": \"sha1-MOz89mypjcZ80v0WKr626vqM5vw=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"esprima\": \"1.2.5\",",
                "+            \"estraverse\": \"1.9.3\",",
                "+            \"esutils\": \"2.0.2\",",
                "+            \"optionator\": \"0.5.0\",",
                "+            \"source-map\": \"0.2.0\"",
                "+          },",
                "+          \"dependencies\": {",
                "+            \"esprima\": {",
                "+              \"version\": \"1.2.5\",",
                "+              \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-1.2.5.tgz\",",
                "+              \"integrity\": \"sha1-CZNQL+r2aBODJXVvMPmlH+7sEek=\",",
                "+              \"dev\": true",
                "+            }",
                "+          }",
                "+        },",
                "+        \"esprima\": {",
                "+          \"version\": \"2.5.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-2.5.0.tgz\",",
                "+          \"integrity\": \"sha1-84ekb9NEwbGjm6+MIL+0O20AWMw=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"extract-zip\": {",
                "+          \"version\": \"1.5.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-1.5.0.tgz\",",
                "+          \"integrity\": \"sha1-ksz22B73Cp+kwXRxFMzvbYaIpsQ=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"concat-stream\": \"1.5.0\",",
                "+            \"debug\": \"0.7.4\",",
                "+            \"mkdirp\": \"0.5.0\",",
                "+            \"yauzl\": \"2.4.1\"",
                "+          },",
                "+          \"dependencies\": {",
                "+            \"mkdirp\": {",
                "+              \"version\": \"0.5.0\",",
                "+              \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.0.tgz\",",
                "+              \"integrity\": \"sha1-HXMHam35hs2TROFecfzAWkyavxI=\",",
                "+              \"dev\": true,",
                "+              \"requires\": {",
                "+                \"minimist\": \"0.0.8\"",
                "+              }",
                "+            }",
                "+          }",
                "+        },",
                "+        \"fast-levenshtein\": {",
                "+          \"version\": \"1.0.7\",",
                "+          \"resolved\": \"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-1.0.7.tgz\",",
                "+          \"integrity\": \"sha1-AXjc3uAjuSkFGTrwlZ6KdjnP3Lk=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"fileset\": {",
                "+          \"version\": \"0.2.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/fileset/-/fileset-0.2.1.tgz\",",
                "+          \"integrity\": \"sha1-WI74lzxmI7KnbfRlEFaWuWqsgGc=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"glob\": \"5.0.15\",",
                "+            \"minimatch\": \"2.0.10\"",
                "+          },",
                "+          \"dependencies\": {",
                "+            \"glob\": {",
                "+              \"version\": \"5.0.15\",",
                "+              \"resolved\": \"https://registry.npmjs.org/glob/-/glob-5.0.15.tgz\",",
                "+              \"integrity\": \"sha1-G8k2ueAvSmA/zCIuz3Yz0wuLk7E=\",",
                "+              \"dev\": true,",
                "+              \"requires\": {",
                "+                \"inflight\": \"1.0.6\",",
                "+                \"inherits\": \"2.0.3\",",
                "+                \"minimatch\": \"2.0.10\",",
                "+                \"once\": \"1.4.0\",",
                "+                \"path-is-absolute\": \"1.0.1\"",
                "+              }",
                "+            },",
                "+            \"minimatch\": {",
                "+              \"version\": \"2.0.10\",",
                "+              \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-2.0.10.tgz\",",
                "+              \"integrity\": \"sha1-jQh8OcazjAAbl/ynzm0OHoCvusc=\",",
                "+              \"dev\": true,",
                "+              \"requires\": {",
                "+                \"brace-expansion\": \"1.1.11\"",
                "+              }",
                "+            }",
                "+          }",
                "+        },",
                "+        \"form-data\": {",
                "+          \"version\": \"1.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-1.0.1.tgz\",",
                "+          \"integrity\": \"sha1-rjFduaSQf6BlUCMEpm13M0de43w=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"async\": \"2.6.0\",",
                "+            \"combined-stream\": \"1.0.6\",",
                "+            \"mime-types\": \"2.1.18\"",
                "+          },",
                "+          \"dependencies\": {",
                "+            \"async\": {",
                "+              \"version\": \"2.6.0\",",
                "+              \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.0.tgz\",",
                "+              \"integrity\": \"sha512-xAfGg1/NTLBBKlHFmnd7PlmUW9KhVQIUuSrYem9xzFUZy13ScvtyGGejaae9iAVRiRq9+Cx7DPFaAAhCpyxyPw==\",",
                "+              \"dev\": true,",
                "+              \"requires\": {",
                "+                \"lodash\": \"4.17.5\"",
                "+              }",
                "+            }",
                "+          }",
                "+        },",
                "+        \"fs-extra\": {",
                "+          \"version\": \"0.26.7\",",
                "+          \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-0.26.7.tgz\",",
                "+          \"integrity\": \"sha1-muH92UiXeY7at20JGM9C0MMYT6k=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"graceful-fs\": \"4.1.11\",",
                "+            \"jsonfile\": \"2.4.0\",",
                "+            \"klaw\": \"1.3.1\",",
                "+            \"path-is-absolute\": \"1.0.1\",",
                "+            \"rimraf\": \"2.6.2\"",
                "+          }",
                "+        },",
                "+        \"glob\": {",
                "+          \"version\": \"3.2.11\",",
                "+          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-3.2.11.tgz\",",
                "+          \"integrity\": \"sha1-Spc/Y1uRkPcV0QmH1cAP0oFevj0=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"minimatch\": \"0.3.0\"",
                "+          }",
                "+        },",
                "+        \"har-validator\": {",
                "+          \"version\": \"2.0.6\",",
                "+          \"resolved\": \"https://registry.npmjs.org/har-validator/-/har-validator-2.0.6.tgz\",",
                "+          \"integrity\": \"sha1-zcvAgYgmWtEZtqWnyKtw7s+10n0=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"chalk\": \"1.1.3\",",
                "+            \"commander\": \"2.14.1\",",
                "+            \"is-my-json-valid\": \"2.17.2\",",
                "+            \"pinkie-promise\": \"2.0.1\"",
                "+          }",
                "+        },",
                "+        \"hawk\": {",
                "+          \"version\": \"3.1.3\",",
                "+          \"resolved\": \"https://registry.npmjs.org/hawk/-/hawk-3.1.3.tgz\",",
                "+          \"integrity\": \"sha1-B4REvXwWQLD+VA0sm3PVlnjo4cQ=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"boom\": \"2.10.1\",",
                "+            \"cryptiles\": \"2.0.5\",",
                "+            \"hoek\": \"2.16.3\",",
                "+            \"sntp\": \"1.0.9\"",
                "+          }",
                "+        },",
                "+        \"hoek\": {",
                "+          \"version\": \"2.16.3\",",
                "+          \"resolved\": \"https://registry.npmjs.org/hoek/-/hoek-2.16.3.tgz\",",
                "+          \"integrity\": \"sha1-ILt0A9POo5jpHcRxCo/xuCdKJe0=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"http-signature\": {",
                "+          \"version\": \"1.1.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/http-signature/-/http-signature-1.1.1.tgz\",",
                "+          \"integrity\": \"sha1-33LiZwZs0Kxn+3at+OE0qPvPkb8=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"assert-plus\": \"0.2.0\",",
                "+            \"jsprim\": \"1.4.1\",",
                "+            \"sshpk\": \"1.13.1\"",
                "+          }",
                "+        },",
                "+        \"istanbul\": {",
                "+          \"version\": \"0.3.22\",",
                "+          \"resolved\": \"https://registry.npmjs.org/istanbul/-/istanbul-0.3.22.tgz\",",
                "+          \"integrity\": \"sha1-PhZNhQIf4ZyYXR8OfvDD4i0BLrY=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"abbrev\": \"1.0.9\",",
                "+            \"async\": \"1.5.2\",",
                "+            \"escodegen\": \"1.7.1\",",
                "+            \"esprima\": \"2.5.0\",",
                "+            \"fileset\": \"0.2.1\",",
                "+            \"handlebars\": \"4.0.11\",",
                "+            \"js-yaml\": \"3.11.0\",",
                "+            \"mkdirp\": \"0.5.1\",",
                "+            \"nopt\": \"3.0.6\",",
                "+            \"once\": \"1.4.0\",",
                "+            \"resolve\": \"1.1.7\",",
                "+            \"supports-color\": \"3.2.3\",",
                "+            \"which\": \"1.3.0\",",
                "+            \"wordwrap\": \"1.0.0\"",
                "+          }",
                "+        },",
                "+        \"klaw\": {",
                "+          \"version\": \"1.3.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/klaw/-/klaw-1.3.1.tgz\",",
                "+          \"integrity\": \"sha1-QIhDO0azsbolnXh4XY6W9zugJDk=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"graceful-fs\": \"4.1.11\"",
                "+          }",
                "+        },",
                "+        \"levn\": {",
                "+          \"version\": \"0.2.5\",",
                "+          \"resolved\": \"https://registry.npmjs.org/levn/-/levn-0.2.5.tgz\",",
                "+          \"integrity\": \"sha1-uo0znQykphDjo/FFucr0iAcVUFQ=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"prelude-ls\": \"1.1.2\",",
                "+            \"type-check\": \"0.3.2\"",
                "+          }",
                "+        },",
                "+        \"minimatch\": {",
                "+          \"version\": \"0.3.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-0.3.0.tgz\",",
                "+          \"integrity\": \"sha1-J12O2qxPG7MyZHIInnlJyDlGmd0=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"lru-cache\": \"2.7.3\",",
                "+            \"sigmund\": \"1.0.1\"",
                "+          }",
                "+        },",
                "+        \"minimist\": {",
                "+          \"version\": \"0.0.8\",",
                "+          \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz\",",
                "+          \"integrity\": \"sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"node-uuid\": {",
                "+          \"version\": \"1.4.8\",",
                "+          \"resolved\": \"https://registry.npmjs.org/node-uuid/-/node-uuid-1.4.8.tgz\",",
                "+          \"integrity\": \"sha1-sEDrCSOWivq/jTL7HxfxFn/auQc=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"optionator\": {",
                "+          \"version\": \"0.5.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/optionator/-/optionator-0.5.0.tgz\",",
                "+          \"integrity\": \"sha1-t1qJlaLUF98ltuTjhi9QqohlE2g=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"deep-is\": \"0.1.3\",",
                "+            \"fast-levenshtein\": \"1.0.7\",",
                "+            \"levn\": \"0.2.5\",",
                "+            \"prelude-ls\": \"1.1.2\",",
                "+            \"type-check\": \"0.3.2\",",
                "+            \"wordwrap\": \"0.0.3\"",
                "+          },",
                "+          \"dependencies\": {",
                "+            \"wordwrap\": {",
                "+              \"version\": \"0.0.3\",",
                "+              \"resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz\",",
                "+              \"integrity\": \"sha1-o9XabNXAvAAI03I0u68b7WMFkQc=\",",
                "+              \"dev\": true",
                "+            }",
                "+          }",
                "+        },",
                "+        \"phantomjs\": {",
                "+          \"version\": \"1.9.20\",",
                "+          \"resolved\": \"https://registry.npmjs.org/phantomjs/-/phantomjs-1.9.20.tgz\",",
                "+          \"integrity\": \"sha1-RCSsog4U0lXAsIia9va4lz2hDg0=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"extract-zip\": \"1.5.0\",",
                "+            \"fs-extra\": \"0.26.7\",",
                "+            \"hasha\": \"2.2.0\",",
                "+            \"kew\": \"0.7.0\",",
                "+            \"progress\": \"1.1.8\",",
                "+            \"request\": \"2.67.0\",",
                "+            \"request-progress\": \"2.0.1\",",
                "+            \"which\": \"1.2.14\"",
                "+          },",
                "+          \"dependencies\": {",
                "+            \"which\": {",
                "+              \"version\": \"1.2.14\",",
                "+              \"resolved\": \"https://registry.npmjs.org/which/-/which-1.2.14.tgz\",",
                "+              \"integrity\": \"sha1-mofEN48D6CfOyvGs31bHNsAcFOU=\",",
                "+              \"dev\": true,",
                "+              \"requires\": {",
                "+                \"isexe\": \"2.0.0\"",
                "+              }",
                "+            }",
                "+          }",
                "+        },",
                "+        \"process-nextick-args\": {",
                "+          \"version\": \"1.0.7\",",
                "+          \"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-1.0.7.tgz\",",
                "+          \"integrity\": \"sha1-FQ4gt1ZZCtP5EJPyWk8q2L/zC6M=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"qs\": {",
                "+          \"version\": \"5.2.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/qs/-/qs-5.2.1.tgz\",",
                "+          \"integrity\": \"sha1-gB/uAw4LlFDWOFrcSKTMVbRK7fw=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"readable-stream\": {",
                "+          \"version\": \"2.0.6\",",
                "+          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.0.6.tgz\",",
                "+          \"integrity\": \"sha1-j5A0HmilPMySh4jaz80Rs265t44=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"core-util-is\": \"1.0.2\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"isarray\": \"1.0.0\",",
                "+            \"process-nextick-args\": \"1.0.7\",",
                "+            \"string_decoder\": \"0.10.31\",",
                "+            \"util-deprecate\": \"1.0.2\"",
                "+          }",
                "+        },",
                "+        \"request\": {",
                "+          \"version\": \"2.67.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/request/-/request-2.67.0.tgz\",",
                "+          \"integrity\": \"sha1-ivdHgOK/EeoK6aqWXBHxGv0nJ0I=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"aws-sign2\": \"0.6.0\",",
                "+            \"bl\": \"1.0.3\",",
                "+            \"caseless\": \"0.11.0\",",
                "+            \"combined-stream\": \"1.0.6\",",
                "+            \"extend\": \"3.0.1\",",
                "+            \"forever-agent\": \"0.6.1\",",
                "+            \"form-data\": \"1.0.1\",",
                "+            \"har-validator\": \"2.0.6\",",
                "+            \"hawk\": \"3.1.3\",",
                "+            \"http-signature\": \"1.1.1\",",
                "+            \"is-typedarray\": \"1.0.0\",",
                "+            \"isstream\": \"0.1.2\",",
                "+            \"json-stringify-safe\": \"5.0.1\",",
                "+            \"mime-types\": \"2.1.18\",",
                "+            \"node-uuid\": \"1.4.8\",",
                "+            \"oauth-sign\": \"0.8.2\",",
                "+            \"qs\": \"5.2.1\",",
                "+            \"stringstream\": \"0.0.5\",",
                "+            \"tough-cookie\": \"2.2.2\",",
                "+            \"tunnel-agent\": \"0.4.3\"",
                "+          }",
                "+        },",
                "+        \"sntp\": {",
                "+          \"version\": \"1.0.9\",",
                "+          \"resolved\": \"https://registry.npmjs.org/sntp/-/sntp-1.0.9.tgz\",",
                "+          \"integrity\": \"sha1-ZUEYTMkK7qbG57NeJlkIJEPGYZg=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"hoek\": \"2.16.3\"",
                "+          }",
                "+        },",
                "+        \"string_decoder\": {",
                "+          \"version\": \"0.10.31\",",
                "+          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "+          \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"tough-cookie\": {",
                "+          \"version\": \"2.2.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.2.2.tgz\",",
                "+          \"integrity\": \"sha1-yDoYMPTl7wuT7yo0iOck+N4Basc=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"tunnel-agent\": {",
                "+          \"version\": \"0.4.3\",",
                "+          \"resolved\": \"https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.4.3.tgz\",",
                "+          \"integrity\": \"sha1-Y3PbdpCf5XDgjXNYM2Xtgop07us=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"safe-buffer\": {",
                "+      \"version\": \"5.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.1.tgz\",",
                "+      \"integrity\": \"sha512-kKvNJn6Mm93gAczWVJg7wH+wGYWNrDHdWvpUmHyEsgCtIwwo3bqPtV4tR5tuPaUhTOo/kvhVwd8XwwOllGYkbg==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"semver\": {",
                "+      \"version\": \"5.5.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.5.0.tgz\",",
                "+      \"integrity\": \"sha512-4SJ3dm0WAwWy/NVeioZh5AntkdJoWKxHxcmyP622fOkgHa4z3R0TdBJICINyaSDE6uNwVc8gZr+ZinwZAH4xIA==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"set-blocking\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-BF+XgtARrppoA93TgrJDkrPYkPc=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"shallow-copy\": {",
                "+      \"version\": \"0.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/shallow-copy/-/shallow-copy-0.0.1.tgz\",",
                "+      \"integrity\": \"sha1-QV9CcC1z2BAzApLMXuhurhoRoXA=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"shell-quote\": {",
                "+      \"version\": \"0.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/shell-quote/-/shell-quote-0.0.1.tgz\",",
                "+      \"integrity\": \"sha1-GkEZbzwDM8SCMjWT1ohuzxU92YY=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"sigmund\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/sigmund/-/sigmund-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-P/IfGYytIXX587eBhT/ZTQ0ZtZA=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"signal-exit\": {",
                "+      \"version\": \"3.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz\",",
                "+      \"integrity\": \"sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"simple-get\": {",
                "+      \"version\": \"1.4.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/simple-get/-/simple-get-1.4.3.tgz\",",
                "+      \"integrity\": \"sha1-6XVe2kB+ltpAxeUVjJ6jezO+y+s=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"once\": \"1.4.0\",",
                "+        \"unzip-response\": \"1.0.2\",",
                "+        \"xtend\": \"4.0.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"xtend\": {",
                "+          \"version\": \"4.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz\",",
                "+          \"integrity\": \"sha1-pcbVMr5lbiPbgg77lDofBJmNY68=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"sntp\": {",
                "+      \"version\": \"2.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/sntp/-/sntp-2.1.0.tgz\",",
                "+      \"integrity\": \"sha512-FL1b58BDrqS3A11lJ0zEdnJ3UOKqVxawAkF3k7F0CVN7VQ34aZrV+G8BZ1WC9ZL7NyrwsW0oviwsWDgRuVYtJg==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"hoek\": \"4.2.1\"",
                "+      }",
                "+    },",
                "+    \"source-map\": {",
                "+      \"version\": \"0.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.2.0.tgz\",",
                "+      \"integrity\": \"sha1-2rc/vPwrqBm03gO9b26qSBZLP50=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true,",
                "+      \"requires\": {",
                "+        \"amdefine\": \"1.0.1\"",
                "+      }",
                "+    },",
                "+    \"split\": {",
                "+      \"version\": \"0.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/split/-/split-0.1.2.tgz\",",
                "+      \"integrity\": \"sha1-8HEHRMRT1VH8cUPq2YPaYBTjNsw=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"through\": \"1.1.2\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"through\": {",
                "+          \"version\": \"1.1.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/through/-/through-1.1.2.tgz\",",
                "+          \"integrity\": \"sha1-NEpUJaN3MxTKfg62US+6+vdsC/4=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"sprintf-js\": {",
                "+      \"version\": \"1.0.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz\",",
                "+      \"integrity\": \"sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"sshpk\": {",
                "+      \"version\": \"1.13.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/sshpk/-/sshpk-1.13.1.tgz\",",
                "+      \"integrity\": \"sha1-US322mKHFEMW3EwY/hzx2UBzm+M=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"asn1\": \"0.2.3\",",
                "+        \"assert-plus\": \"1.0.0\",",
                "+        \"bcrypt-pbkdf\": \"1.0.1\",",
                "+        \"dashdash\": \"1.14.1\",",
                "+        \"ecc-jsbn\": \"0.1.1\",",
                "+        \"getpass\": \"0.1.7\",",
                "+        \"jsbn\": \"0.1.1\",",
                "+        \"tweetnacl\": \"0.14.5\"",
                "+      }",
                "+    },",
                "+    \"statuses\": {",
                "+      \"version\": \"1.3.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-1.3.1.tgz\",",
                "+      \"integrity\": \"sha1-+vUbnrdKrvOzrPStX2Gr8ky3uT4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"stream-browserify\": {",
                "+      \"version\": \"0.1.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/stream-browserify/-/stream-browserify-0.1.3.tgz\",",
                "+      \"integrity\": \"sha1-lc8bNpdy4nra9GNSJlFSaJxsS+k=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"inherits\": \"2.0.3\",",
                "+        \"process\": \"0.5.2\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"process\": {",
                "+          \"version\": \"0.5.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/process/-/process-0.5.2.tgz\",",
                "+          \"integrity\": \"sha1-FjjYqONML0QKkduVq5rrZ3/Bhc8=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"stream-combiner\": {",
                "+      \"version\": \"0.0.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/stream-combiner/-/stream-combiner-0.0.4.tgz\",",
                "+      \"integrity\": \"sha1-TV5DPBhSYd3mI8o/RMWGvPXErRQ=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"duplexer\": \"0.1.1\"",
                "+      }",
                "+    },",
                "+    \"string-width\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"code-point-at\": \"1.1.0\",",
                "+        \"is-fullwidth-code-point\": \"1.0.0\",",
                "+        \"strip-ansi\": \"3.0.1\"",
                "+      }",
                "+    },",
                "+    \"string.prototype.trim\": {",
                "+      \"version\": \"1.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.1.2.tgz\",",
                "+      \"integrity\": \"sha1-0E3iyJ4Tf019IG8Ia17S+ua+jOo=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"define-properties\": \"1.1.2\",",
                "+        \"es-abstract\": \"1.10.0\",",
                "+        \"function-bind\": \"1.1.1\"",
                "+      }",
                "+    },",
                "+    \"string_decoder\": {",
                "+      \"version\": \"1.0.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.0.3.tgz\",",
                "+      \"integrity\": \"sha512-4AH6Z5fzNNBcH+6XDMfA/BTt87skxqJlO0lAh3Dker5zThcAxG6mKz+iGu308UKoPPQ8Dcqx/4JhujzltRa+hQ==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"safe-buffer\": \"5.1.1\"",
                "+      }",
                "+    },",
                "+    \"stringstream\": {",
                "+      \"version\": \"0.0.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/stringstream/-/stringstream-0.0.5.tgz\",",
                "+      \"integrity\": \"sha1-TkhM1N5aC7vuGORjB3EKioFiGHg=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"strip-ansi\": {",
                "+      \"version\": \"3.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz\",",
                "+      \"integrity\": \"sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"ansi-regex\": \"2.1.1\"",
                "+      }",
                "+    },",
                "+    \"strip-json-comments\": {",
                "+      \"version\": \"2.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz\",",
                "+      \"integrity\": \"sha1-PFMZQukIwml8DsNEhYwobHygpgo=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"subarg\": {",
                "+      \"version\": \"0.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/subarg/-/subarg-0.0.1.tgz\",",
                "+      \"integrity\": \"sha1-PVawfaz7xFu7Y/dnK0O2PkY2jjo=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"minimist\": \"0.0.10\"",
                "+      }",
                "+    },",
                "+    \"supports-color\": {",
                "+      \"version\": \"3.2.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-3.2.3.tgz\",",
                "+      \"integrity\": \"sha1-ZawFBLOVQXHYpklGsq48u4pfVPY=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"has-flag\": \"1.0.0\"",
                "+      }",
                "+    },",
                "+    \"syntax-error\": {",
                "+      \"version\": \"1.1.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/syntax-error/-/syntax-error-1.1.6.tgz\",",
                "+      \"integrity\": \"sha1-tFSXBtOGzBwdx8JCPxhXm2yt5xA=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"acorn\": \"2.7.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"acorn\": {",
                "+          \"version\": \"2.7.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-2.7.0.tgz\",",
                "+          \"integrity\": \"sha1-q259nYhqrKiwhbwzEreaGYQz8Oc=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"taffydb\": {",
                "+      \"version\": \"2.6.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/taffydb/-/taffydb-2.6.2.tgz\",",
                "+      \"integrity\": \"sha1-fLy2S1oUG2ou/CxdLGe04VCyomg=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"tap-finished\": {",
                "+      \"version\": \"0.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/tap-finished/-/tap-finished-0.0.1.tgz\",",
                "+      \"integrity\": \"sha1-CLW1Q/3ASDApDGxWEnlVLnHEvWc=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"tap-parser\": \"0.2.1\",",
                "+        \"through\": \"2.3.8\"",
                "+      }",
                "+    },",
                "+    \"tap-parser\": {",
                "+      \"version\": \"0.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/tap-parser/-/tap-parser-0.2.1.tgz\",",
                "+      \"integrity\": \"sha1-jh6CPyEU7iHQMuLzHk+2QqKW9Qs=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"split\": \"0.1.2\"",
                "+      }",
                "+    },",
                "+    \"tape\": {",
                "+      \"version\": \"4.9.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/tape/-/tape-4.9.0.tgz\",",
                "+      \"integrity\": \"sha512-j0jO9BiScfqtPBb9QmPLL0qvxXMz98xjkMb7x8lKipFlJZwNJkqkWPou+NU4V6T9RnVh1kuSthLE8gLrN8bBfw==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"deep-equal\": \"1.0.1\",",
                "+        \"defined\": \"1.0.0\",",
                "+        \"for-each\": \"0.3.2\",",
                "+        \"function-bind\": \"1.1.1\",",
                "+        \"glob\": \"7.1.2\",",
                "+        \"has\": \"1.0.1\",",
                "+        \"inherits\": \"2.0.3\",",
                "+        \"minimist\": \"1.2.0\",",
                "+        \"object-inspect\": \"1.5.0\",",
                "+        \"resolve\": \"1.5.0\",",
                "+        \"resumer\": \"0.0.0\",",
                "+        \"string.prototype.trim\": \"1.1.2\",",
                "+        \"through\": \"2.3.8\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"deep-equal\": {",
                "+          \"version\": \"1.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/deep-equal/-/deep-equal-1.0.1.tgz\",",
                "+          \"integrity\": \"sha1-9dJgKStmDghO/0zbyfCK0yR0SLU=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"defined\": {",
                "+          \"version\": \"1.0.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/defined/-/defined-1.0.0.tgz\",",
                "+          \"integrity\": \"sha1-yY2bzvdWdBiOEQlpFRGZ45sfppM=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"glob\": {",
                "+          \"version\": \"7.1.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.2.tgz\",",
                "+          \"integrity\": \"sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"fs.realpath\": \"1.0.0\",",
                "+            \"inflight\": \"1.0.6\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"minimatch\": \"3.0.4\",",
                "+            \"once\": \"1.4.0\",",
                "+            \"path-is-absolute\": \"1.0.1\"",
                "+          }",
                "+        },",
                "+        \"minimist\": {",
                "+          \"version\": \"1.2.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz\",",
                "+          \"integrity\": \"sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"resolve\": {",
                "+          \"version\": \"1.5.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.5.0.tgz\",",
                "+          \"integrity\": \"sha512-hgoSGrc3pjzAPHNBg+KnFcK2HwlHTs/YrAGUr6qgTVUZmXv1UEXXl0bZNBKMA9fud6lRYFdPGz0xXxycPzmmiw==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"path-parse\": \"1.0.5\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"tar-fs\": {",
                "+      \"version\": \"1.16.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/tar-fs/-/tar-fs-1.16.0.tgz\",",
                "+      \"integrity\": \"sha512-I9rb6v7mjWLtOfCau9eH5L7sLJyU2BnxtEZRQ5Mt+eRKmf1F0ohXmT/Jc3fr52kDvjJ/HV5MH3soQfPL5bQ0Yg==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"chownr\": \"1.0.1\",",
                "+        \"mkdirp\": \"0.5.1\",",
                "+        \"pump\": \"1.0.3\",",
                "+        \"tar-stream\": \"1.5.5\"",
                "+      }",
                "+    },",
                "+    \"tar-stream\": {",
                "+      \"version\": \"1.5.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/tar-stream/-/tar-stream-1.5.5.tgz\",",
                "+      \"integrity\": \"sha512-mQdgLPc/Vjfr3VWqWbfxW8yQNiJCbAZ+Gf6GDu1Cy0bdb33ofyiNGBtAY96jHFhDuivCwgW1H9DgTON+INiXgg==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"bl\": \"1.0.3\",",
                "+        \"end-of-stream\": \"1.4.1\",",
                "+        \"readable-stream\": \"2.3.5\",",
                "+        \"xtend\": \"4.0.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"xtend\": {",
                "+          \"version\": \"4.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz\",",
                "+          \"integrity\": \"sha1-pcbVMr5lbiPbgg77lDofBJmNY68=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"throttleit\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/throttleit/-/throttleit-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-nnhYNtr0Z0MUWlmEtiaNgoUorGw=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"through\": {",
                "+      \"version\": \"2.3.8\",",
                "+      \"resolved\": \"https://registry.npmjs.org/through/-/through-2.3.8.tgz\",",
                "+      \"integrity\": \"sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"through2\": {",
                "+      \"version\": \"0.4.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/through2/-/through2-0.4.2.tgz\",",
                "+      \"integrity\": \"sha1-2/WGYDEVHsg1K7bE22SiKSqEC5s=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"readable-stream\": \"1.0.34\",",
                "+        \"xtend\": \"2.1.2\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"isarray\": {",
                "+          \"version\": \"0.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",",
                "+          \"integrity\": \"sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"readable-stream\": {",
                "+          \"version\": \"1.0.34\",",
                "+          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz\",",
                "+          \"integrity\": \"sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"core-util-is\": \"1.0.2\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"isarray\": \"0.0.1\",",
                "+            \"string_decoder\": \"0.10.31\"",
                "+          }",
                "+        },",
                "+        \"string_decoder\": {",
                "+          \"version\": \"0.10.31\",",
                "+          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "+          \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"xtend\": {",
                "+          \"version\": \"2.1.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-2.1.2.tgz\",",
                "+          \"integrity\": \"sha1-bv7MKk2tjmlixJAbM3znuoe10os=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"object-keys\": \"0.4.0\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"through2-spy\": {",
                "+      \"version\": \"1.2.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/through2-spy/-/through2-spy-1.2.0.tgz\",",
                "+      \"integrity\": \"sha1-nIkcqcpA4eHkzzHhrFf5TMnSSMs=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"through2\": \"0.5.1\",",
                "+        \"xtend\": \"3.0.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"isarray\": {",
                "+          \"version\": \"0.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",",
                "+          \"integrity\": \"sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"readable-stream\": {",
                "+          \"version\": \"1.0.34\",",
                "+          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz\",",
                "+          \"integrity\": \"sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"core-util-is\": \"1.0.2\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"isarray\": \"0.0.1\",",
                "+            \"string_decoder\": \"0.10.31\"",
                "+          }",
                "+        },",
                "+        \"string_decoder\": {",
                "+          \"version\": \"0.10.31\",",
                "+          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "+          \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"through2\": {",
                "+          \"version\": \"0.5.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/through2/-/through2-0.5.1.tgz\",",
                "+          \"integrity\": \"sha1-390BLrnHAOIyP9M084rGIqs3Lac=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"readable-stream\": \"1.0.34\",",
                "+            \"xtend\": \"3.0.0\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"timers-browserify\": {",
                "+      \"version\": \"1.0.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/timers-browserify/-/timers-browserify-1.0.3.tgz\",",
                "+      \"integrity\": \"sha1-/7pwycEu7ZFv1nMY5imsbzIpVVE=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"process\": \"0.5.2\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"process\": {",
                "+          \"version\": \"0.5.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/process/-/process-0.5.2.tgz\",",
                "+          \"integrity\": \"sha1-FjjYqONML0QKkduVq5rrZ3/Bhc8=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"tough-cookie\": {",
                "+      \"version\": \"2.3.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.3.4.tgz\",",
                "+      \"integrity\": \"sha512-TZ6TTfI5NtZnuyy/Kecv+CnoROnyXn2DN97LontgQpCwsX2XyLYCC0ENhYkehSOwAp8rTQKc/NUIF7BkQ5rKLA==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"punycode\": \"1.4.1\"",
                "+      }",
                "+    },",
                "+    \"trim\": {",
                "+      \"version\": \"0.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/trim/-/trim-0.0.1.tgz\",",
                "+      \"integrity\": \"sha1-WFhUf2spB1fulczMZm+1AITEYN0=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"tty-browserify\": {",
                "+      \"version\": \"0.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/tty-browserify/-/tty-browserify-0.0.1.tgz\",",
                "+      \"integrity\": \"sha512-C3TaO7K81YvjCgQH9Q1S3R3P3BtN3RIM8n+OvX4il1K1zgE8ZhI0op7kClgkxtutIE8hQrcrHBXvIheqKUUCxw==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"tunnel-agent\": {",
                "+      \"version\": \"0.6.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz\",",
                "+      \"integrity\": \"sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"safe-buffer\": \"5.1.1\"",
                "+      }",
                "+    },",
                "+    \"tweetnacl\": {",
                "+      \"version\": \"0.14.5\",",
                "+      \"resolved\": \"https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz\",",
                "+      \"integrity\": \"sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true",
                "+    },",
                "+    \"type-check\": {",
                "+      \"version\": \"0.3.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz\",",
                "+      \"integrity\": \"sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"prelude-ls\": \"1.1.2\"",
                "+      }",
                "+    },",
                "+    \"type-component\": {",
                "+      \"version\": \"0.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/type-component/-/type-component-0.0.1.tgz\",",
                "+      \"integrity\": \"sha1-lSpsgcIe/STRPYEdDISYy4YOGVY=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"typedarray\": {",
                "+      \"version\": \"0.0.6\",",
                "+      \"resolved\": \"https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz\",",
                "+      \"integrity\": \"sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"uglify-js\": {",
                "+      \"version\": \"2.8.29\",",
                "+      \"resolved\": \"https://registry.npmjs.org/uglify-js/-/uglify-js-2.8.29.tgz\",",
                "+      \"integrity\": \"sha1-KcVzMUgFe7Th913zW3qcty5qWd0=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true,",
                "+      \"requires\": {",
                "+        \"source-map\": \"0.5.7\",",
                "+        \"uglify-to-browserify\": \"1.0.2\",",
                "+        \"yargs\": \"3.10.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"source-map\": {",
                "+          \"version\": \"0.5.7\",",
                "+          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz\",",
                "+          \"integrity\": \"sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=\",",
                "+          \"dev\": true,",
                "+          \"optional\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"uglify-to-browserify\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-bgkk1r2mta/jSeOabWMoUKD4grc=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"umd\": {",
                "+      \"version\": \"2.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/umd/-/umd-2.0.0.tgz\",",
                "+      \"integrity\": \"sha1-dJaDsNUUcorg4bYZX1d0r8CtT48=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"rfile\": \"1.0.0\",",
                "+        \"ruglify\": \"1.0.0\",",
                "+        \"through\": \"2.3.8\",",
                "+        \"uglify-js\": \"2.4.24\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"async\": {",
                "+          \"version\": \"0.2.10\",",
                "+          \"resolved\": \"https://registry.npmjs.org/async/-/async-0.2.10.tgz\",",
                "+          \"integrity\": \"sha1-trvgsGdLnXGXCMo43owjfLUmw9E=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"source-map\": {",
                "+          \"version\": \"0.1.34\",",
                "+          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.1.34.tgz\",",
                "+          \"integrity\": \"sha1-p8/omux7FoLDsZjQrPtH19CQVms=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"amdefine\": \"1.0.1\"",
                "+          }",
                "+        },",
                "+        \"uglify-js\": {",
                "+          \"version\": \"2.4.24\",",
                "+          \"resolved\": \"https://registry.npmjs.org/uglify-js/-/uglify-js-2.4.24.tgz\",",
                "+          \"integrity\": \"sha1-+tV1XB4Vd2WLsG/5q25UjJW+vW4=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"async\": \"0.2.10\",",
                "+            \"source-map\": \"0.1.34\",",
                "+            \"uglify-to-browserify\": \"1.0.2\",",
                "+            \"yargs\": \"3.5.4\"",
                "+          }",
                "+        },",
                "+        \"wordwrap\": {",
                "+          \"version\": \"0.0.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.2.tgz\",",
                "+          \"integrity\": \"sha1-t5Zpu0LstAn4PVg8rVLKF+qhZD8=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"yargs\": {",
                "+          \"version\": \"3.5.4\",",
                "+          \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-3.5.4.tgz\",",
                "+          \"integrity\": \"sha1-2K/49mXpTDS9JZvevRv68N3TU2E=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"camelcase\": \"1.2.1\",",
                "+            \"decamelize\": \"1.2.0\",",
                "+            \"window-size\": \"0.1.0\",",
                "+            \"wordwrap\": \"0.0.2\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "+    \"underscore\": {",
                "+      \"version\": \"1.8.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/underscore/-/underscore-1.8.3.tgz\",",
                "+      \"integrity\": \"sha1-Tz+1OxBuYJf8+ctBCfKl6b36UCI=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"underscore-contrib\": {",
                "+      \"version\": \"0.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/underscore-contrib/-/underscore-contrib-0.3.0.tgz\",",
                "+      \"integrity\": \"sha1-ZltmwkeD+PorGMn4y7Dix9SMJsc=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"underscore\": \"1.6.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"underscore\": {",
                "+          \"version\": \"1.6.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/underscore/-/underscore-1.6.0.tgz\",",
                "+          \"integrity\": \"sha1-izixDKze9jM3uLJOT/htRa6lKag=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"unpipe\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"unzip-response\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/unzip-response/-/unzip-response-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-uYTwh3/AqJwsdzzB73tbIytbBv4=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"url\": {",
                "+      \"version\": \"0.10.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/url/-/url-0.10.3.tgz\",",
                "+      \"integrity\": \"sha1-Ah5NnHcF8hu/N9A861h2dAJ3TGQ=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"punycode\": \"1.3.2\",",
                "+        \"querystring\": \"0.2.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"punycode\": {",
                "+          \"version\": \"1.3.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz\",",
                "+          \"integrity\": \"sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"utf-8-validate\": {",
                "+      \"version\": \"4.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/utf-8-validate/-/utf-8-validate-4.0.0.tgz\",",
                "+      \"integrity\": \"sha512-JS/c6nR/qauqSdvTksgDO1142kYddTXz42y5X/he188B/kgcFLLB4l9CfZd+hGic/ORgsL+pPfwr9lYsL/80Fw==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"bindings\": \"1.3.0\",",
                "+        \"nan\": \"2.8.0\",",
                "+        \"prebuild-install\": \"2.3.0\"",
                "+      }",
                "+    },",
                "+    \"util\": {",
                "+      \"version\": \"0.10.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/util/-/util-0.10.3.tgz\",",
                "+      \"integrity\": \"sha1-evsa/lCAUkZInj23/g7TeTNqwPk=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"inherits\": \"2.0.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"inherits\": {",
                "+          \"version\": \"2.0.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz\",",
                "+          \"integrity\": \"sha1-sX0I0ya0Qj5Wjv9xn5GwscvfafE=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"util-deprecate\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"utils-merge\": {",
                "+      \"version\": \"1.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",",
                "+      \"integrity\": \"sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"uuid\": {",
                "+      \"version\": \"3.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-3.2.1.tgz\",",
                "+      \"integrity\": \"sha512-jZnMwlb9Iku/O3smGWvZhauCf6cvvpKi4BKRiliS3cxnI+Gz9j5MEpTz2UFuXiKPJocb7gnsLHwiS05ige5BEA==\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"verror\": {",
                "+      \"version\": \"1.10.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/verror/-/verror-1.10.0.tgz\",",
                "+      \"integrity\": \"sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"assert-plus\": \"1.0.0\",",
                "+        \"core-util-is\": \"1.0.2\",",
                "+        \"extsprintf\": \"1.3.0\"",
                "+      }",
                "+    },",
                "+    \"vm-browserify\": {",
                "+      \"version\": \"0.0.4\",",
                "+      \"resolved\": \"https://registry.npmjs.org/vm-browserify/-/vm-browserify-0.0.4.tgz\",",
                "+      \"integrity\": \"sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"indexof\": \"0.0.1\"",
                "+      }",
                "+    },",
                "+    \"which\": {",
                "+      \"version\": \"1.3.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/which/-/which-1.3.0.tgz\",",
                "+      \"integrity\": \"sha512-xcJpopdamTuY5duC/KnTTNBraPK54YwpenP4lzxU8H91GudWpFv38u0CKjclE1Wi2EH2EDz5LRcHcKbCIzqGyg==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"isexe\": \"2.0.0\"",
                "+      }",
                "+    },",
                "+    \"wide-align\": {",
                "+      \"version\": \"1.1.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/wide-align/-/wide-align-1.1.2.tgz\",",
                "+      \"integrity\": \"sha512-ijDLlyQ7s6x1JgCLur53osjm/UXUYD9+0PbYKrBsYisYXzCxN+HC3mYDNy/dWdmf3AwqwU3CXwDCvsNgGK1S0w==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"string-width\": \"1.0.2\"",
                "+      }",
                "+    },",
                "+    \"window-size\": {",
                "+      \"version\": \"0.1.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/window-size/-/window-size-0.1.0.tgz\",",
                "+      \"integrity\": \"sha1-VDjNLqk7IC76Ohn+iIeu58lPnJ0=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"wordwrap\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-J1hIEIkUVqQXHI0CJkQa3pDLyus=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"wrappy\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"ws\": {",
                "+      \"version\": \"5.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ws/-/ws-5.0.0.tgz\",",
                "+      \"integrity\": \"sha512-XXG4S0b771C68AeTHebBsJJBZMguxj7Em+D657RViuj6ppRd3tfuOhIK8eGwZGNb76C8MjQfCTfH2NN50rJN4w==\",",
                "+      \"requires\": {",
                "+        \"async-limiter\": \"1.0.0\"",
                "+      }",
                "+    },",
                "+    \"xhr\": {",
                "+      \"version\": \"1.17.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/xhr/-/xhr-1.17.1.tgz\",",
                "+      \"integrity\": \"sha1-BTM0nkp7uWfQvYeKlh2VBfkFLf8=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"global\": \"4.3.2\",",
                "+        \"once\": \"1.1.1\",",
                "+        \"parse-headers\": \"2.0.1\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"once\": {",
                "+          \"version\": \"1.1.1\",",
                "+          \"resolved\": \"https://registry.npmjs.org/once/-/once-1.1.1.tgz\",",
                "+          \"integrity\": \"sha1-nbV0kzzLCMOnYU0VQDLAnqbzOec=\",",
                "+          \"dev\": true",
                "+        }",
                "+      }",
                "+    },",
                "+    \"xmlcreate\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/xmlcreate/-/xmlcreate-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-+mv3YqYKQT+z3Y9LA8WyaSONMI8=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"xtend\": {",
                "+      \"version\": \"3.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-3.0.0.tgz\",",
                "+      \"integrity\": \"sha1-XM50B7r2Qsunvs2laBEcST9ZZlo=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"yargs\": {",
                "+      \"version\": \"3.10.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz\",",
                "+      \"integrity\": \"sha1-9+572FfdfB0tOMDnTvvWgdFDH9E=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true,",
                "+      \"requires\": {",
                "+        \"camelcase\": \"1.2.1\",",
                "+        \"cliui\": \"2.1.0\",",
                "+        \"decamelize\": \"1.2.0\",",
                "+        \"window-size\": \"0.1.0\"",
                "+      }",
                "+    },",
                "+    \"yauzl\": {",
                "+      \"version\": \"2.4.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/yauzl/-/yauzl-2.4.1.tgz\",",
                "+      \"integrity\": \"sha1-lSj0QtqxsihOWLQ3m7GU4i4MQAU=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"fd-slicer\": \"1.0.1\"",
                "+      }",
                "+    }",
                "+  }",
                "+}"
            ],
            "changed_files": [
                ".gitignore",
                "lib/js/Gruntfile.js",
                "lib/js/package-lock.json",
                "lib/js/package.json",
                "package-lock.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4509": ""
            },
            "ghissue_refs": {
                "1506": "THRIFT-4509: update grunt to 1.0.2 #1502"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client, version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4509",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1506",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fe50feae7e9cad31aeeda0f30c7007ede13647f0",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1518579695,
            "hunks": 1,
            "message": "THRIFT-4497: Use `map()` field type for Erlang type for map struct fields. Client: erl The Thrift Erlang code generator previously generated fields with the `#{}` Erlang type for maps fields.  In the Erlang type specification languages, however, `#{}` specifically means an empty map.  This commit fixes the code to emit `map()` instead, which means the maps keys and values may be of any type. It would be possible to emit a field type such as `${keytype() => maptype()}`, but this commit does not do that. This closes #1495",
            "diff": [
                "diff --git a/compiler/cpp/src/thrift/generate/t_erl_generator.cc b/compiler/cpp/src/thrift/generate/t_erl_generator.cc",
                "index 9e1e23dac..2b644c931 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_erl_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_erl_generator.cc",
                "@@ -719,3 +719,3 @@ string t_erl_generator::render_member_type(t_field* field) {",
                "     if (maps_) {",
                "-      return \"#{}\";",
                "+      return \"map()\";",
                "     } else if (otp16_) {"
            ],
            "changed_files": [
                "compiler/cpp/src/thrift/generate/t_erl_generator.cc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4497": ""
            },
            "ghissue_refs": {
                "1495": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4497",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1495",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b4f22ff30119ea5cadf9b16e97afdcabefe06696",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1517376895,
            "hunks": 3,
            "message": "THRIFT-4480 - Handle seqid = 0 Client: js This closes #1487",
            "diff": [
                "diff --git a/lib/nodejs/lib/thrift/binary_protocol.js b/lib/nodejs/lib/thrift/binary_protocol.js",
                "index 0c0ee50be..b57c8c576 100644",
                "--- a/lib/nodejs/lib/thrift/binary_protocol.js",
                "+++ b/lib/nodejs/lib/thrift/binary_protocol.js",
                "@@ -39,2 +39,3 @@ function TBinaryProtocol(trans, strictRead, strictWrite) {",
                "   this.strictWrite = (strictWrite !== undefined ? strictWrite : true);",
                "+  this._seqid = null;",
                " };",
                "@@ -56,3 +57,3 @@ TBinaryProtocol.prototype.writeMessageBegin = function(name, type, seqid) {",
                "     // Record client seqid to find callback again",
                "-    if (this._seqid) {",
                "+    if (this._seqid !== null) {",
                "       log.warning('SeqId already set', { 'name': name });",
                "@@ -65,3 +66,3 @@ TBinaryProtocol.prototype.writeMessageBegin = function(name, type, seqid) {",
                " TBinaryProtocol.prototype.writeMessageEnd = function() {",
                "-    if (this._seqid) {",
                "+    if (this._seqid !== null) {",
                "         this._seqid = null;"
            ],
            "changed_files": [
                "lib/nodejs/lib/thrift/binary_protocol.js"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4480": ""
            },
            "ghissue_refs": {
                "1487": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4480",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1487",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3b87c71ccba661ec40248005aa9f430f5a105271",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1517440246,
            "hunks": 10,
            "message": "THFIFT-4486: golang: support https from generated clients golang: don't generate -remote.go clients when there are no functions golang: support for http headers in -remote clients golang: serialize cli requests with TJsonProtocol since serialization is not supported with TSimpleJsonProtocol Client: golang This closes #1488",
            "diff": [
                "diff --git a/compiler/cpp/src/thrift/generate/t_go_generator.cc b/compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "index 7727118e8..60481fbb3 100644",
                "--- a/compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "+++ b/compiler/cpp/src/thrift/generate/t_go_generator.cc",
                "@@ -755,10 +755,2 @@ void t_go_generator::init_generator() {",
                "-  vector<t_service*> services = program_->get_services();",
                "-  vector<t_service*>::iterator sv_iter;",
                "-",
                "-  for (sv_iter = services.begin(); sv_iter != services.end(); ++sv_iter) {",
                "-    string service_dir = package_dir_ + \"/\" + underscore((*sv_iter)->get_name()) + \"-remote\";",
                "-    MKDIR(service_dir.c_str());",
                "-  }",
                "-",
                "   // Print header",
                "@@ -2057,4 +2049,12 @@ void t_go_generator::generate_service_remote(t_service* tservice) {",
                "+  // This file is not useful if there are no functions; don't generate it",
                "+  if (functions.size() == 0) {",
                "+    return;",
                "+  }",
                "+",
                "+  string f_remote_dir = package_dir_ + \"/\" + underscore(service_name_) + \"-remote\";",
                "+  MKDIR(f_remote_dir.c_str());",
                "+",
                "   vector<t_function*>::iterator f_iter;",
                "-  string f_remote_name = package_dir_ + \"/\" + underscore(service_name_) + \"-remote/\"",
                "+  string f_remote_name = f_remote_dir + \"/\"",
                "                          + underscore(service_name_) + \"-remote.go\";",
                "@@ -2131,2 +2131,20 @@ void t_go_generator::generate_service_remote(t_service* tservice) {",
                "   f_remote << indent() << endl;",
                "+",
                "+  f_remote << indent() << \"type httpHeaders map[string]string\" << endl;",
                "+  f_remote << indent() << endl;",
                "+  f_remote << indent() << \"func (h httpHeaders) String() string {\" << endl;",
                "+  f_remote << indent() << \"  var m map[string]string = h\" << endl;",
                "+  f_remote << indent() << \"  return fmt.Sprintf(\\\"%s\\\", m)\" << endl;",
                "+  f_remote << indent() << \"}\" << endl;",
                "+  f_remote << indent() << endl;",
                "+  f_remote << indent() << \"func (h httpHeaders) Set(value string) error {\" << endl;",
                "+  f_remote << indent() << \"  parts := strings.Split(value, \\\": \\\")\" << endl;",
                "+  f_remote << indent() << \"  if len(parts) != 2 {\" << endl;",
                "+  f_remote << indent() << \"    return fmt.Errorf(\\\"header should be of format 'Key: Value'\\\")\" << endl;",
                "+  f_remote << indent() << \"  }\" << endl;",
                "+  f_remote << indent() << \"  h[parts[0]] = parts[1]\" << endl;",
                "+  f_remote << indent() << \"  return nil\" << endl;",
                "+  f_remote << indent() << \"}\" << endl;",
                "+  f_remote << indent() << endl;",
                "+",
                "   f_remote << indent() << \"func main() {\" << endl;",
                "@@ -2140,2 +2158,3 @@ void t_go_generator::generate_service_remote(t_service* tservice) {",
                "   f_remote << indent() << \"var useHttp bool\" << endl;",
                "+  f_remote << indent() << \"headers := make(httpHeaders)\" << endl;",
                "   f_remote << indent() << \"var parsedUrl *url.URL\" << endl;",
                "@@ -2154,2 +2173,3 @@ void t_go_generator::generate_service_remote(t_service* tservice) {",
                "   f_remote << indent() << \"flag.BoolVar(&useHttp, \\\"http\\\", false, \\\"Use http\\\")\" << endl;",
                "+  f_remote << indent() << \"flag.Var(headers, \\\"H\\\", \\\"Headers to set on the http(s) request (e.g. -H \\\\\\\"Key: Value\\\\\\\")\\\")\" << endl;",
                "   f_remote << indent() << \"flag.Parse()\" << endl;",
                "@@ -2164,3 +2184,3 @@ void t_go_generator::generate_service_remote(t_service* tservice) {",
                "   f_remote << indent() << \"  host = parsedUrl.Host\" << endl;",
                "-  f_remote << indent() << \"  useHttp = len(parsedUrl.Scheme) <= 0 || parsedUrl.Scheme == \\\"http\\\"\"",
                "+  f_remote << indent() << \"  useHttp = len(parsedUrl.Scheme) <= 0 || parsedUrl.Scheme == \\\"http\\\" || parsedUrl.Scheme == \\\"https\\\"\"",
                "            << endl;",
                "@@ -2179,2 +2199,8 @@ void t_go_generator::generate_service_remote(t_service* tservice) {",
                "   f_remote << indent() << \"  trans, err = thrift.NewTHttpClient(parsedUrl.String())\" << endl;",
                "+  f_remote << indent() << \"  if len(headers) > 0 {\" << endl;",
                "+  f_remote << indent() << \"    httptrans := trans.(*thrift.THttpClient)\" << endl;",
                "+  f_remote << indent() << \"    for key, value := range headers {\" << endl;",
                "+  f_remote << indent() << \"      httptrans.SetHeader(key, value)\" << endl;",
                "+  f_remote << indent() << \"    }\" << endl;",
                "+  f_remote << indent() << \"  }\" << endl;",
                "   f_remote << indent() << \"} else {\" << endl;",
                "@@ -2365,3 +2391,3 @@ void t_go_generator::generate_service_remote(t_service* tservice) {",
                "         f_remote << indent() << \"}\" << endl;",
                "-        f_remote << indent() << factory << \" := thrift.NewTSimpleJSONProtocolFactory()\" << endl;",
                "+        f_remote << indent() << factory << \" := thrift.NewTJSONProtocolFactory()\" << endl;",
                "         f_remote << indent() << jsProt << \" := \" << factory << \".GetProtocol(\" << mbTrans << \")\"",
                "@@ -2393,3 +2419,3 @@ void t_go_generator::generate_service_remote(t_service* tservice) {",
                "         f_remote << indent() << \"}\" << endl;",
                "-        f_remote << indent() << factory << \" := thrift.NewTSimpleJSONProtocolFactory()\" << endl;",
                "+        f_remote << indent() << factory << \" := thrift.NewTJSONProtocolFactory()\" << endl;",
                "         f_remote << indent() << jsProt << \" := \" << factory << \".GetProtocol(\" << mbTrans << \")\""
            ],
            "changed_files": [
                "compiler/cpp/src/thrift/generate/t_go_generator.cc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THFIFT-4486": ""
            },
            "ghissue_refs": {
                "1488": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THFIFT-4486",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1488",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "641b139fd60649b588beb10b58a1c483b0ee5685",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520096405,
            "hunks": 4,
            "message": "THRIFT-4503: fix dlang server logging on client disconnect so it does not report an error for normal operation",
            "diff": [
                "diff --git a/lib/d/src/thrift/server/simple.d b/lib/d/src/thrift/server/simple.d",
                "index f7183a751..5aba4c169 100644",
                "--- a/lib/d/src/thrift/server/simple.d",
                "+++ b/lib/d/src/thrift/server/simple.d",
                "@@ -142,3 +142,5 @@ class TSimpleServer : TServer {",
                "       } catch (TTransportException ttx) {",
                "-        logError(\"Client died: %s\", ttx);",
                "+        if (ttx.type() != TTransportException.Type.END_OF_FILE) {",
                "+          logError(\"Client died unexpectedly: %s\", ttx);",
                "+        }",
                "       } catch (Exception e) {",
                "diff --git a/lib/d/src/thrift/server/taskpool.d b/lib/d/src/thrift/server/taskpool.d",
                "index b4720a48e..670e720fc 100644",
                "--- a/lib/d/src/thrift/server/taskpool.d",
                "+++ b/lib/d/src/thrift/server/taskpool.d",
                "@@ -270,3 +270,5 @@ protected:",
                "     } catch (TTransportException ttx) {",
                "-      logError(\"Client died: %s\", ttx);",
                "+      if (ttx.type() != TTransportException.Type.END_OF_FILE) {",
                "+        logError(\"Client died unexpectedly: %s\", ttx);",
                "+      }",
                "     } catch (Exception e) {",
                "diff --git a/lib/d/src/thrift/server/threaded.d b/lib/d/src/thrift/server/threaded.d",
                "index 1cde983a4..300cc8457 100644",
                "--- a/lib/d/src/thrift/server/threaded.d",
                "+++ b/lib/d/src/thrift/server/threaded.d",
                "@@ -175,3 +175,5 @@ private class WorkerThread : Thread {",
                "     } catch (TTransportException ttx) {",
                "-      logError(\"Client died: %s\", ttx);",
                "+      if (ttx.type() != TTransportException.Type.END_OF_FILE) {",
                "+        logError(\"Client died unexpectedly: %s\", ttx);",
                "+      }",
                "     } catch (Exception e) {",
                "diff --git a/test/known_failures_Linux.json b/test/known_failures_Linux.json",
                "index 6958ff536..6b8aadc8b 100644",
                "--- a/test/known_failures_Linux.json",
                "+++ b/test/known_failures_Linux.json",
                "@@ -135,4 +135,2 @@",
                "   \"d-js_json_http-ip\",",
                "-  \"d-lua_json_buffered-ip\",",
                "-  \"d-lua_json_framed-ip\",",
                "   \"d-nodejs_binary_buffered-ip\","
            ],
            "changed_files": [
                "lib/d/src/thrift/server/simple.d",
                "lib/d/src/thrift/server/taskpool.d",
                "lib/d/src/thrift/server/threaded.d",
                "test/known_failures_Linux.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4503": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4503",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "78755f5297ae931b1f2268e9215d041dc4c0dcc7",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520347833,
            "hunks": 12,
            "message": "THRIFT-4508: Fix node.js to be the desired version in docker ubuntu-artful image",
            "diff": [
                "diff --git a/build/docker/ubuntu-artful/Dockerfile b/build/docker/ubuntu-artful/Dockerfile",
                "index fe241c45f..0b5b8ed44 100644",
                "--- a/build/docker/ubuntu-artful/Dockerfile",
                "+++ b/build/docker/ubuntu-artful/Dockerfile",
                "@@ -57,3 +57,3 @@ RUN add-apt-repository ppa:haxe/releases -y",
                " # node.js",
                "-RUN curl -sL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\",
                "+RUN curl -sL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\",
                "     echo \"deb https://deb.nodesource.com/node_8.x artful main\" | tee /etc/apt/sources.list.d/nodesource.list",
                "diff --git a/test/known_failures_Linux.json b/test/known_failures_Linux.json",
                "index 6b8aadc8b..b302ae85b 100644",
                "--- a/test/known_failures_Linux.json",
                "+++ b/test/known_failures_Linux.json",
                "@@ -15,18 +15,18 @@",
                "   \"cl-c_glib_binary_framed-ip\",",
                "-  \"cl-c_glib_multi_buffered-ip\",",
                "-  \"cl-c_glib_multi_framed-ip\",",
                "   \"cl-c_glib_multi-binary_buffered-ip\",",
                "   \"cl-c_glib_multi-binary_framed-ip\",",
                "+  \"cl-c_glib_multi_buffered-ip\",",
                "+  \"cl-c_glib_multi_framed-ip\",",
                "   \"cl-go_binary_buffered-ip\",",
                "   \"cl-go_binary_framed-ip\",",
                "-  \"cl-rb_binary_buffered-ip\",",
                "-  \"cl-rb_binary_framed-ip\",",
                "   \"cl-rb_binary-accel_buffered-ip\",",
                "   \"cl-rb_binary-accel_framed-ip\",",
                "+  \"cl-rb_binary_buffered-ip\",",
                "+  \"cl-rb_binary_framed-ip\",",
                "   \"cl-rs_binary_buffered-ip\",",
                "   \"cl-rs_binary_framed-ip\",",
                "-  \"cl-rs_multi_buffered-ip\",",
                "-  \"cl-rs_multi_framed-ip\",",
                "   \"cl-rs_multi-binary_buffered-ip\",",
                "   \"cl-rs_multi-binary_framed-ip\",",
                "+  \"cl-rs_multi_buffered-ip\",",
                "+  \"cl-rs_multi_framed-ip\",",
                "   \"cpp-dart_binary_http-ip\",",
                "@@ -237,6 +237,6 @@",
                "   \"netcore-csharp_binary_framed-ip-ssl\",",
                "-  \"netcore-csharp_json_framed-ip-ssl\",",
                "-  \"netcore-csharp_json_buffered-ip-ssl\",",
                "   \"netcore-csharp_compact_buffered-ip-ssl\",",
                "   \"netcore-csharp_compact_framed-ip-ssl\",",
                "+  \"netcore-csharp_json_buffered-ip-ssl\",",
                "+  \"netcore-csharp_json_framed-ip-ssl\",",
                "   \"nodejs-cpp_binary_http-ip\",",
                "@@ -247,18 +247,6 @@",
                "   \"nodejs-cpp_json_http-ip-ssl\",",
                "-  \"nodejs-d_binary_buffered-ip\",",
                "-  \"nodejs-d_binary_buffered-ip-ssl\",",
                "-  \"nodejs-d_binary_framed-ip\",",
                "-  \"nodejs-d_binary_framed-ip-ssl\",",
                "   \"nodejs-d_binary_http-ip\",",
                "   \"nodejs-d_binary_http-ip-ssl\",",
                "-  \"nodejs-d_compact_buffered-ip\",",
                "-  \"nodejs-d_compact_buffered-ip-ssl\",",
                "-  \"nodejs-d_compact_framed-ip\",",
                "-  \"nodejs-d_compact_framed-ip-ssl\",",
                "   \"nodejs-d_compact_http-ip\",",
                "   \"nodejs-d_compact_http-ip-ssl\",",
                "-  \"nodejs-d_json_buffered-ip\",",
                "-  \"nodejs-d_json_buffered-ip-ssl\",",
                "-  \"nodejs-d_json_framed-ip\",",
                "-  \"nodejs-d_json_framed-ip-ssl\",",
                "   \"nodejs-d_json_http-ip\","
            ],
            "changed_files": [
                "build/docker/ubuntu-artful/Dockerfile",
                "test/known_failures_Linux.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4508": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4508",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "138da2049020fe66e51f8adb456cdd2bd8d5e502",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520528491,
            "hunks": 2,
            "message": "fix wrong document @param in TBase.h Client: cocoa This closes #1504",
            "diff": [
                "diff --git a/lib/cocoa/src/protocol/TBase.h b/lib/cocoa/src/protocol/TBase.h",
                "index b31061ec0..9935d5068 100644",
                "--- a/lib/cocoa/src/protocol/TBase.h",
                "+++ b/lib/cocoa/src/protocol/TBase.h",
                "@@ -28,3 +28,3 @@",
                "  *",
                "- * @param input protocol used for reading",
                "+ * @param inProtocol protocol used for reading",
                "  */",
                "@@ -35,3 +35,3 @@",
                "  *",
                "- * @param buf output protocol used for writing",
                "+ * @param outProtocol output protocol used for writing",
                "  */"
            ],
            "changed_files": [
                "lib/cocoa/src/protocol/TBase.h"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1504": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: client",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1504",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a02ae56f7faf8f747551f6e333d001f872769033",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520882843,
            "hunks": 2,
            "message": "THRIFT-4517: disable ocaml in xenial because it is broken",
            "diff": [
                "diff --git a/build/docker/ubuntu-xenial/Dockerfile b/build/docker/ubuntu-xenial/Dockerfile",
                "index 832542ee7..ec2c849af 100644",
                "--- a/build/docker/ubuntu-xenial/Dockerfile",
                "+++ b/build/docker/ubuntu-xenial/Dockerfile",
                "@@ -20,2 +20,3 @@",
                " # - nodejs: Xenial comes with 4.2.6 which exits LTS April 2018, so we're installing 6.x",
                "+# - ocaml: causes stack overflow error, just started March 2018 not sure why",
                " #",
                "@@ -185,8 +186,9 @@ RUN apt-get install -y --no-install-recommends \\",
                "-RUN apt-get install -y --no-install-recommends \\",
                "-`# OCaml dependencies` \\",
                "-      ocaml \\",
                "-      opam && \\",
                "-    opam init --yes && \\",
                "-    opam install --yes oasis",
                "+# THRIFT-4517: causes stack overflows; version too old; skip ocaml in xenial",
                "+# RUN apt-get install -y --no-install-recommends \\",
                "+# `# OCaml dependencies` \\",
                "+#       ocaml \\",
                "+#       opam && \\",
                "+#     opam init --yes && \\",
                "+#     opam install --yes oasis"
            ],
            "changed_files": [
                "build/docker/ubuntu-xenial/Dockerfile"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4517": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: disable",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4517",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a37feafd42543b9a4b3192a4a9478b93e7308a24",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520367061,
            "hunks": 12,
            "message": "THRIFT-4508: end trusty CI builds; handle nodejs 4.x LTS EOL; update docs",
            "diff": [
                "diff --git a/.travis.yml b/.travis.yml",
                "index 4eb2924d4..2816facc9 100644",
                "--- a/.travis.yml",
                "+++ b/.travis.yml",
                "@@ -58,7 +58,2 @@ jobs:",
                "       script: true",
                "-      env:",
                "-        - JOB=\"Docker Build ubuntu-trusty 14.04\"",
                "-        - DISTRO=ubuntu-trusty",
                "-        - TRAVIS_BUILD_STAGE=docker",
                "-    - script: true",
                "       env:",
                "@@ -161,8 +156,2 @@ jobs:",
                "-    - script: build/docker/run.sh",
                "-      env:",
                "-        - JOB=\"Autotools (Ubuntu Trusty)\"",
                "-        - DISTRO=ubuntu-trusty",
                "-        - SCRIPT=\"autotools.sh\"",
                "-",
                "     # ------------------------- phase: dist -------------------------",
                "diff --git a/build/docker/ubuntu-artful/Dockerfile b/build/docker/ubuntu-artful/Dockerfile",
                "index 0b5b8ed44..416d75e6c 100644",
                "--- a/build/docker/ubuntu-artful/Dockerfile",
                "+++ b/build/docker/ubuntu-artful/Dockerfile",
                "@@ -21,2 +21,3 @@",
                " # - nodejs: want v8, Ubuntu comes with v6",
                "+#",
                "diff --git a/build/docker/ubuntu-xenial/Dockerfile b/build/docker/ubuntu-xenial/Dockerfile",
                "index b37434bb7..b69d7ea86 100644",
                "--- a/build/docker/ubuntu-xenial/Dockerfile",
                "+++ b/build/docker/ubuntu-xenial/Dockerfile",
                "@@ -17,8 +17,5 @@",
                " # - dart: does not come with Ubuntu so we're installing 1.22.1 for coverage",
                "+# - nodejs: Ubuntu comes with 4.2.6 which exits LTS April 2018, so we're installing 6.x",
                " #",
                "-#",
                "-# Known missing or disabled libraries:",
                "-# - d: deimos for libevent and openssl omitted - not compatible / build errors",
                "-",
                " FROM buildpack-deps:xenial-scm",
                "@@ -60,2 +57,6 @@ RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /et",
                "+# node.js",
                "+RUN curl -sL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\",
                "+    echo \"deb https://deb.nodesource.com/node_6.x xenial main\" | tee /etc/apt/sources.list.d/nodesource.list",
                "+    ",
                " ### install general dependencies",
                "@@ -175,5 +176,3 @@ RUN apt-get install -y --no-install-recommends \\",
                " `# Node.js dependencies` \\",
                "-      nodejs \\",
                "-      npm && \\",
                "-    ln -s /usr/bin/nodejs /usr/bin/node",
                "+      nodejs",
                "diff --git a/package.json b/package.json",
                "index cd6c7106c..11e76a214 100644",
                "--- a/package.json",
                "+++ b/package.json",
                "@@ -39,3 +39,3 @@",
                "     \"q\": \"^1.5.0\",",
                "-    \"ws\": \">= 2.2.3\"",
                "+    \"ws\": \"^5.0.0\"",
                "   },",
                "@@ -43,11 +43,11 @@",
                "     \"buffer-equals\": \"^1.0.4\",",
                "-    \"commander\": \"^2.11.0\",",
                "-    \"connect\": \"^3.6.4\",",
                "+    \"commander\": \"^2.14.1\",",
                "+    \"connect\": \"^3.6.6\",",
                "     \"istanbul\": \"^0.4.5\",",
                "-    \"jsdoc\": \">=3.5.5\",",
                "+    \"jsdoc\": \"^3.5.5\",",
                "     \"minimatch\": \"^3.0.4\",",
                "-    \"phantomjs-prebuilt\": \"^2.1.7\",",
                "+    \"phantomjs-prebuilt\": \"^2.1.16\",",
                "     \"run-browser\": \"^2.0.2\",",
                "-    \"tape\": \"^4.8.0\",",
                "-    \"utf-8-validate\": \"^3.0.0\"",
                "+    \"tape\": \"^4.9.0\",",
                "+    \"utf-8-validate\": \"^4.0.0\"",
                "   },"
            ],
            "changed_files": [
                ".travis.yml",
                "build/docker/ubuntu-artful/Dockerfile",
                "build/docker/ubuntu-xenial/Dockerfile",
                "package.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4508": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4508",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bf7f76bb1f1864fdbbf30ac50715920afbc4a91d",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1519855865,
            "hunks": 14,
            "message": "THRIFT-82: follow-up to common lisp to stabilize the linux build environment and update some docs",
            "diff": [
                "diff --git a/.travis.yml b/.travis.yml",
                "index 9735f43e4..4eb2924d4 100644",
                "--- a/.travis.yml",
                "+++ b/.travis.yml",
                "@@ -37,3 +37,2 @@ install:",
                " stages:",
                "-# - osx       # up front for now (for testing)",
                "   - docker    # docker images",
                "@@ -46,3 +45,3 @@ env:",
                "     - BUILD_ENV=\"-e CC=gcc -e CXX=g++ -e THRIFT_CROSSTEST_CONCURRENCY=4\"",
                "-    - DISTRO=ubuntu-xenial",
                "+    - DISTRO=ubuntu-artful",
                "     - BUILD_LIBS=\"CPP C_GLIB HASKELL JAVA PYTHON TESTING TUTORIALS\"  # only meaningful for CMake builds",
                "@@ -56,8 +55,2 @@ jobs:",
                "   include:",
                "-    # ------------------------- phase: osx --------------------------",
                "-    # - stage: osx",
                "-    #   os: osx",
                "-    #   osx_image: xcode9",
                "-    #   script: build/docker/scripts/autotools.sh",
                "-",
                "     # ========================= stage: docker =========================",
                "@@ -122,3 +115,2 @@ jobs:",
                "         - SCRIPT=\"sca.sh\"",
                "-        - DISTRO=ubuntu-artful",
                "@@ -131,3 +123,2 @@ jobs:",
                "         - SCRIPT=\"ubsan.sh\"",
                "-        - DISTRO=ubuntu-artful",
                "         - BUILD_ARG=\"--without-python --without-py3\"",
                "@@ -137,3 +128,3 @@ jobs:",
                "       env:",
                "-        - JOB=\"CMake (Ubuntu Xenial)\"",
                "+        - JOB=\"CMake\"",
                "@@ -180,2 +171,3 @@ jobs:",
                "         - JOB=\"make dist\"",
                "+        - DISTRO=ubuntu-xenial",
                "         - SCRIPT=\"make-dist.sh\"",
                "@@ -185,3 +177,10 @@ jobs:",
                "         - JOB=\"Debian Packages\"",
                "+        - DISTRO=ubuntu-xenial",
                "         - SCRIPT=\"dpkg.sh\"",
                "+  ### ------------------------- phase: osx -------------------------",
                "+  # disabled due to the time delays it imposes on build jobs",
                "+  # - os: osx",
                "+  #   osx_image: xcode9",
                "+  #   script: build/docker/scripts/autotools.sh",
                "+",
                "diff --git a/build/docker/ubuntu-artful/Dockerfile b/build/docker/ubuntu-artful/Dockerfile",
                "index b9c30f67a..fe241c45f 100644",
                "--- a/build/docker/ubuntu-artful/Dockerfile",
                "+++ b/build/docker/ubuntu-artful/Dockerfile",
                "@@ -43,7 +43,2 @@ RUN apt-get update && \\",
                "-# D",
                "-RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EBCF975E5BA24D5E && \\",
                "-        wget http://master.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list && \\",
                "-        wget -qO - https://dlang.org/d-keyring.gpg | apt-key add -",
                "-",
                " # Dart",
                "@@ -97,20 +92,21 @@ RUN apt-get install -y --no-install-recommends \\",
                "-ENV D_VERSION 2.077.1-0.1",
                "-RUN apt-get install -y --no-install-recommends \\",
                "+ENV SBCL_VERSION 1.4.4",
                "+RUN \\",
                " `# Common Lisp (sbcl) dependencies` \\",
                "-      sbcl",
                "-",
                "-RUN apt-get install -y --no-install-recommends \\",
                "-      `# D dependencies` \\",
                "-      dmd-bin=$D_VERSION \\",
                "-      libphobos2-dev=$D_VERSION \\",
                "-      dmd-compiler=$D_VERSION \\",
                "-      dmd-tools=$D_VERSION \\",
                "-      dub \\",
                "-      dfmt \\",
                "-      dscanner \\",
                "-      libevent-dev \\",
                "-      libssl-dev \\",
                "-      xdg-utils",
                "-RUN mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C && \\",
                "+    curl --version && \\",
                "+    curl -O -J -L https://kent.dl.sourceforge.net/project/sbcl/sbcl/${SBCL_VERSION}/sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2 && \\",
                "+    tar xjf sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2 && \\",
                "+    cd sbcl-${SBCL_VERSION}-x86-64-linux && \\",
                "+    ./install.sh && \\",
                "+    sbcl --version && \\",
                "+    rm -rf sbcl*",
                "+",
                "+ENV D_VERSION     2.077.1",
                "+ENV DMD_DEB       dmd_2.077.1-0_amd64.deb",
                "+RUN \\",
                "+`# D dependencies` \\",
                "+    wget -q http://downloads.dlang.org/releases/2.x/${D_VERSION}/${DMD_DEB} && \\",
                "+    dpkg --install ${DMD_DEB} && \\",
                "+    rm -f ${DMD_DEB} && \\",
                "+    mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C && \\",
                "     curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz| tar xz && \\",
                "@@ -118,4 +114,4 @@ RUN mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/i",
                "     mv libevent-master/C/* /usr/include/dmd/druntime/import/C/ && \\",
                "-    rm -rf libevent-master",
                "-RUN curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz| tar xz && \\",
                "+    rm -rf libevent-master && \\",
                "+    curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz| tar xz && \\",
                "     mv openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \\",
                "diff --git a/test/known_failures_Linux.json b/test/known_failures_Linux.json",
                "index 082496d44..a0bd542ab 100644",
                "--- a/test/known_failures_Linux.json",
                "+++ b/test/known_failures_Linux.json",
                "@@ -100,2 +100,4 @@",
                "   \"csharp-erl_compact_framed-ip-ssl\",",
                "+  \"d-cl_binary_buffered-ip\",",
                "+  \"d-cl_binary_framed-ip\",",
                "   \"d-cpp_binary_buffered-ip\","
            ],
            "changed_files": [
                ".travis.yml",
                "build/docker/ubuntu-artful/Dockerfile",
                "test/known_failures_Linux.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-82": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-82",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8d55c47610b765b2bcdfaebb7ee8d22930e0bd0d",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520879395,
            "hunks": 4,
            "message": "THRIFT-4508: remove cygwin64 build in favor of MSVC2013",
            "diff": [
                "diff --git a/appveyor.yml b/appveyor.yml",
                "index 2db28f616..26bfcfb29 100755",
                "--- a/appveyor.yml",
                "+++ b/appveyor.yml",
                "@@ -45,11 +45,17 @@ environment:",
                "-   - PROFILE: MINGW",
                "-     PLATFORM: x64",
                "-     CONFIGURATION: RelWithDebInfo",
                "+   - PROFILE: MSVC2013",
                "+     PLATFORM: x86",
                "+     CONFIGURATION: Release",
                "+     BOOST_VERSION: 1.58.0",
                "+     LIBEVENT_VERSION: 2.0.22",
                "+     PYTHON_VERSION: 3.5",
                "+     QT_VERSION: 5.8",
                "+     ZLIB_VERSION: 1.2.8",
                "      DISABLED_TESTS: StressTestNonBlocking",
                "+     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015",
                "-   - PROFILE: CYGWIN",
                "+   - PROFILE: MINGW",
                "      PLATFORM: x64",
                "      CONFIGURATION: RelWithDebInfo",
                "-     DISABLED_TESTS: (ZlibTest|OpenSSLManualInitTest|TNonblockingServerTest|StressTestNonBlocking)",
                "+     DISABLED_TESTS: StressTestNonBlocking",
                "@@ -60,2 +66,7 @@ environment:",
                "+#  - PROFILE: CYGWIN",
                "+#    PLATFORM: x64",
                "+#    CONFIGURATION: RelWithDebInfo",
                "+#    DISABLED_TESTS: (ZlibTest|OpenSSLManualInitTest|TNonblockingServerTest|StressTestNonBlocking)",
                "+",
                " install:"
            ],
            "changed_files": [
                "appveyor.yml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4508": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4508",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2b09dfed9c6b858571e7d8829a2b4a4bcda18d6a",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520950285,
            "hunks": 93,
            "message": "THRIFT-4509: add jslint and fix build script output",
            "diff": [
                "diff --git a/lib/js/package-lock.json b/lib/js/package-lock.json",
                "index a907ab0cc..02347cfa5 100644",
                "--- a/lib/js/package-lock.json",
                "+++ b/lib/js/package-lock.json",
                "@@ -9,3 +9,3 @@",
                "       \"resolved\": \"https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz\",",
                "-      \"integrity\": \"sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==\"",
                "+      \"integrity\": \"sha1-+PLIh60Qv2f2NPAFtph/7TF5qsg=\"",
                "     },",
                "@@ -108,3 +108,3 @@",
                "       \"resolved\": \"https://registry.npmjs.org/babylon/-/babylon-7.0.0-beta.19.tgz\",",
                "-      \"integrity\": \"sha512-Vg0C9s/REX6/WIXN37UKpv5ZhRi6A4pjHlpkE34+8/a6c2W1Q692n3hmc+SZG5lKRnaExLUbxtJ1SVT+KaCQ/A==\"",
                "+      \"integrity\": \"sha1-6SjH6AfpcOBTaweKs+DEj54FJQM=\"",
                "     },",
                "@@ -129,3 +129,3 @@",
                "       \"resolved\": \"https://registry.npmjs.org/bluebird/-/bluebird-3.5.1.tgz\",",
                "-      \"integrity\": \"sha512-MKiLiV+I1AA596t9w1sQJ8jkiSr5+ZKi0WKrYGUn6d1Fx+Ij4tIj+m2WMQSGczs5jZVxV339chE8iwk6F64wjA==\"",
                "+      \"integrity\": \"sha1-2VUfnemPH82h5oPRfukaBgLuLrk=\"",
                "     },",
                "@@ -159,2 +159,8 @@",
                "     },",
                "+    \"buffer-shims\": {",
                "+      \"version\": \"1.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/buffer-shims/-/buffer-shims-1.0.0.tgz\",",
                "+      \"integrity\": \"sha1-mXjOMXOIxkmth5MCjDR37wRKi1E=\",",
                "+      \"dev\": true",
                "+    },",
                "     \"builtin-modules\": {",
                "@@ -231,3 +237,3 @@",
                "           \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.2.tgz\",",
                "-          \"integrity\": \"sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==\",",
                "+          \"integrity\": \"sha1-wZyd+aAocC1nhhI4SmVSQExjbRU=\",",
                "           \"dev\": true,",
                "@@ -245,3 +251,3 @@",
                "           \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",",
                "-          \"integrity\": \"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",",
                "+          \"integrity\": \"sha1-UWbihkV/AzBgZL5Ul+jbsMPTIIM=\",",
                "           \"dev\": true,",
                "@@ -332,3 +338,3 @@",
                "           \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.0.3.tgz\",",
                "-          \"integrity\": \"sha512-4AH6Z5fzNNBcH+6XDMfA/BTt87skxqJlO0lAh3Dker5zThcAxG6mKz+iGu308UKoPPQ8Dcqx/4JhujzltRa+hQ==\",",
                "+          \"integrity\": \"sha1-D8Z9fBQYJd6UKC3VNr7GubzoYKs=\",",
                "           \"dev\": true,",
                "@@ -368,3 +374,3 @@",
                "           \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.1.tgz\",",
                "-          \"integrity\": \"sha512-q4spe4KTfsAS1SUHLO0wz8Qiyf1+vMIAgpRYioFYDMNqKfHQbg+AVDH3i4fvpl71/P1L0dBl+fQi+P37UYf0ew==\",",
                "+          \"integrity\": \"sha1-Yi4y6CSItJJ5EUpPns9F581rulU=\",",
                "           \"dev\": true,",
                "@@ -378,3 +384,3 @@",
                "           \"resolved\": \"https://registry.npmjs.org/which/-/which-1.3.0.tgz\",",
                "-          \"integrity\": \"sha512-xcJpopdamTuY5duC/KnTTNBraPK54YwpenP4lzxU8H91GudWpFv38u0CKjclE1Wi2EH2EDz5LRcHcKbCIzqGyg==\",",
                "+          \"integrity\": \"sha1-/wS9/AEO5UfXgL7DjhrBwnd9JTo=\",",
                "           \"dev\": true,",
                "@@ -398,3 +404,3 @@",
                "           \"resolved\": \"https://registry.npmjs.org/boom/-/boom-5.2.0.tgz\",",
                "-          \"integrity\": \"sha512-Z5BTk6ZRe4tXXQlkqftmsAUANpXmuwlsF5Oov8ThoMbQRzdGTA1ngYRW160GexgOgjsFOKJz0LYhoNi+2AMBUw==\",",
                "+          \"integrity\": \"sha1-XdnabuOl8wIHdDYpDLcX0/SlTgI=\",",
                "           \"dev\": true,",
                "@@ -443,3 +449,3 @@",
                "       \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",",
                "-      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",",
                "+      \"integrity\": \"sha1-XRKFFd8TT/Mn6QpMk/Tgd6U2NB8=\",",
                "       \"dev\": true,",
                "@@ -821,3 +827,3 @@",
                "           \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",",
                "-          \"integrity\": \"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",",
                "+          \"integrity\": \"sha1-UWbihkV/AzBgZL5Ul+jbsMPTIIM=\",",
                "           \"dev\": true,",
                "@@ -982,3 +988,3 @@",
                "           \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.2.tgz\",",
                "-          \"integrity\": \"sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==\",",
                "+          \"integrity\": \"sha1-wZyd+aAocC1nhhI4SmVSQExjbRU=\",",
                "           \"dev\": true,",
                "@@ -996,3 +1002,3 @@",
                "           \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",",
                "-          \"integrity\": \"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",",
                "+          \"integrity\": \"sha1-UWbihkV/AzBgZL5Ul+jbsMPTIIM=\",",
                "           \"dev\": true,",
                "@@ -1005,3 +1011,3 @@",
                "           \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.6.2.tgz\",",
                "-          \"integrity\": \"sha512-lreewLK/BlghmxtfH36YYVg1i8IAce4TI7oao75I1g245+6BctqTVQiBP3YUJ9C6DQOXJmkYR9X9fCLtCOJc5w==\",",
                "+          \"integrity\": \"sha1-LtgVDSShbqhlHm1u8PR8QVjOejY=\",",
                "           \"dev\": true,",
                "@@ -1071,3 +1077,3 @@",
                "       \"resolved\": \"https://registry.npmjs.org/hawk/-/hawk-6.0.2.tgz\",",
                "-      \"integrity\": \"sha512-miowhl2+U7Qle4vdLqDdPt9m09K6yZhkLDTWGoUiUzrQCn+mHHSmfJgAyGaLRZbPmTqfFFjRV1QWCW0VWUJBbQ==\",",
                "+      \"integrity\": \"sha1-r02RTrBl+bXOTZ0RwcshJu7MMDg=\",",
                "       \"dev\": true,",
                "@@ -1095,3 +1101,3 @@",
                "       \"resolved\": \"https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.5.0.tgz\",",
                "-      \"integrity\": \"sha512-pNgbURSuab90KbTqvRPsseaTxOJCZBD0a7t+haSN33piP9cCM4l0CqdzAif2hUqm716UovKB2ROmiabGAKVXyg==\",",
                "+      \"integrity\": \"sha1-bWDjSzq7yDEwYsO3mO+NkBoHrzw=\",",
                "       \"dev\": true",
                "@@ -1162,3 +1168,3 @@",
                "       \"resolved\": \"https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz\",",
                "-      \"integrity\": \"sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==\",",
                "+      \"integrity\": \"sha1-76ouqdqg16suoTqXsritUf776L4=\",",
                "       \"dev\": true",
                "@@ -1247,3 +1253,3 @@",
                "       \"resolved\": \"https://registry.npmjs.org/jsdoc/-/jsdoc-3.5.5.tgz\",",
                "-      \"integrity\": \"sha512-6PxB65TAU4WO0Wzyr/4/YhlGovXl0EVYfpKbpSroSj0qBxT4/xod/l40Opkm38dRHRdQgdeY836M0uVnJQG7kg==\",",
                "+      \"integrity\": \"sha1-SEUhsSboGQTWMv+D7JqqCWcI+k0=\",",
                "       \"requires\": {",
                "@@ -1288,3 +1294,3 @@",
                "           \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",",
                "-          \"integrity\": \"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",",
                "+          \"integrity\": \"sha1-UWbihkV/AzBgZL5Ul+jbsMPTIIM=\",",
                "           \"dev\": true,",
                "@@ -1302,2 +1308,66 @@",
                "     },",
                "+    \"jslint\": {",
                "+      \"version\": \"0.12.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/jslint/-/jslint-0.12.0.tgz\",",
                "+      \"integrity\": \"sha512-RoCsyICcKA+6TFsbys9DpKTfPVaC71Mm5QSjvrWA0lDVN+LIvx6apa42FFisMqmCTvJ8DxkcoQGJ0j7m3kTVow==\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"exit\": \"0.1.2\",",
                "+        \"glob\": \"7.1.2\",",
                "+        \"nopt\": \"3.0.6\",",
                "+        \"readable-stream\": \"2.1.5\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"glob\": {",
                "+          \"version\": \"7.1.2\",",
                "+          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.2.tgz\",",
                "+          \"integrity\": \"sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"fs.realpath\": \"1.0.0\",",
                "+            \"inflight\": \"1.0.6\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"minimatch\": \"3.0.4\",",
                "+            \"once\": \"1.4.0\",",
                "+            \"path-is-absolute\": \"1.0.1\"",
                "+          }",
                "+        },",
                "+        \"isarray\": {",
                "+          \"version\": \"1.0.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\",",
                "+          \"integrity\": \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"nopt\": {",
                "+          \"version\": \"3.0.6\",",
                "+          \"resolved\": \"https://registry.npmjs.org/nopt/-/nopt-3.0.6.tgz\",",
                "+          \"integrity\": \"sha1-xkZdvwirzU2zWTF/eaxopkayj/k=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"abbrev\": \"1.1.1\"",
                "+          }",
                "+        },",
                "+        \"process-nextick-args\": {",
                "+          \"version\": \"1.0.7\",",
                "+          \"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-1.0.7.tgz\",",
                "+          \"integrity\": \"sha1-FQ4gt1ZZCtP5EJPyWk8q2L/zC6M=\",",
                "+          \"dev\": true",
                "+        },",
                "+        \"readable-stream\": {",
                "+          \"version\": \"2.1.5\",",
                "+          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.1.5.tgz\",",
                "+          \"integrity\": \"sha1-ZvqLcg4UOLNkaB8q0aY8YYRIydA=\",",
                "+          \"dev\": true,",
                "+          \"requires\": {",
                "+            \"buffer-shims\": \"1.0.0\",",
                "+            \"core-util-is\": \"1.0.2\",",
                "+            \"inherits\": \"2.0.3\",",
                "+            \"isarray\": \"1.0.0\",",
                "+            \"process-nextick-args\": \"1.0.7\",",
                "+            \"string_decoder\": \"0.10.31\",",
                "+            \"util-deprecate\": \"1.0.2\"",
                "+          }",
                "+        }",
                "+      }",
                "+    },",
                "     \"json-schema\": {",
                "@@ -1509,3 +1579,3 @@",
                "       \"resolved\": \"https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.4.0.tgz\",",
                "-      \"integrity\": \"sha512-9jjUFbTPfEy3R/ad/2oNbKtW9Hgovl5O1FvFWKkKblNXoN/Oou6+9+KKohPK13Yc3/TyunyWhJp6gvRNR/PPAw==\",",
                "+      \"integrity\": \"sha1-EvlaMH1YNSB1oEkHuErIvpisAS8=\",",
                "       \"dev\": true,",
                "@@ -1643,3 +1713,3 @@",
                "           \"resolved\": \"https://registry.npmjs.org/which/-/which-1.3.0.tgz\",",
                "-          \"integrity\": \"sha512-xcJpopdamTuY5duC/KnTTNBraPK54YwpenP4lzxU8H91GudWpFv38u0CKjclE1Wi2EH2EDz5LRcHcKbCIzqGyg==\",",
                "+          \"integrity\": \"sha1-/wS9/AEO5UfXgL7DjhrBwnd9JTo=\",",
                "           \"dev\": true,",
                "@@ -1709,3 +1779,3 @@",
                "       \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.5.1.tgz\",",
                "-      \"integrity\": \"sha512-eRzhrN1WSINYCDCbrz796z37LOe3m5tmW7RQf6oBntukAG1nmovJvhnwHHRMAfeoItc1m2Hk02WER2aQ/iqs+A==\",",
                "+      \"integrity\": \"sha1-NJzfbu+J7EXBLX1es/wMhwNDptg=\",",
                "       \"dev\": true",
                "@@ -1773,3 +1843,3 @@",
                "       \"resolved\": \"https://registry.npmjs.org/request/-/request-2.83.0.tgz\",",
                "-      \"integrity\": \"sha512-lR3gD69osqm6EYLk9wB/G1W/laGWjzH90t1vEa2xuxHD5KUrSzp9pUSfTm+YC5Nxt2T8nMPEvKlhbQayU7bgFw==\",",
                "+      \"integrity\": \"sha1-ygtl2gLtYpNYh4COb1EDgQNOM1Y=\",",
                "       \"dev\": true,",
                "@@ -1848,3 +1918,3 @@",
                "       \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.1.tgz\",",
                "-      \"integrity\": \"sha512-kKvNJn6Mm93gAczWVJg7wH+wGYWNrDHdWvpUmHyEsgCtIwwo3bqPtV4tR5tuPaUhTOo/kvhVwd8XwwOllGYkbg==\",",
                "+      \"integrity\": \"sha1-iTMSr2myEj3vcfV4iQAWce6yyFM=\",",
                "       \"dev\": true",
                "@@ -1872,3 +1942,3 @@",
                "       \"resolved\": \"https://registry.npmjs.org/sntp/-/sntp-2.1.0.tgz\",",
                "-      \"integrity\": \"sha512-FL1b58BDrqS3A11lJ0zEdnJ3UOKqVxawAkF3k7F0CVN7VQ34aZrV+G8BZ1WC9ZL7NyrwsW0oviwsWDgRuVYtJg==\",",
                "+      \"integrity\": \"sha1-LGzsFP7cIiJznK+bXD2F0cxaLMg=\",",
                "       \"dev\": true,",
                "diff --git a/lib/js/package.json b/lib/js/package.json",
                "index 5da782216..f3ed3e1e8 100644",
                "--- a/lib/js/package.json",
                "+++ b/lib/js/package.json",
                "@@ -10,4 +10,5 @@",
                "     \"grunt-contrib-uglify\": \"^1.0.1\",",
                "-    \"grunt-jsdoc\": \"^2.2.0\",",
                "-    \"grunt-shell-spawn\": \"^0.3.10\"",
                "+    \"grunt-jsdoc\": \"^2.2.1\",",
                "+    \"grunt-shell-spawn\": \"^0.3.10\",",
                "+    \"jslint\": \"^0.12.0\"",
                "   },",
                "diff --git a/package-lock.json b/package-lock.json",
                "index 2e5d115e5..27bd5e92d 100644",
                "--- a/package-lock.json",
                "+++ b/package-lock.json",
                "@@ -6,18 +6,2 @@",
                "   \"dependencies\": {",
                "-    \"Base64\": {",
                "-      \"version\": \"0.2.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/Base64/-/Base64-0.2.1.tgz\",",
                "-      \"integrity\": \"sha1-ujpCMHCOGGcFBl5mur3Uw1z2ACg=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"JSONStream\": {",
                "-      \"version\": \"0.7.4\",",
                "-      \"resolved\": \"https://registry.npmjs.org/JSONStream/-/JSONStream-0.7.4.tgz\",",
                "-      \"integrity\": \"sha1-c0KQ5BUR7qfCz+FR+/mlY6l7l4Y=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"jsonparse\": \"0.0.5\",",
                "-        \"through\": \"2.3.8\"",
                "-      }",
                "-    },",
                "     \"abbrev\": {",
                "@@ -28,8 +12,2 @@",
                "     },",
                "-    \"acorn\": {",
                "-      \"version\": \"4.0.13\",",
                "-      \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-4.0.13.tgz\",",
                "-      \"integrity\": \"sha1-EFSVrlNh1pe9GVyCUZLhrX8lN4c=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"ajv\": {",
                "@@ -69,8 +47,2 @@",
                "     },",
                "-    \"ansi-styles\": {",
                "-      \"version\": \"2.2.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz\",",
                "-      \"integrity\": \"sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"aproba\": {",
                "@@ -106,11 +78,2 @@",
                "     },",
                "-    \"assert\": {",
                "-      \"version\": \"1.1.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/assert/-/assert-1.1.2.tgz\",",
                "-      \"integrity\": \"sha1-raoExGu1jG3R8pTaPrJuYijrbkQ=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"util\": \"0.10.3\"",
                "-      }",
                "-    },",
                "     \"assert-plus\": {",
                "@@ -121,11 +84,2 @@",
                "     },",
                "-    \"astw\": {",
                "-      \"version\": \"2.2.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/astw/-/astw-2.2.0.tgz\",",
                "-      \"integrity\": \"sha1-e9QXhNMkk5h66yOba04cV6hzuRc=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"acorn\": \"4.0.13\"",
                "-      }",
                "-    },",
                "     \"async\": {",
                "@@ -171,8 +125,2 @@",
                "     },",
                "-    \"base64-js\": {",
                "-      \"version\": \"0.0.8\",",
                "-      \"resolved\": \"https://registry.npmjs.org/base64-js/-/base64-js-0.0.8.tgz\",",
                "-      \"integrity\": \"sha1-EQHpVE9KdrG8OybUUsqW16NeeXg=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"bcrypt-pbkdf\": {",
                "@@ -255,362 +203,2 @@",
                "     },",
                "-    \"browser-pack\": {",
                "-      \"version\": \"2.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/browser-pack/-/browser-pack-2.0.1.tgz\",",
                "-      \"integrity\": \"sha1-XRxSf1bFgmd0EcTbKhKGSP9r8VA=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"JSONStream\": \"0.6.4\",",
                "-        \"combine-source-map\": \"0.3.0\",",
                "-        \"through\": \"2.3.8\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"JSONStream\": {",
                "-          \"version\": \"0.6.4\",",
                "-          \"resolved\": \"https://registry.npmjs.org/JSONStream/-/JSONStream-0.6.4.tgz\",",
                "-          \"integrity\": \"sha1-SyyAY/j1Enh7I3X37p22kgj6Lcs=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"jsonparse\": \"0.0.5\",",
                "-            \"through\": \"2.2.7\"",
                "-          },",
                "-          \"dependencies\": {",
                "-            \"through\": {",
                "-              \"version\": \"2.2.7\",",
                "-              \"resolved\": \"https://registry.npmjs.org/through/-/through-2.2.7.tgz\",",
                "-              \"integrity\": \"sha1-bo4hIAGR1OtqmfbwEN9Gqhxusr0=\",",
                "-              \"dev\": true",
                "-            }",
                "-          }",
                "-        }",
                "-      }",
                "-    },",
                "-    \"browser-resolve\": {",
                "-      \"version\": \"1.2.4\",",
                "-      \"resolved\": \"https://registry.npmjs.org/browser-resolve/-/browser-resolve-1.2.4.tgz\",",
                "-      \"integrity\": \"sha1-Wa54IKgpVezTL1+3xGisIcRyOAY=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"resolve\": \"0.6.3\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"resolve\": {",
                "-          \"version\": \"0.6.3\",",
                "-          \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-0.6.3.tgz\",",
                "-          \"integrity\": \"sha1-3ZV5gufnNt699TtYpN2RdUV13UY=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "-    \"browserify\": {",
                "-      \"version\": \"3.46.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/browserify/-/browserify-3.46.1.tgz\",",
                "-      \"integrity\": \"sha1-LC5Kfy9AgXjnjCI7W1ezfCGFrY4=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"JSONStream\": \"0.7.4\",",
                "-        \"assert\": \"1.1.2\",",
                "-        \"browser-pack\": \"2.0.1\",",
                "-        \"browser-resolve\": \"1.2.4\",",
                "-        \"browserify-zlib\": \"0.1.4\",",
                "-        \"buffer\": \"2.1.13\",",
                "-        \"builtins\": \"0.0.7\",",
                "-        \"commondir\": \"0.0.1\",",
                "-        \"concat-stream\": \"1.4.11\",",
                "-        \"console-browserify\": \"1.0.3\",",
                "-        \"constants-browserify\": \"0.0.1\",",
                "-        \"crypto-browserify\": \"1.0.9\",",
                "-        \"deep-equal\": \"0.1.2\",",
                "-        \"defined\": \"0.0.0\",",
                "-        \"deps-sort\": \"0.1.2\",",
                "-        \"derequire\": \"0.8.0\",",
                "-        \"domain-browser\": \"1.1.7\",",
                "-        \"duplexer\": \"0.1.1\",",
                "-        \"events\": \"1.0.2\",",
                "-        \"glob\": \"3.2.11\",",
                "-        \"http-browserify\": \"1.3.2\",",
                "-        \"https-browserify\": \"0.0.1\",",
                "-        \"inherits\": \"2.0.3\",",
                "-        \"insert-module-globals\": \"6.0.0\",",
                "-        \"module-deps\": \"2.0.6\",",
                "-        \"os-browserify\": \"0.1.2\",",
                "-        \"parents\": \"0.0.3\",",
                "-        \"path-browserify\": \"0.0.0\",",
                "-        \"process\": \"0.7.0\",",
                "-        \"punycode\": \"1.2.4\",",
                "-        \"querystring-es3\": \"0.2.0\",",
                "-        \"resolve\": \"0.6.3\",",
                "-        \"shallow-copy\": \"0.0.1\",",
                "-        \"shell-quote\": \"0.0.1\",",
                "-        \"stream-browserify\": \"0.1.3\",",
                "-        \"stream-combiner\": \"0.0.4\",",
                "-        \"string_decoder\": \"0.0.1\",",
                "-        \"subarg\": \"0.0.1\",",
                "-        \"syntax-error\": \"1.1.6\",",
                "-        \"through2\": \"0.4.2\",",
                "-        \"timers-browserify\": \"1.0.3\",",
                "-        \"tty-browserify\": \"0.0.1\",",
                "-        \"umd\": \"2.0.0\",",
                "-        \"url\": \"0.10.3\",",
                "-        \"util\": \"0.10.3\",",
                "-        \"vm-browserify\": \"0.0.4\",",
                "-        \"xtend\": \"3.0.0\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"concat-stream\": {",
                "-          \"version\": \"1.4.11\",",
                "-          \"resolved\": \"https://registry.npmjs.org/concat-stream/-/concat-stream-1.4.11.tgz\",",
                "-          \"integrity\": \"sha512-X3JMh8+4je3U1cQpG87+f9lXHDrqcb2MVLg9L7o8b1UZ0DzhRrUpdn65ttzu10PpJPPI3MQNkis+oha6TSA9Mw==\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"readable-stream\": \"1.1.14\",",
                "-            \"typedarray\": \"0.0.6\"",
                "-          }",
                "-        },",
                "-        \"glob\": {",
                "-          \"version\": \"3.2.11\",",
                "-          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-3.2.11.tgz\",",
                "-          \"integrity\": \"sha1-Spc/Y1uRkPcV0QmH1cAP0oFevj0=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"minimatch\": \"0.3.0\"",
                "-          }",
                "-        },",
                "-        \"isarray\": {",
                "-          \"version\": \"0.0.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",",
                "-          \"integrity\": \"sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"minimatch\": {",
                "-          \"version\": \"0.3.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-0.3.0.tgz\",",
                "-          \"integrity\": \"sha1-J12O2qxPG7MyZHIInnlJyDlGmd0=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"lru-cache\": \"2.7.3\",",
                "-            \"sigmund\": \"1.0.1\"",
                "-          }",
                "-        },",
                "-        \"process\": {",
                "-          \"version\": \"0.7.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/process/-/process-0.7.0.tgz\",",
                "-          \"integrity\": \"sha1-xSIIFho0rfOBI0SuhdPmFQRpOJ0=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"punycode\": {",
                "-          \"version\": \"1.2.4\",",
                "-          \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-1.2.4.tgz\",",
                "-          \"integrity\": \"sha1-VACKyXKux0F13vnLpt9/qdORh0A=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"readable-stream\": {",
                "-          \"version\": \"1.1.14\",",
                "-          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz\",",
                "-          \"integrity\": \"sha1-fPTFTvZI44EwhMY23SB54WbAgdk=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"core-util-is\": \"1.0.2\",",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"isarray\": \"0.0.1\",",
                "-            \"string_decoder\": \"0.10.31\"",
                "-          },",
                "-          \"dependencies\": {",
                "-            \"string_decoder\": {",
                "-              \"version\": \"0.10.31\",",
                "-              \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "-              \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "-              \"dev\": true",
                "-            }",
                "-          }",
                "-        },",
                "-        \"resolve\": {",
                "-          \"version\": \"0.6.3\",",
                "-          \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-0.6.3.tgz\",",
                "-          \"integrity\": \"sha1-3ZV5gufnNt699TtYpN2RdUV13UY=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"string_decoder\": {",
                "-          \"version\": \"0.0.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.0.1.tgz\",",
                "-          \"integrity\": \"sha1-9UctCo0WUOyCN1LSTm/WJ7Ob8UE=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "-    \"browserify-istanbul\": {",
                "-      \"version\": \"0.1.5\",",
                "-      \"resolved\": \"https://registry.npmjs.org/browserify-istanbul/-/browserify-istanbul-0.1.5.tgz\",",
                "-      \"integrity\": \"sha1-AcjjHWo1juUVD0Mhw/KJlalkw58=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"istanbul\": \"0.2.16\",",
                "-        \"minimatch\": \"0.2.14\",",
                "-        \"through\": \"2.3.8\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"async\": {",
                "-          \"version\": \"0.9.2\",",
                "-          \"resolved\": \"https://registry.npmjs.org/async/-/async-0.9.2.tgz\",",
                "-          \"integrity\": \"sha1-rqdNXmHB+JlhO/ZL2mbUx48v0X0=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"escodegen\": {",
                "-          \"version\": \"1.3.3\",",
                "-          \"resolved\": \"https://registry.npmjs.org/escodegen/-/escodegen-1.3.3.tgz\",",
                "-          \"integrity\": \"sha1-8CQBb1qI4Eb9EgBQVek5gC5sXyM=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"esprima\": \"1.1.1\",",
                "-            \"estraverse\": \"1.5.1\",",
                "-            \"esutils\": \"1.0.0\",",
                "-            \"source-map\": \"0.1.43\"",
                "-          },",
                "-          \"dependencies\": {",
                "-            \"esprima\": {",
                "-              \"version\": \"1.1.1\",",
                "-              \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-1.1.1.tgz\",",
                "-              \"integrity\": \"sha1-W28VR/TRAuZw4UDFCb5ncdautUk=\",",
                "-              \"dev\": true",
                "-            }",
                "-          }",
                "-        },",
                "-        \"esprima\": {",
                "-          \"version\": \"1.2.5\",",
                "-          \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-1.2.5.tgz\",",
                "-          \"integrity\": \"sha1-CZNQL+r2aBODJXVvMPmlH+7sEek=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"estraverse\": {",
                "-          \"version\": \"1.5.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-1.5.1.tgz\",",
                "-          \"integrity\": \"sha1-hno+jlip+EYYr7bC3bzZFrfLr3E=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"esutils\": {",
                "-          \"version\": \"1.0.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-1.0.0.tgz\",",
                "-          \"integrity\": \"sha1-gVHTWOIMisx/t0XnRywAJf5JZXA=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"handlebars\": {",
                "-          \"version\": \"1.3.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/handlebars/-/handlebars-1.3.0.tgz\",",
                "-          \"integrity\": \"sha1-npsTCpPjiUkTItl1zz7BgYw3zjQ=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"optimist\": \"0.3.7\",",
                "-            \"uglify-js\": \"2.3.6\"",
                "-          }",
                "-        },",
                "-        \"istanbul\": {",
                "-          \"version\": \"0.2.16\",",
                "-          \"resolved\": \"https://registry.npmjs.org/istanbul/-/istanbul-0.2.16.tgz\",",
                "-          \"integrity\": \"sha1-hwVFoNT0tM4WEDnp6AWpjCxwC9k=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"abbrev\": \"1.0.9\",",
                "-            \"async\": \"0.9.2\",",
                "-            \"escodegen\": \"1.3.3\",",
                "-            \"esprima\": \"1.2.5\",",
                "-            \"fileset\": \"0.1.8\",",
                "-            \"handlebars\": \"1.3.0\",",
                "-            \"js-yaml\": \"3.11.0\",",
                "-            \"mkdirp\": \"0.5.1\",",
                "-            \"nopt\": \"3.0.6\",",
                "-            \"resolve\": \"0.7.4\",",
                "-            \"which\": \"1.0.9\",",
                "-            \"wordwrap\": \"0.0.3\"",
                "-          }",
                "-        },",
                "-        \"minimatch\": {",
                "-          \"version\": \"0.2.14\",",
                "-          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-0.2.14.tgz\",",
                "-          \"integrity\": \"sha1-x054BXT2PG+aCQ6Q775u9TpqdWo=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"lru-cache\": \"2.7.3\",",
                "-            \"sigmund\": \"1.0.1\"",
                "-          }",
                "-        },",
                "-        \"optimist\": {",
                "-          \"version\": \"0.3.7\",",
                "-          \"resolved\": \"https://registry.npmjs.org/optimist/-/optimist-0.3.7.tgz\",",
                "-          \"integrity\": \"sha1-yQlBrVnkJzMokjB00s8ufLxuwNk=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"wordwrap\": \"0.0.3\"",
                "-          }",
                "-        },",
                "-        \"resolve\": {",
                "-          \"version\": \"0.7.4\",",
                "-          \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-0.7.4.tgz\",",
                "-          \"integrity\": \"sha1-OVqe+ehz+/4SvRRAi9kbuTYAPWk=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"source-map\": {",
                "-          \"version\": \"0.1.43\",",
                "-          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.1.43.tgz\",",
                "-          \"integrity\": \"sha1-wkvBRspRfBRx9drL4lcbK3+eM0Y=\",",
                "-          \"dev\": true,",
                "-          \"optional\": true,",
                "-          \"requires\": {",
                "-            \"amdefine\": \"1.0.1\"",
                "-          }",
                "-        },",
                "-        \"uglify-js\": {",
                "-          \"version\": \"2.3.6\",",
                "-          \"resolved\": \"https://registry.npmjs.org/uglify-js/-/uglify-js-2.3.6.tgz\",",
                "-          \"integrity\": \"sha1-+gmEdwtCi3qbKoBY9GNV0U/vIRo=\",",
                "-          \"dev\": true,",
                "-          \"optional\": true,",
                "-          \"requires\": {",
                "-            \"async\": \"0.2.10\",",
                "-            \"optimist\": \"0.3.7\",",
                "-            \"source-map\": \"0.1.43\"",
                "-          },",
                "-          \"dependencies\": {",
                "-            \"async\": {",
                "-              \"version\": \"0.2.10\",",
                "-              \"resolved\": \"https://registry.npmjs.org/async/-/async-0.2.10.tgz\",",
                "-              \"integrity\": \"sha1-trvgsGdLnXGXCMo43owjfLUmw9E=\",",
                "-              \"dev\": true,",
                "-              \"optional\": true",
                "-            }",
                "-          }",
                "-        },",
                "-        \"which\": {",
                "-          \"version\": \"1.0.9\",",
                "-          \"resolved\": \"https://registry.npmjs.org/which/-/which-1.0.9.tgz\",",
                "-          \"integrity\": \"sha1-RgwdoPgQED0DIam2M6+eV15kSG8=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"wordwrap\": {",
                "-          \"version\": \"0.0.3\",",
                "-          \"resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz\",",
                "-          \"integrity\": \"sha1-o9XabNXAvAAI03I0u68b7WMFkQc=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "-    \"browserify-zlib\": {",
                "-      \"version\": \"0.1.4\",",
                "-      \"resolved\": \"https://registry.npmjs.org/browserify-zlib/-/browserify-zlib-0.1.4.tgz\",",
                "-      \"integrity\": \"sha1-uzX4pRn2AOD6a4SFJByXnQFB+y0=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"pako\": \"0.2.9\"",
                "-      }",
                "-    },",
                "-    \"buffer\": {",
                "-      \"version\": \"2.1.13\",",
                "-      \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-2.1.13.tgz\",",
                "-      \"integrity\": \"sha1-yIg46/efMLi0pwd4hHC+qKYsI1U=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"base64-js\": \"0.0.8\",",
                "-        \"ieee754\": \"1.1.8\"",
                "-      }",
                "-    },",
                "     \"buffer-equals\": {",
                "@@ -621,14 +209,2 @@",
                "     },",
                "-    \"builtins\": {",
                "-      \"version\": \"0.0.7\",",
                "-      \"resolved\": \"https://registry.npmjs.org/builtins/-/builtins-0.0.7.tgz\",",
                "-      \"integrity\": \"sha1-NVIZzWzxjb58Acx/0tznZc/cVJo=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"callsite\": {",
                "-      \"version\": \"1.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/callsite/-/callsite-1.0.0.tgz\",",
                "-      \"integrity\": \"sha1-KAOY5dZkvXQDi28JBRU+borxvCA=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"camelcase\": {",
                "@@ -637,3 +213,4 @@",
                "       \"integrity\": \"sha1-m7UwTS4LVmmLLHWLCKPqqdqlijk=\",",
                "-      \"dev\": true",
                "+      \"dev\": true,",
                "+      \"optional\": true",
                "     },",
                "@@ -665,23 +242,2 @@",
                "     },",
                "-    \"chalk\": {",
                "-      \"version\": \"1.1.3\",",
                "-      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz\",",
                "-      \"integrity\": \"sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"ansi-styles\": \"2.2.1\",",
                "-        \"escape-string-regexp\": \"1.0.5\",",
                "-        \"has-ansi\": \"2.0.0\",",
                "-        \"strip-ansi\": \"3.0.1\",",
                "-        \"supports-color\": \"2.0.0\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"supports-color\": {",
                "-          \"version\": \"2.0.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz\",",
                "-          \"integrity\": \"sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "     \"chownr\": {",
                "@@ -725,24 +281,2 @@",
                "     },",
                "-    \"combine-source-map\": {",
                "-      \"version\": \"0.3.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/combine-source-map/-/combine-source-map-0.3.0.tgz\",",
                "-      \"integrity\": \"sha1-2edPWT2c1DgHMSy12EbUUe+qnrc=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"convert-source-map\": \"0.3.5\",",
                "-        \"inline-source-map\": \"0.3.1\",",
                "-        \"source-map\": \"0.1.43\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"source-map\": {",
                "-          \"version\": \"0.1.43\",",
                "-          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.1.43.tgz\",",
                "-          \"integrity\": \"sha1-wkvBRspRfBRx9drL4lcbK3+eM0Y=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"amdefine\": \"1.0.1\"",
                "-          }",
                "-        }",
                "-      }",
                "-    },",
                "     \"combined-stream\": {",
                "@@ -762,8 +296,2 @@",
                "     },",
                "-    \"commondir\": {",
                "-      \"version\": \"0.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/commondir/-/commondir-0.0.1.tgz\",",
                "-      \"integrity\": \"sha1-ifAP3NUbUZxXhzP+xWPmptp/W+I=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"concat-map\": {",
                "@@ -797,8 +325,2 @@",
                "     },",
                "-    \"console-browserify\": {",
                "-      \"version\": \"1.0.3\",",
                "-      \"resolved\": \"https://registry.npmjs.org/console-browserify/-/console-browserify-1.0.3.tgz\",",
                "-      \"integrity\": \"sha1-04mNLDqTEC82QZf4h0tPkrUoao4=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"console-control-strings\": {",
                "@@ -809,14 +331,2 @@",
                "     },",
                "-    \"constants-browserify\": {",
                "-      \"version\": \"0.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/constants-browserify/-/constants-browserify-0.0.1.tgz\",",
                "-      \"integrity\": \"sha1-kld9tSe6bEzwpFaNhLwDH0QeIfI=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"convert-source-map\": {",
                "-      \"version\": \"0.3.5\",",
                "-      \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-0.3.5.tgz\",",
                "-      \"integrity\": \"sha1-8dgClQr33SYxof6+BZZVDIarMZA=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"core-util-is\": {",
                "@@ -847,8 +357,2 @@",
                "     },",
                "-    \"crypto-browserify\": {",
                "-      \"version\": \"1.0.9\",",
                "-      \"resolved\": \"https://registry.npmjs.org/crypto-browserify/-/crypto-browserify-1.0.9.tgz\",",
                "-      \"integrity\": \"sha1-zFRJaF37hesRyYKKzHy4erW7/MA=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"dashdash\": {",
                "@@ -875,9 +379,4 @@",
                "       \"integrity\": \"sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"deep-equal\": {",
                "-      \"version\": \"0.1.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/deep-equal/-/deep-equal-0.1.2.tgz\",",
                "-      \"integrity\": \"sha1-skbCuApXCkfBG+HZvRBw7IeLh84=\",",
                "-      \"dev\": true",
                "+      \"dev\": true,",
                "+      \"optional\": true",
                "     },",
                "@@ -913,8 +412,2 @@",
                "     },",
                "-    \"defined\": {",
                "-      \"version\": \"0.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/defined/-/defined-0.0.0.tgz\",",
                "-      \"integrity\": \"sha1-817qfXBekzuvE7LwOz+D2SFAOz4=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"delayed-stream\": {",
                "@@ -931,206 +424,37 @@",
                "     },",
                "-    \"deps-sort\": {",
                "-      \"version\": \"0.1.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/deps-sort/-/deps-sort-0.1.2.tgz\",",
                "-      \"integrity\": \"sha1-2qL7YUoXyWN9gB4vVTOa43DzYRo=\",",
                "+    \"ecc-jsbn\": {",
                "+      \"version\": \"0.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.1.tgz\",",
                "+      \"integrity\": \"sha1-D8c6ntXw1Tw4GTOYUj735UN3dQU=\",",
                "       \"dev\": true,",
                "+      \"optional\": true,",
                "       \"requires\": {",
                "-        \"JSONStream\": \"0.6.4\",",
                "-        \"minimist\": \"0.0.10\",",
                "-        \"through\": \"2.3.8\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"JSONStream\": {",
                "-          \"version\": \"0.6.4\",",
                "-          \"resolved\": \"https://registry.npmjs.org/JSONStream/-/JSONStream-0.6.4.tgz\",",
                "-          \"integrity\": \"sha1-SyyAY/j1Enh7I3X37p22kgj6Lcs=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"jsonparse\": \"0.0.5\",",
                "-            \"through\": \"2.2.7\"",
                "-          },",
                "-          \"dependencies\": {",
                "-            \"through\": {",
                "-              \"version\": \"2.2.7\",",
                "-              \"resolved\": \"https://registry.npmjs.org/through/-/through-2.2.7.tgz\",",
                "-              \"integrity\": \"sha1-bo4hIAGR1OtqmfbwEN9Gqhxusr0=\",",
                "-              \"dev\": true",
                "-            }",
                "-          }",
                "-        }",
                "+        \"jsbn\": \"0.1.1\"",
                "       }",
                "     },",
                "-    \"derequire\": {",
                "-      \"version\": \"0.8.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/derequire/-/derequire-0.8.0.tgz\",",
                "-      \"integrity\": \"sha1-wffx2izt5Ere3gRzePA/RE6cTA0=\",",
                "+    \"ee-first\": {",
                "+      \"version\": \"1.1.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",",
                "+      \"integrity\": \"sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"encodeurl\": {",
                "+      \"version\": \"1.0.2\",",
                "+      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",",
                "+      \"integrity\": \"sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"end-of-stream\": {",
                "+      \"version\": \"1.4.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.1.tgz\",",
                "+      \"integrity\": \"sha512-1MkrZNvWTKCaigbn+W15elq2BB/L22nqrSY5DKlo3X6+vclJm8Bb5djXJBmEX6fS3+zCh/F4VBK5Z2KxJt4s2Q==\",",
                "       \"dev\": true,",
                "       \"requires\": {",
                "-        \"esprima-fb\": \"3001.1.0-dev-harmony-fb\",",
                "-        \"esrefactor\": \"0.1.0\",",
                "-        \"estraverse\": \"1.5.1\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"esprima-fb\": {",
                "-          \"version\": \"3001.1.0-dev-harmony-fb\",",
                "-          \"resolved\": \"https://registry.npmjs.org/esprima-fb/-/esprima-fb-3001.0001.0000-dev-harmony-fb.tgz\",",
                "-          \"integrity\": \"sha1-t303q8046gt3Qmu4vCkizmtCZBE=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"estraverse\": {",
                "-          \"version\": \"1.5.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-1.5.1.tgz\",",
                "-          \"integrity\": \"sha1-hno+jlip+EYYr7bC3bzZFrfLr3E=\",",
                "-          \"dev\": true",
                "-        }",
                "+        \"once\": \"1.4.0\"",
                "       }",
                "     },",
                "-    \"detective\": {",
                "-      \"version\": \"3.1.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/detective/-/detective-3.1.0.tgz\",",
                "-      \"integrity\": \"sha1-d3gkRKt1K4jKG+Lp0KA5Xx2iXu0=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"escodegen\": \"1.1.0\",",
                "-        \"esprima-fb\": \"3001.1.0-dev-harmony-fb\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"escodegen\": {",
                "-          \"version\": \"1.1.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/escodegen/-/escodegen-1.1.0.tgz\",",
                "-          \"integrity\": \"sha1-xmOSP24gqtSNDA+knzHG1PSTYM8=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"esprima\": \"1.0.4\",",
                "-            \"estraverse\": \"1.5.1\",",
                "-            \"esutils\": \"1.0.0\",",
                "-            \"source-map\": \"0.1.43\"",
                "-          },",
                "-          \"dependencies\": {",
                "-            \"esprima\": {",
                "-              \"version\": \"1.0.4\",",
                "-              \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-1.0.4.tgz\",",
                "-              \"integrity\": \"sha1-n1V+CPw7TSbs6d00+Pv0drYlha0=\",",
                "-              \"dev\": true",
                "-            }",
                "-          }",
                "-        },",
                "-        \"esprima-fb\": {",
                "-          \"version\": \"3001.1.0-dev-harmony-fb\",",
                "-          \"resolved\": \"https://registry.npmjs.org/esprima-fb/-/esprima-fb-3001.0001.0000-dev-harmony-fb.tgz\",",
                "-          \"integrity\": \"sha1-t303q8046gt3Qmu4vCkizmtCZBE=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"estraverse\": {",
                "-          \"version\": \"1.5.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-1.5.1.tgz\",",
                "-          \"integrity\": \"sha1-hno+jlip+EYYr7bC3bzZFrfLr3E=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"esutils\": {",
                "-          \"version\": \"1.0.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-1.0.0.tgz\",",
                "-          \"integrity\": \"sha1-gVHTWOIMisx/t0XnRywAJf5JZXA=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"source-map\": {",
                "-          \"version\": \"0.1.43\",",
                "-          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.1.43.tgz\",",
                "-          \"integrity\": \"sha1-wkvBRspRfBRx9drL4lcbK3+eM0Y=\",",
                "-          \"dev\": true,",
                "-          \"optional\": true,",
                "-          \"requires\": {",
                "-            \"amdefine\": \"1.0.1\"",
                "-          }",
                "-        }",
                "-      }",
                "-    },",
                "-    \"dom-walk\": {",
                "-      \"version\": \"0.1.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/dom-walk/-/dom-walk-0.1.1.tgz\",",
                "-      \"integrity\": \"sha1-ZyIm3HTI95mtNTB9+TaroRrNYBg=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"domain-browser\": {",
                "-      \"version\": \"1.1.7\",",
                "-      \"resolved\": \"https://registry.npmjs.org/domain-browser/-/domain-browser-1.1.7.tgz\",",
                "-      \"integrity\": \"sha1-hnqksJP6oF8d4IwG9NeyH9+GmLw=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"duplexer\": {",
                "-      \"version\": \"0.1.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/duplexer/-/duplexer-0.1.1.tgz\",",
                "-      \"integrity\": \"sha1-rOb/gIwc5mtX0ev5eXessCM0z8E=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"duplexer2\": {",
                "-      \"version\": \"0.0.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/duplexer2/-/duplexer2-0.0.2.tgz\",",
                "-      \"integrity\": \"sha1-xhTc9n4vsUmVqRcR5aYX6KYKMds=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"readable-stream\": \"1.1.14\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"isarray\": {",
                "-          \"version\": \"0.0.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",",
                "-          \"integrity\": \"sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"readable-stream\": {",
                "-          \"version\": \"1.1.14\",",
                "-          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz\",",
                "-          \"integrity\": \"sha1-fPTFTvZI44EwhMY23SB54WbAgdk=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"core-util-is\": \"1.0.2\",",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"isarray\": \"0.0.1\",",
                "-            \"string_decoder\": \"0.10.31\"",
                "-          }",
                "-        },",
                "-        \"string_decoder\": {",
                "-          \"version\": \"0.10.31\",",
                "-          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "-          \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "-    \"ecc-jsbn\": {",
                "-      \"version\": \"0.1.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.1.tgz\",",
                "-      \"integrity\": \"sha1-D8c6ntXw1Tw4GTOYUj735UN3dQU=\",",
                "-      \"dev\": true,",
                "-      \"optional\": true,",
                "-      \"requires\": {",
                "-        \"jsbn\": \"0.1.1\"",
                "-      }",
                "-    },",
                "-    \"ee-first\": {",
                "-      \"version\": \"1.1.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",",
                "-      \"integrity\": \"sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"encodeurl\": {",
                "-      \"version\": \"1.0.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",",
                "-      \"integrity\": \"sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"end-of-stream\": {",
                "-      \"version\": \"1.4.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.1.tgz\",",
                "-      \"integrity\": \"sha512-1MkrZNvWTKCaigbn+W15elq2BB/L22nqrSY5DKlo3X6+vclJm8Bb5djXJBmEX6fS3+zCh/F4VBK5Z2KxJt4s2Q==\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"once\": \"1.4.0\"",
                "-      }",
                "-    },",
                "-    \"es-abstract\": {",
                "-      \"version\": \"1.10.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/es-abstract/-/es-abstract-1.10.0.tgz\",",
                "-      \"integrity\": \"sha512-/uh/DhdqIOSkAWifU+8nG78vlQxdLckUdI/sPgy0VhuXi2qJ7T8czBmqIYtLQVpCIFYafChnsRsB5pyb1JdmCQ==\",",
                "+    \"es-abstract\": {",
                "+      \"version\": \"1.10.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/es-abstract/-/es-abstract-1.10.0.tgz\",",
                "+      \"integrity\": \"sha512-/uh/DhdqIOSkAWifU+8nG78vlQxdLckUdI/sPgy0VhuXi2qJ7T8czBmqIYtLQVpCIFYafChnsRsB5pyb1JdmCQ==\",",
                "       \"dev\": true,",
                "@@ -1186,11 +510,2 @@",
                "     },",
                "-    \"escope\": {",
                "-      \"version\": \"0.0.16\",",
                "-      \"resolved\": \"https://registry.npmjs.org/escope/-/escope-0.0.16.tgz\",",
                "-      \"integrity\": \"sha1-QYx6CvynIdr+ZZGT/Zhig+dGU48=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"estraverse\": \"1.9.3\"",
                "-      }",
                "-    },",
                "     \"esprima\": {",
                "@@ -1201,27 +516,2 @@",
                "     },",
                "-    \"esrefactor\": {",
                "-      \"version\": \"0.1.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/esrefactor/-/esrefactor-0.1.0.tgz\",",
                "-      \"integrity\": \"sha1-0UJ5WigjOauB6Ta1t6IbEb8ZexM=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"escope\": \"0.0.16\",",
                "-        \"esprima\": \"1.0.4\",",
                "-        \"estraverse\": \"0.0.4\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"esprima\": {",
                "-          \"version\": \"1.0.4\",",
                "-          \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-1.0.4.tgz\",",
                "-          \"integrity\": \"sha1-n1V+CPw7TSbs6d00+Pv0drYlha0=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"estraverse\": {",
                "-          \"version\": \"0.0.4\",",
                "-          \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-0.0.4.tgz\",",
                "-          \"integrity\": \"sha1-AaCTLf7ldGhKWYr1pnw7+bZCjbI=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "     \"estraverse\": {",
                "@@ -1238,8 +528,2 @@",
                "     },",
                "-    \"events\": {",
                "-      \"version\": \"1.0.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/events/-/events-1.0.2.tgz\",",
                "-      \"integrity\": \"sha1-dYSdz+k9EPsFfDAFWv29UdBqjiQ=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"expand-template\": {",
                "@@ -1318,46 +602,2 @@",
                "     },",
                "-    \"fileset\": {",
                "-      \"version\": \"0.1.8\",",
                "-      \"resolved\": \"https://registry.npmjs.org/fileset/-/fileset-0.1.8.tgz\",",
                "-      \"integrity\": \"sha1-UGuRqTluqn4y+0KoQHfHoMc2t0E=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"glob\": \"3.2.11\",",
                "-        \"minimatch\": \"0.4.0\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"glob\": {",
                "-          \"version\": \"3.2.11\",",
                "-          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-3.2.11.tgz\",",
                "-          \"integrity\": \"sha1-Spc/Y1uRkPcV0QmH1cAP0oFevj0=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"minimatch\": \"0.3.0\"",
                "-          },",
                "-          \"dependencies\": {",
                "-            \"minimatch\": {",
                "-              \"version\": \"0.3.0\",",
                "-              \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-0.3.0.tgz\",",
                "-              \"integrity\": \"sha1-J12O2qxPG7MyZHIInnlJyDlGmd0=\",",
                "-              \"dev\": true,",
                "-              \"requires\": {",
                "-                \"lru-cache\": \"2.7.3\",",
                "-                \"sigmund\": \"1.0.1\"",
                "-              }",
                "-            }",
                "-          }",
                "-        },",
                "-        \"minimatch\": {",
                "-          \"version\": \"0.4.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-0.4.0.tgz\",",
                "-          \"integrity\": \"sha1-vSx9Bg0sjI/Xzefx8u0tWycP2xs=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"lru-cache\": \"2.7.3\",",
                "-            \"sigmund\": \"1.0.1\"",
                "-          }",
                "-        }",
                "-      }",
                "-    },",
                "     \"finalhandler\": {",
                "@@ -1459,17 +699,2 @@",
                "     },",
                "-    \"generate-function\": {",
                "-      \"version\": \"2.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/generate-function/-/generate-function-2.0.0.tgz\",",
                "-      \"integrity\": \"sha1-aFj+fAlpt9TpCTM3ZHrHn2DfvnQ=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"generate-object-property\": {",
                "-      \"version\": \"1.2.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/generate-object-property/-/generate-object-property-1.2.0.tgz\",",
                "-      \"integrity\": \"sha1-nA4cQDCM6AT0eDYYuTf6iPmdUNA=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"is-property\": \"1.0.2\"",
                "-      }",
                "-    },",
                "     \"getpass\": {",
                "@@ -1502,20 +727,2 @@",
                "     },",
                "-    \"global\": {",
                "-      \"version\": \"4.3.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/global/-/global-4.3.2.tgz\",",
                "-      \"integrity\": \"sha1-52mJJopsdMOJCLEwWxD8DjlOnQ8=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"min-document\": \"2.19.0\",",
                "-        \"process\": \"0.5.2\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"process\": {",
                "-          \"version\": \"0.5.2\",",
                "-          \"resolved\": \"https://registry.npmjs.org/process/-/process-0.5.2.tgz\",",
                "-          \"integrity\": \"sha1-FjjYqONML0QKkduVq5rrZ3/Bhc8=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "     \"graceful-fs\": {",
                "@@ -1574,11 +781,2 @@",
                "     },",
                "-    \"has-ansi\": {",
                "-      \"version\": \"2.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz\",",
                "-      \"integrity\": \"sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"ansi-regex\": \"2.1.1\"",
                "-      }",
                "-    },",
                "     \"has-flag\": {",
                "@@ -1623,12 +821,2 @@",
                "     },",
                "-    \"http-browserify\": {",
                "-      \"version\": \"1.3.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/http-browserify/-/http-browserify-1.3.2.tgz\",",
                "-      \"integrity\": \"sha1-tWLDRHk0mmkNemWX30la76jGBPU=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"Base64\": \"0.2.1\",",
                "-        \"inherits\": \"2.0.3\"",
                "-      }",
                "-    },",
                "     \"http-signature\": {",
                "@@ -1644,20 +832,2 @@",
                "     },",
                "-    \"https-browserify\": {",
                "-      \"version\": \"0.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/https-browserify/-/https-browserify-0.0.1.tgz\",",
                "-      \"integrity\": \"sha1-P5E2XKvmC3ftDruiS0VOPgnZWoI=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"ieee754\": {",
                "-      \"version\": \"1.1.8\",",
                "-      \"resolved\": \"https://registry.npmjs.org/ieee754/-/ieee754-1.1.8.tgz\",",
                "-      \"integrity\": \"sha1-vjPUCsEO8ZJnAfbwii2G+/0a0+Q=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"indexof\": {",
                "-      \"version\": \"0.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/indexof/-/indexof-0.0.1.tgz\",",
                "-      \"integrity\": \"sha1-gtwzbSMrkGIXnQWrMpOmYFn9Q10=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"inflight\": {",
                "@@ -1684,79 +854,2 @@",
                "     },",
                "-    \"inline-source-map\": {",
                "-      \"version\": \"0.3.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/inline-source-map/-/inline-source-map-0.3.1.tgz\",",
                "-      \"integrity\": \"sha1-pSi1FOaJ/OkNswiehw2S9Sestes=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"source-map\": \"0.3.0\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"source-map\": {",
                "-          \"version\": \"0.3.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.3.0.tgz\",",
                "-          \"integrity\": \"sha1-hYb7mloAXltQHiHNGLbyG0V60fk=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"amdefine\": \"1.0.1\"",
                "-          }",
                "-        }",
                "-      }",
                "-    },",
                "-    \"insert-module-globals\": {",
                "-      \"version\": \"6.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/insert-module-globals/-/insert-module-globals-6.0.0.tgz\",",
                "-      \"integrity\": \"sha1-7orrne4WgZ4zqhRYilWIJK8MFdw=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"JSONStream\": \"0.7.4\",",
                "-        \"concat-stream\": \"1.4.11\",",
                "-        \"lexical-scope\": \"1.1.1\",",
                "-        \"process\": \"0.6.0\",",
                "-        \"through\": \"2.3.8\",",
                "-        \"xtend\": \"3.0.0\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"concat-stream\": {",
                "-          \"version\": \"1.4.11\",",
                "-          \"resolved\": \"https://registry.npmjs.org/concat-stream/-/concat-stream-1.4.11.tgz\",",
                "-          \"integrity\": \"sha512-X3JMh8+4je3U1cQpG87+f9lXHDrqcb2MVLg9L7o8b1UZ0DzhRrUpdn65ttzu10PpJPPI3MQNkis+oha6TSA9Mw==\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"readable-stream\": \"1.1.14\",",
                "-            \"typedarray\": \"0.0.6\"",
                "-          }",
                "-        },",
                "-        \"isarray\": {",
                "-          \"version\": \"0.0.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",",
                "-          \"integrity\": \"sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"process\": {",
                "-          \"version\": \"0.6.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/process/-/process-0.6.0.tgz\",",
                "-          \"integrity\": \"sha1-fdm+gP+q7dTLYo8YJ/HLq23AkY8=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"readable-stream\": {",
                "-          \"version\": \"1.1.14\",",
                "-          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz\",",
                "-          \"integrity\": \"sha1-fPTFTvZI44EwhMY23SB54WbAgdk=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"core-util-is\": \"1.0.2\",",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"isarray\": \"0.0.1\",",
                "-            \"string_decoder\": \"0.10.31\"",
                "-          }",
                "-        },",
                "-        \"string_decoder\": {",
                "-          \"version\": \"0.10.31\",",
                "-          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "-          \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "     \"is-buffer\": {",
                "@@ -1794,35 +887,2 @@",
                "     },",
                "-    \"is-my-ip-valid\": {",
                "-      \"version\": \"1.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/is-my-ip-valid/-/is-my-ip-valid-1.0.0.tgz\",",
                "-      \"integrity\": \"sha512-gmh/eWXROncUzRnIa1Ubrt5b8ep/MGSnfAUI3aRp+sqTCs1tv1Isl8d8F6JmkN3dXKc3ehZMrtiPN9eL03NuaQ==\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"is-my-json-valid\": {",
                "-      \"version\": \"2.17.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/is-my-json-valid/-/is-my-json-valid-2.17.2.tgz\",",
                "-      \"integrity\": \"sha512-IBhBslgngMQN8DDSppmgDv7RNrlFotuuDsKcrCP3+HbFaVivIBU7u9oiiErw8sH4ynx3+gOGQ3q2otkgiSi6kg==\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"generate-function\": \"2.0.0\",",
                "-        \"generate-object-property\": \"1.2.0\",",
                "-        \"is-my-ip-valid\": \"1.0.0\",",
                "-        \"jsonpointer\": \"4.0.1\",",
                "-        \"xtend\": \"4.0.1\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"xtend\": {",
                "-          \"version\": \"4.0.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz\",",
                "-          \"integrity\": \"sha1-pcbVMr5lbiPbgg77lDofBJmNY68=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "-    \"is-property\": {",
                "-      \"version\": \"1.0.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/is-property/-/is-property-1.0.2.tgz\",",
                "-      \"integrity\": \"sha1-V/4cTkhHTt1lsJkR8msc1Ald2oQ=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"is-regex\": {",
                "@@ -1975,73 +1035,2 @@",
                "     },",
                "-    \"jsonparse\": {",
                "-      \"version\": \"0.0.5\",",
                "-      \"resolved\": \"https://registry.npmjs.org/jsonparse/-/jsonparse-0.0.5.tgz\",",
                "-      \"integrity\": \"sha1-MwVCrT8KZUZlt3jz6y2an6UHrGQ=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"jsonpointer\": {",
                "-      \"version\": \"4.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/jsonpointer/-/jsonpointer-4.0.1.tgz\",",
                "-      \"integrity\": \"sha1-T9kss04OnbPInIYi7PUfm5eMbLk=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"jsonstream2\": {",
                "-      \"version\": \"1.1.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/jsonstream2/-/jsonstream2-1.1.1.tgz\",",
                "-      \"integrity\": \"sha1-vnDtBy0HkiyQbpbBAOI6I5dG19k=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"jsonparse\": \"0.0.6\",",
                "-        \"through2\": \"0.6.5\",",
                "-        \"type-component\": \"0.0.1\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"isarray\": {",
                "-          \"version\": \"0.0.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",",
                "-          \"integrity\": \"sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"jsonparse\": {",
                "-          \"version\": \"0.0.6\",",
                "-          \"resolved\": \"https://registry.npmjs.org/jsonparse/-/jsonparse-0.0.6.tgz\",",
                "-          \"integrity\": \"sha1-q1mfGTJNSuF4+iGpMBkqsRq2Gk4=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"readable-stream\": {",
                "-          \"version\": \"1.0.34\",",
                "-          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz\",",
                "-          \"integrity\": \"sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"core-util-is\": \"1.0.2\",",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"isarray\": \"0.0.1\",",
                "-            \"string_decoder\": \"0.10.31\"",
                "-          }",
                "-        },",
                "-        \"string_decoder\": {",
                "-          \"version\": \"0.10.31\",",
                "-          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "-          \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"through2\": {",
                "-          \"version\": \"0.6.5\",",
                "-          \"resolved\": \"https://registry.npmjs.org/through2/-/through2-0.6.5.tgz\",",
                "-          \"integrity\": \"sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"readable-stream\": \"1.0.34\",",
                "-            \"xtend\": \"4.0.1\"",
                "-          }",
                "-        },",
                "-        \"xtend\": {",
                "-          \"version\": \"4.0.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz\",",
                "-          \"integrity\": \"sha1-pcbVMr5lbiPbgg77lDofBJmNY68=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "     \"jsprim\": {",
                "@@ -2099,17 +1088,2 @@",
                "     },",
                "-    \"lexical-scope\": {",
                "-      \"version\": \"1.1.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/lexical-scope/-/lexical-scope-1.1.1.tgz\",",
                "-      \"integrity\": \"sha1-3rrBBnQ18TWdkPz9npS8su5Hsr8=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"astw\": \"2.2.0\"",
                "-      }",
                "-    },",
                "-    \"lodash\": {",
                "-      \"version\": \"4.17.5\",",
                "-      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.5.tgz\",",
                "-      \"integrity\": \"sha512-svL3uiZf1RwhH+cWrfZn3A4+U58wbP0tGVTLQPbjplZxZ8ROD9VLuNgsRniTlLe7OlSqR79RUehXgpBW/s0IQw==\",",
                "-      \"dev\": true",
                "-    },",
                "     \"longest\": {",
                "@@ -2120,8 +1094,2 @@",
                "     },",
                "-    \"lru-cache\": {",
                "-      \"version\": \"2.7.3\",",
                "-      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-2.7.3.tgz\",",
                "-      \"integrity\": \"sha1-bUUk6LlV+V1PW1iFHOId1y+06VI=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"marked\": {",
                "@@ -2147,11 +1115,2 @@",
                "     },",
                "-    \"min-document\": {",
                "-      \"version\": \"2.19.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/min-document/-/min-document-2.19.0.tgz\",",
                "-      \"integrity\": \"sha1-e9KC4/WELtKVu3SM3Z8f+iyCRoU=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"dom-walk\": \"0.1.1\"",
                "-      }",
                "-    },",
                "     \"minimatch\": {",
                "@@ -2188,81 +1147,2 @@",
                "     },",
                "-    \"module-deps\": {",
                "-      \"version\": \"2.0.6\",",
                "-      \"resolved\": \"https://registry.npmjs.org/module-deps/-/module-deps-2.0.6.tgz\",",
                "-      \"integrity\": \"sha1-uZkyHHOsM1gPAHEsDzB1/cpCVj8=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"JSONStream\": \"0.7.4\",",
                "-        \"browser-resolve\": \"1.2.4\",",
                "-        \"concat-stream\": \"1.4.11\",",
                "-        \"detective\": \"3.1.0\",",
                "-        \"duplexer2\": \"0.0.2\",",
                "-        \"inherits\": \"2.0.3\",",
                "-        \"minimist\": \"0.0.10\",",
                "-        \"parents\": \"0.0.2\",",
                "-        \"readable-stream\": \"1.1.14\",",
                "-        \"resolve\": \"0.6.3\",",
                "-        \"stream-combiner\": \"0.1.0\",",
                "-        \"through2\": \"0.4.2\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"concat-stream\": {",
                "-          \"version\": \"1.4.11\",",
                "-          \"resolved\": \"https://registry.npmjs.org/concat-stream/-/concat-stream-1.4.11.tgz\",",
                "-          \"integrity\": \"sha512-X3JMh8+4je3U1cQpG87+f9lXHDrqcb2MVLg9L7o8b1UZ0DzhRrUpdn65ttzu10PpJPPI3MQNkis+oha6TSA9Mw==\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"readable-stream\": \"1.1.14\",",
                "-            \"typedarray\": \"0.0.6\"",
                "-          }",
                "-        },",
                "-        \"isarray\": {",
                "-          \"version\": \"0.0.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",",
                "-          \"integrity\": \"sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"parents\": {",
                "-          \"version\": \"0.0.2\",",
                "-          \"resolved\": \"https://registry.npmjs.org/parents/-/parents-0.0.2.tgz\",",
                "-          \"integrity\": \"sha1-ZxR4JuSX1AdZqvW6TJllm2A00wI=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"readable-stream\": {",
                "-          \"version\": \"1.1.14\",",
                "-          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz\",",
                "-          \"integrity\": \"sha1-fPTFTvZI44EwhMY23SB54WbAgdk=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"core-util-is\": \"1.0.2\",",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"isarray\": \"0.0.1\",",
                "-            \"string_decoder\": \"0.10.31\"",
                "-          }",
                "-        },",
                "-        \"resolve\": {",
                "-          \"version\": \"0.6.3\",",
                "-          \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-0.6.3.tgz\",",
                "-          \"integrity\": \"sha1-3ZV5gufnNt699TtYpN2RdUV13UY=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"stream-combiner\": {",
                "-          \"version\": \"0.1.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/stream-combiner/-/stream-combiner-0.1.0.tgz\",",
                "-          \"integrity\": \"sha1-DcOJo8ID+PTVY2j5Xd5S65Jptb4=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"duplexer\": \"0.1.1\",",
                "-            \"through\": \"2.3.8\"",
                "-          }",
                "-        },",
                "-        \"string_decoder\": {",
                "-          \"version\": \"0.10.31\",",
                "-          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "-          \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "     \"ms\": {",
                "@@ -2344,8 +1224,2 @@",
                "     },",
                "-    \"object-keys\": {",
                "-      \"version\": \"0.4.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/object-keys/-/object-keys-0.4.0.tgz\",",
                "-      \"integrity\": \"sha1-KKaq50KN0sOpLz2V8hM13SBOAzY=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"on-finished\": {",
                "@@ -2400,8 +1274,2 @@",
                "     },",
                "-    \"os-browserify\": {",
                "-      \"version\": \"0.1.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/os-browserify/-/os-browserify-0.1.2.tgz\",",
                "-      \"integrity\": \"sha1-ScoCk+CxlZCl9d4Qx/JlphfY/lQ=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"os-homedir\": {",
                "@@ -2412,27 +1280,2 @@",
                "     },",
                "-    \"pako\": {",
                "-      \"version\": \"0.2.9\",",
                "-      \"resolved\": \"https://registry.npmjs.org/pako/-/pako-0.2.9.tgz\",",
                "-      \"integrity\": \"sha1-8/dSL073gjSNqBYbrZ7P1Rv4OnU=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"parents\": {",
                "-      \"version\": \"0.0.3\",",
                "-      \"resolved\": \"https://registry.npmjs.org/parents/-/parents-0.0.3.tgz\",",
                "-      \"integrity\": \"sha1-+iEvAk2fpjGNu2tM5nbIvkk7nEM=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"path-platform\": \"0.0.1\"",
                "-      }",
                "-    },",
                "-    \"parse-headers\": {",
                "-      \"version\": \"2.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/parse-headers/-/parse-headers-2.0.1.tgz\",",
                "-      \"integrity\": \"sha1-aug6eqJanZtwCswoaYzR8e1+lTY=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"for-each\": \"0.3.2\",",
                "-        \"trim\": \"0.0.1\"",
                "-      }",
                "-    },",
                "     \"parseurl\": {",
                "@@ -2443,8 +1286,2 @@",
                "     },",
                "-    \"path-browserify\": {",
                "-      \"version\": \"0.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/path-browserify/-/path-browserify-0.0.0.tgz\",",
                "-      \"integrity\": \"sha1-oLhwcpquIUAFt9UDLsLLuw+0RRo=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"path-is-absolute\": {",
                "@@ -2461,8 +1298,2 @@",
                "     },",
                "-    \"path-platform\": {",
                "-      \"version\": \"0.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/path-platform/-/path-platform-0.0.1.tgz\",",
                "-      \"integrity\": \"sha1-tVhdfDxGPYmqAGDYZhHPGv1hfio=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"pend\": {",
                "@@ -2553,8 +1384,2 @@",
                "     },",
                "-    \"process\": {",
                "-      \"version\": \"0.9.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/process/-/process-0.9.0.tgz\",",
                "-      \"integrity\": \"sha1-R9amrPUbh5QowyaWCJksfFp5C+Q=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"process-nextick-args\": {",
                "@@ -2598,14 +1423,2 @@",
                "     },",
                "-    \"querystring\": {",
                "-      \"version\": \"0.2.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz\",",
                "-      \"integrity\": \"sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"querystring-es3\": {",
                "-      \"version\": \"0.2.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/querystring-es3/-/querystring-es3-0.2.0.tgz\",",
                "-      \"integrity\": \"sha1-w2WgimnEQ6zP6zqd6rNePwq6pHY=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"rc\": {",
                "@@ -2664,600 +1477,41 @@",
                "         \"form-data\": \"2.3.2\",",
                "-        \"har-validator\": \"5.0.3\",",
                "-        \"hawk\": \"6.0.2\",",
                "-        \"http-signature\": \"1.2.0\",",
                "-        \"is-typedarray\": \"1.0.0\",",
                "-        \"isstream\": \"0.1.2\",",
                "-        \"json-stringify-safe\": \"5.0.1\",",
                "-        \"mime-types\": \"2.1.18\",",
                "-        \"oauth-sign\": \"0.8.2\",",
                "-        \"performance-now\": \"2.1.0\",",
                "-        \"qs\": \"6.5.1\",",
                "-        \"safe-buffer\": \"5.1.1\",",
                "-        \"stringstream\": \"0.0.5\",",
                "-        \"tough-cookie\": \"2.3.4\",",
                "-        \"tunnel-agent\": \"0.6.0\",",
                "-        \"uuid\": \"3.2.1\"",
                "-      }",
                "-    },",
                "-    \"request-progress\": {",
                "-      \"version\": \"2.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/request-progress/-/request-progress-2.0.1.tgz\",",
                "-      \"integrity\": \"sha1-XTa7V5YcZzqlt4jbyBQf3yO0Tgg=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"throttleit\": \"1.0.0\"",
                "-      }",
                "-    },",
                "-    \"requizzle\": {",
                "-      \"version\": \"0.2.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/requizzle/-/requizzle-0.2.1.tgz\",",
                "-      \"integrity\": \"sha1-aUPDUwxNmn5G8c3dUcFY/GcM294=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"underscore\": \"1.6.0\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"underscore\": {",
                "-          \"version\": \"1.6.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/underscore/-/underscore-1.6.0.tgz\",",
                "-          \"integrity\": \"sha1-izixDKze9jM3uLJOT/htRa6lKag=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "-    \"resolve\": {",
                "-      \"version\": \"1.1.7\",",
                "-      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.1.7.tgz\",",
                "-      \"integrity\": \"sha1-IDEU2CrSxe2ejgQRs5ModeiJ6Xs=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"resumer\": {",
                "-      \"version\": \"0.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/resumer/-/resumer-0.0.0.tgz\",",
                "-      \"integrity\": \"sha1-8ej0YeQGS6Oegq883CqMiT0HZ1k=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"through\": \"2.3.8\"",
                "-      }",
                "-    },",
                "-    \"rfile\": {",
                "-      \"version\": \"1.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/rfile/-/rfile-1.0.0.tgz\",",
                "-      \"integrity\": \"sha1-WXCM+Qyh50xUw8/Fw2/bmBBDUmE=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"callsite\": \"1.0.0\",",
                "-        \"resolve\": \"0.3.1\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"resolve\": {",
                "-          \"version\": \"0.3.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-0.3.1.tgz\",",
                "-          \"integrity\": \"sha1-NMY0R8ZkxwWY0cmxJvxDsqJDEKQ=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "-    \"right-align\": {",
                "-      \"version\": \"0.1.3\",",
                "-      \"resolved\": \"https://registry.npmjs.org/right-align/-/right-align-0.1.3.tgz\",",
                "-      \"integrity\": \"sha1-YTObci/mo1FWiSENJOFMlhSGE+8=\",",
                "-      \"dev\": true,",
                "-      \"optional\": true,",
                "-      \"requires\": {",
                "-        \"align-text\": \"0.1.4\"",
                "-      }",
                "-    },",
                "-    \"rimraf\": {",
                "-      \"version\": \"2.6.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.6.2.tgz\",",
                "-      \"integrity\": \"sha512-lreewLK/BlghmxtfH36YYVg1i8IAce4TI7oao75I1g245+6BctqTVQiBP3YUJ9C6DQOXJmkYR9X9fCLtCOJc5w==\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"glob\": \"7.1.2\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"glob\": {",
                "-          \"version\": \"7.1.2\",",
                "-          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.2.tgz\",",
                "-          \"integrity\": \"sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"fs.realpath\": \"1.0.0\",",
                "-            \"inflight\": \"1.0.6\",",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"minimatch\": \"3.0.4\",",
                "-            \"once\": \"1.4.0\",",
                "-            \"path-is-absolute\": \"1.0.1\"",
                "-          }",
                "-        }",
                "-      }",
                "-    },",
                "-    \"ruglify\": {",
                "-      \"version\": \"1.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/ruglify/-/ruglify-1.0.0.tgz\",",
                "-      \"integrity\": \"sha1-3Ikw4qlUSidDAcyZcldMDQmGtnU=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"rfile\": \"1.0.0\",",
                "-        \"uglify-js\": \"2.2.5\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"optimist\": {",
                "-          \"version\": \"0.3.7\",",
                "-          \"resolved\": \"https://registry.npmjs.org/optimist/-/optimist-0.3.7.tgz\",",
                "-          \"integrity\": \"sha1-yQlBrVnkJzMokjB00s8ufLxuwNk=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"wordwrap\": \"0.0.3\"",
                "-          }",
                "-        },",
                "-        \"source-map\": {",
                "-          \"version\": \"0.1.43\",",
                "-          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.1.43.tgz\",",
                "-          \"integrity\": \"sha1-wkvBRspRfBRx9drL4lcbK3+eM0Y=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"amdefine\": \"1.0.1\"",
                "-          }",
                "-        },",
                "-        \"uglify-js\": {",
                "-          \"version\": \"2.2.5\",",
                "-          \"resolved\": \"https://registry.npmjs.org/uglify-js/-/uglify-js-2.2.5.tgz\",",
                "-          \"integrity\": \"sha1-puAqcNg5eSuXgEiLe4sYTAlcmcc=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"optimist\": \"0.3.7\",",
                "-            \"source-map\": \"0.1.43\"",
                "-          }",
                "-        },",
                "-        \"wordwrap\": {",
                "-          \"version\": \"0.0.3\",",
                "-          \"resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz\",",
                "-          \"integrity\": \"sha1-o9XabNXAvAAI03I0u68b7WMFkQc=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "-    \"run-browser\": {",
                "-      \"version\": \"2.0.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/run-browser/-/run-browser-2.0.2.tgz\",",
                "-      \"integrity\": \"sha1-rPVJatoZTaKKLEFldpnmkUobyh0=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"browserify\": \"3.46.1\",",
                "-        \"browserify-istanbul\": \"0.1.5\",",
                "-        \"function-bind\": \"1.1.1\",",
                "-        \"glob\": \"3.2.11\",",
                "-        \"global\": \"4.3.2\",",
                "-        \"istanbul\": \"0.3.22\",",
                "-        \"jsonstream2\": \"1.1.1\",",
                "-        \"minimist\": \"0.0.8\",",
                "-        \"phantomjs\": \"1.9.20\",",
                "-        \"process\": \"0.9.0\",",
                "-        \"tap-finished\": \"0.0.1\",",
                "-        \"through2-spy\": \"1.2.0\",",
                "-        \"xhr\": \"1.17.1\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"assert-plus\": {",
                "-          \"version\": \"0.2.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-0.2.0.tgz\",",
                "-          \"integrity\": \"sha1-104bh+ev/A24qttwIfP+SBAasjQ=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"aws-sign2\": {",
                "-          \"version\": \"0.6.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.6.0.tgz\",",
                "-          \"integrity\": \"sha1-FDQt0428yU0OW4fXY81jYSwOeU8=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"boom\": {",
                "-          \"version\": \"2.10.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/boom/-/boom-2.10.1.tgz\",",
                "-          \"integrity\": \"sha1-OciRjO/1eZ+D+UkqhI9iWt0Mdm8=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"hoek\": \"2.16.3\"",
                "-          }",
                "-        },",
                "-        \"caseless\": {",
                "-          \"version\": \"0.11.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/caseless/-/caseless-0.11.0.tgz\",",
                "-          \"integrity\": \"sha1-cVuW6phBWTzDMGeSP17GDr2k99c=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"concat-stream\": {",
                "-          \"version\": \"1.5.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/concat-stream/-/concat-stream-1.5.0.tgz\",",
                "-          \"integrity\": \"sha1-U/fUPFHF5D+ByP3QMyHGMb5o1hE=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"readable-stream\": \"2.0.6\",",
                "-            \"typedarray\": \"0.0.6\"",
                "-          }",
                "-        },",
                "-        \"cryptiles\": {",
                "-          \"version\": \"2.0.5\",",
                "-          \"resolved\": \"https://registry.npmjs.org/cryptiles/-/cryptiles-2.0.5.tgz\",",
                "-          \"integrity\": \"sha1-O9/s3GCBR8HGcgL6KR59ylnqo7g=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"boom\": \"2.10.1\"",
                "-          }",
                "-        },",
                "-        \"debug\": {",
                "-          \"version\": \"0.7.4\",",
                "-          \"resolved\": \"https://registry.npmjs.org/debug/-/debug-0.7.4.tgz\",",
                "-          \"integrity\": \"sha1-BuHqgILCyxTjmAbiLi9vdX+Srzk=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"escodegen\": {",
                "-          \"version\": \"1.7.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/escodegen/-/escodegen-1.7.1.tgz\",",
                "-          \"integrity\": \"sha1-MOz89mypjcZ80v0WKr626vqM5vw=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"esprima\": \"1.2.5\",",
                "-            \"estraverse\": \"1.9.3\",",
                "-            \"esutils\": \"2.0.2\",",
                "-            \"optionator\": \"0.5.0\",",
                "-            \"source-map\": \"0.2.0\"",
                "-          },",
                "-          \"dependencies\": {",
                "-            \"esprima\": {",
                "-              \"version\": \"1.2.5\",",
                "-              \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-1.2.5.tgz\",",
                "-              \"integrity\": \"sha1-CZNQL+r2aBODJXVvMPmlH+7sEek=\",",
                "-              \"dev\": true",
                "-            }",
                "-          }",
                "-        },",
                "-        \"esprima\": {",
                "-          \"version\": \"2.5.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-2.5.0.tgz\",",
                "-          \"integrity\": \"sha1-84ekb9NEwbGjm6+MIL+0O20AWMw=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"extract-zip\": {",
                "-          \"version\": \"1.5.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-1.5.0.tgz\",",
                "-          \"integrity\": \"sha1-ksz22B73Cp+kwXRxFMzvbYaIpsQ=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"concat-stream\": \"1.5.0\",",
                "-            \"debug\": \"0.7.4\",",
                "-            \"mkdirp\": \"0.5.0\",",
                "-            \"yauzl\": \"2.4.1\"",
                "-          },",
                "-          \"dependencies\": {",
                "-            \"mkdirp\": {",
                "-              \"version\": \"0.5.0\",",
                "-              \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.0.tgz\",",
                "-              \"integrity\": \"sha1-HXMHam35hs2TROFecfzAWkyavxI=\",",
                "-              \"dev\": true,",
                "-              \"requires\": {",
                "-                \"minimist\": \"0.0.8\"",
                "-              }",
                "-            }",
                "-          }",
                "-        },",
                "-        \"fast-levenshtein\": {",
                "-          \"version\": \"1.0.7\",",
                "-          \"resolved\": \"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-1.0.7.tgz\",",
                "-          \"integrity\": \"sha1-AXjc3uAjuSkFGTrwlZ6KdjnP3Lk=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"fileset\": {",
                "-          \"version\": \"0.2.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/fileset/-/fileset-0.2.1.tgz\",",
                "-          \"integrity\": \"sha1-WI74lzxmI7KnbfRlEFaWuWqsgGc=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"glob\": \"5.0.15\",",
                "-            \"minimatch\": \"2.0.10\"",
                "-          },",
                "-          \"dependencies\": {",
                "-            \"glob\": {",
                "-              \"version\": \"5.0.15\",",
                "-              \"resolved\": \"https://registry.npmjs.org/glob/-/glob-5.0.15.tgz\",",
                "-              \"integrity\": \"sha1-G8k2ueAvSmA/zCIuz3Yz0wuLk7E=\",",
                "-              \"dev\": true,",
                "-              \"requires\": {",
                "-                \"inflight\": \"1.0.6\",",
                "-                \"inherits\": \"2.0.3\",",
                "-                \"minimatch\": \"2.0.10\",",
                "-                \"once\": \"1.4.0\",",
                "-                \"path-is-absolute\": \"1.0.1\"",
                "-              }",
                "-            },",
                "-            \"minimatch\": {",
                "-              \"version\": \"2.0.10\",",
                "-              \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-2.0.10.tgz\",",
                "-              \"integrity\": \"sha1-jQh8OcazjAAbl/ynzm0OHoCvusc=\",",
                "-              \"dev\": true,",
                "-              \"requires\": {",
                "-                \"brace-expansion\": \"1.1.11\"",
                "-              }",
                "-            }",
                "-          }",
                "-        },",
                "-        \"form-data\": {",
                "-          \"version\": \"1.0.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-1.0.1.tgz\",",
                "-          \"integrity\": \"sha1-rjFduaSQf6BlUCMEpm13M0de43w=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"async\": \"2.6.0\",",
                "-            \"combined-stream\": \"1.0.6\",",
                "-            \"mime-types\": \"2.1.18\"",
                "-          },",
                "-          \"dependencies\": {",
                "-            \"async\": {",
                "-              \"version\": \"2.6.0\",",
                "-              \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.0.tgz\",",
                "-              \"integrity\": \"sha512-xAfGg1/NTLBBKlHFmnd7PlmUW9KhVQIUuSrYem9xzFUZy13ScvtyGGejaae9iAVRiRq9+Cx7DPFaAAhCpyxyPw==\",",
                "-              \"dev\": true,",
                "-              \"requires\": {",
                "-                \"lodash\": \"4.17.5\"",
                "-              }",
                "-            }",
                "-          }",
                "-        },",
                "-        \"fs-extra\": {",
                "-          \"version\": \"0.26.7\",",
                "-          \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-0.26.7.tgz\",",
                "-          \"integrity\": \"sha1-muH92UiXeY7at20JGM9C0MMYT6k=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"graceful-fs\": \"4.1.11\",",
                "-            \"jsonfile\": \"2.4.0\",",
                "-            \"klaw\": \"1.3.1\",",
                "-            \"path-is-absolute\": \"1.0.1\",",
                "-            \"rimraf\": \"2.6.2\"",
                "-          }",
                "-        },",
                "-        \"glob\": {",
                "-          \"version\": \"3.2.11\",",
                "-          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-3.2.11.tgz\",",
                "-          \"integrity\": \"sha1-Spc/Y1uRkPcV0QmH1cAP0oFevj0=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"minimatch\": \"0.3.0\"",
                "-          }",
                "-        },",
                "-        \"har-validator\": {",
                "-          \"version\": \"2.0.6\",",
                "-          \"resolved\": \"https://registry.npmjs.org/har-validator/-/har-validator-2.0.6.tgz\",",
                "-          \"integrity\": \"sha1-zcvAgYgmWtEZtqWnyKtw7s+10n0=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"chalk\": \"1.1.3\",",
                "-            \"commander\": \"2.14.1\",",
                "-            \"is-my-json-valid\": \"2.17.2\",",
                "-            \"pinkie-promise\": \"2.0.1\"",
                "-          }",
                "-        },",
                "-        \"hawk\": {",
                "-          \"version\": \"3.1.3\",",
                "-          \"resolved\": \"https://registry.npmjs.org/hawk/-/hawk-3.1.3.tgz\",",
                "-          \"integrity\": \"sha1-B4REvXwWQLD+VA0sm3PVlnjo4cQ=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"boom\": \"2.10.1\",",
                "-            \"cryptiles\": \"2.0.5\",",
                "-            \"hoek\": \"2.16.3\",",
                "-            \"sntp\": \"1.0.9\"",
                "-          }",
                "-        },",
                "-        \"hoek\": {",
                "-          \"version\": \"2.16.3\",",
                "-          \"resolved\": \"https://registry.npmjs.org/hoek/-/hoek-2.16.3.tgz\",",
                "-          \"integrity\": \"sha1-ILt0A9POo5jpHcRxCo/xuCdKJe0=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"http-signature\": {",
                "-          \"version\": \"1.1.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/http-signature/-/http-signature-1.1.1.tgz\",",
                "-          \"integrity\": \"sha1-33LiZwZs0Kxn+3at+OE0qPvPkb8=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"assert-plus\": \"0.2.0\",",
                "-            \"jsprim\": \"1.4.1\",",
                "-            \"sshpk\": \"1.13.1\"",
                "-          }",
                "-        },",
                "-        \"istanbul\": {",
                "-          \"version\": \"0.3.22\",",
                "-          \"resolved\": \"https://registry.npmjs.org/istanbul/-/istanbul-0.3.22.tgz\",",
                "-          \"integrity\": \"sha1-PhZNhQIf4ZyYXR8OfvDD4i0BLrY=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"abbrev\": \"1.0.9\",",
                "-            \"async\": \"1.5.2\",",
                "-            \"escodegen\": \"1.7.1\",",
                "-            \"esprima\": \"2.5.0\",",
                "-            \"fileset\": \"0.2.1\",",
                "-            \"handlebars\": \"4.0.11\",",
                "-            \"js-yaml\": \"3.11.0\",",
                "-            \"mkdirp\": \"0.5.1\",",
                "-            \"nopt\": \"3.0.6\",",
                "-            \"once\": \"1.4.0\",",
                "-            \"resolve\": \"1.1.7\",",
                "-            \"supports-color\": \"3.2.3\",",
                "-            \"which\": \"1.3.0\",",
                "-            \"wordwrap\": \"1.0.0\"",
                "-          }",
                "-        },",
                "-        \"klaw\": {",
                "-          \"version\": \"1.3.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/klaw/-/klaw-1.3.1.tgz\",",
                "-          \"integrity\": \"sha1-QIhDO0azsbolnXh4XY6W9zugJDk=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"graceful-fs\": \"4.1.11\"",
                "-          }",
                "-        },",
                "-        \"levn\": {",
                "-          \"version\": \"0.2.5\",",
                "-          \"resolved\": \"https://registry.npmjs.org/levn/-/levn-0.2.5.tgz\",",
                "-          \"integrity\": \"sha1-uo0znQykphDjo/FFucr0iAcVUFQ=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"prelude-ls\": \"1.1.2\",",
                "-            \"type-check\": \"0.3.2\"",
                "-          }",
                "-        },",
                "-        \"minimatch\": {",
                "-          \"version\": \"0.3.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-0.3.0.tgz\",",
                "-          \"integrity\": \"sha1-J12O2qxPG7MyZHIInnlJyDlGmd0=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"lru-cache\": \"2.7.3\",",
                "-            \"sigmund\": \"1.0.1\"",
                "-          }",
                "-        },",
                "-        \"minimist\": {",
                "-          \"version\": \"0.0.8\",",
                "-          \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz\",",
                "-          \"integrity\": \"sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"node-uuid\": {",
                "-          \"version\": \"1.4.8\",",
                "-          \"resolved\": \"https://registry.npmjs.org/node-uuid/-/node-uuid-1.4.8.tgz\",",
                "-          \"integrity\": \"sha1-sEDrCSOWivq/jTL7HxfxFn/auQc=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"optionator\": {",
                "-          \"version\": \"0.5.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/optionator/-/optionator-0.5.0.tgz\",",
                "-          \"integrity\": \"sha1-t1qJlaLUF98ltuTjhi9QqohlE2g=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"deep-is\": \"0.1.3\",",
                "-            \"fast-levenshtein\": \"1.0.7\",",
                "-            \"levn\": \"0.2.5\",",
                "-            \"prelude-ls\": \"1.1.2\",",
                "-            \"type-check\": \"0.3.2\",",
                "-            \"wordwrap\": \"0.0.3\"",
                "-          },",
                "-          \"dependencies\": {",
                "-            \"wordwrap\": {",
                "-              \"version\": \"0.0.3\",",
                "-              \"resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz\",",
                "-              \"integrity\": \"sha1-o9XabNXAvAAI03I0u68b7WMFkQc=\",",
                "-              \"dev\": true",
                "-            }",
                "-          }",
                "-        },",
                "-        \"phantomjs\": {",
                "-          \"version\": \"1.9.20\",",
                "-          \"resolved\": \"https://registry.npmjs.org/phantomjs/-/phantomjs-1.9.20.tgz\",",
                "-          \"integrity\": \"sha1-RCSsog4U0lXAsIia9va4lz2hDg0=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"extract-zip\": \"1.5.0\",",
                "-            \"fs-extra\": \"0.26.7\",",
                "-            \"hasha\": \"2.2.0\",",
                "-            \"kew\": \"0.7.0\",",
                "-            \"progress\": \"1.1.8\",",
                "-            \"request\": \"2.67.0\",",
                "-            \"request-progress\": \"2.0.1\",",
                "-            \"which\": \"1.2.14\"",
                "-          },",
                "-          \"dependencies\": {",
                "-            \"which\": {",
                "-              \"version\": \"1.2.14\",",
                "-              \"resolved\": \"https://registry.npmjs.org/which/-/which-1.2.14.tgz\",",
                "-              \"integrity\": \"sha1-mofEN48D6CfOyvGs31bHNsAcFOU=\",",
                "-              \"dev\": true,",
                "-              \"requires\": {",
                "-                \"isexe\": \"2.0.0\"",
                "-              }",
                "-            }",
                "-          }",
                "-        },",
                "-        \"process-nextick-args\": {",
                "-          \"version\": \"1.0.7\",",
                "-          \"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-1.0.7.tgz\",",
                "-          \"integrity\": \"sha1-FQ4gt1ZZCtP5EJPyWk8q2L/zC6M=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"qs\": {",
                "-          \"version\": \"5.2.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/qs/-/qs-5.2.1.tgz\",",
                "-          \"integrity\": \"sha1-gB/uAw4LlFDWOFrcSKTMVbRK7fw=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"readable-stream\": {",
                "-          \"version\": \"2.0.6\",",
                "-          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.0.6.tgz\",",
                "-          \"integrity\": \"sha1-j5A0HmilPMySh4jaz80Rs265t44=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"core-util-is\": \"1.0.2\",",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"isarray\": \"1.0.0\",",
                "-            \"process-nextick-args\": \"1.0.7\",",
                "-            \"string_decoder\": \"0.10.31\",",
                "-            \"util-deprecate\": \"1.0.2\"",
                "-          }",
                "-        },",
                "-        \"request\": {",
                "-          \"version\": \"2.67.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/request/-/request-2.67.0.tgz\",",
                "-          \"integrity\": \"sha1-ivdHgOK/EeoK6aqWXBHxGv0nJ0I=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"aws-sign2\": \"0.6.0\",",
                "-            \"bl\": \"1.0.3\",",
                "-            \"caseless\": \"0.11.0\",",
                "-            \"combined-stream\": \"1.0.6\",",
                "-            \"extend\": \"3.0.1\",",
                "-            \"forever-agent\": \"0.6.1\",",
                "-            \"form-data\": \"1.0.1\",",
                "-            \"har-validator\": \"2.0.6\",",
                "-            \"hawk\": \"3.1.3\",",
                "-            \"http-signature\": \"1.1.1\",",
                "-            \"is-typedarray\": \"1.0.0\",",
                "-            \"isstream\": \"0.1.2\",",
                "-            \"json-stringify-safe\": \"5.0.1\",",
                "-            \"mime-types\": \"2.1.18\",",
                "-            \"node-uuid\": \"1.4.8\",",
                "-            \"oauth-sign\": \"0.8.2\",",
                "-            \"qs\": \"5.2.1\",",
                "-            \"stringstream\": \"0.0.5\",",
                "-            \"tough-cookie\": \"2.2.2\",",
                "-            \"tunnel-agent\": \"0.4.3\"",
                "-          }",
                "-        },",
                "-        \"sntp\": {",
                "-          \"version\": \"1.0.9\",",
                "-          \"resolved\": \"https://registry.npmjs.org/sntp/-/sntp-1.0.9.tgz\",",
                "-          \"integrity\": \"sha1-ZUEYTMkK7qbG57NeJlkIJEPGYZg=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"hoek\": \"2.16.3\"",
                "-          }",
                "-        },",
                "-        \"string_decoder\": {",
                "-          \"version\": \"0.10.31\",",
                "-          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "-          \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"tough-cookie\": {",
                "-          \"version\": \"2.2.2\",",
                "-          \"resolved\": \"https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.2.2.tgz\",",
                "-          \"integrity\": \"sha1-yDoYMPTl7wuT7yo0iOck+N4Basc=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"tunnel-agent\": {",
                "-          \"version\": \"0.4.3\",",
                "-          \"resolved\": \"https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.4.3.tgz\",",
                "-          \"integrity\": \"sha1-Y3PbdpCf5XDgjXNYM2Xtgop07us=\",",
                "+        \"har-validator\": \"5.0.3\",",
                "+        \"hawk\": \"6.0.2\",",
                "+        \"http-signature\": \"1.2.0\",",
                "+        \"is-typedarray\": \"1.0.0\",",
                "+        \"isstream\": \"0.1.2\",",
                "+        \"json-stringify-safe\": \"5.0.1\",",
                "+        \"mime-types\": \"2.1.18\",",
                "+        \"oauth-sign\": \"0.8.2\",",
                "+        \"performance-now\": \"2.1.0\",",
                "+        \"qs\": \"6.5.1\",",
                "+        \"safe-buffer\": \"5.1.1\",",
                "+        \"stringstream\": \"0.0.5\",",
                "+        \"tough-cookie\": \"2.3.4\",",
                "+        \"tunnel-agent\": \"0.6.0\",",
                "+        \"uuid\": \"3.2.1\"",
                "+      }",
                "+    },",
                "+    \"request-progress\": {",
                "+      \"version\": \"2.0.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/request-progress/-/request-progress-2.0.1.tgz\",",
                "+      \"integrity\": \"sha1-XTa7V5YcZzqlt4jbyBQf3yO0Tgg=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"throttleit\": \"1.0.0\"",
                "+      }",
                "+    },",
                "+    \"requizzle\": {",
                "+      \"version\": \"0.2.1\",",
                "+      \"resolved\": \"https://registry.npmjs.org/requizzle/-/requizzle-0.2.1.tgz\",",
                "+      \"integrity\": \"sha1-aUPDUwxNmn5G8c3dUcFY/GcM294=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"underscore\": \"1.6.0\"",
                "+      },",
                "+      \"dependencies\": {",
                "+        \"underscore\": {",
                "+          \"version\": \"1.6.0\",",
                "+          \"resolved\": \"https://registry.npmjs.org/underscore/-/underscore-1.6.0.tgz\",",
                "+          \"integrity\": \"sha1-izixDKze9jM3uLJOT/htRa6lKag=\",",
                "           \"dev\": true",
                "@@ -3266,2 +1520,27 @@",
                "     },",
                "+    \"resolve\": {",
                "+      \"version\": \"1.1.7\",",
                "+      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.1.7.tgz\",",
                "+      \"integrity\": \"sha1-IDEU2CrSxe2ejgQRs5ModeiJ6Xs=\",",
                "+      \"dev\": true",
                "+    },",
                "+    \"resumer\": {",
                "+      \"version\": \"0.0.0\",",
                "+      \"resolved\": \"https://registry.npmjs.org/resumer/-/resumer-0.0.0.tgz\",",
                "+      \"integrity\": \"sha1-8ej0YeQGS6Oegq883CqMiT0HZ1k=\",",
                "+      \"dev\": true,",
                "+      \"requires\": {",
                "+        \"through\": \"2.3.8\"",
                "+      }",
                "+    },",
                "+    \"right-align\": {",
                "+      \"version\": \"0.1.3\",",
                "+      \"resolved\": \"https://registry.npmjs.org/right-align/-/right-align-0.1.3.tgz\",",
                "+      \"integrity\": \"sha1-YTObci/mo1FWiSENJOFMlhSGE+8=\",",
                "+      \"dev\": true,",
                "+      \"optional\": true,",
                "+      \"requires\": {",
                "+        \"align-text\": \"0.1.4\"",
                "+      }",
                "+    },",
                "     \"safe-buffer\": {",
                "@@ -3284,20 +1563,2 @@",
                "     },",
                "-    \"shallow-copy\": {",
                "-      \"version\": \"0.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/shallow-copy/-/shallow-copy-0.0.1.tgz\",",
                "-      \"integrity\": \"sha1-QV9CcC1z2BAzApLMXuhurhoRoXA=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"shell-quote\": {",
                "-      \"version\": \"0.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/shell-quote/-/shell-quote-0.0.1.tgz\",",
                "-      \"integrity\": \"sha1-GkEZbzwDM8SCMjWT1ohuzxU92YY=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"sigmund\": {",
                "-      \"version\": \"1.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/sigmund/-/sigmund-1.0.1.tgz\",",
                "-      \"integrity\": \"sha1-P/IfGYytIXX587eBhT/ZTQ0ZtZA=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"signal-exit\": {",
                "@@ -3346,19 +1607,2 @@",
                "     },",
                "-    \"split\": {",
                "-      \"version\": \"0.1.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/split/-/split-0.1.2.tgz\",",
                "-      \"integrity\": \"sha1-8HEHRMRT1VH8cUPq2YPaYBTjNsw=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"through\": \"1.1.2\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"through\": {",
                "-          \"version\": \"1.1.2\",",
                "-          \"resolved\": \"https://registry.npmjs.org/through/-/through-1.1.2.tgz\",",
                "-          \"integrity\": \"sha1-NEpUJaN3MxTKfg62US+6+vdsC/4=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "     \"sprintf-js\": {",
                "@@ -3391,29 +1635,2 @@",
                "     },",
                "-    \"stream-browserify\": {",
                "-      \"version\": \"0.1.3\",",
                "-      \"resolved\": \"https://registry.npmjs.org/stream-browserify/-/stream-browserify-0.1.3.tgz\",",
                "-      \"integrity\": \"sha1-lc8bNpdy4nra9GNSJlFSaJxsS+k=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"inherits\": \"2.0.3\",",
                "-        \"process\": \"0.5.2\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"process\": {",
                "-          \"version\": \"0.5.2\",",
                "-          \"resolved\": \"https://registry.npmjs.org/process/-/process-0.5.2.tgz\",",
                "-          \"integrity\": \"sha1-FjjYqONML0QKkduVq5rrZ3/Bhc8=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "-    \"stream-combiner\": {",
                "-      \"version\": \"0.0.4\",",
                "-      \"resolved\": \"https://registry.npmjs.org/stream-combiner/-/stream-combiner-0.0.4.tgz\",",
                "-      \"integrity\": \"sha1-TV5DPBhSYd3mI8o/RMWGvPXErRQ=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"duplexer\": \"0.1.1\"",
                "-      }",
                "-    },",
                "     \"string-width\": {",
                "@@ -3470,11 +1687,2 @@",
                "     },",
                "-    \"subarg\": {",
                "-      \"version\": \"0.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/subarg/-/subarg-0.0.1.tgz\",",
                "-      \"integrity\": \"sha1-PVawfaz7xFu7Y/dnK0O2PkY2jjo=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"minimist\": \"0.0.10\"",
                "-      }",
                "-    },",
                "     \"supports-color\": {",
                "@@ -3488,19 +1696,2 @@",
                "     },",
                "-    \"syntax-error\": {",
                "-      \"version\": \"1.1.6\",",
                "-      \"resolved\": \"https://registry.npmjs.org/syntax-error/-/syntax-error-1.1.6.tgz\",",
                "-      \"integrity\": \"sha1-tFSXBtOGzBwdx8JCPxhXm2yt5xA=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"acorn\": \"2.7.0\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"acorn\": {",
                "-          \"version\": \"2.7.0\",",
                "-          \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-2.7.0.tgz\",",
                "-          \"integrity\": \"sha1-q259nYhqrKiwhbwzEreaGYQz8Oc=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "     \"taffydb\": {",
                "@@ -3511,21 +1702,2 @@",
                "     },",
                "-    \"tap-finished\": {",
                "-      \"version\": \"0.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/tap-finished/-/tap-finished-0.0.1.tgz\",",
                "-      \"integrity\": \"sha1-CLW1Q/3ASDApDGxWEnlVLnHEvWc=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"tap-parser\": \"0.2.1\",",
                "-        \"through\": \"2.3.8\"",
                "-      }",
                "-    },",
                "-    \"tap-parser\": {",
                "-      \"version\": \"0.2.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/tap-parser/-/tap-parser-0.2.1.tgz\",",
                "-      \"integrity\": \"sha1-jh6CPyEU7iHQMuLzHk+2QqKW9Qs=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"split\": \"0.1.2\"",
                "-      }",
                "-    },",
                "     \"tape\": {",
                "@@ -3638,110 +1810,2 @@",
                "     },",
                "-    \"through2\": {",
                "-      \"version\": \"0.4.2\",",
                "-      \"resolved\": \"https://registry.npmjs.org/through2/-/through2-0.4.2.tgz\",",
                "-      \"integrity\": \"sha1-2/WGYDEVHsg1K7bE22SiKSqEC5s=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"readable-stream\": \"1.0.34\",",
                "-        \"xtend\": \"2.1.2\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"isarray\": {",
                "-          \"version\": \"0.0.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",",
                "-          \"integrity\": \"sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"readable-stream\": {",
                "-          \"version\": \"1.0.34\",",
                "-          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz\",",
                "-          \"integrity\": \"sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"core-util-is\": \"1.0.2\",",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"isarray\": \"0.0.1\",",
                "-            \"string_decoder\": \"0.10.31\"",
                "-          }",
                "-        },",
                "-        \"string_decoder\": {",
                "-          \"version\": \"0.10.31\",",
                "-          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "-          \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"xtend\": {",
                "-          \"version\": \"2.1.2\",",
                "-          \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-2.1.2.tgz\",",
                "-          \"integrity\": \"sha1-bv7MKk2tjmlixJAbM3znuoe10os=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"object-keys\": \"0.4.0\"",
                "-          }",
                "-        }",
                "-      }",
                "-    },",
                "-    \"through2-spy\": {",
                "-      \"version\": \"1.2.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/through2-spy/-/through2-spy-1.2.0.tgz\",",
                "-      \"integrity\": \"sha1-nIkcqcpA4eHkzzHhrFf5TMnSSMs=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"through2\": \"0.5.1\",",
                "-        \"xtend\": \"3.0.0\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"isarray\": {",
                "-          \"version\": \"0.0.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\",",
                "-          \"integrity\": \"sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"readable-stream\": {",
                "-          \"version\": \"1.0.34\",",
                "-          \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz\",",
                "-          \"integrity\": \"sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"core-util-is\": \"1.0.2\",",
                "-            \"inherits\": \"2.0.3\",",
                "-            \"isarray\": \"0.0.1\",",
                "-            \"string_decoder\": \"0.10.31\"",
                "-          }",
                "-        },",
                "-        \"string_decoder\": {",
                "-          \"version\": \"0.10.31\",",
                "-          \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",",
                "-          \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"through2\": {",
                "-          \"version\": \"0.5.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/through2/-/through2-0.5.1.tgz\",",
                "-          \"integrity\": \"sha1-390BLrnHAOIyP9M084rGIqs3Lac=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"readable-stream\": \"1.0.34\",",
                "-            \"xtend\": \"3.0.0\"",
                "-          }",
                "-        }",
                "-      }",
                "-    },",
                "-    \"timers-browserify\": {",
                "-      \"version\": \"1.0.3\",",
                "-      \"resolved\": \"https://registry.npmjs.org/timers-browserify/-/timers-browserify-1.0.3.tgz\",",
                "-      \"integrity\": \"sha1-/7pwycEu7ZFv1nMY5imsbzIpVVE=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"process\": \"0.5.2\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"process\": {",
                "-          \"version\": \"0.5.2\",",
                "-          \"resolved\": \"https://registry.npmjs.org/process/-/process-0.5.2.tgz\",",
                "-          \"integrity\": \"sha1-FjjYqONML0QKkduVq5rrZ3/Bhc8=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "     \"tough-cookie\": {",
                "@@ -3755,14 +1819,2 @@",
                "     },",
                "-    \"trim\": {",
                "-      \"version\": \"0.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/trim/-/trim-0.0.1.tgz\",",
                "-      \"integrity\": \"sha1-WFhUf2spB1fulczMZm+1AITEYN0=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"tty-browserify\": {",
                "-      \"version\": \"0.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/tty-browserify/-/tty-browserify-0.0.1.tgz\",",
                "-      \"integrity\": \"sha512-C3TaO7K81YvjCgQH9Q1S3R3P3BtN3RIM8n+OvX4il1K1zgE8ZhI0op7kClgkxtutIE8hQrcrHBXvIheqKUUCxw==\",",
                "-      \"dev\": true",
                "-    },",
                "     \"tunnel-agent\": {",
                "@@ -3792,8 +1844,2 @@",
                "     },",
                "-    \"type-component\": {",
                "-      \"version\": \"0.0.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/type-component/-/type-component-0.0.1.tgz\",",
                "-      \"integrity\": \"sha1-lSpsgcIe/STRPYEdDISYy4YOGVY=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"typedarray\": {",
                "@@ -3829,62 +1875,4 @@",
                "       \"integrity\": \"sha1-bgkk1r2mta/jSeOabWMoUKD4grc=\",",
                "-      \"dev\": true",
                "-    },",
                "-    \"umd\": {",
                "-      \"version\": \"2.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/umd/-/umd-2.0.0.tgz\",",
                "-      \"integrity\": \"sha1-dJaDsNUUcorg4bYZX1d0r8CtT48=\",",
                "       \"dev\": true,",
                "-      \"requires\": {",
                "-        \"rfile\": \"1.0.0\",",
                "-        \"ruglify\": \"1.0.0\",",
                "-        \"through\": \"2.3.8\",",
                "-        \"uglify-js\": \"2.4.24\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"async\": {",
                "-          \"version\": \"0.2.10\",",
                "-          \"resolved\": \"https://registry.npmjs.org/async/-/async-0.2.10.tgz\",",
                "-          \"integrity\": \"sha1-trvgsGdLnXGXCMo43owjfLUmw9E=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"source-map\": {",
                "-          \"version\": \"0.1.34\",",
                "-          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.1.34.tgz\",",
                "-          \"integrity\": \"sha1-p8/omux7FoLDsZjQrPtH19CQVms=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"amdefine\": \"1.0.1\"",
                "-          }",
                "-        },",
                "-        \"uglify-js\": {",
                "-          \"version\": \"2.4.24\",",
                "-          \"resolved\": \"https://registry.npmjs.org/uglify-js/-/uglify-js-2.4.24.tgz\",",
                "-          \"integrity\": \"sha1-+tV1XB4Vd2WLsG/5q25UjJW+vW4=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"async\": \"0.2.10\",",
                "-            \"source-map\": \"0.1.34\",",
                "-            \"uglify-to-browserify\": \"1.0.2\",",
                "-            \"yargs\": \"3.5.4\"",
                "-          }",
                "-        },",
                "-        \"wordwrap\": {",
                "-          \"version\": \"0.0.2\",",
                "-          \"resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.2.tgz\",",
                "-          \"integrity\": \"sha1-t5Zpu0LstAn4PVg8rVLKF+qhZD8=\",",
                "-          \"dev\": true",
                "-        },",
                "-        \"yargs\": {",
                "-          \"version\": \"3.5.4\",",
                "-          \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-3.5.4.tgz\",",
                "-          \"integrity\": \"sha1-2K/49mXpTDS9JZvevRv68N3TU2E=\",",
                "-          \"dev\": true,",
                "-          \"requires\": {",
                "-            \"camelcase\": \"1.2.1\",",
                "-            \"decamelize\": \"1.2.0\",",
                "-            \"window-size\": \"0.1.0\",",
                "-            \"wordwrap\": \"0.0.2\"",
                "-          }",
                "-        }",
                "-      }",
                "+      \"optional\": true",
                "     },",
                "@@ -3925,20 +1913,2 @@",
                "     },",
                "-    \"url\": {",
                "-      \"version\": \"0.10.3\",",
                "-      \"resolved\": \"https://registry.npmjs.org/url/-/url-0.10.3.tgz\",",
                "-      \"integrity\": \"sha1-Ah5NnHcF8hu/N9A861h2dAJ3TGQ=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"punycode\": \"1.3.2\",",
                "-        \"querystring\": \"0.2.0\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"punycode\": {",
                "-          \"version\": \"1.3.2\",",
                "-          \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz\",",
                "-          \"integrity\": \"sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "     \"utf-8-validate\": {",
                "@@ -3954,19 +1924,2 @@",
                "     },",
                "-    \"util\": {",
                "-      \"version\": \"0.10.3\",",
                "-      \"resolved\": \"https://registry.npmjs.org/util/-/util-0.10.3.tgz\",",
                "-      \"integrity\": \"sha1-evsa/lCAUkZInj23/g7TeTNqwPk=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"inherits\": \"2.0.1\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"inherits\": {",
                "-          \"version\": \"2.0.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz\",",
                "-          \"integrity\": \"sha1-sX0I0ya0Qj5Wjv9xn5GwscvfafE=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "     \"util-deprecate\": {",
                "@@ -4000,11 +1953,2 @@",
                "     },",
                "-    \"vm-browserify\": {",
                "-      \"version\": \"0.0.4\",",
                "-      \"resolved\": \"https://registry.npmjs.org/vm-browserify/-/vm-browserify-0.0.4.tgz\",",
                "-      \"integrity\": \"sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"indexof\": \"0.0.1\"",
                "-      }",
                "-    },",
                "     \"which\": {",
                "@@ -4031,3 +1975,4 @@",
                "       \"integrity\": \"sha1-VDjNLqk7IC76Ohn+iIeu58lPnJ0=\",",
                "-      \"dev\": true",
                "+      \"dev\": true,",
                "+      \"optional\": true",
                "     },",
                "@@ -4053,21 +1998,2 @@",
                "     },",
                "-    \"xhr\": {",
                "-      \"version\": \"1.17.1\",",
                "-      \"resolved\": \"https://registry.npmjs.org/xhr/-/xhr-1.17.1.tgz\",",
                "-      \"integrity\": \"sha1-BTM0nkp7uWfQvYeKlh2VBfkFLf8=\",",
                "-      \"dev\": true,",
                "-      \"requires\": {",
                "-        \"global\": \"4.3.2\",",
                "-        \"once\": \"1.1.1\",",
                "-        \"parse-headers\": \"2.0.1\"",
                "-      },",
                "-      \"dependencies\": {",
                "-        \"once\": {",
                "-          \"version\": \"1.1.1\",",
                "-          \"resolved\": \"https://registry.npmjs.org/once/-/once-1.1.1.tgz\",",
                "-          \"integrity\": \"sha1-nbV0kzzLCMOnYU0VQDLAnqbzOec=\",",
                "-          \"dev\": true",
                "-        }",
                "-      }",
                "-    },",
                "     \"xmlcreate\": {",
                "@@ -4078,8 +2004,2 @@",
                "     },",
                "-    \"xtend\": {",
                "-      \"version\": \"3.0.0\",",
                "-      \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-3.0.0.tgz\",",
                "-      \"integrity\": \"sha1-XM50B7r2Qsunvs2laBEcST9ZZlo=\",",
                "-      \"dev\": true",
                "-    },",
                "     \"yargs\": {"
            ],
            "changed_files": [
                "lib/js/package-lock.json",
                "lib/js/package.json",
                "package-lock.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4509": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4509",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6aa4c0f448d8f2573d2abcc8c3724bd18b3f8d1d",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520025294,
            "hunks": 3,
            "message": "THRIFT-82: fix cl test server to return the correct SecondService string and enable multi tests",
            "diff": [
                "diff --git a/test/cl/implementation.lisp b/test/cl/implementation.lisp",
                "index 65a79b515..0caf7beb5 100644",
                "--- a/test/cl/implementation.lisp",
                "+++ b/test/cl/implementation.lisp",
                "@@ -134,2 +134,3 @@",
                "   (format t \"secondtestString(~a)~%\" thing)",
                "-  thing)",
                "+  (concatenate 'string \"testString(\\\"\" thing \"\\\")\"))",
                "+",
                "diff --git a/test/known_failures_Linux.json b/test/known_failures_Linux.json",
                "index a0bd542ab..6958ff536 100644",
                "--- a/test/known_failures_Linux.json",
                "+++ b/test/known_failures_Linux.json",
                "@@ -19,11 +19,4 @@",
                "   \"cl-c_glib_multi-binary_framed-ip\",",
                "-  \"cl-csharp_multi_buffered-ip\",",
                "-  \"cl-csharp_multi_framed-ip\",",
                "   \"cl-go_binary_buffered-ip\",",
                "   \"cl-go_binary_framed-ip\",",
                "-  \"cl-java_multi_buffered-ip\",",
                "-  \"cl-java_multi_framed-ip\",",
                "-  \"cl-java_multi_framed-fastframed-ip\",",
                "-  \"cl-perl_multi_buffered-ip\",",
                "-  \"cl-perl_multi_framed-ip\",",
                "   \"cl-rb_binary_buffered-ip\","
            ],
            "changed_files": [
                "test/cl/implementation.lisp",
                "test/known_failures_Linux.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-82": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-82",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "860a5f1ff828d395397c643a1f694e7bdd9729b0",
            "repository": "https://github.com/apache/thrift",
            "timestamp": 1520364203,
            "hunks": 54,
            "message": "THRIFT-4508: change windows CI builds to use current MSVC, one cygwin and one mingw build",
            "diff": [
                "diff --git a/appveyor.yml b/appveyor.yml",
                "index 4c2e36496..2db28f616 100755",
                "--- a/appveyor.yml",
                "+++ b/appveyor.yml",
                "@@ -26,8 +26,8 @@ shallow_clone: true",
                " os:",
                "-  - Visual Studio 2015",
                "+  - Visual Studio 2017",
                "-cache:",
                "-  - C:\\projects\\thrift\\buildcache -> build\\appveyor\\MSVC-appveyor-install.bat",
                "-  - C:\\ProgramData\\chocolatey\\lib -> build\\appveyor\\MSVC-appveyor-install.bat",
                "-  - C:\\msys64\\var\\cache\\pacman    -> build\\appveyor\\MSYS-appveyor-install.bat",
                "+matrix:",
                "+  allow_failures:",
                "+      - PROFILE: CYGWIN",
                "+  fast_finish: true",
                "@@ -35,18 +35,9 @@ environment:",
                "   matrix:",
                "-   - PROFILE: MSVC2010",
                "-     PLATFORM: x86",
                "-     CONFIGURATION: Debug",
                "-     BOOST_VERSION: 1.54.0",
                "-     LIBEVENT_VERSION: 2.0.22",
                "-     QT_VERSION: 5.6",
                "-     ZLIB_VERSION: 1.2.8",
                "-     DISABLED_TESTS: StressTestNonBlocking",
                "-",
                "-   - PROFILE: MSVC2015",
                "+   - PROFILE: MSVC2017",
                "      PLATFORM: x64",
                "      CONFIGURATION: Release",
                "-     BOOST_VERSION: 1.64.0",
                "-     LIBEVENT_VERSION: 2.0.22",
                "+     BOOST_VERSION: 1.65.1",
                "+     LIBEVENT_VERSION: 2.1.8",
                "      PYTHON_VERSION: 3.6",
                "-     QT_VERSION: 5.8",
                "+     QT_VERSION: 5.10",
                "      ZLIB_VERSION: 1.2.11",
                "@@ -56,6 +47,14 @@ environment:",
                "      PLATFORM: x64",
                "-     CONFIGURATION: Release",
                "+     CONFIGURATION: RelWithDebInfo",
                "+     DISABLED_TESTS: StressTestNonBlocking",
                "-matrix:",
                "-  fast_finish: true",
                "+   - PROFILE: CYGWIN",
                "+     PLATFORM: x64",
                "+     CONFIGURATION: RelWithDebInfo",
                "+     DISABLED_TESTS: (ZlibTest|OpenSSLManualInitTest|TNonblockingServerTest|StressTestNonBlocking)",
                "+",
                "+   - PROFILE: CYGWIN",
                "+     PLATFORM: x86",
                "+     CONFIGURATION: RelWithDebInfo",
                "+     DISABLED_TESTS: (ZlibTest|OpenSSLManualInitTest|TNonblockingServerTest|StressTestNonBlocking)",
                "diff --git a/build/appveyor/CYGW-appveyor-build.bat b/build/appveyor/CYGW-appveyor-build.bat",
                "new file mode 100644",
                "index 000000000..c22622294",
                "--- /dev/null",
                "+++ b/build/appveyor/CYGW-appveyor-build.bat",
                "@@ -0,0 +1,36 @@",
                "+::",
                "+:: Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+:: you may not use this file except in compliance with the License.",
                "+:: You may obtain a copy of the License at",
                "+::",
                "+::     http://www.apache.org/licenses/LICENSE-2.0",
                "+::",
                "+:: Unless required by applicable law or agreed to in writing, software",
                "+:: distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+:: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+:: See the License for the specific language governing permissions and",
                "+:: limitations under the License.",
                "+::",
                "+",
                "+@ECHO OFF",
                "+SETLOCAL EnableDelayedExpansion",
                "+",
                "+CD build\\appveyor                           || EXIT /B",
                "+CALL cl_banner_build.bat                    || EXIT /B",
                "+CALL cl_setenv.bat                          || EXIT /B",
                "+",
                "+SET CMAKEARGS=^",
                "+  -G'%GENERATOR%' ^",
                "+  -DCMAKE_BUILD_TYPE=%CONFIGURATION% ^",
                "+  -DCMAKE_INSTALL_PREFIX=%INSTDIR% ^",
                "+  -DCMAKE_CXX_EXTENSIONS=ON ^",
                "+  -DCMAKE_CXX_FLAGS=\"-D_GNU_SOURCE\" ^",
                "+  -DCMAKE_CXX_STANDARD=11 ^",
                "+  -DWITH_PYTHON=OFF ^",
                "+  -DWITH_SHARED_LIB=OFF ^",
                "+  -DWITH_STATIC_LIB=ON ^",
                "+  -DWITH_STDTHREADS=ON",
                "+",
                "+@ECHO ON",
                "+%BASH% -lc \"mkdir -p %BUILDDIR% && cd %BUILDDIR% && cmake.exe %SRCDIR% %CMAKEARGS% && cmake --build . --config %CONFIGURATION% --target install\" || EXIT /B",
                "+@ECHO OFF",
                "diff --git a/build/appveyor/CYGW-appveyor-install.bat b/build/appveyor/CYGW-appveyor-install.bat",
                "new file mode 100644",
                "index 000000000..77db7d40a",
                "--- /dev/null",
                "+++ b/build/appveyor/CYGW-appveyor-install.bat",
                "@@ -0,0 +1,34 @@",
                "+::",
                "+:: Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+:: you may not use this file except in compliance with the License.",
                "+:: You may obtain a copy of the License at",
                "+::",
                "+::     http://www.apache.org/licenses/LICENSE-2.0",
                "+::",
                "+:: Unless required by applicable law or agreed to in writing, software",
                "+:: distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+:: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+:: See the License for the specific language governing permissions and",
                "+:: limitations under the License.",
                "+::",
                "+",
                "+::",
                "+:: Appveyor install script for CYGWIN",
                "+:: Installs third party packages we need for a cmake build",
                "+::",
                "+",
                "+@ECHO OFF",
                "+SETLOCAL EnableDelayedExpansion",
                "+",
                "+CD build\\appveyor                          || EXIT /B",
                "+CALL cl_banner_install.bat                 || EXIT /B",
                "+CALL cl_setenv.bat                         || EXIT /B",
                "+CALL cl_showenv.bat                        || EXIT /B",
                "+",
                "+::",
                "+:: Install apt-cyg for package management",
                "+::",
                "+",
                "+%BASH% -lc \"wget rawgit.com/transcode-open/apt-cyg/master/apt-cyg && install apt-cyg /bin && rm -f apt-cyg\" || EXIT /B",
                "+%BASH% -lc \"apt-cyg update\" || EXIT /B",
                "+%BASH% -lc \"apt-cyg install bison cmake flex gcc-g++ libboost-devel libevent-devel make openssl-devel zlib-devel\"",
                "diff --git a/build/appveyor/CYGW-appveyor-test.bat b/build/appveyor/CYGW-appveyor-test.bat",
                "new file mode 100644",
                "index 000000000..b667f9bb1",
                "--- /dev/null",
                "+++ b/build/appveyor/CYGW-appveyor-test.bat",
                "@@ -0,0 +1,21 @@",
                "+::",
                "+:: Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+:: you may not use this file except in compliance with the License.",
                "+:: You may obtain a copy of the License at",
                "+::",
                "+::     http://www.apache.org/licenses/LICENSE-2.0",
                "+::",
                "+:: Unless required by applicable law or agreed to in writing, software",
                "+:: distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+:: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+:: See the License for the specific language governing permissions and",
                "+:: limitations under the License.",
                "+::",
                "+",
                "+@ECHO OFF",
                "+SETLOCAL EnableDelayedExpansion",
                "+CD build\\appveyor              || EXIT /B",
                "+CALL cl_banner_test.bat        || EXIT /B",
                "+CALL cl_setenv.bat             || EXIT /B",
                "+",
                "+%BASH% -lc \"cd %BUILDDIR% && ctest.exe -C %CONFIGURATION% --timeout 300 -VV -E '%DISABLED_TESTS%'\" || EXIT /B",
                "diff --git a/build/appveyor/MING-appveyor-build.bat b/build/appveyor/MING-appveyor-build.bat",
                "index 838e42880..6ebdb906e 100644",
                "--- a/build/appveyor/MING-appveyor-build.bat",
                "+++ b/build/appveyor/MING-appveyor-build.bat",
                "@@ -24,7 +24,6 @@ SET CMAKEARGS=^",
                "   -DCMAKE_BUILD_TYPE=%CONFIGURATION% ^",
                "-  -DCMAKE_INSTALL_PREFIX=%INSTDIR_MSYS% ^",
                "-  -DCMAKE_MAKE_PROGRAM=/mingw64/bin/mingw32-make ^",
                "-  -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc.exe ^",
                "-  -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++.exe ^",
                "-  -DWITH_LIBEVENT=OFF ^",
                "+  -DCMAKE_INSTALL_PREFIX=%INSTDIR% ^",
                "+  -DCMAKE_MAKE_PROGRAM=/mingw%NORM_PLATFORM%/bin/mingw32-make ^",
                "+  -DCMAKE_C_COMPILER=/mingw%NORM_PLATFORM%/bin/gcc.exe ^",
                "+  -DCMAKE_CXX_COMPILER=/mingw%NORM_PLATFORM%/bin/g++.exe ^",
                "   -DWITH_PYTHON=OFF ^",
                "@@ -34,3 +33,3 @@ SET CMAKEARGS=^",
                " @ECHO ON",
                "-%BASH% -lc \"mkdir -p %BUILDDIR_MSYS% && cd %BUILDDIR_MSYS% && cmake.exe %SRCDIR_MSYS% %CMAKEARGS% && cmake --build . --config %CONFIGURATION% --target install\" || EXIT /B",
                "+%BASH% -lc \"mkdir -p %BUILDDIR% && cd %BUILDDIR% && cmake.exe %SRCDIR% %CMAKEARGS% && cmake --build . --config %CONFIGURATION% --target install\" || EXIT /B",
                " @ECHO OFF",
                "diff --git a/build/appveyor/MING-appveyor-install.bat b/build/appveyor/MING-appveyor-install.bat",
                "index 0d5f99e4d..ce8fc7d12 100644",
                "--- a/build/appveyor/MING-appveyor-install.bat",
                "+++ b/build/appveyor/MING-appveyor-install.bat",
                "@@ -15,7 +15,41 @@",
                " ::",
                "-:: Appveyor install script for MinGW",
                "-:: Installs (or builds) third party packages we need",
                "+:: Appveyor install script for MINGW on MSYS2",
                "+:: Installs third party packages we need for a cmake build",
                " ::",
                "-:: Same as the MSYS installation requirements",
                "-CALL build\\appveyor\\MSYS-appveyor-install.bat",
                "+@ECHO OFF",
                "+SETLOCAL EnableDelayedExpansion",
                "+",
                "+CD build\\appveyor                          || EXIT /B",
                "+CALL cl_banner_install.bat                 || EXIT /B",
                "+CALL cl_setenv.bat                         || EXIT /B",
                "+CALL cl_showenv.bat                        || EXIT /B",
                "+",
                "+:: We're going to keep boost at a version cmake understands",
                "+SET BOOSTVER=1.64.0-3",
                "+SET BOOSTPKG=mingw-w64-%MINGWPLAT%-boost-%BOOSTVER%-any.pkg.tar.xz",
                "+SET IGNORE=--ignore mingw-w64-x86_64-boost --ignore mingw-w64-i686-boost",
                "+",
                "+SET PACKAGES=^",
                "+  --needed -S bison flex make ^",
                "+  mingw-w64-%MINGWPLAT%-cmake ^",
                "+  mingw-w64-%MINGWPLAT%-libevent ^",
                "+  mingw-w64-%MINGWPLAT%-openssl ^",
                "+  mingw-w64-%MINGWPLAT%-toolchain ^",
                "+  mingw-w64-%MINGWPLAT%-zlib",
                "+",
                "+::mingw-w64-%MINGWPLAT%-qt5 : WAY too large (1GB download!) - tested in cygwin builds anyway",
                "+",
                "+:: Remove old packages that no longer exist to avoid an error",
                "+%BASH% -lc \"pacman --noconfirm --remove libcatgets catgets || true\" || EXIT /B",
                "+",
                "+:: Upgrade things",
                "+%BASH% -lc \"pacman --noconfirm -Syu %IGNORE%\"                       || EXIT /B",
                "+%BASH% -lc \"pacman --noconfirm -Su %IGNORE%\"                        || EXIT /B",
                "+%BASH% -lc \"pacman --noconfirm %PACKAGES%\"                          || EXIT /B",
                "+",
                "+:: Install a slightly older boost (BOOSTVER) as cmake in mingw",
                "+:: does not have built-in dependencies for boost 1.66.0 yet",
                "+:: -- this cuts down on build warning output --",
                "+",
                "+%BASH% -lc \"if [[ $(pacman --query | grep '%MINGWPLAT%-boost') ^!= *\"%BOOSTVER%\"* ]]; then wget http://repo.msys2.org/mingw/%MINGWPLAT%/%BOOSTPKG% && pacman --noconfirm --needed -U %BOOSTPKG% && rm %BOOSTPKG%; fi\" || EXIT /B",
                "diff --git a/build/appveyor/MING-appveyor-test.bat b/build/appveyor/MING-appveyor-test.bat",
                "index c37c72a9c..499c1ff80 100644",
                "--- a/build/appveyor/MING-appveyor-test.bat",
                "+++ b/build/appveyor/MING-appveyor-test.bat",
                "@@ -14,3 +14,9 @@",
                "-:: Same as MSYS2",
                "-CALL build\\appveyor\\MSYS-appveyor-test.bat",
                "+@ECHO OFF",
                "+SETLOCAL EnableDelayedExpansion",
                "+",
                "+CD build\\appveyor              || EXIT /B",
                "+CALL cl_banner_test.bat        || EXIT /B",
                "+CALL cl_setenv.bat             || EXIT /B",
                "+",
                "+%BASH% -lc \"cd %BUILDDIR% && ctest.exe -C %CONFIGURATION% --timeout 300 -VV -E '%DISABLED_TESTS%'\" || EXIT /B",
                "diff --git a/build/appveyor/MSVC-appveyor-install.bat b/build/appveyor/MSVC-appveyor-install.bat",
                "index 573700e0c..95008bd52 100644",
                "--- a/build/appveyor/MSVC-appveyor-install.bat",
                "+++ b/build/appveyor/MSVC-appveyor-install.bat",
                "@@ -28,10 +28,17 @@ MKDIR \"%WIN3P%\"                           || EXIT /B",
                "-:: Install ant - this also installs the latest JDK as a dependency",
                "-:: The installation of JDK requires us to pick up PATH and JAVE_HOME from the registry",
                "-cinst -c \"%BUILDCACHE%\" -y ant            || EXIT /B",
                "+choco feature enable -n allowGlobalConfirmation || EXIT /B",
                "+",
                "+:: Things to install when NOT running in appveyor:",
                "+IF \"%APPVEYOR_BUILD_ID%\" == \"\" (",
                "+    cup -y chocolatey                     || EXIT /B",
                "+    cinst -c \"%BUILDCACHE%\" -y curl       || EXIT /B",
                "+    cinst -c \"%BUILDCACHE%\" -y 7zip       || EXIT /B",
                "+    cinst -c \"%BUILDCACHE%\" -y python3    || EXIT /B",
                "+    cinst -c \"%BUILDCACHE%\" -y openssl.light || EXIT /B",
                "+)",
                "-:: Install bison and flex",
                "+cinst -c \"%BUILDCACHE%\" -y jdk8           || EXIT /B",
                " cinst -c \"%BUILDCACHE%\" -y winflexbison3  || EXIT /B",
                "-:: zlib",
                "+:: zlib - not available through chocolatey",
                " CD \"%APPVEYOR_SCRIPTS%\"                   || EXIT /B",
                "@@ -39,3 +46,3 @@ call build-zlib.bat                       || EXIT /B",
                "-:: libevent",
                "+:: libevent - not available through chocolatey",
                " CD \"%APPVEYOR_SCRIPTS%\"                   || EXIT /B",
                "@@ -43,5 +50,7 @@ call build-libevent.bat                   || EXIT /B",
                "-:: python packages",
                "-pip install backports.ssl_match_hostname ^",
                "+:: python packages (correct path to pip set in cl_setenv.bat)",
                "+pip.exe ^",
                "+    install backports.ssl_match_hostname ^",
                "             ipaddress ^",
                "+            six ^",
                "             tornado ^",
                "@@ -49,23 +58,2 @@ pip install backports.ssl_match_hostname ^",
                "-:: msinttypes - for MSVC2010 only",
                "-SET MSINTTYPESURL=https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/msinttypes/msinttypes-r26.zip",
                "-IF \"%COMPILER%\" == \"vc100\" (",
                "-  MKDIR \"%WIN3P%\\msinttypes\"              || EXIT /B",
                "-  CD \"%WIN3P%\\msinttypes\"                 || EXIT /B",
                "-  appveyor DownloadFile \"%MSINTTYPESURL%\" || EXIT /B",
                "-  7z x \"msinttypes-r26.zip\"               || EXIT /B",
                "-)",
                "-",
                "-:: appveyor build slaves do not have MSVC2010 Boost installed",
                "-IF \"%COMPILER%\" == \"vc100\" (",
                "-  SET BITS=64",
                "-  IF \"%PLATFORM%\" == \"x86\" (",
                "-    SET BITS=32",
                "-  )",
                "-  SET BOOSTEXEURL=https://downloads.sourceforge.net/project/boost/boost-binaries/%BOOST_VERSION%/boost_%BOOST_VERSION:.=_%-msvc-10.0-!BITS!.exe",
                "-  SET BOOSTEXE=C:\\projects\\thrift\\buildcache\\boost_%BOOST_VERSION:.=_%-msvc-10.0-!BITS!.exe",
                "-  appveyor DownloadFile \"!BOOSTEXEURL!\" -FileName \"!BOOSTEXE!\" || EXIT /B",
                "-  \"!BOOSTEXE!\" /dir=C:\\Libraries\\boost_%BOOST_VERSION:.=_% /silent || EXIT /B",
                "-)",
                "-",
                " :: Haskell (GHC) and cabal",
                "diff --git a/build/appveyor/MSVC-appveyor-test.bat b/build/appveyor/MSVC-appveyor-test.bat",
                "index 16ee2078e..35945792a 100644",
                "--- a/build/appveyor/MSVC-appveyor-test.bat",
                "+++ b/build/appveyor/MSVC-appveyor-test.bat",
                "@@ -14,3 +14,3 @@",
                "-@ECHO OFF",
                "+@ECHO ON",
                " SETLOCAL EnableDelayedExpansion",
                "@@ -21,4 +21,11 @@ CD \"%BUILDDIR%\"                || EXIT /B",
                "-:: Add directories to the path to find DLLs of third party libraries so tests run",
                "-SET PATH=%BOOST_LIBRARYDIR%;%OPENSSL_ROOT%\\bin;%WIN3P%\\zlib-inst\\bin;%PATH%",
                "+DIR C:\\libraries",
                "+DIR C:\\libraries\\boost_1_59_0",
                "+DIR C:\\libraries\\boost_1_60_0",
                "+DIR C:\\libraries\\boost_1_62_0",
                "+DIR C:\\libraries\\boost_1_63_0",
                "+DIR C:\\libraries\\boost_1_64_0",
                "+",
                "+:: Add directories to the path to find DLLs of third party libraries so tests run properly!",
                "+SET PATH=%BOOST_LIBRARYDIR:/=\\%;%OPENSSL_ROOT%\\bin;%WIN3P%\\zlib-inst\\bin;%PATH%",
                "diff --git a/build/appveyor/MSYS-appveyor-build.bat b/build/appveyor/MSYS-appveyor-build.bat",
                "index b9d8955e2..44017295e 100644",
                "--- a/build/appveyor/MSYS-appveyor-build.bat",
                "+++ b/build/appveyor/MSYS-appveyor-build.bat",
                "@@ -35,2 +35,3 @@ SET CMAKEARGS=-G\\\"%GENERATOR%\\\" ^",
                "   -DCMAKE_INSTALL_PREFIX=%INSTDIR_MSYS% ^",
                "+  -DLIBEVENT_ROOT=%LIBEVENT_ROOT% ^",
                "   -DOPENSSL_LIBRARIES=%OPENSSL_LIBRARIES% ^",
                "@@ -40,3 +41,3 @@ SET CMAKEARGS=-G\\\"%GENERATOR%\\\" ^",
                "   -DWITH_JAVA=OFF ^",
                "-  -DWITH_LIBEVENT=OFF ^",
                "+  -DWITH_LIBEVENT=ON ^",
                "   -DWITH_PYTHON=%WITH_PYTHON% ^",
                "diff --git a/build/appveyor/MSYS-appveyor-install.bat b/build/appveyor/MSYS-appveyor-install.bat",
                "index ff43cd371..a818df305 100644",
                "--- a/build/appveyor/MSYS-appveyor-install.bat",
                "+++ b/build/appveyor/MSYS-appveyor-install.bat",
                "@@ -27,7 +27,10 @@ CALL cl_showenv.bat                        || EXIT /B",
                "+:: We're going to keep boost at a version cmake understands",
                "+SET BOOSTPKG=mingw-w64-x86_64-boost-1.64.0-3-any.pkg.tar.xz",
                "+SET IGNORE=--ignore mingw-w64-x86_64-boost",
                "+",
                " SET PACKAGES=^",
                "-  --needed -S bison flex ^",
                "-  make ^",
                "-  mingw-w64-x86_64-boost ^",
                "+  --needed -S bison flex make ^",
                "   mingw-w64-x86_64-cmake ^",
                "+  mingw-w64-x86_64-libevent ^",
                "   mingw-w64-x86_64-openssl ^",
                "@@ -36,6 +39,10 @@ SET PACKAGES=^",
                "-:: omitting libevent-devel for now it is version 2.1.4 and doesn't play nice with MinGW",
                "+%BASH% -lc \"pacman --noconfirm -Syu %IGNORE%\" || EXIT /B",
                "+%BASH% -lc \"pacman --noconfirm -Su %IGNORE%\"  || EXIT /B",
                "+%BASH% -lc \"pacman --noconfirm %PACKAGES%\"    || EXIT /B",
                "+",
                "+:: Install a slightly older boost (1.64.0) as cmake 3.10",
                "+:: does not have built-in dependencies for boost 1.66.0 yet",
                "+:: -- this cuts down on build warning output --",
                "+%BASH% -lc \"wget http://repo.msys2.org/mingw/x86_64/%BOOSTPKG% && pacman --noconfirm --needed -U %BOOSTPKG% && rm %BOOSTPKG%\" || EXIT /B",
                "-%BASH% -lc \"pacman --noconfirm -Syu\"       || EXIT /B",
                "-%BASH% -lc \"pacman --noconfirm -Su\"        || EXIT /B",
                "-%BASH% -lc \"pacman --noconfirm %PACKAGES%\" || EXIT /B",
                "diff --git a/build/appveyor/build-libevent.bat b/build/appveyor/build-libevent.bat",
                "index 13c74ee15..64b635b1e 100644",
                "--- a/build/appveyor/build-libevent.bat",
                "+++ b/build/appveyor/build-libevent.bat",
                "@@ -19,10 +19,17 @@ SET URL=https://github.com/libevent/libevent/releases/download/release-%LIBEVENT",
                "-CD %WIN3P%                                       || EXIT /B",
                "-appveyor DownloadFile %URL%                      || EXIT /B",
                "-7z x %URLFILE% -so | 7z x -si -ttar > nul        || EXIT /B",
                "+:: Download - support running a local build or a build in appveyor",
                "+CD \"%WIN3P%\"                                     || EXIT /B",
                "+IF \"%APPVEYOR_BUILD_ID%\" == \"\" (",
                "+    curl -L -f -o \"%URLFILE%\" \"%URL%\"",
                "+) ELSE (",
                "+    appveyor DownloadFile \"%URL%\"",
                "+)",
                "+7z x \"%URLFILE%\" -so | 7z x -si -ttar > nul      || EXIT /B",
                " CD \"libevent-%LIBEVENT_VERSION%-stable\"          || EXIT /B",
                "-nmake -f Makefile.nmake                          || EXIT /B",
                "+nmake -f Makefile.nmake static_libs              || EXIT /B",
                "+",
                "+:: in libevent 2.0 there is no nmake subdirectory in WIN32-Code, but in 2.1 there is",
                " mkdir lib                                        || EXIT /B",
                " move *.lib lib\\                                  || EXIT /B",
                "-move WIN32-Code\\event2\\* include\\event2\\         || EXIT /B",
                "+move WIN32-Code\\event2\\* include\\event2\\         || move WIN32-Code\\nmake\\event2\\* include\\event2\\ || EXIT /B",
                " move *.h include\\                                || EXIT /B",
                "diff --git a/build/appveyor/build-zlib.bat b/build/appveyor/build-zlib.bat",
                "index d8811a153..9195726d5 100644",
                "--- a/build/appveyor/build-zlib.bat",
                "+++ b/build/appveyor/build-zlib.bat",
                "@@ -26,7 +26,14 @@ SET FURL=http://zlib.net/fossils/%URLFILE%",
                "-:: Download",
                "+:: Download - support running a local build or a build in appveyor",
                " CD \"%WIN3P%\"                                                     || EXIT /B",
                "-appveyor DownloadFile \"%URL%\"",
                "-IF ERRORLEVEL 1 (",
                "-    appveyor DownloadFile \"%FURL%\"                               || EXIT /B",
                "+IF \"%APPVEYOR_BUILD_ID%\" == \"\" (",
                "+    curl -L -f -o \"%URLFILE%\" \"%URL%\"",
                "+    IF ERRORLEVEL 1 (",
                "+        curl -L -f -o \"%URLFILE%\" \"%FURL%\"",
                "+    )",
                "+) ELSE (",
                "+    appveyor DownloadFile \"%URL%\"",
                "+    IF ERRORLEVEL 1 (",
                "+        appveyor DownloadFile \"%FURL%\"                           || EXIT /B",
                "+    )",
                " )",
                "diff --git a/build/appveyor/cl_setcompiler.bat b/build/appveyor/cl_setcompiler.bat",
                "index b97da7359..733ffc538 100644",
                "--- a/build/appveyor/cl_setcompiler.bat",
                "+++ b/build/appveyor/cl_setcompiler.bat",
                "@@ -22,3 +22,3 @@",
                " ::   vc140 = Visual Studio 2015",
                "-::   vc150 = Visual Studio 2017",
                "+::   vc141 = Visual Studio 2017",
                " ::",
                "@@ -46,6 +46,6 @@ IF NOT \"%PROFILE:~0,4%\" == \"MSVC\" (",
                "   IF !ERRORLEVEL! == 0 (SET COMPILER=vc120)",
                "-  CALL :CHECK 19.00",
                "+  CALL :CHECK 19.0",
                "   IF !ERRORLEVEL! == 0 (SET COMPILER=vc140)",
                "-  CALL :CHECK 19.10",
                "-  IF !ERRORLEVEL! == 0 (SET COMPILER=vc150)",
                "+  CALL :CHECK 19.1",
                "+  IF !ERRORLEVEL! == 0 (SET COMPILER=vc141)",
                " )",
                "@@ -61,3 +61,3 @@ EXIT /B 0",
                " :CHECK",
                "-cl /? 2>&1 | findstr /C:\"Version %1%.\" > nul",
                "+cl /? 2>&1 | findstr /C:\"Version %1%\" > nul",
                " EXIT /B",
                "diff --git a/build/appveyor/cl_setenv.bat b/build/appveyor/cl_setenv.bat",
                "index e80d6b569..10af2d347 100644",
                "--- a/build/appveyor/cl_setenv.bat",
                "+++ b/build/appveyor/cl_setenv.bat",
                "@@ -14,2 +14,4 @@",
                "+@ECHO OFF",
                "+",
                "        IF \"%PROFILE%\" == \"MSVC2010\" (",
                "@@ -23,7 +25,7 @@",
                " ) ELSE IF \"%PROFILE%\" == \"MSVC2017\" (",
                "-  CALL \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" %PLATFORM%",
                "+  CALL :SETUPNEWERMSVC    || EXIT /B",
                " ) ELSE IF \"%PROFILE%\" == \"MINGW\" (",
                "-  SET MSYS2_PATH_TYPE=stock",
                "-) ELSE IF \"%PROFILE%\" == \"MSYS\" (",
                "-  SET MSYS2_PATH_TYPE=stock",
                "+  REM Supported, nothing special to do here.",
                "+) ELSE IF \"%PROFILE%\" == \"CYGWIN\" (",
                "+  REM Supported, nothing special to do here.",
                " ) ELSE (",
                "@@ -37,8 +39,9 @@ CALL cl_setgenerator.bat  || EXIT /B",
                " SET APPVEYOR_SCRIPTS=%APPVEYOR_BUILD_FOLDER%\\build\\appveyor",
                "-SET BUILDCACHE=%APPVEYOR_BUILD_FOLDER%\\buildcache",
                "-SET BUILDDIR=%APPVEYOR_BUILD_FOLDER%\\local-thrift-build",
                "-SET INSTDIR=%APPVEYOR_BUILD_FOLDER%\\local-thrift-inst",
                "+SET BUILDCACHE=%APPVEYOR_BUILD_FOLDER%\\..\\build\\cache",
                "+SET BUILDDIR=%APPVEYOR_BUILD_FOLDER%\\..\\build\\%PROFILE%\\%PLATFORM%",
                "+SET INSTDIR=%APPVEYOR_BUILD_FOLDER%\\..\\build\\%PROFILE%\\%PLATFORM%",
                " SET SRCDIR=%APPVEYOR_BUILD_FOLDER%",
                "-: PLATFORM is x64 or x86, but we want x86 to become \"32\" when we strip it down for paths:",
                "+:: PLATFORM is x64 or x86",
                "+:: NORM_PLATFORM is 64 or 32",
                " SET NORM_PLATFORM=%PLATFORM:~-2,2%",
                "@@ -46,39 +49,64 @@ IF \"%NORM_PLATFORM%\" == \"86\" (SET NORM_PLATFORM=32)",
                "-:: FindBoost needs forward slashes so cmake doesn't see something as an escaped character",
                "-SET BOOST_ROOT=C:/Libraries/boost_%BOOST_VERSION:.=_%",
                "-SET BOOST_LIBRARYDIR=%BOOST_ROOT%/lib%NORM_PLATFORM%-msvc-%COMPILER:~-3,2%.0",
                "-SET OPENSSL_ROOT=C:\\OpenSSL-Win%NORM_PLATFORM%",
                "-SET WIN3P=%APPVEYOR_BUILD_FOLDER%\\thirdparty",
                "+IF \"%PROFILE:~0,4%\" == \"MSVC\" (",
                "-:: MSVC2010 doesn't \"do\" std::thread",
                "-IF \"%COMPILER%\" == \"vc100\" (",
                "-  SET THREADMODEL=BOOST",
                "-) ELSE (",
                "-  SET THREADMODEL=STD",
                "-)",
                "+  :: FindBoost needs forward slashes so cmake doesn't see something as an escaped character",
                "+  SET BOOST_ROOT=C:/Libraries/boost_%BOOST_VERSION:.=_%",
                "+  SET BOOST_LIBRARYDIR=!BOOST_ROOT!/lib%NORM_PLATFORM%-msvc-%COMPILER:~-3,2%.%COMPILER:~-1,1%",
                "+  SET OPENSSL_ROOT=C:\\OpenSSL-Win%NORM_PLATFORM%",
                "+  SET WIN3P=%APPVEYOR_BUILD_FOLDER%\\thirdparty",
                "-IF \"%PYTHON_VERSION%\" == \"\" (",
                "-  SET WITH_PYTHON=OFF",
                "-) ELSE (",
                "-  SET WITH_PYTHON=ON",
                "-  SET PATH=C:\\Python%PYTHON_VERSION:.=%\\scripts;C:\\Python%PYTHON_VERSION:.=%;!PATH!",
                "-)",
                "-IF \"%CONFIGURATION%\" == \"Debug\" (SET ZLIB_LIB_SUFFIX=d)",
                "+  :: MSVC2010 doesn't \"do\" std::thread",
                "+  IF \"%COMPILER%\" == \"vc100\" (",
                "+    SET THREADMODEL=BOOST",
                "+  ) ELSE (",
                "+    SET THREADMODEL=STD",
                "+  )",
                "-IF NOT \"%QT_VERSION%\" == \"\" (",
                "-  IF /i \"%PLATFORM%\" == \"x64\" SET QTEXT=_64",
                "-  SET PATH=C:\\Qt\\%QT_VERSION%\\%PROFILE%!QTEXT!\\bin;!PATH!",
                "-)",
                "+  IF \"%PYTHON_VERSION%\" == \"\" (",
                "+    SET WITH_PYTHON=OFF",
                "+  ) ELSE (",
                "+    SET WITH_PYTHON=ON",
                "+    IF /i \"%PLATFORM%\" == \"x64\" SET PTEXT=-x64",
                "+    SET PATH=C:\\Python%PYTHON_VERSION:.=%!PTEXT!\\scripts;C:\\Python%PYTHON_VERSION:.=%!PTEXT!;!PATH!",
                "+  )",
                "+  IF \"%CONFIGURATION%\" == \"Debug\" (SET ZLIB_LIB_SUFFIX=d)",
                "+",
                "+  IF NOT \"%QT_VERSION%\" == \"\" (",
                "+    IF /i \"%PLATFORM%\" == \"x64\" SET QTEXT=_64",
                "+    SET PATH=C:\\Qt\\%QT_VERSION%\\%PROFILE%!QTEXT!\\bin;!PATH!",
                "+  )",
                "+",
                "+) ELSE IF \"%PROFILE:~0,4%\" == \"MING\" (",
                "-IF NOT \"%PROFILE:~0,4%\" == \"MSVC\" (",
                "+  :: PLATFORM = x86 means MINGWPLAT i686",
                "+  :: PLATFORM = x64 means MINGWPLAT x86_64",
                "+  SET MINGWPLAT=x86_64",
                "+  IF \"%PLATFORM%\" == \"x86\" (SET MINGWPLAT=i686)",
                "   SET BASH=C:\\msys64\\usr\\bin\\bash.exe",
                "-  SET BOOST_ROOT=",
                "-  SET BOOST_INCLUDEDIR=/mingw64/include",
                "-  SET BOOST_LIBRARYDIR=/mingw64/lib",
                "-  SET OPENSSL_LIBRARIES=/mingw64/lib",
                "-  SET OPENSSL_ROOT=/mingw64",
                "-  SET WIN3P=",
                "+  !BASH! -lc \"sed -i '/export PATH=\\/mingw32\\/bin/d' ~/.bash_profile && sed -i '/export PATH=\\/mingw64\\/bin/d' ~/.bash_profile && echo 'export PATH=/mingw%NORM_PLATFORM%/bin:$PATH' >> ~/.bash_profile\" || EXIT /B",
                "-  !BASH! -lc \"sed -i '/export PATH=\\/mingw64\\/bin/d' ~/.bash_profile && echo 'export PATH=/mingw64/bin:$PATH' >> ~/.bash_profile\" || EXIT /B",
                "+  SET BUILDDIR=%BUILDDIR:\\=/%",
                "+  SET BUILDDIR=/c!BUILDDIR:~2!",
                "+  SET INSTDIR=%INSTDIR:\\=/%",
                "+  SET INSTDIR=/c!INSTDIR:~2!",
                "+  SET SRCDIR=%SRCDIR:\\=/%",
                "+  SET SRCDIR=/c!SRCDIR:~2!",
                "+",
                "+) ELSE IF \"%PROFILE:~0,4%\" == \"CYGW\" (",
                "+",
                "+  SET CYGWINROOT=C:\\cygwin",
                "+  IF \"%PLATFORM%\" == \"x64\" (SET CYGWINROOT=!CYGWINROOT!64)",
                "+",
                "+  SET BASH=!CYGWINROOT!\\bin\\bash.exe",
                "+  SET SETUP=!CYGWINROOT!\\setup-x86",
                "+  IF \"%PLATFORM%\" == \"x64\" (SET SETUP=!SETUP!_64)",
                "+  SET SETUP=!SETUP!.exe",
                "+",
                "+  SET BUILDDIR=%BUILDDIR:\\=/%",
                "+  SET BUILDDIR=/cygdrive/c!BUILDDIR:~2!",
                "+  SET INSTDIR=%INSTDIR:\\=/%",
                "+  SET INSTDIR_CYG=/cygdrive/c!INSTDIR:~2!",
                "+  SET SRCDIR=%SRCDIR:\\=/%",
                "+  SET SRCDIR=/cygdrive/c!SRCDIR:~2!",
                "@@ -86,7 +114,16 @@ IF NOT \"%PROFILE:~0,4%\" == \"MSVC\" (",
                "-SET BUILDDIR_MSYS=%BUILDDIR:\\=/%",
                "-SET BUILDDIR_MSYS=/c%BUILDDIR_MSYS:~2%",
                "-SET INSTDIR_MSYS=%INSTDIR:\\=/%",
                "-SET INSTDIR_MSYS=/c%INSTDIR_MSYS:~2%",
                "-SET SRCDIR_MSYS=%SRCDIR:\\=/%",
                "-SET SRCDIR_MSYS=/c%SRCDIR_MSYS:~2%",
                "+GOTO :EOF",
                "+",
                "+:SETUPNEWERMSVC",
                "+  FOR /F \"USEBACKQ TOKENS=*\" %%i IN (`call \"%ProgramFiles(x86)%\\Microsoft Visual Studio\\Installer\\vswhere.exe\" -version \"[15.0,16.0)\" -property installationPath`) DO (",
                "+    IF \"%MSVCROOT%\" == \"\" (SET MSVCROOT=%%i)",
                "+  )",
                "+  SET MSVCPLAT=x86",
                "+  IF \"%PLATFORM%\" == \"x64\" (SET MSVCPLAT=amd64)",
                "+",
                "+  SET CURRENTDIR=%CD%",
                "+  CALL \"!MSVCROOT!\\Common7\\Tools\\VsDevCmd.bat\" -arch=!MSVCPLAT! || EXIT /B",
                "+  CD %CURRENTDIR%",
                "+  EXIT /B",
                "+",
                "+:EOF",
                "diff --git a/build/appveyor/cl_setgenerator.bat b/build/appveyor/cl_setgenerator.bat",
                "index 7ca98530f..5eb6ff31f 100644",
                "--- a/build/appveyor/cl_setgenerator.bat",
                "+++ b/build/appveyor/cl_setgenerator.bat",
                "@@ -30,2 +30,3 @@",
                " ::  MSYS Makefiles               = Generates makefiles for MSYS",
                "+::  Unix Makefiles               = Generates makefiles for CYGWIN",
                " ::",
                "@@ -47,2 +48,6 @@ IF \"%PROFILE:~0,4%\" == \"MING\" (",
                "   SET GENERATOR=MinGW Makefiles",
                "+",
                "+) ELSE IF \"%PROFILE:~0,4%\" == \"CYGW\" (",
                "+  SET GENERATOR=Unix Makefiles",
                "+",
                " ) ELSE IF \"%PROFILE:~0,4%\" == \"MSYS\" (",
                "@@ -57,5 +62,5 @@ IF \"%PROFILE:~0,4%\" == \"MING\" (",
                "   IF !ERRORLEVEL! == 0 SET GENERATOR=Visual Studio 12 2013!GENARCH!",
                "-  CALL :CHECK 19.00",
                "+  CALL :CHECK 19.0",
                "   IF !ERRORLEVEL! == 0 SET GENERATOR=Visual Studio 14 2015!GENARCH!",
                "-  CALL :CHECK 19.10",
                "+  CALL :CHECK 19.1",
                "   IF !ERRORLEVEL! == 0 SET GENERATOR=Visual Studio 15 2017!GENARCH!",
                "@@ -72,3 +77,3 @@ EXIT /B 0",
                " :CHECK",
                "-cl /? 2>&1 | findstr /C:\"Version %1%.\" > nul",
                "+cl /? 2>&1 | findstr /C:\"Version %1%\" > nul",
                " EXIT /B",
                "diff --git a/build/appveyor/cl_showenv.bat b/build/appveyor/cl_showenv.bat",
                "index 33dd66072..3dda546e5 100644",
                "--- a/build/appveyor/cl_showenv.bat",
                "+++ b/build/appveyor/cl_showenv.bat",
                "@@ -36,2 +36,3 @@ ECHO ---------------------------------------------------------------------------",
                " ECHO APPVEYOR_SCRIPTS      = %APPVEYOR_SCRIPTS%",
                "+ECHO BASH                  = %BASH%",
                " ECHO BOOST_ROOT            = %BOOST_ROOT%",
                "@@ -46,2 +47,3 @@ ECHO JAVA_HOME             = %JAVA_HOME%",
                " ECHO OPENSSL_ROOT          = %OPENSSL_ROOT%",
                "+ECHO SETUP                 = %SETUP%",
                " ECHO SRCDIR                = %SRCDIR%",
                "@@ -51,11 +53,6 @@ ECHO ZLIB_STATIC_SUFFIX    = %ZLIB_STATIC_SUFFIX%",
                " IF NOT \"%PROFILE:~0,4%\" == \"MSVC\" (",
                "-ECHO/",
                "-ECHO MSYS2/MinGW",
                "-ECHO -------------------------------------------------------------------------------",
                "-ECHO BUILDDIR_MSYS         = %BUILDDIR_MSYS%",
                "-ECHO INSTDIR_MSYS          = %INSTDIR_MSYS%",
                "-ECHO MSYS2_PATH_TYPE       = %MSYS2_PATH_TYPE%",
                "-ECHO SRCDIR_MSYS           = %SRCDIR_MSYS%",
                "-ECHO PATH                  =",
                "-C:\\msys64\\usr\\bin\\bash -lc \"echo $PATH\"",
                "+  ECHO/",
                "+  ECHO UNIXy PATH",
                "+  ECHO -------------------------------------------------------------------------------",
                "+  %BASH% -lc \"echo $PATH\"",
                " )",
                "diff --git a/build/appveyor/simulate-appveyor.bat b/build/appveyor/simulate-appveyor.bat",
                "index b32c0da12..8674f40b7 100644",
                "--- a/build/appveyor/simulate-appveyor.bat",
                "+++ b/build/appveyor/simulate-appveyor.bat",
                "@@ -18,3 +18,3 @@",
                " ::   cd build\\appveyor",
                "-::   simulate-appveyor.bat [Debug|Release] [x86|x64] [MINGW|MSVC2015]",
                "+::   simulate-appveyor.bat [Debug|Release] [x86|x64] [CYGWIN|MINGW|MSVC201?]",
                " ::",
                "diff --git a/compiler/cpp/src/thrift/thrifty.yy b/compiler/cpp/src/thrift/thrifty.yy",
                "index e4cae0c29..df34adf04 100644",
                "--- a/compiler/cpp/src/thrift/thrifty.yy",
                "+++ b/compiler/cpp/src/thrift/thrifty.yy",
                "@@ -37,2 +37,3 @@",
                " #include <stdio.h>",
                "+#include <string.h>",
                " #ifndef _MSC_VER"
            ],
            "changed_files": [
                "appveyor.yml",
                "build/appveyor/CYGW-appveyor-build.bat",
                "build/appveyor/CYGW-appveyor-install.bat",
                "build/appveyor/CYGW-appveyor-test.bat",
                "build/appveyor/MING-appveyor-build.bat",
                "build/appveyor/MING-appveyor-install.bat",
                "build/appveyor/MING-appveyor-test.bat",
                "build/appveyor/MSVC-appveyor-install.bat",
                "build/appveyor/MSVC-appveyor-test.bat",
                "build/appveyor/MSYS-appveyor-build.bat",
                "build/appveyor/MSYS-appveyor-install.bat",
                "build/appveyor/build-libevent.bat",
                "build/appveyor/build-zlib.bat",
                "build/appveyor/cl_setcompiler.bat",
                "build/appveyor/cl_setenv.bat",
                "build/appveyor/cl_setgenerator.bat",
                "build/appveyor/cl_showenv.bat",
                "build/appveyor/simulate-appveyor.bat",
                "compiler/cpp/src/thrift/thrifty.yy"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "THRIFT-4508": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "lib/go/thrift/v0.0.1-do-not-use",
                "v0.12.0",
                "v0.13.0",
                "v0.14.0",
                "v0.14.1",
                "v0.14.2",
                "v0.15.0",
                "v0.16.0",
                "v0.17.0",
                "v0.18.0",
                "v0.18.1",
                "v0.19.0",
                "v0.20.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: THRIFT-4508",
                    "relevance": 2
                }
            ]
        }
    ]
}
