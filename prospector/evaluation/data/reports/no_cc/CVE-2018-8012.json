{
    "advisory_record": {
        "cve_id": "CVE-2018-8012",
        "description": "No authentication/authorization is enforced when a server attempts to join a quorum in Apache ZooKeeper before 3.4.10, and 3.5.0-alpha through 3.5.3-beta. As a result an arbitrary end point could join the cluster and begin propagating counterfeit changes to the leader.",
        "reserved_timestamp": 1520553600,
        "published_timestamp": 1526860800,
        "updated_timestamp": 1626775612,
        "repository_url": null,
        "references": {
            "": 215,
            "https://issues.apache.org/jira/browse/ZOOKEEPER-1045": 6,
            "https://cwiki.apache.org/confluence/display/ZOOKEEPER/Server-Server+mutual+authentication": 4,
            "https://issues.apache.org/jira/secure/attachment/12840904/ZOOKEEPER-1045-br-3-4.patch": 3,
            "https://www.debian.org/security/2018/dsa-4214": 2,
            "http://www.securitytracker.com/id/1040948": 2,
            "http://www.securityfocus.com/bid/104253": 2,
            "https://lists.apache.org/thread.html/053d9ce4d579b02203db18545fee5e33f35f2932885459b74d1e4272%40%3Cissues.activemq.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/bcce5a9c532b386c68dab2f6b3ce8b0cc9b950ec551766e76391caa3%40%3Ccommits.nifi.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/rca37935d661f4689cb4119f1b3b224413b22be161b678e6e6ce0c69b%40%3Ccommits.nifi.apache.org%3E": 2,
            "https://www.oracle.com/security-alerts/cpujul2020.html": 2,
            "https://lists.apache.org/thread.html/c75147028c1c79bdebd4f8fa5db2b77da85de2b05ecc0d54d708b393%40%3Cdev.zookeeper.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/r8f0d920805af93033c488af89104e2d682662bacfb8406db865d5e14%40%3Cdev.jackrabbit.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/rc5bc4ddb0deabf8cfb69378cecee56fcdc76929bea9e6373cb863870%40%3Cdev.jackrabbit.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/r73daf1fc5d85677d9a854707e1908d14e174b7bbb0c603709c0ab33f%40%3Coak-commits.jackrabbit.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/re3a4048e9515d4afea416df907a612ed384a16c57cf99e97ee4a12f2%40%3Cdev.jackrabbit.apache.org%3E": 2,
            "https://www.openwall.com/lists/oss-security/2018/05/21/6": 2,
            "http://openwall.com/lists/oss-security/2018/05/21/6": 2,
            "https://access.redhat.com/documentation/en-us/red_hat_openshift_application_runtimes/1/html/red_hat_openshift_application_runtimes_release_notes/rn-rutime-components#maven-artifacts-vertx-productized": 2,
            "https://vertx.io/docs/vertx-kafka-client/java/": 2,
            "https://docs.atlassian.com/jira/jcore-docs-0820/": 2,
            "https://issues.apache.org/jira/browse/ZOOKEEPER-938": 2,
            "http://www.atlassian.com/software/jira": 2,
            "https://www.redhat.com": 2,
            "https://issues.apache.org/jira/secure/MyJiraHome.jspa": 1,
            "https://selfserve.apache.org/jira-account.html": 1,
            "https://reviews.apache.org/r/47354/": 1,
            "https://github.com/apache/zookeeper/pull/147": 1,
            "https://www.atlassian.com/software/jira": 1,
            "http://www.atlassian.com/": 1,
            "https://cwiki.apache.org/confluence/login.action?os_destination=%2Fdisplay%2FZOOKEEPER%2FServer-Server%2Bmutual%2Bauthentication": 1,
            "https://docs.atlassian.com/confluence/docs-719/": 1,
            "https://docs.atlassian.com/confluence/docs-719/help.whats.new.iframe.link": 1,
            "https://confluence.atlassian.com/display/DOC/Confluence+7.19+Release+Notes": 1,
            "https://issues.apache.org/jira/browse/ZOOKEEPER-2639": 1,
            "https://www.atlassian.com/software/views/opensource-community-additional-license-offer": 1,
            "https://www.atlassian.com/software/confluence": 1,
            "https://support.atlassian.com/confluence-server/": 1,
            "https://www.atlassian.com/company": 1,
            "https://www.atlassian.com/": 1,
            "https://status.redhat.com/": 1,
            "https://www.redhat.com/en/about/privacy-policy": 1,
            "https://www.redhat.com/en/about/terms-use": 1,
            "https://www.redhat.com/en/about/all-policies-guidelines": 1,
            "https://www.redhat.com/en/summit": 1
        },
        "affected_products": [
            "Apache ZooKeeper",
            "Apache",
            "ZooKeeper"
        ],
        "versions": {
            "status": "affected",
            "version": "Apache ZooKeeper prior to 3.4.10, Apache ZooKeeper 3.5.0-alpha through 3.5.3-beta"
        },
        "files": [
            "ZooKeeper"
        ],
        "keywords": [
            "enforce",
            "attempt",
            "result",
            "quorum",
            "alpha",
            "begin",
            "authorization",
            "propagate",
            "join",
            "authentication",
            "cluster",
            "change",
            "leader",
            "beta",
            "apache",
            "server",
            "zookeeper",
            "point"
        ],
        "files_extension": [],
        "has_fixing_commit": false
    },
    "commits": [
        {
            "commit_id": "8139e742a82cfaeb4161492b62ed3aa0c6067e0b",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1524522026,
            "hunks": 15,
            "message": "ZOOKEEPER-2994: Tool required to recover log and snapshot entries with CRC errors https://issues.apache.org/jira/browse/ZOOKEEPER-2994 In the event  of ZooKeeper transaction log becomes corrupted and fail CRC checks (preventing startup) we should have a mechanism to get the cluster running again. Previously we achieved this by loading the broken transaction log with a modified version of ZK with disabled CRC check and forced it to write new txn log files. It has proven that once you end up with the corrupt txn log there is no way to recover except manually modifying the crc check. That's basically why the tool is needed. It's called TxnLogToolkit, a new console application similar to LogFormatter and SnapshotFormatter, but it's intentionally separated to keep backward compatibility in the existing tools. This PR contains TXN log tool only. You probably also notice a refactoring to extract file padding logic from FileTxnLog to reuse in the new tool. Related code changes can be reviewed alone in a separate commit if preferred. Author: Andor Molnar <andor@cloudera.com> Reviewers: phunt@apache.org Closes #487 from anmolnar/ZOOKEEPER-2994 and squashes the following commits: 221760ccc [Andor Molnar] ZOOKEEPER-2994. Added documentation and startup scripts a69d7297b [Andor Molnar] ZOOKEEPER-2994. Fix findbugs warning 0b95efefd [Andor Molnar] ZOOKEEPER-2994. Fix for unit test 15fa45c68 [Andor Molnar] ZOOKEEPER-2994. Added padding, tool renamed to TxnLogToolkit, interactive mode, etc. 6a1ad0ec4 [Andor Molnar] ZOOKEEPER-2994. Refactor FileTxnLog's padding logic to separate class for reusability 0d089ccdd [Andor Molnar] ZOOKEEPER-2994. Added new tool TxnLogTool for txn log file recovery Change-Id: I7560362633a7bc919ae6d3ca7e3588e196a1919c (cherry picked from commit 154f9c536f7c696b774361937c6b4b08603d16cf) Signed-off-by: Patrick Hunt <phunt@apache.org>",
            "diff": [
                "diff --git a/bin/zkTxnLogToolkit.cmd b/bin/zkTxnLogToolkit.cmd",
                "new file mode 100755",
                "index 000000000..362dc44b0",
                "--- /dev/null",
                "+++ b/bin/zkTxnLogToolkit.cmd",
                "@@ -0,0 +1,24 @@",
                "+@echo off",
                "+REM Licensed to the Apache Software Foundation (ASF) under one or more",
                "+REM contributor license agreements.  See the NOTICE file distributed with",
                "+REM this work for additional information regarding copyright ownership.",
                "+REM The ASF licenses this file to You under the Apache License, Version 2.0",
                "+REM (the \"License\"); you may not use this file except in compliance with",
                "+REM the License.  You may obtain a copy of the License at",
                "+REM",
                "+REM     http://www.apache.org/licenses/LICENSE-2.0",
                "+REM",
                "+REM Unless required by applicable law or agreed to in writing, software",
                "+REM distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+REM WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+REM See the License for the specific language governing permissions and",
                "+REM limitations under the License.",
                "+",
                "+setlocal",
                "+call \"%~dp0zkEnv.cmd\"",
                "+",
                "+set ZOOMAIN=org.apache.zookeeper.server.persistence.TxnLogToolkit",
                "+call %JAVA% -cp \"%CLASSPATH%\" %ZOOMAIN% %*",
                "+",
                "+endlocal",
                "+",
                "diff --git a/bin/zkTxnLogToolkit.sh b/bin/zkTxnLogToolkit.sh",
                "new file mode 100755",
                "index 000000000..8beed20dd",
                "--- /dev/null",
                "+++ b/bin/zkTxnLogToolkit.sh",
                "@@ -0,0 +1,38 @@",
                "+#!/usr/bin/env bash",
                "+",
                "+# Licensed to the Apache Software Foundation (ASF) under one or more",
                "+# contributor license agreements.  See the NOTICE file distributed with",
                "+# this work for additional information regarding copyright ownership.",
                "+# The ASF licenses this file to You under the Apache License, Version 2.0",
                "+# (the \"License\"); you may not use this file except in compliance with",
                "+# the License.  You may obtain a copy of the License at",
                "+#",
                "+#     http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing, software",
                "+# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+# See the License for the specific language governing permissions and",
                "+# limitations under the License.",
                "+",
                "+#",
                "+# If this scripted is run out of /usr/bin or some other system bin directory",
                "+# it should be linked to and not copied. Things like java jar files are found",
                "+# relative to the canonical path of this script.",
                "+#",
                "+",
                "+# use POSIX interface, symlink is followed automatically",
                "+ZOOBIN=\"${BASH_SOURCE-$0}\"",
                "+ZOOBIN=\"$(dirname \"${ZOOBIN}\")\"",
                "+ZOOBINDIR=\"$(cd \"${ZOOBIN}\"; pwd)\"",
                "+",
                "+if [ -e \"$ZOOBIN/../libexec/zkEnv.sh\" ]; then",
                "+  . \"$ZOOBINDIR\"/../libexec/zkEnv.sh",
                "+else",
                "+  . \"$ZOOBINDIR\"/zkEnv.sh",
                "+fi",
                "+",
                "+\"$JAVA\" -cp \"$CLASSPATH\" $JVMFLAGS \\",
                "+     org.apache.zookeeper.server.persistence.TxnLogToolkit \"$@\"",
                "+",
                "+",
                "diff --git a/docs/index.pdf b/docs/index.pdf",
                "index a92aca40d..e93f49d1b 100644",
                "Binary files a/docs/index.pdf and b/docs/index.pdf differ",
                "diff --git a/docs/javaExample.pdf b/docs/javaExample.pdf",
                "index 40482b4c0..80753fed8 100644",
                "Binary files a/docs/javaExample.pdf and b/docs/javaExample.pdf differ",
                "diff --git a/docs/linkmap.pdf b/docs/linkmap.pdf",
                "index ab35cc7d6..e5bebad3e 100644",
                "Binary files a/docs/linkmap.pdf and b/docs/linkmap.pdf differ",
                "diff --git a/docs/recipes.pdf b/docs/recipes.pdf",
                "index 38a8a8c32..d5eb59666 100644",
                "Binary files a/docs/recipes.pdf and b/docs/recipes.pdf differ",
                "diff --git a/docs/zookeeperAdmin.html b/docs/zookeeperAdmin.html",
                "index 50e4bdf3b..e139c73b9 100644",
                "--- a/docs/zookeeperAdmin.html",
                "+++ b/docs/zookeeperAdmin.html",
                "@@ -323,2 +323,5 @@ document.write(\"Last Published: \" + document.lastModified);",
                " </li>",
                "+<li>",
                "+<a href=\"#Recovery+-+TxnLogToolkit\">Recovery - TxnLogToolkit</a>",
                "+</li>",
                " </ul>",
                "@@ -2467,2 +2470,61 @@ server.3=zoo3:2888:3888</pre>",
                " </div>",
                "+<a name=\"Recovery+-+TxnLogToolkit\"></a>",
                "+<h4>Recovery - TxnLogToolkit</h4>",
                "+<p>TxnLogToolkit is a command line tool shipped with ZooKeeper which",
                "+          is capable of recovering transaction log entries with broken CRC.</p>",
                "+<p>Running it without any command line parameters or with the \"-h,--help\"",
                "+          argument, it outputs the following help page:</p>",
                "+<pre class=\"code\">",
                "+          $ bin/zkTxnLogToolkit.sh",
                "+",
                "+          usage: TxnLogToolkit [-dhrv] txn_log_file_name",
                "+          -d,--dump      Dump mode. Dump all entries of the log file. (this is the default)",
                "+          -h,--help      Print help message",
                "+          -r,--recover   Recovery mode. Re-calculate CRC for broken entries.",
                "+          -v,--verbose   Be verbose in recovery mode: print all entries, not just fixed ones.",
                "+          -y,--yes       Non-interactive mode: repair all CRC errors without asking",
                "+        </pre>",
                "+<p>The default behaviour is safe: it dumps the entries of the given",
                "+        transaction log file to the screen: (same as using '-d,--dump' parameter)</p>",
                "+<pre class=\"code\">",
                "+          $ bin/zkTxnLogToolkit.sh log.100000001",
                "+          ZooKeeper Transactional Log File with dbid 0 txnlog format version 2",
                "+          4/5/18 2:15:58 PM CEST session 0x16295bafcc40000 cxid 0x0 zxid 0x100000001 createSession 30000",
                "+          <strong>CRC ERROR - 4/5/18 2:16:05 PM CEST session 0x16295bafcc40000 cxid 0x1 zxid 0x100000002 closeSession null</strong>",
                "+          4/5/18 2:16:05 PM CEST session 0x16295bafcc40000 cxid 0x1 zxid 0x100000002 closeSession null",
                "+          4/5/18 2:16:12 PM CEST session 0x26295bafcc90000 cxid 0x0 zxid 0x100000003 createSession 30000",
                "+          4/5/18 2:17:34 PM CEST session 0x26295bafcc90000 cxid 0x0 zxid 0x200000001 closeSession null",
                "+          4/5/18 2:17:34 PM CEST session 0x16295bd23720000 cxid 0x0 zxid 0x200000002 createSession 30000",
                "+          4/5/18 2:18:02 PM CEST session 0x16295bd23720000 cxid 0x2 zxid 0x200000003 create '/andor,#626262,v{s{31,s{'world,'anyone}}},F,1",
                "+          EOF reached after 6 txns.",
                "+        </pre>",
                "+<p>There's a CRC error in the 2nd entry of the above transaction log file. In <strong>dump</strong>",
                "+          mode, the toolkit only prints this information to the screen without touching the original file. In",
                "+          <strong>recovery</strong> mode (-r,--recover flag) the original file still remains",
                "+          untouched and all transactions will be copied over to a new txn log file with \".fixed\" suffix. It recalculates",
                "+          CRC values and copies the calculated value, if it doesn't match the original txn entry.",
                "+          By default, the tool works interactively: it asks for confirmation whenever CRC error encountered.</p>",
                "+<pre class=\"code\">",
                "+          $ bin/zkTxnLogToolkit.sh -r log.100000001",
                "+          ZooKeeper Transactional Log File with dbid 0 txnlog format version 2",
                "+          CRC ERROR - 4/5/18 2:16:05 PM CEST session 0x16295bafcc40000 cxid 0x1 zxid 0x100000002 closeSession null",
                "+          Would you like to fix it (Yes/No/Abort) ?",
                "+        </pre>",
                "+<p>Answering <strong>Yes</strong> means the newly calculated CRC value will be outputted",
                "+          to the new file. <strong>No</strong> means that the original CRC value will be copied over.",
                "+          <strong>Abort</strong> will abort the entire operation and exits.",
                "+          (In this case the \".fixed\" will not be deleted and left in a half-complete state: contains only entries which",
                "+          have already been processed or only the header if the operation was aborted at the first entry.)</p>",
                "+<pre class=\"code\">",
                "+          $ bin/zkTxnLogToolkit.sh -r log.100000001",
                "+          ZooKeeper Transactional Log File with dbid 0 txnlog format version 2",
                "+          CRC ERROR - 4/5/18 2:16:05 PM CEST session 0x16295bafcc40000 cxid 0x1 zxid 0x100000002 closeSession null",
                "+          Would you like to fix it (Yes/No/Abort) ? y",
                "+          EOF reached after 6 txns.",
                "+          Recovery file log.100000001.fixed has been written with 1 fixed CRC error(s)",
                "+        </pre>",
                "+<p>The default behaviour of recovery is to be silent: only entries with CRC error get printed to the screen.",
                "+          One can turn on verbose mode with the -v,--verbose parameter to see all records.",
                "+          Interactive mode can be turned off with the -y,--yes parameter. In this case all CRC errors will be fixed",
                "+          in the new transaction file.</p>",
                " <a name=\"sc_commonProblems\"></a>",
                "diff --git a/docs/zookeeperAdmin.pdf b/docs/zookeeperAdmin.pdf",
                "index da5d0bdb5..6add3d9fb 100644",
                "Binary files a/docs/zookeeperAdmin.pdf and b/docs/zookeeperAdmin.pdf differ",
                "diff --git a/docs/zookeeperHierarchicalQuorums.pdf b/docs/zookeeperHierarchicalQuorums.pdf",
                "index 4575aae91..b27192600 100644",
                "Binary files a/docs/zookeeperHierarchicalQuorums.pdf and b/docs/zookeeperHierarchicalQuorums.pdf differ",
                "diff --git a/docs/zookeeperInternals.pdf b/docs/zookeeperInternals.pdf",
                "index a7001cf04..26b2ba37b 100644",
                "Binary files a/docs/zookeeperInternals.pdf and b/docs/zookeeperInternals.pdf differ",
                "diff --git a/docs/zookeeperJMX.pdf b/docs/zookeeperJMX.pdf",
                "index 9f907255f..137e16ca8 100644",
                "Binary files a/docs/zookeeperJMX.pdf and b/docs/zookeeperJMX.pdf differ",
                "diff --git a/docs/zookeeperObservers.pdf b/docs/zookeeperObservers.pdf",
                "index 4394f8b2a..f4b358c0e 100644",
                "Binary files a/docs/zookeeperObservers.pdf and b/docs/zookeeperObservers.pdf differ",
                "diff --git a/docs/zookeeperOver.pdf b/docs/zookeeperOver.pdf",
                "index b04699a43..9049acb17 100644",
                "Binary files a/docs/zookeeperOver.pdf and b/docs/zookeeperOver.pdf differ",
                "diff --git a/docs/zookeeperProgrammers.pdf b/docs/zookeeperProgrammers.pdf",
                "index bff6886f4..df5129984 100644",
                "Binary files a/docs/zookeeperProgrammers.pdf and b/docs/zookeeperProgrammers.pdf differ",
                "diff --git a/docs/zookeeperQuotas.pdf b/docs/zookeeperQuotas.pdf",
                "index 0fbd4a1bb..7b441eb03 100644",
                "Binary files a/docs/zookeeperQuotas.pdf and b/docs/zookeeperQuotas.pdf differ",
                "diff --git a/docs/zookeeperReconfig.pdf b/docs/zookeeperReconfig.pdf",
                "index e1c11b7c1..af3beeaba 100644",
                "Binary files a/docs/zookeeperReconfig.pdf and b/docs/zookeeperReconfig.pdf differ",
                "diff --git a/docs/zookeeperStarted.pdf b/docs/zookeeperStarted.pdf",
                "index 23e692b6e..0e2778e23 100644",
                "Binary files a/docs/zookeeperStarted.pdf and b/docs/zookeeperStarted.pdf differ",
                "diff --git a/docs/zookeeperTutorial.pdf b/docs/zookeeperTutorial.pdf",
                "index e5ef698fc..857727b2d 100644",
                "Binary files a/docs/zookeeperTutorial.pdf and b/docs/zookeeperTutorial.pdf differ",
                "diff --git a/src/java/main/org/apache/zookeeper/server/persistence/FilePadding.java b/src/java/main/org/apache/zookeeper/server/persistence/FilePadding.java",
                "new file mode 100644",
                "index 000000000..c4052e958",
                "--- /dev/null",
                "+++ b/src/java/main/org/apache/zookeeper/server/persistence/FilePadding.java",
                "@@ -0,0 +1,105 @@",
                "+/**",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.zookeeper.server.persistence;",
                "+",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+",
                "+import java.io.IOException;",
                "+import java.nio.ByteBuffer;",
                "+import java.nio.channels.FileChannel;",
                "+",
                "+public class FilePadding {",
                "+    private static final Logger LOG;",
                "+    private static long preAllocSize = 65536 * 1024;",
                "+    private static final ByteBuffer fill = ByteBuffer.allocateDirect(1);",
                "+",
                "+    static {",
                "+        LOG = LoggerFactory.getLogger(FileTxnLog.class);",
                "+",
                "+        String size = System.getProperty(\"zookeeper.preAllocSize\");",
                "+        if (size != null) {",
                "+            try {",
                "+                preAllocSize = Long.parseLong(size) * 1024;",
                "+            } catch (NumberFormatException e) {",
                "+                LOG.warn(size + \" is not a valid value for preAllocSize\");",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    private long currentSize;",
                "+",
                "+    /**",
                "+     * method to allow setting preallocate size",
                "+     * of log file to pad the file.",
                "+     *",
                "+     * @param size the size to set to in bytes",
                "+     */",
                "+    public static void setPreallocSize(long size) {",
                "+        preAllocSize = size;",
                "+    }",
                "+",
                "+    public void setCurrentSize(long currentSize) {",
                "+        this.currentSize = currentSize;",
                "+    }",
                "+",
                "+    /**",
                "+     * pad the current file to increase its size to the next multiple of preAllocSize greater than the current size and position",
                "+     *",
                "+     * @param fileChannel the fileChannel of the file to be padded",
                "+     * @throws IOException",
                "+     */",
                "+    long padFile(FileChannel fileChannel) throws IOException {",
                "+        long newFileSize = calculateFileSizeWithPadding(fileChannel.position(), currentSize, preAllocSize);",
                "+        if (currentSize != newFileSize) {",
                "+            fileChannel.write((ByteBuffer) fill.position(0), newFileSize - fill.remaining());",
                "+            currentSize = newFileSize;",
                "+        }",
                "+        return currentSize;",
                "+    }",
                "+",
                "+    /**",
                "+     * Calculates a new file size with padding. We only return a new size if",
                "+     * the current file position is sufficiently close (less than 4K) to end of",
                "+     * file and preAllocSize is > 0.",
                "+     *",
                "+     * @param position     the point in the file we have written to",
                "+     * @param fileSize     application keeps track of the current file size",
                "+     * @param preAllocSize how many bytes to pad",
                "+     * @return the new file size. It can be the same as fileSize if no",
                "+     * padding was done.",
                "+     * @throws IOException",
                "+     */",
                "+    // VisibleForTesting",
                "+    public static long calculateFileSizeWithPadding(long position, long fileSize, long preAllocSize) {",
                "+        // If preAllocSize is positive and we are within 4KB of the known end of the file calculate a new file size",
                "+        if (preAllocSize > 0 && position + 4096 >= fileSize) {",
                "+            // If we have written more than we have previously preallocated we need to make sure the new",
                "+            // file size is larger than what we already have",
                "+            if (position > fileSize) {",
                "+                fileSize = position + preAllocSize;",
                "+                fileSize -= fileSize % preAllocSize;",
                "+            } else {",
                "+                fileSize += preAllocSize;",
                "+            }",
                "+        }",
                "+",
                "+        return fileSize;",
                "+    }",
                "+}",
                "diff --git a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "index 72ec606a3..fae7f022b 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "@@ -93,5 +93,2 @@ public class FileTxnLog implements TxnLog {",
                "-    static long preAllocSize =  65536 * 1024;",
                "-    private static final ByteBuffer fill = ByteBuffer.allocateDirect(1);",
                "-",
                "     public final static int TXNLOG_MAGIC =",
                "@@ -109,10 +106,2 @@ public class FileTxnLog implements TxnLog {",
                "-        String size = System.getProperty(\"zookeeper.preAllocSize\");",
                "-        if (size != null) {",
                "-            try {",
                "-                preAllocSize = Long.parseLong(size) * 1024;",
                "-            } catch (NumberFormatException e) {",
                "-                LOG.warn(size + \" is not a valid value for preAllocSize\");",
                "-            }",
                "-        }",
                "         /** Local variable to read fsync.warningthresholdms into */",
                "@@ -134,4 +123,4 @@ public class FileTxnLog implements TxnLog {",
                "         new LinkedList<FileOutputStream>();",
                "-    long currentSize;",
                "     File logFileWrite = null;",
                "+    private FilePadding filePadding = new FilePadding();",
                "@@ -148,11 +137,2 @@ public class FileTxnLog implements TxnLog {",
                "-    /**",
                "-     * method to allow setting preallocate size",
                "-     * of log file to pad the file.",
                "-     * @param size the size to set to in bytes",
                "-     */",
                "-    public static void setPreallocSize(long size) {",
                "-        preAllocSize = size;",
                "-    }",
                "-",
                "     /**",
                "@@ -165,3 +145,2 @@ public class FileTxnLog implements TxnLog {",
                "-",
                "     /**",
                "@@ -223,6 +202,6 @@ public class FileTxnLog implements TxnLog {",
                "            logStream.flush();",
                "-           currentSize = fos.getChannel().position();",
                "+           filePadding.setCurrentSize(fos.getChannel().position());",
                "            streamsToFlush.add(fos);",
                "         }",
                "-        currentSize = padFile(fos.getChannel());",
                "+        filePadding.padFile(fos.getChannel());",
                "         byte[] buf = Util.marshallTxnEntry(hdr, txn);",
                "@@ -240,45 +219,2 @@ public class FileTxnLog implements TxnLog {",
                "-    /**",
                "-     * pad the current file to increase its size to the next multiple of preAllocSize greater than the current size and position",
                "-     * @param fileChannel the fileChannel of the file to be padded",
                "-     * @throws IOException",
                "-     */",
                "-    private long padFile(FileChannel fileChannel) throws IOException {",
                "-        long newFileSize = calculateFileSizeWithPadding(fileChannel.position(), currentSize, preAllocSize);",
                "-        if (currentSize != newFileSize) {",
                "-            fileChannel.write((ByteBuffer) fill.position(0), newFileSize - fill.remaining());",
                "-            currentSize = newFileSize;",
                "-        }",
                "-        return currentSize;",
                "-    }",
                "-",
                "-    /**",
                "-     * Calculates a new file size with padding. We only return a new size if",
                "-     * the current file position is sufficiently close (less than 4K) to end of",
                "-     * file and preAllocSize is > 0.",
                "-     *",
                "-     * @param position the point in the file we have written to",
                "-     * @param fileSize application keeps track of the current file size",
                "-     * @param preAllocSize how many bytes to pad",
                "-     * @return the new file size. It can be the same as fileSize if no",
                "-     * padding was done.",
                "-     * @throws IOException",
                "-     */",
                "-    // VisibleForTesting",
                "-    public static long calculateFileSizeWithPadding(long position, long fileSize, long preAllocSize) {",
                "-        // If preAllocSize is positive and we are within 4KB of the known end of the file calculate a new file size",
                "-        if (preAllocSize > 0 && position + 4096 >= fileSize) {",
                "-            // If we have written more than we have previously preallocated we need to make sure the new",
                "-            // file size is larger than what we already have",
                "-            if (position > fileSize){",
                "-                fileSize = position + preAllocSize;",
                "-                fileSize -= fileSize % preAllocSize;",
                "-            } else {",
                "-                fileSize += preAllocSize;",
                "-            }",
                "-        }",
                "-",
                "-        return fileSize;",
                "-    }",
                "-",
                "     /**",
                "diff --git a/src/java/main/org/apache/zookeeper/server/persistence/TxnLogToolkit.java b/src/java/main/org/apache/zookeeper/server/persistence/TxnLogToolkit.java",
                "new file mode 100644",
                "index 000000000..c6703eaed",
                "--- /dev/null",
                "+++ b/src/java/main/org/apache/zookeeper/server/persistence/TxnLogToolkit.java",
                "@@ -0,0 +1,319 @@",
                "+/**",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.zookeeper.server.persistence;",
                "+",
                "+import org.apache.commons.cli.CommandLine;",
                "+import org.apache.commons.cli.CommandLineParser;",
                "+import org.apache.commons.cli.HelpFormatter;",
                "+import org.apache.commons.cli.Option;",
                "+import org.apache.commons.cli.Options;",
                "+import org.apache.commons.cli.ParseException;",
                "+import org.apache.commons.cli.PosixParser;",
                "+import org.apache.jute.BinaryInputArchive;",
                "+import org.apache.jute.BinaryOutputArchive;",
                "+import org.apache.jute.Record;",
                "+import org.apache.zookeeper.server.TraceFormatter;",
                "+import org.apache.zookeeper.server.util.SerializeUtils;",
                "+import org.apache.zookeeper.txn.TxnHeader;",
                "+",
                "+import java.io.Closeable;",
                "+import java.io.EOFException;",
                "+import java.io.File;",
                "+import java.io.FileInputStream;",
                "+import java.io.FileNotFoundException;",
                "+import java.io.FileOutputStream;",
                "+import java.io.IOException;",
                "+import java.io.InputStreamReader;",
                "+import java.io.Reader;",
                "+import java.text.DateFormat;",
                "+import java.util.Date;",
                "+import java.util.Scanner;",
                "+import java.util.zip.Adler32;",
                "+import java.util.zip.Checksum;",
                "+",
                "+import static org.apache.zookeeper.server.persistence.FileTxnLog.TXNLOG_MAGIC;",
                "+",
                "+public class TxnLogToolkit implements Closeable {",
                "+",
                "+    static class TxnLogToolkitException extends Exception {",
                "+        private static final long serialVersionUID = 1L;",
                "+        private int exitCode;",
                "+",
                "+        TxnLogToolkitException(int exitCode, String message, Object... params) {",
                "+            super(String.format(message, params));",
                "+            this.exitCode = exitCode;",
                "+        }",
                "+",
                "+        int getExitCode() {",
                "+            return exitCode;",
                "+        }",
                "+    }",
                "+",
                "+    static class TxnLogToolkitParseException extends TxnLogToolkitException {",
                "+        private static final long serialVersionUID = 1L;",
                "+        private Options options;",
                "+",
                "+        TxnLogToolkitParseException(Options options, int exitCode, String message, Object... params) {",
                "+            super(exitCode, message, params);",
                "+            this.options = options;",
                "+        }",
                "+",
                "+        Options getOptions() {",
                "+            return options;",
                "+        }",
                "+    }",
                "+",
                "+    private File txnLogFile;",
                "+    private boolean recoveryMode = false;",
                "+    private boolean verbose = false;",
                "+    private FileInputStream txnFis;",
                "+    private BinaryInputArchive logStream;",
                "+",
                "+    // Recovery mode",
                "+    private int crcFixed = 0;",
                "+    private FileOutputStream recoveryFos;",
                "+    private BinaryOutputArchive recoveryOa;",
                "+    private File recoveryLogFile;",
                "+    private FilePadding filePadding = new FilePadding();",
                "+    private boolean force = false;",
                "+",
                "+    /**",
                "+     * @param args Command line arguments",
                "+     */",
                "+    public static void main(String[] args) throws Exception {",
                "+        try (final TxnLogToolkit lt = parseCommandLine(args)) {",
                "+            lt.dump(new InputStreamReader(System.in));",
                "+            lt.printStat();",
                "+        } catch (TxnLogToolkitParseException e) {",
                "+            System.err.println(e.getMessage() + \"\\n\");",
                "+            printHelpAndExit(e.getExitCode(), e.getOptions());",
                "+        } catch (TxnLogToolkitException e) {",
                "+            System.err.println(e.getMessage());",
                "+            System.exit(e.getExitCode());",
                "+        }",
                "+    }",
                "+",
                "+    public TxnLogToolkit(boolean recoveryMode, boolean verbose, String txnLogFileName, boolean force)",
                "+            throws FileNotFoundException, TxnLogToolkitException {",
                "+        this.recoveryMode = recoveryMode;",
                "+        this.verbose = verbose;",
                "+        this.force = force;",
                "+        txnLogFile = new File(txnLogFileName);",
                "+        if (!txnLogFile.exists() || !txnLogFile.canRead()) {",
                "+            throw new TxnLogToolkitException(1, \"File doesn't exist or not readable: %s\", txnLogFile);",
                "+        }",
                "+        if (recoveryMode) {",
                "+            recoveryLogFile = new File(txnLogFile.toString() + \".fixed\");",
                "+            if (recoveryLogFile.exists()) {",
                "+                throw new TxnLogToolkitException(1, \"Recovery file %s already exists or not writable\", recoveryLogFile);",
                "+            }",
                "+        }",
                "+",
                "+        openTxnLogFile();",
                "+        if (recoveryMode) {",
                "+            openRecoveryFile();",
                "+        }",
                "+    }",
                "+",
                "+    public void dump(Reader input) throws Exception {",
                "+        crcFixed = 0;",
                "+",
                "+        FileHeader fhdr = new FileHeader();",
                "+        fhdr.deserialize(logStream, \"fileheader\");",
                "+        if (fhdr.getMagic() != TXNLOG_MAGIC) {",
                "+            throw new TxnLogToolkitException(2, \"Invalid magic number for %s\", txnLogFile.getName());",
                "+        }",
                "+        System.out.println(\"ZooKeeper Transactional Log File with dbid \"",
                "+                + fhdr.getDbid() + \" txnlog format version \"",
                "+                + fhdr.getVersion());",
                "+",
                "+        if (recoveryMode) {",
                "+            fhdr.serialize(recoveryOa, \"fileheader\");",
                "+            recoveryFos.flush();",
                "+            filePadding.setCurrentSize(recoveryFos.getChannel().position());",
                "+        }",
                "+",
                "+        int count = 0;",
                "+        while (true) {",
                "+            long crcValue;",
                "+            byte[] bytes;",
                "+            try {",
                "+                crcValue = logStream.readLong(\"crcvalue\");",
                "+                bytes = logStream.readBuffer(\"txnEntry\");",
                "+            } catch (EOFException e) {",
                "+                System.out.println(\"EOF reached after \" + count + \" txns.\");",
                "+                return;",
                "+            }",
                "+            if (bytes.length == 0) {",
                "+                // Since we preallocate, we define EOF to be an",
                "+                // empty transaction",
                "+                System.out.println(\"EOF reached after \" + count + \" txns.\");",
                "+                return;",
                "+            }",
                "+            Checksum crc = new Adler32();",
                "+            crc.update(bytes, 0, bytes.length);",
                "+            if (crcValue != crc.getValue()) {",
                "+                if (recoveryMode) {",
                "+                    if (!force) {",
                "+                        printTxn(bytes, \"CRC ERROR\");",
                "+                        if (askForFix(input)) {",
                "+                            crcValue = crc.getValue();",
                "+                            ++crcFixed;",
                "+                        }",
                "+                    } else {",
                "+                        crcValue = crc.getValue();",
                "+                        printTxn(bytes, \"CRC FIXED\");",
                "+                        ++crcFixed;",
                "+                    }",
                "+                } else {",
                "+                    printTxn(bytes, \"CRC ERROR\");",
                "+                }",
                "+            }",
                "+            if (!recoveryMode || verbose) {",
                "+                printTxn(bytes);",
                "+            }",
                "+            if (logStream.readByte(\"EOR\") != 'B') {",
                "+                throw new TxnLogToolkitException(1, \"Last transaction was partial.\");",
                "+            }",
                "+            if (recoveryMode) {",
                "+                filePadding.padFile(recoveryFos.getChannel());",
                "+                recoveryOa.writeLong(crcValue, \"crcvalue\");",
                "+                recoveryOa.writeBuffer(bytes, \"txnEntry\");",
                "+                recoveryOa.writeByte((byte)'B', \"EOR\");",
                "+            }",
                "+            count++;",
                "+        }",
                "+    }",
                "+",
                "+    private boolean askForFix(Reader input) throws TxnLogToolkitException {",
                "+        try (Scanner scanner = new Scanner(input)) {",
                "+            while (true) {",
                "+                System.out.print(\"Would you like to fix it (Yes/No/Abort) ? \");",
                "+                char answer = Character.toUpperCase(scanner.next().charAt(0));",
                "+                switch (answer) {",
                "+                    case 'Y':",
                "+                        return true;",
                "+                    case 'N':",
                "+                        return false;",
                "+                    case 'A':",
                "+                        throw new TxnLogToolkitException(0, \"Recovery aborted.\");",
                "+                }",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    private void printTxn(byte[] bytes) throws IOException {",
                "+        printTxn(bytes, \"\");",
                "+    }",
                "+",
                "+    private void printTxn(byte[] bytes, String prefix) throws IOException {",
                "+        TxnHeader hdr = new TxnHeader();",
                "+        Record txn = SerializeUtils.deserializeTxn(bytes, hdr);",
                "+        String txns = String.format(\"%s session 0x%s cxid 0x%s zxid 0x%s %s %s\",",
                "+                DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.LONG).format(new Date(hdr.getTime())),",
                "+                Long.toHexString(hdr.getClientId()),",
                "+                Long.toHexString(hdr.getCxid()),",
                "+                Long.toHexString(hdr.getZxid()),",
                "+                TraceFormatter.op2String(hdr.getType()),",
                "+                txn);",
                "+        if (prefix != null && !\"\".equals(prefix.trim())) {",
                "+            System.out.print(prefix + \" - \");",
                "+        }",
                "+        if (txns.endsWith(\"\\n\")) {",
                "+            System.out.print(txns);",
                "+        } else {",
                "+            System.out.println(txns);",
                "+        }",
                "+    }",
                "+",
                "+    private void openTxnLogFile() throws FileNotFoundException {",
                "+        txnFis = new FileInputStream(txnLogFile);",
                "+        logStream = BinaryInputArchive.getArchive(txnFis);",
                "+    }",
                "+",
                "+    private void closeTxnLogFile() throws IOException {",
                "+        if (txnFis != null) {",
                "+            txnFis.close();",
                "+        }",
                "+    }",
                "+",
                "+    private void openRecoveryFile() throws FileNotFoundException {",
                "+        recoveryFos = new FileOutputStream(recoveryLogFile);",
                "+        recoveryOa = BinaryOutputArchive.getArchive(recoveryFos);",
                "+    }",
                "+",
                "+    private void closeRecoveryFile() throws IOException {",
                "+        if (recoveryFos != null) {",
                "+            recoveryFos.close();",
                "+        }",
                "+    }",
                "+",
                "+    private static TxnLogToolkit parseCommandLine(String[] args) throws TxnLogToolkitException, FileNotFoundException {",
                "+        CommandLineParser parser = new PosixParser();",
                "+        Options options = new Options();",
                "+",
                "+        Option helpOpt = new Option(\"h\", \"help\", false, \"Print help message\");",
                "+        options.addOption(helpOpt);",
                "+",
                "+        Option recoverOpt = new Option(\"r\", \"recover\", false, \"Recovery mode. Re-calculate CRC for broken entries.\");",
                "+        options.addOption(recoverOpt);",
                "+",
                "+        Option quietOpt = new Option(\"v\", \"verbose\", false, \"Be verbose in recovery mode: print all entries, not just fixed ones.\");",
                "+        options.addOption(quietOpt);",
                "+",
                "+        Option dumpOpt = new Option(\"d\", \"dump\", false, \"Dump mode. Dump all entries of the log file. (this is the default)\");",
                "+        options.addOption(dumpOpt);",
                "+",
                "+        Option forceOpt = new Option(\"y\", \"yes\", false, \"Non-interactive mode: repair all CRC errors without asking\");",
                "+        options.addOption(forceOpt);",
                "+",
                "+        try {",
                "+            CommandLine cli = parser.parse(options, args);",
                "+            if (cli.hasOption(\"help\")) {",
                "+                printHelpAndExit(0, options);",
                "+            }",
                "+            if (cli.getArgs().length < 1) {",
                "+                printHelpAndExit(1, options);",
                "+            }",
                "+            return new TxnLogToolkit(cli.hasOption(\"recover\"), cli.hasOption(\"verbose\"), cli.getArgs()[0], cli.hasOption(\"yes\"));",
                "+        } catch (ParseException e) {",
                "+            throw new TxnLogToolkitParseException(options, 1, e.getMessage());",
                "+        }",
                "+    }",
                "+",
                "+    private static void printHelpAndExit(int exitCode, Options options) {",
                "+        HelpFormatter help = new HelpFormatter();",
                "+        help.printHelp(120,\"TxnLogToolkit [-dhrv] <txn_log_file_name>\", \"\", options, \"\");",
                "+        System.exit(exitCode);",
                "+    }",
                "+",
                "+    private void printStat() {",
                "+        if (recoveryMode) {",
                "+            System.out.printf(\"Recovery file %s has been written with %d fixed CRC error(s)%n\", recoveryLogFile, crcFixed);",
                "+        }",
                "+    }",
                "+",
                "+    @Override",
                "+    public void close() throws IOException {",
                "+        if (recoveryMode) {",
                "+            closeRecoveryFile();",
                "+        }",
                "+        closeTxnLogFile();",
                "+    }",
                "+}"
            ],
            "changed_files": [
                "bin/zkTxnLogToolkit.cmd",
                "bin/zkTxnLogToolkit.sh",
                "docs/index.pdf",
                "docs/javaExample.pdf",
                "docs/linkmap.pdf",
                "docs/recipes.pdf",
                "docs/zookeeperAdmin.html",
                "docs/zookeeperAdmin.pdf",
                "docs/zookeeperHierarchicalQuorums.pdf",
                "docs/zookeeperInternals.pdf",
                "docs/zookeeperJMX.pdf",
                "docs/zookeeperObservers.pdf",
                "docs/zookeeperOver.pdf",
                "docs/zookeeperProgrammers.pdf",
                "docs/zookeeperQuotas.pdf",
                "docs/zookeeperReconfig.pdf",
                "docs/zookeeperStarted.pdf",
                "docs/zookeeperTutorial.pdf",
                "src/java/main/org/apache/zookeeper/server/persistence/FilePadding.java",
                "src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "src/java/main/org/apache/zookeeper/server/persistence/TxnLogToolkit.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2994": ""
            },
            "ghissue_refs": {
                "487": "ZOOKEEPER-2994 Tool required to recover log and snapshot entries with CRC errors (3.4) #508"
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "154f9c536f7c696b774361937c6b4b08603d16cf"
                ],
                [
                    "no-tag",
                    "126fb0f22d701cad58bf3123bf7d8f2219e60387"
                ]
            ],
            "tags": [
                "release-3.5.10",
                "release-3.5.10-rc0",
                "release-3.5.10-rc1",
                "release-3.5.4",
                "release-3.5.4-rc0",
                "release-3.5.5",
                "release-3.5.5-rc0",
                "release-3.5.5-rc1",
                "release-3.5.5-rc2",
                "release-3.5.5-rc3",
                "release-3.5.5-rc4",
                "release-3.5.5-rc5",
                "release-3.5.5-rc6",
                "release-3.5.6",
                "release-3.5.6-rc0",
                "release-3.5.6-rc3",
                "release-3.5.6-rc4",
                "release-3.5.7",
                "release-3.5.7-rc0",
                "release-3.5.7-rc1",
                "release-3.5.7-rc2",
                "release-3.5.8",
                "release-3.5.8-rc0",
                "release-3.5.9",
                "release-3.5.9-rc0",
                "release-3.5.9-rc1",
                "release-3.5.9-rc2"
            ],
            "matched_rules": [
                {
                    "id": "RELEVANT_WORDS_IN_MESSAGE",
                    "message": "The commit message contains some relevant words: ZooKeeper",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: cluster, change",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server, quorum",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2994",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 487",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "069c3e4fccbd56307b19b57864fbf6312ace2219",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1517527618,
            "hunks": 2,
            "message": "ZOOKEEPER-2824: `FileChannel#size` info should be added to `FileTxnLog#commit` to solve the confuse that reason is too large log or too busy disk I/O `FileChannel#size` info should be added to `FileTxnLog#commit` to solve the confuse that reason is too large log or too busy disk I/O ------ Example from jenkins [log](https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/830/console): ```java 2017-06-28 10:25:16,645 [myid:] - WARN  [SyncThread:0:FileTxnLog341] - fsync-ing the write ahead log (1945616 bytes) in SyncThread:0 took 2240ms which will adversely effect operation latency. See the ZooKeeper troubleshooting guide ``` Author: asdf2014 <benedictjin2016@gmail.com> Author: asdf2014 <1571805553@qq.com> Reviewers: Patrick Hunt <phunt@apache.org>, Andor Moln\u00c3\u00a1r <andor@cloudera.com>, Abraham Fine <afine@apache.org> Closes #296 from asdf2014/ZOOKEEPER-2824 and squashes the following commits: 7cf4b6848 [asdf2014] Improve latency log description dd2268f2f [asdf2014] ZOOKEEPER-2824: `FileChannel#size` info should be added to `FileTxnLog#commit` to solve the confuse that reason is too large log or too busy disk I/O",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "index a35ae64d6..9edc38e50 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "@@ -372,3 +372,4 @@ public class FileTxnLog implements TxnLog {",
                "-                log.getChannel().force(false);",
                "+                FileChannel channel = log.getChannel();",
                "+                channel.force(false);",
                "@@ -380,2 +381,3 @@ public class FileTxnLog implements TxnLog {",
                "                             + \"ms which will adversely effect operation latency. \"",
                "+                            + \"File size is \" + channel.size() + \" bytes. \"",
                "                             + \"See the ZooKeeper troubleshooting guide\");"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2824": ""
            },
            "ghissue_refs": {
                "296": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "0b6442a1e49adae20277561941eee24631dde170"
                ]
            ],
            "tags": [
                "release-3.6.0",
                "release-3.6.0-0",
                "release-3.6.0-1",
                "release-3.6.0-2",
                "release-3.6.0-3",
                "release-3.6.0-4",
                "release-3.6.1",
                "release-3.6.1-0",
                "release-3.6.1-1",
                "release-3.6.2",
                "release-3.6.2-0",
                "release-3.6.2-1",
                "release-3.6.3",
                "release-3.6.3-0",
                "release-3.6.3-1",
                "release-3.6.3-2",
                "release-3.6.4",
                "release-3.6.4-0",
                "release-3.6.4-1",
                "release-3.6.4-2",
                "release-3.7.0",
                "release-3.7.0-0",
                "release-3.7.0-1",
                "release-3.7.0-2",
                "release-3.7.1",
                "release-3.7.1-0",
                "release-3.7.1-1",
                "release-3.7.2",
                "release-3.7.2-0",
                "release-3.7.3-0",
                "release-3.8.0-0",
                "release-3.8.0-1",
                "release-3.8.1",
                "release-3.8.1-0",
                "release-3.8.1-1",
                "release-3.8.2",
                "release-3.8.2-0",
                "release-3.8.3",
                "release-3.8.3-0",
                "release-3.8.4",
                "release-3.8.4-0",
                "release-3.9.0",
                "release-3.9.0-0",
                "release-3.9.0-1",
                "release-3.9.1",
                "release-3.9.1-0",
                "release-3.9.2",
                "release-3.9.2-0",
                "zookeeper-"
            ],
            "matched_rules": [
                {
                    "id": "RELEVANT_WORDS_IN_MESSAGE",
                    "message": "The commit message contains some relevant words: ZooKeeper",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2824",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 296",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a188308cfb96da62dcd212b53247177f62771966",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1524613533,
            "hunks": 5,
            "message": "ZOOKEEPER-2415: SessionTest is using Thread deprecated API. (branch-3.4) This is the 3.4 version of https://github.com/apache/zookeeper/pull/497 It also include the following patch which was a dependency of the 3.5 version: https://github.com/apache/zookeeper/commit/2b8f98be7407da4417dd192f3de4605a99e3cd15 Author: Michi Mutsuzaki <michim@apache.org> Author: Andor Molnar <andor@cloudera.com> Reviewers: phunt@apache.org Closes #506 from anmolnar/ZOOKEEPER-2415_24 and squashes the following commits: 900a7dc14 [Andor Molnar] ZOOKEEPER-2415. Refactor testSessionTimeout() to live in separate class and not to use deprecated API. Also improved performance. 58a228bd4 [Michi Mutsuzaki] ZOOKEEPER-1730. Make ZooKeeper easier to test - support simulating a session expiration (Jordan Zimmerman via michim) Change-Id: Ie28ed0e256883d214b6ccef4baa06ece8b568d4f",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/ClientCnxn.java b/src/java/main/org/apache/zookeeper/ClientCnxn.java",
                "index 64b881094..390c3632f 100644",
                "--- a/src/java/main/org/apache/zookeeper/ClientCnxn.java",
                "+++ b/src/java/main/org/apache/zookeeper/ClientCnxn.java",
                "@@ -1390,3 +1390,4 @@ public class ClientCnxn {",
                "-    private volatile States state = States.NOT_CONNECTED;",
                "+    // @VisibleForTesting",
                "+    volatile States state = States.NOT_CONNECTED;",
                "diff --git a/src/java/main/org/apache/zookeeper/Testable.java b/src/java/main/org/apache/zookeeper/Testable.java",
                "new file mode 100644",
                "index 000000000..b38d2c3bb",
                "--- /dev/null",
                "+++ b/src/java/main/org/apache/zookeeper/Testable.java",
                "@@ -0,0 +1,29 @@",
                "+/**",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.zookeeper;",
                "+",
                "+/**",
                "+ * Abstraction that exposes various methods useful for testing ZooKeeper",
                "+ */",
                "+public interface Testable {",
                "+    /**",
                "+     * Cause the ZooKeeper instance to behave as if the session expired",
                "+     */",
                "+    void injectSessionExpiration();",
                "+}",
                "diff --git a/src/java/main/org/apache/zookeeper/ZooKeeper.java b/src/java/main/org/apache/zookeeper/ZooKeeper.java",
                "index 482e135e6..3e46ee7f7 100644",
                "--- a/src/java/main/org/apache/zookeeper/ZooKeeper.java",
                "+++ b/src/java/main/org/apache/zookeeper/ZooKeeper.java",
                "@@ -99,2 +99,3 @@ public class ZooKeeper {",
                "+",
                "     public ZooKeeperSaslClient getSaslClient() {",
                "@@ -597,2 +598,7 @@ public class ZooKeeper {",
                "+    // VisibleForTesting",
                "+    public Testable getTestable() {",
                "+        return new ZooKeeperTestable(this, cnxn);",
                "+    }",
                "+",
                "     /**",
                "diff --git a/src/java/main/org/apache/zookeeper/ZooKeeperTestable.java b/src/java/main/org/apache/zookeeper/ZooKeeperTestable.java",
                "new file mode 100644",
                "index 000000000..775d1a26d",
                "--- /dev/null",
                "+++ b/src/java/main/org/apache/zookeeper/ZooKeeperTestable.java",
                "@@ -0,0 +1,47 @@",
                "+/**",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.zookeeper;",
                "+",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+",
                "+class ZooKeeperTestable implements Testable {",
                "+    private static final Logger LOG = LoggerFactory",
                "+            .getLogger(ZooKeeperTestable.class);",
                "+",
                "+    private final ZooKeeper zooKeeper;",
                "+    private final ClientCnxn clientCnxn;",
                "+",
                "+    ZooKeeperTestable(ZooKeeper zooKeeper, ClientCnxn clientCnxn) {",
                "+        this.zooKeeper = zooKeeper;",
                "+        this.clientCnxn = clientCnxn;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void injectSessionExpiration() {",
                "+        LOG.info(\"injectSessionExpiration() called\");",
                "+",
                "+        clientCnxn.eventThread.queueEvent(new WatchedEvent(",
                "+                Watcher.Event.EventType.None,",
                "+                Watcher.Event.KeeperState.Expired, null));",
                "+        clientCnxn.eventThread.queueEventOfDeath();",
                "+        clientCnxn.sendThread.getClientCnxnSocket().wakeupCnxn();",
                "+        clientCnxn.state = ZooKeeper.States.CLOSED;",
                "+    }",
                "+}"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/ClientCnxn.java",
                "src/java/main/org/apache/zookeeper/Testable.java",
                "src/java/main/org/apache/zookeeper/ZooKeeper.java",
                "src/java/main/org/apache/zookeeper/ZooKeeperTestable.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2415": "",
                "ZOOKEEPER-1730": ""
            },
            "ghissue_refs": {
                "506": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "release-3.4.13",
                "release-3.4.13-rc0",
                "release-3.4.13-rc1",
                "release-3.4.14",
                "release-3.4.14-rc0",
                "release-3.4.14-rc1",
                "release-3.4.14-rc2",
                "release-3.4.14-rc3",
                "release-3.4.14-rc4",
                "release-3.4.14-rc5"
            ],
            "matched_rules": [
                {
                    "id": "RELEVANT_WORDS_IN_MESSAGE",
                    "message": "The commit message contains some relevant words: ZooKeeper",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: change",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2415, ZOOKEEPER-1730",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 506",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bebe4162bc915b15b4fd90df9446bdf9f83ef3a8",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1518639810,
            "hunks": 24,
            "message": "ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup This PR adds a check to protect ZK against configuring dataDir and dataLogDir opposingly. When FileTxnSnapLog is created, it checks if transaction log directory contains snapshot files or vice versa, snapshot directory contains transaction log files. If so, the check throws LogdirContentCheckException or SnapdirContentCheckException, respectively, which translates to DatadirException at ZK startup in QuorumPeerMain and ZooKeeperServerMain. If the two directories are the same, then no check is done. For testing, I've added 4 new unit tests which cover the following cases: 1. transaction log and snapshot directories are different and they are used correctly (no Exception) 2. transaction log and snapshot directories are the same (in this case no check is done) 3. transaction log and snapshot directories are different and transaction log directory contains snapshot files (LogdirContentCheckException -> ZK quits) 4. transaction log and snapshot directories are different and snapshot directory contains transaction log files (SnapdirContentCheckException -> ZK quits) Author: Mark Fenes <mfenes@cloudera.com> Reviewers: Andor Moln\u00c3\u00a1r <andor@cloudera.com>, Abraham Fine <afine@apache.org> Closes #450 from mfenes/ZOOKEEPER-2967 and squashes the following commits: 3f2ce609a [Mark Fenes] Re-run checks 3dba7f14a [Mark Fenes] ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup 50e7150b3 [Mark Fenes] Trigger notification 5f8ada87f [Mark Fenes] ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup 36fc5bd46 [Mark Fenes] ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup eb76730cb [Mark Fenes] ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup 81c026fe8 [Mark Fenes] ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/server/persistence/FileSnap.java b/src/java/main/org/apache/zookeeper/server/persistence/FileSnap.java",
                "index 2ea714e47..5cdfadbf0 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/persistence/FileSnap.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/persistence/FileSnap.java",
                "@@ -60,2 +60,4 @@ public class FileSnap implements SnapShot {",
                "+    public static final String SNAPSHOT_FILE_PREFIX = \"snapshot\";",
                "+",
                "     public FileSnap(File snapDir) {",
                "@@ -100,3 +102,3 @@ public class FileSnap implements SnapShot {",
                "         }",
                "-        dt.lastProcessedZxid = Util.getZxidFromName(snap.getName(), \"snapshot\");",
                "+        dt.lastProcessedZxid = Util.getZxidFromName(snap.getName(), SNAPSHOT_FILE_PREFIX);",
                "         return dt.lastProcessedZxid;",
                "@@ -148,3 +150,3 @@ public class FileSnap implements SnapShot {",
                "     private List<File> findNValidSnapshots(int n) throws IOException {",
                "-        List<File> files = Util.sortDataDir(snapDir.listFiles(),\"snapshot\", false);",
                "+        List<File> files = Util.sortDataDir(snapDir.listFiles(), SNAPSHOT_FILE_PREFIX, false);",
                "         int count = 0;",
                "@@ -178,3 +180,3 @@ public class FileSnap implements SnapShot {",
                "     public List<File> findNRecentSnapshots(int n) throws IOException {",
                "-        List<File> files = Util.sortDataDir(snapDir.listFiles(), \"snapshot\", false);",
                "+        List<File> files = Util.sortDataDir(snapDir.listFiles(), SNAPSHOT_FILE_PREFIX, false);",
                "         int count = 0;",
                "@@ -184,3 +186,3 @@ public class FileSnap implements SnapShot {",
                "                 break;",
                "-            if (Util.getZxidFromName(f.getName(), \"snapshot\") != -1) {",
                "+            if (Util.getZxidFromName(f.getName(), SNAPSHOT_FILE_PREFIX) != -1) {",
                "                 count++;",
                "diff --git a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "index 9edc38e50..72ec606a3 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "@@ -101,2 +101,4 @@ public class FileTxnLog implements TxnLog {",
                "+    public static final String LOG_FILE_PREFIX = \"log\";",
                "+",
                "     /** Maximum time we allow for elapsed fsync before WARNing */",
                "@@ -210,8 +212,6 @@ public class FileTxnLog implements TxnLog {",
                "            if(LOG.isInfoEnabled()){",
                "-                LOG.info(\"Creating new log file: log.\" +",
                "-                        Long.toHexString(hdr.getZxid()));",
                "+                LOG.info(\"Creating new log file: \" + Util.makeLogName(hdr.getZxid()));",
                "            }",
                "-           logFileWrite = new File(logDir, (\"log.\" +",
                "-                   Long.toHexString(hdr.getZxid())));",
                "+           logFileWrite = new File(logDir, Util.makeLogName(hdr.getZxid()));",
                "            fos = new FileOutputStream(logFileWrite);",
                "@@ -292,3 +292,3 @@ public class FileTxnLog implements TxnLog {",
                "     public static File[] getLogFiles(File[] logDirList,long snapshotZxid) {",
                "-        List<File> files = Util.sortDataDir(logDirList, \"log\", true);",
                "+        List<File> files = Util.sortDataDir(logDirList, LOG_FILE_PREFIX, true);",
                "         long logZxid = 0;",
                "@@ -297,3 +297,3 @@ public class FileTxnLog implements TxnLog {",
                "         for (File f : files) {",
                "-            long fzxid = Util.getZxidFromName(f.getName(), \"log\");",
                "+            long fzxid = Util.getZxidFromName(f.getName(), LOG_FILE_PREFIX);",
                "             if (fzxid > snapshotZxid) {",
                "@@ -309,3 +309,3 @@ public class FileTxnLog implements TxnLog {",
                "         for (File f : files) {",
                "-            long fzxid = Util.getZxidFromName(f.getName(), \"log\");",
                "+            long fzxid = Util.getZxidFromName(f.getName(), LOG_FILE_PREFIX);",
                "             if (fzxid < logZxid) {",
                "@@ -326,3 +326,3 @@ public class FileTxnLog implements TxnLog {",
                "         long maxLog=files.length>0?",
                "-                Util.getZxidFromName(files[files.length-1].getName(),\"log\"):-1;",
                "+                Util.getZxidFromName(files[files.length-1].getName(),LOG_FILE_PREFIX):-1;",
                "@@ -624,5 +624,5 @@ public class FileTxnLog implements TxnLog {",
                "             storedFiles = new ArrayList<File>();",
                "-            List<File> files = Util.sortDataDir(FileTxnLog.getLogFiles(logDir.listFiles(), 0), \"log\", false);",
                "+            List<File> files = Util.sortDataDir(FileTxnLog.getLogFiles(logDir.listFiles(), 0), LOG_FILE_PREFIX, false);",
                "             for (File f: files) {",
                "-                if (Util.getZxidFromName(f.getName(), \"log\") >= zxid) {",
                "+                if (Util.getZxidFromName(f.getName(), LOG_FILE_PREFIX) >= zxid) {",
                "                     storedFiles.add(f);",
                "@@ -630,3 +630,3 @@ public class FileTxnLog implements TxnLog {",
                "                 // add the last logfile that is less than the zxid",
                "-                else if (Util.getZxidFromName(f.getName(), \"log\") < zxid) {",
                "+                else if (Util.getZxidFromName(f.getName(), LOG_FILE_PREFIX) < zxid) {",
                "                     storedFiles.add(f);",
                "diff --git a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java",
                "index 3a03c81e3..3ca178142 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java",
                "@@ -21,2 +21,3 @@ package org.apache.zookeeper.server.persistence;",
                " import java.io.File;",
                "+import java.io.FilenameFilter;",
                " import java.io.IOException;",
                "@@ -138,2 +139,9 @@ public class FileTxnSnapLog {",
                "+        // check content of transaction log and snapshot dirs if they are two different directories",
                "+        // See ZOOKEEPER-2967 for more details",
                "+        if(!this.dataDir.getPath().equals(this.snapDir.getPath())){",
                "+            checkLogDir();",
                "+            checkSnapDir();",
                "+        }",
                "+",
                "         txnLog = new FileTxnLog(this.dataDir);",
                "@@ -145,2 +153,26 @@ public class FileTxnSnapLog {",
                "+    private void checkLogDir() throws LogDirContentCheckException {",
                "+        File[] files = this.dataDir.listFiles(new FilenameFilter() {",
                "+            @Override",
                "+            public boolean accept(File dir, String name) {",
                "+                return Util.isSnapshotFileName(name);",
                "+            }",
                "+        });",
                "+        if (files != null && files.length > 0) {",
                "+            throw new LogDirContentCheckException(\"Log directory has snapshot files. Check if dataLogDir and dataDir configuration is correct.\");",
                "+        }",
                "+    }",
                "+",
                "+    private void checkSnapDir() throws SnapDirContentCheckException {",
                "+        File[] files = this.snapDir.listFiles(new FilenameFilter() {",
                "+            @Override",
                "+            public boolean accept(File dir, String name) {",
                "+                return Util.isLogFileName(name);",
                "+            }",
                "+        });",
                "+        if (files != null && files.length > 0) {",
                "+            throw new SnapDirContentCheckException(\"Snapshot directory has log files. Check if dataLogDir and dataDir configuration is correct.\");",
                "+        }",
                "+    }",
                "+",
                "     /**",
                "@@ -467,2 +499,16 @@ public class FileTxnSnapLog {",
                "     }",
                "+",
                "+    @SuppressWarnings(\"serial\")",
                "+    public static class LogDirContentCheckException extends DatadirException {",
                "+        public LogDirContentCheckException(String msg) {",
                "+            super(msg);",
                "+        }",
                "+    }",
                "+",
                "+    @SuppressWarnings(\"serial\")",
                "+    public static class SnapDirContentCheckException extends DatadirException {",
                "+        public SnapDirContentCheckException(String msg) {",
                "+            super(msg);",
                "+        }",
                "+    }",
                " }",
                "diff --git a/src/java/main/org/apache/zookeeper/server/persistence/Util.java b/src/java/main/org/apache/zookeeper/server/persistence/Util.java",
                "index bf1abaafe..d8dedb98f 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/persistence/Util.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/persistence/Util.java",
                "@@ -52,3 +52,3 @@ public class Util {",
                "     private static final String DB_FORMAT_CONV=\"dbFormatConversion\";",
                "-    ",
                "+",
                "     public static String makeURIString(String dataDir, String dataLogDir, ",
                "@@ -85,3 +85,3 @@ public class Util {",
                "     public static String makeLogName(long zxid) {",
                "-        return \"log.\" + Long.toHexString(zxid);",
                "+        return FileTxnLog.LOG_FILE_PREFIX + \".\" + Long.toHexString(zxid);",
                "     }",
                "@@ -95,3 +95,3 @@ public class Util {",
                "     public static String makeSnapshotName(long zxid) {",
                "-        return \"snapshot.\" + Long.toHexString(zxid);",
                "+        return FileSnap.SNAPSHOT_FILE_PREFIX + \".\" + Long.toHexString(zxid);",
                "     }",
                "@@ -159,3 +159,3 @@ public class Util {",
                "     public static boolean isValidSnapshot(File f) throws IOException {",
                "-        if (f==null || Util.getZxidFromName(f.getName(), \"snapshot\") == -1)",
                "+        if (f==null || Util.getZxidFromName(f.getName(), FileSnap.SNAPSHOT_FILE_PREFIX) == -1)",
                "             return false;",
                "@@ -296,2 +296,22 @@ public class Util {",
                "     }",
                "+",
                "+    /**",
                "+     * Returns true if fileName is a log file name.",
                "+     *",
                "+     * @param fileName",
                "+     * @return",
                "+     */",
                "+    public static boolean isLogFileName(String fileName) {",
                "+        return fileName.startsWith(FileTxnLog.LOG_FILE_PREFIX + \".\");",
                "+    }",
                "+",
                "+    /**",
                "+     * Returns true if fileName is a snapshot file name.",
                "+     *",
                "+     * @param fileName",
                "+     * @return",
                "+     */",
                "+    public static boolean isSnapshotFileName(String fileName) {",
                "+        return fileName.startsWith(FileSnap.SNAPSHOT_FILE_PREFIX + \".\");",
                "+    }"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/server/persistence/FileSnap.java",
                "src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java",
                "src/java/main/org/apache/zookeeper/server/persistence/Util.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2967": ""
            },
            "ghissue_refs": {
                "450": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "997fa5e765f3a3288d4c010a9bb170dd59007031"
                ],
                [
                    "no-tag",
                    "b3be8a75ca6ecfb61692d80a678af86a027b07fe"
                ]
            ],
            "tags": [
                "release-3.6.0",
                "release-3.6.0-0",
                "release-3.6.0-1",
                "release-3.6.0-2",
                "release-3.6.0-3",
                "release-3.6.0-4",
                "release-3.6.1",
                "release-3.6.1-0",
                "release-3.6.1-1",
                "release-3.6.2",
                "release-3.6.2-0",
                "release-3.6.2-1",
                "release-3.6.3",
                "release-3.6.3-0",
                "release-3.6.3-1",
                "release-3.6.3-2",
                "release-3.6.4",
                "release-3.6.4-0",
                "release-3.6.4-1",
                "release-3.6.4-2",
                "release-3.7.0",
                "release-3.7.0-0",
                "release-3.7.0-1",
                "release-3.7.0-2",
                "release-3.7.1",
                "release-3.7.1-0",
                "release-3.7.1-1",
                "release-3.7.2",
                "release-3.7.2-0",
                "release-3.7.3-0",
                "release-3.8.0-0",
                "release-3.8.0-1",
                "release-3.8.1",
                "release-3.8.1-0",
                "release-3.8.1-1",
                "release-3.8.2",
                "release-3.8.2-0",
                "release-3.8.3",
                "release-3.8.3-0",
                "release-3.8.4",
                "release-3.8.4-0",
                "release-3.9.0",
                "release-3.9.0-0",
                "release-3.9.0-1",
                "release-3.9.1",
                "release-3.9.1-0",
                "release-3.9.2",
                "release-3.9.2-0",
                "zookeeper-"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: server, quorum",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2967",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 450",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "722ba9409a44a35d287aac803813f508cff2420a",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1519426140,
            "hunks": 6,
            "message": "ZOOKEEPER-2845: Apply commit log when restarting server. I will be creating a patch/pull request for 3.4 and 3.5 too, but I wanted to get a pull request up for others to look at ASAP. I have a version of this based off of #310 at https://github.com/revans2/zookeeper/tree/ZOOKEEPER-2845-orig-test-patch but the test itself is flaky.  Frequently leader election does not go as planned on the test and it ends up failing but not because it ended up in an inconsistent state. I am happy to answer any questions anyone has about the patch. Author: Robert Evans <evans@yahoo-inc.com> Reviewers: Abraham Fine <afine@apache.org>, Mark Fenes <mfenes@cloudera.com>, Andor Moln\u00c3\u00a1r <andor@cloudera.com>, Kishor Patil <kpatil@yahoo-inc.com> Closes #453 from revans2/ZOOKEEPER-2845-master and squashes the following commits: 28c074a26 [Robert Evans] Addressed review comments 583e34435 [Robert Evans] Using framework APIs for test f26a21ad6 [Robert Evans] Addressed review comments 93168d716 [Robert Evans] Added in a modified version of the test 3d042f981 [Robert Evans] ZOOKEEPER-2845: Apply commit log when restarting server.",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/server/ZKDatabase.java b/src/java/main/org/apache/zookeeper/server/ZKDatabase.java",
                "index 6679e783b..a03c955c6 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/ZKDatabase.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/ZKDatabase.java",
                "@@ -225,2 +225,7 @@ public class ZKDatabase {",
                "+    private final PlayBackListener commitProposalPlaybackListener = new PlayBackListener() {",
                "+        public void onTxnLoaded(TxnHeader hdr, Record txn){",
                "+            addCommittedProposal(hdr, txn);",
                "+        }",
                "+    };",
                "@@ -233,10 +238,14 @@ public class ZKDatabase {",
                "     public long loadDataBase() throws IOException {",
                "-        PlayBackListener listener=new PlayBackListener(){",
                "-            public void onTxnLoaded(TxnHeader hdr,Record txn){",
                "-                Request r = new Request(0, hdr.getCxid(),hdr.getType(), hdr, txn, hdr.getZxid());",
                "-                addCommittedProposal(r);",
                "-            }",
                "-        };",
                "+        long zxid = snapLog.restore(dataTree, sessionsWithTimeouts, commitProposalPlaybackListener);",
                "+        initialized = true;",
                "+        return zxid;",
                "+    }",
                "-        long zxid = snapLog.restore(dataTree,sessionsWithTimeouts,listener);",
                "+    /**",
                "+     * Fast forward the database adding transactions from the committed log into memory.",
                "+     * @return the last valid zxid.",
                "+     * @throws IOException",
                "+     */",
                "+    public long fastForwardDataBase() throws IOException {",
                "+        long zxid = snapLog.fastForwardFromEdits(dataTree, sessionsWithTimeouts, commitProposalPlaybackListener);",
                "         initialized = true;",
                "@@ -245,2 +254,7 @@ public class ZKDatabase {",
                "+    private void addCommittedProposal(TxnHeader hdr, Record txn) {",
                "+        Request r = new Request(0, hdr.getCxid(), hdr.getType(), hdr, txn, hdr.getZxid());",
                "+        addCommittedProposal(r);",
                "+    }",
                "+",
                "     /**",
                "diff --git a/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java b/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java",
                "index c8cd72dc4..9099b2fbb 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java",
                "@@ -559,10 +559,20 @@ public class ZooKeeperServer implements SessionExpirer, ServerStats.Provider {",
                "-        if (fullyShutDown && zkDb != null) {",
                "-            zkDb.clear();",
                "+        if (zkDb != null) {",
                "+            if (fullyShutDown) {",
                "+                zkDb.clear();",
                "+            } else {",
                "+                // else there is no need to clear the database",
                "+                //  * When a new quorum is established we can still apply the diff",
                "+                //    on top of the same zkDb data",
                "+                //  * If we fetch a new snapshot from leader, the zkDb will be",
                "+                //    cleared anyway before loading the snapshot",
                "+                try {",
                "+                    //This will fast forward the database to the latest recorded transactions",
                "+                    zkDb.fastForwardDataBase();",
                "+                } catch (IOException e) {",
                "+                    LOG.error(\"Error updating DB\", e);",
                "+                    zkDb.clear();",
                "+                }",
                "+            }",
                "         }",
                "-        // else there is no need to clear the database",
                "-        //  * When a new quorum is established we can still apply the diff",
                "-        //    on top of the same zkDb data",
                "-        //  * If we fetch a new snapshot from leader, the zkDb will be",
                "-        //    cleared anyway before loading the snapshot",
                "diff --git a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java",
                "index 3ca178142..8702bf380 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java",
                "@@ -241,2 +241,18 @@ public class FileTxnSnapLog {",
                "         }",
                "+        return fastForwardFromEdits(dt, sessions, listener);",
                "+    }",
                "+",
                "+    /**",
                "+     * This function will fast forward the server database to have the latest",
                "+     * transactions in it.  This is the same as restore, but only reads from",
                "+     * the transaction logs and not restores from a snapshot.",
                "+     * @param dt the datatree to write transactions to.",
                "+     * @param sessions the sessions to be restored.",
                "+     * @param listener the playback listener to run on the",
                "+     * database transactions.",
                "+     * @return the highest zxid restored.",
                "+     * @throws IOException",
                "+     */",
                "+    public long fastForwardFromEdits(DataTree dt, Map<Long, Integer> sessions,",
                "+                                     PlayBackListener listener) throws IOException {",
                "         TxnIterator itr = txnLog.read(dt.lastProcessedZxid+1);"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/server/ZKDatabase.java",
                "src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java",
                "src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2845": ""
            },
            "ghissue_refs": {
                "310": "ZOOKEEPER-2845: Apply commit log when restarting server. #453",
                "453": "ZOOKEEPER-2845: Apply commit log when restarting server. (3.5) #454 ZOOKEEPER-2845: Apply commit log when restarting server. (3.4) #455"
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e0af6ed7598fc4555d7625ddc8efd86e2281babf"
                ],
                [
                    "no-tag",
                    "ffb81b9a618c2e3bc0dcffb9c2d240224d49409f"
                ]
            ],
            "tags": [
                "release-3.6.0",
                "release-3.6.0-0",
                "release-3.6.0-1",
                "release-3.6.0-2",
                "release-3.6.0-3",
                "release-3.6.0-4",
                "release-3.6.1",
                "release-3.6.1-0",
                "release-3.6.1-1",
                "release-3.6.2",
                "release-3.6.2-0",
                "release-3.6.2-1",
                "release-3.6.3",
                "release-3.6.3-0",
                "release-3.6.3-1",
                "release-3.6.3-2",
                "release-3.6.4",
                "release-3.6.4-0",
                "release-3.6.4-1",
                "release-3.6.4-2",
                "release-3.7.0",
                "release-3.7.0-0",
                "release-3.7.0-1",
                "release-3.7.0-2",
                "release-3.7.1",
                "release-3.7.1-0",
                "release-3.7.1-1",
                "release-3.7.2",
                "release-3.7.2-0",
                "release-3.7.3-0",
                "release-3.8.0-0",
                "release-3.8.0-1",
                "release-3.8.1",
                "release-3.8.1-0",
                "release-3.8.1-1",
                "release-3.8.2",
                "release-3.8.2-0",
                "release-3.8.3",
                "release-3.8.3-0",
                "release-3.8.4",
                "release-3.8.4-0",
                "release-3.9.0",
                "release-3.9.0-0",
                "release-3.9.0-1",
                "release-3.9.1",
                "release-3.9.1-0",
                "release-3.9.2",
                "release-3.9.2-0",
                "zookeeper-"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: server, leader",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2845",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 310, 453",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5fc4a8b8e937afe99bc0837e6e1f46763c358156",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1516318991,
            "hunks": 8,
            "message": "ZOOKEEPER-2249: CRC check failed when preAllocSize smaller than node data This bug is caused by an issue in our file padding logic. We calculate an incorrect position to add padding when appending to the transaction log, this often corrupts a transaction. When the log is read the CRC check will correctly fail. Author: Abraham Fine <afine@apache.org> Reviewers: phunt@apache.org Closes #436 from afine/ZOOKEEPER-2249 and squashes the following commits: f3bc06c1 [Abraham Fine] Improve testing and respond to phunt's comment 44ad0575 [Abraham Fine] ZOOKEEPER-2249: CRC check failed when preAllocSize smaller than node data Change-Id: Id8ba9ad730760cb78672127b8c0e02db60b4e87d (cherry picked from commit 4d629d289fc4b1079fff2244b92a337e4068e240) Signed-off-by: Patrick Hunt <phunt@apache.org>",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "index 72bb583fb..a35ae64d6 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "@@ -30,2 +30,3 @@ import java.io.RandomAccessFile;",
                " import java.nio.ByteBuffer;",
                "+import java.nio.channels.FileChannel;",
                " import java.util.ArrayList;",
                "@@ -93,2 +94,3 @@ public class FileTxnLog implements TxnLog {",
                "     static long preAllocSize =  65536 * 1024;",
                "+    private static final ByteBuffer fill = ByteBuffer.allocateDirect(1);",
                "@@ -224,3 +226,3 @@ public class FileTxnLog implements TxnLog {",
                "         }",
                "-        padFile(fos);",
                "+        currentSize = padFile(fos.getChannel());",
                "         byte[] buf = Util.marshallTxnEntry(hdr, txn);",
                "@@ -239,8 +241,42 @@ public class FileTxnLog implements TxnLog {",
                "     /**",
                "-     * pad the current file to increase its size",
                "-     * @param out the outputstream to be padded",
                "+     * pad the current file to increase its size to the next multiple of preAllocSize greater than the current size and position",
                "+     * @param fileChannel the fileChannel of the file to be padded",
                "      * @throws IOException",
                "      */",
                "-    private void padFile(FileOutputStream out) throws IOException {",
                "-        currentSize = Util.padLogFile(out, currentSize, preAllocSize);",
                "+    private long padFile(FileChannel fileChannel) throws IOException {",
                "+        long newFileSize = calculateFileSizeWithPadding(fileChannel.position(), currentSize, preAllocSize);",
                "+        if (currentSize != newFileSize) {",
                "+            fileChannel.write((ByteBuffer) fill.position(0), newFileSize - fill.remaining());",
                "+            currentSize = newFileSize;",
                "+        }",
                "+        return currentSize;",
                "+    }",
                "+",
                "+    /**",
                "+     * Calculates a new file size with padding. We only return a new size if",
                "+     * the current file position is sufficiently close (less than 4K) to end of",
                "+     * file and preAllocSize is > 0.",
                "+     *",
                "+     * @param position the point in the file we have written to",
                "+     * @param fileSize application keeps track of the current file size",
                "+     * @param preAllocSize how many bytes to pad",
                "+     * @return the new file size. It can be the same as fileSize if no",
                "+     * padding was done.",
                "+     * @throws IOException",
                "+     */",
                "+    // VisibleForTesting",
                "+    public static long calculateFileSizeWithPadding(long position, long fileSize, long preAllocSize) {",
                "+        // If preAllocSize is positive and we are within 4KB of the known end of the file calculate a new file size",
                "+        if (preAllocSize > 0 && position + 4096 >= fileSize) {",
                "+            // If we have written more than we have previously preallocated we need to make sure the new",
                "+            // file size is larger than what we already have",
                "+            if (position > fileSize){",
                "+                fileSize = position + preAllocSize;",
                "+                fileSize -= fileSize % preAllocSize;",
                "+            } else {",
                "+                fileSize += preAllocSize;",
                "+            }",
                "+        }",
                "+",
                "+        return fileSize;",
                "     }",
                "diff --git a/src/java/main/org/apache/zookeeper/server/persistence/Util.java b/src/java/main/org/apache/zookeeper/server/persistence/Util.java",
                "index 08ad08a7e..bf1abaafe 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/persistence/Util.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/persistence/Util.java",
                "@@ -23,3 +23,2 @@ import java.io.EOFException;",
                " import java.io.File;",
                "-import java.io.FileOutputStream;",
                " import java.io.IOException;",
                "@@ -53,3 +52,2 @@ public class Util {",
                "     private static final String DB_FORMAT_CONV=\"dbFormatConversion\";",
                "-    private static final ByteBuffer fill = ByteBuffer.allocateDirect(1);",
                "@@ -197,25 +195,2 @@ public class Util {",
                "-    /**",
                "-     * Grows the file to the specified number of bytes. This only happenes if",
                "-     * the current file position is sufficiently close (less than 4K) to end of ",
                "-     * file. ",
                "-     * ",
                "-     * @param f output stream to pad",
                "-     * @param currentSize application keeps track of the current file size",
                "-     * @param preAllocSize how many bytes to pad",
                "-     * @return the new file size. It can be the same as currentSize if no",
                "-     * padding was done.",
                "-     * @throws IOException",
                "-     */",
                "-    public static long padLogFile(FileOutputStream f,long currentSize,",
                "-            long preAllocSize) throws IOException{",
                "-        long position = f.getChannel().position();",
                "-        if (position + 4096 >= currentSize) {",
                "-            currentSize = currentSize + preAllocSize;",
                "-            fill.position(0);",
                "-            f.getChannel().write(fill, currentSize-fill.remaining());",
                "-        }",
                "-        return currentSize;",
                "-    }",
                "-",
                "     /**"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "src/java/main/org/apache/zookeeper/server/persistence/Util.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2249": ""
            },
            "ghissue_refs": {
                "436": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "4d629d289fc4b1079fff2244b92a337e4068e240"
                ],
                [
                    "no-tag",
                    "3fcf7bb46223f1c53e84f5559b7a7751ef9c2322"
                ]
            ],
            "tags": [
                "release-3.5.10",
                "release-3.5.10-rc0",
                "release-3.5.10-rc1",
                "release-3.5.4",
                "release-3.5.4-rc0",
                "release-3.5.5",
                "release-3.5.5-rc0",
                "release-3.5.5-rc1",
                "release-3.5.5-rc2",
                "release-3.5.5-rc3",
                "release-3.5.5-rc4",
                "release-3.5.5-rc5",
                "release-3.5.5-rc6",
                "release-3.5.6",
                "release-3.5.6-rc0",
                "release-3.5.6-rc3",
                "release-3.5.6-rc4",
                "release-3.5.7",
                "release-3.5.7-rc0",
                "release-3.5.7-rc1",
                "release-3.5.7-rc2",
                "release-3.5.8",
                "release-3.5.8-rc0",
                "release-3.5.9",
                "release-3.5.9-rc0",
                "release-3.5.9-rc1",
                "release-3.5.9-rc2"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: change",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2249",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 436",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "dabcdc1758437e654896ac69e737aec337da529b",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1524781266,
            "hunks": 1,
            "message": "ZOOKEEPER-3007: Potential NPE in ReferenceCountedACLCache#deserialize LJ1043041006 found a potential NPE in ZK Author: gongleigl.gong <gongleigl.gong@qunar.com> Author: brettkk <1099446733@qq.com> Reviewers: phunt@apache.org Closes #495 from brettKK/master and squashes the following commits: 7eb9e1c9b [gongleigl.gong] fix RTE message in ReferenceCountedACLCache class 0b858826d [gongleigl.gong] del logger error and fix error message a12b13ff7 [brettkk] fix format f7da9b9fa [brettkk] change ZOOK3007 to compare with apache master cf9fb5f9a [brettkk] recover code c4db5e25d [brettkk] recover zookeeper master same with apache:master 700dfb7f4 [gongleigl.gong] fix NPE bug 7d8d5230c [gongleigl.gong] d Change-Id: I012c242e8566fcd54c1ebde1a30ec785b6aa31b0 (cherry picked from commit 2c0168ad37b529447ac8cb1bf866d014f8a97981) Signed-off-by: Patrick Hunt <phunt@apache.org>",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java b/src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java",
                "index 486b8455e..384d23ab0 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java",
                "@@ -111,2 +111,5 @@ public class ReferenceCountedACLCache {",
                "             Index j = ia.startVector(\"acls\");",
                "+            if (j == null) {",
                "+                throw new RuntimeException(\"Incorrent format of InputArchive when deserialize DataTree - missing acls\");",
                "+            }",
                "             while (!j.done()) {"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-3007": ""
            },
            "ghissue_refs": {
                "495": "ZOOKEEPER-3008: Potential NPE in SaslQuorumAuthLearner#authenticate and SaslQuorumAuthServer#authenticate #496"
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "de272ead45f8044a6e237e71c05895fcbc714222"
                ],
                [
                    "no-tag",
                    "2c0168ad37b529447ac8cb1bf866d014f8a97981"
                ]
            ],
            "tags": [
                "release-3.4.13",
                "release-3.4.13-rc0",
                "release-3.4.13-rc1",
                "release-3.4.14",
                "release-3.4.14-rc0",
                "release-3.4.14-rc1",
                "release-3.4.14-rc2",
                "release-3.4.14-rc3",
                "release-3.4.14-rc4",
                "release-3.4.14-rc5"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: change",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-3007",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 495",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d1b07d588e445085eff4abeb42cf730cc7c57e83",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1517295761,
            "hunks": 2,
            "message": "ZOOKEEPER-1580: QuorumPeer.setRunning is not used - more details in [JIRA:ZOOKEEPER-1580](https://issues.apache.org/jira/browse/ZOOKEEPER-1580) - I forget fetching the upstream codes, make a mistake in the origin [PR-446] (https://github.com/apache/zookeeper/pull/446) which includes some review history,so I close it and open a new one Author: maoling <maoling199210191@sina.com> Reviewers: Patrick Hunt <phunt@apache.org>, Andor Moln\u00c3\u00a1r <andor@cloudera.com>, Abraham Fine <afine@apache.org> Closes #452 from maoling/ZOOKEEPER-1580 and squashes the following commits: 29a5aba1e [maoling] remove the setter and return back to setting the running field directly 28de1e88f [maoling] ZOOKEEPER-1580:QuorumPeer.setRunning is not used",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java b/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java",
                "index 45f32b943..cec1f9489 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java",
                "@@ -481,3 +481,3 @@ public class QuorumPeer extends ZooKeeperThread implements QuorumStats.Provider",
                "-    volatile boolean running = true;",
                "+    private volatile boolean running = true;",
                "@@ -1752,6 +1752,2 @@ public class QuorumPeer extends ZooKeeperThread implements QuorumStats.Provider",
                "     }",
                "-    ",
                "-    public void setRunning(boolean running) {",
                "-        this.running = running;",
                "-    }"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-1580": "",
                "PR-446": ""
            },
            "ghissue_refs": {
                "452": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "9affdd14464a97f5b634cbde9d5ff9b413137172"
                ]
            ],
            "tags": [
                "release-3.6.0",
                "release-3.6.0-0",
                "release-3.6.0-1",
                "release-3.6.0-2",
                "release-3.6.0-3",
                "release-3.6.0-4",
                "release-3.6.1",
                "release-3.6.1-0",
                "release-3.6.1-1",
                "release-3.6.2",
                "release-3.6.2-0",
                "release-3.6.2-1",
                "release-3.6.3",
                "release-3.6.3-0",
                "release-3.6.3-1",
                "release-3.6.3-2",
                "release-3.6.4",
                "release-3.6.4-0",
                "release-3.6.4-1",
                "release-3.6.4-2",
                "release-3.7.0",
                "release-3.7.0-0",
                "release-3.7.0-1",
                "release-3.7.0-2",
                "release-3.7.1",
                "release-3.7.1-0",
                "release-3.7.1-1",
                "release-3.7.2",
                "release-3.7.2-0",
                "release-3.7.3-0",
                "release-3.8.0-0",
                "release-3.8.0-1",
                "release-3.8.1",
                "release-3.8.1-0",
                "release-3.8.1-1",
                "release-3.8.2",
                "release-3.8.2-0",
                "release-3.8.3",
                "release-3.8.3-0",
                "release-3.8.4",
                "release-3.8.4-0",
                "release-3.9.0",
                "release-3.9.0-0",
                "release-3.9.0-1",
                "release-3.9.1",
                "release-3.9.1-0",
                "release-3.9.2",
                "release-3.9.2-0",
                "zookeeper-"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: quorum",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server, quorum",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-1580, PR-446",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 452",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d2aa49e423d3640b5b0012dad82db5163fb1ff54",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1524853695,
            "hunks": 2,
            "message": "ZOOKEEPER-3027: Accidently removed public API of FileTxnLog.setPreallocSize() In my latest commit regarding TxnLogToolkit there's a refactor to outsource file padding logic from FileTxnLog to a separate class: https://github.com/apache/zookeeper/commit/126fb0f22d701cad58bf3123bf7d8f2219e60387#diff-89717124564925d61d29dd817bcdd915L147 Unfortunately public static method setPreallocSize(int) has also been moved to the new class, but it's being actively used by hadoop-common project too: https://github.com/apache/hadoop/blob/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ha/ClientBaseWithFixes.java#L384 I'd like to submit a patch to revert the deleted method which is going to call the new one, but will keep backward compatibility with Hadoop. Author: Andor Molnar <andor@cloudera.com> Reviewers: phunt@apache.org Closes #509 from anmolnar/ZOOKEEPER-3027 Change-Id: I7333b5e24c2a78d10a5c5a74c181633050bd225d (cherry picked from commit 5c96887643b2465caabbfd4763c7ebb3cd1aa024) Signed-off-by: Patrick Hunt <phunt@apache.org>",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/server/persistence/FilePadding.java b/src/java/main/org/apache/zookeeper/server/persistence/FilePadding.java",
                "index c4052e958..49fde24e7 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/persistence/FilePadding.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/persistence/FilePadding.java",
                "@@ -47,2 +47,9 @@ public class FilePadding {",
                "+    /**",
                "+     * Getter of preAllocSize has been added for testing",
                "+     */",
                "+    public static long getPreAllocSize() {",
                "+        return preAllocSize;",
                "+    }",
                "+",
                "     /**",
                "diff --git a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "index fae7f022b..f79521b0b 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
                "@@ -137,2 +137,11 @@ public class FileTxnLog implements TxnLog {",
                "+    /**",
                "+      * method to allow setting preallocate size",
                "+      * of log file to pad the file.",
                "+      * @param size the size to set to in bytes",
                "+      */",
                "+    public static void setPreallocSize(long size) {",
                "+        FilePadding.setPreallocSize(size);",
                "+    }",
                "+",
                "     /**"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/server/persistence/FilePadding.java",
                "src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-3027": ""
            },
            "ghissue_refs": {
                "509": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "cbbdcc328d66db86c197a87560da42afaa88ccbb"
                ],
                [
                    "no-tag",
                    "5c96887643b2465caabbfd4763c7ebb3cd1aa024"
                ]
            ],
            "tags": [
                "release-3.5.10",
                "release-3.5.10-rc0",
                "release-3.5.10-rc1",
                "release-3.5.4",
                "release-3.5.4-rc0",
                "release-3.5.5",
                "release-3.5.5-rc0",
                "release-3.5.5-rc1",
                "release-3.5.5-rc2",
                "release-3.5.5-rc3",
                "release-3.5.5-rc4",
                "release-3.5.5-rc5",
                "release-3.5.5-rc6",
                "release-3.5.6",
                "release-3.5.6-rc0",
                "release-3.5.6-rc3",
                "release-3.5.6-rc4",
                "release-3.5.7",
                "release-3.5.7-rc0",
                "release-3.5.7-rc1",
                "release-3.5.7-rc2",
                "release-3.5.8",
                "release-3.5.8-rc0",
                "release-3.5.9",
                "release-3.5.9-rc0",
                "release-3.5.9-rc1",
                "release-3.5.9-rc2"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: change",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-3027",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 509",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "67b6767c0f1f10d4c1262bcb23cb33f72ad1ae37",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1516320723,
            "hunks": 2,
            "message": "ZOOKEEPER-2964: Conf\" command returns dataDir and dataLogDir opposingly See [https://issues.apache.org/jira/browse/ZOOKEEPER-2964](url) for details. The bug affects versions newer than 3.5. According to Andor Molnar\u00e2\u0080\u0098s [review](https://issues.apache.org/jira/browse/ZOOKEEPER-2964?focusedCommentId=16330018&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16330018) this patch can be applied to master and branch-3.5 branches. Thanks all for reviewing this issue. Author: Qihong Xu <qihongxu@bu.edu> Reviewers: phunt@apache.org Closes #449 from qihongxu/ZOOKEEPER-2964 Change-Id: Ie7de251afd5cca64f4735d75d9c95a886ff75328 (cherry picked from commit 78708a8587841ccdcb3d07f33d3114e0c8cfc380) Signed-off-by: Patrick Hunt <phunt@apache.org>",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java b/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java",
                "index c9789a4bd..5a8610eeb 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java",
                "@@ -186,3 +186,3 @@ public class ZooKeeperServer implements SessionExpirer, ServerStats.Provider {",
                "         pwriter.print(\"dataDir=\");",
                "-        pwriter.println(zkDb.snapLog.getDataDir().getAbsolutePath());",
                "+        pwriter.println(zkDb.snapLog.getSnapDir().getAbsolutePath());",
                "         pwriter.print(\"dataDirSize=\");",
                "@@ -190,3 +190,3 @@ public class ZooKeeperServer implements SessionExpirer, ServerStats.Provider {",
                "         pwriter.print(\"dataLogDir=\");",
                "-        pwriter.println(zkDb.snapLog.getSnapDir().getAbsolutePath());",
                "+        pwriter.println(zkDb.snapLog.getDataDir().getAbsolutePath());",
                "         pwriter.print(\"dataLogSize=\");"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2964": ""
            },
            "ghissue_refs": {
                "449": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "78708a8587841ccdcb3d07f33d3114e0c8cfc380"
                ]
            ],
            "tags": [
                "release-3.5.10",
                "release-3.5.10-rc0",
                "release-3.5.10-rc1",
                "release-3.5.4",
                "release-3.5.4-rc0",
                "release-3.5.5",
                "release-3.5.5-rc0",
                "release-3.5.5-rc1",
                "release-3.5.5-rc2",
                "release-3.5.5-rc3",
                "release-3.5.5-rc4",
                "release-3.5.5-rc5",
                "release-3.5.5-rc6",
                "release-3.5.6",
                "release-3.5.6-rc0",
                "release-3.5.6-rc3",
                "release-3.5.6-rc4",
                "release-3.5.7",
                "release-3.5.7-rc0",
                "release-3.5.7-rc1",
                "release-3.5.7-rc2",
                "release-3.5.8",
                "release-3.5.8-rc0",
                "release-3.5.9",
                "release-3.5.9-rc0",
                "release-3.5.9-rc1",
                "release-3.5.9-rc2"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: change",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2964",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 449",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2022766ec907f63b1b43fc5455e9e7761cd332f6",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1525062897,
            "hunks": 6,
            "message": "ZOOKEEPER-2988: NPE triggered if server receives a vote for a server \u00e2\u0080\u00a6 \u00e2\u0080\u00a6id not in their voting view Author: Brian Nixon <nixon@fb.com> Reviewers: Abraham Fine <afine@apache.org>, Michael Han <hanm@apache.org>, Edward Ribeiro <edward.ribeiro@gmail.com> Closes #476 from enixon/ZOOKEEPER-2988",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java b/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java",
                "index f1112b775..1bd0fbf5b 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java",
                "@@ -24,3 +24,2 @@ import java.nio.ByteBuffer;",
                " import java.util.HashMap;",
                "-import java.util.HashSet;",
                " import java.util.Map;",
                "@@ -324,3 +323,3 @@ public class FastLeaderElection implements Election {",
                "                          */",
                "-                        if(!self.getCurrentAndNextConfigVoters().contains(response.sid)) {",
                "+                        if(!validVoter(response.sid)) {",
                "                             Vote current = self.getCurrentVote();",
                "@@ -929,6 +928,6 @@ public class FastLeaderElection implements Election {",
                "                 } ",
                "-                else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {",
                "+                else if (validVoter(n.sid) && validVoter(n.leader)) {",
                "                     /*",
                "                      * Only proceed if the vote comes from a replica in the current or next",
                "-                     * voting view.",
                "+                     * voting view for a replica in the current or next voting view.",
                "                      */",
                "@@ -1066,3 +1065,8 @@ public class FastLeaderElection implements Election {",
                "                 } else {",
                "-                    LOG.warn(\"Ignoring notification from non-cluster member \" + n.sid);",
                "+                    if (!validVoter(n.leader)) {",
                "+                        LOG.warn(\"Ignoring notification for non-cluster member sid {} from sid {}\", n.leader, n.sid);",
                "+                    }",
                "+                    if (!validVoter(n.sid)) {",
                "+                        LOG.warn(\"Ignoring notification for sid {} from non-quorum member sid {}\", n.leader, n.sid);",
                "+                    }",
                "                 }",
                "@@ -1084,2 +1088,13 @@ public class FastLeaderElection implements Election {",
                "     }",
                "+",
                "+    /**",
                "+     * Check if a given sid is represented in either the current or",
                "+     * the next voting view",
                "+     *",
                "+     * @param sid     Server identifier",
                "+     * @return boolean",
                "+     */",
                "+    private boolean validVoter(long sid) {",
                "+        return self.getCurrentAndNextConfigVoters().contains(sid);",
                "+    }",
                " }"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2988": ""
            },
            "ghissue_refs": {
                "476": "ZOOKEEPER-2988: NPE triggered if server receives a vote for a server \u2026 #477"
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "3a309c5080674088c96c2c63915b3d313543c0dd"
                ],
                [
                    "no-tag",
                    "a6efddca2ade745f9ae1454579e7a70c74219d8e"
                ]
            ],
            "tags": [
                "release-3.6.0",
                "release-3.6.0-0",
                "release-3.6.0-1",
                "release-3.6.0-2",
                "release-3.6.0-3",
                "release-3.6.0-4",
                "release-3.6.1",
                "release-3.6.1-0",
                "release-3.6.1-1",
                "release-3.6.2",
                "release-3.6.2-0",
                "release-3.6.2-1",
                "release-3.6.3",
                "release-3.6.3-0",
                "release-3.6.3-1",
                "release-3.6.3-2",
                "release-3.6.4",
                "release-3.6.4-0",
                "release-3.6.4-1",
                "release-3.6.4-2",
                "release-3.7.0",
                "release-3.7.0-0",
                "release-3.7.0-1",
                "release-3.7.0-2",
                "release-3.7.1",
                "release-3.7.1-0",
                "release-3.7.1-1",
                "release-3.7.2",
                "release-3.7.2-0",
                "release-3.7.3-0",
                "release-3.8.0-0",
                "release-3.8.0-1",
                "release-3.8.1",
                "release-3.8.1-0",
                "release-3.8.1-1",
                "release-3.8.2",
                "release-3.8.2-0",
                "release-3.8.3",
                "release-3.8.3-0",
                "release-3.8.4",
                "release-3.8.4-0",
                "release-3.9.0",
                "release-3.9.0-0",
                "release-3.9.0-1",
                "release-3.9.1",
                "release-3.9.1-0",
                "release-3.9.2",
                "release-3.9.2-0",
                "zookeeper-"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: server",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: leader, server, quorum",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2988",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 476",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fbd21329d32f185d198344f2d394175c92a82f9e",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1522987447,
            "hunks": 2,
            "message": "ZOOKEEPER-3006: Potential NPE in ZKDatabase#calculateTxnLogSizeLimit LJ1043041006 found a potential NPE in ZKDatabase#calculateTxnLogSizeLimit: https://issues.apache.org/jira/browse/ZOOKEEPER-3006 ``` //ZKDatabase public long calculateTxnLogSizeLimit() {     long snapSize = 0;     try {         snapSize = snapLog.findMostRecentSnapshot().length();      } catch (IOException e) {         LOG.error(\"Unable to get size of most recent snapshot\");     }     return (long) (snapSize * snapshotSizeFactor); } ```  in FileTxnSnapLog#findMostRecentSnapshot(), it will return the result of  FileSnap#findMostRecentSnapshot: ``` // called by FileTxnSnapLog#findMostRecentSnapshot() public File findMostRecentSnapshot() throws IOException {         List<File> files = findNValidSnapshots(1);         if (files.size() == 0) {             return null;         }         return files.get(0); } ``` So it will return null when the files sizes is 0, but ZKDatabase#calculateTxnLogSizeLimit has no null checker. Author: Edward Ribeiro <edward.ribeiro@gmail.com> Reviewers: Andor Moln\u00c3\u00a1r <andor@cloudera.com>, Michael Han <hanm@apache.org>, maoling <maoling199210191@sina.com> Closes #493 from edwardoliveira/zk-3006-potential-npe",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/server/ZKDatabase.java b/src/java/main/org/apache/zookeeper/server/ZKDatabase.java",
                "index a03c955c6..7b00715ac 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/ZKDatabase.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/ZKDatabase.java",
                "@@ -20,2 +20,3 @@ package org.apache.zookeeper.server;",
                "+import java.io.File;",
                " import java.io.IOException;",
                "@@ -304,3 +305,6 @@ public class ZKDatabase {",
                "         try {",
                "-            snapSize = snapLog.findMostRecentSnapshot().length();",
                "+            File snapFile = snapLog.findMostRecentSnapshot();",
                "+            if (snapFile != null) {",
                "+                snapSize = snapFile.length();",
                "+            }",
                "         } catch (IOException e) {"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/server/ZKDatabase.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-3006": ""
            },
            "ghissue_refs": {
                "493": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "df4801328d63c1b827caa86a64e8ea3fb941f7ad"
                ]
            ],
            "tags": [
                "release-3.6.0",
                "release-3.6.0-0",
                "release-3.6.0-1",
                "release-3.6.0-2",
                "release-3.6.0-3",
                "release-3.6.0-4",
                "release-3.6.1",
                "release-3.6.1-0",
                "release-3.6.1-1",
                "release-3.6.2",
                "release-3.6.2-0",
                "release-3.6.2-1",
                "release-3.6.3",
                "release-3.6.3-0",
                "release-3.6.3-1",
                "release-3.6.3-2",
                "release-3.6.4",
                "release-3.6.4-0",
                "release-3.6.4-1",
                "release-3.6.4-2",
                "release-3.7.0",
                "release-3.7.0-0",
                "release-3.7.0-1",
                "release-3.7.0-2",
                "release-3.7.1",
                "release-3.7.1-0",
                "release-3.7.1-1",
                "release-3.7.2",
                "release-3.7.2-0",
                "release-3.7.3-0",
                "release-3.8.0-0",
                "release-3.8.0-1",
                "release-3.8.1",
                "release-3.8.1-0",
                "release-3.8.1-1",
                "release-3.8.2",
                "release-3.8.2-0",
                "release-3.8.3",
                "release-3.8.3-0",
                "release-3.8.4",
                "release-3.8.4-0",
                "release-3.9.0",
                "release-3.9.0-0",
                "release-3.9.0-1",
                "release-3.9.1",
                "release-3.9.1-0",
                "release-3.9.2",
                "release-3.9.2-0",
                "zookeeper-"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: result",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-3006",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 493",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fd25ee3d2fb01c9cd488d00430e3635db2c2be02",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1515375013,
            "hunks": 1,
            "message": "ZOOKEEPER-2960: The dataDir and dataLogDir are used opposingly Previously a small refactoring has swapped the usage of dataDir and dataLogDir when QuorumPeerMain instantiates FileTxnSnapLog class. This PR fixes it + adds unit test for verification. Author: Andor Molnar <andor@cloudera.com> Reviewers: Camille Fournier <camille@apache.org>, Abraham Fine <afine@apache.org> Closes #441 from anmolnar/ZOOKEEPER-2960",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerMain.java b/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerMain.java",
                "index da0df5214..156c43981 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerMain.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerMain.java",
                "@@ -139,4 +139,4 @@ public class QuorumPeerMain {",
                "           quorumPeer.setTxnFactory(new FileTxnSnapLog(",
                "-                  new File(config.getDataDir()),",
                "-                  new File(config.getDataLogDir())));",
                "+                  new File(config.getDataLogDir()),",
                "+                  new File(config.getDataDir())));",
                "           quorumPeer.setElectionType(config.getElectionAlg());"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerMain.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2960": ""
            },
            "ghissue_refs": {
                "441": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "release-3.4.12",
                "release-3.4.12-rc0",
                "release-3.4.12-rc1",
                "release-3.4.13",
                "release-3.4.13-rc0",
                "release-3.4.13-rc1",
                "release-3.4.14",
                "release-3.4.14-rc0",
                "release-3.4.14-rc1",
                "release-3.4.14-rc2",
                "release-3.4.14-rc3",
                "release-3.4.14-rc4",
                "release-3.4.14-rc5"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: quorum",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server, quorum",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2960",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 441",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f0b67b6e49acec5f022bee25e08f82a29572c97a",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1519166280,
            "hunks": 1,
            "message": "ZOOKEEPER-2978: fix potential null pointer exception when deleting node At line 518, 'existWatches.remove(clientPath)' is null because watches for clientPath is already removed. Author: 07c00h <07c00h@gmail.com> Reviewers: Abraham Fine <afine@apache.org> Closes #461 from achimbab/master",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/ZooKeeper.java b/src/java/main/org/apache/zookeeper/ZooKeeper.java",
                "index d24404fb9..0967b0ac3 100644",
                "--- a/src/java/main/org/apache/zookeeper/ZooKeeper.java",
                "+++ b/src/java/main/org/apache/zookeeper/ZooKeeper.java",
                "@@ -517,3 +517,3 @@ public class ZooKeeper implements AutoCloseable {",
                "                     if (list != null) {",
                "-                        addTo(existWatches.remove(clientPath), result);",
                "+                        addTo(list, result);",
                "                         LOG.warn(\"We are triggering an exists watch for delete! Shouldn't happen!\");"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/ZooKeeper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2978": ""
            },
            "ghissue_refs": {
                "461": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e40d4050bdc15ddddda19cab0d1c76ad176cbc9b"
                ],
                [
                    "no-tag",
                    "0666919fe1ecc516276d41337e09163f7cfd4c9a"
                ]
            ],
            "tags": [
                "release-3.6.0",
                "release-3.6.0-0",
                "release-3.6.0-1",
                "release-3.6.0-2",
                "release-3.6.0-3",
                "release-3.6.0-4",
                "release-3.6.1",
                "release-3.6.1-0",
                "release-3.6.1-1",
                "release-3.6.2",
                "release-3.6.2-0",
                "release-3.6.2-1",
                "release-3.6.3",
                "release-3.6.3-0",
                "release-3.6.3-1",
                "release-3.6.3-2",
                "release-3.6.4",
                "release-3.6.4-0",
                "release-3.6.4-1",
                "release-3.6.4-2",
                "release-3.7.0",
                "release-3.7.0-0",
                "release-3.7.0-1",
                "release-3.7.0-2",
                "release-3.7.1",
                "release-3.7.1-0",
                "release-3.7.1-1",
                "release-3.7.2",
                "release-3.7.2-0",
                "release-3.7.3-0",
                "release-3.8.0-0",
                "release-3.8.0-1",
                "release-3.8.1",
                "release-3.8.1-0",
                "release-3.8.1-1",
                "release-3.8.2",
                "release-3.8.2-0",
                "release-3.8.3",
                "release-3.8.3-0",
                "release-3.8.4",
                "release-3.8.4-0",
                "release-3.9.0",
                "release-3.9.0-0",
                "release-3.9.0-1",
                "release-3.9.1",
                "release-3.9.1-0",
                "release-3.9.2",
                "release-3.9.2-0",
                "zookeeper-"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: point",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2978",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 461",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "66554218a557cbc86924354bdb20e20b20ff934f",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1517345797,
            "hunks": 4,
            "message": "ZOOKEEPER-2949: using hostname and port to create SSLEngine If the server has more than one host name, and serve each host name with different certificates. then the ssl client must provide the server name in the ssl Hello packet, to tell the server which certificate to use. This is especially important when the client connect to a load balancer with different backend services. https://en.wikipedia.org/wiki/Server_Name_Indication Author: f00231050 <shaobao.feng@huawei.com> Reviewers: Andor Moln\u00c3\u00a1r <andor@cloudera.com>, Abraham Fine <afine@apache.org> Closes #423 from abel-von/ZOOKEEPER-2949",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/ClientCnxnSocketNetty.java b/src/java/main/org/apache/zookeeper/ClientCnxnSocketNetty.java",
                "old mode 100644",
                "new mode 100755",
                "index 97af9da69..ec789cb09",
                "--- a/src/java/main/org/apache/zookeeper/ClientCnxnSocketNetty.java",
                "+++ b/src/java/main/org/apache/zookeeper/ClientCnxnSocketNetty.java",
                "@@ -114,3 +114,3 @@ public class ClientCnxnSocketNetty extends ClientCnxnSocket {",
                "-        bootstrap.setPipelineFactory(new ZKClientPipelineFactory());",
                "+        bootstrap.setPipelineFactory(new ZKClientPipelineFactory(addr.getHostString(), addr.getPort()));",
                "         bootstrap.setOption(\"soLinger\", -1);",
                "@@ -342,2 +342,3 @@ public class ClientCnxnSocketNetty extends ClientCnxnSocket {",
                "     }",
                "+",
                "     /**",
                "@@ -349,2 +350,9 @@ public class ClientCnxnSocketNetty extends ClientCnxnSocket {",
                "         private SSLEngine sslEngine = null;",
                "+        private String host;",
                "+        private int port;",
                "+",
                "+        public ZKClientPipelineFactory(String host, int port) {",
                "+            this.host = host;",
                "+            this.port = port;",
                "+        }",
                "@@ -365,3 +373,3 @@ public class ClientCnxnSocketNetty extends ClientCnxnSocket {",
                "                 sslContext = X509Util.createSSLContext(clientConfig);",
                "-                sslEngine = sslContext.createSSLEngine();",
                "+                sslEngine = sslContext.createSSLEngine(host,port);",
                "                 sslEngine.setUseClientMode(true);"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/ClientCnxnSocketNetty.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2949": ""
            },
            "ghissue_refs": {
                "423": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "85acd1bed41ff207966a5c50a5c7588d05b45250"
                ]
            ],
            "tags": [
                "release-3.6.0",
                "release-3.6.0-0",
                "release-3.6.0-1",
                "release-3.6.0-2",
                "release-3.6.0-3",
                "release-3.6.0-4",
                "release-3.6.1",
                "release-3.6.1-0",
                "release-3.6.1-1",
                "release-3.6.2",
                "release-3.6.2-0",
                "release-3.6.2-1",
                "release-3.6.3",
                "release-3.6.3-0",
                "release-3.6.3-1",
                "release-3.6.3-2",
                "release-3.6.4",
                "release-3.6.4-0",
                "release-3.6.4-1",
                "release-3.6.4-2",
                "release-3.7.0",
                "release-3.7.0-0",
                "release-3.7.0-1",
                "release-3.7.0-2",
                "release-3.7.1",
                "release-3.7.1-0",
                "release-3.7.1-1",
                "release-3.7.2",
                "release-3.7.2-0",
                "release-3.7.3-0",
                "release-3.8.0-0",
                "release-3.8.0-1",
                "release-3.8.1",
                "release-3.8.1-0",
                "release-3.8.1-1",
                "release-3.8.2",
                "release-3.8.2-0",
                "release-3.8.3",
                "release-3.8.3-0",
                "release-3.8.4",
                "release-3.8.4-0",
                "release-3.9.0",
                "release-3.9.0-0",
                "release-3.9.0-1",
                "release-3.9.1",
                "release-3.9.1-0",
                "release-3.9.2",
                "release-3.9.2-0",
                "zookeeper-"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2949",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 423",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "828eb9cd932e4ec72c5876d07d57965aefd9af17",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1522028954,
            "hunks": 2,
            "message": "ZOOKEEPER-3001: Incorrect log message when try to delete container node Missing `String.format`. Author: sel-fish <fqlgy@hotmail.com> Reviewers: Edward Ribeiro <edward.ribeiro@gmail.com>, Andor Moln\u00c3\u00a1r <andor@cloudera.com>, Michael Han <hanm@apache.org>, maoling <maoling199210191@sina.com> Closes #492 from sel-fish/ZOOKEEPER-3001 (cherry picked from commit 8cfca3add9c7fd705f9114daf4adaac9fc90f040) Signed-off-by: Michael Han <hanm@apache.org>",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/server/ContainerManager.java b/src/java/main/org/apache/zookeeper/server/ContainerManager.java",
                "index 8834f2986..e59d7bd52 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/ContainerManager.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/ContainerManager.java",
                "@@ -118,3 +118,3 @@ public class ContainerManager {",
                "             try {",
                "-                LOG.info(\"Attempting to delete candidate container: %s\",",
                "+                LOG.info(\"Attempting to delete candidate container: {}\",",
                "                         containerPath);",
                "@@ -122,4 +122,4 @@ public class ContainerManager {",
                "             } catch (Exception e) {",
                "-                LOG.error(String.format(\"Could not delete container: %s\" ,",
                "-                        containerPath), e);",
                "+                LOG.error(\"Could not delete container: {}\",",
                "+                        containerPath, e);",
                "             }"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/server/ContainerManager.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-3001": ""
            },
            "ghissue_refs": {
                "492": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "8cfca3add9c7fd705f9114daf4adaac9fc90f040"
                ]
            ],
            "tags": [
                "release-3.5.10",
                "release-3.5.10-rc0",
                "release-3.5.10-rc1",
                "release-3.5.4",
                "release-3.5.4-rc0",
                "release-3.5.5",
                "release-3.5.5-rc0",
                "release-3.5.5-rc1",
                "release-3.5.5-rc2",
                "release-3.5.5-rc3",
                "release-3.5.5-rc4",
                "release-3.5.5-rc5",
                "release-3.5.5-rc6",
                "release-3.5.6",
                "release-3.5.6-rc0",
                "release-3.5.6-rc3",
                "release-3.5.6-rc4",
                "release-3.5.7",
                "release-3.5.7-rc0",
                "release-3.5.7-rc1",
                "release-3.5.7-rc2",
                "release-3.5.8",
                "release-3.5.8-rc0",
                "release-3.5.9",
                "release-3.5.9-rc0",
                "release-3.5.9-rc1",
                "release-3.5.9-rc2"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-3001",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 492",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "519db3f5c585f63a0a55e9f7929a07f9715bd729",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1523941044,
            "hunks": 2,
            "message": "ZOOKEEPER-3002: upgrade to jdk 8 Set minimum requirement to java 1.8 The code successfully compiled with 8.0.161-oracle and 8.0.163-zulu. Checking the generated class file it reports 1.8 as version: javap -verbose build/classes/org/apache/zookeeper/server/ServerStats.class | grep version minor version: 0 major version: 52 Author: Norbert Kalmar <nkalmar@yahoo.com> Reviewers: Andor Moln\u00c3\u00a1r <andor@cloudera.com>, Michael Han <hanm@apache.org> Closes #502 from nkalmar/ZOOKEEPER-3002_java1.8",
            "diff": [
                "diff --git a/build.xml b/build.xml",
                "index a6b7617bc..6e35fcfa2 100644",
                "--- a/build.xml",
                "+++ b/build.xml",
                "@@ -42,4 +42,4 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">",
                "-    <property name=\"javac.target\" value=\"1.7\" />",
                "-    <property name=\"javac.source\" value=\"1.7\" />",
                "+    <property name=\"javac.target\" value=\"1.8\" />",
                "+    <property name=\"javac.source\" value=\"1.8\" />",
                "     <property name=\"build.encoding\" value=\"utf8\" />",
                "diff --git a/docs/zookeeperAdmin.html b/docs/zookeeperAdmin.html",
                "index 790ea1094..6647374d6 100644",
                "--- a/docs/zookeeperAdmin.html",
                "+++ b/docs/zookeeperAdmin.html",
                "@@ -506,4 +506,4 @@ document.write(\"Last Published: \" + document.lastModified);",
                " <h4>Required Software </h4>",
                "-<p>ZooKeeper runs in Java, release 1.7 or greater (JDK 7 or",
                "-        greater, FreeBSD support requires openjdk7).  It runs as an",
                "+<p>ZooKeeper runs in Java, release 1.8 or greater (JDK 8 or",
                "+        greater, FreeBSD support requires openjdk8).  It runs as an",
                "         <em>ensemble</em> of ZooKeeper servers. Three"
            ],
            "changed_files": [
                "build.xml",
                "docs/zookeeperAdmin.html"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-3002": ""
            },
            "ghissue_refs": {
                "502": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "a6739abdf27423ff0cd8ee1c99145ed3e3690561"
                ]
            ],
            "tags": [
                "release-3.6.0",
                "release-3.6.0-0",
                "release-3.6.0-1",
                "release-3.6.0-2",
                "release-3.6.0-3",
                "release-3.6.0-4",
                "release-3.6.1",
                "release-3.6.1-0",
                "release-3.6.1-1",
                "release-3.6.2",
                "release-3.6.2-0",
                "release-3.6.2-1",
                "release-3.6.3",
                "release-3.6.3-0",
                "release-3.6.3-1",
                "release-3.6.3-2",
                "release-3.6.4",
                "release-3.6.4-0",
                "release-3.6.4-1",
                "release-3.6.4-2",
                "release-3.7.0",
                "release-3.7.0-0",
                "release-3.7.0-1",
                "release-3.7.0-2",
                "release-3.7.1",
                "release-3.7.1-0",
                "release-3.7.1-1",
                "release-3.7.2",
                "release-3.7.2-0",
                "release-3.7.3-0",
                "release-3.8.0-0",
                "release-3.8.0-1",
                "release-3.8.1",
                "release-3.8.1-0",
                "release-3.8.1-1",
                "release-3.8.2",
                "release-3.8.2-0",
                "release-3.8.3",
                "release-3.8.3-0",
                "release-3.8.4",
                "release-3.8.4-0",
                "release-3.9.0",
                "release-3.9.0-0",
                "release-3.9.0-1",
                "release-3.9.1",
                "release-3.9.1-0",
                "release-3.9.2",
                "release-3.9.2-0",
                "zookeeper-"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-3002",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 502",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "aefb13f2b289e19e32c0fcc5714711b07989d67f",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1517961918,
            "hunks": 32,
            "message": "ZOOKEEPER-2939: Added last/min/max proposal size JMX beans https://issues.apache.org/jira/browse/ZOOKEEPER-2939 - Refactor proposal serialization logic to a common place (SerializeUtils), - Add JMX metric to monitor jute.maxbuffer setting - Add JMX metric to monitor min/max/last size of generated proposals - Add proposal stats info to 'stat' 4lw command - Add proposal stats resetting to 'srst' 4lw command - Unit tests Author: Andor Moln\u00c3\u00a1r <andor@cloudera.com> Author: Andor Molnar <andor@cloudera.com> Reviewers: Patrick Hunt <phunt@apache.org>, Abraham Fine <afine@apache.org> Closes #415 from anmolnar/ZOOKEEPER-2933 and squashes the following commits: cf6ea5ecb [Andor Molnar] ZOOKEEPER-2933. Added proposal size statistics to 'mntr' command cb28df6d6 [Andor Moln\u00c3\u00a1r] ZOOKEEPER-2939. Fixed findbugs issue: newline in format string 8e6b65f9f [Andor Moln\u00c3\u00a1r] ZOOKEEPER-2939: Added last/min/max proposal size JMX beans",
            "diff": [
                "diff --git a/build.xml b/build.xml",
                "index 37e709af4..639707e73 100644",
                "--- a/build.xml",
                "+++ b/build.xml",
                "@@ -1828,3 +1828,3 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">",
                "        <ivy:cachepath pathid=\"default.path.id\" conf=\"default\" />",
                "-       <ivy:cachepath pathid=\"junit.path.id\" conf=\"test\" transitive=\"false\"/>",
                "+       <ivy:cachepath pathid=\"junit.path.id\" conf=\"test\" />",
                "        <taskdef name=\"eclipse\"",
                "diff --git a/src/java/main/org/apache/zookeeper/server/ZKDatabase.java b/src/java/main/org/apache/zookeeper/server/ZKDatabase.java",
                "index 16baf46f0..6679e783b 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/ZKDatabase.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/ZKDatabase.java",
                "@@ -20,3 +20,2 @@ package org.apache.zookeeper.server;",
                "-import java.io.ByteArrayOutputStream;",
                " import java.io.IOException;",
                "@@ -34,3 +33,2 @@ import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;",
                "-import org.apache.jute.BinaryOutputArchive;",
                " import org.apache.jute.InputArchive;",
                "@@ -266,15 +264,4 @@ public class ZKDatabase {",
                "-            ByteArrayOutputStream baos = new ByteArrayOutputStream();",
                "-            BinaryOutputArchive boa = BinaryOutputArchive.getArchive(baos);",
                "-            try {",
                "-                request.getHdr().serialize(boa, \"hdr\");",
                "-                if (request.getTxn() != null) {",
                "-                    request.getTxn().serialize(boa, \"txn\");",
                "-                }",
                "-                baos.close();",
                "-            } catch (IOException e) {",
                "-                LOG.error(\"This really should be impossible\", e);",
                "-            }",
                "-            QuorumPacket pp = new QuorumPacket(Leader.PROPOSAL, request.zxid,",
                "-                    baos.toByteArray(), null);",
                "+            byte[] data = SerializeUtils.serializeRequest(request);",
                "+            QuorumPacket pp = new QuorumPacket(Leader.PROPOSAL, request.zxid, data, null);",
                "             Proposal p = new Proposal();",
                "diff --git a/src/java/main/org/apache/zookeeper/server/ZooKeeperServerBean.java b/src/java/main/org/apache/zookeeper/server/ZooKeeperServerBean.java",
                "index 38780bbdb..367406619 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/ZooKeeperServerBean.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/ZooKeeperServerBean.java",
                "@@ -22,2 +22,3 @@ import java.util.Date;",
                "+import org.apache.jute.BinaryInputArchive;",
                " import org.apache.zookeeper.Version;",
                "@@ -169,2 +170,7 @@ public class ZooKeeperServerBean implements ZooKeeperServerMXBean, ZKMBeanInfo {",
                "     }",
                "+",
                "+    @Override",
                "+    public int getJuteMaxBufferSize() {",
                "+        return BinaryInputArchive.maxBuffer;",
                "+    }",
                " }",
                "diff --git a/src/java/main/org/apache/zookeeper/server/ZooKeeperServerMXBean.java b/src/java/main/org/apache/zookeeper/server/ZooKeeperServerMXBean.java",
                "index e326e5bbf..a59213192 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/ZooKeeperServerMXBean.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/ZooKeeperServerMXBean.java",
                "@@ -132,2 +132,7 @@ public interface ZooKeeperServerMXBean {",
                "     public long getTxnLogElapsedSyncTime();",
                "+",
                "+    /**",
                "+     * @return Returns the value of the following config setting: jute.maxbuffer",
                "+     */",
                "+    public int getJuteMaxBufferSize();",
                " }",
                "diff --git a/src/java/main/org/apache/zookeeper/server/command/AbstractFourLetterCommand.java b/src/java/main/org/apache/zookeeper/server/command/AbstractFourLetterCommand.java",
                "index 5a8a16e79..fe784022d 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/command/AbstractFourLetterCommand.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/command/AbstractFourLetterCommand.java",
                "@@ -37,3 +37,5 @@ public abstract class AbstractFourLetterCommand {",
                "         .getLogger(AbstractFourLetterCommand.class);",
                "-    protected static final String ZK_NOT_SERVING = \"This ZooKeeper instance is not currently serving requests\";",
                "+",
                "+    public static final String ZK_NOT_SERVING = \"This ZooKeeper instance is not currently serving requests\";",
                "+",
                "     protected PrintWriter pw;",
                "diff --git a/src/java/main/org/apache/zookeeper/server/command/MonitorCommand.java b/src/java/main/org/apache/zookeeper/server/command/MonitorCommand.java",
                "index a3f57336e..c32de4ca1 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/command/MonitorCommand.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/command/MonitorCommand.java",
                "@@ -76,2 +76,6 @@ public class MonitorCommand extends AbstractFourLetterCommand {",
                "             print(\"pending_syncs\", leader.getNumPendingSyncs());",
                "+",
                "+            print(\"last_proposal_size\", leader.getProposalStats().getLastProposalSize());",
                "+            print(\"max_proposal_size\", leader.getProposalStats().getMaxProposalSize());",
                "+            print(\"min_proposal_size\", leader.getProposalStats().getMinProposalSize());",
                "         }",
                "diff --git a/src/java/main/org/apache/zookeeper/server/command/StatCommand.java b/src/java/main/org/apache/zookeeper/server/command/StatCommand.java",
                "index fbe42d096..d04f2f71c 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/command/StatCommand.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/command/StatCommand.java",
                "@@ -24,2 +24,6 @@ import org.apache.zookeeper.Version;",
                " import org.apache.zookeeper.server.ServerCnxn;",
                "+import org.apache.zookeeper.server.ServerStats;",
                "+import org.apache.zookeeper.server.quorum.Leader;",
                "+import org.apache.zookeeper.server.quorum.LeaderZooKeeperServer;",
                "+import org.apache.zookeeper.server.quorum.ProposalStats;",
                " import org.apache.zookeeper.server.quorum.ReadOnlyZooKeeperServer;",
                "@@ -56,5 +60,11 @@ public class StatCommand extends AbstractFourLetterCommand {",
                "             }",
                "-            pw.print(zkServer.serverStats().toString());",
                "+            ServerStats serverStats = zkServer.serverStats();",
                "+            pw.print(serverStats.toString());",
                "             pw.print(\"Node count: \");",
                "             pw.println(zkServer.getZKDatabase().getNodeCount());",
                "+            if (serverStats.getServerState().equals(\"leader\")) {",
                "+                Leader leader = ((LeaderZooKeeperServer)zkServer).getLeader();",
                "+                ProposalStats proposalStats = leader.getProposalStats();",
                "+                pw.printf(\"Proposal sizes last/min/max: %s%n\", proposalStats.toString());",
                "+            }",
                "         }",
                "diff --git a/src/java/main/org/apache/zookeeper/server/command/StatResetCommand.java b/src/java/main/org/apache/zookeeper/server/command/StatResetCommand.java",
                "index 88ac4c3f3..2b2fa06f7 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/command/StatResetCommand.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/command/StatResetCommand.java",
                "@@ -23,2 +23,4 @@ import java.io.PrintWriter;",
                " import org.apache.zookeeper.server.ServerCnxn;",
                "+import org.apache.zookeeper.server.ServerStats;",
                "+import org.apache.zookeeper.server.quorum.LeaderZooKeeperServer;",
                "@@ -34,3 +36,7 @@ public class StatResetCommand extends AbstractFourLetterCommand {",
                "         } else {",
                "-            zkServer.serverStats().reset();",
                "+            ServerStats serverStats = zkServer.serverStats();",
                "+            serverStats.reset();",
                "+            if (serverStats.getServerState().equals(\"leader\")) {",
                "+                ((LeaderZooKeeperServer)zkServer).getLeader().getProposalStats().reset();",
                "+            }",
                "             pw.println(\"Server stats reset.\");",
                "diff --git a/src/java/main/org/apache/zookeeper/server/quorum/Leader.java b/src/java/main/org/apache/zookeeper/server/quorum/Leader.java",
                "index cebf2e3c9..52a911355 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/quorum/Leader.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/quorum/Leader.java",
                "@@ -53,2 +53,3 @@ import org.apache.zookeeper.server.quorum.QuorumPeer.LearnerType;",
                " import org.apache.zookeeper.server.quorum.flexible.QuorumVerifier;",
                "+import org.apache.zookeeper.server.util.SerializeUtils;",
                " import org.apache.zookeeper.server.util.ZxidUtils;",
                "@@ -107,2 +108,8 @@ public class Leader {",
                "+    private final ProposalStats proposalStats;",
                "+",
                "+    public ProposalStats getProposalStats() {",
                "+        return proposalStats;",
                "+    }",
                "+",
                "     /**",
                "@@ -224,2 +231,3 @@ public class Leader {",
                "         this.self = self;",
                "+        this.proposalStats = new ProposalStats();",
                "         try {",
                "@@ -723,3 +731,2 @@ public class Leader {",
                "      * @return True if committed, otherwise false.",
                "-     * @param a proposal p",
                "      **/",
                "@@ -994,4 +1001,2 @@ public class Leader {",
                "      * Create an inform packet and send it to all observers.",
                "-     * @param zxid",
                "-     * @param proposal",
                "      */",
                "@@ -1006,4 +1011,2 @@ public class Leader {",
                "      * Create an inform&activate packet and send it to all observers.",
                "-     * @param zxid",
                "-     * @param proposal",
                "      */",
                "@@ -1057,15 +1060,5 @@ public class Leader {",
                "-        ByteArrayOutputStream baos = new ByteArrayOutputStream();",
                "-        BinaryOutputArchive boa = BinaryOutputArchive.getArchive(baos);",
                "-        try {",
                "-            request.getHdr().serialize(boa, \"hdr\");",
                "-            if (request.getTxn() != null) {",
                "-                request.getTxn().serialize(boa, \"txn\");",
                "-            }",
                "-            baos.close();",
                "-        } catch (IOException e) {",
                "-            LOG.warn(\"This really should be impossible\", e);",
                "-        }",
                "-        QuorumPacket pp = new QuorumPacket(Leader.PROPOSAL, request.zxid,",
                "-                baos.toByteArray(), null);",
                "+        byte[] data = SerializeUtils.serializeRequest(request);",
                "+        proposalStats.setLastProposalSize(data.length);",
                "+        QuorumPacket pp = new QuorumPacket(Leader.PROPOSAL, request.zxid, data, null);",
                "@@ -1122,7 +1115,3 @@ public class Leader {",
                "      * Sends a sync message to the appropriate server",
                "-     *",
                "-     * @param f",
                "-     * @param r",
                "      */",
                "-",
                "     public void sendSync(LearnerSyncRequest r){",
                "diff --git a/src/java/main/org/apache/zookeeper/server/quorum/LeaderBean.java b/src/java/main/org/apache/zookeeper/server/quorum/LeaderBean.java",
                "index 6ab2c307d..9f5eb2409 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/quorum/LeaderBean.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/quorum/LeaderBean.java",
                "@@ -22,4 +22,2 @@ import org.apache.zookeeper.server.ZooKeeperServerBean;",
                " import org.apache.zookeeper.server.ZooKeeperServer;",
                "-import org.apache.zookeeper.server.quorum.LearnerHandler;",
                "-import org.apache.zookeeper.server.quorum.Leader;",
                "@@ -56,2 +54,22 @@ public class LeaderBean extends ZooKeeperServerBean implements LeaderMXBean {",
                "     }",
                "+",
                "+    @Override",
                "+    public int getLastProposalSize() {",
                "+        return leader.getProposalStats().getLastProposalSize();",
                "+    }",
                "+",
                "+    @Override",
                "+    public int getMinProposalSize() {",
                "+        return leader.getProposalStats().getMinProposalSize();",
                "+    }",
                "+",
                "+    @Override",
                "+    public int getMaxProposalSize() {",
                "+        return leader.getProposalStats().getMaxProposalSize();",
                "+    }",
                "+",
                "+    @Override",
                "+    public void resetProposalStatistics() {",
                "+        leader.getProposalStats().reset();",
                "+    }",
                " }",
                "diff --git a/src/java/main/org/apache/zookeeper/server/quorum/LeaderMXBean.java b/src/java/main/org/apache/zookeeper/server/quorum/LeaderMXBean.java",
                "index 66428a4f2..7a1a439fa 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/quorum/LeaderMXBean.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/quorum/LeaderMXBean.java",
                "@@ -40,2 +40,22 @@ public interface LeaderMXBean extends ZooKeeperServerMXBean {",
                "     public long getElectionTimeTaken();",
                "+",
                "+    /**",
                "+     * @return size of latest generated proposal",
                "+     */",
                "+    public int getLastProposalSize();",
                "+",
                "+    /**",
                "+     * @return size of smallest generated proposal",
                "+     */",
                "+    public int getMinProposalSize();",
                "+",
                "+    /**",
                "+     * @return size of largest generated proposal",
                "+     */",
                "+    public int getMaxProposalSize();",
                "+",
                "+    /**",
                "+     * Resets statistics of proposal size (min/max/last)",
                "+     */",
                "+    public void resetProposalStatistics();",
                " }",
                "diff --git a/src/java/main/org/apache/zookeeper/server/quorum/ProposalStats.java b/src/java/main/org/apache/zookeeper/server/quorum/ProposalStats.java",
                "new file mode 100644",
                "index 000000000..2f3a9c72c",
                "--- /dev/null",
                "+++ b/src/java/main/org/apache/zookeeper/server/quorum/ProposalStats.java",
                "@@ -0,0 +1,71 @@",
                "+/**",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.zookeeper.server.quorum;",
                "+",
                "+/**",
                "+ * Provides live statistics about a running Leader.",
                "+ */",
                "+public class ProposalStats {",
                "+    /**",
                "+     * Size of the last generated proposal. This should fit into server's jute.maxbuffer setting.",
                "+     */",
                "+    private int lastProposalSize = -1;",
                "+",
                "+    /**",
                "+     * Size of the smallest proposal which has been generated since the server was started.",
                "+     */",
                "+    private int minProposalSize = -1;",
                "+",
                "+    /**",
                "+     * Size of the largest proposal which has been generated since the server was started.",
                "+     */",
                "+    private int maxProposalSize = -1;",
                "+",
                "+    public synchronized int getLastProposalSize() {",
                "+        return lastProposalSize;",
                "+    }",
                "+",
                "+    synchronized void setLastProposalSize(int value) {",
                "+        lastProposalSize = value;",
                "+        if (minProposalSize == -1 || value < minProposalSize) {",
                "+            minProposalSize = value;",
                "+        }",
                "+        if (value > maxProposalSize) {",
                "+            maxProposalSize = value;",
                "+        }",
                "+    }",
                "+",
                "+    public synchronized int getMinProposalSize() {",
                "+        return minProposalSize;",
                "+    }",
                "+",
                "+    public synchronized int getMaxProposalSize() {",
                "+        return maxProposalSize;",
                "+    }",
                "+",
                "+    public synchronized void reset() {",
                "+        lastProposalSize = -1;",
                "+        minProposalSize = -1;",
                "+        maxProposalSize = -1;",
                "+    }",
                "+",
                "+    public synchronized String toString() {",
                "+        return String.format(\"%d/%d/%d\", lastProposalSize, minProposalSize, maxProposalSize);",
                "+    }",
                "+}",
                "diff --git a/src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java b/src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java",
                "index b7936f1a4..eccf5270b 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java",
                "@@ -21,2 +21,3 @@ package org.apache.zookeeper.server.util;",
                " import org.apache.jute.BinaryInputArchive;",
                "+import org.apache.jute.BinaryOutputArchive;",
                " import org.apache.jute.InputArchive;",
                "@@ -25,3 +26,5 @@ import org.apache.jute.Record;",
                " import org.apache.zookeeper.ZooDefs.OpCode;",
                "+import org.apache.zookeeper.common.IOUtils;",
                " import org.apache.zookeeper.server.DataTree;",
                "+import org.apache.zookeeper.server.Request;",
                " import org.apache.zookeeper.server.ZooTrace;",
                "@@ -42,2 +45,3 @@ import org.slf4j.LoggerFactory;",
                " import java.io.ByteArrayInputStream;",
                "+import java.io.ByteArrayOutputStream;",
                " import java.io.EOFException;",
                "@@ -150,2 +154,18 @@ public class SerializeUtils {",
                "+    public static byte[] serializeRequest(Request request) {",
                "+        if (request == null || request.getHdr() == null) return null;",
                "+        ByteArrayOutputStream baos = new ByteArrayOutputStream();",
                "+        BinaryOutputArchive boa = BinaryOutputArchive.getArchive(baos);",
                "+        try {",
                "+            request.getHdr().serialize(boa, \"hdr\");",
                "+            if (request.getTxn() != null) {",
                "+                request.getTxn().serialize(boa, \"txn\");",
                "+            }",
                "+        } catch (IOException e) {",
                "+            LOG.error(\"This really should be impossible\", e);",
                "+        } finally {",
                "+            IOUtils.cleanup(LOG, baos);",
                "+        }",
                "+        return baos.toByteArray();",
                "+    }",
                " }"
            ],
            "changed_files": [
                "build.xml",
                "src/java/main/org/apache/zookeeper/server/ZKDatabase.java",
                "src/java/main/org/apache/zookeeper/server/ZooKeeperServerBean.java",
                "src/java/main/org/apache/zookeeper/server/ZooKeeperServerMXBean.java",
                "src/java/main/org/apache/zookeeper/server/command/AbstractFourLetterCommand.java",
                "src/java/main/org/apache/zookeeper/server/command/MonitorCommand.java",
                "src/java/main/org/apache/zookeeper/server/command/StatCommand.java",
                "src/java/main/org/apache/zookeeper/server/command/StatResetCommand.java",
                "src/java/main/org/apache/zookeeper/server/quorum/Leader.java",
                "src/java/main/org/apache/zookeeper/server/quorum/LeaderBean.java",
                "src/java/main/org/apache/zookeeper/server/quorum/LeaderMXBean.java",
                "src/java/main/org/apache/zookeeper/server/quorum/ProposalStats.java",
                "src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2939": "",
                "ZOOKEEPER-2933": ""
            },
            "ghissue_refs": {
                "415": "ZOOKEEPER-2979 Use dropwizard library histogram for proposal-related metrics #440 ZOOKEEPER-2980 Backport ZOOKEEPER-2939 Deal with maxbuffer as it relates to proposals - branch-3.4 #462 ZOOKEEPER-2940. Deal with maxbuffer as it relates to large requests from clients #466"
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "5ae5f1076e56947db5694ff8ab06c3d0b4f5d802"
                ]
            ],
            "tags": [
                "release-3.6.0",
                "release-3.6.0-0",
                "release-3.6.0-1",
                "release-3.6.0-2",
                "release-3.6.0-3",
                "release-3.6.0-4",
                "release-3.6.1",
                "release-3.6.1-0",
                "release-3.6.1-1",
                "release-3.6.2",
                "release-3.6.2-0",
                "release-3.6.2-1",
                "release-3.6.3",
                "release-3.6.3-0",
                "release-3.6.3-1",
                "release-3.6.3-2",
                "release-3.6.4",
                "release-3.6.4-0",
                "release-3.6.4-1",
                "release-3.6.4-2",
                "release-3.7.0",
                "release-3.7.0-0",
                "release-3.7.0-1",
                "release-3.7.0-2",
                "release-3.7.1",
                "release-3.7.1-0",
                "release-3.7.1-1",
                "release-3.7.2",
                "release-3.7.2-0",
                "release-3.7.3-0",
                "release-3.8.0-0",
                "release-3.8.0-1",
                "release-3.8.1",
                "release-3.8.1-0",
                "release-3.8.1-1",
                "release-3.8.2",
                "release-3.8.2-0",
                "release-3.8.3",
                "release-3.8.3-0",
                "release-3.8.4",
                "release-3.8.4-0",
                "release-3.9.0",
                "release-3.9.0-0",
                "release-3.9.0-1",
                "release-3.9.1",
                "release-3.9.1-0",
                "release-3.9.2",
                "release-3.9.2-0",
                "zookeeper-"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: quorum, server, leader",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2939, ZOOKEEPER-2933",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 415",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ffda36316b99c50802e1f812da5f5bfb41b8808c",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1520531494,
            "hunks": 1,
            "message": "ZOOKEEPER-2962: Removed Unused method. Author: asutosh936 <asutosh.pandya@hotmail.com> Reviewers: Abraham Fine <afine@apache.org> Closes #482 from asutosh936/branch-3.4",
            "diff": [
                "diff --git a/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java b/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java",
                "index 67e926730..62216ab4f 100644",
                "--- a/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java",
                "+++ b/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java",
                "@@ -457,9 +457,2 @@ public class FastLeaderElection implements Election {",
                "-        /**",
                "-         * Test if both send and receive queues are empty.",
                "-         */",
                "-        public boolean queueEmpty() {",
                "-            return (sendqueue.isEmpty() || recvqueue.isEmpty());",
                "-        }",
                "-"
            ],
            "changed_files": [
                "src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2962": ""
            },
            "ghissue_refs": {
                "482": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "release-3.4.12",
                "release-3.4.12-rc0",
                "release-3.4.12-rc1",
                "release-3.4.13",
                "release-3.4.13-rc0",
                "release-3.4.13-rc1",
                "release-3.4.14",
                "release-3.4.14-rc0",
                "release-3.4.14-rc1",
                "release-3.4.14-rc2",
                "release-3.4.14-rc3",
                "release-3.4.14-rc4",
                "release-3.4.14-rc5"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: leader, server, quorum",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2962",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 482",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "79627c6e07a901150709896f7c22597164badfc5",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1524694629,
            "hunks": 15,
            "message": "ZOOKEEPER-2955: Enable Clover code coverage report ZOOKEEPER-2955: Enable Clover code coverage report This PR configures OpenClover to generate Java code coverage reports. To generate Java code coverage report run: ant test-coverage-clover-java For quick testing of this PR run: ant -Dtestcase=test_file_name test-coverage-clover-java Clover can also be run step-by-step: ant -Drun.clover=true test-core-java ant clover-report Note: run.clover must not be set when building ZK for production use. The reports will be placed under the build/test/clover/reports directory in HTML and XML formats. Author: Mark Fenes <mfenes@cloudera.com> Reviewers: phunt@apache.org Closes #443 from mfenes/ZOOKEEPER-2955 and squashes the following commits: 321fc0152 [Mark Fenes] ZOOKEEPER-2955: Enable Clover code coverage report ca68181b2 [Mark Fenes] ZOOKEEPER-2955: Enable Clover code coverage report 4cd1a3170 [Mark Fenes] Trigger notification 09872a66b [Mark Fenes] ZOOKEEPER-2955: Enable Clover code coverage report 3e0f2543c [Mark Fenes] Trigger notification 0cdb44442 [Mark Fenes] ZOOKEEPER-2955: Enable Clover code coverage report 270c12efc [Mark Fenes] ZOOKEEPER-2955: Enable Clover code coverage report f59dcf8ad [Mark Fenes] ZOOKEEPER-2955: Enable Clover code coverage report Change-Id: I089ca39224fa6012a299a46e4a35333ecc87ef35",
            "diff": [
                "diff --git a/build.xml b/build.xml",
                "index 6e35fcfa2..a45a35151 100644",
                "--- a/build.xml",
                "+++ b/build.xml",
                "@@ -25,2 +25,44 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">",
                "+    <!-- ====================================================== -->",
                "+    <!-- Dependency versions                                    -->",
                "+    <!-- ====================================================== -->",
                "+    <property name=\"slf4j.version\" value=\"1.7.25\"/>",
                "+    <property name=\"commons-cli.version\" value=\"1.2\"/>",
                "+",
                "+    <property name=\"wagon-http.version\" value=\"2.4\"/>",
                "+    <property name=\"maven-ant-tasks.version\" value=\"2.1.3\"/>",
                "+    <property name=\"log4j.version\" value=\"1.2.17\"/>",
                "+    <property name=\"jline.version\" value=\"2.11\"/>",
                "+",
                "+    <property name=\"audience-annotations.version\" value=\"0.5.0\" />",
                "+",
                "+    <property name=\"netty.version\" value=\"3.10.6.Final\"/>",
                "+",
                "+    <property name=\"junit.version\" value=\"4.12\"/>",
                "+    <property name=\"mockito.version\" value=\"1.8.2\"/>",
                "+    <property name=\"checkstyle.version\" value=\"6.13\"/>",
                "+    <property name=\"commons-collections.version\" value=\"3.2.2\"/>",
                "+",
                "+    <property name=\"jdiff.version\" value=\"1.0.9\"/>",
                "+    <property name=\"xerces.version\" value=\"1.4.4\"/>",
                "+",
                "+    <property name=\"apache-rat-tasks.version\" value=\"0.10\"/>",
                "+    <property name=\"commons-lang.version\" value=\"2.6\"/>",
                "+",
                "+    <property name=\"javacc.version\" value=\"5.0\"/>",
                "+",
                "+    <property name=\"jetty.version\" value=\"9.2.18.v20160721\"/>",
                "+    <property name=\"jackson-mapper-asl.version\" value=\"1.9.11\"/>",
                "+    <property name=\"dependency-check-ant.version\" value=\"2.1.0\"/>",
                "+",
                "+    <property name=\"commons-io.version\" value=\"2.4\"/>",
                "+    <property name=\"kerby.version\" value=\"1.0.0-RC2\"/>",
                "+",
                "+    <property name=\"clover.version\" value=\"4.2.1\" />",
                "+",
                "+",
                "+    <!-- ====================================================== -->",
                "+    <!-- Project properties                                     -->",
                "+    <!-- ====================================================== -->",
                "+",
                "     <!-- read build.properties from the basedir if any -->",
                "@@ -106,8 +148,2 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">",
                "-    <property name=\"clover.home\" location=\"${env.CLOVER_HOME}\"/>",
                "-    <property name=\"clover.jar\" location=\"${clover.home}/lib/clover.jar\" />",
                "-    <property name=\"clover.db.dir\" location=\"${test.java.build.dir}/clover/db\"/>",
                "-    <property name=\"clover.report.dir\"",
                "-              location=\"${test.java.build.dir}/clover/reports\"/>",
                "-",
                "     <property name=\"contrib.dir\" value=\"${src.dir}/contrib\"/>",
                "@@ -126,2 +162,3 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">",
                "     <property name=\"ivy.owasp.lib\" value=\"${build.dir}/owasp/lib\"/>",
                "+    <property name=\"ivy.clover.lib\" value=\"${build.dir}/clover/lib\"/>",
                "     <property name=\"ivysettings.xml\" value=\"${basedir}/ivysettings.xml\"/>",
                "@@ -134,17 +171,12 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">",
                "     <property name=\"ant_task.jar\" location=\"${ivy.lib}/maven-ant-tasks-${ant-task.version}.jar\"/>",
                "-    ",
                "-    <available property=\"clover.present\"",
                "-               classname=\"com.cenqua.clover.CloverInstr\"",
                "-               classpath=\"${clover.home}/lib/clover.jar\"/>",
                "-    <available file=\"${c.src.dir}/Makefile\" property=\"Makefile.present\"/>",
                "-",
                "-    <!-- check if clover reports should be generated -->",
                "-    <condition property=\"clover.enabled\">",
                "-      <and>",
                "-        <isset property=\"run.clover\"/>",
                "-        <isset property=\"clover.present\"/>",
                "-      </and>",
                "-    </condition>",
                "+    <!-- clover property set -->",
                "+    <property name=\"clover.home\" location=\"${build.dir}/clover\"/>",
                "+    <property name=\"clover.jar\" location=\"${clover.home}/lib/clover-${clover.version}.jar\"/>",
                "+    <property name=\"clover.dest\" location=\"${build.dir}/clover\"/>",
                "+    <property name=\"clover.db.dir\" location=\"${clover.dest}/db\"/>",
                "+    <property name=\"clover.report.dir\" location=\"${clover.dest}/reports\"/>",
                "+    <property name=\"clover.db\" location=\"${clover.db.dir}/zookeeper-coverage.db\"/>",
                "+    <available file=\"${c.src.dir}/Makefile\" property=\"Makefile.present\"/>",
                "@@ -197,36 +229,2 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">",
                "-    <!-- ====================================================== -->",
                "-    <!-- Dependency versions                                    -->",
                "-    <!-- ====================================================== -->",
                "-    <property name=\"slf4j.version\" value=\"1.7.25\"/>",
                "-    <property name=\"commons-cli.version\" value=\"1.2\"/>",
                "-",
                "-    <property name=\"wagon-http.version\" value=\"2.4\"/>",
                "-    <property name=\"maven-ant-tasks.version\" value=\"2.1.3\"/>",
                "-    <property name=\"log4j.version\" value=\"1.2.17\"/>",
                "-    <property name=\"jline.version\" value=\"2.11\"/>",
                "-",
                "-    <property name=\"audience-annotations.version\" value=\"0.5.0\" />",
                "-",
                "-    <property name=\"netty.version\" value=\"3.10.6.Final\"/>",
                "-",
                "-    <property name=\"junit.version\" value=\"4.12\"/>",
                "-    <property name=\"mockito.version\" value=\"1.8.2\"/>",
                "-    <property name=\"checkstyle.version\" value=\"6.13\"/>",
                "-    <property name=\"commons-collections.version\" value=\"3.2.2\"/>",
                "-",
                "-    <property name=\"jdiff.version\" value=\"1.0.9\"/>",
                "-    <property name=\"xerces.version\" value=\"1.4.4\"/>",
                "-",
                "-    <property name=\"apache-rat-tasks.version\" value=\"0.10\"/>",
                "-    <property name=\"commons-lang.version\" value=\"2.6\"/>",
                "-",
                "-    <property name=\"javacc.version\" value=\"5.0\"/>",
                "-",
                "-    <property name=\"jetty.version\" value=\"9.2.18.v20160721\"/>",
                "-    <property name=\"jackson-mapper-asl.version\" value=\"1.9.11\"/>",
                "-    <property name=\"dependency-check-ant.version\" value=\"2.1.0\"/>",
                "-",
                "-    <property name=\"commons-io.version\" value=\"2.4\"/>",
                "-    <property name=\"kerby.version\" value=\"1.0.0-RC2\"/>",
                "@@ -260,3 +258,5 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">",
                "       </fileset>",
                "-      <pathelement path=\"${clover.jar}\" />",
                "+      <fileset dir=\"${clover.home}/lib\" erroronmissingdir=\"false\">",
                "+          <include name=\"**/*.jar\" if=\"run.clover\" />",
                "+      </fileset>",
                "     </path>",
                "@@ -449,2 +449,8 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">",
                "+    <target name=\"ivy-retrieve-clover\" if=\"run.clover\" depends=\"init,ivy-init\">",
                "+        <ivy:retrieve settingsRef=\"${ant.project.name}\" conf=\"clover\"",
                "+                      pattern=\"${ivy.clover.lib}/[artifact]-[revision].[ext]\"/>",
                "+        <ivy:cachepath pathid=\"clover-classpath\" conf=\"clover\"/>",
                "+    </target>",
                "+",
                "     <target name=\"dependency-report\" depends=\"init,ivy-init\">",
                "@@ -1412,13 +1418,38 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">",
                "-    <!-- clover code coverage -->",
                "-    <target name=\"clover\" depends=\"clover.setup, clover.info\" ",
                "-            description=\"Instrument the Unit tests using Clover.  Requires a Clover license and CLOVER_HOME environment variable set appropriately.  To use, specify -Drun.clover=true on the command line.\"/>",
                "+    <!-- Clover code coverage -->",
                "+    <target name=\"test-coverage-clover-java\"",
                "+            description=\"Runs Java tests with Clover and generates coverage report in HTML and XML.\">",
                "+      <antcall target=\"test-core-java\">",
                "+        <param name=\"run.clover\" value=\"true\"/>",
                "+      </antcall>",
                "+      <antcall target=\"clover-report\"/>",
                "+    </target>",
                "+",
                "+    <target name=\"clover\" if=\"run.clover\" depends=\"ivy-retrieve-clover,clover.check,clover.setup\"",
                "+            description=\"Used in compile target to add source code instrumentation for Clover and sets up the Clover database.\"/>",
                "+",
                "+    <target name=\"clover.check\">",
                "+        <available property=\"clover.present\"",
                "+                   classname=\"com.atlassian.clover.CloverInstr\"",
                "+                   classpath=\"${clover.home}/lib/clover-${clover.version}.jar\"/>",
                "+        <fail if=\"run.clover\" unless=\"clover.present\">",
                "+            Clover not found.",
                "+            Please make sure clover-${clover.version}.jar is in ${clover.home}/lib, or made available",
                "+            to Ant using other mechanisms like -lib or CLASSPATH.",
                "+        </fail>",
                "+    </target>",
                "-    <target name=\"clover.setup\" if=\"clover.enabled\">",
                "+    <target name=\"clover.setup\" if=\"run.clover\">",
                "       <taskdef resource=\"cloverlib.xml\" classpath=\"${clover.jar}\"/>",
                "       <mkdir dir=\"${clover.db.dir}\"/>",
                "-      <clover-setup initString=\"${clover.db.dir}/zookeeper_coverage.db\">",
                "+      <clover-setup initString=\"${clover.db}\">",
                "         <fileset dir=\"${java.src.dir}\"",
                "                  includes=\"org/apache/zookeeper/**/*\"",
                "-                 excludes=\"org/apache/zookeeper/version/**/*\"/>",
                "+                 excludes=\"org/apache/zookeeper/version/**/*\">",
                "+        </fileset>",
                "+        <testsources dir=\"${test.src.dir}\">",
                "+          <testclass package=\"org.apache.zookeeper.*\" name=\".*Test\">",
                "+              <testmethod annotation=\"Test\"/>",
                "+          </testclass>",
                "+        </testsources>",
                "       </clover-setup>",
                "@@ -1426,23 +1457,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">",
                "-    <target name=\"clover.info\" if=\"run.clover\" unless=\"clover.present\">",
                "-      <echo>",
                "-        Clover not found. Code coverage reports disabled.",
                "-      </echo>",
                "-    </target>",
                "-",
                "-    <target name=\"clover.check\">",
                "-      <fail unless=\"clover.present\">",
                "-        ##################################################################",
                "-        Clover not found.",
                "-        Please make sure clover.jar is in ANT_HOME/lib, or made available",
                "-        to Ant using other mechanisms like -lib or CLASSPATH.",
                "-        ##################################################################",
                "-      </fail>",
                "-    </target>",
                "-",
                "-    <target name=\"generate-clover-reports\" depends=\"clover.check, clover\">",
                "+    <target name=\"clover-report\" depends=\"ivy-retrieve-clover\"",
                "+            description=\"Generates coverage report in HTML and XML. Run the tests first with 'ant -Drun.clover=true test-core-java' to generate coverage data.\">",
                "+      <taskdef resource=\"cloverlib.xml\" classpath=\"${clover.jar}\"/>",
                "       <mkdir dir=\"${clover.report.dir}\"/>",
                "-      <taskdef resource=\"cloverlib.xml\" classpath=\"${clover.jar}\"/> ",
                "-      ",
                "-      <clover-report initString=\"${clover.db.dir}/zookeeper_coverage.db\">",
                "+      <clover-report initString=\"${clover.db}\">",
                "         <current outfile=\"${clover.report.dir}\" title=\"${final.name}\">",
                "@@ -1451,3 +1466,3 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">",
                "       </clover-report>",
                "-      <clover-report initString=\"${clover.db.dir}/zookeeper_coverage.db\">",
                "+      <clover-report initString=\"${clover.db}\">",
                "         <current outfile=\"${clover.report.dir}/clover.xml\" title=\"${final.name}\">",
                "diff --git a/ivy.xml b/ivy.xml",
                "index 4298aa9f2..48d857074 100644",
                "--- a/ivy.xml",
                "+++ b/ivy.xml",
                "@@ -37,2 +37,3 @@",
                "     <conf name=\"owasp\" visibility=\"private\" description=\"Artifacts required for owasp target\"/>",
                "+    <conf name=\"clover\" visibility=\"private\" description=\"Artifacts required for clover target\"/>",
                "   </configurations>",
                "@@ -135,2 +136,4 @@",
                "+    <dependency org=\"org.openclover\" name=\"clover\" rev=\"${clover.version}\" conf=\"clover->default\"/>",
                "+",
                "     <conflict manager=\"strict\"/>"
            ],
            "changed_files": [
                "build.xml",
                "ivy.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2955": ""
            },
            "ghissue_refs": {
                "443": "ZOOKEEPER-2955: Enable Clover code coverage report #445 ZOOKEEPER-2955: Enable Clover code coverage report #444 ZOOKEEPER-2955: Enable Clover code coverage report #519"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "release-3.6.0",
                "release-3.6.0-0",
                "release-3.6.0-1",
                "release-3.6.0-2",
                "release-3.6.0-3",
                "release-3.6.0-4",
                "release-3.6.1",
                "release-3.6.1-0",
                "release-3.6.1-1",
                "release-3.6.2",
                "release-3.6.2-0",
                "release-3.6.2-1",
                "release-3.6.3",
                "release-3.6.3-0",
                "release-3.6.3-1",
                "release-3.6.3-2",
                "release-3.6.4",
                "release-3.6.4-0",
                "release-3.6.4-1",
                "release-3.6.4-2",
                "release-3.7.0",
                "release-3.7.0-0",
                "release-3.7.0-1",
                "release-3.7.0-2",
                "release-3.7.1",
                "release-3.7.1-0",
                "release-3.7.1-1",
                "release-3.7.2",
                "release-3.7.2-0",
                "release-3.7.3-0",
                "release-3.8.0-0",
                "release-3.8.0-1",
                "release-3.8.1",
                "release-3.8.1-0",
                "release-3.8.1-1",
                "release-3.8.2",
                "release-3.8.2-0",
                "release-3.8.3",
                "release-3.8.3-0",
                "release-3.8.4",
                "release-3.8.4-0",
                "release-3.9.0",
                "release-3.9.0-0",
                "release-3.9.0-1",
                "release-3.9.1",
                "release-3.9.1-0",
                "release-3.9.2",
                "release-3.9.2-0",
                "zookeeper-"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: change",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2955",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 443",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ecb1162ec7f381963fb3263c7971a85fc35b27c8",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1520028737,
            "hunks": 1,
            "message": "ZOOKEEPER-2936: Removed duplicate code Author: asutosh936 <asutosh.pandya@hotmail.com> Reviewers: Andor Moln\u00c3\u00a1r <andor@cloudera.com>, Abraham Fine <afine@apache.org> Closes #473 from asutosh936/master and squashes the following commits: 6a17613be [asutosh936] ZOOKEEPER-2936 - Deleted duplicate code a02ef3db8 [asutosh936] ZOOKEEPER-2936 - Removed duplicate code",
            "diff": [
                "diff --git a/src/contrib/rest/conf/log4j.properties b/src/contrib/rest/conf/log4j.properties",
                "index c294b3d4e..21ba7e485 100644",
                "--- a/src/contrib/rest/conf/log4j.properties",
                "+++ b/src/contrib/rest/conf/log4j.properties",
                "@@ -58,6 +58,2 @@ log4j.appender.ROLLINGFILE.MaxFileSize=10MB",
                "-log4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout",
                "-log4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n",
                "-",
                "-",
                " #"
            ],
            "changed_files": [
                "src/contrib/rest/conf/log4j.properties"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2936": ""
            },
            "ghissue_refs": {
                "473": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e754927db6ca9c7a0d8bc426d393759c55ca8b96"
                ],
                [
                    "no-tag",
                    "484404ca96843c2ae5b8896eeca3d86264ca95ca"
                ]
            ],
            "tags": [
                "release-3.6.0",
                "release-3.6.0-0",
                "release-3.6.0-1",
                "release-3.6.0-2",
                "release-3.6.0-3",
                "release-3.6.0-4",
                "release-3.6.1",
                "release-3.6.1-0",
                "release-3.6.1-1",
                "release-3.6.2",
                "release-3.6.2-0",
                "release-3.6.2-1",
                "release-3.6.3",
                "release-3.6.3-0",
                "release-3.6.3-1",
                "release-3.6.3-2",
                "release-3.6.4",
                "release-3.6.4-0",
                "release-3.6.4-1",
                "release-3.6.4-2",
                "release-3.7.0",
                "release-3.7.0-0",
                "release-3.7.0-1",
                "release-3.7.0-2",
                "release-3.7.1",
                "release-3.7.1-0",
                "release-3.7.1-1",
                "release-3.7.2",
                "release-3.7.2-0",
                "release-3.7.3-0",
                "release-3.8.0-0",
                "release-3.8.0-1",
                "release-3.8.1",
                "release-3.8.1-0",
                "release-3.8.1-1",
                "release-3.8.2",
                "release-3.8.2-0",
                "release-3.8.3",
                "release-3.8.3-0",
                "release-3.8.4",
                "release-3.8.4-0",
                "release-3.9.0",
                "release-3.9.0-0",
                "release-3.9.0-1",
                "release-3.9.1",
                "release-3.9.1-0",
                "release-3.9.2",
                "release-3.9.2-0",
                "zookeeper-"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2936",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 473",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7b9176cbbe5878d7471b2ef02e1748d9229adb59",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1520218285,
            "hunks": 1,
            "message": "ZOOKEEPER-2992: The eclipse build target fails due to protocol redirection: http->https ZOOKEEPER-2992 is the Jira issue. Author: Shawn Heisey <elyograg@apache.org> Reviewers: Edward Ribeiro <edward.ribeiro@gmail.com>, Andor Moln\u00c3\u00a1r <andor@cloudera.com>, Michael Han <hanm@apache.org> Closes #479 from elyograg/master",
            "diff": [
                "diff --git a/build.xml b/build.xml",
                "index cb05adbb9..7758ef6c9 100644",
                "--- a/build.xml",
                "+++ b/build.xml",
                "@@ -1864,3 +1864,3 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle\">",
                "      <target name=\"ant-eclipse-download\" unless=\"ant-eclipse.jar.exists\">",
                "-       <get src=\"http://downloads.sourceforge.net/project/ant-eclipse/ant-eclipse/1.0/ant-eclipse-1.0.bin.tar.bz2\"",
                "+       <get src=\"https://downloads.sourceforge.net/project/ant-eclipse/ant-eclipse/1.0/ant-eclipse-1.0.bin.tar.bz2\"",
                "             dest=\"${src.dir}/java/ant-eclipse-1.0.bin.tar.bz2\" usetimestamp=\"false\" />"
            ],
            "changed_files": [
                "build.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2992": ""
            },
            "ghissue_refs": {
                "479": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "99c9bbb0ab1eef469e1662086532c58078b9909a"
                ],
                [
                    "no-tag",
                    "005b3fb8ddb3ef03183fd0539a40ceb86fe8f4ac"
                ]
            ],
            "tags": [
                "release-3.4.12",
                "release-3.4.12-rc0",
                "release-3.4.12-rc1",
                "release-3.4.13",
                "release-3.4.13-rc0",
                "release-3.4.13-rc1",
                "release-3.4.14",
                "release-3.4.14-rc0",
                "release-3.4.14-rc1",
                "release-3.4.14-rc2",
                "release-3.4.14-rc3",
                "release-3.4.14-rc4",
                "release-3.4.14-rc5"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2992",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 479",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "084e9aad7ec2e702a324f998f14a07f25a6687da",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1517873451,
            "hunks": 1,
            "message": "Updated the releases page for 3.4.11 to reflect ZOOKEEPER-2960 Change-Id: Ib72c3317df877eee5f5fe497b94fe0ff5846386d",
            "diff": [
                "diff --git a/content/releases.html b/content/releases.html",
                "index cb6fed3b5..d3af50ea7 100644",
                "--- a/content/releases.html",
                "+++ b/content/releases.html",
                "@@ -58,2 +58,4 @@",
                "+<p><strong>WARNING</strong>: <a href=\"https://issues.apache.org/jira/browse/ZOOKEEPER-2960\">ZOOKEEPER-2960</a> was recently identified as a regression in 3.4.11 affecting the specification of separate dataDir and dataLogDir configuration parameters (vs the default which is a single directory for both). It will be addressed in 3.4.12.</p>",
                "+",
                " <h3 id=\"17-april-2017-release-353-beta-available\">17 April, 2017: release 3.5.3-beta available</h3>"
            ],
            "changed_files": [
                "content/releases.html"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "ZOOKEEPER-2960": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: change",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: ZOOKEEPER-2960",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5e453dba5dfe9d81b711c0b77dc265c914cd092a",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1521580962,
            "hunks": 4,
            "message": "Preparing for release 3.4.12",
            "diff": [
                "diff --git a/build.xml b/build.xml",
                "index 7758ef6c9..ec667c166 100644",
                "--- a/build.xml",
                "+++ b/build.xml",
                "@@ -33,3 +33,3 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle\">",
                "-    <property name=\"version\" value=\"3.4.12-SNAPSHOT\" />",
                "+    <property name=\"version\" value=\"3.4.12\" />",
                "     <property name=\"final.name\" value=\"${name}-${version}\"/>",
                "diff --git a/docs/bookkeeperConfig.pdf b/docs/bookkeeperConfig.pdf",
                "index 781f2a618..c62f4933a 100644",
                "Binary files a/docs/bookkeeperConfig.pdf and b/docs/bookkeeperConfig.pdf differ",
                "diff --git a/docs/bookkeeperOverview.pdf b/docs/bookkeeperOverview.pdf",
                "index 92e310a43..25880ad63 100644",
                "Binary files a/docs/bookkeeperOverview.pdf and b/docs/bookkeeperOverview.pdf differ",
                "diff --git a/docs/bookkeeperProgrammer.pdf b/docs/bookkeeperProgrammer.pdf",
                "index 7797954e1..dbf3cb61a 100644",
                "Binary files a/docs/bookkeeperProgrammer.pdf and b/docs/bookkeeperProgrammer.pdf differ",
                "diff --git a/docs/bookkeeperStarted.pdf b/docs/bookkeeperStarted.pdf",
                "index 6527ed81f..483d9f74a 100644",
                "Binary files a/docs/bookkeeperStarted.pdf and b/docs/bookkeeperStarted.pdf differ",
                "diff --git a/docs/bookkeeperStream.pdf b/docs/bookkeeperStream.pdf",
                "index 90073669e..5b5ca786d 100644",
                "Binary files a/docs/bookkeeperStream.pdf and b/docs/bookkeeperStream.pdf differ",
                "diff --git a/docs/index.pdf b/docs/index.pdf",
                "index 1ebc55847..bd53a29c2 100644",
                "Binary files a/docs/index.pdf and b/docs/index.pdf differ",
                "diff --git a/docs/javaExample.pdf b/docs/javaExample.pdf",
                "index 1487d5b21..f34daa4e8 100644",
                "Binary files a/docs/javaExample.pdf and b/docs/javaExample.pdf differ",
                "diff --git a/docs/linkmap.pdf b/docs/linkmap.pdf",
                "index c4b9382f2..0f8bcad2e 100644",
                "Binary files a/docs/linkmap.pdf and b/docs/linkmap.pdf differ",
                "diff --git a/docs/recipes.pdf b/docs/recipes.pdf",
                "index 9665fe086..5aab9ad0e 100644",
                "Binary files a/docs/recipes.pdf and b/docs/recipes.pdf differ",
                "diff --git a/docs/releasenotes.html b/docs/releasenotes.html",
                "index f3740b950..a3b7d7a95 100644",
                "--- a/docs/releasenotes.html",
                "+++ b/docs/releasenotes.html",
                "@@ -204,3 +204,72 @@ document.write(\"Last Published: \" + document.lastModified);",
                " </div>",
                "+        Release Notes - ZooKeeper - Version 3.4.12",
                "+<h2>        Sub-task",
                "+</h2>",
                "+<ul>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2980'>ZOOKEEPER-2980</a>] -         Backport ZOOKEEPER-2939 Deal with maxbuffer as it relates to proposals",
                "+</li>",
                "+</ul>",
                "+",
                "+<h2>        Bug",
                "+</h2>",
                "+<ul>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2249'>ZOOKEEPER-2249</a>] -         CRC check failed when preAllocSize smaller than node data",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2690'>ZOOKEEPER-2690</a>] -         Update documentation source for ZOOKEEPER-2574",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2845'>ZOOKEEPER-2845</a>] -         Data inconsistency issue due to retain database in leader election",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2893'>ZOOKEEPER-2893</a>] -         very poor choice of logging if client fails to connect to server",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2923'>ZOOKEEPER-2923</a>] -         The comment of the variable matchSyncs in class CommitProcessor has a mistake.",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2924'>ZOOKEEPER-2924</a>] -         Flaky Test: org.apache.zookeeper.test.LoadFromLogTest.testRestoreWithTransactionErrors",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2931'>ZOOKEEPER-2931</a>] -         WriteLock recipe: incorrect znode ordering when the sessionId is part of the znode name",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2936'>ZOOKEEPER-2936</a>] -         Duplicate Keys in log4j.properties config files",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2944'>ZOOKEEPER-2944</a>] -         Specify correct overflow value",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2951'>ZOOKEEPER-2951</a>] -         zkServer.cmd does not start when JAVA_HOME ends with a \\",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2953'>ZOOKEEPER-2953</a>] -         Flaky Test: testNoLogBeforeLeaderEstablishment",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2960'>ZOOKEEPER-2960</a>] -         The dataDir and dataLogDir are used opposingly",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2961'>ZOOKEEPER-2961</a>] -         Fix testElectionFraud Flakyness",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2978'>ZOOKEEPER-2978</a>] -         fix potential null pointer exception when deleting node",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2992'>ZOOKEEPER-2992</a>] -         The eclipse build target fails due to protocol redirection: http-&gt;https",
                "+</li>",
                "+</ul>",
                "+",
                "+<h2>        Improvement",
                "+</h2>",
                "+<ul>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2950'>ZOOKEEPER-2950</a>] -         Add keys for the Zxid from the stat command to check_zookeeper.py",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2952'>ZOOKEEPER-2952</a>] -         Upgrade third party libraries to address vulnerabilities",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2962'>ZOOKEEPER-2962</a>] -         The function queueEmpty() in FastLeaderElection.Messenger is not used, should be removed.",
                "+</li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2967'>ZOOKEEPER-2967</a>] -         Add check to validate dataDir and dataLogDir parameters at startup",
                "+</li>",
                "+</ul>",
                "+",
                "+<h2>        Test",
                "+</h2>",
                "+<ul>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2922'>ZOOKEEPER-2922</a>] -         Flaky Test: org.apache.zookeeper.test.LoadFromLogTest",
                "+</li>",
                "+</ul>",
                "+",
                "+<h2>        Wish",
                "+</h2>",
                "+<ul>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2795'>ZOOKEEPER-2795</a>] -         Change log level for &quot;ZKShutdownHandler is not registered&quot; error message",
                "+</li>",
                "+</ul>",
                "         Release Notes - ZooKeeper - Version 3.4.11",
                "diff --git a/docs/zookeeperAdmin.pdf b/docs/zookeeperAdmin.pdf",
                "index 93c5993e0..0004649cd 100644",
                "Binary files a/docs/zookeeperAdmin.pdf and b/docs/zookeeperAdmin.pdf differ",
                "diff --git a/docs/zookeeperHierarchicalQuorums.pdf b/docs/zookeeperHierarchicalQuorums.pdf",
                "index b0f51f3ec..f86909f1a 100644",
                "Binary files a/docs/zookeeperHierarchicalQuorums.pdf and b/docs/zookeeperHierarchicalQuorums.pdf differ",
                "diff --git a/docs/zookeeperInternals.pdf b/docs/zookeeperInternals.pdf",
                "index 050fff648..8bcd192f7 100644",
                "Binary files a/docs/zookeeperInternals.pdf and b/docs/zookeeperInternals.pdf differ",
                "diff --git a/docs/zookeeperJMX.pdf b/docs/zookeeperJMX.pdf",
                "index 3172447f3..8b74b239e 100644",
                "Binary files a/docs/zookeeperJMX.pdf and b/docs/zookeeperJMX.pdf differ",
                "diff --git a/docs/zookeeperObservers.pdf b/docs/zookeeperObservers.pdf",
                "index ac95255ed..29ebbb029 100644",
                "Binary files a/docs/zookeeperObservers.pdf and b/docs/zookeeperObservers.pdf differ",
                "diff --git a/docs/zookeeperOver.pdf b/docs/zookeeperOver.pdf",
                "index 73686077a..8839eef64 100644",
                "Binary files a/docs/zookeeperOver.pdf and b/docs/zookeeperOver.pdf differ",
                "diff --git a/docs/zookeeperProgrammers.pdf b/docs/zookeeperProgrammers.pdf",
                "index f463e85d9..8448d3130 100644",
                "Binary files a/docs/zookeeperProgrammers.pdf and b/docs/zookeeperProgrammers.pdf differ",
                "diff --git a/docs/zookeeperQuotas.pdf b/docs/zookeeperQuotas.pdf",
                "index 02a84234e..6a95063ed 100644",
                "Binary files a/docs/zookeeperQuotas.pdf and b/docs/zookeeperQuotas.pdf differ",
                "diff --git a/docs/zookeeperStarted.pdf b/docs/zookeeperStarted.pdf",
                "index 2fa60c7c6..e6e15ccc4 100644",
                "Binary files a/docs/zookeeperStarted.pdf and b/docs/zookeeperStarted.pdf differ",
                "diff --git a/docs/zookeeperTutorial.pdf b/docs/zookeeperTutorial.pdf",
                "index 989dbf670..70df26395 100644",
                "Binary files a/docs/zookeeperTutorial.pdf and b/docs/zookeeperTutorial.pdf differ",
                "diff --git a/src/c/configure.ac b/src/c/configure.ac",
                "index bb03d6796..63c5f2b12 100644",
                "--- a/src/c/configure.ac",
                "+++ b/src/c/configure.ac",
                "@@ -5,3 +5,3 @@ AC_PREREQ(2.59)",
                "-AC_INIT([zookeeper C client],3.4.11,[user@zookeeper.apache.org],[zookeeper])",
                "+AC_INIT([zookeeper C client],3.4.12,[user@zookeeper.apache.org],[zookeeper])",
                " AC_CONFIG_SRCDIR([src/zookeeper.c])",
                "diff --git a/src/c/include/zookeeper_version.h b/src/c/include/zookeeper_version.h",
                "index 0d11abe16..518f7e6cd 100644",
                "--- a/src/c/include/zookeeper_version.h",
                "+++ b/src/c/include/zookeeper_version.h",
                "@@ -26,3 +26,3 @@ extern \"C\" {",
                " #define ZOO_MINOR_VERSION 4",
                "-#define ZOO_PATCH_VERSION 11",
                "+#define ZOO_PATCH_VERSION 12"
            ],
            "changed_files": [
                "build.xml",
                "docs/bookkeeperConfig.pdf",
                "docs/bookkeeperOverview.pdf",
                "docs/bookkeeperProgrammer.pdf",
                "docs/bookkeeperStarted.pdf",
                "docs/bookkeeperStream.pdf",
                "docs/index.pdf",
                "docs/javaExample.pdf",
                "docs/linkmap.pdf",
                "docs/recipes.pdf",
                "docs/releasenotes.html",
                "docs/zookeeperAdmin.pdf",
                "docs/zookeeperHierarchicalQuorums.pdf",
                "docs/zookeeperInternals.pdf",
                "docs/zookeeperJMX.pdf",
                "docs/zookeeperObservers.pdf",
                "docs/zookeeperOver.pdf",
                "docs/zookeeperProgrammers.pdf",
                "docs/zookeeperQuotas.pdf",
                "docs/zookeeperStarted.pdf",
                "docs/zookeeperTutorial.pdf",
                "src/c/configure.ac",
                "src/c/include/zookeeper_version.h"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "release-3.4.12",
                "release-3.4.12-rc0",
                "release-3.4.12-rc1",
                "release-3.4.13",
                "release-3.4.13-rc0",
                "release-3.4.13-rc1",
                "release-3.4.14",
                "release-3.4.14-rc0",
                "release-3.4.14-rc1",
                "release-3.4.14-rc2",
                "release-3.4.14-rc3",
                "release-3.4.14-rc4",
                "release-3.4.14-rc5"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server, quorum",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "e5259e437540f349646870ea94dc2658c4e44b3b",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1522117146,
            "hunks": 4,
            "message": "Preparing for release 3.4.12 RC 1 Fix incorrect release notes",
            "diff": [
                "diff --git a/docs/releasenotes.html b/docs/releasenotes.html",
                "index a3b7d7a95..0703da11e 100644",
                "--- a/docs/releasenotes.html",
                "+++ b/docs/releasenotes.html",
                "@@ -206,9 +206,2 @@ document.write(\"Last Published: \" + document.lastModified);",
                "-<h2>        Sub-task",
                "-</h2>",
                "-<ul>",
                "-<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2980'>ZOOKEEPER-2980</a>] -         Backport ZOOKEEPER-2939 Deal with maxbuffer as it relates to proposals",
                "-</li>",
                "-</ul>",
                "-",
                " <h2>        Bug",
                "@@ -220,2 +213,4 @@ document.write(\"Last Published: \" + document.lastModified);",
                " </li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2806'>ZOOKEEPER-2806</a>] -         Flaky test: org.apache.zookeeper.server.quorum.FLEBackwardElectionRoundTest.testBackwardElectionRound",
                "+</li>",
                " <li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2845'>ZOOKEEPER-2845</a>] -         Data inconsistency issue due to retain database in leader election",
                "@@ -234,2 +229,4 @@ document.write(\"Last Published: \" + document.lastModified);",
                " </li>",
                "+<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2948'>ZOOKEEPER-2948</a>] -         Failing c unit tests on apache jenkins",
                "+</li>",
                " <li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2951'>ZOOKEEPER-2951</a>] -         zkServer.cmd does not start when JAVA_HOME ends with a \\",
                "@@ -261,9 +258,2 @@ document.write(\"Last Published: \" + document.lastModified);",
                "-<h2>        Test",
                "-</h2>",
                "-<ul>",
                "-<li>[<a href='https://issues.apache.org/jira/browse/ZOOKEEPER-2922'>ZOOKEEPER-2922</a>] -         Flaky Test: org.apache.zookeeper.test.LoadFromLogTest",
                "-</li>",
                "-</ul>",
                "-",
                " <h2>        Wish"
            ],
            "changed_files": [
                "docs/releasenotes.html"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "release-3.4.12",
                "release-3.4.12-rc1",
                "release-3.4.13",
                "release-3.4.13-rc0",
                "release-3.4.13-rc1",
                "release-3.4.14",
                "release-3.4.14-rc0",
                "release-3.4.14-rc1",
                "release-3.4.14-rc2",
                "release-3.4.14-rc3",
                "release-3.4.14-rc4",
                "release-3.4.14-rc5"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "eacb4e4f34189178bb83df614be928bf27d410d1",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1524626189,
            "hunks": 1,
            "message": "Prepare for the next release: update the version to 3.4.13-SNAPSHOT",
            "diff": [
                "diff --git a/build.xml b/build.xml",
                "index ec667c166..e441adb18 100644",
                "--- a/build.xml",
                "+++ b/build.xml",
                "@@ -33,3 +33,3 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle\">",
                "-    <property name=\"version\" value=\"3.4.12\" />",
                "+    <property name=\"version\" value=\"3.4.13-SNAPSHOT\" />",
                "     <property name=\"final.name\" value=\"${name}-${version}\"/>"
            ],
            "changed_files": [
                "build.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "release-3.4.13",
                "release-3.4.13-rc0",
                "release-3.4.13-rc1",
                "release-3.4.14",
                "release-3.4.14-rc0",
                "release-3.4.14-rc1",
                "release-3.4.14-rc2",
                "release-3.4.14-rc3",
                "release-3.4.14-rc4",
                "release-3.4.14-rc5"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "dfe352477b102ddc29230e38d5de243b664d1c15",
            "repository": "https://github.com/apache/zookeeper",
            "timestamp": 1517271486,
            "hunks": 1,
            "message": "Add Abraham Fine as committer to credits.html",
            "diff": [
                "diff --git a/content/credits.html b/content/credits.html",
                "index 77307b5fb..cf24b28b6 100644",
                "--- a/content/credits.html",
                "+++ b/content/credits.html",
                "@@ -247,2 +247,8 @@",
                "     </tr>",
                "+    <tr>",
                "+      <td>afine</td>",
                "+      <td>Abraham Fine</td>",
                "+      <td>Cloudera Inc.</td>",
                "+      <td>-8</td>",
                "+    </tr>",
                "   </tbody>"
            ],
            "changed_files": [
                "content/credits.html"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": []
        }
    ]
}
